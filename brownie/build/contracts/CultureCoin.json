{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "_meme",
          "type": "string"
        }
      ],
      "name": "Debug",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "DebugAddress",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "defaultValue",
          "type": "uint256"
        }
      ],
      "name": "DebugUINT",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "level",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "goof",
          "type": "string"
        }
      ],
      "name": "HWarn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "meme",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newCoin",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "totalSupply",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "registered",
          "type": "bool"
        }
      ],
      "name": "IRegister",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "_meme",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "MCMM",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "crypt",
          "type": "string"
        }
      ],
      "name": "Meme",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "Seed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "Staked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "_meme",
          "type": "string"
        }
      ],
      "name": "WelcomeMC",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "B",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "P",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "addonPay",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "brick",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "bulkCCOut",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "bulkXOut",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burnFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cCA",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ccXChildRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "clone",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cloneAccount",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "cloneMoney",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_clone",
          "type": "address"
        }
      ],
      "name": "clonesearch",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "close",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "closeAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "closed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_a",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_b",
          "type": "string"
        }
      ],
      "name": "compareStrings",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_a",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_b",
          "type": "string"
        }
      ],
      "name": "concatenate",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "debug",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "dexCCIn",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "dexCCInFrom",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "dexCCRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "dexXMTSPIn",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "dexXMTSPRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_meme",
          "type": "string"
        }
      ],
      "name": "flagMemeCoin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_addon",
          "type": "address"
        }
      ],
      "name": "getAddon",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_meme",
          "type": "string"
        }
      ],
      "name": "getCoin",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getDexCCRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getDexXMTSPRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getRewardPerHour",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getSeed",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getXAllowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_staker",
          "type": "address"
        }
      ],
      "name": "hasStake",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "total_amount",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "user",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "since",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "claimable",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Stakeable.Stake[]",
              "name": "stakes",
              "type": "tuple[]"
            }
          ],
          "internalType": "struct Stakeable.StakingSummary",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "initialSupply",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_cCA",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxCCOut",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxXOut",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pay",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_hodler",
          "type": "address"
        }
      ],
      "name": "register",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rewardPerHour",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "sane",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "sane2",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_meme",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_totalSupply",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_MotherAddress",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_register",
          "type": "bool"
        }
      ],
      "name": "seed",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_addon",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "onOff",
          "type": "bool"
        }
      ],
      "name": "setAddon",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_dexCCRate",
          "type": "uint256"
        }
      ],
      "name": "setDexCCRate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_dexXMTSPRate",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_dexCCRate",
          "type": "uint256"
        }
      ],
      "name": "setDexRates",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_dexXMTSPRate",
          "type": "uint256"
        }
      ],
      "name": "setDexXMTSPRate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_maxXOut",
          "type": "uint256"
        }
      ],
      "name": "setMaxXOut",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_rewardPerHour",
          "type": "uint256"
        }
      ],
      "name": "setRewardPerHour",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "stake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unbrick",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "wellnessCheckPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "stake_index",
          "type": "uint256"
        }
      ],
      "name": "withdrawStake",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "1": "contracts/CultureCoin.sol",
    "12": "contracts/send_receive.sol",
    "13": "openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
    "14": "openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol",
    "15": "openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol",
    "16": "openzeppelin-contracts-upgradeable/contracts/token/ERC20/IERC20Upgradeable.sol",
    "17": "openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/ERC20BurnableUpgradeable.sol",
    "18": "openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/IERC20MetadataUpgradeable.sol",
    "2": "contracts/CultureCoinWrapper.sol",
    "20": "openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol",
    "5": "contracts/Stakeable.sol"
  },
  "ast": {
    "absolutePath": "contracts/CultureCoin.sol",
    "exportedSymbols": {
      "AddressUpgradeable": [
        8625
      ],
      "Context": [
        8909
      ],
      "ContextUpgradeable": [
        8770
      ],
      "CultureCoin": [
        3437
      ],
      "CultureCoinWrapper": [
        4348
      ],
      "ERC20": [
        8321
      ],
      "ERC20Burnable": [
        8382
      ],
      "ERC20BurnableUpgradeable": [
        5497
      ],
      "ERC20Upgradeable": [
        5433
      ],
      "IERC20": [
        3763
      ],
      "IERC20Metadata": [
        9150
      ],
      "IERC20MetadataUpgradeable": [
        8728
      ],
      "IERC20Upgradeable": [
        8703
      ],
      "Initializable": [
        4763
      ],
      "Receiver": [
        3444
      ],
      "ReentrancyGuard": [
        3484
      ],
      "ReentrancyGuardUpgradeable": [
        4822
      ],
      "Stakeable": [
        4689
      ]
    },
    "id": 3438,
    "license": "UNLICENSED",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2246,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "1771:23:1"
      },
      {
        "absolutePath": "openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol",
        "file": "../openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol",
        "id": 2247,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3438,
        "sourceUnit": 5434,
        "src": "1947:90:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/ERC20BurnableUpgradeable.sol",
        "file": "../openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/ERC20BurnableUpgradeable.sol",
        "id": 2248,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3438,
        "sourceUnit": 5498,
        "src": "2038:109:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol",
        "file": "../openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol",
        "id": 2249,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3438,
        "sourceUnit": 4823,
        "src": "2148:97:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
        "file": "../openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
        "id": 2250,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3438,
        "sourceUnit": 4764,
        "src": "2246:87:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/CultureCoinWrapper.sol",
        "file": "./CultureCoinWrapper.sol",
        "id": 2251,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3438,
        "sourceUnit": 4349,
        "src": "2334:34:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/Stakeable.sol",
        "file": "./Stakeable.sol",
        "id": 2252,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3438,
        "sourceUnit": 4690,
        "src": "2399:25:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/send_receive.sol",
        "file": "./send_receive.sol",
        "id": 2253,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3438,
        "sourceUnit": 3445,
        "src": "2425:28:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 2254,
              "name": "Initializable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4763,
              "src": "2534:13:1"
            },
            "id": 2255,
            "nodeType": "InheritanceSpecifier",
            "src": "2534:13:1"
          },
          {
            "baseName": {
              "id": 2256,
              "name": "ERC20Upgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 5433,
              "src": "2549:16:1"
            },
            "id": 2257,
            "nodeType": "InheritanceSpecifier",
            "src": "2549:16:1"
          },
          {
            "baseName": {
              "id": 2258,
              "name": "ERC20BurnableUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 5497,
              "src": "2567:24:1"
            },
            "id": 2259,
            "nodeType": "InheritanceSpecifier",
            "src": "2567:24:1"
          },
          {
            "baseName": {
              "id": 2260,
              "name": "Stakeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4689,
              "src": "2593:9:1"
            },
            "id": 2261,
            "nodeType": "InheritanceSpecifier",
            "src": "2593:9:1"
          },
          {
            "baseName": {
              "id": 2262,
              "name": "ReentrancyGuardUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4822,
              "src": "2604:26:1"
            },
            "id": 2263,
            "nodeType": "InheritanceSpecifier",
            "src": "2604:26:1"
          },
          {
            "baseName": {
              "id": 2264,
              "name": "Receiver",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3444,
              "src": "2632:8:1"
            },
            "id": 2265,
            "nodeType": "InheritanceSpecifier",
            "src": "2632:8:1"
          }
        ],
        "canonicalName": "CultureCoin",
        "contractDependencies": [
          4348
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 3437,
        "linearizedBaseContracts": [
          3437,
          3444,
          4822,
          4689,
          5497,
          5433,
          8728,
          8703,
          8770,
          4763
        ],
        "name": "CultureCoin",
        "nameLocation": "2519:11:1",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 2358,
              "nodeType": "Block",
              "src": "2812:1858:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2280,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2275,
                          "name": "_cCA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2269,
                          "src": "2830:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 2278,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2846:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2277,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2838:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2276,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2838:7:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2279,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2838:10:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2830:18:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5a65726f2061646472657373",
                        "id": 2281,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2850:14:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_535d7636857fb1ab3a4f159f2a66b9583ce224510b4368fa2453e15bee0bc833",
                          "typeString": "literal_string \"Zero address\""
                        },
                        "value": "Zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_535d7636857fb1ab3a4f159f2a66b9583ce224510b4368fa2453e15bee0bc833",
                          "typeString": "literal_string \"Zero address\""
                        }
                      ],
                      "id": 2274,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2822:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2282,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2822:43:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2283,
                  "nodeType": "ExpressionStatement",
                  "src": "2822:43:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "43756c74757265436f696e",
                        "id": 2285,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2888:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4fc152865e198242177eff03d0b3c093fbe67a055ed291feb52123ea0077fb96",
                          "typeString": "literal_string \"CultureCoin\""
                        },
                        "value": "CultureCoin"
                      },
                      {
                        "hexValue": "4343",
                        "id": 2286,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2903:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_56d96069d0c85d21b8d789da2cd39ba97ceec51143707e32ecb8343eb4258a9c",
                          "typeString": "literal_string \"CC\""
                        },
                        "value": "CC"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_4fc152865e198242177eff03d0b3c093fbe67a055ed291feb52123ea0077fb96",
                          "typeString": "literal_string \"CultureCoin\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_56d96069d0c85d21b8d789da2cd39ba97ceec51143707e32ecb8343eb4258a9c",
                          "typeString": "literal_string \"CC\""
                        }
                      ],
                      "id": 2284,
                      "name": "__ERC20_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4869,
                      "src": "2875:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory)"
                      }
                    },
                    "id": 2287,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2875:33:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2288,
                  "nodeType": "ExpressionStatement",
                  "src": "2875:33:1"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 2289,
                      "name": "__ERC20Burnable_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5451,
                      "src": "2918:20:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 2290,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2918:22:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2291,
                  "nodeType": "ExpressionStatement",
                  "src": "2918:22:1"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 2292,
                        "name": "stakeholders",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4379,
                        "src": "2950:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Stakeholder_$4367_storage_$dyn_storage",
                          "typeString": "struct Stakeable.Stakeholder storage ref[] storage ref"
                        }
                      },
                      "id": 2294,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "2950:17:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Stakeholder_$4367_storage_$dyn_storage_ptr_$returns$_t_struct$_Stakeholder_$4367_storage_$bound_to$_t_array$_t_struct$_Stakeholder_$4367_storage_$dyn_storage_ptr_$",
                        "typeString": "function (struct Stakeable.Stakeholder storage ref[] storage pointer) returns (struct Stakeable.Stakeholder storage ref)"
                      }
                    },
                    "id": 2295,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2950:19:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Stakeholder_$4367_storage",
                      "typeString": "struct Stakeable.Stakeholder storage ref"
                    }
                  },
                  "id": 2296,
                  "nodeType": "ExpressionStatement",
                  "src": "2950:19:1"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 2297,
                      "name": "__ReentrancyGuard_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4786,
                      "src": "3039:22:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 2298,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3039:24:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2299,
                  "nodeType": "ExpressionStatement",
                  "src": "3039:24:1"
                },
                {
                  "assignments": [
                    2301
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2301,
                      "mutability": "mutable",
                      "name": "_dexAmount",
                      "nameLocation": "3082:10:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 2358,
                      "src": "3074:18:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2300,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3074:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2303,
                  "initialValue": {
                    "hexValue": "3131333435343031352e34",
                    "id": 2302,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3095:17:1",
                    "subdenomination": "ether",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_113454015400000000000000000_by_1",
                      "typeString": "int_const 113454015400000000000000000"
                    },
                    "value": "113454015.4"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3074:38:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2305,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3151:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2306,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3151:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2309,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2307,
                          "name": "initialSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2267,
                          "src": "3163:13:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "id": 2308,
                          "name": "_dexAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2301,
                          "src": "3179:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3163:26:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2304,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5245,
                      "src": "3145:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 2310,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3145:45:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2311,
                  "nodeType": "ExpressionStatement",
                  "src": "3145:45:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2315,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "3214:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CultureCoin_$3437",
                              "typeString": "contract CultureCoin"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_CultureCoin_$3437",
                              "typeString": "contract CultureCoin"
                            }
                          ],
                          "id": 2314,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3206:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2313,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3206:7:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2316,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3206:13:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2317,
                        "name": "_dexAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2301,
                        "src": "3221:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2312,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5245,
                      "src": "3200:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 2318,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3200:32:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2319,
                  "nodeType": "ExpressionStatement",
                  "src": "3200:32:1"
                },
                {
                  "expression": {
                    "id": 2322,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2320,
                      "name": "closeAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3072,
                      "src": "3243:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "313135373932303839323337333136313935343233353730393835303038363837393037383533323639393834363635363430353634303339343537353834303037393133313239363339393335",
                      "id": 2321,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3257:78:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639935_by_1",
                        "typeString": "int_const 1157...(70 digits omitted)...9935"
                      },
                      "value": "115792089237316195423570985008687907853269984665640564039457584007913129639935"
                    },
                    "src": "3243:92:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2323,
                  "nodeType": "ExpressionStatement",
                  "src": "3243:92:1"
                },
                {
                  "expression": {
                    "id": 2326,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2324,
                      "name": "cCA",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2514,
                      "src": "3401:3:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2325,
                      "name": "_cCA",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2269,
                      "src": "3407:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3401:10:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2327,
                  "nodeType": "ExpressionStatement",
                  "src": "3401:10:1"
                },
                {
                  "expression": {
                    "id": 2330,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2328,
                      "name": "meme",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2508,
                      "src": "3566:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "3a",
                      "id": 2329,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3573:3:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_96d280011b274d9410ea6c6fc28e2bb076b01d2fac329c49c4b29a719ec4650c",
                        "typeString": "literal_string \":\""
                      },
                      "value": ":"
                    },
                    "src": "3566:10:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 2331,
                  "nodeType": "ExpressionStatement",
                  "src": "3566:10:1"
                },
                {
                  "expression": {
                    "id": 2334,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2332,
                      "name": "UMMSCWSSS",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2996,
                      "src": "3733:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 2333,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3745:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3733:16:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2335,
                  "nodeType": "ExpressionStatement",
                  "src": "3733:16:1"
                },
                {
                  "expression": {
                    "id": 2338,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2336,
                      "name": "dexXMTSPRate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2556,
                      "src": "4125:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "302e3234393939",
                      "id": 2337,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4140:13:1",
                      "subdenomination": "ether",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_249990000000000000_by_1",
                        "typeString": "int_const 249990000000000000"
                      },
                      "value": "0.24999"
                    },
                    "src": "4125:28:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2339,
                  "nodeType": "ExpressionStatement",
                  "src": "4125:28:1"
                },
                {
                  "expression": {
                    "id": 2342,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2340,
                      "name": "dexCCRate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2558,
                      "src": "4187:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "332e3936303031",
                      "id": 2341,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4199:13:1",
                      "subdenomination": "ether",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_3960010000000000000_by_1",
                        "typeString": "int_const 3960010000000000000"
                      },
                      "value": "3.96001"
                    },
                    "src": "4187:25:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2343,
                  "nodeType": "ExpressionStatement",
                  "src": "4187:25:1"
                },
                {
                  "expression": {
                    "id": 2348,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2344,
                      "name": "maxXOut",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2560,
                      "src": "4249:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2347,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 2345,
                        "name": "_dexAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2301,
                        "src": "4259:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "hexValue": "34",
                        "id": 2346,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4272:1:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_4_by_1",
                          "typeString": "int_const 4"
                        },
                        "value": "4"
                      },
                      "src": "4259:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4249:24:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2349,
                  "nodeType": "ExpressionStatement",
                  "src": "4249:24:1"
                },
                {
                  "expression": {
                    "id": 2352,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2350,
                      "name": "maxCCOut",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2562,
                      "src": "4414:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2351,
                      "name": "_dexAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2301,
                      "src": "4425:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4414:21:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2353,
                  "nodeType": "ExpressionStatement",
                  "src": "4414:21:1"
                },
                {
                  "expression": {
                    "id": 2356,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2354,
                      "name": "rewardPerHour",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4398,
                      "src": "4573:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "31303030",
                      "id": 2355,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4589:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000_by_1",
                        "typeString": "int_const 1000"
                      },
                      "value": "1000"
                    },
                    "src": "4573:20:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2357,
                  "nodeType": "ExpressionStatement",
                  "src": "4573:20:1"
                }
              ]
            },
            "functionSelector": "da35a26f",
            "id": 2359,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2272,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2271,
                  "name": "initializer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4737,
                  "src": "2800:11:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "2800:11:1"
              }
            ],
            "name": "initialize",
            "nameLocation": "2742:10:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2270,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2267,
                  "mutability": "mutable",
                  "name": "initialSupply",
                  "nameLocation": "2762:13:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2359,
                  "src": "2754:21:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2266,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2754:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2269,
                  "mutability": "mutable",
                  "name": "_cCA",
                  "nameLocation": "2785:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2359,
                  "src": "2777:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2268,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2777:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2753:37:1"
            },
            "returnParameters": {
              "id": 2273,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2812:0:1"
            },
            "scope": 3437,
            "src": "2733:1937:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2376,
              "nodeType": "Block",
              "src": "4901:97:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2368,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 2365,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "4919:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2366,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4919:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 2367,
                          "name": "cCA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2514,
                          "src": "4933:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4919:17:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "536f7272792c206e6f2e",
                        "id": 2369,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4938:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d6e4bd679c079eccb515cb175041efb01244d7683a99bea10e7f968c89e59622",
                          "typeString": "literal_string \"Sorry, no.\""
                        },
                        "value": "Sorry, no."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d6e4bd679c079eccb515cb175041efb01244d7683a99bea10e7f968c89e59622",
                          "typeString": "literal_string \"Sorry, no.\""
                        }
                      ],
                      "id": 2364,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4911:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2370,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4911:40:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2371,
                  "nodeType": "ExpressionStatement",
                  "src": "4911:40:1"
                },
                {
                  "expression": {
                    "id": 2374,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2372,
                      "name": "rewardPerHour",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4398,
                      "src": "4961:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2373,
                      "name": "_rewardPerHour",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2361,
                      "src": "4977:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4961:30:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2375,
                  "nodeType": "ExpressionStatement",
                  "src": "4961:30:1"
                }
              ]
            },
            "functionSelector": "8761dc5f",
            "id": 2377,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setRewardPerHour",
            "nameLocation": "4851:16:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2362,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2361,
                  "mutability": "mutable",
                  "name": "_rewardPerHour",
                  "nameLocation": "4876:14:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2377,
                  "src": "4868:22:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2360,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4868:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4867:24:1"
            },
            "returnParameters": {
              "id": 2363,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4901:0:1"
            },
            "scope": 3437,
            "src": "4842:156:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2384,
              "nodeType": "Block",
              "src": "5062:37:1",
              "statements": [
                {
                  "expression": {
                    "id": 2382,
                    "name": "rewardPerHour",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4398,
                    "src": "5079:13:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2381,
                  "id": 2383,
                  "nodeType": "Return",
                  "src": "5072:20:1"
                }
              ]
            },
            "functionSelector": "e2c50b4b",
            "id": 2385,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getRewardPerHour",
            "nameLocation": "5012:16:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2378,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5028:2:1"
            },
            "returnParameters": {
              "id": 2381,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2380,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2385,
                  "src": "5053:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2379,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5053:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5052:9:1"
            },
            "scope": 3437,
            "src": "5003:96:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2423,
              "nodeType": "Block",
              "src": "5332:404:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2392,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "5350:6:1",
                        "subExpression": {
                          "id": 2391,
                          "name": "brick",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2988,
                          "src": "5351:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "536f7272792e20576520617265206120627269636b2e",
                        "id": 2393,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5358:24:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d8f00eb3122a2902b98439d19665cc1662ec01b62b66e4872e30c88c465732b3",
                          "typeString": "literal_string \"Sorry. We are a brick.\""
                        },
                        "value": "Sorry. We are a brick."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d8f00eb3122a2902b98439d19665cc1662ec01b62b66e4872e30c88c465732b3",
                          "typeString": "literal_string \"Sorry. We are a brick.\""
                        }
                      ],
                      "id": 2390,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5342:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2394,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5342:41:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2395,
                  "nodeType": "ExpressionStatement",
                  "src": "5342:41:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2398,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "5401:7:1",
                        "subExpression": {
                          "id": 2397,
                          "name": "closed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2990,
                          "src": "5402:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5468652065786368616e676520697320636c6f7365642e20506c656173652074727920616761696e207768656e20776520617265206f70656e2e",
                        "id": 2399,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5410:60:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_577af7b5b570fa34235acc2948f04d74c8ef2b64a6376acf222ec72ade7d76e3",
                          "typeString": "literal_string \"The exchange is closed. Please try again when we are open.\""
                        },
                        "value": "The exchange is closed. Please try again when we are open."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_577af7b5b570fa34235acc2948f04d74c8ef2b64a6376acf222ec72ade7d76e3",
                          "typeString": "literal_string \"The exchange is closed. Please try again when we are open.\""
                        }
                      ],
                      "id": 2396,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5393:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2400,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5393:78:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2401,
                  "nodeType": "ExpressionStatement",
                  "src": "5393:78:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2409,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2403,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2387,
                          "src": "5544:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 2406,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "5569:3:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2407,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "5569:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 2404,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "5554:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_CultureCoin_$3437",
                                "typeString": "contract CultureCoin"
                              }
                            },
                            "id": 2405,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4941,
                            "src": "5554:14:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 2408,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5554:26:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5544:36:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43616e6e6f74207374616b65206d6f7265207468616e20796f75206f776e",
                        "id": 2410,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5582:32:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_50f2234245e9222ac3a5d944c70a35509b8b5a6bb562486684438cb0c11a1288",
                          "typeString": "literal_string \"Cannot stake more than you own\""
                        },
                        "value": "Cannot stake more than you own"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_50f2234245e9222ac3a5d944c70a35509b8b5a6bb562486684438cb0c11a1288",
                          "typeString": "literal_string \"Cannot stake more than you own\""
                        }
                      ],
                      "id": 2402,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5536:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2411,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5536:79:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2412,
                  "nodeType": "ExpressionStatement",
                  "src": "5536:79:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2414,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2387,
                        "src": "5633:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2413,
                      "name": "_stake",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4494,
                      "src": "5626:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 2415,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5626:15:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2416,
                  "nodeType": "ExpressionStatement",
                  "src": "5626:15:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2418,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5709:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2419,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5709:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2420,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2387,
                        "src": "5721:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2417,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5317,
                      "src": "5703:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 2421,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5703:26:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2422,
                  "nodeType": "ExpressionStatement",
                  "src": "5703:26:1"
                }
              ]
            },
            "functionSelector": "a694fc3a",
            "id": 2424,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "stake",
            "nameLocation": "5300:5:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2388,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2387,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "5314:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2424,
                  "src": "5306:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2386,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5306:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5305:17:1"
            },
            "returnParameters": {
              "id": 2389,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5332:0:1"
            },
            "scope": 3437,
            "src": "5291:445:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2475,
              "nodeType": "Block",
              "src": "6096:497:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2438,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "6114:6:1",
                        "subExpression": {
                          "id": 2437,
                          "name": "brick",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2988,
                          "src": "6115:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "536f7272792e20576520617265206120627269636b2e",
                        "id": 2439,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6122:24:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d8f00eb3122a2902b98439d19665cc1662ec01b62b66e4872e30c88c465732b3",
                          "typeString": "literal_string \"Sorry. We are a brick.\""
                        },
                        "value": "Sorry. We are a brick."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d8f00eb3122a2902b98439d19665cc1662ec01b62b66e4872e30c88c465732b3",
                          "typeString": "literal_string \"Sorry. We are a brick.\""
                        }
                      ],
                      "id": 2436,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6106:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2440,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6106:41:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2441,
                  "nodeType": "ExpressionStatement",
                  "src": "6106:41:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2444,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "6165:7:1",
                        "subExpression": {
                          "id": 2443,
                          "name": "closed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2990,
                          "src": "6166:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5468652065786368616e676520697320636c6f7365642e20506c656173652074727920616761696e207768656e20776520617265206f70656e2e",
                        "id": 2445,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6174:60:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_577af7b5b570fa34235acc2948f04d74c8ef2b64a6376acf222ec72ade7d76e3",
                          "typeString": "literal_string \"The exchange is closed. Please try again when we are open.\""
                        },
                        "value": "The exchange is closed. Please try again when we are open."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_577af7b5b570fa34235acc2948f04d74c8ef2b64a6376acf222ec72ade7d76e3",
                          "typeString": "literal_string \"The exchange is closed. Please try again when we are open.\""
                        }
                      ],
                      "id": 2442,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6157:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2446,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6157:78:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2447,
                  "nodeType": "ExpressionStatement",
                  "src": "6157:78:1"
                },
                {
                  "assignments": [
                    2449
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2449,
                      "mutability": "mutable",
                      "name": "amount_to_mint",
                      "nameLocation": "6253:14:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 2475,
                      "src": "6245:22:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2448,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6245:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2454,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 2451,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2427,
                        "src": "6285:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2452,
                        "name": "stake_index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2429,
                        "src": "6293:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2450,
                      "name": "_withdrawStake",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4611,
                      "src": "6270:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256) returns (uint256)"
                      }
                    },
                    "id": 2453,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6270:35:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6245:60:1"
                },
                {
                  "expression": {
                    "id": 2461,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2455,
                      "name": "amount_to_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2449,
                      "src": "6316:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2460,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2458,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2456,
                          "name": "amount_to_mint",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2449,
                          "src": "6333:14:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "hexValue": "2e3939",
                          "id": 2457,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6350:9:1",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_990000000000000000_by_1",
                            "typeString": "int_const 990000000000000000"
                          },
                          "value": ".99"
                        },
                        "src": "6333:26:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "/",
                      "rightExpression": {
                        "hexValue": "31",
                        "id": 2459,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6362:7:1",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      "src": "6333:36:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6316:53:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2462,
                  "nodeType": "ExpressionStatement",
                  "src": "6316:53:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2466,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "6521:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CultureCoin_$3437",
                              "typeString": "contract CultureCoin"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_CultureCoin_$3437",
                              "typeString": "contract CultureCoin"
                            }
                          ],
                          "id": 2465,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6513:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2464,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6513:7:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2467,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6513:13:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 2468,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "6528:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2469,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6528:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2470,
                        "name": "amount_to_mint",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2449,
                        "src": "6540:14:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2463,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5189,
                      "src": "6503:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2471,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6503:52:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2472,
                  "nodeType": "ExpressionStatement",
                  "src": "6503:52:1"
                },
                {
                  "expression": {
                    "id": 2473,
                    "name": "amount_to_mint",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2449,
                    "src": "6572:14:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2435,
                  "id": 2474,
                  "nodeType": "Return",
                  "src": "6565:21:1"
                }
              ]
            },
            "documentation": {
              "id": 2425,
              "nodeType": "StructuredDocumentation",
              "src": "5742:250:1",
              "text": " @notice withdrawStake is used to withdraw stakes from the account holder\n  This also now generates a liquidity concern and has to be monitored from the bridge. // This is why the 5% insurance. // See GBCC. // JRR Strikes Again."
            },
            "functionSelector": "f1fdf469",
            "id": 2476,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2432,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2431,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4816,
                  "src": "6066:12:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "6066:12:1"
              }
            ],
            "name": "withdrawStake",
            "nameLocation": "6006:13:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2430,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2427,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "6028:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2476,
                  "src": "6020:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2426,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6020:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2429,
                  "mutability": "mutable",
                  "name": "stake_index",
                  "nameLocation": "6044:11:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2476,
                  "src": "6036:19:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2428,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6036:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6019:37:1"
            },
            "returnParameters": {
              "id": 2435,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2434,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2476,
                  "src": "6087:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2433,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6087:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6086:9:1"
            },
            "scope": 3437,
            "src": "5997:596:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "constant": false,
            "functionSelector": "e51c8922",
            "id": 2478,
            "mutability": "mutable",
            "name": "ccXChildRate",
            "nameLocation": "7177:12:1",
            "nodeType": "VariableDeclaration",
            "scope": 3437,
            "src": "7165:24:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2477,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "7165:4:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 2480,
            "mutability": "mutable",
            "name": "b",
            "nameLocation": "7892:1:1",
            "nodeType": "VariableDeclaration",
            "scope": 3437,
            "src": "7876:17:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2479,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "7876:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 2487,
              "nodeType": "Block",
              "src": "7990:25:1",
              "statements": [
                {
                  "expression": {
                    "id": 2485,
                    "name": "b",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2480,
                    "src": "8007:1:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2484,
                  "id": 2486,
                  "nodeType": "Return",
                  "src": "8000:8:1"
                }
              ]
            },
            "functionSelector": "32e7c5bf",
            "id": 2488,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "B",
            "nameLocation": "7955:1:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2481,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7956:2:1"
            },
            "returnParameters": {
              "id": 2484,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2483,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2488,
                  "src": "7981:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2482,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7981:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7980:9:1"
            },
            "scope": 3437,
            "src": "7946:69:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "anonymous": false,
            "id": 2494,
            "name": "MCMM",
            "nameLocation": "8164:4:1",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2493,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2490,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_meme",
                  "nameLocation": "8176:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2494,
                  "src": "8169:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2489,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "8169:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2492,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "8191:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2494,
                  "src": "8183:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2491,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8183:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8168:30:1"
            },
            "src": "8158:41:1"
          },
          {
            "anonymous": false,
            "id": 2498,
            "name": "Meme",
            "nameLocation": "8301:4:1",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2497,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2496,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "crypt",
                  "nameLocation": "8313:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2498,
                  "src": "8306:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2495,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "8306:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8305:14:1"
            },
            "src": "8295:25:1"
          },
          {
            "constant": false,
            "id": 2500,
            "mutability": "mutable",
            "name": "p",
            "nameLocation": "10796:1:1",
            "nodeType": "VariableDeclaration",
            "scope": 3437,
            "src": "10780:17:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 2499,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "10780:7:1",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 2502,
            "mutability": "mutable",
            "name": "m",
            "nameLocation": "10932:1:1",
            "nodeType": "VariableDeclaration",
            "scope": 3437,
            "src": "10917:16:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 2501,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "10917:6:1",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 2504,
            "mutability": "mutable",
            "name": "me",
            "nameLocation": "10992:2:1",
            "nodeType": "VariableDeclaration",
            "scope": 3437,
            "src": "10977:17:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 2503,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "10977:6:1",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 2506,
            "mutability": "mutable",
            "name": "mem",
            "nameLocation": "11061:3:1",
            "nodeType": "VariableDeclaration",
            "scope": 3437,
            "src": "11046:18:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 2505,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "11046:6:1",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 2508,
            "mutability": "mutable",
            "name": "meme",
            "nameLocation": "11199:4:1",
            "nodeType": "VariableDeclaration",
            "scope": 3437,
            "src": "11184:19:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 2507,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "11184:6:1",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 2510,
            "mutability": "mutable",
            "name": "memoryString",
            "nameLocation": "11337:12:1",
            "nodeType": "VariableDeclaration",
            "scope": 3437,
            "src": "11322:27:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 2509,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "11322:6:1",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 2512,
            "mutability": "mutable",
            "name": "memoryStorage",
            "nameLocation": "11417:13:1",
            "nodeType": "VariableDeclaration",
            "scope": 3437,
            "src": "11402:28:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 2511,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "11402:6:1",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "functionSelector": "4409559a",
            "id": 2514,
            "mutability": "mutable",
            "name": "cCA",
            "nameLocation": "11555:3:1",
            "nodeType": "VariableDeclaration",
            "scope": 3437,
            "src": "11540:18:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 2513,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "11540:7:1",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 2516,
            "mutability": "mutable",
            "name": "ultraDexSuperCryptoBucks",
            "nameLocation": "11678:24:1",
            "nodeType": "VariableDeclaration",
            "scope": 3437,
            "src": "11662:40:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 2515,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "11662:7:1",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 2518,
            "mutability": "mutable",
            "name": "superStampSaverCryptoStamp",
            "nameLocation": "11812:26:1",
            "nodeType": "VariableDeclaration",
            "scope": 3437,
            "src": "11796:42:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 2517,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "11796:7:1",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 2520,
            "mutability": "mutable",
            "name": "superNFTCRYPTOGOLDEQUIVALENTS",
            "nameLocation": "11947:29:1",
            "nodeType": "VariableDeclaration",
            "scope": 3437,
            "src": "11931:45:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 2519,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "11931:7:1",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 2522,
            "mutability": "mutable",
            "name": "XMTSPT",
            "nameLocation": "12080:6:1",
            "nodeType": "VariableDeclaration",
            "scope": 3437,
            "src": "12064:22:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 2521,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "12064:7:1",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 2526,
            "mutability": "mutable",
            "name": "meCoin",
            "nameLocation": "12230:6:1",
            "nodeType": "VariableDeclaration",
            "scope": 3437,
            "src": "12195:41:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
              "typeString": "mapping(string => address)"
            },
            "typeName": {
              "id": 2525,
              "keyType": {
                "id": 2523,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "12203:6:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "12195:26:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                "typeString": "mapping(string => address)"
              },
              "valueType": {
                "id": 2524,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "12213:7:1",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 2530,
            "mutability": "mutable",
            "name": "memeOpen",
            "nameLocation": "12363:8:1",
            "nodeType": "VariableDeclaration",
            "scope": 3437,
            "src": "12328:43:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bool_$",
              "typeString": "mapping(string => bool)"
            },
            "typeName": {
              "id": 2529,
              "keyType": {
                "id": 2527,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "12336:6:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "12328:23:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bool_$",
                "typeString": "mapping(string => bool)"
              },
              "valueType": {
                "id": 2528,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "12346:4:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 2534,
            "mutability": "mutable",
            "name": "memeAmount",
            "nameLocation": "12497:10:1",
            "nodeType": "VariableDeclaration",
            "scope": 3437,
            "src": "12462:45:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
              "typeString": "mapping(string => uint256)"
            },
            "typeName": {
              "id": 2533,
              "keyType": {
                "id": 2531,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "12470:6:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "12462:26:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
                "typeString": "mapping(string => uint256)"
              },
              "valueType": {
                "id": 2532,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "12480:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 2538,
            "mutability": "mutable",
            "name": "memeAmountTotal",
            "nameLocation": "12632:15:1",
            "nodeType": "VariableDeclaration",
            "scope": 3437,
            "src": "12597:50:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
              "typeString": "mapping(string => uint256)"
            },
            "typeName": {
              "id": 2537,
              "keyType": {
                "id": 2535,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "12605:6:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "12597:26:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
                "typeString": "mapping(string => uint256)"
              },
              "valueType": {
                "id": 2536,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "12615:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 2542,
            "mutability": "mutable",
            "name": "memeHodler",
            "nameLocation": "12787:10:1",
            "nodeType": "VariableDeclaration",
            "scope": 3437,
            "src": "12752:45:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
              "typeString": "mapping(string => address)"
            },
            "typeName": {
              "id": 2541,
              "keyType": {
                "id": 2539,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "12760:6:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "12752:26:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                "typeString": "mapping(string => address)"
              },
              "valueType": {
                "id": 2540,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "12770:7:1",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 2546,
            "mutability": "mutable",
            "name": "memeNativeRate",
            "nameLocation": "12921:14:1",
            "nodeType": "VariableDeclaration",
            "scope": 3437,
            "src": "12886:49:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
              "typeString": "mapping(string => uint256)"
            },
            "typeName": {
              "id": 2545,
              "keyType": {
                "id": 2543,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "12894:6:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "12886:26:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
                "typeString": "mapping(string => uint256)"
              },
              "valueType": {
                "id": 2544,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "12904:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 2548,
            "mutability": "mutable",
            "name": "CCTJSMarketToTheHungry",
            "nameLocation": "13056:22:1",
            "nodeType": "VariableDeclaration",
            "scope": 3437,
            "src": "13041:37:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 2547,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "13041:6:1",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 2550,
            "mutability": "mutable",
            "name": "CCTJSMarketToTheHungryAddress",
            "nameLocation": "13196:29:1",
            "nodeType": "VariableDeclaration",
            "scope": 3437,
            "src": "13180:45:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 2549,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "13180:7:1",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "private"
          },
          {
            "anonymous": false,
            "id": 2554,
            "name": "WelcomeMC",
            "nameLocation": "13330:9:1",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2553,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2552,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_meme",
                  "nameLocation": "13347:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2554,
                  "src": "13340:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2551,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "13340:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13339:14:1"
            },
            "src": "13324:30:1"
          },
          {
            "constant": false,
            "functionSelector": "78182d03",
            "id": 2556,
            "mutability": "mutable",
            "name": "dexXMTSPRate",
            "nameLocation": "13952:12:1",
            "nodeType": "VariableDeclaration",
            "scope": 3437,
            "src": "13937:27:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2555,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "13937:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "6a35205e",
            "id": 2558,
            "mutability": "mutable",
            "name": "dexCCRate",
            "nameLocation": "13985:9:1",
            "nodeType": "VariableDeclaration",
            "scope": 3437,
            "src": "13970:24:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2557,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "13970:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "ebef4f0e",
            "id": 2560,
            "mutability": "mutable",
            "name": "maxXOut",
            "nameLocation": "14015:7:1",
            "nodeType": "VariableDeclaration",
            "scope": 3437,
            "src": "14000:22:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2559,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "14000:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "eda98299",
            "id": 2562,
            "mutability": "mutable",
            "name": "maxCCOut",
            "nameLocation": "14043:8:1",
            "nodeType": "VariableDeclaration",
            "scope": 3437,
            "src": "14028:23:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2561,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "14028:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "ebb6be1c",
            "id": 2564,
            "mutability": "mutable",
            "name": "bulkXOut",
            "nameLocation": "14072:8:1",
            "nodeType": "VariableDeclaration",
            "scope": 3437,
            "src": "14057:23:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2563,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "14057:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "e2903f9e",
            "id": 2566,
            "mutability": "mutable",
            "name": "bulkCCOut",
            "nameLocation": "14101:9:1",
            "nodeType": "VariableDeclaration",
            "scope": 3437,
            "src": "14086:24:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2565,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "14086:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 2570,
            "mutability": "mutable",
            "name": "addons",
            "nameLocation": "14147:6:1",
            "nodeType": "VariableDeclaration",
            "scope": 3437,
            "src": "14116:37:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 2569,
              "keyType": {
                "id": 2567,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "14124:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "14116:22:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 2568,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "14133:4:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 2582,
              "nodeType": "Block",
              "src": "14221:39:1",
              "statements": [
                {
                  "expression": {
                    "components": [
                      {
                        "baseExpression": {
                          "id": 2577,
                          "name": "addons",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2570,
                          "src": "14238:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 2579,
                        "indexExpression": {
                          "id": 2578,
                          "name": "_addon",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2572,
                          "src": "14245:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "14238:14:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "id": 2580,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "14237:16:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 2576,
                  "id": 2581,
                  "nodeType": "Return",
                  "src": "14231:22:1"
                }
              ]
            },
            "functionSelector": "8297f29f",
            "id": 2583,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAddon",
            "nameLocation": "14168:8:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2573,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2572,
                  "mutability": "mutable",
                  "name": "_addon",
                  "nameLocation": "14185:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2583,
                  "src": "14177:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2571,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14177:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14176:16:1"
            },
            "returnParameters": {
              "id": 2576,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2575,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2583,
                  "src": "14215:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2574,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "14215:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14214:6:1"
            },
            "scope": 3437,
            "src": "14159:101:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2604,
              "nodeType": "Block",
              "src": "14320:90:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2594,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 2591,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "14338:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2592,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "14338:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 2593,
                          "name": "cCA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2514,
                          "src": "14352:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "14338:17:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "41646d696e206f6e6c792e",
                        "id": 2595,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14357:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ab6d1f564ed737513416b68029d11a92965a098054c191ffd698ae8d52a7ebbe",
                          "typeString": "literal_string \"Admin only.\""
                        },
                        "value": "Admin only."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ab6d1f564ed737513416b68029d11a92965a098054c191ffd698ae8d52a7ebbe",
                          "typeString": "literal_string \"Admin only.\""
                        }
                      ],
                      "id": 2590,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "14330:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2596,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14330:41:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2597,
                  "nodeType": "ExpressionStatement",
                  "src": "14330:41:1"
                },
                {
                  "expression": {
                    "id": 2602,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2598,
                        "name": "addons",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2570,
                        "src": "14381:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 2600,
                      "indexExpression": {
                        "id": 2599,
                        "name": "_addon",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2585,
                        "src": "14388:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "14381:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2601,
                      "name": "onOff",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2587,
                      "src": "14398:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "14381:22:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2603,
                  "nodeType": "ExpressionStatement",
                  "src": "14381:22:1"
                }
              ]
            },
            "functionSelector": "6d714b68",
            "id": 2605,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setAddon",
            "nameLocation": "14274:8:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2588,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2585,
                  "mutability": "mutable",
                  "name": "_addon",
                  "nameLocation": "14291:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2605,
                  "src": "14283:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2584,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14283:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2587,
                  "mutability": "mutable",
                  "name": "onOff",
                  "nameLocation": "14304:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2605,
                  "src": "14299:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2586,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "14299:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14282:28:1"
            },
            "returnParameters": {
              "id": 2589,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14320:0:1"
            },
            "scope": 3437,
            "src": "14265:145:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2684,
              "nodeType": "Block",
              "src": "14556:747:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2618,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "14574:7:1",
                        "subExpression": {
                          "id": 2617,
                          "name": "closed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2990,
                          "src": "14575:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54686973206973206e6f74206120726567697374657220616e796d6f72652e204974206973206120627269636b2e",
                        "id": 2619,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14583:48:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f8cd0c73de6e277c4f2b9a2043d67763aebe24fdaca556dd71e1ee594d5f9255",
                          "typeString": "literal_string \"This is not a register anymore. It is a brick.\""
                        },
                        "value": "This is not a register anymore. It is a brick."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f8cd0c73de6e277c4f2b9a2043d67763aebe24fdaca556dd71e1ee594d5f9255",
                          "typeString": "literal_string \"This is not a register anymore. It is a brick.\""
                        }
                      ],
                      "id": 2616,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "14566:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2620,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14566:66:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2621,
                  "nodeType": "ExpressionStatement",
                  "src": "14566:66:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2625,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2623,
                          "name": "dexCCRate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2558,
                          "src": "14650:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 2624,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "14662:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "14650:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "53657420726174652e",
                        "id": 2626,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14665:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0100c5ce174dc9550577d62b3266f43177a38d4639be016b25cee1d9bc156f9b",
                          "typeString": "literal_string \"Set rate.\""
                        },
                        "value": "Set rate."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0100c5ce174dc9550577d62b3266f43177a38d4639be016b25cee1d9bc156f9b",
                          "typeString": "literal_string \"Set rate.\""
                        }
                      ],
                      "id": 2622,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "14642:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2627,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14642:35:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2628,
                  "nodeType": "ExpressionStatement",
                  "src": "14642:35:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 2630,
                          "name": "addons",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2570,
                          "src": "14695:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 2633,
                        "indexExpression": {
                          "expression": {
                            "id": 2631,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "14702:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2632,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "14702:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "14695:18:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f752063616e27742075736520746869732066756e6374696f6e207965742e",
                        "id": 2634,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14715:34:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c6c4703ef748cf382dabd615e7cbe7f542ab760aca5f0cb8b088dd0f00d7601c",
                          "typeString": "literal_string \"You can't use this function yet.\""
                        },
                        "value": "You can't use this function yet."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c6c4703ef748cf382dabd615e7cbe7f542ab760aca5f0cb8b088dd0f00d7601c",
                          "typeString": "literal_string \"You can't use this function yet.\""
                        }
                      ],
                      "id": 2629,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "14687:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2635,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14687:63:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2636,
                  "nodeType": "ExpressionStatement",
                  "src": "14687:63:1"
                },
                {
                  "assignments": [
                    2638
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2638,
                      "mutability": "mutable",
                      "name": "_bulkAmount",
                      "nameLocation": "14773:11:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 2684,
                      "src": "14765:19:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2637,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "14765:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2645,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2644,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2641,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2639,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2609,
                            "src": "14788:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 2640,
                            "name": "dexCCRate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2558,
                            "src": "14798:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "14788:19:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 2642,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "14787:21:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 2643,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "14811:7:1",
                      "subdenomination": "ether",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000000000000000_by_1",
                        "typeString": "int_const 1000000000000000000"
                      },
                      "value": "1"
                    },
                    "src": "14787:31:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14765:53:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2649,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2647,
                          "name": "_bulkAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2638,
                          "src": "14836:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 2648,
                          "name": "b",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2480,
                          "src": "14851:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "14836:16:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420656e6f7567682066756e64732e",
                        "id": 2650,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14854:19:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6837646b67057675f05a4cd997fee2159138b7fc7f6519669f46d4a090b51e94",
                          "typeString": "literal_string \"Not enough funds.\""
                        },
                        "value": "Not enough funds."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6837646b67057675f05a4cd997fee2159138b7fc7f6519669f46d4a090b51e94",
                          "typeString": "literal_string \"Not enough funds.\""
                        }
                      ],
                      "id": 2646,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "14828:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2651,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14828:46:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2652,
                  "nodeType": "ExpressionStatement",
                  "src": "14828:46:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2654,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2607,
                        "src": "14890:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2655,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2609,
                        "src": "14899:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2653,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5317,
                      "src": "14884:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 2656,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14884:23:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2657,
                  "nodeType": "ExpressionStatement",
                  "src": "14884:23:1"
                },
                {
                  "expression": {
                    "id": 2660,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2658,
                      "name": "b",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2480,
                      "src": "15016:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 2659,
                      "name": "_bulkAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2638,
                      "src": "15021:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "15016:16:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2661,
                  "nodeType": "ExpressionStatement",
                  "src": "15016:16:1"
                },
                {
                  "expression": {
                    "id": 2664,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2662,
                      "name": "bulkXOut",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2564,
                      "src": "15042:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 2663,
                      "name": "_bulkAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2638,
                      "src": "15054:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "15042:23:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2665,
                  "nodeType": "ExpressionStatement",
                  "src": "15042:23:1"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 2667,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "15084:3:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2668,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "15084:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 2666,
                            "name": "Receiver",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3444,
                            "src": "15075:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_Receiver_$3444_$",
                              "typeString": "type(contract Receiver)"
                            }
                          },
                          "id": 2669,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15075:20:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Receiver_$3444",
                            "typeString": "contract Receiver"
                          }
                        },
                        "id": 2670,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "addonPay",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3443,
                        "src": "15075:29:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$__$returns$__$",
                          "typeString": "function () payable external"
                        }
                      },
                      "id": 2672,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "id": 2671,
                          "name": "_bulkAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2638,
                          "src": "15111:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "15075:48:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                        "typeString": "function () payable external"
                      }
                    },
                    "id": 2673,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15075:50:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2674,
                  "nodeType": "ExpressionStatement",
                  "src": "15075:50:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2678,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2676,
                          "name": "bulkXOut",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2564,
                          "src": "15224:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 2677,
                          "name": "maxXOut",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2560,
                          "src": "15236:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "15224:19:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43757272656e74206d617820726561636865642e",
                        "id": 2679,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15245:22:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f8ecc9a786b8e2e370f0e79639735745e3d36e5c62f17138363795a676c1547a",
                          "typeString": "literal_string \"Current max reached.\""
                        },
                        "value": "Current max reached."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f8ecc9a786b8e2e370f0e79639735745e3d36e5c62f17138363795a676c1547a",
                          "typeString": "literal_string \"Current max reached.\""
                        }
                      ],
                      "id": 2675,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "15216:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2680,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15216:52:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2681,
                  "nodeType": "ExpressionStatement",
                  "src": "15216:52:1"
                },
                {
                  "expression": {
                    "id": 2682,
                    "name": "_bulkAmount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2638,
                    "src": "15285:11:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2615,
                  "id": 2683,
                  "nodeType": "Return",
                  "src": "15278:18:1"
                }
              ]
            },
            "functionSelector": "9bc255f8",
            "id": 2685,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2612,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2611,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4816,
                  "src": "14525:12:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "14525:12:1"
              }
            ],
            "name": "dexCCInFrom",
            "nameLocation": "14470:11:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2610,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2607,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "14490:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2685,
                  "src": "14482:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2606,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14482:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2609,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "14507:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2685,
                  "src": "14499:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2608,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14499:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14481:34:1"
            },
            "returnParameters": {
              "id": 2615,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2614,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2685,
                  "src": "14546:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2613,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14546:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14545:9:1"
            },
            "scope": 3437,
            "src": "14461:842:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2748,
              "nodeType": "Block",
              "src": "15381:434:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2696,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "15399:7:1",
                        "subExpression": {
                          "id": 2695,
                          "name": "closed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2990,
                          "src": "15400:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54686973206973206e6f7420726567697374657220616e796d6f72652e204974206973206120627269636b2e",
                        "id": 2697,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15408:46:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_18560dfb2b66104a9808ebfa869560be905db73e76466c8397ac31e2472bcfc1",
                          "typeString": "literal_string \"This is not register anymore. It is a brick.\""
                        },
                        "value": "This is not register anymore. It is a brick."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_18560dfb2b66104a9808ebfa869560be905db73e76466c8397ac31e2472bcfc1",
                          "typeString": "literal_string \"This is not register anymore. It is a brick.\""
                        }
                      ],
                      "id": 2694,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "15391:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2698,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15391:64:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2699,
                  "nodeType": "ExpressionStatement",
                  "src": "15391:64:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2703,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2701,
                          "name": "dexCCRate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2558,
                          "src": "15473:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 2702,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "15485:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "15473:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "53657420726174652e",
                        "id": 2704,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15488:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0100c5ce174dc9550577d62b3266f43177a38d4639be016b25cee1d9bc156f9b",
                          "typeString": "literal_string \"Set rate.\""
                        },
                        "value": "Set rate."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0100c5ce174dc9550577d62b3266f43177a38d4639be016b25cee1d9bc156f9b",
                          "typeString": "literal_string \"Set rate.\""
                        }
                      ],
                      "id": 2700,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "15465:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2705,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15465:35:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2706,
                  "nodeType": "ExpressionStatement",
                  "src": "15465:35:1"
                },
                {
                  "assignments": [
                    2708
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2708,
                      "mutability": "mutable",
                      "name": "_bulkAmount",
                      "nameLocation": "15519:11:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 2748,
                      "src": "15511:19:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2707,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "15511:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2715,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2714,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2711,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2709,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2687,
                            "src": "15534:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 2710,
                            "name": "dexCCRate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2558,
                            "src": "15544:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "15534:19:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 2712,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "15533:21:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 2713,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "15557:7:1",
                      "subdenomination": "ether",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000000000000000_by_1",
                        "typeString": "int_const 1000000000000000000"
                      },
                      "value": "1"
                    },
                    "src": "15533:31:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15511:53:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2717,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "15581:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2718,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "15581:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2719,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2687,
                        "src": "15593:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2716,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5317,
                      "src": "15575:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 2720,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15575:26:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2721,
                  "nodeType": "ExpressionStatement",
                  "src": "15575:26:1"
                },
                {
                  "expression": {
                    "id": 2724,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2722,
                      "name": "b",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2480,
                      "src": "15616:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 2723,
                      "name": "_bulkAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2708,
                      "src": "15621:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "15616:16:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2725,
                  "nodeType": "ExpressionStatement",
                  "src": "15616:16:1"
                },
                {
                  "expression": {
                    "id": 2728,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2726,
                      "name": "bulkXOut",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2564,
                      "src": "15642:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 2727,
                      "name": "_bulkAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2708,
                      "src": "15654:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "15642:23:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2729,
                  "nodeType": "ExpressionStatement",
                  "src": "15642:23:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2736,
                        "name": "_bulkAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2708,
                        "src": "15705:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 2732,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "15684:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 2733,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "15684:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 2731,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "15676:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 2730,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "15676:8:1",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2734,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15676:19:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 2735,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "15676:28:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 2737,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15676:41:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2738,
                  "nodeType": "ExpressionStatement",
                  "src": "15676:41:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2742,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2740,
                          "name": "bulkXOut",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2564,
                          "src": "15735:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 2741,
                          "name": "maxXOut",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2560,
                          "src": "15747:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "15735:19:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43757272656e74206d617820726561636865642e",
                        "id": 2743,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15756:22:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f8ecc9a786b8e2e370f0e79639735745e3d36e5c62f17138363795a676c1547a",
                          "typeString": "literal_string \"Current max reached.\""
                        },
                        "value": "Current max reached."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f8ecc9a786b8e2e370f0e79639735745e3d36e5c62f17138363795a676c1547a",
                          "typeString": "literal_string \"Current max reached.\""
                        }
                      ],
                      "id": 2739,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "15727:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2744,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15727:52:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2745,
                  "nodeType": "ExpressionStatement",
                  "src": "15727:52:1"
                },
                {
                  "expression": {
                    "id": 2746,
                    "name": "_bulkAmount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2708,
                    "src": "15797:11:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2693,
                  "id": 2747,
                  "nodeType": "Return",
                  "src": "15790:18:1"
                }
              ]
            },
            "functionSelector": "e3f56af4",
            "id": 2749,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2690,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2689,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4816,
                  "src": "15351:12:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "15351:12:1"
              }
            ],
            "name": "dexCCIn",
            "nameLocation": "15317:7:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2688,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2687,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "15333:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2749,
                  "src": "15325:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2686,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15325:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15324:17:1"
            },
            "returnParameters": {
              "id": 2693,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2692,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2749,
                  "src": "15372:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2691,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15372:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15371:9:1"
            },
            "scope": 3437,
            "src": "15308:507:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2765,
              "nodeType": "Block",
              "src": "15867:71:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2758,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2755,
                          "name": "cCA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2514,
                          "src": "15885:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 2756,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "15892:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2757,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "15892:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "15885:17:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2754,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "15877:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2759,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15877:26:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2760,
                  "nodeType": "ExpressionStatement",
                  "src": "15877:26:1"
                },
                {
                  "expression": {
                    "id": 2763,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2761,
                      "name": "maxXOut",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2560,
                      "src": "15913:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2762,
                      "name": "_maxXOut",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2751,
                      "src": "15923:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "15913:18:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2764,
                  "nodeType": "ExpressionStatement",
                  "src": "15913:18:1"
                }
              ]
            },
            "functionSelector": "fa144964",
            "id": 2766,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setMaxXOut",
            "nameLocation": "15829:10:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2752,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2751,
                  "mutability": "mutable",
                  "name": "_maxXOut",
                  "nameLocation": "15848:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2766,
                  "src": "15840:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2750,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15840:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15839:18:1"
            },
            "returnParameters": {
              "id": 2753,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15867:0:1"
            },
            "scope": 3437,
            "src": "15820:118:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2824,
              "nodeType": "Block",
              "src": "16012:406:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2775,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "16030:7:1",
                        "subExpression": {
                          "id": 2774,
                          "name": "closed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2990,
                          "src": "16031:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54686973206973206e6f7420726567697374657220616e796d6f72652e204974206973206120627269636b2e",
                        "id": 2776,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16039:46:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_18560dfb2b66104a9808ebfa869560be905db73e76466c8397ac31e2472bcfc1",
                          "typeString": "literal_string \"This is not register anymore. It is a brick.\""
                        },
                        "value": "This is not register anymore. It is a brick."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_18560dfb2b66104a9808ebfa869560be905db73e76466c8397ac31e2472bcfc1",
                          "typeString": "literal_string \"This is not register anymore. It is a brick.\""
                        }
                      ],
                      "id": 2773,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "16022:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2777,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16022:64:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2778,
                  "nodeType": "ExpressionStatement",
                  "src": "16022:64:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2782,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2780,
                          "name": "dexXMTSPRate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2556,
                          "src": "16104:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 2781,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "16119:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "16104:16:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "53657420726174652e",
                        "id": 2783,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16122:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0100c5ce174dc9550577d62b3266f43177a38d4639be016b25cee1d9bc156f9b",
                          "typeString": "literal_string \"Set rate.\""
                        },
                        "value": "Set rate."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0100c5ce174dc9550577d62b3266f43177a38d4639be016b25cee1d9bc156f9b",
                          "typeString": "literal_string \"Set rate.\""
                        }
                      ],
                      "id": 2779,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "16096:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2784,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16096:38:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2785,
                  "nodeType": "ExpressionStatement",
                  "src": "16096:38:1"
                },
                {
                  "assignments": [
                    2787
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2787,
                      "mutability": "mutable",
                      "name": "_bulkAmount",
                      "nameLocation": "16153:11:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 2824,
                      "src": "16145:19:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2786,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "16145:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2795,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2794,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2791,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 2788,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "16168:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 2789,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "src": "16168:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 2790,
                            "name": "dexXMTSPRate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2556,
                            "src": "16180:12:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "16168:24:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 2792,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "16167:26:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 2793,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "16196:7:1",
                      "subdenomination": "ether",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000000000000000_by_1",
                        "typeString": "int_const 1000000000000000000"
                      },
                      "value": "1"
                    },
                    "src": "16167:36:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16145:58:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2799,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "16231:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CultureCoin_$3437",
                              "typeString": "contract CultureCoin"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_CultureCoin_$3437",
                              "typeString": "contract CultureCoin"
                            }
                          ],
                          "id": 2798,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "16223:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2797,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "16223:7:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2800,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16223:13:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 2801,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "16238:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2802,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "16238:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2803,
                        "name": "_bulkAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2787,
                        "src": "16250:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2796,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5189,
                      "src": "16213:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2804,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16213:49:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2805,
                  "nodeType": "ExpressionStatement",
                  "src": "16213:49:1"
                },
                {
                  "expression": {
                    "id": 2809,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2806,
                      "name": "b",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2480,
                      "src": "16273:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "expression": {
                        "id": 2807,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "16278:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 2808,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "16278:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "16273:14:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2810,
                  "nodeType": "ExpressionStatement",
                  "src": "16273:14:1"
                },
                {
                  "expression": {
                    "id": 2813,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2811,
                      "name": "bulkCCOut",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2566,
                      "src": "16298:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 2812,
                      "name": "_bulkAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2787,
                      "src": "16311:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "16298:24:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2814,
                  "nodeType": "ExpressionStatement",
                  "src": "16298:24:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2818,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2816,
                          "name": "bulkCCOut",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2566,
                          "src": "16340:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 2817,
                          "name": "maxCCOut",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2562,
                          "src": "16353:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "16340:21:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43757272656e74206d617820726561636865642e",
                        "id": 2819,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16363:22:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f8ecc9a786b8e2e370f0e79639735745e3d36e5c62f17138363795a676c1547a",
                          "typeString": "literal_string \"Current max reached.\""
                        },
                        "value": "Current max reached."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f8ecc9a786b8e2e370f0e79639735745e3d36e5c62f17138363795a676c1547a",
                          "typeString": "literal_string \"Current max reached.\""
                        }
                      ],
                      "id": 2815,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "16332:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2820,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16332:54:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2821,
                  "nodeType": "ExpressionStatement",
                  "src": "16332:54:1"
                },
                {
                  "expression": {
                    "id": 2822,
                    "name": "_bulkAmount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2787,
                    "src": "16400:11:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2772,
                  "id": 2823,
                  "nodeType": "Return",
                  "src": "16393:18:1"
                }
              ]
            },
            "functionSelector": "935418fc",
            "id": 2825,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2769,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2768,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4816,
                  "src": "15982:12:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "15982:12:1"
              }
            ],
            "name": "dexXMTSPIn",
            "nameLocation": "15952:10:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2767,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15962:2:1"
            },
            "returnParameters": {
              "id": 2772,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2771,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2825,
                  "src": "16003:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2770,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16003:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16002:9:1"
            },
            "scope": 3437,
            "src": "15943:475:1",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2841,
              "nodeType": "Block",
              "src": "16478:81:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2834,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2831,
                          "name": "cCA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2514,
                          "src": "16496:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 2832,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "16503:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2833,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "16503:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "16496:17:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2830,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "16488:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2835,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16488:26:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2836,
                  "nodeType": "ExpressionStatement",
                  "src": "16488:26:1"
                },
                {
                  "expression": {
                    "id": 2839,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2837,
                      "name": "dexXMTSPRate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2556,
                      "src": "16524:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2838,
                      "name": "_dexXMTSPRate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2827,
                      "src": "16539:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "16524:28:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2840,
                  "nodeType": "ExpressionStatement",
                  "src": "16524:28:1"
                }
              ]
            },
            "functionSelector": "44874f4a",
            "id": 2842,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setDexXMTSPRate",
            "nameLocation": "16432:15:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2828,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2827,
                  "mutability": "mutable",
                  "name": "_dexXMTSPRate",
                  "nameLocation": "16456:13:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2842,
                  "src": "16448:21:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2826,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16448:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16447:23:1"
            },
            "returnParameters": {
              "id": 2829,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16478:0:1"
            },
            "scope": 3437,
            "src": "16423:136:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2858,
              "nodeType": "Block",
              "src": "16613:75:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2851,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2848,
                          "name": "cCA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2514,
                          "src": "16631:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 2849,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "16638:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2850,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "16638:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "16631:17:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2847,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "16623:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2852,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16623:26:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2853,
                  "nodeType": "ExpressionStatement",
                  "src": "16623:26:1"
                },
                {
                  "expression": {
                    "id": 2856,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2854,
                      "name": "dexCCRate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2558,
                      "src": "16659:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2855,
                      "name": "_dexCCRate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2844,
                      "src": "16671:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "16659:22:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2857,
                  "nodeType": "ExpressionStatement",
                  "src": "16659:22:1"
                }
              ]
            },
            "functionSelector": "b19a207f",
            "id": 2859,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setDexCCRate",
            "nameLocation": "16573:12:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2845,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2844,
                  "mutability": "mutable",
                  "name": "_dexCCRate",
                  "nameLocation": "16594:10:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2859,
                  "src": "16586:18:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2843,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16586:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16585:20:1"
            },
            "returnParameters": {
              "id": 2846,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16613:0:1"
            },
            "scope": 3437,
            "src": "16564:124:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2874,
              "nodeType": "Block",
              "src": "16766:81:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2867,
                        "name": "_dexXMTSPRate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2861,
                        "src": "16792:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2866,
                      "name": "setDexXMTSPRate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2842,
                      "src": "16776:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 2868,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16776:30:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2869,
                  "nodeType": "ExpressionStatement",
                  "src": "16776:30:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2871,
                        "name": "_dexCCRate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2863,
                        "src": "16829:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2870,
                      "name": "setDexCCRate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2859,
                      "src": "16816:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 2872,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16816:24:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2873,
                  "nodeType": "ExpressionStatement",
                  "src": "16816:24:1"
                }
              ]
            },
            "functionSelector": "f18e673d",
            "id": 2875,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setDexRates",
            "nameLocation": "16702:11:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2864,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2861,
                  "mutability": "mutable",
                  "name": "_dexXMTSPRate",
                  "nameLocation": "16722:13:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2875,
                  "src": "16714:21:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2860,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16714:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2863,
                  "mutability": "mutable",
                  "name": "_dexCCRate",
                  "nameLocation": "16745:10:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2875,
                  "src": "16737:18:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2862,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16737:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16713:43:1"
            },
            "returnParameters": {
              "id": 2865,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16766:0:1"
            },
            "scope": 3437,
            "src": "16693:154:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2882,
              "nodeType": "Block",
              "src": "16910:36:1",
              "statements": [
                {
                  "expression": {
                    "id": 2880,
                    "name": "dexXMTSPRate",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2556,
                    "src": "16927:12:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2879,
                  "id": 2881,
                  "nodeType": "Return",
                  "src": "16920:19:1"
                }
              ]
            },
            "functionSelector": "fac70e23",
            "id": 2883,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getDexXMTSPRate",
            "nameLocation": "16861:15:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2876,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16876:2:1"
            },
            "returnParameters": {
              "id": 2879,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2878,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2883,
                  "src": "16901:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2877,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16901:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16900:9:1"
            },
            "scope": 3437,
            "src": "16852:94:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2890,
              "nodeType": "Block",
              "src": "17006:33:1",
              "statements": [
                {
                  "expression": {
                    "id": 2888,
                    "name": "dexCCRate",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2558,
                    "src": "17023:9:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2887,
                  "id": 2889,
                  "nodeType": "Return",
                  "src": "17016:16:1"
                }
              ]
            },
            "functionSelector": "df56b490",
            "id": 2891,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getDexCCRate",
            "nameLocation": "16960:12:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2884,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16972:2:1"
            },
            "returnParameters": {
              "id": 2887,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2886,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2891,
                  "src": "16997:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2885,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16997:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16996:9:1"
            },
            "scope": 3437,
            "src": "16951:88:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2900,
              "nodeType": "Block",
              "src": "17097:42:1",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2898,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2896,
                      "name": "maxXOut",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2560,
                      "src": "17114:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "id": 2897,
                      "name": "bulkXOut",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2564,
                      "src": "17124:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "17114:18:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2895,
                  "id": 2899,
                  "nodeType": "Return",
                  "src": "17107:25:1"
                }
              ]
            },
            "functionSelector": "305601bc",
            "id": 2901,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getXAllowance",
            "nameLocation": "17053:13:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2892,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "17066:2:1"
            },
            "returnParameters": {
              "id": 2895,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2894,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2901,
                  "src": "17091:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2893,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "17091:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17090:6:1"
            },
            "scope": 3437,
            "src": "17044:95:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "anonymous": false,
            "id": 2907,
            "name": "HWarn",
            "nameLocation": "17228:5:1",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2906,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2903,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "level",
                  "nameLocation": "17241:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2907,
                  "src": "17234:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2902,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "17234:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2905,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "goof",
                  "nameLocation": "17255:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2907,
                  "src": "17248:11:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2904,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "17248:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17233:27:1"
            },
            "src": "17222:39:1"
          },
          {
            "body": {
              "id": 2914,
              "nodeType": "Block",
              "src": "17307:164:1",
              "statements": [
                {
                  "expression": {
                    "id": 2912,
                    "name": "cCA",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2514,
                    "src": "17324:3:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 2911,
                  "id": 2913,
                  "nodeType": "Return",
                  "src": "17317:10:1"
                }
              ]
            },
            "functionSelector": "09ed4607",
            "id": 2915,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "clone",
            "nameLocation": "17275:5:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2908,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "17280:2:1"
            },
            "returnParameters": {
              "id": 2911,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2910,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2915,
                  "src": "17298:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2909,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "17298:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17297:9:1"
            },
            "scope": 3437,
            "src": "17266:205:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 2917,
            "mutability": "mutable",
            "name": "myNOOPICO",
            "nameLocation": "17492:9:1",
            "nodeType": "VariableDeclaration",
            "scope": 3437,
            "src": "17476:25:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2916,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "17476:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 2930,
              "nodeType": "Block",
              "src": "17565:549:1",
              "statements": [
                {
                  "expression": {
                    "id": 2926,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2924,
                      "name": "myNOOPICO",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2917,
                      "src": "17783:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 2925,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "17796:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "17783:14:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2927,
                  "nodeType": "ExpressionStatement",
                  "src": "17783:14:1"
                },
                {
                  "expression": {
                    "hexValue": "66616c7365",
                    "id": 2928,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "17814:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "functionReturnParameters": 2923,
                  "id": 2929,
                  "nodeType": "Return",
                  "src": "17807:12:1"
                }
              ]
            },
            "functionSelector": "179b7742",
            "id": 2931,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "clonesearch",
            "nameLocation": "17516:11:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2920,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2919,
                  "mutability": "mutable",
                  "name": "_clone",
                  "nameLocation": "17536:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2931,
                  "src": "17528:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2918,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "17528:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17527:16:1"
            },
            "returnParameters": {
              "id": 2923,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2922,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2931,
                  "src": "17559:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2921,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "17559:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17558:6:1"
            },
            "scope": 3437,
            "src": "17507:607:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2985,
              "nodeType": "Block",
              "src": "18254:527:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2948,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "18272:6:1",
                        "subExpression": {
                          "id": 2947,
                          "name": "brick",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2988,
                          "src": "18273:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "427269636b7320646f206e6f74206d616b652073656564732e",
                        "id": 2949,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18280:27:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_463f2db3b913c6a5012f2f7fd52e3e4dc745cc35de6937c14e732f9d17069989",
                          "typeString": "literal_string \"Bricks do not make seeds.\""
                        },
                        "value": "Bricks do not make seeds."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_463f2db3b913c6a5012f2f7fd52e3e4dc745cc35de6937c14e732f9d17069989",
                          "typeString": "literal_string \"Bricks do not make seeds.\""
                        }
                      ],
                      "id": 2946,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "18264:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2950,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18264:44:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2951,
                  "nodeType": "ExpressionStatement",
                  "src": "18264:44:1"
                },
                {
                  "assignments": [
                    2953
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2953,
                      "mutability": "mutable",
                      "name": "newCoin",
                      "nameLocation": "18437:7:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 2985,
                      "src": "18429:15:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2952,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "18429:7:1",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2968,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2959,
                            "name": "_totalSupply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2935,
                            "src": "18478:12:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 2962,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "18500:4:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_CultureCoin_$3437",
                                  "typeString": "contract CultureCoin"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_CultureCoin_$3437",
                                  "typeString": "contract CultureCoin"
                                }
                              ],
                              "id": 2961,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "18492:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 2960,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "18492:7:1",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 2963,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "18492:13:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 2964,
                            "name": "_MotherAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2937,
                            "src": "18507:14:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 2965,
                            "name": "_meme",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2933,
                            "src": "18523:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "id": 2958,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "NewExpression",
                          "src": "18455:22:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_creation_nonpayable$_t_uint256_$_t_address_$_t_address_$_t_string_memory_ptr_$returns$_t_contract$_CultureCoinWrapper_$4348_$",
                            "typeString": "function (uint256,address,address,string memory) returns (contract CultureCoinWrapper)"
                          },
                          "typeName": {
                            "id": 2957,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 2956,
                              "name": "CultureCoinWrapper",
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 4348,
                              "src": "18459:18:1"
                            },
                            "referencedDeclaration": 4348,
                            "src": "18459:18:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CultureCoinWrapper_$4348",
                              "typeString": "contract CultureCoinWrapper"
                            }
                          }
                        },
                        "id": 2966,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18455:74:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CultureCoinWrapper_$4348",
                          "typeString": "contract CultureCoinWrapper"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_CultureCoinWrapper_$4348",
                          "typeString": "contract CultureCoinWrapper"
                        }
                      ],
                      "id": 2955,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "18447:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 2954,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "18447:7:1",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 2967,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18447:83:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "18429:101:1"
                },
                {
                  "condition": {
                    "id": 2969,
                    "name": "_register",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2939,
                    "src": "18594:9:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 2981,
                    "nodeType": "Block",
                    "src": "18675:76:1",
                    "statements": [
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "hexValue": "54686520636f696e206d7573742062652061207265616c20676f6f64206f6e652e",
                              "id": 2978,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "18704:35:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_354a46ca7224e4712945bb56d8dca1bbd6ba794c7d306131aa1f4fb66ff3c8cd",
                                "typeString": "literal_string \"The coin must be a real good one.\""
                              },
                              "value": "The coin must be a real good one."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_354a46ca7224e4712945bb56d8dca1bbd6ba794c7d306131aa1f4fb66ff3c8cd",
                                "typeString": "literal_string \"The coin must be a real good one.\""
                              }
                            ],
                            "id": 2977,
                            "name": "WelcomeMC",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2554,
                            "src": "18694:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory)"
                            }
                          },
                          "id": 2979,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "18694:46:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2980,
                        "nodeType": "EmitStatement",
                        "src": "18689:51:1"
                      }
                    ]
                  },
                  "id": 2982,
                  "nodeType": "IfStatement",
                  "src": "18591:160:1",
                  "trueBody": {
                    "id": 2976,
                    "nodeType": "Block",
                    "src": "18605:64:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2971,
                              "name": "_meme",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2933,
                              "src": "18629:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "id": 2972,
                              "name": "newCoin",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2953,
                              "src": "18636:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2973,
                              "name": "_totalSupply",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2935,
                              "src": "18645:12:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2970,
                            "name": "iRegister",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3070,
                            "src": "18619:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (string memory,address,uint256)"
                            }
                          },
                          "id": 2974,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "18619:39:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2975,
                        "nodeType": "ExpressionStatement",
                        "src": "18619:39:1"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 2983,
                    "name": "newCoin",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2953,
                    "src": "18767:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 2945,
                  "id": 2984,
                  "nodeType": "Return",
                  "src": "18760:14:1"
                }
              ]
            },
            "functionSelector": "b7a7dc5c",
            "id": 2986,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2942,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2941,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4816,
                  "src": "18224:12:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "18224:12:1"
              }
            ],
            "name": "seed",
            "nameLocation": "18129:4:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2940,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2933,
                  "mutability": "mutable",
                  "name": "_meme",
                  "nameLocation": "18148:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2986,
                  "src": "18134:19:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2932,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "18134:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2935,
                  "mutability": "mutable",
                  "name": "_totalSupply",
                  "nameLocation": "18163:12:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2986,
                  "src": "18155:20:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2934,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "18155:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2937,
                  "mutability": "mutable",
                  "name": "_MotherAddress",
                  "nameLocation": "18185:14:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2986,
                  "src": "18177:22:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2936,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "18177:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2939,
                  "mutability": "mutable",
                  "name": "_register",
                  "nameLocation": "18206:9:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2986,
                  "src": "18201:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2938,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "18201:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18133:83:1"
            },
            "returnParameters": {
              "id": 2945,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2944,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2986,
                  "src": "18245:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2943,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "18245:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18244:9:1"
            },
            "scope": 3437,
            "src": "18120:661:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "3e9d5e0e",
            "id": 2988,
            "mutability": "mutable",
            "name": "brick",
            "nameLocation": "18798:5:1",
            "nodeType": "VariableDeclaration",
            "scope": 3437,
            "src": "18786:17:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 2987,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "18786:4:1",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "597e1fb5",
            "id": 2990,
            "mutability": "mutable",
            "name": "closed",
            "nameLocation": "18821:6:1",
            "nodeType": "VariableDeclaration",
            "scope": 3437,
            "src": "18809:18:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 2989,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "18809:4:1",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 2992,
            "mutability": "mutable",
            "name": "metastaked",
            "nameLocation": "18846:10:1",
            "nodeType": "VariableDeclaration",
            "scope": 3437,
            "src": "18833:23:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 2991,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "18833:4:1",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 2994,
            "mutability": "mutable",
            "name": "MMCWSS",
            "nameLocation": "19018:6:1",
            "nodeType": "VariableDeclaration",
            "scope": 3437,
            "src": "19005:19:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 2993,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "19005:4:1",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 2996,
            "mutability": "mutable",
            "name": "UMMSCWSSS",
            "nameLocation": "19043:9:1",
            "nodeType": "VariableDeclaration",
            "scope": 3437,
            "src": "19030:22:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 2995,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "19030:4:1",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "private"
          },
          {
            "anonymous": false,
            "id": 3006,
            "name": "IRegister",
            "nameLocation": "19487:9:1",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 3005,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2998,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "meme",
                  "nameLocation": "19504:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3006,
                  "src": "19497:11:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2997,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "19497:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3000,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "newCoin",
                  "nameLocation": "19518:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3006,
                  "src": "19510:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2999,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "19510:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3002,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "totalSupply",
                  "nameLocation": "19535:11:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3006,
                  "src": "19527:19:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3001,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "19527:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3004,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "registered",
                  "nameLocation": "19553:10:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3006,
                  "src": "19548:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3003,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "19548:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19496:68:1"
            },
            "src": "19481:84:1"
          },
          {
            "body": {
              "id": 3069,
              "nodeType": "Block",
              "src": "19657:470:1",
              "statements": [
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "hexValue": "436f696e206861732063616c6c656420666f7220696e7465726e616c20726567697374726174696f6e2e",
                        "id": 3016,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19682:44:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c73a5426aa32d5638dffe7f0bcea80aaacddf1a5248c0a40c5e07cfc57803f65",
                          "typeString": "literal_string \"Coin has called for internal registration.\""
                        },
                        "value": "Coin has called for internal registration."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c73a5426aa32d5638dffe7f0bcea80aaacddf1a5248c0a40c5e07cfc57803f65",
                          "typeString": "literal_string \"Coin has called for internal registration.\""
                        }
                      ],
                      "id": 3015,
                      "name": "WelcomeMC",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2554,
                      "src": "19672:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 3017,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19672:55:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3018,
                  "nodeType": "EmitStatement",
                  "src": "19667:60:1"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 3026,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 3021,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "19748:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 3020,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "19740:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 3019,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "19740:7:1",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 3022,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "19740:10:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "baseExpression": {
                        "id": 3023,
                        "name": "meCoin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2526,
                        "src": "19754:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                          "typeString": "mapping(string memory => address)"
                        }
                      },
                      "id": 3025,
                      "indexExpression": {
                        "id": 3024,
                        "name": "_meme",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3008,
                        "src": "19761:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "19754:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "19740:27:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 3067,
                    "nodeType": "Block",
                    "src": "20045:76:1",
                    "statements": [
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 3061,
                              "name": "_meme",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3008,
                              "src": "20074:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "id": 3062,
                              "name": "newCoin",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3010,
                              "src": "20081:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 3063,
                              "name": "_totalSupply",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3012,
                              "src": "20090:12:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "66616c7365",
                              "id": 3064,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "20104:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "false"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 3060,
                            "name": "IRegister",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3006,
                            "src": "20064:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
                              "typeString": "function (string memory,address,uint256,bool)"
                            }
                          },
                          "id": 3065,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "20064:46:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3066,
                        "nodeType": "EmitStatement",
                        "src": "20059:51:1"
                      }
                    ]
                  },
                  "id": 3068,
                  "nodeType": "IfStatement",
                  "src": "19737:384:1",
                  "trueBody": {
                    "id": 3059,
                    "nodeType": "Block",
                    "src": "19769:270:1",
                    "statements": [
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3031,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 3027,
                              "name": "memeAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2534,
                              "src": "19783:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
                                "typeString": "mapping(string memory => uint256)"
                              }
                            },
                            "id": 3029,
                            "indexExpression": {
                              "id": 3028,
                              "name": "_meme",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3008,
                              "src": "19794:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "19783:17:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 3030,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "19804:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "19783:22:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3032,
                        "nodeType": "ExpressionStatement",
                        "src": "19783:22:1"
                      },
                      {
                        "expression": {
                          "id": 3037,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 3033,
                              "name": "meCoin",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2526,
                              "src": "19861:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                                "typeString": "mapping(string memory => address)"
                              }
                            },
                            "id": 3035,
                            "indexExpression": {
                              "id": 3034,
                              "name": "_meme",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3008,
                              "src": "19868:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "19861:13:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 3036,
                            "name": "newCoin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3010,
                            "src": "19877:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "19861:23:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 3038,
                        "nodeType": "ExpressionStatement",
                        "src": "19861:23:1"
                      },
                      {
                        "expression": {
                          "id": 3044,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 3039,
                              "name": "memeHodler",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2542,
                              "src": "19898:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                                "typeString": "mapping(string memory => address)"
                              }
                            },
                            "id": 3041,
                            "indexExpression": {
                              "id": 3040,
                              "name": "_meme",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3008,
                              "src": "19909:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "19898:17:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 3042,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "19918:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 3043,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "19918:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "19898:30:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 3045,
                        "nodeType": "ExpressionStatement",
                        "src": "19898:30:1"
                      },
                      {
                        "expression": {
                          "id": 3050,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 3046,
                              "name": "memeOpen",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2530,
                              "src": "19942:8:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bool_$",
                                "typeString": "mapping(string memory => bool)"
                              }
                            },
                            "id": 3048,
                            "indexExpression": {
                              "id": 3047,
                              "name": "_meme",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3008,
                              "src": "19951:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "19942:15:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 3049,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "19960:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "19942:22:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3051,
                        "nodeType": "ExpressionStatement",
                        "src": "19942:22:1"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 3053,
                              "name": "_meme",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3008,
                              "src": "19993:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "id": 3054,
                              "name": "newCoin",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3010,
                              "src": "20000:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 3055,
                              "name": "_totalSupply",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3012,
                              "src": "20009:12:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "74727565",
                              "id": 3056,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "20023:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "true"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 3052,
                            "name": "IRegister",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3006,
                            "src": "19983:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
                              "typeString": "function (string memory,address,uint256,bool)"
                            }
                          },
                          "id": 3057,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "19983:45:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3058,
                        "nodeType": "EmitStatement",
                        "src": "19978:50:1"
                      }
                    ]
                  }
                }
              ]
            },
            "id": 3070,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "iRegister",
            "nameLocation": "19579:9:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3013,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3008,
                  "mutability": "mutable",
                  "name": "_meme",
                  "nameLocation": "19603:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3070,
                  "src": "19589:19:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3007,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "19589:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3010,
                  "mutability": "mutable",
                  "name": "newCoin",
                  "nameLocation": "19618:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3070,
                  "src": "19610:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3009,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "19610:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3012,
                  "mutability": "mutable",
                  "name": "_totalSupply",
                  "nameLocation": "19635:12:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3070,
                  "src": "19627:20:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3011,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "19627:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19588:60:1"
            },
            "returnParameters": {
              "id": 3014,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "19657:0:1"
            },
            "scope": 3437,
            "src": "19570:557:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "constant": false,
            "functionSelector": "29722a86",
            "id": 3072,
            "mutability": "mutable",
            "name": "closeAmount",
            "nameLocation": "20147:11:1",
            "nodeType": "VariableDeclaration",
            "scope": 3437,
            "src": "20132:26:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 3071,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "20132:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 3109,
              "nodeType": "Block",
              "src": "20190:696:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3077,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "20208:6:1",
                        "subExpression": {
                          "id": 3076,
                          "name": "brick",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2988,
                          "src": "20209:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f752063616e206e6f7420636c6f7365206120627269636b2e",
                        "id": 3078,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20216:28:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4ac4caaf5994dd193c5fad9a13058264f747aca5d4b9e9568f90aaeb44c59059",
                          "typeString": "literal_string \"You can not close a brick.\""
                        },
                        "value": "You can not close a brick."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4ac4caaf5994dd193c5fad9a13058264f747aca5d4b9e9568f90aaeb44c59059",
                          "typeString": "literal_string \"You can not close a brick.\""
                        }
                      ],
                      "id": 3075,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "20200:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3079,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20200:45:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3080,
                  "nodeType": "ExpressionStatement",
                  "src": "20200:45:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3083,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "20263:7:1",
                        "subExpression": {
                          "id": 3082,
                          "name": "closed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2990,
                          "src": "20264:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f752063616e206e6f7420636c6f73653a20416c726561647920636c6f7365642e",
                        "id": 3084,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20272:36:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_805f38a193c1cb3aef6b28977f1aa8d46d5816ee354f5454362f02b7472235dd",
                          "typeString": "literal_string \"You can not close: Already closed.\""
                        },
                        "value": "You can not close: Already closed."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_805f38a193c1cb3aef6b28977f1aa8d46d5816ee354f5454362f02b7472235dd",
                          "typeString": "literal_string \"You can not close: Already closed.\""
                        }
                      ],
                      "id": 3081,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "20255:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3085,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20255:54:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3086,
                  "nodeType": "ExpressionStatement",
                  "src": "20255:54:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3089,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "20327:11:1",
                        "subExpression": {
                          "id": 3088,
                          "name": "metastaked",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2992,
                          "src": "20328:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f752063616e206e6f7420636c6f73653a204d6574617374616b65642e",
                        "id": 3090,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20340:32:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d95c1b7ef8ecc287b08ef1cf586128ac0688aad937e2460f55a45afcfd1d672c",
                          "typeString": "literal_string \"You can not close: Metastaked.\""
                        },
                        "value": "You can not close: Metastaked."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d95c1b7ef8ecc287b08ef1cf586128ac0688aad937e2460f55a45afcfd1d672c",
                          "typeString": "literal_string \"You can not close: Metastaked.\""
                        }
                      ],
                      "id": 3087,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "20319:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3091,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20319:54:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3092,
                  "nodeType": "ExpressionStatement",
                  "src": "20319:54:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3097,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 3094,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "20391:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3095,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "20391:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 3096,
                          "name": "cCA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2514,
                          "src": "20405:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "20391:17:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f74206f776e65722e",
                        "id": 3098,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20410:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bf2878a0327c5efcb59586051281508822c0d430e7858d25ba3f27d805f4146d",
                          "typeString": "literal_string \"Not owner.\""
                        },
                        "value": "Not owner."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bf2878a0327c5efcb59586051281508822c0d430e7858d25ba3f27d805f4146d",
                          "typeString": "literal_string \"Not owner.\""
                        }
                      ],
                      "id": 3093,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "20383:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3099,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20383:40:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3100,
                  "nodeType": "ExpressionStatement",
                  "src": "20383:40:1"
                },
                {
                  "expression": {
                    "id": 3103,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3101,
                      "name": "closed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2990,
                      "src": "20778:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 3102,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "20787:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "20778:13:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3104,
                  "nodeType": "ExpressionStatement",
                  "src": "20778:13:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "hexValue": "4f7572206c61737420686172726168206265666f726520776520636c6f736520666f7220676f6f642e20576520617265206e6f7720636c6f7365642e",
                        "id": 3106,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20816:62:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bc267f3c144193e236827d9e58776cc69e4baf4ada98ed097eae23b1ef84b138",
                          "typeString": "literal_string \"Our last harrah before we close for good. We are now closed.\""
                        },
                        "value": "Our last harrah before we close for good. We are now closed."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_bc267f3c144193e236827d9e58776cc69e4baf4ada98ed097eae23b1ef84b138",
                          "typeString": "literal_string \"Our last harrah before we close for good. We are now closed.\""
                        }
                      ],
                      "id": 3105,
                      "name": "WelcomeMC",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2554,
                      "src": "20806:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 3107,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20806:73:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3108,
                  "nodeType": "EmitStatement",
                  "src": "20801:78:1"
                }
              ]
            },
            "functionSelector": "43d726d6",
            "id": 3110,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "close",
            "nameLocation": "20173:5:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3073,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "20178:2:1"
            },
            "returnParameters": {
              "id": 3074,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "20190:0:1"
            },
            "scope": 3437,
            "src": "20164:722:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3124,
              "nodeType": "Block",
              "src": "21098:86:1",
              "statements": [
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 3116,
                        "name": "_hodler",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3112,
                        "src": "21126:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 3115,
                      "name": "DebugAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3436,
                      "src": "21113:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 3117,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21113:21:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3118,
                  "nodeType": "EmitStatement",
                  "src": "21108:26:1"
                },
                {
                  "expression": {
                    "id": 3122,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3119,
                      "name": "b",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2480,
                      "src": "21163:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "expression": {
                        "id": 3120,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "21168:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 3121,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "21168:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "21163:14:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3123,
                  "nodeType": "ExpressionStatement",
                  "src": "21163:14:1"
                }
              ]
            },
            "functionSelector": "4420e486",
            "id": 3125,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "register",
            "nameLocation": "21055:8:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3113,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3112,
                  "mutability": "mutable",
                  "name": "_hodler",
                  "nameLocation": "21072:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3125,
                  "src": "21064:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3111,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "21064:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "21063:17:1"
            },
            "returnParameters": {
              "id": 3114,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "21098:0:1"
            },
            "scope": 3437,
            "src": "21046:138:1",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3142,
              "nodeType": "Block",
              "src": "21266:58:1",
              "statements": [
                {
                  "expression": {
                    "components": [
                      {
                        "baseExpression": {
                          "id": 3134,
                          "name": "meCoin",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2526,
                          "src": "21284:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                            "typeString": "mapping(string memory => address)"
                          }
                        },
                        "id": 3136,
                        "indexExpression": {
                          "id": 3135,
                          "name": "_meme",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3127,
                          "src": "21291:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "21284:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 3137,
                          "name": "memeAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2534,
                          "src": "21299:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
                            "typeString": "mapping(string memory => uint256)"
                          }
                        },
                        "id": 3139,
                        "indexExpression": {
                          "id": 3138,
                          "name": "_meme",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3127,
                          "src": "21310:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "21299:17:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 3140,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "21283:34:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
                      "typeString": "tuple(address,uint256)"
                    }
                  },
                  "functionReturnParameters": 3133,
                  "id": 3141,
                  "nodeType": "Return",
                  "src": "21276:41:1"
                }
              ]
            },
            "functionSelector": "2017fb74",
            "id": 3143,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCoin",
            "nameLocation": "21198:7:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3128,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3127,
                  "mutability": "mutable",
                  "name": "_meme",
                  "nameLocation": "21220:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3143,
                  "src": "21206:19:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3126,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "21206:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "21205:21:1"
            },
            "returnParameters": {
              "id": 3133,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3130,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3143,
                  "src": "21249:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3129,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "21249:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3132,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3143,
                  "src": "21257:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3131,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "21257:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "21248:17:1"
            },
            "scope": 3437,
            "src": "21189:135:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3162,
              "nodeType": "Block",
              "src": "21382:138:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3152,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 3149,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "21400:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3150,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "21400:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 3151,
                          "name": "cCA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2514,
                          "src": "21414:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "21400:17:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c79207468652043756c74757265436f696e2061646d696e6973747261746f72206d617920666c6167206120636f696e20617320444f412e",
                        "id": 3153,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21419:60:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_987953c06d1a1f3c90574c8fd96e4e910968447114e2202aa753132cbfff2758",
                          "typeString": "literal_string \"Only the CultureCoin administrator may flag a coin as DOA.\""
                        },
                        "value": "Only the CultureCoin administrator may flag a coin as DOA."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_987953c06d1a1f3c90574c8fd96e4e910968447114e2202aa753132cbfff2758",
                          "typeString": "literal_string \"Only the CultureCoin administrator may flag a coin as DOA.\""
                        }
                      ],
                      "id": 3148,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "21392:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3154,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21392:88:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3155,
                  "nodeType": "ExpressionStatement",
                  "src": "21392:88:1"
                },
                {
                  "expression": {
                    "id": 3160,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 3156,
                        "name": "memeOpen",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2530,
                        "src": "21490:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bool_$",
                          "typeString": "mapping(string memory => bool)"
                        }
                      },
                      "id": 3158,
                      "indexExpression": {
                        "id": 3157,
                        "name": "_meme",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3145,
                        "src": "21499:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "21490:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 3159,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "21508:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "21490:23:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3161,
                  "nodeType": "ExpressionStatement",
                  "src": "21490:23:1"
                }
              ]
            },
            "functionSelector": "a4544648",
            "id": 3163,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "flagMemeCoin",
            "nameLocation": "21339:12:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3146,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3145,
                  "mutability": "mutable",
                  "name": "_meme",
                  "nameLocation": "21366:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3163,
                  "src": "21352:19:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3144,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "21352:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "21351:21:1"
            },
            "returnParameters": {
              "id": 3147,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "21382:0:1"
            },
            "scope": 3437,
            "src": "21330:190:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3188,
              "nodeType": "Block",
              "src": "23963:138:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3168,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "23981:6:1",
                        "subExpression": {
                          "id": 3167,
                          "name": "brick",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2988,
                          "src": "23982:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "427269636b2e",
                        "id": 3169,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "23989:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9eebba3e43710af9c85587b7a76671096282059df92a70a55605b273846c9704",
                          "typeString": "literal_string \"Brick.\""
                        },
                        "value": "Brick."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9eebba3e43710af9c85587b7a76671096282059df92a70a55605b273846c9704",
                          "typeString": "literal_string \"Brick.\""
                        }
                      ],
                      "id": 3166,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "23973:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3170,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23973:25:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3171,
                  "nodeType": "ExpressionStatement",
                  "src": "23973:25:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3174,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "24016:7:1",
                        "subExpression": {
                          "id": 3173,
                          "name": "closed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2990,
                          "src": "24017:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436c6f7365642e",
                        "id": 3175,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "24025:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_488365f38bf09b9dd31f1bbc7d8c5197879aab5f25a2819bbf631bd2fbd826bb",
                          "typeString": "literal_string \"Closed.\""
                        },
                        "value": "Closed."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_488365f38bf09b9dd31f1bbc7d8c5197879aab5f25a2819bbf631bd2fbd826bb",
                          "typeString": "literal_string \"Closed.\""
                        }
                      ],
                      "id": 3172,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "24008:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3176,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24008:27:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3177,
                  "nodeType": "ExpressionStatement",
                  "src": "24008:27:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 3179,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "24060:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3180,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "24060:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3178,
                      "name": "DebugUINT",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3432,
                      "src": "24050:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 3181,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24050:20:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3182,
                  "nodeType": "EmitStatement",
                  "src": "24045:25:1"
                },
                {
                  "expression": {
                    "id": 3186,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3183,
                      "name": "b",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2480,
                      "src": "24080:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "expression": {
                        "id": 3184,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "24085:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 3185,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "24085:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "24080:14:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3187,
                  "nodeType": "ExpressionStatement",
                  "src": "24080:14:1"
                }
              ]
            },
            "functionSelector": "1b9265b8",
            "id": 3189,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "pay",
            "nameLocation": "23940:3:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3164,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "23943:2:1"
            },
            "returnParameters": {
              "id": 3165,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "23963:0:1"
            },
            "scope": 3437,
            "src": "23931:170:1",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3218,
              "nodeType": "Block",
              "src": "24163:187:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3201,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 3197,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "24237:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3198,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "24237:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 3199,
                            "name": "clone",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2915,
                            "src": "24251:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_address_$",
                              "typeString": "function () returns (address)"
                            }
                          },
                          "id": 3200,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "24251:7:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "24237:21:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f7520617265206120636c6f6e652e",
                        "id": 3202,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "24260:18:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3a236d2e68a9bad30aa9cdf46e4547355f52856f4fc06d8cd21bcd2552cd6b34",
                          "typeString": "literal_string \"You are a clone.\""
                        },
                        "value": "You are a clone."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3a236d2e68a9bad30aa9cdf46e4547355f52856f4fc06d8cd21bcd2552cd6b34",
                          "typeString": "literal_string \"You are a clone.\""
                        }
                      ],
                      "id": 3196,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "24229:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3203,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24229:50:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3204,
                  "nodeType": "ExpressionStatement",
                  "src": "24229:50:1"
                },
                {
                  "expression": {
                    "id": 3207,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3205,
                      "name": "b",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2480,
                      "src": "24289:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 3206,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3191,
                      "src": "24294:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "24289:11:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3208,
                  "nodeType": "ExpressionStatement",
                  "src": "24289:11:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3215,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3191,
                        "src": "24336:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 3211,
                              "name": "clone",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2915,
                              "src": "24318:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_address_$",
                                "typeString": "function () returns (address)"
                              }
                            },
                            "id": 3212,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "24318:7:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 3210,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "24310:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 3209,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "24310:8:1",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 3213,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "24310:16:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 3214,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "24310:25:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 3216,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24310:33:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3217,
                  "nodeType": "ExpressionStatement",
                  "src": "24310:33:1"
                }
              ]
            },
            "functionSelector": "3f31c3d4",
            "id": 3219,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3194,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3193,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4816,
                  "src": "24151:12:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "24151:12:1"
              }
            ],
            "name": "cloneMoney",
            "nameLocation": "24115:10:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3192,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3191,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "24134:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3219,
                  "src": "24126:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3190,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "24126:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "24125:16:1"
            },
            "returnParameters": {
              "id": 3195,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "24163:0:1"
            },
            "scope": 3437,
            "src": "24106:244:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3227,
              "nodeType": "Block",
              "src": "24405:31:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 3224,
                      "name": "clone",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2915,
                      "src": "24422:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_address_$",
                        "typeString": "function () returns (address)"
                      }
                    },
                    "id": 3225,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24422:7:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 3223,
                  "id": 3226,
                  "nodeType": "Return",
                  "src": "24415:14:1"
                }
              ]
            },
            "functionSelector": "60c7c34a",
            "id": 3228,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "cloneAccount",
            "nameLocation": "24364:12:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3220,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "24376:2:1"
            },
            "returnParameters": {
              "id": 3223,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3222,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3228,
                  "src": "24396:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3221,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "24396:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "24395:9:1"
            },
            "scope": 3437,
            "src": "24355:81:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "constant": false,
            "functionSelector": "76795411",
            "id": 3230,
            "mutability": "mutable",
            "name": "wellnessCheckPrice",
            "nameLocation": "25010:18:1",
            "nodeType": "VariableDeclaration",
            "scope": 3437,
            "src": "24995:33:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 3229,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "24995:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 3283,
              "nodeType": "Block",
              "src": "25067:767:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3236,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 3234,
                          "name": "wellnessCheckPrice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3230,
                          "src": "25085:18:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 3235,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "25106:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "25085:22:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "506c656173652061646d696e73747261746520796f757220636f696e2e",
                        "id": 3237,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "25109:31:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a0801e060fb693f4b8d39f34979a010348cc2d891b54baf44247783e2e5c1248",
                          "typeString": "literal_string \"Please adminstrate your coin.\""
                        },
                        "value": "Please adminstrate your coin."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a0801e060fb693f4b8d39f34979a010348cc2d891b54baf44247783e2e5c1248",
                          "typeString": "literal_string \"Please adminstrate your coin.\""
                        }
                      ],
                      "id": 3233,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "25077:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3238,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25077:64:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3239,
                  "nodeType": "ExpressionStatement",
                  "src": "25077:64:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3244,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 3241,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "25251:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3242,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "25251:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 3243,
                          "name": "wellnessCheckPrice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3230,
                          "src": "25264:18:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "25251:31:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "506c656173652e",
                        "id": 3245,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "25284:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1b00b75cb00901a6e8f5beecd96ff1e82eb9ca0d4f0adc845cf4ee5848fc193b",
                          "typeString": "literal_string \"Please.\""
                        },
                        "value": "Please."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1b00b75cb00901a6e8f5beecd96ff1e82eb9ca0d4f0adc845cf4ee5848fc193b",
                          "typeString": "literal_string \"Please.\""
                        }
                      ],
                      "id": 3240,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "25243:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3246,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25243:51:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3247,
                  "nodeType": "ExpressionStatement",
                  "src": "25243:51:1"
                },
                {
                  "condition": {
                    "id": 3248,
                    "name": "brick",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2988,
                    "src": "25386:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3254,
                  "nodeType": "IfStatement",
                  "src": "25383:67:1",
                  "trueBody": {
                    "id": 3253,
                    "nodeType": "Block",
                    "src": "25393:57:1",
                    "statements": [
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "hexValue": "54686973206d656d6520636f696e207468696e6b732069742773206120627269636b2e",
                              "id": 3250,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "25410:37:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_dae7411b2e8bd8efe80fab9fc6390bb6f7e1208f684e2861df0abbf033567b91",
                                "typeString": "literal_string \"This meme coin thinks it's a brick.\""
                              },
                              "value": "This meme coin thinks it's a brick."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_dae7411b2e8bd8efe80fab9fc6390bb6f7e1208f684e2861df0abbf033567b91",
                                "typeString": "literal_string \"This meme coin thinks it's a brick.\""
                              }
                            ],
                            "id": 3249,
                            "name": "WelcomeMC",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2554,
                            "src": "25400:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory)"
                            }
                          },
                          "id": 3251,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "25400:48:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3252,
                        "nodeType": "EmitStatement",
                        "src": "25395:53:1"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "id": 3255,
                    "name": "closed",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2990,
                    "src": "25522:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3261,
                  "nodeType": "IfStatement",
                  "src": "25519:80:1",
                  "trueBody": {
                    "id": 3260,
                    "nodeType": "Block",
                    "src": "25529:70:1",
                    "statements": [
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "hexValue": "54686973206d656d6520636f696e207468696e6b73206974277320636c6f73656420666f7220627573696e6573732e",
                              "id": 3257,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "25546:49:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_4f336c4ed9ffa6c0fd5e23a3f3c3e4670c0ce70a0298db722c1581722d2ae75c",
                                "typeString": "literal_string \"This meme coin thinks it's closed for business.\""
                              },
                              "value": "This meme coin thinks it's closed for business."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_4f336c4ed9ffa6c0fd5e23a3f3c3e4670c0ce70a0298db722c1581722d2ae75c",
                                "typeString": "literal_string \"This meme coin thinks it's closed for business.\""
                              }
                            ],
                            "id": 3256,
                            "name": "WelcomeMC",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2554,
                            "src": "25536:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory)"
                            }
                          },
                          "id": 3258,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "25536:60:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3259,
                        "nodeType": "EmitStatement",
                        "src": "25531:65:1"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 3265,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 3262,
                        "name": "clone",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2915,
                        "src": "25611:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_address_$",
                          "typeString": "function () returns (address)"
                        }
                      },
                      "id": 3263,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "25611:7:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 3264,
                      "name": "cCA",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2514,
                      "src": "25622:3:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "25611:14:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3271,
                  "nodeType": "IfStatement",
                  "src": "25608:160:1",
                  "trueBody": {
                    "id": 3270,
                    "nodeType": "Block",
                    "src": "25627:141:1",
                    "statements": [
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "hexValue": "54686973206d656d6520636f696e2069732061637475616c6c79206120636c6f6e652e2042657420796f75206469646e2774206b6e6f7720746861742e",
                              "id": 3267,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "25656:63:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_657f87efd869dbce62f0324a9ae0c553cb3b5669a23a959ee738aeea48b15d1e",
                                "typeString": "literal_string \"This meme coin is actually a clone. Bet you didn't know that.\""
                              },
                              "value": "This meme coin is actually a clone. Bet you didn't know that."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_657f87efd869dbce62f0324a9ae0c553cb3b5669a23a959ee738aeea48b15d1e",
                                "typeString": "literal_string \"This meme coin is actually a clone. Bet you didn't know that.\""
                              }
                            ],
                            "id": 3266,
                            "name": "WelcomeMC",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2554,
                            "src": "25646:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory)"
                            }
                          },
                          "id": 3268,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "25646:74:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3269,
                        "nodeType": "EmitStatement",
                        "src": "25641:79:1"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 3273,
                        "name": "meme",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2508,
                        "src": "25787:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "expression": {
                          "id": 3274,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "25793:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3275,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "25793:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3272,
                      "name": "MCMM",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2494,
                      "src": "25782:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256)"
                      }
                    },
                    "id": 3276,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25782:21:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3277,
                  "nodeType": "EmitStatement",
                  "src": "25777:26:1"
                },
                {
                  "expression": {
                    "id": 3281,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3278,
                      "name": "b",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2480,
                      "src": "25813:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "expression": {
                        "id": 3279,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "25818:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 3280,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "25818:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "25813:14:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3282,
                  "nodeType": "ExpressionStatement",
                  "src": "25813:14:1"
                }
              ]
            },
            "functionSelector": "b4e51b7b",
            "id": 3284,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "sane",
            "nameLocation": "25043:4:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3231,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "25047:2:1"
            },
            "returnParameters": {
              "id": 3232,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "25067:0:1"
            },
            "scope": 3437,
            "src": "25034:800:1",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3302,
              "nodeType": "Block",
              "src": "25873:857:1",
              "statements": [
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "hexValue": "54686973206d656d6520636f696e2069732061637475616c6c79206120636c6f6e652e2042657420796f75206469646e2774206b6e6f7720746861742e",
                        "id": 3288,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "26522:63:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_657f87efd869dbce62f0324a9ae0c553cb3b5669a23a959ee738aeea48b15d1e",
                          "typeString": "literal_string \"This meme coin is actually a clone. Bet you didn't know that.\""
                        },
                        "value": "This meme coin is actually a clone. Bet you didn't know that."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_657f87efd869dbce62f0324a9ae0c553cb3b5669a23a959ee738aeea48b15d1e",
                          "typeString": "literal_string \"This meme coin is actually a clone. Bet you didn't know that.\""
                        }
                      ],
                      "id": 3287,
                      "name": "WelcomeMC",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2554,
                      "src": "26512:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 3289,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "26512:74:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3290,
                  "nodeType": "EmitStatement",
                  "src": "26507:79:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 3292,
                        "name": "meme",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2508,
                        "src": "26634:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "expression": {
                          "id": 3293,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "26640:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3294,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "26640:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3291,
                      "name": "MCMM",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2494,
                      "src": "26629:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256)"
                      }
                    },
                    "id": 3295,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "26629:21:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3296,
                  "nodeType": "EmitStatement",
                  "src": "26624:26:1"
                },
                {
                  "expression": {
                    "id": 3300,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3297,
                      "name": "b",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2480,
                      "src": "26709:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "expression": {
                        "id": 3298,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "26714:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 3299,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "26714:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "26709:14:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3301,
                  "nodeType": "ExpressionStatement",
                  "src": "26709:14:1"
                }
              ]
            },
            "functionSelector": "d18b34fc",
            "id": 3303,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "sane2",
            "nameLocation": "25848:5:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3285,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "25853:2:1"
            },
            "returnParameters": {
              "id": 3286,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "25873:0:1"
            },
            "scope": 3437,
            "src": "25839:891:1",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "constant": false,
            "id": 3305,
            "mutability": "mutable",
            "name": "ThisOrThatBucksPrice101",
            "nameLocation": "29462:23:1",
            "nodeType": "VariableDeclaration",
            "scope": 3437,
            "src": "29446:39:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 3304,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "29446:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 3328,
              "nodeType": "Block",
              "src": "31297:354:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3312,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 3309,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "31315:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3310,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "31315:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 3311,
                          "name": "cCA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2514,
                          "src": "31329:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "31315:17:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f7520646f206e6f7420686176652074686520706f77657220746f206368616e676520746865206675747572652c206f6e6c79204920646f2e",
                        "id": 3313,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "31334:60:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_00e8ab8508fb6962c5db034d5a5e9b799e8f99cc03885f7d1b02dea9abfbd0cf",
                          "typeString": "literal_string \"You do not have the power to change the future, only I do.\""
                        },
                        "value": "You do not have the power to change the future, only I do."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_00e8ab8508fb6962c5db034d5a5e9b799e8f99cc03885f7d1b02dea9abfbd0cf",
                          "typeString": "literal_string \"You do not have the power to change the future, only I do.\""
                        }
                      ],
                      "id": 3308,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "31307:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3314,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "31307:88:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3315,
                  "nodeType": "ExpressionStatement",
                  "src": "31307:88:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "hexValue": "506c656173652077656c636f6d65206f757220666972737420627269636b206f6620616c6c2074696d652c20627269636b656420627574206e6f74206120627269636b20627574207374696c6c206120627269636b2e",
                        "id": 3317,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "31416:88:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d26612ae1e7c1806f4fd4ef4cc2d38df0fc687ae4a0c00a7b70a415b470fc061",
                          "typeString": "literal_string \"Please welcome our first brick of all time, bricked but not a brick but still a brick.\""
                        },
                        "value": "Please welcome our first brick of all time, bricked but not a brick but still a brick."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_d26612ae1e7c1806f4fd4ef4cc2d38df0fc687ae4a0c00a7b70a415b470fc061",
                          "typeString": "literal_string \"Please welcome our first brick of all time, bricked but not a brick but still a brick.\""
                        }
                      ],
                      "id": 3316,
                      "name": "WelcomeMC",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2554,
                      "src": "31406:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 3318,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "31406:99:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3319,
                  "nodeType": "EmitStatement",
                  "src": "31401:104:1"
                },
                {
                  "expression": {
                    "id": 3322,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3320,
                      "name": "brick",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2988,
                      "src": "31511:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 3321,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "31519:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "31511:13:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3323,
                  "nodeType": "ExpressionStatement",
                  "src": "31511:13:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "hexValue": "4920616d20616c736f206c6561726e696e6720746861742074686973206973206e6f742074686520666972737420627269636b206f6620616c6c2074696d652e204f6b61792c20746865726520796f7520686176652069742c20666f6c6b732e",
                        "id": 3325,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "31545:98:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c59950874ef5aadb70d890cc161052efad153a50a9ad48e36d1d06f21bcf1dab",
                          "typeString": "literal_string \"I am also learning that this is not the first brick of all time. Okay, there you have it, folks.\""
                        },
                        "value": "I am also learning that this is not the first brick of all time. Okay, there you have it, folks."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c59950874ef5aadb70d890cc161052efad153a50a9ad48e36d1d06f21bcf1dab",
                          "typeString": "literal_string \"I am also learning that this is not the first brick of all time. Okay, there you have it, folks.\""
                        }
                      ],
                      "id": 3324,
                      "name": "WelcomeMC",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2554,
                      "src": "31535:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 3326,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "31535:109:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3327,
                  "nodeType": "EmitStatement",
                  "src": "31530:114:1"
                }
              ]
            },
            "functionSelector": "6c3c84f7",
            "id": 3329,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "unbrick",
            "nameLocation": "31278:7:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3306,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "31285:2:1"
            },
            "returnParameters": {
              "id": 3307,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "31297:0:1"
            },
            "scope": 3437,
            "src": "31269:382:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3355,
              "nodeType": "Block",
              "src": "32854:84:1",
              "statements": [
                {
                  "expression": {
                    "components": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 3352,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "components": [
                                    {
                                      "id": 3341,
                                      "name": "_a",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3331,
                                      "src": "32892:2:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string memory"
                                      }
                                    }
                                  ],
                                  "id": 3342,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "32891:4:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "expression": {
                                  "id": 3339,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "32874:3:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 3340,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "32874:16:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 3343,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "32874:22:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 3338,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -8,
                            "src": "32864:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 3344,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "32864:33:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "components": [
                                    {
                                      "id": 3348,
                                      "name": "_b",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3333,
                                      "src": "32929:2:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string memory"
                                      }
                                    }
                                  ],
                                  "id": 3349,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "32928:4:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "expression": {
                                  "id": 3346,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "32911:3:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 3347,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "32911:16:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 3350,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "32911:22:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 3345,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -8,
                            "src": "32901:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 3351,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "32901:33:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "32864:70:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "id": 3353,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "32863:72:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 3337,
                  "id": 3354,
                  "nodeType": "Return",
                  "src": "32856:79:1"
                }
              ]
            },
            "functionSelector": "bed34bba",
            "id": 3356,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "compareStrings",
            "nameLocation": "32776:14:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3334,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3331,
                  "mutability": "mutable",
                  "name": "_a",
                  "nameLocation": "32805:2:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3356,
                  "src": "32791:16:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3330,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "32791:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3333,
                  "mutability": "mutable",
                  "name": "_b",
                  "nameLocation": "32823:2:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3356,
                  "src": "32809:16:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3332,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "32809:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "32790:36:1"
            },
            "returnParameters": {
              "id": 3337,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3336,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3356,
                  "src": "32848:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3335,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "32848:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "32847:6:1"
            },
            "scope": 3437,
            "src": "32767:171:1",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3374,
              "nodeType": "Block",
              "src": "34050:44:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 3369,
                            "name": "_a",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3358,
                            "src": "34083:2:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "id": 3370,
                            "name": "_b",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3360,
                            "src": "34087:2:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "expression": {
                            "id": 3367,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "34066:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 3368,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "34066:16:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 3371,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "34066:24:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 3366,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "34059:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                        "typeString": "type(string storage pointer)"
                      },
                      "typeName": {
                        "id": 3365,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "34059:6:1",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 3372,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "34059:32:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 3364,
                  "id": 3373,
                  "nodeType": "Return",
                  "src": "34052:39:1"
                }
              ]
            },
            "functionSelector": "266001d3",
            "id": 3375,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "concatenate",
            "nameLocation": "33965:11:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3361,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3358,
                  "mutability": "mutable",
                  "name": "_a",
                  "nameLocation": "33991:2:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3375,
                  "src": "33977:16:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3357,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "33977:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3360,
                  "mutability": "mutable",
                  "name": "_b",
                  "nameLocation": "34009:2:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3375,
                  "src": "33995:16:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3359,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "33995:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "33976:36:1"
            },
            "returnParameters": {
              "id": 3364,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3363,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3375,
                  "src": "34035:13:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3362,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "34035:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "34034:15:1"
            },
            "scope": 3437,
            "src": "33956:138:1",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          },
          {
            "constant": false,
            "id": 3377,
            "mutability": "mutable",
            "name": "currentSeed",
            "nameLocation": "34228:11:1",
            "nodeType": "VariableDeclaration",
            "scope": 3437,
            "src": "34212:27:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 3376,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "34212:7:1",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "private"
          },
          {
            "anonymous": false,
            "id": 3381,
            "name": "Seed",
            "nameLocation": "34637:4:1",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 3380,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3379,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3381,
                  "src": "34642:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3378,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "34642:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "34641:9:1"
            },
            "src": "34631:20:1"
          },
          {
            "body": {
              "id": 3388,
              "nodeType": "Block",
              "src": "34727:39:1",
              "statements": [
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 3385,
                        "name": "currentSeed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3377,
                        "src": "34747:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 3384,
                      "name": "Seed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3381,
                      "src": "34742:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 3386,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "34742:17:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3387,
                  "nodeType": "EmitStatement",
                  "src": "34737:22:1"
                }
              ]
            },
            "functionSelector": "39e7357c",
            "id": 3389,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getSeed",
            "nameLocation": "34708:7:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3382,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "34715:2:1"
            },
            "returnParameters": {
              "id": 3383,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "34727:0:1"
            },
            "scope": 3437,
            "src": "34699:67:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3396,
              "nodeType": "Block",
              "src": "34810:100:1",
              "statements": [
                {
                  "expression": {
                    "id": 3394,
                    "name": "p",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2500,
                    "src": "34902:1:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 3393,
                  "id": 3395,
                  "nodeType": "Return",
                  "src": "34895:8:1"
                }
              ]
            },
            "functionSelector": "8b8fbd92",
            "id": 3397,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "P",
            "nameLocation": "34780:1:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3390,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "34781:2:1"
            },
            "returnParameters": {
              "id": 3393,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3392,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3397,
                  "src": "34801:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3391,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "34801:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "34800:9:1"
            },
            "scope": 3437,
            "src": "34771:139:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3407,
              "nodeType": "Block",
              "src": "35843:37:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 3403,
                          "name": "clone",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2915,
                          "src": "35865:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_address_$",
                            "typeString": "function () returns (address)"
                          }
                        },
                        "id": 3404,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "35865:7:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 3402,
                      "name": "clonesearch",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2931,
                      "src": "35853:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_bool_$",
                        "typeString": "function (address) returns (bool)"
                      }
                    },
                    "id": 3405,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "35853:20:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3406,
                  "nodeType": "ExpressionStatement",
                  "src": "35853:20:1"
                }
              ]
            },
            "id": 3408,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "clownsearch",
            "nameLocation": "35804:11:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3398,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "35815:2:1"
            },
            "returnParameters": {
              "id": 3401,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3400,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3408,
                  "src": "35834:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3399,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "35834:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "35833:9:1"
            },
            "scope": 3437,
            "src": "35795:85:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 3423,
              "nodeType": "Block",
              "src": "35911:151:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 3411,
                      "name": "clownsearch",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3408,
                      "src": "35921:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_address_$",
                        "typeString": "function () returns (address)"
                      }
                    },
                    "id": 3412,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "35921:13:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3413,
                  "nodeType": "ExpressionStatement",
                  "src": "35921:13:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "hexValue": "44454255473a",
                        "id": 3415,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "35955:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_299b517c297ca7ec17e564092c97be2e83834438d3c691fa6024da425e512fc9",
                          "typeString": "literal_string \"DEBUG:\""
                        },
                        "value": "DEBUG:"
                      },
                      {
                        "hexValue": "636c6f776e7365617263682829207761732063616c6c656420616e6420776173206e6f742070617961626c652e2059696b65732e",
                        "id": 3416,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "35965:54:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6ca35dbf6bec1363791eae224f86d811ede4445ed049e114edce84147805980f",
                          "typeString": "literal_string \"clownsearch() was called and was not payable. Yikes.\""
                        },
                        "value": "clownsearch() was called and was not payable. Yikes."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_299b517c297ca7ec17e564092c97be2e83834438d3c691fa6024da425e512fc9",
                          "typeString": "literal_string \"DEBUG:\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6ca35dbf6bec1363791eae224f86d811ede4445ed049e114edce84147805980f",
                          "typeString": "literal_string \"clownsearch() was called and was not payable. Yikes.\""
                        }
                      ],
                      "id": 3414,
                      "name": "HWarn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2907,
                      "src": "35949:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory)"
                      }
                    },
                    "id": 3417,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "35949:71:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3418,
                  "nodeType": "EmitStatement",
                  "src": "35944:76:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 3420,
                        "name": "myNOOPICO",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2917,
                        "src": "36045:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3419,
                      "name": "DebugUINT",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3432,
                      "src": "36035:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 3421,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "36035:20:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3422,
                  "nodeType": "EmitStatement",
                  "src": "36030:25:1"
                }
              ]
            },
            "functionSelector": "588ee29b",
            "id": 3424,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "debug",
            "nameLocation": "35894:5:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3409,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "35899:2:1"
            },
            "returnParameters": {
              "id": 3410,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "35911:0:1"
            },
            "scope": 3437,
            "src": "35885:177:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "anonymous": false,
            "id": 3428,
            "name": "Debug",
            "nameLocation": "36073:5:1",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 3427,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3426,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_meme",
                  "nameLocation": "36086:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3428,
                  "src": "36079:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3425,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "36079:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "36078:14:1"
            },
            "src": "36067:26:1"
          },
          {
            "anonymous": false,
            "id": 3432,
            "name": "DebugUINT",
            "nameLocation": "36170:9:1",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 3431,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3430,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "defaultValue",
                  "nameLocation": "36188:12:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3432,
                  "src": "36180:20:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3429,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "36180:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "36179:22:1"
            },
            "src": "36164:38:1"
          },
          {
            "anonymous": false,
            "id": 3436,
            "name": "DebugAddress",
            "nameLocation": "36225:12:1",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 3435,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3434,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "36246:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3436,
                  "src": "36238:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3433,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "36238:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "36237:18:1"
            },
            "src": "36219:37:1"
          }
        ],
        "scope": 3438,
        "src": "2510:44847:1",
        "usedErrors": []
      }
    ],
    "src": "1771:46577:1"
  },
  "bytecode": "",
  "bytecodeSha1": "362994dcc6e2b9ff0703ff2867f062d4b03945cd",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 100
    },
    "version": "0.8.9+commit.e5eed63a"
  },
  "contractName": "CultureCoin",
  "coverageMap": {
    "branches": {
      "1": {
        "CultureCoin.cloneMoney": {
          "186": [
            24237,
            24258,
            true
          ]
        },
        "CultureCoin.close": {
          "187": [
            20208,
            20214,
            true
          ],
          "188": [
            20263,
            20270,
            true
          ],
          "189": [
            20327,
            20338,
            true
          ],
          "190": [
            20391,
            20408,
            true
          ]
        },
        "CultureCoin.dexCCIn": {
          "216": [
            15399,
            15406,
            true
          ],
          "217": [
            15473,
            15486,
            true
          ],
          "218": [
            15735,
            15754,
            true
          ]
        },
        "CultureCoin.dexCCInFrom": {
          "198": [
            14574,
            14581,
            true
          ],
          "199": [
            14650,
            14663,
            true
          ],
          "200": [
            14695,
            14713,
            true
          ],
          "201": [
            14836,
            14852,
            true
          ],
          "202": [
            15224,
            15243,
            true
          ]
        },
        "CultureCoin.dexXMTSPIn": {
          "195": [
            16030,
            16037,
            true
          ],
          "196": [
            16104,
            16120,
            true
          ],
          "197": [
            16340,
            16361,
            true
          ]
        },
        "CultureCoin.flagMemeCoin": {
          "203": [
            21400,
            21417,
            true
          ]
        },
        "CultureCoin.initialize": {
          "215": [
            2830,
            2848,
            true
          ]
        },
        "CultureCoin.pay": {
          "184": [
            23981,
            23987,
            true
          ],
          "185": [
            24016,
            24023,
            true
          ]
        },
        "CultureCoin.sane": {
          "208": [
            25085,
            25107,
            true
          ],
          "209": [
            25251,
            25282,
            true
          ],
          "210": [
            25386,
            25391,
            false
          ],
          "211": [
            25522,
            25528,
            false
          ],
          "212": [
            25611,
            25625,
            false
          ]
        },
        "CultureCoin.seed": {
          "213": [
            18272,
            18278,
            true
          ],
          "214": [
            18594,
            18603,
            false
          ]
        },
        "CultureCoin.setAddon": {
          "193": [
            14338,
            14355,
            true
          ]
        },
        "CultureCoin.setDexCCRate": {
          "207": [
            16631,
            16648,
            true
          ]
        },
        "CultureCoin.setDexXMTSPRate": {
          "191": [
            16496,
            16513,
            true
          ]
        },
        "CultureCoin.setMaxXOut": {
          "221": [
            15885,
            15902,
            true
          ]
        },
        "CultureCoin.setRewardPerHour": {
          "194": [
            4919,
            4936,
            true
          ]
        },
        "CultureCoin.stake": {
          "204": [
            5350,
            5356,
            true
          ],
          "205": [
            5401,
            5408,
            true
          ],
          "206": [
            5544,
            5580,
            true
          ]
        },
        "CultureCoin.unbrick": {
          "192": [
            31315,
            31332,
            true
          ]
        },
        "CultureCoin.withdrawStake": {
          "219": [
            6114,
            6120,
            true
          ],
          "220": [
            6165,
            6172,
            true
          ]
        }
      },
      "12": {},
      "13": {
        "CultureCoin.initialize": {
          "233": [
            2369,
            2382,
            true
          ],
          "234": [
            2369,
            2417,
            true
          ]
        },
        "ReentrancyGuardUpgradeable.__ReentrancyGuard_init_unchained": {
          "235": [
            2952,
            2965,
            true
          ]
        }
      },
      "14": {
        "CultureCoin.withdrawStake": {
          "236": [
            2569,
            2588,
            true
          ]
        }
      },
      "15": {
        "ERC20Upgradeable._approve": {
          "223": [
            10587,
            10606,
            true
          ],
          "224": [
            10665,
            10686,
            true
          ]
        },
        "ERC20Upgradeable._burn": {
          "230": [
            9540,
            9561,
            true
          ],
          "231": [
            9731,
            9755,
            true
          ]
        },
        "ERC20Upgradeable._mint": {
          "232": [
            8831,
            8852,
            true
          ]
        },
        "ERC20Upgradeable._spendAllowance": {
          "225": [
            11303,
            11340,
            false
          ],
          "226": [
            11364,
            11390,
            true
          ]
        },
        "ERC20Upgradeable._transfer": {
          "227": [
            7947,
            7965,
            true
          ],
          "228": [
            8025,
            8041,
            true
          ],
          "229": [
            8196,
            8217,
            true
          ]
        },
        "ERC20Upgradeable.decreaseAllowance": {
          "222": [
            7148,
            7183,
            true
          ]
        }
      },
      "16": {},
      "17": {},
      "18": {},
      "2": {},
      "20": {},
      "5": {
        "Stakeable._stake": {
          "237": [
            3799,
            3810,
            true
          ],
          "238": [
            4211,
            4221,
            false
          ]
        },
        "Stakeable._withdrawStake": {
          "239": [
            6504,
            6534,
            true
          ]
        }
      }
    },
    "statements": {
      "1": {
        "CultureCoin.B": {
          "2": [
            8000,
            8008
          ]
        },
        "CultureCoin.P": {
          "5": [
            34895,
            34903
          ]
        },
        "CultureCoin.clone": {
          "13": [
            17317,
            17327
          ]
        },
        "CultureCoin.cloneAccount": {
          "45": [
            24415,
            24429
          ]
        },
        "CultureCoin.cloneMoney": {
          "28": [
            24229,
            24279
          ],
          "29": [
            24289,
            24300
          ],
          "30": [
            24310,
            24343
          ]
        },
        "CultureCoin.clonesearch": {
          "14": [
            17783,
            17797
          ],
          "15": [
            17807,
            17819
          ]
        },
        "CultureCoin.close": {
          "32": [
            20200,
            20245
          ],
          "33": [
            20255,
            20309
          ],
          "34": [
            20319,
            20373
          ],
          "35": [
            20383,
            20423
          ],
          "36": [
            20778,
            20791
          ],
          "37": [
            20801,
            20879
          ]
        },
        "CultureCoin.clownsearch": {
          "153": [
            35853,
            35873
          ]
        },
        "CultureCoin.compareStrings": {
          "95": [
            32856,
            32935
          ]
        },
        "CultureCoin.concatenate": {
          "24": [
            34052,
            34091
          ]
        },
        "CultureCoin.debug": {
          "42": [
            35921,
            35934
          ],
          "43": [
            35944,
            36020
          ],
          "44": [
            36030,
            36055
          ]
        },
        "CultureCoin.dexCCIn": {
          "115": [
            15391,
            15455
          ],
          "116": [
            15465,
            15500
          ],
          "117": [
            15575,
            15601
          ],
          "118": [
            15616,
            15632
          ],
          "119": [
            15642,
            15665
          ],
          "120": [
            15676,
            15717
          ],
          "121": [
            15727,
            15779
          ],
          "122": [
            15790,
            15808
          ]
        },
        "CultureCoin.dexCCInFrom": {
          "64": [
            14566,
            14632
          ],
          "65": [
            14642,
            14677
          ],
          "66": [
            14687,
            14750
          ],
          "67": [
            14828,
            14874
          ],
          "68": [
            14884,
            14907
          ],
          "69": [
            15016,
            15032
          ],
          "70": [
            15042,
            15065
          ],
          "71": [
            15075,
            15125
          ],
          "72": [
            15216,
            15268
          ],
          "73": [
            15278,
            15296
          ]
        },
        "CultureCoin.dexXMTSPIn": {
          "56": [
            16022,
            16086
          ],
          "57": [
            16096,
            16134
          ],
          "58": [
            16213,
            16262
          ],
          "59": [
            16273,
            16287
          ],
          "60": [
            16298,
            16322
          ],
          "61": [
            16332,
            16386
          ],
          "62": [
            16393,
            16411
          ]
        },
        "CultureCoin.flagMemeCoin": {
          "74": [
            21392,
            21480
          ],
          "75": [
            21490,
            21513
          ]
        },
        "CultureCoin.getAddon": {
          "4": [
            14231,
            14253
          ]
        },
        "CultureCoin.getCoin": {
          "20": [
            21276,
            21317
          ]
        },
        "CultureCoin.getDexCCRate": {
          "6": [
            17016,
            17032
          ]
        },
        "CultureCoin.getDexXMTSPRate": {
          "8": [
            16920,
            16939
          ]
        },
        "CultureCoin.getRewardPerHour": {
          "7": [
            5072,
            5092
          ]
        },
        "CultureCoin.getSeed": {
          "27": [
            34737,
            34759
          ]
        },
        "CultureCoin.getXAllowance": {
          "25": [
            17107,
            17132
          ]
        },
        "CultureCoin.iRegister": {
          "158": [
            19667,
            19727
          ],
          "159": [
            19783,
            19805
          ],
          "160": [
            19861,
            19884
          ],
          "161": [
            19898,
            19928
          ],
          "162": [
            19942,
            19964
          ],
          "163": [
            19978,
            20028
          ],
          "164": [
            20059,
            20110
          ]
        },
        "CultureCoin.initialize": {
          "98": [
            2822,
            2865
          ],
          "99": [
            2875,
            2908
          ],
          "100": [
            2918,
            2940
          ],
          "101": [
            2950,
            2969
          ],
          "102": [
            3039,
            3063
          ],
          "103": [
            3145,
            3190
          ],
          "104": [
            3200,
            3232
          ],
          "105": [
            3243,
            3335
          ],
          "106": [
            3401,
            3411
          ],
          "107": [
            3566,
            3576
          ],
          "108": [
            3733,
            3749
          ],
          "109": [
            4125,
            4153
          ],
          "110": [
            4187,
            4212
          ],
          "111": [
            4249,
            4273
          ],
          "112": [
            4414,
            4435
          ],
          "113": [
            4573,
            4593
          ]
        },
        "CultureCoin.pay": {
          "16": [
            23973,
            23998
          ],
          "17": [
            24008,
            24035
          ],
          "18": [
            24045,
            24070
          ],
          "19": [
            24080,
            24094
          ]
        },
        "CultureCoin.register": {
          "38": [
            21108,
            21134
          ],
          "39": [
            21163,
            21177
          ]
        },
        "CultureCoin.sane": {
          "85": [
            25077,
            25141
          ],
          "86": [
            25243,
            25294
          ],
          "87": [
            25395,
            25448
          ],
          "88": [
            25531,
            25596
          ],
          "89": [
            25641,
            25720
          ],
          "90": [
            25777,
            25803
          ]
        },
        "CultureCoin.sane2": {
          "96": [
            26507,
            26586
          ]
        },
        "CultureCoin.seed": {
          "91": [
            18264,
            18308
          ],
          "92": [
            18619,
            18658
          ],
          "93": [
            18689,
            18740
          ],
          "94": [
            18760,
            18774
          ]
        },
        "CultureCoin.setAddon": {
          "50": [
            14330,
            14371
          ],
          "51": [
            14381,
            14403
          ]
        },
        "CultureCoin.setDexCCRate": {
          "83": [
            16623,
            16649
          ],
          "84": [
            16659,
            16681
          ]
        },
        "CultureCoin.setDexRates": {
          "127": [
            16776,
            16806
          ],
          "128": [
            16816,
            16840
          ]
        },
        "CultureCoin.setDexXMTSPRate": {
          "40": [
            16488,
            16514
          ],
          "41": [
            16524,
            16552
          ]
        },
        "CultureCoin.setMaxXOut": {
          "133": [
            15877,
            15903
          ],
          "134": [
            15913,
            15931
          ]
        },
        "CultureCoin.setRewardPerHour": {
          "54": [
            4911,
            4951
          ],
          "55": [
            4961,
            4991
          ]
        },
        "CultureCoin.stake": {
          "78": [
            5342,
            5383
          ],
          "79": [
            5393,
            5471
          ],
          "80": [
            5536,
            5615
          ],
          "81": [
            5626,
            5641
          ]
        },
        "CultureCoin.unbrick": {
          "46": [
            31307,
            31395
          ],
          "47": [
            31401,
            31505
          ],
          "48": [
            31511,
            31524
          ],
          "49": [
            31530,
            31644
          ]
        },
        "CultureCoin.withdrawStake": {
          "129": [
            6106,
            6147
          ],
          "130": [
            6157,
            6235
          ],
          "131": [
            6316,
            6369
          ],
          "132": [
            6503,
            6555
          ]
        }
      },
      "12": {},
      "13": {
        "Initializable._isConstructor": {
          "97": [
            3101,
            3153
          ]
        }
      },
      "14": {
        "ReentrancyGuardUpgradeable.__ReentrancyGuard_init": {
          "166": [
            1923,
            1957
          ]
        },
        "ReentrancyGuardUpgradeable.__ReentrancyGuard_init_unchained": {
          "183": [
            2050,
            2072
          ]
        }
      },
      "15": {
        "ERC20Upgradeable.__ERC20_init": {
          "165": [
            2218,
            2256
          ]
        },
        "ERC20Upgradeable.__ERC20_init_unchained": {
          "181": [
            2381,
            2394
          ],
          "182": [
            2404,
            2421
          ]
        },
        "ERC20Upgradeable._approve": {
          "135": [
            10579,
            10647
          ],
          "136": [
            10657,
            10725
          ],
          "137": [
            10736,
            10772
          ],
          "138": [
            10782,
            10819
          ]
        },
        "ERC20Upgradeable._burn": {
          "148": [
            9532,
            9599
          ],
          "149": [
            9723,
            9794
          ],
          "150": [
            9828,
            9872
          ],
          "151": [
            9892,
            9914
          ],
          "152": [
            9925,
            9967
          ]
        },
        "ERC20Upgradeable._mint": {
          "167": [
            8823,
            8888
          ],
          "168": [
            8959,
            8981
          ],
          "169": [
            8991,
            9019
          ],
          "170": [
            9029,
            9071
          ]
        },
        "ERC20Upgradeable._spendAllowance": {
          "139": [
            11356,
            11424
          ],
          "140": [
            11466,
            11517
          ]
        },
        "ERC20Upgradeable._transfer": {
          "141": [
            7939,
            8007
          ],
          "142": [
            8017,
            8081
          ],
          "143": [
            8188,
            8260
          ],
          "144": [
            8294,
            8332
          ],
          "145": [
            8352,
            8375
          ],
          "146": [
            8386,
            8417
          ],
          "147": [
            8428,
            8465
          ]
        },
        "ERC20Upgradeable.allowance": {
          "114": [
            4421,
            4455
          ]
        },
        "ERC20Upgradeable.approve": {
          "11": [
            4907,
            4939
          ],
          "12": [
            4949,
            4960
          ]
        },
        "ERC20Upgradeable.balanceOf": {
          "3": [
            3838,
            3863
          ]
        },
        "ERC20Upgradeable.decimals": {
          "1": [
            3505,
            3514
          ]
        },
        "ERC20Upgradeable.decreaseAllowance": {
          "76": [
            7140,
            7225
          ],
          "77": [
            7259,
            7319
          ]
        },
        "ERC20Upgradeable.increaseAllowance": {
          "26": [
            6352,
            6416
          ]
        },
        "ERC20Upgradeable.name": {
          "9": [
            2572,
            2584
          ]
        },
        "ERC20Upgradeable.symbol": {
          "63": [
            2785,
            2799
          ]
        },
        "ERC20Upgradeable.totalSupply": {
          "0": [
            3661,
            3680
          ]
        },
        "ERC20Upgradeable.transfer": {
          "82": [
            4199,
            4227
          ]
        },
        "ERC20Upgradeable.transferFrom": {
          "21": [
            5712,
            5750
          ],
          "22": [
            5760,
            5787
          ],
          "23": [
            5797,
            5808
          ]
        }
      },
      "16": {},
      "17": {
        "ERC20BurnableUpgradeable.burn": {
          "31": [
            903,
            930
          ]
        },
        "ERC20BurnableUpgradeable.burnFrom": {
          "52": [
            1319,
            1365
          ],
          "53": [
            1375,
            1397
          ]
        }
      },
      "18": {},
      "2": {},
      "20": {
        "ContextUpgradeable._msgSender": {
          "10": [
            922,
            939
          ]
        }
      },
      "5": {
        "Stakeable._addStakeholder": {
          "178": [
            3130,
            3149
          ],
          "179": [
            3329,
            3366
          ],
          "180": [
            3417,
            3443
          ]
        },
        "Stakeable._stake": {
          "154": [
            3791,
            3835
          ],
          "155": [
            4490,
            4525
          ],
          "156": [
            4663,
            4743
          ],
          "157": [
            4805,
            4854
          ]
        },
        "Stakeable._withdrawStake": {
          "172": [
            6496,
            6589
          ],
          "173": [
            6794,
            6846
          ],
          "174": [
            6975,
            7028
          ],
          "175": [
            7118,
            7194
          ],
          "176": [
            7245,
            7315
          ],
          "177": [
            7342,
            7362
          ]
        },
        "Stakeable.calculateStakeReward": {
          "171": [
            5748,
            5845
          ]
        },
        "Stakeable.hasStake": {
          "123": [
            8098,
            8143
          ],
          "124": [
            8156,
            8216
          ],
          "125": [
            8000,
            8006
          ],
          "126": [
            8279,
            8318
          ]
        }
      }
    }
  },
  "dependencies": [
    "ContextUpgradeable",
    "CultureCoinWrapper",
    "ERC20BurnableUpgradeable",
    "ERC20Upgradeable",
    "IERC20MetadataUpgradeable",
    "IERC20Upgradeable",
    "Initializable",
    "Receiver",
    "ReentrancyGuardUpgradeable",
    "Stakeable"
  ],
  "deployedBytecode": "6080604052600436106200038b5760003560e01c806378182d0311620001d7578063d18b34fc1162000101578063e73e14bf116200009c578063e73e14bf1462000a76578063ebb6be1c1462000aaa578063ebef4f0e1462000ac2578063eda982991462000ada578063f18e673d1462000af2578063f1fdf4691462000b17578063fa1449641462000b3c578063fac70e231462000b6157600080fd5b8063d18b34fc146200099f578063da35a26f14620009a9578063dd62ed3e14620009ce578063df56b49014620009f3578063e2903f9e1462000a0a578063e2c50b4b1462000a22578063e3f56af41462000a39578063e51c89221462000a5e57600080fd5b8063a45446481162000172578063a45446481462000892578063a457c2d714620008b7578063a694fc3a14620008dc578063a9059cbb1462000901578063b19a207f1462000926578063b4e51b7b146200094b578063b7a7dc5c1462000955578063bed34bba146200097a57600080fd5b806378182d03146200078c57806379cc679014620007a45780638297f29f14620007c95780638761dc5f14620008065780638b8fbd92146200082b578063935418fc146200084b57806395d89b4114620008555780639bc255f8146200086d57600080fd5b80633f31c3d411620002b9578063597e1fb51162000254578063597e1fb5146200069457806360c7c34a14620006b55780636141435814620006cd5780636a35205e14620006e55780636c3c84f714620006fd5780636d714b68146200071557806370a08231146200073a57806376795411146200077457600080fd5b80633f31c3d414620005bc57806342966c6814620005e157806343d726d614620006065780634409559a146200061e5780634420e486146200064057806344874f4a1462000657578063495057be146200046d578063588ee29b146200067c57600080fd5b8063266001d3116200032a578063266001d314620004d957806329722a8614620004fe578063305601bc1462000516578063313ce567146200052e57806332e7c5bf146200054c57806339509351146200056357806339e7357c14620005885780633e9d5e0e14620005a057600080fd5b806306fdde031462000390578063095ea7b314620003c057806309ed460714620003f6578063179b7742146200041d57806318160ddd14620004425780631b9265b814620004635780632017fb74146200046f57806323b872dd14620004b4575b600080fd5b3480156200039d57600080fd5b50620003a862000b78565b604051620003b79190620033a6565b60405180910390f35b348015620003cd57600080fd5b50620003e5620003df366004620033df565b62000c12565b6040519015158152602001620003b7565b3480156200040357600080fd5b506200040e62000c2c565b604051620003b791906200340c565b3480156200042a57600080fd5b50620003e56200043c36600462003420565b62000c3b565b3480156200044f57600080fd5b506035545b604051908152602001620003b7565b6200046d62000c5f565b005b3480156200047c57600080fd5b50620004946200048e366004620034e9565b62000d34565b604080516001600160a01b039093168352602083019190915201620003b7565b348015620004c157600080fd5b50620003e5620004d33660046200352a565b62000d8b565b348015620004e657600080fd5b50620003a8620004f83660046200356b565b62000db3565b3480156200050b57600080fd5b506200045460eb5481565b3480156200052357600080fd5b506200045462000de1565b3480156200053b57600080fd5b5060405160128152602001620003b7565b3480156200055957600080fd5b5060cd5462000454565b3480156200057057600080fd5b50620003e562000582366004620033df565b62000dfa565b3480156200059557600080fd5b506200046d62000e22565b348015620005ad57600080fd5b5060ea54620003e59060ff1681565b348015620005c957600080fd5b506200046d620005db366004620035d6565b62000e6b565b348015620005ee57600080fd5b506200046d62000600366004620035d6565b62000f5b565b3480156200061357600080fd5b506200046d62000f6a565b3480156200062b57600080fd5b5060d5546200040e906001600160a01b031681565b6200046d6200065136600462003420565b6200114d565b3480156200066457600080fd5b506200046d62000676366004620035d6565b620011a2565b3480156200068957600080fd5b506200046d620011c1565b348015620006a157600080fd5b5060ea54620003e590610100900460ff1681565b348015620006c257600080fd5b506200040e620012a3565b348015620006da57600080fd5b506200045460995481565b348015620006f257600080fd5b506200045460e35481565b3480156200070a57600080fd5b506200046d620012af565b3480156200072257600080fd5b506200046d6200073436600462003601565b62001474565b3480156200074757600080fd5b50620004546200075936600462003420565b6001600160a01b031660009081526033602052604090205490565b3480156200078157600080fd5b506200045460ec5481565b3480156200079957600080fd5b506200045460e25481565b348015620007b157600080fd5b506200046d620007c3366004620033df565b620014e9565b348015620007d657600080fd5b50620003e5620007e836600462003420565b6001600160a01b0316600090815260e8602052604090205460ff1690565b3480156200081357600080fd5b506200046d62000825366004620035d6565b62001506565b3480156200083857600080fd5b5060ce546001600160a01b03166200040e565b6200045462001554565b3480156200086257600080fd5b50620003a86200166c565b3480156200087a57600080fd5b50620004546200088c366004620033df565b6200167d565b3480156200089f57600080fd5b506200046d620008b1366004620034e9565b620018dd565b348015620008c457600080fd5b50620003e5620008d6366004620033df565b62001996565b348015620008e957600080fd5b506200046d620008fb366004620035d6565b62001a17565b3480156200090e57600080fd5b50620003e562000920366004620033df565b62001b3c565b3480156200093357600080fd5b506200046d62000945366004620035d6565b62001b4c565b6200046d62001b69565b3480156200096257600080fd5b506200040e6200097436600462003639565b62001d6c565b3480156200098757600080fd5b50620003e5620009993660046200356b565b62001eb7565b6200046d62001f14565b348015620009b657600080fd5b506200046d620009c8366004620036a9565b62001f32565b348015620009db57600080fd5b5062000454620009ed366004620036cf565b62002164565b34801562000a0057600080fd5b5060e35462000454565b34801562000a1757600080fd5b506200045460e75481565b34801562000a2f57600080fd5b5060995462000454565b34801562000a4657600080fd5b506200045462000a58366004620035d6565b6200218f565b34801562000a6b57600080fd5b506200045460cc5481565b34801562000a8357600080fd5b5062000a9b62000a9536600462003420565b620022d6565b604051620003b79190620036fe565b34801562000ab757600080fd5b506200045460e65481565b34801562000acf57600080fd5b506200045460e45481565b34801562000ae757600080fd5b506200045460e55481565b34801562000aff57600080fd5b506200046d62000b1136600462003781565b62002492565b34801562000b2457600080fd5b506200045462000b3636600462003781565b620024a8565b34801562000b4957600080fd5b506200046d62000b5b366004620035d6565b6200256e565b34801562000b6e57600080fd5b5060e25462000454565b60606036805462000b8990620037a4565b80601f016020809104026020016040519081016040528092919081815260200182805462000bb790620037a4565b801562000c085780601f1062000bdc5761010080835404028352916020019162000c08565b820191906000526020600020905b81548152906001019060200180831162000bea57829003601f168201915b5050505050905090565b60003362000c228185856200258b565b5060019392505050565b60d5546001600160a01b031690565b6000600160e9600082825462000c529190620037f7565b9091555060009392505050565b60ea5460ff161562000ca15760405162461bcd60e51b8152602060048201526006602482015265213934b1b59760d11b60448201526064015b60405180910390fd5b60ea54610100900460ff161562000ce55760405162461bcd60e51b815260206004820152600760248201526621b637b9b2b21760c91b604482015260640162000c98565b6040513481527f19cdfbbc87e2c4f8b08471bb8b544a25603aa3a6037dab5dd4a660be7a45b50c906020015b60405180910390a13460cd600082825462000d2d9190620037f7565b9091555050565b60008060da8360405162000d49919062003812565b908152604051908190036020018120546001600160a01b03169060dc9062000d7390869062003812565b90815260200160405180910390205491509150915091565b60003362000d9b858285620026b3565b62000da885858562002734565b506001949350505050565b6060828260405160200162000dca92919062003830565b604051602081830303815290604052905092915050565b600060e65460e45462000df5919062003863565b905090565b60003362000c2281858562000e10838362002164565b62000e1c9190620037f7565b6200258b565b60ee546040517f0d1c8fe98f1f49786133c2b0bec4cddf9f73586849f7102495587f0434feeecd9162000e61916001600160a01b03909116906200340c565b60405180910390a1565b6002609a54141562000e915760405162461bcd60e51b815260040162000c98906200387d565b6002609a5562000ea062000c2c565b6001600160a01b0316336001600160a01b03161462000ef55760405162461bcd60e51b815260206004820152601060248201526f2cb7ba9030b93290309031b637b7329760811b604482015260640162000c98565b8060cd600082825462000f09919062003863565b9091555062000f19905062000c2c565b6001600160a01b03166108fc829081150290604051600060405180830381858888f1935050505015801562000f52573d6000803e3d6000fd5b50506001609a55565b62000f673382620028fb565b50565b60ea5460ff161562000fbf5760405162461bcd60e51b815260206004820152601a60248201527f596f752063616e206e6f7420636c6f7365206120627269636b2e000000000000604482015260640162000c98565b60ea54610100900460ff1615620010245760405162461bcd60e51b815260206004820152602260248201527f596f752063616e206e6f7420636c6f73653a20416c726561647920636c6f7365604482015261321760f11b606482015260840162000c98565b60ea5462010000900460ff16156200107f5760405162461bcd60e51b815260206004820152601e60248201527f596f752063616e206e6f7420636c6f73653a204d6574617374616b65642e0000604482015260640162000c98565b60d5546001600160a01b03163314620010c85760405162461bcd60e51b815260206004820152600a6024820152692737ba1037bbb732b91760b11b604482015260640162000c98565b60ea805461ff001916610100179055604051600080516020620057008339815191529062000e61906020808252603c908201527f4f7572206c61737420686172726168206265666f726520776520636c6f73652060408201527f666f7220676f6f642e20576520617265206e6f7720636c6f7365642e00000000606082015260800190565b7fe7375f84984fefa09f5f03aa56ffb11ed839b99d56943f858953e537609f8be7816040516200117e91906200340c565b60405180910390a13460cd60008282546200119a9190620037f7565b909155505050565b60d5546001600160a01b03163314620011ba57600080fd5b60e255565b565b620011cb62002a3e565b507f2af7ee6c8f08eccb0bd31d90e03ca2c2373dbecf67c26fb36684cf46f38ac25960405162001267906040808252600690820152652222a12aa39d60d11b60608201526080602082018190526034908201527f636c6f776e7365617263682829207761732063616c6c656420616e642077617360a082015273103737ba103830bcb0b1363297102cb4b5b2b99760611b60c082015260e00190565b60405180910390a17f19cdfbbc87e2c4f8b08471bb8b544a25603aa3a6037dab5dd4a660be7a45b50c60e95460405162000e6191815260200190565b600062000df562000c2c565b60d5546001600160a01b03163314620013315760405162461bcd60e51b815260206004820152603a60248201527f596f7520646f206e6f7420686176652074686520706f77657220746f2063686160448201527f6e676520746865206675747572652c206f6e6c79204920646f2e000000000000606482015260840162000c98565b60008051602062005700833981519152604051620013c59060208082526056908201527f506c656173652077656c636f6d65206f757220666972737420627269636b206f60408201527f6620616c6c2074696d652c20627269636b656420627574206e6f74206120627260608201527534b1b590313aba1039ba34b636103090313934b1b59760511b608082015260a00190565b60405180910390a160ea805460ff19169055604051600080516020620057008339815191529062000e6190602080825260609082018190527f4920616d20616c736f206c6561726e696e67207468617420746869732069732060408301527f6e6f742074686520666972737420627269636b206f6620616c6c2074696d652e908201527f204f6b61792c20746865726520796f7520686176652069742c20666f6c6b732e608082015260a00190565b60d5546001600160a01b03163314620014be5760405162461bcd60e51b815260206004820152600b60248201526a20b236b4b71037b7363c9760a91b604482015260640162000c98565b6001600160a01b0391909116600090815260e860205260409020805460ff1916911515919091179055565b620014f6823383620026b3565b620015028282620028fb565b5050565b60d5546001600160a01b031633146200154f5760405162461bcd60e51b815260206004820152600a60248201526929b7b9393c961037379760b11b604482015260640162000c98565b609955565b60006002609a5414156200157c5760405162461bcd60e51b815260040162000c98906200387d565b6002609a5560ea54610100900460ff1615620015ac5760405162461bcd60e51b815260040162000c9890620038b4565b600060e25411620015d15760405162461bcd60e51b815260040162000c989062003900565b6000670de0b6b3a764000060e25434620015ec919062003923565b620015f8919062003945565b90506200160730338362002734565b3460cd60008282546200161b9190620037f7565b925050819055508060e76000828254620016369190620037f7565b909155505060e55460e7541115620016625760405162461bcd60e51b815260040162000c989062003968565b90506001609a5590565b60606037805462000b8990620037a4565b60006002609a541415620016a55760405162461bcd60e51b815260040162000c98906200387d565b6002609a5560ea54610100900460ff16156200171b5760405162461bcd60e51b815260206004820152602e60248201527f54686973206973206e6f74206120726567697374657220616e796d6f72652e2060448201526d24ba1034b9903090313934b1b59760911b606482015260840162000c98565b600060e35411620017405760405162461bcd60e51b815260040162000c989062003900565b33600090815260e8602052604090205460ff16620017a15760405162461bcd60e51b815260206004820181905260248201527f596f752063616e27742075736520746869732066756e6374696f6e207965742e604482015260640162000c98565b6000670de0b6b3a764000060e35484620017bc919062003923565b620017c8919062003945565b905060cd54811115620018125760405162461bcd60e51b81526020600482015260116024820152702737ba1032b737bab3b410333ab732399760791b604482015260640162000c98565b6200181e8484620028fb565b8060cd600082825462001832919062003863565b925050819055508060e660008282546200184d9190620037f7565b92505081905550336001600160a01b031663495057be826040518263ffffffff1660e01b81526004016000604051808303818588803b1580156200189057600080fd5b505af1158015620018a5573d6000803e3d6000fd5b505050505060e45460e6541115620018d15760405162461bcd60e51b815260040162000c989062003968565b6001609a559392505050565b60d5546001600160a01b031633146200195f5760405162461bcd60e51b815260206004820152603a60248201527f4f6e6c79207468652043756c74757265436f696e2061646d696e69737472617460448201527f6f72206d617920666c6167206120636f696e20617320444f412e000000000000606482015260840162000c98565b600060db8260405162001973919062003812565b908152604051908190036020019020805491151560ff1990921691909117905550565b60003381620019a6828662002164565b90508381101562001a085760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b606482015260840162000c98565b62000da882868684036200258b565b60ea5460ff161562001a3d5760405162461bcd60e51b815260040162000c989062003996565b60ea54610100900460ff161562001a685760405162461bcd60e51b815260040162000c9890620039c6565b6040516370a0823160e01b815230906370a082319062001a8d9033906004016200340c565b60206040518083038186803b15801562001aa657600080fd5b505afa15801562001abb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001ae1919062003a23565b811062001b315760405162461bcd60e51b815260206004820152601e60248201527f43616e6e6f74207374616b65206d6f7265207468616e20796f75206f776e0000604482015260640162000c98565b62000f5b8162002a52565b60003362000c2281858562002734565b60d5546001600160a01b0316331462001b6457600080fd5b60e355565b600060ec541162001bbd5760405162461bcd60e51b815260206004820152601d60248201527f506c656173652061646d696e73747261746520796f757220636f696e2e000000604482015260640162000c98565b60ec5434101562001bfb5760405162461bcd60e51b8152602060048201526007602482015266283632b0b9b29760c91b604482015260640162000c98565b60ea5460ff161562001c6b576000805160206200570083398151915260405162001c629060208082526023908201527f54686973206d656d6520636f696e207468696e6b73206974277320612062726960408201526231b59760e91b606082015260800190565b60405180910390a15b60ea54610100900460ff161562001cec576000805160206200570083398151915260405162001ce3906020808252602f908201527f54686973206d656d6520636f696e207468696e6b73206974277320636c6f736560408201526e32103337b910313ab9b4b732b9b99760891b606082015260800190565b60405180910390a15b60d5546001600160a01b031662001d0262000c2c565b6001600160a01b03161462001d38576000805160206200570083398151915260405162001d2f9062003a3d565b60405180910390a15b7fa2ceb0ea4c1d58a42d42e6190c7df2d44e4d514484472917b44610687fc68d0e60d23460405162000d1192919062003a9a565b60006002609a54141562001d945760405162461bcd60e51b815260040162000c98906200387d565b6002609a5560ea5460ff161562001dea5760405162461bcd60e51b8152602060048201526019602482015278213934b1b5b9903237903737ba1036b0b5b29039b2b2b2399760391b604482015260640162000c98565b60008430858860405162001dfe906200329f565b62001e0d949392919062003b52565b604051809103906000f08015801562001e2a573d6000803e3d6000fd5b509050821562001e475762001e4186828762002ba4565b62001ea9565b6000805160206200570083398151915260405162001ea09060208082526021908201527f54686520636f696e206d7573742062652061207265616c20676f6f64206f6e656040820152601760f91b606082015260800190565b60405180910390a15b6001609a5595945050505050565b60008160405160200162001ecc919062003812565b604051602081830303815290604052805190602001208360405160200162001ef5919062003812565b6040516020818303038152906040528051906020012014905092915050565b6000805160206200570083398151915260405162001d2f9062003a3d565b600054610100900460ff1662001f4f5760005460ff161562001f53565b303b155b62001fb85760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840162000c98565b600054610100900460ff1615801562001fdb576000805461ffff19166101011790555b6001600160a01b038216620020225760405162461bcd60e51b815260206004820152600c60248201526b5a65726f206164647265737360a01b604482015260640162000c98565b6200206b6040518060400160405280600b81526020016a21bab63a3ab932a1b7b4b760a91b81525060405180604001604052806002815260200161434360f01b81525062002d8d565b6200207562002dc3565b6097805460010181556000526200208b62002ded565b6a5dd8d27faa6c3525c40000620020ae33620020a8838762003863565b62002e21565b620020ba308262002e21565b60001960eb5560d580546001600160a01b0319166001600160a01b038516179055604080518082019091526001808252601d60f91b6020909201918252620021059160d291620032ad565b5060ea805464ff00000000191664010000000017905567037824949b66600060e2556736f4c81d2cfea00060e3556200214081600462003923565b60e45560e5556103e860995580156200215f576000805461ff00191690555b505050565b6001600160a01b03918216600090815260346020908152604080832093909416825291909152205490565b60006002609a541415620021b75760405162461bcd60e51b815260040162000c98906200387d565b6002609a5560ea54610100900460ff1615620021e75760405162461bcd60e51b815260040162000c9890620038b4565b600060e354116200220c5760405162461bcd60e51b815260040162000c989062003900565b6000670de0b6b3a764000060e3548462002227919062003923565b62002233919062003945565b9050620022413384620028fb565b8060cd600082825462002255919062003863565b925050819055508060e66000828254620022709190620037f7565b9091555050604051339082156108fc029083906000818181858888f19350505050158015620022a3573d6000803e3d6000fd5b5060e45460e6541115620022cb5760405162461bcd60e51b815260040162000c989062003968565b6001609a5592915050565b604080518082019091526000815260606020820152600080604051806040016040528060008152602001609760986000886001600160a01b03166001600160a01b0316815260200190815260200160002054815481106200233b576200233b62003b86565b9060005260206000209060020201600101805480602002602001604051908101604052809291908181526020016000905b82821015620023cb576000848152602090819020604080516080810182526004860290920180546001600160a01b031683526001808201548486015260028201549284019290925260030154606083015290835290920191016200236c565b505050915250905060005b81602001515181101562002488576000620024118360200151838151811062002403576200240362003b86565b602002602001015162002ef5565b905080836020015183815181106200242d576200242d62003b86565b602002602001015160600181815250508260200151828151811062002456576200245662003b86565b602002602001015160200151846200246f9190620037f7565b9350620024809050600182620037f7565b9050620023d6565b5090815292915050565b6200249d82620011a2565b620015028162001b4c565b60006002609a541415620024d05760405162461bcd60e51b815260040162000c98906200387d565b6002609a5560ea5460ff1615620024fb5760405162461bcd60e51b815260040162000c989062003996565b60ea54610100900460ff1615620025265760405162461bcd60e51b815260040162000c9890620039c6565b600062002534848462002f3d565b9050670de0b6b3a76400006200255382670dbd2fc137a3000062003923565b6200255f919062003945565b9050620018d130338362002734565b60d5546001600160a01b031633146200258657600080fd5b60e455565b6001600160a01b038316620025ef5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840162000c98565b6001600160a01b038216620026525760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840162000c98565b6001600160a01b0383811660008181526034602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000620026c1848462002164565b905060001981146200272e57818110156200271f5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640162000c98565b6200272e84848484036200258b565b50505050565b6001600160a01b0383166200279a5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840162000c98565b6001600160a01b038216620027fe5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840162000c98565b6001600160a01b03831660009081526033602052604090205481811015620028785760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840162000c98565b6001600160a01b03808516600090815260336020526040808220858503905591851681529081208054849290620028b1908490620037f7565b92505081905550826001600160a01b0316846001600160a01b0316600080516020620056e083398151915284604051620028ed91815260200190565b60405180910390a36200272e565b6001600160a01b0382166200295d5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b606482015260840162000c98565b6001600160a01b03821660009081526033602052604090205481811015620029d35760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b606482015260840162000c98565b6001600160a01b038316600090815260336020526040812083830390556035805484929062002a0490849062003863565b90915550506040518281526000906001600160a01b03851690600080516020620056e08339815191529060200160405180910390a3505050565b600062002a4e6200043c62000c2c565b5090565b6000811162002a9b5760405162461bcd60e51b815260206004820152601460248201527343616e6e6f74207374616b65206e6f7468696e6760601b604482015260640162000c98565b33600090815260986020526040902054428162002ac05762002abd336200319e565b91505b6097828154811062002ad65762002ad662003b86565b6000918252602080832060408051608081018252338082528185018a815282840189815260608085018a81526002998a02909701600190810180548083018255908c529a89902095516004909b0290950180546001600160a01b0319166001600160a01b03909b169a909a178a559151938901939093559151958701959095559151600390950194909455835187815291820186905292810184905290917fb4caaf29adda3eefee3ad552a8e85058589bf834c7466cae4ee58787f70589ed910160405180910390a2505050565b6000805160206200570083398151915260405162002c06906020808252602a908201527f436f696e206861732063616c6c656420666f7220696e7465726e616c2072656760408201526934b9ba3930ba34b7b71760b11b606082015260800190565b60405180910390a160da8360405162002c20919062003812565b908152604051908190036020019020546001600160a01b031662002d555760dc8360405162002c50919062003812565b52604051829060da9062002c6690869062003812565b908152602001604051809103902060006101000a8154816001600160a01b0302191690836001600160a01b031602179055503360de8460405162002cab919062003812565b908152602001604051809103902060006101000a8154816001600160a01b0302191690836001600160a01b03160217905550600160db8460405162002cf1919062003812565b908152604051908190036020018120805492151560ff19909316929092179091557f681527af24efdb94fd8ba1ee38e6d7d4e2d64446e9b34e8ae1a9c649b44982699062002d489085908590859060019062003b9c565b60405180910390a1505050565b7f681527af24efdb94fd8ba1ee38e6d7d4e2d64446e9b34e8ae1a9c649b4498269838383600060405162002d48949392919062003b9c565b600054610100900460ff1662002db75760405162461bcd60e51b815260040162000c989062003bd8565b62001502828262003219565b600054610100900460ff16620011bf5760405162461bcd60e51b815260040162000c989062003bd8565b600054610100900460ff1662002e175760405162461bcd60e51b815260040162000c989062003bd8565b620011bf6200326e565b6001600160a01b03821662002e795760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640162000c98565b806035600082825462002e8d9190620037f7565b90915550506001600160a01b0382166000908152603360205260408120805483929062002ebc908490620037f7565b90915550506040518181526001600160a01b03831690600090600080516020620056e08339815191529060200160405180910390a35050565b6000609954610e1062002f09919062003923565b6020830151604084015162002f1f904262003863565b62002f2b919062003923565b62002f37919062003945565b92915050565b33600090815260986020526040812054609780548391908390811062002f675762002f6762003b86565b9060005260206000209060020201600101848154811062002f8c5762002f8c62003b86565b600091825260209182902060408051608081018252600490930290910180546001600160a01b0316835260018101549383018490526002810154918301919091526003015460608201529150851115620030445760405162461bcd60e51b815260206004820152603260248201527f5374616b696e673a2043616e6e6f74207769746864726177206d6f7265207468604482015271185b881e5bdd481a185d99481cdd185ad95960721b606482015260840162000c98565b6000620030518262002ef5565b905085826020015162003065919062003863565b60208301819052620030e1576097838154811062003087576200308762003b86565b90600052602060002090600202016001018581548110620030ac57620030ac62003b86565b60009182526020822060049091020180546001600160a01b031916815560018101829055600281018290556003015562003188565b816020015160978481548110620030fc57620030fc62003b86565b9060005260206000209060020201600101868154811062003121576200312162003b86565b90600052602060002090600402016001018190555042609784815481106200314d576200314d62003b86565b9060005260206000209060020201600101868154811062003172576200317262003b86565b9060005260206000209060040201600201819055505b620031948187620037f7565b9695505050505050565b60978054600190810180835560009283528291620031bc9162003863565b90508260978281548110620031d557620031d562003b86565b6000918252602080832060029290920290910180546001600160a01b0319166001600160a01b03948516179055949091168152609890935260409092208290555090565b600054610100900460ff16620032435760405162461bcd60e51b815260040162000c989062003bd8565b815162003258906036906020850190620032ad565b5080516200215f906037906020840190620032ad565b600054610100900460ff16620032985760405162461bcd60e51b815260040162000c989062003bd8565b6001609a55565b611abc8062003c2483390190565b828054620032bb90620037a4565b90600052602060002090601f016020900481019282620032df57600085556200332a565b82601f10620032fa57805160ff19168380011785556200332a565b828001600101855582156200332a579182015b828111156200332a5782518255916020019190600101906200330d565b5062002a4e9291505b8082111562002a4e576000815560010162003333565b60005b83811015620033665781810151838201526020016200334c565b838111156200272e5750506000910152565b600081518084526200339281602086016020860162003349565b601f01601f19169290920160200192915050565b602081526000620033bb602083018462003378565b9392505050565b80356001600160a01b0381168114620033da57600080fd5b919050565b60008060408385031215620033f357600080fd5b620033fe83620033c2565b946020939093013593505050565b6001600160a01b0391909116815260200190565b6000602082840312156200343357600080fd5b620033bb82620033c2565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200346657600080fd5b813567ffffffffffffffff808211156200348457620034846200343e565b604051601f8301601f19908116603f01168101908282118183101715620034af57620034af6200343e565b81604052838152866020858801011115620034c957600080fd5b836020870160208301376000602085830101528094505050505092915050565b600060208284031215620034fc57600080fd5b813567ffffffffffffffff8111156200351457600080fd5b620035228482850162003454565b949350505050565b6000806000606084860312156200354057600080fd5b6200354b84620033c2565b92506200355b60208501620033c2565b9150604084013590509250925092565b600080604083850312156200357f57600080fd5b823567ffffffffffffffff808211156200359857600080fd5b620035a68683870162003454565b93506020850135915080821115620035bd57600080fd5b50620035cc8582860162003454565b9150509250929050565b600060208284031215620035e957600080fd5b5035919050565b80358015158114620033da57600080fd5b600080604083850312156200361557600080fd5b6200362083620033c2565b91506200363060208401620035f0565b90509250929050565b600080600080608085870312156200365057600080fd5b843567ffffffffffffffff8111156200366857600080fd5b620036768782880162003454565b945050602085013592506200368e60408601620033c2565b91506200369e60608601620035f0565b905092959194509250565b60008060408385031215620036bd57600080fd5b823591506200363060208401620033c2565b60008060408385031215620036e357600080fd5b620036ee83620033c2565b91506200363060208401620033c2565b6000602080835260608084018551838601528286015160408081880152828251808552608094508489019150868401935060005b818110156200377257845180516001600160a01b031684528881015189850152848101518585015287015187840152938701939185019160010162003732565b50909998505050505050505050565b600080604083850312156200379557600080fd5b50508035926020909101359150565b600181811c90821680620037b957607f821691505b60208210811415620037db57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b600082198211156200380d576200380d620037e1565b500190565b600082516200382681846020870162003349565b9190910192915050565b600083516200384481846020880162003349565b8351908301906200385a81836020880162003349565b01949350505050565b600082821015620038785762003878620037e1565b500390565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b6020808252602c908201527f54686973206973206e6f7420726567697374657220616e796d6f72652e20497460408201526b1034b9903090313934b1b59760a11b606082015260800190565b60208082526009908201526829b2ba103930ba329760b91b604082015260600190565b6000816000190483118215151615620039405762003940620037e1565b500290565b6000826200396357634e487b7160e01b600052601260045260246000fd5b500490565b60208082526014908201527321bab93932b73a1036b0bc103932b0b1b432b21760611b604082015260600190565b60208082526016908201527529b7b9393c97102bb29030b932903090313934b1b59760511b604082015260600190565b6020808252603a908201527f5468652065786368616e676520697320636c6f7365642e20506c65617365207460408201527f727920616761696e207768656e20776520617265206f70656e2e000000000000606082015260800190565b60006020828403121562003a3657600080fd5b5051919050565b6020808252603d908201527f54686973206d656d6520636f696e2069732061637475616c6c79206120636c6f60408201527f6e652e2042657420796f75206469646e2774206b6e6f7720746861742e000000606082015260800190565b60408152600080845481600182811c91508083168062003abb57607f831692505b602080841082141562003adc57634e487b7160e01b86526022600452602486fd5b604088018490526060880182801562003afe576001811462003b105762003b3d565b60ff1987168252828201975062003b3d565b60008c81526020902060005b8781101562003b375781548482015290860190840162003b1c565b83019850505b50509690960196909652509095945050505050565b8481526001600160a01b03848116602083015283166040820152608060608201819052600090620031949083018462003378565b634e487b7160e01b600052603260045260246000fd5b60808152600062003bb1608083018762003378565b6001600160a01b039590951660208301525060408101929092521515606090910152919050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b60608201526080019056fe60806040523480156200001157600080fd5b5060405162001abc38038062001abc8339810160408190526200003491620005fb565b60408051808201909152600b8082526a21bab63a3ab932a1b7b4b760a91b6020830190815283916200006991600391620004ef565b5080516200007f906004906020840190620004ef565b50506001600555506001600160a01b038316620000e35760405162461bcd60e51b815260206004820152601360248201527f496e76616c69642043756c747572636f696e2e0000000000000000000000000060448201526064015b60405180910390fd5b6001600160a01b0382166200012b5760405162461bcd60e51b815260206004820152600d60248201526c2d32b9379030b2323932b9b99760991b6044820152606401620000da565b600780546001600160a01b0319166001600160a01b0384811691909117909155604051908416815260008051602062001a9c8339815191529060200160405180910390a160405133815260008051602062001a9c8339815191529060200160405180910390a16040518481527f19cdfbbc87e2c4f8b08471bb8b544a25603aa3a6037dab5dd4a660be7a45b50c9060200160405180910390a17f7cdb51e9dbbc205231228146c3246e7f914aa6d4a33170e43ecc8e3593481d1a81604051620001f59190620006e3565b60405180910390a1600c80546001600160a01b0319166001600160a01b038516908117909155604051632210724360e11b8152336004820152634420e48690602401600060405180830381600087803b1580156200025257600080fd5b505af115801562000267573d6000803e3d6000fd5b50505050600c60009054906101000a90046001600160a01b03166001600160a01b03166309ed46076040518163ffffffff1660e01b8152600401602060405180830381600087803b158015620002bc57600080fd5b505af1158015620002d1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620002f7919062000718565b600880546001600160a01b039283166001600160a01b031991821681179092556006805493871693909116929092179091556200033590856200040a565b836aadca69491f412bb00c000014156200036d5760075462000361906001600160a01b0316856200040a565b6200036d30856200040a565b600c60009054906101000a90046001600160a01b03166001600160a01b031663fac70e236040518163ffffffff1660e01b815260040160206040518083038186803b158015620003bc57600080fd5b505afa158015620003d1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620003f791906200073d565b600a819055600b5550620007bb92505050565b6001600160a01b038216620004625760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401620000da565b806002600082825462000476919062000757565b90915550506001600160a01b03821660009081526020819052604081208054839290620004a590849062000757565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b828054620004fd906200077e565b90600052602060002090601f0160209004810192826200052157600085556200056c565b82601f106200053c57805160ff19168380011785556200056c565b828001600101855582156200056c579182015b828111156200056c5782518255916020019190600101906200054f565b506200057a9291506200057e565b5090565b5b808211156200057a57600081556001016200057f565b80516001600160a01b0381168114620005ad57600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b60005b83811015620005e5578181015183820152602001620005cb565b83811115620005f5576000848401525b50505050565b600080600080608085870312156200061257600080fd5b84519350620006246020860162000595565b9250620006346040860162000595565b60608601519092506001600160401b03808211156200065257600080fd5b818701915087601f8301126200066757600080fd5b8151818111156200067c576200067c620005b2565b604051601f8201601f19908116603f01168101908382118183101715620006a757620006a7620005b2565b816040528281528a6020848701011115620006c157600080fd5b620006d4836020830160208801620005c8565b979a9699509497505050505050565b602081526000825180602084015262000704816040850160208701620005c8565b601f01601f19169190910160400192915050565b6000602082840312156200072b57600080fd5b620007368262000595565b9392505050565b6000602082840312156200075057600080fd5b5051919050565b600082198211156200077957634e487b7160e01b600052601160045260246000fd5b500190565b600181811c908216806200079357607f821691505b60208210811415620007b557634e487b7160e01b600052602260045260246000fd5b50919050565b6112d180620007cb6000396000f3fe60806040526004361061012a5760003560e01c80637218954e116100ab578063a457c2d71161006f578063a457c2d714610322578063a6f2ae3a14610342578063a9059cbb1461034a578063c3d670fe1461036a578063dd62ed3e1461037d578063ddc74b11146103c357600080fd5b80637218954e1461028757806379cc6790146102a75780638b8fbd92146102c757806391b7f5ed146102ed57806395d89b411461030d57600080fd5b8063313ce567116100f2578063313ce567146101e057806332e7c5bf146101fc578063395093511461021157806342966c681461023157806370a082311461025157600080fd5b806306fdde031461012f578063095ea7b31461015a57806318160ddd1461018a57806323b872dd146101a957806324600fc3146101c9575b600080fd5b34801561013b57600080fd5b506101446103d8565b6040516101519190610f74565b60405180910390f35b34801561016657600080fd5b5061017a610175366004610fa3565b61046a565b6040519015158152602001610151565b34801561019657600080fd5b506002545b604051908152602001610151565b3480156101b557600080fd5b5061017a6101c4366004610fcf565b610480565b3480156101d557600080fd5b506101de610536565b005b3480156101ec57600080fd5b5060405160128152602001610151565b34801561020857600080fd5b5060095461019b565b34801561021d57600080fd5b5061017a61022c366004610fa3565b6105e5565b34801561023d57600080fd5b506101de61024c366004611010565b61061c565b34801561025d57600080fd5b5061019b61026c366004611029565b6001600160a01b031660009081526020819052604090205490565b34801561029357600080fd5b506101de6102a2366004611010565b610629565b3480156102b357600080fd5b506101de6102c2366004610fa3565b61066d565b3480156102d357600080fd5b506006546001600160a01b03166040516101519190611046565b3480156102f957600080fd5b506101de610308366004611010565b6106f5565b34801561031957600080fd5b50610144610739565b34801561032e57600080fd5b5061017a61033d366004610fa3565b610748565b6101de6107e3565b34801561035657600080fd5b5061017a610365366004610fa3565b610865565b6101de610378366004611070565b610872565b34801561038957600080fd5b5061019b610398366004611121565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b3480156103cf57600080fd5b50600b5461019b565b6060600380546103e79061115a565b80601f01602080910402602001604051908101604052809291908181526020018280546104139061115a565b80156104605780601f1061043557610100808354040283529160200191610460565b820191906000526020600020905b81548152906001019060200180831161044357829003601f168201915b5050505050905090565b6000610477338484610adb565b50600192915050565b600061048d848484610c00565b6001600160a01b0384166000908152600160209081526040808320338452909152902054828110156105175760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b61052b853361052686856111ab565b610adb565b506001949350505050565b60006064600954600561054991906111c2565b61055391906111e1565b905060008160095461056591906111ab565b6008546040519192506001600160a01b03169083156108fc029084906000818181858888f193505050501580156105a0573d6000803e3d6000fd5b506007546040516001600160a01b039091169082156108fc029083906000818181858888f193505050501580156105db573d6000803e3d6000fd5b5050600060095550565b3360008181526001602090815260408083206001600160a01b03871684529091528120549091610477918590610526908690611203565b6106263382610dd8565b50565b6008546001600160a01b031633148061064c57506007546001600160a01b031633145b6106685760405162461bcd60e51b815260040161050e9061121b565b600b55565b60006106798333610398565b9050818110156106d75760405162461bcd60e51b8152602060048201526024808201527f45524332303a206275726e20616d6f756e74206578636565647320616c6c6f77604482015263616e636560e01b606482015260840161050e565b6106e6833361052685856111ab565b6106f08383610dd8565b505050565b6008546001600160a01b031633148061071857506007546001600160a01b031633145b6107345760405162461bcd60e51b815260040161050e9061121b565b600a55565b6060600480546103e79061115a565b3360009081526001602090815260408083206001600160a01b0386168452909152812054828110156107ca5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b606482015260840161050e565b6107d9338561052686856111ab565b5060019392505050565b6000670de0b6b3a7640000600a54346107fc91906111c2565b61080691906111e1565b9050610813303383610c00565b604080513381523460208201527f737c69225d647e5994eab1a6c301bf6d9232beb2759ae1e27a8966b4732bc489910160405180910390a1346009600082825461085d9190611203565b909155505050565b6000610477338484610c00565b600260055414156108c55760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161050e565b6002600555600b546109015760405162461bcd60e51b815260206004820152600560248201526426b7b9329760d91b604482015260640161050e565b600b543410156109415760405162461bcd60e51b815260206004820152600b60248201526a26b7b932961036b7b9329760a91b604482015260640161050e565b6008546040517fe7375f84984fefa09f5f03aa56ffb11ed839b99d56943f858953e537609f8be79161097e916001600160a01b0390911690611046565b60405180910390a17fe7375f84984fefa09f5f03aa56ffb11ed839b99d56943f858953e537609f8be7336040516109b59190611046565b60405180910390a16040513481527f19cdfbbc87e2c4f8b08471bb8b544a25603aa3a6037dab5dd4a660be7a45b50c9060200160405180910390a17f7cdb51e9dbbc205231228146c3246e7f914aa6d4a33170e43ecc8e3593481d1a81604051610a1f9190610f74565b60405180910390a1600c54604051632de9f71760e21b81526001600160a01b039091169063b7a7dc5c90610a699084906aadca69491f412bb00c0000903090600190600401611244565b602060405180830381600087803b158015610a8357600080fd5b505af1158015610a97573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610abb919061127e565b503460096000828254610ace9190611203565b9091555050600160055550565b6001600160a01b038316610b3d5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161050e565b6001600160a01b038216610b9e5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161050e565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b038316610c645760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161050e565b6001600160a01b038216610cc65760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161050e565b6001600160a01b03831660009081526020819052604090205481811015610d3e5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161050e565b610d4882826111ab565b6001600160a01b038086166000908152602081905260408082209390935590851681529081208054849290610d7e908490611203565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610dca91815260200190565b60405180910390a350505050565b6001600160a01b038216610e385760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b606482015260840161050e565b6001600160a01b03821660009081526020819052604090205481811015610eac5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b606482015260840161050e565b610eb682826111ab565b6001600160a01b03841660009081526020819052604081209190915560028054849290610ee49084906111ab565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602001610bf3565b6000815180845260005b81811015610f4d57602081850181015186830182015201610f31565b81811115610f5f576000602083870101525b50601f01601f19169290920160200192915050565b602081526000610f876020830184610f27565b9392505050565b6001600160a01b038116811461062657600080fd5b60008060408385031215610fb657600080fd5b8235610fc181610f8e565b946020939093013593505050565b600080600060608486031215610fe457600080fd5b8335610fef81610f8e565b92506020840135610fff81610f8e565b929592945050506040919091013590565b60006020828403121561102257600080fd5b5035919050565b60006020828403121561103b57600080fd5b8135610f8781610f8e565b6001600160a01b0391909116815260200190565b634e487b7160e01b600052604160045260246000fd5b60006020828403121561108257600080fd5b813567ffffffffffffffff8082111561109a57600080fd5b818401915084601f8301126110ae57600080fd5b8135818111156110c0576110c061105a565b604051601f8201601f19908116603f011681019083821181831017156110e8576110e861105a565b8160405282815287602084870101111561110157600080fd5b826020860160208301376000928101602001929092525095945050505050565b6000806040838503121561113457600080fd5b823561113f81610f8e565b9150602083013561114f81610f8e565b809150509250929050565b600181811c9082168061116e57607f821691505b6020821081141561118f57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b6000828210156111bd576111bd611195565b500390565b60008160001904831182151516156111dc576111dc611195565b500290565b6000826111fe57634e487b7160e01b600052601260045260246000fd5b500490565b6000821982111561121657611216611195565b500190565b6020808252600f908201526e27b7363c903a34329030b236b4b71760891b604082015260600190565b6080815260006112576080830187610f27565b6020830195909552506001600160a01b039290921660408301521515606090910152919050565b60006020828403121561129057600080fd5b8151610f8781610f8e56fea2646970667358221220f665cafa22ffcf92b89be9f1bacf07a07b9f7643800b17a27033c2c5b224ad5064736f6c63430008090033e7375f84984fefa09f5f03aa56ffb11ed839b99d56943f858953e537609f8be7ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef1f2d10c6bc5f08101147cf192d4f89ea33266b76f65303d27d5f1d17e840ab37a2646970667358221220d51c7018bd37e042eb3b1da1cb45afb404e70930be86eecd829c7b6a819506be64736f6c63430008090033",
  "deployedSourceMap": "2510:44847:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2493:98:15;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4770:197;;;;;;;;;;-1:-1:-1;4770:197:15;;;;;:::i;:::-;;:::i;:::-;;;1522:14:40;;1515:22;1497:41;;1485:2;1470:18;4770:197:15;1357:187:40;17266:205:1;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;17507:607::-;;;;;;;;;;-1:-1:-1;17507:607:1;;;;;:::i;:::-;;:::i;3581:106:15:-;;;;;;;;;;-1:-1:-1;3668:12:15;;3581:106;;;2094:25:40;;;2082:2;2067:18;3581:106:15;1948:177:40;23931:170:1;;;:::i;:::-;;21189:135;;;;;;;;;;-1:-1:-1;21189:135:1;;;;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;3505:32:40;;;3487:51;;3569:2;3554:18;;3547:34;;;;3460:18;21189:135:1;3313:274:40;5529:286:15;;;;;;;;;;-1:-1:-1;5529:286:15;;;;;:::i;:::-;;:::i;33956:138:1:-;;;;;;;;;;-1:-1:-1;33956:138:1;;;;;:::i;:::-;;:::i;20132:26::-;;;;;;;;;;;;;;;;17044:95;;;;;;;;;;;;;:::i;3430:91:15:-;;;;;;;;;;-1:-1:-1;3430:91:15;;3512:2;4615:36:40;;4603:2;4588:18;3430:91:15;4473:184:40;7946:69:1;;;;;;;;;;-1:-1:-1;8007:1:1;;7946:69;;6210:234:15;;;;;;;;;;-1:-1:-1;6210:234:15;;;;;:::i;:::-;;:::i;34699:67:1:-;;;;;;;;;;;;;:::i;18786:17::-;;;;;;;;;;-1:-1:-1;18786:17:1;;;;;;;;24106:244;;;;;;;;;;-1:-1:-1;24106:244:1;;;;;:::i;:::-;;:::i;848:89:17:-;;;;;;;;;;-1:-1:-1;848:89:17;;;;;:::i;:::-;;:::i;20164:722:1:-;;;;;;;;;;;;;:::i;11540:18::-;;;;;;;;;;-1:-1:-1;11540:18:1;;;;-1:-1:-1;;;;;11540:18:1;;;21046:138;;;;;;:::i;:::-;;:::i;16423:136::-;;;;;;;;;;-1:-1:-1;16423:136:1;;;;;:::i;:::-;;:::i;35885:177::-;;;;;;;;;;;;;:::i;18809:18::-;;;;;;;;;;-1:-1:-1;18809:18:1;;;;;;;;;;;24355:81;;;;;;;;;;;;;:::i;2396:28:5:-;;;;;;;;;;;;;;;;13970:24:1;;;;;;;;;;;;;;;;31269:382;;;;;;;;;;;;;:::i;14265:145::-;;;;;;;;;;-1:-1:-1;14265:145:1;;;;;:::i;:::-;;:::i;3745:125:15:-;;;;;;;;;;-1:-1:-1;3745:125:15;;;;;:::i;:::-;-1:-1:-1;;;;;3845:18:15;3819:7;3845:18;;;:9;:18;;;;;;;3745:125;24995:33:1;;;;;;;;;;;;;;;;13937:27;;;;;;;;;;;;;;;;1243:161:17;;;;;;;;;;-1:-1:-1;1243:161:17;;;;;:::i;:::-;;:::i;14159:101:1:-;;;;;;;;;;-1:-1:-1;14159:101:1;;;;;:::i;:::-;-1:-1:-1;;;;;14238:14:1;14215:4;14238:14;;;:6;:14;;;;;;;;;14159:101;4842:156;;;;;;;;;;-1:-1:-1;4842:156:1;;;;;:::i;:::-;;:::i;34771:139::-;;;;;;;;;;-1:-1:-1;34902:1:1;;-1:-1:-1;;;;;34902:1:1;34771:139;;15943:475;;;:::i;2704:102:15:-;;;;;;;;;;;;;:::i;14461:842:1:-;;;;;;;;;;-1:-1:-1;14461:842:1;;;;;:::i;:::-;;:::i;21330:190::-;;;;;;;;;;-1:-1:-1;21330:190:1;;;;;:::i;:::-;;:::i;6931:427:15:-;;;;;;;;;;-1:-1:-1;6931:427:15;;;;;:::i;:::-;;:::i;5291:445:1:-;;;;;;;;;;-1:-1:-1;5291:445:1;;;;;:::i;:::-;;:::i;4066:189:15:-;;;;;;;;;;-1:-1:-1;4066:189:15;;;;;:::i;:::-;;:::i;16564:124:1:-;;;;;;;;;;-1:-1:-1;16564:124:1;;;;;:::i;:::-;;:::i;25034:800::-;;;:::i;18120:661::-;;;;;;;;;;-1:-1:-1;18120:661:1;;;;;:::i;:::-;;:::i;32767:171::-;;;;;;;;;;-1:-1:-1;32767:171:1;;;;;:::i;:::-;;:::i;25839:891::-;;;:::i;2733:1937::-;;;;;;;;;;-1:-1:-1;2733:1937:1;;;;;:::i;:::-;;:::i;4313:149:15:-;;;;;;;;;;-1:-1:-1;4313:149:15;;;;;:::i;:::-;;:::i;16951:88:1:-;;;;;;;;;;-1:-1:-1;17023:9:1;;16951:88;;14086:24;;;;;;;;;;;;;;;;5003:96;;;;;;;;;;-1:-1:-1;5079:13:1;;5003:96;;15308:507;;;;;;;;;;-1:-1:-1;15308:507:1;;;;;:::i;:::-;;:::i;7165:24::-;;;;;;;;;;;;;;;;7521:827:5;;;;;;;;;;-1:-1:-1;7521:827:5;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;14057:23:1:-;;;;;;;;;;;;;;;;14000:22;;;;;;;;;;;;;;;;14028:23;;;;;;;;;;;;;;;;16693:154;;;;;;;;;;-1:-1:-1;16693:154:1;;;;;:::i;:::-;;:::i;5997:596::-;;;;;;;;;;-1:-1:-1;5997:596:1;;;;;:::i;:::-;;:::i;15820:118::-;;;;;;;;;;-1:-1:-1;15820:118:1;;;;;:::i;:::-;;:::i;16852:94::-;;;;;;;;;;-1:-1:-1;16927:12:1;;16852:94;;2493:98:15;2547:13;2579:5;2572:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2493:98;:::o;4770:197::-;4853:4;929:10:20;4907:32:15;929:10:20;4923:7:15;4932:6;4907:8;:32::i;:::-;-1:-1:-1;4956:4:15;;4770:197;-1:-1:-1;;;4770:197:15:o;17266:205:1:-;17324:3;;-1:-1:-1;;;;;17324:3:1;;17266:205::o;17507:607::-;17559:4;17796:1;17783:9;;:14;;;;;;;:::i;:::-;;;;-1:-1:-1;17814:5:1;;17507:607;-1:-1:-1;;;17507:607:1:o;23931:170::-;23982:5;;;;23981:6;23973:25;;;;-1:-1:-1;;;23973:25:1;;8524:2:40;23973:25:1;;;8506:21:40;8563:1;8543:18;;;8536:29;-1:-1:-1;;;8581:18:40;;;8574:36;8627:18;;23973:25:1;;;;;;;;;24017:6;;;;;;;24016:7;24008:27;;;;-1:-1:-1;;;24008:27:1;;8858:2:40;24008:27:1;;;8840:21:40;8897:1;8877:18;;;8870:29;-1:-1:-1;;;8915:18:40;;;8908:37;8962:18;;24008:27:1;8656:330:40;24008:27:1;24050:20;;24060:9;2094:25:40;;24050:20:1;;2082:2:40;2067:18;24050:20:1;;;;;;;;24085:9;24080:1;;:14;;;;;;;:::i;:::-;;;;-1:-1:-1;;23931:170:1:o;21189:135::-;21249:7;21257;21284:6;21291:5;21284:13;;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;;;;;21284:13:1;;21299:10;;:17;;21310:5;;21299:17;:::i;:::-;;;;;;;;;;;;;;21276:41;;;;21189:135;;;:::o;5529:286:15:-;5656:4;929:10:20;5712:38:15;5728:4;929:10:20;5743:6:15;5712:15;:38::i;:::-;5760:27;5770:4;5776:2;5780:6;5760:9;:27::i;:::-;-1:-1:-1;5804:4:15;;5529:286;-1:-1:-1;;;;5529:286:15:o;33956:138:1:-;34035:13;34083:2;34087;34066:24;;;;;;;;;:::i;:::-;;;;;;;;;;;;;34052:39;;33956:138;;;;:::o;17044:95::-;17091:4;17124:8;;17114:7;;:18;;;;:::i;:::-;17107:25;;17044:95;:::o;6210:234:15:-;6298:4;929:10:20;6352:64:15;929:10:20;6368:7:15;6405:10;6377:25;929:10:20;6368:7:15;6377:9;:25::i;:::-;:38;;;;:::i;:::-;6352:8;:64::i;34699:67:1:-;34747:11;;34742:17;;;;;;-1:-1:-1;;;;;34747:11:1;;;;34742:17;:::i;:::-;;;;;;;;34699:67::o;24106:244::-;1815:1:14;2569:7;;:19;;2561:63;;;;-1:-1:-1;;;2561:63:14;;;;;;;:::i;:::-;1815:1;2699:7;:18;24251:7:1::1;:5;:7::i;:::-;-1:-1:-1::0;;;;;24237:21:1::1;:10;-1:-1:-1::0;;;;;24237:21:1::1;;24229:50;;;::::0;-1:-1:-1;;;24229:50:1;;10439:2:40;24229:50:1::1;::::0;::::1;10421:21:40::0;10478:2;10458:18;;;10451:30;-1:-1:-1;;;10497:18:40;;;10490:46;10553:18;;24229:50:1::1;10237:340:40::0;24229:50:1::1;24294:6;24289:1;;:11;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;24318:7:1::1;::::0;-1:-1:-1;24318:5:1::1;:7::i;:::-;-1:-1:-1::0;;;;;24310:25:1::1;:33;24336:6;24310:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;1772:1:14;2872:7;:22;24106:244:1:o;848:89:17:-;903:27;929:10:20;923:6:17;903:5;:27::i;:::-;848:89;:::o;20164:722:1:-;20209:5;;;;20208:6;20200:45;;;;-1:-1:-1;;;20200:45:1;;10784:2:40;20200:45:1;;;10766:21:40;10823:2;10803:18;;;10796:30;10862:28;10842:18;;;10835:56;10908:18;;20200:45:1;10582:350:40;20200:45:1;20264:6;;;;;;;20263:7;20255:54;;;;-1:-1:-1;;;20255:54:1;;11139:2:40;20255:54:1;;;11121:21:40;11178:2;11158:18;;;11151:30;11217:34;11197:18;;;11190:62;-1:-1:-1;;;11268:18:40;;;11261:32;11310:19;;20255:54:1;10937:398:40;20255:54:1;20328:10;;;;;;;20327:11;20319:54;;;;-1:-1:-1;;;20319:54:1;;11542:2:40;20319:54:1;;;11524:21:40;11581:2;11561:18;;;11554:30;11620:32;11600:18;;;11593:60;11670:18;;20319:54:1;11340:354:40;20319:54:1;20405:3;;-1:-1:-1;;;;;20405:3:1;20391:10;:17;20383:40;;;;-1:-1:-1;;;20383:40:1;;11901:2:40;20383:40:1;;;11883:21:40;11940:2;11920:18;;;11913:30;-1:-1:-1;;;11959:18:40;;;11952:40;12009:18;;20383:40:1;11699:334:40;20383:40:1;20778:6;:13;;-1:-1:-1;;20778:13:1;;;;;20806:73;;-1:-1:-1;;;;;;;;;;;20806:73:1;;;12240:2:40;12222:21;;;12279:2;12259:18;;;12252:30;12318:34;12313:2;12298:18;;12291:62;12389:30;12384:2;12369:18;;12362:58;12452:3;12437:19;;12038:424;21046:138:1;21113:21;21126:7;21113:21;;;;;;:::i;:::-;;;;;;;;21168:9;21163:1;;:14;;;;;;;:::i;:::-;;;;-1:-1:-1;;;21046:138:1:o;16423:136::-;16496:3;;-1:-1:-1;;;;;16496:3:1;16503:10;16496:17;16488:26;;;;;;16524:12;:28;16423:136::o;104:42:12:-;:::o;35885:177:1:-;35921:13;:11;:13::i;:::-;;35949:71;;;;;12770:2:40;12752:21;;;12809:1;12789:18;;;12782:29;-1:-1:-1;;;12842:2:40;12827:18;;12820:36;12894:3;12887:4;12872:20;;12865:33;;;12935:2;12914:19;;;12907:31;12975:34;12969:3;12954:19;;12947:63;-1:-1:-1;;;13041:3:40;13026:19;;13019:51;13102:3;13087:19;;12467:645;35949:71:1;;;;;;;;36035:20;36045:9;;36035:20;;;;2094:25:40;;2082:2;2067:18;;1948:177;24355:81:1;24396:7;24422;:5;:7::i;31269:382::-;31329:3;;-1:-1:-1;;;;;31329:3:1;31315:10;:17;31307:88;;;;-1:-1:-1;;;31307:88:1;;13319:2:40;31307:88:1;;;13301:21:40;13358:2;13338:18;;;13331:30;13397:34;13377:18;;;13370:62;13468:28;13448:18;;;13441:56;13514:19;;31307:88:1;13117:422:40;31307:88:1;-1:-1:-1;;;;;;;;;;;31406:99:1;;;;13746:2:40;13728:21;;;13785:2;13765:18;;;13758:30;13824:34;13819:2;13804:18;;13797:62;13895:34;13890:2;13875:18;;13868:62;-1:-1:-1;;;13961:3:40;13946:19;;13939:53;14024:3;14009:19;;13544:490;31406:99:1;;;;;;;;31511:5;:13;;-1:-1:-1;;31511:13:1;;;31535:109;;-1:-1:-1;;;;;;;;;;;31535:109:1;;;14241:2:40;14223:21;;;14280:2;14260:18;;;14253:30;;;14319:34;14314:2;14299:18;;14292:62;14390:34;14370:18;;;14363:62;14462:34;14456:3;14441:19;;14434:63;14529:3;14514:19;;14039:500;14265:145:1;14352:3;;-1:-1:-1;;;;;14352:3:1;14338:10;:17;14330:41;;;;-1:-1:-1;;;14330:41:1;;14746:2:40;14330:41:1;;;14728:21:40;14785:2;14765:18;;;14758:30;-1:-1:-1;;;14804:18:40;;;14797:41;14855:18;;14330:41:1;14544:335:40;14330:41:1;-1:-1:-1;;;;;14381:14:1;;;;;;;;:6;:14;;;;;:22;;-1:-1:-1;;14381:22:1;;;;;;;;;;14265:145::o;1243:161:17:-;1319:46;1335:7;929:10:20;1358:6:17;1319:15;:46::i;:::-;1375:22;1381:7;1390:6;1375:5;:22::i;:::-;1243:161;;:::o;4842:156:1:-;4933:3;;-1:-1:-1;;;;;4933:3:1;4919:10;:17;4911:40;;;;-1:-1:-1;;;4911:40:1;;15086:2:40;4911:40:1;;;15068:21:40;15125:2;15105:18;;;15098:30;-1:-1:-1;;;15144:18:40;;;15137:40;15194:18;;4911:40:1;14884:334:40;4911:40:1;4961:13;:30;4842:156::o;15943:475::-;16003:7;1815:1:14;2569:7;;:19;;2561:63;;;;-1:-1:-1;;;2561:63:14;;;;;;;:::i;:::-;1815:1;2699:7;:18;16031:6:1::1;::::0;::::1;::::0;::::1;;;16030:7;16022:64;;;;-1:-1:-1::0;;;16022:64:1::1;;;;;;;:::i;:::-;16119:1;16104:12;;:16;16096:38;;;;-1:-1:-1::0;;;16096:38:1::1;;;;;;;:::i;:::-;16145:19;16196:7;16180:12;;16168:9;:24;;;;:::i;:::-;16167:36;;;;:::i;:::-;16145:58;;16213:49;16231:4;16238:10;16250:11;16213:9;:49::i;:::-;16278:9;16273:1;;:14;;;;;;;:::i;:::-;;;;;;;;16311:11;16298:9;;:24;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;16353:8:1::1;::::0;16340:9:::1;::::0;:21:::1;;16332:54;;;;-1:-1:-1::0;;;16332:54:1::1;;;;;;;:::i;:::-;16400:11:::0;-1:-1:-1;1772:1:14;2872:7;:22;15943:475:1;:::o;2704:102:15:-;2760:13;2792:7;2785:14;;;;;:::i;14461:842:1:-;14546:7;1815:1:14;2569:7;;:19;;2561:63;;;;-1:-1:-1;;;2561:63:14;;;;;;;:::i;:::-;1815:1;2699:7;:18;14575:6:1::1;::::0;::::1;::::0;::::1;;;14574:7;14566:66;;;::::0;-1:-1:-1;;;14566:66:1;;16919:2:40;14566:66:1::1;::::0;::::1;16901:21:40::0;16958:2;16938:18;;;16931:30;16997:34;16977:18;;;16970:62;-1:-1:-1;;;17048:18:40;;;17041:44;17102:19;;14566:66:1::1;16717:410:40::0;14566:66:1::1;14662:1;14650:9;;:13;14642:35;;;;-1:-1:-1::0;;;14642:35:1::1;;;;;;;:::i;:::-;14702:10;14695:18;::::0;;;:6:::1;:18;::::0;;;;;::::1;;14687:63;;;::::0;-1:-1:-1;;;14687:63:1;;17334:2:40;14687:63:1::1;::::0;::::1;17316:21:40::0;;;17353:18;;;17346:30;17412:34;17392:18;;;17385:62;17464:18;;14687:63:1::1;17132:356:40::0;14687:63:1::1;14765:19;14811:7;14798:9;;14788:7;:19;;;;:::i;:::-;14787:31;;;;:::i;:::-;14765:53;;14851:1;;14836:11;:16;;14828:46;;;::::0;-1:-1:-1;;;14828:46:1;;17695:2:40;14828:46:1::1;::::0;::::1;17677:21:40::0;17734:2;17714:18;;;17707:30;-1:-1:-1;;;17753:18:40;;;17746:47;17810:18;;14828:46:1::1;17493:341:40::0;14828:46:1::1;14884:23;14890:7;14899;14884:5;:23::i;:::-;15021:11;15016:1;;:16;;;;;;;:::i;:::-;;;;;;;;15054:11;15042:8;;:23;;;;;;;:::i;:::-;;;;;;;;15084:10;-1:-1:-1::0;;;;;15075:29:1::1;;15111:11;15075:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;15236:7;;15224:8;;:19;;15216:52;;;;-1:-1:-1::0;;;15216:52:1::1;;;;;;;:::i;:::-;1772:1:14::0;2872:7;:22;15285:11:1;14461:842;-1:-1:-1;;;14461:842:1:o;21330:190::-;21414:3;;-1:-1:-1;;;;;21414:3:1;21400:10;:17;21392:88;;;;-1:-1:-1;;;21392:88:1;;18041:2:40;21392:88:1;;;18023:21:40;18080:2;18060:18;;;18053:30;18119:34;18099:18;;;18092:62;18190:28;18170:18;;;18163:56;18236:19;;21392:88:1;17839:422:40;21392:88:1;21508:5;21490:8;21499:5;21490:15;;;;;;:::i;:::-;;;;;;;;;;;;;;:23;;;;;-1:-1:-1;;21490:23:1;;;;;;;;;-1:-1:-1;21330:190:1:o;6931:427:15:-;7024:4;929:10:20;7024:4:15;7105:25;929:10:20;7122:7:15;7105:9;:25::i;:::-;7078:52;;7168:15;7148:16;:35;;7140:85;;;;-1:-1:-1;;;7140:85:15;;18468:2:40;7140:85:15;;;18450:21:40;18507:2;18487:18;;;18480:30;18546:34;18526:18;;;18519:62;-1:-1:-1;;;18597:18:40;;;18590:35;18642:19;;7140:85:15;18266:401:40;7140:85:15;7259:60;7268:5;7275:7;7303:15;7284:16;:34;7259:8;:60::i;5291:445:1:-;5351:5;;;;5350:6;5342:41;;;;-1:-1:-1;;;5342:41:1;;;;;;;:::i;:::-;5402:6;;;;;;;5401:7;5393:78;;;;-1:-1:-1;;;5393:78:1;;;;;;;:::i;:::-;5554:26;;-1:-1:-1;;;5554:26:1;;:4;;:14;;:26;;5569:10;;5554:26;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5544:7;:36;5536:79;;;;-1:-1:-1;;;5536:79:1;;19841:2:40;5536:79:1;;;19823:21:40;19880:2;19860:18;;;19853:30;19919:32;19899:18;;;19892:60;19969:18;;5536:79:1;19639:354:40;5536:79:1;5626:15;5633:7;5626:6;:15::i;4066:189:15:-;4145:4;929:10:20;4199:28:15;929:10:20;4216:2:15;4220:6;4199:9;:28::i;16564:124:1:-;16631:3;;-1:-1:-1;;;;;16631:3:1;16638:10;16631:17;16623:26;;;;;;16659:9;:22;16564:124::o;25034:800::-;25106:1;25085:18;;:22;25077:64;;;;-1:-1:-1;;;25077:64:1;;20200:2:40;25077:64:1;;;20182:21:40;20239:2;20219:18;;;20212:30;20278:31;20258:18;;;20251:59;20327:18;;25077:64:1;19998:353:40;25077:64:1;25264:18;;25251:9;:31;;25243:51;;;;-1:-1:-1;;;25243:51:1;;20558:2:40;25243:51:1;;;20540:21:40;20597:1;20577:18;;;20570:29;-1:-1:-1;;;20615:18:40;;;20608:37;20662:18;;25243:51:1;20356:330:40;25243:51:1;25386:5;;;;25383:67;;;-1:-1:-1;;;;;;;;;;;25400:48:1;;;;20893:2:40;20875:21;;;20932:2;20912:18;;;20905:30;20971:34;20966:2;20951:18;;20944:62;-1:-1:-1;;;21037:2:40;21022:18;;21015:33;21080:3;21065:19;;20691:399;25400:48:1;;;;;;;;25383:67;25522:6;;;;;;;25519:80;;;-1:-1:-1;;;;;;;;;;;25536:60:1;;;;21297:2:40;21279:21;;;21336:2;21316:18;;;21309:30;21375:34;21370:2;21355:18;;21348:62;-1:-1:-1;;;21441:2:40;21426:18;;21419:45;21496:3;21481:19;;21095:411;25536:60:1;;;;;;;;25519:80;25622:3;;-1:-1:-1;;;;;25622:3:1;25611:7;:5;:7::i;:::-;-1:-1:-1;;;;;25611:14:1;;25608:160;;-1:-1:-1;;;;;;;;;;;25646:74:1;;;;;:::i;:::-;;;;;;;;25608:160;25782:21;25787:4;25793:9;25782:21;;;;;;;:::i;18120:661::-;18245:7;1815:1:14;2569:7;;:19;;2561:63;;;;-1:-1:-1;;;2561:63:14;;;;;;;:::i;:::-;1815:1;2699:7;:18;18273:5:1::1;::::0;::::1;;18272:6;18264:44;;;::::0;-1:-1:-1;;;18264:44:1;;23531:2:40;18264:44:1::1;::::0;::::1;23513:21:40::0;23570:2;23550:18;;;23543:30;-1:-1:-1;;;23589:18:40;;;23582:55;23654:18;;18264:44:1::1;23329:349:40::0;18264:44:1::1;18429:15;18478:12;18500:4;18507:14;18523:5;18455:74;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;18429:101;;18594:9;18591:160;;;18619:39;18629:5;18636:7;18645:12;18619:9;:39::i;:::-;18591:160;;;-1:-1:-1::0;;;;;;;;;;;18694:46:1::1;;;;24381:2:40::0;24363:21;;;24420:2;24400:18;;;24393:30;24459:34;24454:2;24439:18;;24432:62;-1:-1:-1;;;24525:2:40;24510:18;;24503:31;24566:3;24551:19;;24179:397;18694:46:1::1;;;;;;;;18591:160;1772:1:14::0;2872:7;:22;18767:7:1;18120:661;-1:-1:-1;;;;;18120:661:1:o;32767:171::-;32848:4;32929:2;32911:22;;;;;;;;:::i;:::-;;;;;;;;;;;;;32901:33;;;;;;32892:2;32874:22;;;;;;;;:::i;:::-;;;;;;;;;;;;;32864:33;;;;;;:70;32856:79;;32767:171;;;;:::o;25839:891::-;-1:-1:-1;;;;;;;;;;;26512:74:1;;;;;:::i;2733:1937::-;2369:13:13;;;;;;;:48;;2405:12;;;;2404:13;2369:48;;;3147:4;1476:19:19;:23;2385:16:13;2361:107;;;;-1:-1:-1;;;2361:107:13;;24783:2:40;2361:107:13;;;24765:21:40;24822:2;24802:18;;;24795:30;24861:34;24841:18;;;24834:62;-1:-1:-1;;;24912:18:40;;;24905:44;24966:19;;2361:107:13;24581:410:40;2361:107:13;2479:19;2502:13;;;;;;2501:14;2525:98;;;;2559:13;:20;;-1:-1:-1;;2593:19:13;;;;;2525:98;-1:-1:-1;;;;;2830:18:1;::::1;2822:43;;;::::0;-1:-1:-1;;;2822:43:1;;25198:2:40;2822:43:1::1;::::0;::::1;25180:21:40::0;25237:2;25217:18;;;25210:30;-1:-1:-1;;;25256:18:40;;;25249:42;25308:18;;2822:43:1::1;24996:336:40::0;2822:43:1::1;2875:33;;;;;;;;;;;;;;-1:-1:-1::0;;;2875:33:1::1;;::::0;::::1;;;;;;;;;;;;;-1:-1:-1::0;;;2875:33:1::1;;::::0;:12:::1;:33::i;:::-;2918:22;:20;:22::i;:::-;2950:12;:19:::0;;::::1;;::::0;;-1:-1:-1;2950:19:1;3039:24:::1;:22;:24::i;:::-;3095:17;3145:45;3151:10;3163:26;3095:17:::0;3163:13;:26:::1;:::i;:::-;3145:5;:45::i;:::-;3200:32;3214:4;3221:10;3200:5;:32::i;:::-;-1:-1:-1::0;;3243:11:1::1;:92:::0;3401:3:::1;:10:::0;;-1:-1:-1;;;;;;3401:10:1::1;-1:-1:-1::0;;;;;3401:10:1;::::1;;::::0;;3566::::1;::::0;;;;::::1;::::0;;;-1:-1:-1;3566:10:1;;;-1:-1:-1;;;3566:10:1::1;::::0;;::::1;::::0;;;::::1;::::0;:4:::1;::::0;:10:::1;:::i;:::-;-1:-1:-1::0;3733:9:1::1;:16:::0;;-1:-1:-1;;3733:16:1::1;::::0;::::1;::::0;;4140:13:::1;4125:12;:28:::0;4199:13:::1;4187:9;:25:::0;4259:14:::1;:10:::0;3733:9:::1;4259:14;:::i;:::-;4249:7;:24:::0;4414:8:::1;:21:::0;4589:4:::1;4573:13;:20:::0;2645:66:13;;;;2695:5;2679:21;;-1:-1:-1;;2679:21:13;;;2645:66;2080:637;2733:1937:1;;:::o;4313:149:15:-;-1:-1:-1;;;;;4428:18:15;;;4402:7;4428:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;4313:149::o;15308:507:1:-;15372:7;1815:1:14;2569:7;;:19;;2561:63;;;;-1:-1:-1;;;2561:63:14;;;;;;;:::i;:::-;1815:1;2699:7;:18;15400:6:1::1;::::0;::::1;::::0;::::1;;;15399:7;15391:64;;;;-1:-1:-1::0;;;15391:64:1::1;;;;;;;:::i;:::-;15485:1;15473:9;;:13;15465:35;;;;-1:-1:-1::0;;;15465:35:1::1;;;;;;;:::i;:::-;15511:19;15557:7;15544:9;;15534:7;:19;;;;:::i;:::-;15533:31;;;;:::i;:::-;15511:53;;15575:26;15581:10;15593:7;15575:5;:26::i;:::-;15621:11;15616:1;;:16;;;;;;;:::i;:::-;;;;;;;;15654:11;15642:8;;:23;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;15676:41:1::1;::::0;15684:10:::1;::::0;15676:41;::::1;;;::::0;15705:11;;15676:41:::1;::::0;;;15705:11;15684:10;15676:41;::::1;;;;;;;;;;;;;::::0;::::1;;;;;;15747:7;;15735:8;;:19;;15727:52;;;;-1:-1:-1::0;;;15727:52:1::1;;;;;;;:::i;:::-;1772:1:14::0;2872:7;:22;15797:11:1;15308:507;-1:-1:-1;;15308:507:1:o;7521:827:5:-;-1:-1:-1;;;;;;;;;;;;;;;;;7688:24:5;7791:29;7823:63;;;;;;;;7838:1;7823:63;;;;7841:12;7854:6;:15;7861:7;-1:-1:-1;;;;;7854:15:5;-1:-1:-1;;;;;7854:15:5;;;;;;;;;;;;;7841:29;;;;;;;;:::i;:::-;;;;;;;;;;;:44;;7823:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7823:63:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;7823:63:5;;-1:-1:-1;7791:95:5;-1:-1:-1;7958:9:5;7953:273;7977:7;:14;;;:21;7973:1;:25;7953:273;;;8020:23;8046:39;8067:7;:14;;;8082:1;8067:17;;;;;;;;:::i;:::-;;;;;;;8046:20;:39::i;:::-;8020:65;;8128:15;8098:7;:14;;;8113:1;8098:17;;;;;;;;:::i;:::-;;;;;;;:27;;:45;;;;;8192:7;:14;;;8207:1;8192:17;;;;;;;;:::i;:::-;;;;;;;:24;;;8175:16;:41;;;;:::i;:::-;8156:60;-1:-1:-1;8000:6:5;;-1:-1:-1;8005:1:5;8000:6;;:::i;:::-;;;7953:273;;;-1:-1:-1;8279:39:5;;;:7;7521:827;-1:-1:-1;;7521:827:5:o;16693:154:1:-;16776:30;16792:13;16776:15;:30::i;:::-;16816:24;16829:10;16816:12;:24::i;5997:596::-;6087:7;1815:1:14;2569:7;;:19;;2561:63;;;;-1:-1:-1;;;2561:63:14;;;;;;;:::i;:::-;1815:1;2699:7;:18;6115:5:1::1;::::0;::::1;;6114:6;6106:41;;;;-1:-1:-1::0;;;6106:41:1::1;;;;;;;:::i;:::-;6166:6;::::0;::::1;::::0;::::1;;;6165:7;6157:78;;;;-1:-1:-1::0;;;6157:78:1::1;;;;;;;:::i;:::-;6245:22;6270:35;6285:6;6293:11;6270:14;:35::i;:::-;6245:60:::0;-1:-1:-1;6362:7:1::1;6333:26;6245:60:::0;6350:9:::1;6333:26;:::i;:::-;:36;;;;:::i;:::-;6316:53;;6503:52;6521:4;6528:10;6540:14;6503:9;:52::i;15820:118::-:0;15885:3;;-1:-1:-1;;;;;15885:3:1;15892:10;15885:17;15877:26;;;;;;15913:7;:18;15820:118::o;10456:370:15:-;-1:-1:-1;;;;;10587:19:15;;10579:68;;;;-1:-1:-1;;;10579:68:15;;25671:2:40;10579:68:15;;;25653:21:40;25710:2;25690:18;;;25683:30;25749:34;25729:18;;;25722:62;-1:-1:-1;;;25800:18:40;;;25793:34;25844:19;;10579:68:15;25469:400:40;10579:68:15;-1:-1:-1;;;;;10665:21:15;;10657:68;;;;-1:-1:-1;;;10657:68:15;;26076:2:40;10657:68:15;;;26058:21:40;26115:2;26095:18;;;26088:30;26154:34;26134:18;;;26127:62;-1:-1:-1;;;26205:18:40;;;26198:32;26247:19;;10657:68:15;25874:398:40;10657:68:15;-1:-1:-1;;;;;10736:18:15;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10787:32;;2094:25:40;;;10787:32:15;;2067:18:40;10787:32:15;;;;;;;10456:370;;;:::o;11107:441::-;11237:24;11264:25;11274:5;11281:7;11264:9;:25::i;:::-;11237:52;;-1:-1:-1;;11303:16:15;:37;11299:243;;11384:6;11364:16;:26;;11356:68;;;;-1:-1:-1;;;11356:68:15;;26479:2:40;11356:68:15;;;26461:21:40;26518:2;26498:18;;;26491:30;26557:31;26537:18;;;26530:59;26606:18;;11356:68:15;26277:353:40;11356:68:15;11466:51;11475:5;11482:7;11510:6;11491:16;:25;11466:8;:51::i;:::-;11227:321;11107:441;;;:::o;7821:651::-;-1:-1:-1;;;;;7947:18:15;;7939:68;;;;-1:-1:-1;;;7939:68:15;;26837:2:40;7939:68:15;;;26819:21:40;26876:2;26856:18;;;26849:30;26915:34;26895:18;;;26888:62;-1:-1:-1;;;26966:18:40;;;26959:35;27011:19;;7939:68:15;26635:401:40;7939:68:15;-1:-1:-1;;;;;8025:16:15;;8017:64;;;;-1:-1:-1;;;8017:64:15;;27243:2:40;8017:64:15;;;27225:21:40;27282:2;27262:18;;;27255:30;27321:34;27301:18;;;27294:62;-1:-1:-1;;;27372:18:40;;;27365:33;27415:19;;8017:64:15;27041:399:40;8017:64:15;-1:-1:-1;;;;;8163:15:15;;8141:19;8163:15;;;:9;:15;;;;;;8196:21;;;;8188:72;;;;-1:-1:-1;;;8188:72:15;;27647:2:40;8188:72:15;;;27629:21:40;27686:2;27666:18;;;27659:30;27725:34;27705:18;;;27698:62;-1:-1:-1;;;27776:18:40;;;27769:36;27822:19;;8188:72:15;27445:402:40;8188:72:15;-1:-1:-1;;;;;8294:15:15;;;;;;;:9;:15;;;;;;8312:20;;;8294:38;;8352:13;;;;;;;;:23;;8326:6;;8294:15;8352:23;;8326:6;;8352:23;:::i;:::-;;;;;;;;8406:2;-1:-1:-1;;;;;8391:26:15;8400:4;-1:-1:-1;;;;;8391:26:15;-1:-1:-1;;;;;;;;;;;8410:6:15;8391:26;;;;2094:25:40;;2082:2;2067:18;;1948:177;8391:26:15;;;;;;;;8428:37;2733:1937:1;9457:576:15;-1:-1:-1;;;;;9540:21:15;;9532:67;;;;-1:-1:-1;;;9532:67:15;;28054:2:40;9532:67:15;;;28036:21:40;28093:2;28073:18;;;28066:30;28132:34;28112:18;;;28105:62;-1:-1:-1;;;28183:18:40;;;28176:31;28224:19;;9532:67:15;27852:397:40;9532:67:15;-1:-1:-1;;;;;9695:18:15;;9670:22;9695:18;;;:9;:18;;;;;;9731:24;;;;9723:71;;;;-1:-1:-1;;;9723:71:15;;28456:2:40;9723:71:15;;;28438:21:40;28495:2;28475:18;;;28468:30;28534:34;28514:18;;;28507:62;-1:-1:-1;;;28585:18:40;;;28578:32;28627:19;;9723:71:15;28254:398:40;9723:71:15;-1:-1:-1;;;;;9828:18:15;;;;;;:9;:18;;;;;9849:23;;;9828:44;;9892:12;:22;;9866:6;;9828:18;9892:22;;9866:6;;9892:22;:::i;:::-;;;;-1:-1:-1;;9930:37:15;;2094:25:40;;;9956:1:15;;-1:-1:-1;;;;;9930:37:15;;;-1:-1:-1;;;;;;;;;;;9930:37:15;2082:2:40;2067:18;9930:37:15;;;;;;;2080:637:13;2733:1937:1;;:::o;35795:85::-;35834:7;35853:20;35865:7;:5;:7::i;35853:20::-;;35795:85;:::o;3685:1176:5:-;3809:1;3799:7;:11;3791:44;;;;-1:-1:-1;;;3791:44:5;;28859:2:40;3791:44:5;;;28841:21:40;28898:2;28878:18;;;28871:30;-1:-1:-1;;;28917:18:40;;;28910:50;28977:18;;3791:44:5;28657:344:40;3791:44:5;3974:10;3951:13;3967:18;;;:6;:18;;;;;;4102:15;4211:10;4208:328;;4498:27;4514:10;4498:15;:27::i;:::-;4490:35;;4208:328;4663:12;4676:5;4663:19;;;;;;;;:::i;:::-;;;;;;;;;4703:39;;;;;;;;4709:10;4703:39;;;;;;;;;;;;;;;;;;;;;;4663:19;;;;;;;:34;;;;:80;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4663:80:5;-1:-1:-1;;;;;4663:80:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4810:44;;29208:25:40;;;29249:18;;;29242:34;;;29292:18;;;29285:34;;;4709:10:5;;4810:44;;29181:18:40;4810:44:5;;;;;;;3726:1135;;3685:1176;:::o;19570:557:1:-;-1:-1:-1;;;;;;;;;;;19672:55:1;;;;29532:2:40;29514:21;;;29571:2;29551:18;;;29544:30;29610:34;29605:2;29590:18;;29583:62;-1:-1:-1;;;29676:2:40;29661:18;;29654:40;29726:3;29711:19;;29330:406;19672:55:1;;;;;;;;19754:6;19761:5;19754:13;;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;;;;;19754:13:1;19737:384;;19783:10;19794:5;19783:17;;;;;;:::i;:::-;;;;19877:7;;19861:6;;:13;;19868:5;;19861:13;:::i;:::-;;;;;;;;;;;;;;:23;;;;;-1:-1:-1;;;;;19861:23:1;;;;;-1:-1:-1;;;;;19861:23:1;;;;;;19918:10;19898;19909:5;19898:17;;;;;;:::i;:::-;;;;;;;;;;;;;;:30;;;;;-1:-1:-1;;;;;19898:30:1;;;;;-1:-1:-1;;;;;19898:30:1;;;;;;19960:4;19942:8;19951:5;19942:15;;;;;;:::i;:::-;;;;;;;;;;;;;;:22;;;;;-1:-1:-1;;19942:22:1;;;;;;;;;;19983:45;;;;19993:5;;20000:7;;20009:12;;19942:22;;19983:45;:::i;:::-;;;;;;;;2080:637:13;2733:1937:1;;:::o;19737:384::-;20064:46;20074:5;20081:7;20090:12;20104:5;20064:46;;;;;;;;;:::i;2116:147:15:-;2952:13:13;;;;;;;2944:69;;;;-1:-1:-1;;;2944:69:13;;;;;;;:::i;:::-;2218:38:15::1;2241:5;2248:7;2218:22;:38::i;594:65:17:-:0;2952:13:13;;;;;;;2944:69;;;;-1:-1:-1;;;2944:69:13;;;;;;;:::i;1853:111:14:-;2952:13:13;;;;;;;2944:69;;;;-1:-1:-1;;;2944:69:13;;;;;;;:::i;:::-;1923:34:14::1;:32;:34::i;8748:389:15:-:0;-1:-1:-1;;;;;8831:21:15;;8823:65;;;;-1:-1:-1;;;8823:65:15;;30831:2:40;8823:65:15;;;30813:21:40;30870:2;30850:18;;;30843:30;30909:33;30889:18;;;30882:61;30960:18;;8823:65:15;30629:355:40;8823:65:15;8975:6;8959:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8991:18:15;;;;;;:9;:18;;;;;:28;;9013:6;;8991:18;:28;;9013:6;;8991:28;:::i;:::-;;;;-1:-1:-1;;9034:37:15;;2094:25:40;;;-1:-1:-1;;;;;9034:37:15;;;9051:1;;-1:-1:-1;;;;;;;;;;;9034:37:15;2082:2:40;2067:18;9034:37:15;;;;;;;1243:161:17;;:::o;5054:800:5:-;5135:7;5823:13;;5837:7;5823:21;;;;:::i;:::-;5798;;;;5774:20;;;;5756:38;;:15;:38;:::i;:::-;5755:64;;;;:::i;:::-;:90;;;;:::i;:::-;5748:97;5054:800;-1:-1:-1;;5054:800:5:o;6198:1172::-;6390:10;6270:7;6383:18;;;:6;:18;;;;;;6440:12;:24;;6270:7;;6440:12;6383:18;;6440:24;;;;;;:::i;:::-;;;;;;;;;;;:39;;6480:5;6440:46;;;;;;;;:::i;:::-;;;;;;;;;;6411:75;;;;;;;;6440:46;;;;;;;6411:75;;-1:-1:-1;;;;;6411:75:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6504:30:5;-1:-1:-1;6504:30:5;6496:93;;;;-1:-1:-1;;;6496:93:5;;31191:2:40;6496:93:5;;;31173:21:40;31230:2;31210:18;;;31203:30;31269:34;31249:18;;;31242:62;-1:-1:-1;;;31320:18:40;;;31313:48;31378:19;;6496:93:5;30989:414:40;6496:93:5;6677:14;6694:35;6715:13;6694:20;:35::i;:::-;6677:52;;6840:6;6817:13;:20;;;:29;;;;:::i;:::-;6794:20;;;:52;;;6931:400;;6982:12;6995:10;6982:24;;;;;;;;:::i;:::-;;;;;;;;;;;:39;;7022:5;6982:46;;;;;;;;:::i;:::-;;;;;;;;;;;;;6975:53;;-1:-1:-1;;;;;;6975:53:5;;;;;;;;;;;;;;;;;;6931:400;;;7174:13;:20;;;7118:12;7131:10;7118:24;;;;;;;;:::i;:::-;;;;;;;;;;;:39;;7158:5;7118:46;;;;;;;;:::i;:::-;;;;;;;;;;;:53;;:76;;;;7300:15;7245:12;7258:10;7245:24;;;;;;;;:::i;:::-;;;;;;;;;;;:39;;7285:5;7245:46;;;;;;;;:::i;:::-;;;;;;;;;;;:52;;:70;;;;6931:400;7349:13;7356:6;7349;:13;:::i;:::-;7342:20;6198:1172;-1:-1:-1;;;;;;6198:1172:5:o;2973:504::-;3130:12;:19;;;;;;;;;3032:7;3130:19;;;3032:7;;3249:23;;;:::i;:::-;3229:43;;3360:6;3329:12;3342:9;3329:23;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:37;;-1:-1:-1;;;;;;3329:37:5;-1:-1:-1;;;;;3329:37:5;;;;;;3417:14;;;;;;:6;:14;;;;;;;:26;;;-1:-1:-1;3417:14:5;2973:504::o;2269:159:15:-;2952:13:13;;;;;;;2944:69;;;;-1:-1:-1;;;2944:69:13;;;;;;;:::i;:::-;2381:13:15;;::::1;::::0;:5:::1;::::0;:13:::1;::::0;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;2404:17:15;;::::1;::::0;:7:::1;::::0;:17:::1;::::0;::::1;::::0;::::1;:::i;1970:109:14:-:0;2952:13:13;;;;;;;2944:69;;;;-1:-1:-1;;;2944:69:13;;;;;;;:::i;:::-;1772:1:14::1;2050:7;:22:::0;1970:109::o;-1:-1:-1:-;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;169:258:40;241:1;251:113;265:6;262:1;259:13;251:113;;;341:11;;;335:18;322:11;;;315:39;287:2;280:10;251:113;;;382:6;379:1;376:13;373:48;;;-1:-1:-1;;417:1:40;399:16;;392:27;169:258::o;432:::-;474:3;512:5;506:12;539:6;534:3;527:19;555:63;611:6;604:4;599:3;595:14;588:4;581:5;577:16;555:63;:::i;:::-;672:2;651:15;-1:-1:-1;;647:29:40;638:39;;;;679:4;634:50;;432:258;-1:-1:-1;;432:258:40:o;695:220::-;844:2;833:9;826:21;807:4;864:45;905:2;894:9;890:18;882:6;864:45;:::i;:::-;856:53;695:220;-1:-1:-1;;;695:220:40:o;920:173::-;988:20;;-1:-1:-1;;;;;1037:31:40;;1027:42;;1017:70;;1083:1;1080;1073:12;1017:70;920:173;;;:::o;1098:254::-;1166:6;1174;1227:2;1215:9;1206:7;1202:23;1198:32;1195:52;;;1243:1;1240;1233:12;1195:52;1266:29;1285:9;1266:29;:::i;:::-;1256:39;1342:2;1327:18;;;;1314:32;;-1:-1:-1;;;1098:254:40:o;1549:203::-;-1:-1:-1;;;;;1713:32:40;;;;1695:51;;1683:2;1668:18;;1549:203::o;1757:186::-;1816:6;1869:2;1857:9;1848:7;1844:23;1840:32;1837:52;;;1885:1;1882;1875:12;1837:52;1908:29;1927:9;1908:29;:::i;2130:127::-;2191:10;2186:3;2182:20;2179:1;2172:31;2222:4;2219:1;2212:15;2246:4;2243:1;2236:15;2262:719;2305:5;2358:3;2351:4;2343:6;2339:17;2335:27;2325:55;;2376:1;2373;2366:12;2325:55;2412:6;2399:20;2438:18;2475:2;2471;2468:10;2465:36;;;2481:18;;:::i;:::-;2556:2;2550:9;2524:2;2610:13;;-1:-1:-1;;2606:22:40;;;2630:2;2602:31;2598:40;2586:53;;;2654:18;;;2674:22;;;2651:46;2648:72;;;2700:18;;:::i;:::-;2740:10;2736:2;2729:22;2775:2;2767:6;2760:18;2821:3;2814:4;2809:2;2801:6;2797:15;2793:26;2790:35;2787:55;;;2838:1;2835;2828:12;2787:55;2902:2;2895:4;2887:6;2883:17;2876:4;2868:6;2864:17;2851:54;2949:1;2942:4;2937:2;2929:6;2925:15;2921:26;2914:37;2969:6;2960:15;;;;;;2262:719;;;;:::o;2986:322::-;3055:6;3108:2;3096:9;3087:7;3083:23;3079:32;3076:52;;;3124:1;3121;3114:12;3076:52;3164:9;3151:23;3197:18;3189:6;3186:30;3183:50;;;3229:1;3226;3219:12;3183:50;3252;3294:7;3285:6;3274:9;3270:22;3252:50;:::i;:::-;3242:60;2986:322;-1:-1:-1;;;;2986:322:40:o;3592:328::-;3669:6;3677;3685;3738:2;3726:9;3717:7;3713:23;3709:32;3706:52;;;3754:1;3751;3744:12;3706:52;3777:29;3796:9;3777:29;:::i;:::-;3767:39;;3825:38;3859:2;3848:9;3844:18;3825:38;:::i;:::-;3815:48;;3910:2;3899:9;3895:18;3882:32;3872:42;;3592:328;;;;;:::o;3925:543::-;4013:6;4021;4074:2;4062:9;4053:7;4049:23;4045:32;4042:52;;;4090:1;4087;4080:12;4042:52;4130:9;4117:23;4159:18;4200:2;4192:6;4189:14;4186:34;;;4216:1;4213;4206:12;4186:34;4239:50;4281:7;4272:6;4261:9;4257:22;4239:50;:::i;:::-;4229:60;;4342:2;4331:9;4327:18;4314:32;4298:48;;4371:2;4361:8;4358:16;4355:36;;;4387:1;4384;4377:12;4355:36;;4410:52;4454:7;4443:8;4432:9;4428:24;4410:52;:::i;:::-;4400:62;;;3925:543;;;;;:::o;4662:180::-;4721:6;4774:2;4762:9;4753:7;4749:23;4745:32;4742:52;;;4790:1;4787;4780:12;4742:52;-1:-1:-1;4813:23:40;;4662:180;-1:-1:-1;4662:180:40:o;4847:160::-;4912:20;;4968:13;;4961:21;4951:32;;4941:60;;4997:1;4994;4987:12;5012:254;5077:6;5085;5138:2;5126:9;5117:7;5113:23;5109:32;5106:52;;;5154:1;5151;5144:12;5106:52;5177:29;5196:9;5177:29;:::i;:::-;5167:39;;5225:35;5256:2;5245:9;5241:18;5225:35;:::i;:::-;5215:45;;5012:254;;;;;:::o;5271:533::-;5364:6;5372;5380;5388;5441:3;5429:9;5420:7;5416:23;5412:33;5409:53;;;5458:1;5455;5448:12;5409:53;5498:9;5485:23;5531:18;5523:6;5520:30;5517:50;;;5563:1;5560;5553:12;5517:50;5586;5628:7;5619:6;5608:9;5604:22;5586:50;:::i;:::-;5576:60;;;5683:2;5672:9;5668:18;5655:32;5645:42;;5706:38;5740:2;5729:9;5725:18;5706:38;:::i;:::-;5696:48;;5763:35;5794:2;5783:9;5779:18;5763:35;:::i;:::-;5753:45;;5271:533;;;;;;;:::o;5809:254::-;5877:6;5885;5938:2;5926:9;5917:7;5913:23;5909:32;5906:52;;;5954:1;5951;5944:12;5906:52;5990:9;5977:23;5967:33;;6019:38;6053:2;6042:9;6038:18;6019:38;:::i;6068:260::-;6136:6;6144;6197:2;6185:9;6176:7;6172:23;6168:32;6165:52;;;6213:1;6210;6203:12;6165:52;6236:29;6255:9;6236:29;:::i;:::-;6226:39;;6284:38;6318:2;6307:9;6303:18;6284:38;:::i;6333:1081::-;6489:4;6518:2;6547;6536:9;6529:21;6569:2;6609;6598:9;6594:18;6654:6;6648:13;6643:2;6632:9;6628:18;6621:41;6709:2;6701:6;6697:15;6691:22;6732:4;6772:2;6767;6756:9;6752:18;6745:30;6795:6;6830:12;6824:19;6867:6;6859;6852:22;6893:3;6883:13;;6927:2;6916:9;6912:18;6905:25;;6971:2;6957:12;6953:21;6939:35;;6992:1;7002:386;7016:6;7013:1;7010:13;7002:386;;;7075:13;;7117:9;;-1:-1:-1;;;;;7113:35:40;7101:48;;7189:11;;;7183:18;7169:12;;;7162:40;7242:11;;;7236:18;7222:12;;;7215:40;7295:11;;7289:18;7275:12;;;7268:40;7363:15;;;;7328:12;;;;7145:1;7031:9;7002:386;;;-1:-1:-1;7405:3:40;;6333:1081;-1:-1:-1;;;;;;;;;6333:1081:40:o;7419:248::-;7487:6;7495;7548:2;7536:9;7527:7;7523:23;7519:32;7516:52;;;7564:1;7561;7554:12;7516:52;-1:-1:-1;;7587:23:40;;;7657:2;7642:18;;;7629:32;;-1:-1:-1;7419:248:40:o;7672:380::-;7751:1;7747:12;;;;7794;;;7815:61;;7869:4;7861:6;7857:17;7847:27;;7815:61;7922:2;7914:6;7911:14;7891:18;7888:38;7885:161;;;7968:10;7963:3;7959:20;7956:1;7949:31;8003:4;8000:1;7993:15;8031:4;8028:1;8021:15;7885:161;;7672:380;;;:::o;8057:127::-;8118:10;8113:3;8109:20;8106:1;8099:31;8149:4;8146:1;8139:15;8173:4;8170:1;8163:15;8189:128;8229:3;8260:1;8256:6;8253:1;8250:13;8247:39;;;8266:18;;:::i;:::-;-1:-1:-1;8302:9:40;;8189:128::o;8991:276::-;9122:3;9160:6;9154:13;9176:53;9222:6;9217:3;9210:4;9202:6;9198:17;9176:53;:::i;:::-;9245:16;;;;;8991:276;-1:-1:-1;;8991:276:40:o;9272:470::-;9451:3;9489:6;9483:13;9505:53;9551:6;9546:3;9539:4;9531:6;9527:17;9505:53;:::i;:::-;9621:13;;9580:16;;;;9643:57;9621:13;9580:16;9677:4;9665:17;;9643:57;:::i;:::-;9716:20;;9272:470;-1:-1:-1;;;;9272:470:40:o;9747:125::-;9787:4;9815:1;9812;9809:8;9806:34;;;9820:18;;:::i;:::-;-1:-1:-1;9857:9:40;;9747:125::o;9877:355::-;10079:2;10061:21;;;10118:2;10098:18;;;10091:30;10157:33;10152:2;10137:18;;10130:61;10223:2;10208:18;;9877:355::o;15223:408::-;15425:2;15407:21;;;15464:2;15444:18;;;15437:30;15503:34;15498:2;15483:18;;15476:62;-1:-1:-1;;;15569:2:40;15554:18;;15547:42;15621:3;15606:19;;15223:408::o;15636:332::-;15838:2;15820:21;;;15877:1;15857:18;;;15850:29;-1:-1:-1;;;15910:2:40;15895:18;;15888:39;15959:2;15944:18;;15636:332::o;15973:168::-;16013:7;16079:1;16075;16071:6;16067:14;16064:1;16061:21;16056:1;16049:9;16042:17;16038:45;16035:71;;;16086:18;;:::i;:::-;-1:-1:-1;16126:9:40;;15973:168::o;16146:217::-;16186:1;16212;16202:132;;16256:10;16251:3;16247:20;16244:1;16237:31;16291:4;16288:1;16281:15;16319:4;16316:1;16309:15;16202:132;-1:-1:-1;16348:9:40;;16146:217::o;16368:344::-;16570:2;16552:21;;;16609:2;16589:18;;;16582:30;-1:-1:-1;;;16643:2:40;16628:18;;16621:50;16703:2;16688:18;;16368:344::o;18672:346::-;18874:2;18856:21;;;18913:2;18893:18;;;18886:30;-1:-1:-1;;;18947:2:40;18932:18;;18925:52;19009:2;18994:18;;18672:346::o;19023:422::-;19225:2;19207:21;;;19264:2;19244:18;;;19237:30;19303:34;19298:2;19283:18;;19276:62;19374:28;19369:2;19354:18;;19347:56;19435:3;19420:19;;19023:422::o;19450:184::-;19520:6;19573:2;19561:9;19552:7;19548:23;19544:32;19541:52;;;19589:1;19586;19579:12;19541:52;-1:-1:-1;19612:16:40;;19450:184;-1:-1:-1;19450:184:40:o;21511:425::-;21713:2;21695:21;;;21752:2;21732:18;;;21725:30;21791:34;21786:2;21771:18;;21764:62;21862:31;21857:2;21842:18;;21835:59;21926:3;21911:19;;21511:425::o;22067:1257::-;22241:2;22230:9;22223:21;22204:4;22264:1;22297:6;22291:13;22327:3;22349:1;22377:9;22373:2;22369:18;22359:28;;22437:2;22426:9;22422:18;22459;22449:61;;22503:4;22495:6;22491:17;22481:27;;22449:61;22529:2;22577;22569:6;22566:14;22546:18;22543:38;22540:165;;;-1:-1:-1;;;22604:33:40;;22660:4;22657:1;22650:15;22690:4;22611:3;22678:17;22540:165;22776:2;22761:18;;101:19;;;144:14;;;22804:18;22831:100;;;;22945:1;22940:315;;;;22797:458;;22831:100;-1:-1:-1;;22864:24:40;;22852:37;;22909:12;;;;-1:-1:-1;22831:100:40;;22940:315;22014:1;22007:14;;;22051:4;22038:18;;23035:1;23049:165;23063:6;23060:1;23057:13;23049:165;;;23141:14;;23128:11;;;23121:35;23184:16;;;;23078:10;;23049:165;;;23234:11;;;-1:-1:-1;;22797:458:40;-1:-1:-1;;23291:18:40;;;;23284:34;;;;-1:-1:-1;23272:3:40;;22067:1257;-1:-1:-1;;;;;22067:1257:40:o;23683:491::-;23898:25;;;-1:-1:-1;;;;;23997:15:40;;;23992:2;23977:18;;23970:43;24049:15;;24044:2;24029:18;;24022:43;24101:3;24096:2;24081:18;;24074:31;;;23879:4;;24122:46;;24148:19;;24140:6;24122:46;:::i;25337:127::-;25398:10;25393:3;25389:20;25386:1;25379:31;25429:4;25426:1;25419:15;25453:4;25450:1;25443:15;29741:471;29968:3;29957:9;29950:22;29931:4;29989:46;30030:3;30019:9;30015:19;30007:6;29989:46;:::i;:::-;-1:-1:-1;;;;;30071:32:40;;;;30066:2;30051:18;;30044:60;-1:-1:-1;30135:2:40;30120:18;;30113:34;;;;30190:14;30183:22;30178:2;30163:18;;;30156:50;29981:54;29741:471;-1:-1:-1;29741:471:40:o;30217:407::-;30419:2;30401:21;;;30458:2;30438:18;;;30431:30;30497:34;30492:2;30477:18;;30470:62;-1:-1:-1;;;30563:2:40;30548:18;;30541:41;30614:3;30599:19;;30217:407::o",
  "language": "Solidity",
  "natspec": {
    "events": {
      "Staked(address,uint256,uint256,uint256)": {
        "notice": "Staked event is triggered whenever a user stakes tokens, address is indexed to make it filterable"
      }
    },
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "burn(uint256)": {
        "details": "Destroys `amount` tokens from the caller. See {ERC20-_burn}."
      },
      "burnFrom(address,uint256)": {
        "details": "Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "hasStake(address)": {
        "notice": "hasStake is used to check if a account has stakes and the total amount along with all the seperate stakes"
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "rewardPerHour()": {
        "notice": "rewardPerHour is 1000 because it is used to represent 0.001, since we only use integer numbers This will give users 0.1% reward for each staked token / H"
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
      },
      "withdrawStake(uint256,uint256)": {
        "notice": "withdrawStake is used to withdraw stakes from the account holder  This also now generates a liquidity concern and has to be monitored from the bridge. // This is why the 5% insurance. // See GBCC. // JRR Strikes Again."
      }
    },
    "version": 1
  },
  "offset": [
    2510,
    47357
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH3 0x38B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x78182D03 GT PUSH3 0x1D7 JUMPI DUP1 PUSH4 0xD18B34FC GT PUSH3 0x101 JUMPI DUP1 PUSH4 0xE73E14BF GT PUSH3 0x9C JUMPI DUP1 PUSH4 0xE73E14BF EQ PUSH3 0xA76 JUMPI DUP1 PUSH4 0xEBB6BE1C EQ PUSH3 0xAAA JUMPI DUP1 PUSH4 0xEBEF4F0E EQ PUSH3 0xAC2 JUMPI DUP1 PUSH4 0xEDA98299 EQ PUSH3 0xADA JUMPI DUP1 PUSH4 0xF18E673D EQ PUSH3 0xAF2 JUMPI DUP1 PUSH4 0xF1FDF469 EQ PUSH3 0xB17 JUMPI DUP1 PUSH4 0xFA144964 EQ PUSH3 0xB3C JUMPI DUP1 PUSH4 0xFAC70E23 EQ PUSH3 0xB61 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xD18B34FC EQ PUSH3 0x99F JUMPI DUP1 PUSH4 0xDA35A26F EQ PUSH3 0x9A9 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH3 0x9CE JUMPI DUP1 PUSH4 0xDF56B490 EQ PUSH3 0x9F3 JUMPI DUP1 PUSH4 0xE2903F9E EQ PUSH3 0xA0A JUMPI DUP1 PUSH4 0xE2C50B4B EQ PUSH3 0xA22 JUMPI DUP1 PUSH4 0xE3F56AF4 EQ PUSH3 0xA39 JUMPI DUP1 PUSH4 0xE51C8922 EQ PUSH3 0xA5E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA4544648 GT PUSH3 0x172 JUMPI DUP1 PUSH4 0xA4544648 EQ PUSH3 0x892 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH3 0x8B7 JUMPI DUP1 PUSH4 0xA694FC3A EQ PUSH3 0x8DC JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH3 0x901 JUMPI DUP1 PUSH4 0xB19A207F EQ PUSH3 0x926 JUMPI DUP1 PUSH4 0xB4E51B7B EQ PUSH3 0x94B JUMPI DUP1 PUSH4 0xB7A7DC5C EQ PUSH3 0x955 JUMPI DUP1 PUSH4 0xBED34BBA EQ PUSH3 0x97A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x78182D03 EQ PUSH3 0x78C JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH3 0x7A4 JUMPI DUP1 PUSH4 0x8297F29F EQ PUSH3 0x7C9 JUMPI DUP1 PUSH4 0x8761DC5F EQ PUSH3 0x806 JUMPI DUP1 PUSH4 0x8B8FBD92 EQ PUSH3 0x82B JUMPI DUP1 PUSH4 0x935418FC EQ PUSH3 0x84B JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH3 0x855 JUMPI DUP1 PUSH4 0x9BC255F8 EQ PUSH3 0x86D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3F31C3D4 GT PUSH3 0x2B9 JUMPI DUP1 PUSH4 0x597E1FB5 GT PUSH3 0x254 JUMPI DUP1 PUSH4 0x597E1FB5 EQ PUSH3 0x694 JUMPI DUP1 PUSH4 0x60C7C34A EQ PUSH3 0x6B5 JUMPI DUP1 PUSH4 0x61414358 EQ PUSH3 0x6CD JUMPI DUP1 PUSH4 0x6A35205E EQ PUSH3 0x6E5 JUMPI DUP1 PUSH4 0x6C3C84F7 EQ PUSH3 0x6FD JUMPI DUP1 PUSH4 0x6D714B68 EQ PUSH3 0x715 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH3 0x73A JUMPI DUP1 PUSH4 0x76795411 EQ PUSH3 0x774 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3F31C3D4 EQ PUSH3 0x5BC JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH3 0x5E1 JUMPI DUP1 PUSH4 0x43D726D6 EQ PUSH3 0x606 JUMPI DUP1 PUSH4 0x4409559A EQ PUSH3 0x61E JUMPI DUP1 PUSH4 0x4420E486 EQ PUSH3 0x640 JUMPI DUP1 PUSH4 0x44874F4A EQ PUSH3 0x657 JUMPI DUP1 PUSH4 0x495057BE EQ PUSH3 0x46D JUMPI DUP1 PUSH4 0x588EE29B EQ PUSH3 0x67C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x266001D3 GT PUSH3 0x32A JUMPI DUP1 PUSH4 0x266001D3 EQ PUSH3 0x4D9 JUMPI DUP1 PUSH4 0x29722A86 EQ PUSH3 0x4FE JUMPI DUP1 PUSH4 0x305601BC EQ PUSH3 0x516 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH3 0x52E JUMPI DUP1 PUSH4 0x32E7C5BF EQ PUSH3 0x54C JUMPI DUP1 PUSH4 0x39509351 EQ PUSH3 0x563 JUMPI DUP1 PUSH4 0x39E7357C EQ PUSH3 0x588 JUMPI DUP1 PUSH4 0x3E9D5E0E EQ PUSH3 0x5A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH3 0x390 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH3 0x3C0 JUMPI DUP1 PUSH4 0x9ED4607 EQ PUSH3 0x3F6 JUMPI DUP1 PUSH4 0x179B7742 EQ PUSH3 0x41D JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH3 0x442 JUMPI DUP1 PUSH4 0x1B9265B8 EQ PUSH3 0x463 JUMPI DUP1 PUSH4 0x2017FB74 EQ PUSH3 0x46F JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH3 0x4B4 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x39D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x3A8 PUSH3 0xB78 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x3B7 SWAP2 SWAP1 PUSH3 0x33A6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x3CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x3E5 PUSH3 0x3DF CALLDATASIZE PUSH1 0x4 PUSH3 0x33DF JUMP JUMPDEST PUSH3 0xC12 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x3B7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x403 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x40E PUSH3 0xC2C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x3B7 SWAP2 SWAP1 PUSH3 0x340C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x42A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x3E5 PUSH3 0x43C CALLDATASIZE PUSH1 0x4 PUSH3 0x3420 JUMP JUMPDEST PUSH3 0xC3B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x44F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x35 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x3B7 JUMP JUMPDEST PUSH3 0x46D PUSH3 0xC5F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x47C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x494 PUSH3 0x48E CALLDATASIZE PUSH1 0x4 PUSH3 0x34E9 JUMP JUMPDEST PUSH3 0xD34 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH3 0x3B7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x4C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x3E5 PUSH3 0x4D3 CALLDATASIZE PUSH1 0x4 PUSH3 0x352A JUMP JUMPDEST PUSH3 0xD8B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x4E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x3A8 PUSH3 0x4F8 CALLDATASIZE PUSH1 0x4 PUSH3 0x356B JUMP JUMPDEST PUSH3 0xDB3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x50B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x454 PUSH1 0xEB SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x523 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x454 PUSH3 0xDE1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x53B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x3B7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x559 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xCD SLOAD PUSH3 0x454 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x570 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x3E5 PUSH3 0x582 CALLDATASIZE PUSH1 0x4 PUSH3 0x33DF JUMP JUMPDEST PUSH3 0xDFA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x595 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x46D PUSH3 0xE22 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x5AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xEA SLOAD PUSH3 0x3E5 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x5C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x46D PUSH3 0x5DB CALLDATASIZE PUSH1 0x4 PUSH3 0x35D6 JUMP JUMPDEST PUSH3 0xE6B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x5EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x46D PUSH3 0x600 CALLDATASIZE PUSH1 0x4 PUSH3 0x35D6 JUMP JUMPDEST PUSH3 0xF5B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x613 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x46D PUSH3 0xF6A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x62B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xD5 SLOAD PUSH3 0x40E SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH3 0x46D PUSH3 0x651 CALLDATASIZE PUSH1 0x4 PUSH3 0x3420 JUMP JUMPDEST PUSH3 0x114D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x664 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x46D PUSH3 0x676 CALLDATASIZE PUSH1 0x4 PUSH3 0x35D6 JUMP JUMPDEST PUSH3 0x11A2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x689 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x46D PUSH3 0x11C1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x6A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xEA SLOAD PUSH3 0x3E5 SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x6C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x40E PUSH3 0x12A3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x6DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x454 PUSH1 0x99 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x6F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x454 PUSH1 0xE3 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x70A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x46D PUSH3 0x12AF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x722 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x46D PUSH3 0x734 CALLDATASIZE PUSH1 0x4 PUSH3 0x3601 JUMP JUMPDEST PUSH3 0x1474 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x747 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x454 PUSH3 0x759 CALLDATASIZE PUSH1 0x4 PUSH3 0x3420 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x781 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x454 PUSH1 0xEC SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x799 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x454 PUSH1 0xE2 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x7B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x46D PUSH3 0x7C3 CALLDATASIZE PUSH1 0x4 PUSH3 0x33DF JUMP JUMPDEST PUSH3 0x14E9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x7D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x3E5 PUSH3 0x7E8 CALLDATASIZE PUSH1 0x4 PUSH3 0x3420 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x813 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x46D PUSH3 0x825 CALLDATASIZE PUSH1 0x4 PUSH3 0x35D6 JUMP JUMPDEST PUSH3 0x1506 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x838 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xCE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH3 0x40E JUMP JUMPDEST PUSH3 0x454 PUSH3 0x1554 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x862 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x3A8 PUSH3 0x166C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x87A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x454 PUSH3 0x88C CALLDATASIZE PUSH1 0x4 PUSH3 0x33DF JUMP JUMPDEST PUSH3 0x167D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x89F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x46D PUSH3 0x8B1 CALLDATASIZE PUSH1 0x4 PUSH3 0x34E9 JUMP JUMPDEST PUSH3 0x18DD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x8C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x3E5 PUSH3 0x8D6 CALLDATASIZE PUSH1 0x4 PUSH3 0x33DF JUMP JUMPDEST PUSH3 0x1996 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x8E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x46D PUSH3 0x8FB CALLDATASIZE PUSH1 0x4 PUSH3 0x35D6 JUMP JUMPDEST PUSH3 0x1A17 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x90E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x3E5 PUSH3 0x920 CALLDATASIZE PUSH1 0x4 PUSH3 0x33DF JUMP JUMPDEST PUSH3 0x1B3C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x933 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x46D PUSH3 0x945 CALLDATASIZE PUSH1 0x4 PUSH3 0x35D6 JUMP JUMPDEST PUSH3 0x1B4C JUMP JUMPDEST PUSH3 0x46D PUSH3 0x1B69 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x962 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x40E PUSH3 0x974 CALLDATASIZE PUSH1 0x4 PUSH3 0x3639 JUMP JUMPDEST PUSH3 0x1D6C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x987 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x3E5 PUSH3 0x999 CALLDATASIZE PUSH1 0x4 PUSH3 0x356B JUMP JUMPDEST PUSH3 0x1EB7 JUMP JUMPDEST PUSH3 0x46D PUSH3 0x1F14 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x9B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x46D PUSH3 0x9C8 CALLDATASIZE PUSH1 0x4 PUSH3 0x36A9 JUMP JUMPDEST PUSH3 0x1F32 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x9DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x454 PUSH3 0x9ED CALLDATASIZE PUSH1 0x4 PUSH3 0x36CF JUMP JUMPDEST PUSH3 0x2164 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0xA00 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xE3 SLOAD PUSH3 0x454 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0xA17 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x454 PUSH1 0xE7 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0xA2F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x99 SLOAD PUSH3 0x454 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0xA46 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x454 PUSH3 0xA58 CALLDATASIZE PUSH1 0x4 PUSH3 0x35D6 JUMP JUMPDEST PUSH3 0x218F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0xA6B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x454 PUSH1 0xCC SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0xA83 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0xA9B PUSH3 0xA95 CALLDATASIZE PUSH1 0x4 PUSH3 0x3420 JUMP JUMPDEST PUSH3 0x22D6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x3B7 SWAP2 SWAP1 PUSH3 0x36FE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0xAB7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x454 PUSH1 0xE6 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0xACF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x454 PUSH1 0xE4 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0xAE7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x454 PUSH1 0xE5 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0xAFF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x46D PUSH3 0xB11 CALLDATASIZE PUSH1 0x4 PUSH3 0x3781 JUMP JUMPDEST PUSH3 0x2492 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0xB24 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x454 PUSH3 0xB36 CALLDATASIZE PUSH1 0x4 PUSH3 0x3781 JUMP JUMPDEST PUSH3 0x24A8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0xB49 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x46D PUSH3 0xB5B CALLDATASIZE PUSH1 0x4 PUSH3 0x35D6 JUMP JUMPDEST PUSH3 0x256E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0xB6E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xE2 SLOAD PUSH3 0x454 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x36 DUP1 SLOAD PUSH3 0xB89 SWAP1 PUSH3 0x37A4 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH3 0xBB7 SWAP1 PUSH3 0x37A4 JUMP JUMPDEST DUP1 ISZERO PUSH3 0xC08 JUMPI DUP1 PUSH1 0x1F LT PUSH3 0xBDC JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH3 0xC08 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH3 0xBEA JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH3 0xC22 DUP2 DUP6 DUP6 PUSH3 0x258B JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0xD5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0xE9 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH3 0xC52 SWAP2 SWAP1 PUSH3 0x37F7 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH1 0x0 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0xEA SLOAD PUSH1 0xFF AND ISZERO PUSH3 0xCA1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x6 PUSH1 0x24 DUP3 ADD MSTORE PUSH6 0x213934B1B597 PUSH1 0xD1 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xEA SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH3 0xCE5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x7 PUSH1 0x24 DUP3 ADD MSTORE PUSH7 0x21B637B9B2B217 PUSH1 0xC9 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH3 0xC98 JUMP JUMPDEST PUSH1 0x40 MLOAD CALLVALUE DUP2 MSTORE PUSH32 0x19CDFBBC87E2C4F8B08471BB8B544A25603AA3A6037DAB5DD4A660BE7A45B50C SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 CALLVALUE PUSH1 0xCD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH3 0xD2D SWAP2 SWAP1 PUSH3 0x37F7 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xDA DUP4 PUSH1 0x40 MLOAD PUSH3 0xD49 SWAP2 SWAP1 PUSH3 0x3812 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH1 0xDC SWAP1 PUSH3 0xD73 SWAP1 DUP7 SWAP1 PUSH3 0x3812 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SLOAD SWAP2 POP SWAP2 POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH3 0xD9B DUP6 DUP3 DUP6 PUSH3 0x26B3 JUMP JUMPDEST PUSH3 0xDA8 DUP6 DUP6 DUP6 PUSH3 0x2734 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH3 0xDCA SWAP3 SWAP2 SWAP1 PUSH3 0x3830 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE6 SLOAD PUSH1 0xE4 SLOAD PUSH3 0xDF5 SWAP2 SWAP1 PUSH3 0x3863 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH3 0xC22 DUP2 DUP6 DUP6 PUSH3 0xE10 DUP4 DUP4 PUSH3 0x2164 JUMP JUMPDEST PUSH3 0xE1C SWAP2 SWAP1 PUSH3 0x37F7 JUMP JUMPDEST PUSH3 0x258B JUMP JUMPDEST PUSH1 0xEE SLOAD PUSH1 0x40 MLOAD PUSH32 0xD1C8FE98F1F49786133C2B0BEC4CDDF9F73586849F7102495587F0434FEEECD SWAP2 PUSH3 0xE61 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH3 0x340C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x9A SLOAD EQ ISZERO PUSH3 0xE91 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xC98 SWAP1 PUSH3 0x387D JUMP JUMPDEST PUSH1 0x2 PUSH1 0x9A SSTORE PUSH3 0xEA0 PUSH3 0xC2C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH3 0xEF5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x2CB7BA9030B93290309031B637B73297 PUSH1 0x81 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH3 0xC98 JUMP JUMPDEST DUP1 PUSH1 0xCD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH3 0xF09 SWAP2 SWAP1 PUSH3 0x3863 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH3 0xF19 SWAP1 POP PUSH3 0xC2C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH3 0xF52 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x1 PUSH1 0x9A SSTORE JUMP JUMPDEST PUSH3 0xF67 CALLER DUP3 PUSH3 0x28FB JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0xEA SLOAD PUSH1 0xFF AND ISZERO PUSH3 0xFBF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F752063616E206E6F7420636C6F7365206120627269636B2E000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH3 0xC98 JUMP JUMPDEST PUSH1 0xEA SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH3 0x1024 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F752063616E206E6F7420636C6F73653A20416C726561647920636C6F7365 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x3217 PUSH1 0xF1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH3 0xC98 JUMP JUMPDEST PUSH1 0xEA SLOAD PUSH3 0x10000 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH3 0x107F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F752063616E206E6F7420636C6F73653A204D6574617374616B65642E0000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH3 0xC98 JUMP JUMPDEST PUSH1 0xD5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH3 0x10C8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x2737BA1037BBB732B917 PUSH1 0xB1 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH3 0xC98 JUMP JUMPDEST PUSH1 0xEA DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x5700 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH3 0xE61 SWAP1 PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x3C SWAP1 DUP3 ADD MSTORE PUSH32 0x4F7572206C61737420686172726168206265666F726520776520636C6F736520 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x666F7220676F6F642E20576520617265206E6F7720636C6F7365642E00000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH32 0xE7375F84984FEFA09F5F03AA56FFB11ED839B99D56943F858953E537609F8BE7 DUP2 PUSH1 0x40 MLOAD PUSH3 0x117E SWAP2 SWAP1 PUSH3 0x340C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 CALLVALUE PUSH1 0xCD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH3 0x119A SWAP2 SWAP1 PUSH3 0x37F7 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0xD5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH3 0x11BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xE2 SSTORE JUMP JUMPDEST JUMP JUMPDEST PUSH3 0x11CB PUSH3 0x2A3E JUMP JUMPDEST POP PUSH32 0x2AF7EE6C8F08ECCB0BD31D90E03CA2C2373DBECF67C26FB36684CF46F38AC259 PUSH1 0x40 MLOAD PUSH3 0x1267 SWAP1 PUSH1 0x40 DUP1 DUP3 MSTORE PUSH1 0x6 SWAP1 DUP3 ADD MSTORE PUSH6 0x2222A12AA39D PUSH1 0xD1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x34 SWAP1 DUP3 ADD MSTORE PUSH32 0x636C6F776E7365617263682829207761732063616C6C656420616E6420776173 PUSH1 0xA0 DUP3 ADD MSTORE PUSH20 0x103737BA103830BCB0B1363297102CB4B5B2B997 PUSH1 0x61 SHL PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0xE0 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH32 0x19CDFBBC87E2C4F8B08471BB8B544A25603AA3A6037DAB5DD4A660BE7A45B50C PUSH1 0xE9 SLOAD PUSH1 0x40 MLOAD PUSH3 0xE61 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH3 0xDF5 PUSH3 0xC2C JUMP JUMPDEST PUSH1 0xD5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH3 0x1331 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F7520646F206E6F7420686176652074686520706F77657220746F20636861 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E676520746865206675747572652C206F6E6C79204920646F2E000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH3 0xC98 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x5700 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x40 MLOAD PUSH3 0x13C5 SWAP1 PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x56 SWAP1 DUP3 ADD MSTORE PUSH32 0x506C656173652077656C636F6D65206F757220666972737420627269636B206F PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x6620616C6C2074696D652C20627269636B656420627574206E6F742061206272 PUSH1 0x60 DUP3 ADD MSTORE PUSH22 0x34B1B590313ABA1039BA34B636103090313934B1B597 PUSH1 0x51 SHL PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0xEA DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x5700 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH3 0xE61 SWAP1 PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x60 SWAP1 DUP3 ADD DUP2 SWAP1 MSTORE PUSH32 0x4920616D20616C736F206C6561726E696E672074686174207468697320697320 PUSH1 0x40 DUP4 ADD MSTORE PUSH32 0x6E6F742074686520666972737420627269636B206F6620616C6C2074696D652E SWAP1 DUP3 ADD MSTORE PUSH32 0x204F6B61792C20746865726520796F7520686176652069742C20666F6C6B732E PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD SWAP1 JUMP JUMPDEST PUSH1 0xD5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH3 0x14BE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x20B236B4B71037B7363C97 PUSH1 0xA9 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH3 0xC98 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH3 0x14F6 DUP3 CALLER DUP4 PUSH3 0x26B3 JUMP JUMPDEST PUSH3 0x1502 DUP3 DUP3 PUSH3 0x28FB JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0xD5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH3 0x154F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x29B7B9393C9610373797 PUSH1 0xB1 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH3 0xC98 JUMP JUMPDEST PUSH1 0x99 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x9A SLOAD EQ ISZERO PUSH3 0x157C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xC98 SWAP1 PUSH3 0x387D JUMP JUMPDEST PUSH1 0x2 PUSH1 0x9A SSTORE PUSH1 0xEA SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH3 0x15AC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xC98 SWAP1 PUSH3 0x38B4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE2 SLOAD GT PUSH3 0x15D1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xC98 SWAP1 PUSH3 0x3900 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xDE0B6B3A7640000 PUSH1 0xE2 SLOAD CALLVALUE PUSH3 0x15EC SWAP2 SWAP1 PUSH3 0x3923 JUMP JUMPDEST PUSH3 0x15F8 SWAP2 SWAP1 PUSH3 0x3945 JUMP JUMPDEST SWAP1 POP PUSH3 0x1607 ADDRESS CALLER DUP4 PUSH3 0x2734 JUMP JUMPDEST CALLVALUE PUSH1 0xCD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH3 0x161B SWAP2 SWAP1 PUSH3 0x37F7 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0xE7 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH3 0x1636 SWAP2 SWAP1 PUSH3 0x37F7 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0xE5 SLOAD PUSH1 0xE7 SLOAD GT ISZERO PUSH3 0x1662 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xC98 SWAP1 PUSH3 0x3968 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x9A SSTORE SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x37 DUP1 SLOAD PUSH3 0xB89 SWAP1 PUSH3 0x37A4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x9A SLOAD EQ ISZERO PUSH3 0x16A5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xC98 SWAP1 PUSH3 0x387D JUMP JUMPDEST PUSH1 0x2 PUSH1 0x9A SSTORE PUSH1 0xEA SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH3 0x171B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54686973206973206E6F74206120726567697374657220616E796D6F72652E20 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x24BA1034B9903090313934B1B597 PUSH1 0x91 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH3 0xC98 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE3 SLOAD GT PUSH3 0x1740 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xC98 SWAP1 PUSH3 0x3900 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH3 0x17A1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F752063616E27742075736520746869732066756E6374696F6E207965742E PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH3 0xC98 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xDE0B6B3A7640000 PUSH1 0xE3 SLOAD DUP5 PUSH3 0x17BC SWAP2 SWAP1 PUSH3 0x3923 JUMP JUMPDEST PUSH3 0x17C8 SWAP2 SWAP1 PUSH3 0x3945 JUMP JUMPDEST SWAP1 POP PUSH1 0xCD SLOAD DUP2 GT ISZERO PUSH3 0x1812 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x2737BA1032B737BAB3B410333AB7323997 PUSH1 0x79 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH3 0xC98 JUMP JUMPDEST PUSH3 0x181E DUP5 DUP5 PUSH3 0x28FB JUMP JUMPDEST DUP1 PUSH1 0xCD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH3 0x1832 SWAP2 SWAP1 PUSH3 0x3863 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0xE6 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH3 0x184D SWAP2 SWAP1 PUSH3 0x37F7 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x495057BE DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x1890 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x18A5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP PUSH1 0xE4 SLOAD PUSH1 0xE6 SLOAD GT ISZERO PUSH3 0x18D1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xC98 SWAP1 PUSH3 0x3968 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x9A SSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0xD5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH3 0x195F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C79207468652043756C74757265436F696E2061646D696E697374726174 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6F72206D617920666C6167206120636F696E20617320444F412E000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH3 0xC98 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xDB DUP3 PUSH1 0x40 MLOAD PUSH3 0x1973 SWAP2 SWAP1 PUSH3 0x3812 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 DUP1 SLOAD SWAP2 ISZERO ISZERO PUSH1 0xFF NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH3 0x19A6 DUP3 DUP7 PUSH3 0x2164 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH3 0x1A08 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH3 0xC98 JUMP JUMPDEST PUSH3 0xDA8 DUP3 DUP7 DUP7 DUP5 SUB PUSH3 0x258B JUMP JUMPDEST PUSH1 0xEA SLOAD PUSH1 0xFF AND ISZERO PUSH3 0x1A3D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xC98 SWAP1 PUSH3 0x3996 JUMP JUMPDEST PUSH1 0xEA SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH3 0x1A68 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xC98 SWAP1 PUSH3 0x39C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS SWAP1 PUSH4 0x70A08231 SWAP1 PUSH3 0x1A8D SWAP1 CALLER SWAP1 PUSH1 0x4 ADD PUSH3 0x340C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x1AA6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x1ABB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x1AE1 SWAP2 SWAP1 PUSH3 0x3A23 JUMP JUMPDEST DUP2 LT PUSH3 0x1B31 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F74207374616B65206D6F7265207468616E20796F75206F776E0000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH3 0xC98 JUMP JUMPDEST PUSH3 0xF5B DUP2 PUSH3 0x2A52 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH3 0xC22 DUP2 DUP6 DUP6 PUSH3 0x2734 JUMP JUMPDEST PUSH1 0xD5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH3 0x1B64 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xE3 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0xEC SLOAD GT PUSH3 0x1BBD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x506C656173652061646D696E73747261746520796F757220636F696E2E000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH3 0xC98 JUMP JUMPDEST PUSH1 0xEC SLOAD CALLVALUE LT ISZERO PUSH3 0x1BFB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x7 PUSH1 0x24 DUP3 ADD MSTORE PUSH7 0x283632B0B9B297 PUSH1 0xC9 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH3 0xC98 JUMP JUMPDEST PUSH1 0xEA SLOAD PUSH1 0xFF AND ISZERO PUSH3 0x1C6B JUMPI PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x5700 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x40 MLOAD PUSH3 0x1C62 SWAP1 PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x23 SWAP1 DUP3 ADD MSTORE PUSH32 0x54686973206D656D6520636F696E207468696E6B732069742773206120627269 PUSH1 0x40 DUP3 ADD MSTORE PUSH3 0x31B597 PUSH1 0xE9 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST PUSH1 0xEA SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH3 0x1CEC JUMPI PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x5700 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x40 MLOAD PUSH3 0x1CE3 SWAP1 PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2F SWAP1 DUP3 ADD MSTORE PUSH32 0x54686973206D656D6520636F696E207468696E6B73206974277320636C6F7365 PUSH1 0x40 DUP3 ADD MSTORE PUSH15 0x32103337B910313AB9B4B732B9B997 PUSH1 0x89 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST PUSH1 0xD5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH3 0x1D02 PUSH3 0xC2C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH3 0x1D38 JUMPI PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x5700 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x40 MLOAD PUSH3 0x1D2F SWAP1 PUSH3 0x3A3D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST PUSH32 0xA2CEB0EA4C1D58A42D42E6190C7DF2D44E4D514484472917B44610687FC68D0E PUSH1 0xD2 CALLVALUE PUSH1 0x40 MLOAD PUSH3 0xD11 SWAP3 SWAP2 SWAP1 PUSH3 0x3A9A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x9A SLOAD EQ ISZERO PUSH3 0x1D94 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xC98 SWAP1 PUSH3 0x387D JUMP JUMPDEST PUSH1 0x2 PUSH1 0x9A SSTORE PUSH1 0xEA SLOAD PUSH1 0xFF AND ISZERO PUSH3 0x1DEA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH25 0x213934B1B5B9903237903737BA1036B0B5B29039B2B2B23997 PUSH1 0x39 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH3 0xC98 JUMP JUMPDEST PUSH1 0x0 DUP5 ADDRESS DUP6 DUP9 PUSH1 0x40 MLOAD PUSH3 0x1DFE SWAP1 PUSH3 0x329F JUMP JUMPDEST PUSH3 0x1E0D SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0x3B52 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH1 0x0 CREATE DUP1 ISZERO DUP1 ISZERO PUSH3 0x1E2A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP SWAP1 POP DUP3 ISZERO PUSH3 0x1E47 JUMPI PUSH3 0x1E41 DUP7 DUP3 DUP8 PUSH3 0x2BA4 JUMP JUMPDEST PUSH3 0x1EA9 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x5700 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x40 MLOAD PUSH3 0x1EA0 SWAP1 PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x21 SWAP1 DUP3 ADD MSTORE PUSH32 0x54686520636F696E206D7573742062652061207265616C20676F6F64206F6E65 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0xF9 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST PUSH1 0x1 PUSH1 0x9A SSTORE SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH3 0x1ECC SWAP2 SWAP1 PUSH3 0x3812 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH3 0x1EF5 SWAP2 SWAP1 PUSH3 0x3812 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 EQ SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x5700 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x40 MLOAD PUSH3 0x1D2F SWAP1 PUSH3 0x3A3D JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH3 0x1F4F JUMPI PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO PUSH3 0x1F53 JUMP JUMPDEST ADDRESS EXTCODESIZE ISZERO JUMPDEST PUSH3 0x1FB8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH3 0xC98 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH3 0x1FDB JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFFFF NOT AND PUSH2 0x101 OR SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH3 0x2022 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x5A65726F2061646472657373 PUSH1 0xA0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH3 0xC98 JUMP JUMPDEST PUSH3 0x206B PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD PUSH11 0x21BAB63A3AB932A1B7B4B7 PUSH1 0xA9 SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x4343 PUSH1 0xF0 SHL DUP2 MSTORE POP PUSH3 0x2D8D JUMP JUMPDEST PUSH3 0x2075 PUSH3 0x2DC3 JUMP JUMPDEST PUSH1 0x97 DUP1 SLOAD PUSH1 0x1 ADD DUP2 SSTORE PUSH1 0x0 MSTORE PUSH3 0x208B PUSH3 0x2DED JUMP JUMPDEST PUSH11 0x5DD8D27FAA6C3525C40000 PUSH3 0x20AE CALLER PUSH3 0x20A8 DUP4 DUP8 PUSH3 0x3863 JUMP JUMPDEST PUSH3 0x2E21 JUMP JUMPDEST PUSH3 0x20BA ADDRESS DUP3 PUSH3 0x2E21 JUMP JUMPDEST PUSH1 0x0 NOT PUSH1 0xEB SSTORE PUSH1 0xD5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND OR SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 DUP1 DUP3 MSTORE PUSH1 0x1D PUSH1 0xF9 SHL PUSH1 0x20 SWAP1 SWAP3 ADD SWAP2 DUP3 MSTORE PUSH3 0x2105 SWAP2 PUSH1 0xD2 SWAP2 PUSH3 0x32AD JUMP JUMPDEST POP PUSH1 0xEA DUP1 SLOAD PUSH5 0xFF00000000 NOT AND PUSH5 0x100000000 OR SWAP1 SSTORE PUSH8 0x37824949B666000 PUSH1 0xE2 SSTORE PUSH8 0x36F4C81D2CFEA000 PUSH1 0xE3 SSTORE PUSH3 0x2140 DUP2 PUSH1 0x4 PUSH3 0x3923 JUMP JUMPDEST PUSH1 0xE4 SSTORE PUSH1 0xE5 SSTORE PUSH2 0x3E8 PUSH1 0x99 SSTORE DUP1 ISZERO PUSH3 0x215F JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x34 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x9A SLOAD EQ ISZERO PUSH3 0x21B7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xC98 SWAP1 PUSH3 0x387D JUMP JUMPDEST PUSH1 0x2 PUSH1 0x9A SSTORE PUSH1 0xEA SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH3 0x21E7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xC98 SWAP1 PUSH3 0x38B4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE3 SLOAD GT PUSH3 0x220C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xC98 SWAP1 PUSH3 0x3900 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xDE0B6B3A7640000 PUSH1 0xE3 SLOAD DUP5 PUSH3 0x2227 SWAP2 SWAP1 PUSH3 0x3923 JUMP JUMPDEST PUSH3 0x2233 SWAP2 SWAP1 PUSH3 0x3945 JUMP JUMPDEST SWAP1 POP PUSH3 0x2241 CALLER DUP5 PUSH3 0x28FB JUMP JUMPDEST DUP1 PUSH1 0xCD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH3 0x2255 SWAP2 SWAP1 PUSH3 0x3863 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0xE6 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH3 0x2270 SWAP2 SWAP1 PUSH3 0x37F7 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD CALLER SWAP1 DUP3 ISZERO PUSH2 0x8FC MUL SWAP1 DUP4 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH3 0x22A3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0xE4 SLOAD PUSH1 0xE6 SLOAD GT ISZERO PUSH3 0x22CB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xC98 SWAP1 PUSH3 0x3968 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x9A SSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE PUSH1 0x60 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x97 PUSH1 0x98 PUSH1 0x0 DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP2 SLOAD DUP2 LT PUSH3 0x233B JUMPI PUSH3 0x233B PUSH3 0x3B86 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH3 0x23CB JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE PUSH1 0x4 DUP7 MUL SWAP1 SWAP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE PUSH1 0x1 DUP1 DUP3 ADD SLOAD DUP5 DUP7 ADD MSTORE PUSH1 0x2 DUP3 ADD SLOAD SWAP3 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x3 ADD SLOAD PUSH1 0x60 DUP4 ADD MSTORE SWAP1 DUP4 MSTORE SWAP1 SWAP3 ADD SWAP2 ADD PUSH3 0x236C JUMP JUMPDEST POP POP POP SWAP2 MSTORE POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 PUSH1 0x20 ADD MLOAD MLOAD DUP2 LT ISZERO PUSH3 0x2488 JUMPI PUSH1 0x0 PUSH3 0x2411 DUP4 PUSH1 0x20 ADD MLOAD DUP4 DUP2 MLOAD DUP2 LT PUSH3 0x2403 JUMPI PUSH3 0x2403 PUSH3 0x3B86 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH3 0x2EF5 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 PUSH1 0x20 ADD MLOAD DUP4 DUP2 MLOAD DUP2 LT PUSH3 0x242D JUMPI PUSH3 0x242D PUSH3 0x3B86 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x60 ADD DUP2 DUP2 MSTORE POP POP DUP3 PUSH1 0x20 ADD MLOAD DUP3 DUP2 MLOAD DUP2 LT PUSH3 0x2456 JUMPI PUSH3 0x2456 PUSH3 0x3B86 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD DUP5 PUSH3 0x246F SWAP2 SWAP1 PUSH3 0x37F7 JUMP JUMPDEST SWAP4 POP PUSH3 0x2480 SWAP1 POP PUSH1 0x1 DUP3 PUSH3 0x37F7 JUMP JUMPDEST SWAP1 POP PUSH3 0x23D6 JUMP JUMPDEST POP SWAP1 DUP2 MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x249D DUP3 PUSH3 0x11A2 JUMP JUMPDEST PUSH3 0x1502 DUP2 PUSH3 0x1B4C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x9A SLOAD EQ ISZERO PUSH3 0x24D0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xC98 SWAP1 PUSH3 0x387D JUMP JUMPDEST PUSH1 0x2 PUSH1 0x9A SSTORE PUSH1 0xEA SLOAD PUSH1 0xFF AND ISZERO PUSH3 0x24FB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xC98 SWAP1 PUSH3 0x3996 JUMP JUMPDEST PUSH1 0xEA SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH3 0x2526 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xC98 SWAP1 PUSH3 0x39C6 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x2534 DUP5 DUP5 PUSH3 0x2F3D JUMP JUMPDEST SWAP1 POP PUSH8 0xDE0B6B3A7640000 PUSH3 0x2553 DUP3 PUSH8 0xDBD2FC137A30000 PUSH3 0x3923 JUMP JUMPDEST PUSH3 0x255F SWAP2 SWAP1 PUSH3 0x3945 JUMP JUMPDEST SWAP1 POP PUSH3 0x18D1 ADDRESS CALLER DUP4 PUSH3 0x2734 JUMP JUMPDEST PUSH1 0xD5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH3 0x2586 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xE4 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH3 0x25EF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH3 0xC98 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH3 0x2652 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH3 0xC98 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x34 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x26C1 DUP5 DUP5 PUSH3 0x2164 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH3 0x272E JUMPI DUP2 DUP2 LT ISZERO PUSH3 0x271F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH3 0xC98 JUMP JUMPDEST PUSH3 0x272E DUP5 DUP5 DUP5 DUP5 SUB PUSH3 0x258B JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH3 0x279A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH3 0xC98 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH3 0x27FE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH3 0xC98 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH3 0x2878 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH3 0xC98 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH3 0x28B1 SWAP1 DUP5 SWAP1 PUSH3 0x37F7 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x56E0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP5 PUSH1 0x40 MLOAD PUSH3 0x28ED SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH3 0x272E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH3 0x295D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH3 0xC98 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH3 0x29D3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x6365 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH3 0xC98 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP4 DUP4 SUB SWAP1 SSTORE PUSH1 0x35 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH3 0x2A04 SWAP1 DUP5 SWAP1 PUSH3 0x3863 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x56E0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x2A4E PUSH3 0x43C PUSH3 0xC2C JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH3 0x2A9B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x43616E6E6F74207374616B65206E6F7468696E67 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH3 0xC98 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x98 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD TIMESTAMP DUP2 PUSH3 0x2AC0 JUMPI PUSH3 0x2ABD CALLER PUSH3 0x319E JUMP JUMPDEST SWAP2 POP JUMPDEST PUSH1 0x97 DUP3 DUP2 SLOAD DUP2 LT PUSH3 0x2AD6 JUMPI PUSH3 0x2AD6 PUSH3 0x3B86 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE CALLER DUP1 DUP3 MSTORE DUP2 DUP6 ADD DUP11 DUP2 MSTORE DUP3 DUP5 ADD DUP10 DUP2 MSTORE PUSH1 0x60 DUP1 DUP6 ADD DUP11 DUP2 MSTORE PUSH1 0x2 SWAP10 DUP11 MUL SWAP1 SWAP8 ADD PUSH1 0x1 SWAP1 DUP2 ADD DUP1 SLOAD DUP1 DUP4 ADD DUP3 SSTORE SWAP1 DUP13 MSTORE SWAP11 DUP10 SWAP1 KECCAK256 SWAP6 MLOAD PUSH1 0x4 SWAP1 SWAP12 MUL SWAP1 SWAP6 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP12 AND SWAP11 SWAP1 SWAP11 OR DUP11 SSTORE SWAP2 MLOAD SWAP4 DUP10 ADD SWAP4 SWAP1 SWAP4 SSTORE SWAP2 MLOAD SWAP6 DUP8 ADD SWAP6 SWAP1 SWAP6 SSTORE SWAP2 MLOAD PUSH1 0x3 SWAP1 SWAP6 ADD SWAP5 SWAP1 SWAP5 SSTORE DUP4 MLOAD DUP8 DUP2 MSTORE SWAP2 DUP3 ADD DUP7 SWAP1 MSTORE SWAP3 DUP2 ADD DUP5 SWAP1 MSTORE SWAP1 SWAP2 PUSH32 0xB4CAAF29ADDA3EEFEE3AD552A8E85058589BF834C7466CAE4EE58787F70589ED SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x5700 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x40 MLOAD PUSH3 0x2C06 SWAP1 PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2A SWAP1 DUP3 ADD MSTORE PUSH32 0x436F696E206861732063616C6C656420666F7220696E7465726E616C20726567 PUSH1 0x40 DUP3 ADD MSTORE PUSH10 0x34B9BA3930BA34B7B717 PUSH1 0xB1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0xDA DUP4 PUSH1 0x40 MLOAD PUSH3 0x2C20 SWAP2 SWAP1 PUSH3 0x3812 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH3 0x2D55 JUMPI PUSH1 0xDC DUP4 PUSH1 0x40 MLOAD PUSH3 0x2C50 SWAP2 SWAP1 PUSH3 0x3812 JUMP JUMPDEST MSTORE PUSH1 0x40 MLOAD DUP3 SWAP1 PUSH1 0xDA SWAP1 PUSH3 0x2C66 SWAP1 DUP7 SWAP1 PUSH3 0x3812 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP CALLER PUSH1 0xDE DUP5 PUSH1 0x40 MLOAD PUSH3 0x2CAB SWAP2 SWAP1 PUSH3 0x3812 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0xDB DUP5 PUSH1 0x40 MLOAD PUSH3 0x2CF1 SWAP2 SWAP1 PUSH3 0x3812 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD DUP2 KECCAK256 DUP1 SLOAD SWAP3 ISZERO ISZERO PUSH1 0xFF NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE PUSH32 0x681527AF24EFDB94FD8BA1EE38E6D7D4E2D64446E9B34E8AE1A9C649B4498269 SWAP1 PUSH3 0x2D48 SWAP1 DUP6 SWAP1 DUP6 SWAP1 DUP6 SWAP1 PUSH1 0x1 SWAP1 PUSH3 0x3B9C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH32 0x681527AF24EFDB94FD8BA1EE38E6D7D4E2D64446E9B34E8AE1A9C649B4498269 DUP4 DUP4 DUP4 PUSH1 0x0 PUSH1 0x40 MLOAD PUSH3 0x2D48 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0x3B9C JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH3 0x2DB7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xC98 SWAP1 PUSH3 0x3BD8 JUMP JUMPDEST PUSH3 0x1502 DUP3 DUP3 PUSH3 0x3219 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH3 0x11BF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xC98 SWAP1 PUSH3 0x3BD8 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH3 0x2E17 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xC98 SWAP1 PUSH3 0x3BD8 JUMP JUMPDEST PUSH3 0x11BF PUSH3 0x326E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH3 0x2E79 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH3 0xC98 JUMP JUMPDEST DUP1 PUSH1 0x35 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH3 0x2E8D SWAP2 SWAP1 PUSH3 0x37F7 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH3 0x2EBC SWAP1 DUP5 SWAP1 PUSH3 0x37F7 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH1 0x0 SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x56E0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x99 SLOAD PUSH2 0xE10 PUSH3 0x2F09 SWAP2 SWAP1 PUSH3 0x3923 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MLOAD PUSH1 0x40 DUP5 ADD MLOAD PUSH3 0x2F1F SWAP1 TIMESTAMP PUSH3 0x3863 JUMP JUMPDEST PUSH3 0x2F2B SWAP2 SWAP1 PUSH3 0x3923 JUMP JUMPDEST PUSH3 0x2F37 SWAP2 SWAP1 PUSH3 0x3945 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x98 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x97 DUP1 SLOAD DUP4 SWAP2 SWAP1 DUP4 SWAP1 DUP2 LT PUSH3 0x2F67 JUMPI PUSH3 0x2F67 PUSH3 0x3B86 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH3 0x2F8C JUMPI PUSH3 0x2F8C PUSH3 0x3B86 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE PUSH1 0x4 SWAP1 SWAP4 MUL SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE PUSH1 0x1 DUP2 ADD SLOAD SWAP4 DUP4 ADD DUP5 SWAP1 MSTORE PUSH1 0x2 DUP2 ADD SLOAD SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x3 ADD SLOAD PUSH1 0x60 DUP3 ADD MSTORE SWAP2 POP DUP6 GT ISZERO PUSH3 0x3044 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x32 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5374616B696E673A2043616E6E6F74207769746864726177206D6F7265207468 PUSH1 0x44 DUP3 ADD MSTORE PUSH18 0x185B881E5BDD481A185D99481CDD185AD959 PUSH1 0x72 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH3 0xC98 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x3051 DUP3 PUSH3 0x2EF5 JUMP JUMPDEST SWAP1 POP DUP6 DUP3 PUSH1 0x20 ADD MLOAD PUSH3 0x3065 SWAP2 SWAP1 PUSH3 0x3863 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD DUP2 SWAP1 MSTORE PUSH3 0x30E1 JUMPI PUSH1 0x97 DUP4 DUP2 SLOAD DUP2 LT PUSH3 0x3087 JUMPI PUSH3 0x3087 PUSH3 0x3B86 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD DUP6 DUP2 SLOAD DUP2 LT PUSH3 0x30AC JUMPI PUSH3 0x30AC PUSH3 0x3B86 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 PUSH1 0x4 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP2 SSTORE PUSH1 0x1 DUP2 ADD DUP3 SWAP1 SSTORE PUSH1 0x2 DUP2 ADD DUP3 SWAP1 SSTORE PUSH1 0x3 ADD SSTORE PUSH3 0x3188 JUMP JUMPDEST DUP2 PUSH1 0x20 ADD MLOAD PUSH1 0x97 DUP5 DUP2 SLOAD DUP2 LT PUSH3 0x30FC JUMPI PUSH3 0x30FC PUSH3 0x3B86 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD DUP7 DUP2 SLOAD DUP2 LT PUSH3 0x3121 JUMPI PUSH3 0x3121 PUSH3 0x3B86 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x97 DUP5 DUP2 SLOAD DUP2 LT PUSH3 0x314D JUMPI PUSH3 0x314D PUSH3 0x3B86 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD DUP7 DUP2 SLOAD DUP2 LT PUSH3 0x3172 JUMPI PUSH3 0x3172 PUSH3 0x3B86 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP JUMPDEST PUSH3 0x3194 DUP2 DUP8 PUSH3 0x37F7 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x97 DUP1 SLOAD PUSH1 0x1 SWAP1 DUP2 ADD DUP1 DUP4 SSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE DUP3 SWAP2 PUSH3 0x31BC SWAP2 PUSH3 0x3863 JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0x97 DUP3 DUP2 SLOAD DUP2 LT PUSH3 0x31D5 JUMPI PUSH3 0x31D5 PUSH3 0x3B86 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH1 0x2 SWAP3 SWAP1 SWAP3 MUL SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND OR SWAP1 SSTORE SWAP5 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x98 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP1 SWAP3 KECCAK256 DUP3 SWAP1 SSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH3 0x3243 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xC98 SWAP1 PUSH3 0x3BD8 JUMP JUMPDEST DUP2 MLOAD PUSH3 0x3258 SWAP1 PUSH1 0x36 SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 PUSH3 0x32AD JUMP JUMPDEST POP DUP1 MLOAD PUSH3 0x215F SWAP1 PUSH1 0x37 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0x32AD JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH3 0x3298 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xC98 SWAP1 PUSH3 0x3BD8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x9A SSTORE JUMP JUMPDEST PUSH2 0x1ABC DUP1 PUSH3 0x3C24 DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x32BB SWAP1 PUSH3 0x37A4 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x32DF JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x332A JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x32FA JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x332A JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x332A JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x332A JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x330D JUMP JUMPDEST POP PUSH3 0x2A4E SWAP3 SWAP2 POP JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x2A4E JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x3333 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x3366 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH3 0x334C JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH3 0x272E JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH3 0x3392 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH3 0x3349 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH3 0x33BB PUSH1 0x20 DUP4 ADD DUP5 PUSH3 0x3378 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x33DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x33F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x33FE DUP4 PUSH3 0x33C2 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x3433 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x33BB DUP3 PUSH3 0x33C2 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x3466 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH3 0x3484 JUMPI PUSH3 0x3484 PUSH3 0x343E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0x34AF JUMPI PUSH3 0x34AF PUSH3 0x343E JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH3 0x34C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x20 DUP8 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x34FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x3514 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x3522 DUP5 DUP3 DUP6 ADD PUSH3 0x3454 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH3 0x3540 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x354B DUP5 PUSH3 0x33C2 JUMP JUMPDEST SWAP3 POP PUSH3 0x355B PUSH1 0x20 DUP6 ADD PUSH3 0x33C2 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x357F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH3 0x3598 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x35A6 DUP7 DUP4 DUP8 ADD PUSH3 0x3454 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x35BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x35CC DUP6 DUP3 DUP7 ADD PUSH3 0x3454 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x35E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH3 0x33DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x3615 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x3620 DUP4 PUSH3 0x33C2 JUMP JUMPDEST SWAP2 POP PUSH3 0x3630 PUSH1 0x20 DUP5 ADD PUSH3 0x35F0 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH3 0x3650 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x3668 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x3676 DUP8 DUP3 DUP9 ADD PUSH3 0x3454 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH3 0x368E PUSH1 0x40 DUP7 ADD PUSH3 0x33C2 JUMP JUMPDEST SWAP2 POP PUSH3 0x369E PUSH1 0x60 DUP7 ADD PUSH3 0x35F0 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x36BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH3 0x3630 PUSH1 0x20 DUP5 ADD PUSH3 0x33C2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x36E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x36EE DUP4 PUSH3 0x33C2 JUMP JUMPDEST SWAP2 POP PUSH3 0x3630 PUSH1 0x20 DUP5 ADD PUSH3 0x33C2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE PUSH1 0x60 DUP1 DUP5 ADD DUP6 MLOAD DUP4 DUP7 ADD MSTORE DUP3 DUP7 ADD MLOAD PUSH1 0x40 DUP1 DUP2 DUP9 ADD MSTORE DUP3 DUP3 MLOAD DUP1 DUP6 MSTORE PUSH1 0x80 SWAP5 POP DUP5 DUP10 ADD SWAP2 POP DUP7 DUP5 ADD SWAP4 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x3772 JUMPI DUP5 MLOAD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE DUP9 DUP2 ADD MLOAD DUP10 DUP6 ADD MSTORE DUP5 DUP2 ADD MLOAD DUP6 DUP6 ADD MSTORE DUP8 ADD MLOAD DUP8 DUP5 ADD MSTORE SWAP4 DUP8 ADD SWAP4 SWAP2 DUP6 ADD SWAP2 PUSH1 0x1 ADD PUSH3 0x3732 JUMP JUMPDEST POP SWAP1 SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x3795 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x37B9 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x37DB JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH3 0x380D JUMPI PUSH3 0x380D PUSH3 0x37E1 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH3 0x3826 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH3 0x3349 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH3 0x3844 DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH3 0x3349 JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH3 0x385A DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH3 0x3349 JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH3 0x3878 JUMPI PUSH3 0x3878 PUSH3 0x37E1 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1F SWAP1 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2C SWAP1 DUP3 ADD MSTORE PUSH32 0x54686973206973206E6F7420726567697374657220616E796D6F72652E204974 PUSH1 0x40 DUP3 ADD MSTORE PUSH12 0x1034B9903090313934B1B597 PUSH1 0xA1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x9 SWAP1 DUP3 ADD MSTORE PUSH9 0x29B2BA103930BA3297 PUSH1 0xB9 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH3 0x3940 JUMPI PUSH3 0x3940 PUSH3 0x37E1 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH3 0x3963 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x14 SWAP1 DUP3 ADD MSTORE PUSH20 0x21BAB93932B73A1036B0BC103932B0B1B432B217 PUSH1 0x61 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x16 SWAP1 DUP3 ADD MSTORE PUSH22 0x29B7B9393C97102BB29030B932903090313934B1B597 PUSH1 0x51 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x3A SWAP1 DUP3 ADD MSTORE PUSH32 0x5468652065786368616E676520697320636C6F7365642E20506C656173652074 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x727920616761696E207768656E20776520617265206F70656E2E000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x3A36 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x3D SWAP1 DUP3 ADD MSTORE PUSH32 0x54686973206D656D6520636F696E2069732061637475616C6C79206120636C6F PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x6E652E2042657420796F75206469646E2774206B6E6F7720746861742E000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 DUP1 DUP5 SLOAD DUP2 PUSH1 0x1 DUP3 DUP2 SHR SWAP2 POP DUP1 DUP4 AND DUP1 PUSH3 0x3ABB JUMPI PUSH1 0x7F DUP4 AND SWAP3 POP JUMPDEST PUSH1 0x20 DUP1 DUP5 LT DUP3 EQ ISZERO PUSH3 0x3ADC JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP7 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 DUP7 REVERT JUMPDEST PUSH1 0x40 DUP9 ADD DUP5 SWAP1 MSTORE PUSH1 0x60 DUP9 ADD DUP3 DUP1 ISZERO PUSH3 0x3AFE JUMPI PUSH1 0x1 DUP2 EQ PUSH3 0x3B10 JUMPI PUSH3 0x3B3D JUMP JUMPDEST PUSH1 0xFF NOT DUP8 AND DUP3 MSTORE DUP3 DUP3 ADD SWAP8 POP PUSH3 0x3B3D JUMP JUMPDEST PUSH1 0x0 DUP13 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 PUSH1 0x0 JUMPDEST DUP8 DUP2 LT ISZERO PUSH3 0x3B37 JUMPI DUP2 SLOAD DUP5 DUP3 ADD MSTORE SWAP1 DUP7 ADD SWAP1 DUP5 ADD PUSH3 0x3B1C JUMP JUMPDEST DUP4 ADD SWAP9 POP POP JUMPDEST POP POP SWAP7 SWAP1 SWAP7 ADD SWAP7 SWAP1 SWAP7 MSTORE POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST DUP5 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x20 DUP4 ADD MSTORE DUP4 AND PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH3 0x3194 SWAP1 DUP4 ADD DUP5 PUSH3 0x3378 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x80 DUP2 MSTORE PUSH1 0x0 PUSH3 0x3BB1 PUSH1 0x80 DUP4 ADD DUP8 PUSH3 0x3378 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 SWAP1 SWAP6 AND PUSH1 0x20 DUP4 ADD MSTORE POP PUSH1 0x40 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE ISZERO ISZERO PUSH1 0x60 SWAP1 SWAP2 ADD MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2B SWAP1 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x40 DUP3 ADD MSTORE PUSH11 0x6E697469616C697A696E67 PUSH1 0xA8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1ABC CODESIZE SUB DUP1 PUSH3 0x1ABC DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x5FB JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0xB DUP1 DUP3 MSTORE PUSH11 0x21BAB63A3AB932A1B7B4B7 PUSH1 0xA9 SHL PUSH1 0x20 DUP4 ADD SWAP1 DUP2 MSTORE DUP4 SWAP2 PUSH3 0x69 SWAP2 PUSH1 0x3 SWAP2 PUSH3 0x4EF JUMP JUMPDEST POP DUP1 MLOAD PUSH3 0x7F SWAP1 PUSH1 0x4 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0x4EF JUMP JUMPDEST POP POP PUSH1 0x1 PUSH1 0x5 SSTORE POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH3 0xE3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C69642043756C747572636F696E2E00000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH3 0x12B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x2D32B9379030B2323932B9B997 PUSH1 0x99 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH3 0xDA JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP5 AND DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x1A9C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x40 MLOAD CALLER DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x1A9C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x40 MLOAD DUP5 DUP2 MSTORE PUSH32 0x19CDFBBC87E2C4F8B08471BB8B544A25603AA3A6037DAB5DD4A660BE7A45B50C SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH32 0x7CDB51E9DBBC205231228146C3246E7F914AA6D4A33170E43ECC8E3593481D1A DUP2 PUSH1 0x40 MLOAD PUSH3 0x1F5 SWAP2 SWAP1 PUSH3 0x6E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0xC DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD PUSH4 0x22107243 PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH4 0x4420E486 SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x252 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x267 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x9ED4607 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x2BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x2D1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x2F7 SWAP2 SWAP1 PUSH3 0x718 JUMP JUMPDEST PUSH1 0x8 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND DUP2 OR SWAP1 SWAP3 SSTORE PUSH1 0x6 DUP1 SLOAD SWAP4 DUP8 AND SWAP4 SWAP1 SWAP2 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE PUSH3 0x335 SWAP1 DUP6 PUSH3 0x40A JUMP JUMPDEST DUP4 PUSH11 0xADCA69491F412BB00C0000 EQ ISZERO PUSH3 0x36D JUMPI PUSH1 0x7 SLOAD PUSH3 0x361 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH3 0x40A JUMP JUMPDEST PUSH3 0x36D ADDRESS DUP6 PUSH3 0x40A JUMP JUMPDEST PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xFAC70E23 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x3BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x3D1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x3F7 SWAP2 SWAP1 PUSH3 0x73D JUMP JUMPDEST PUSH1 0xA DUP2 SWAP1 SSTORE PUSH1 0xB SSTORE POP PUSH3 0x7BB SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH3 0x462 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH3 0xDA JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH3 0x476 SWAP2 SWAP1 PUSH3 0x757 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH3 0x4A5 SWAP1 DUP5 SWAP1 PUSH3 0x757 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH1 0x0 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x4FD SWAP1 PUSH3 0x77E JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x521 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x56C JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x53C JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x56C JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x56C JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x56C JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x54F JUMP JUMPDEST POP PUSH3 0x57A SWAP3 SWAP2 POP PUSH3 0x57E JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x57A JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x57F JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x5AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x5E5 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH3 0x5CB JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH3 0x5F5 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH3 0x612 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 MLOAD SWAP4 POP PUSH3 0x624 PUSH1 0x20 DUP7 ADD PUSH3 0x595 JUMP JUMPDEST SWAP3 POP PUSH3 0x634 PUSH1 0x40 DUP7 ADD PUSH3 0x595 JUMP JUMPDEST PUSH1 0x60 DUP7 ADD MLOAD SWAP1 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x652 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x667 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH3 0x67C JUMPI PUSH3 0x67C PUSH3 0x5B2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0x6A7 JUMPI PUSH3 0x6A7 PUSH3 0x5B2 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP11 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH3 0x6C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x6D4 DUP4 PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP9 ADD PUSH3 0x5C8 JUMP JUMPDEST SWAP8 SWAP11 SWAP7 SWAP10 POP SWAP5 SWAP8 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH3 0x704 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH3 0x5C8 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x72B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x736 DUP3 PUSH3 0x595 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x750 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH3 0x779 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x793 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x7B5 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12D1 DUP1 PUSH3 0x7CB PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x12A JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7218954E GT PUSH2 0xAB JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x322 JUMPI DUP1 PUSH4 0xA6F2AE3A EQ PUSH2 0x342 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x34A JUMPI DUP1 PUSH4 0xC3D670FE EQ PUSH2 0x36A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x37D JUMPI DUP1 PUSH4 0xDDC74B11 EQ PUSH2 0x3C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x7218954E EQ PUSH2 0x287 JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x2A7 JUMPI DUP1 PUSH4 0x8B8FBD92 EQ PUSH2 0x2C7 JUMPI DUP1 PUSH4 0x91B7F5ED EQ PUSH2 0x2ED JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x30D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xF2 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1E0 JUMPI DUP1 PUSH4 0x32E7C5BF EQ PUSH2 0x1FC JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x211 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x231 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x251 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x12F JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x15A JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x18A JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1A9 JUMPI DUP1 PUSH4 0x24600FC3 EQ PUSH2 0x1C9 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x13B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x144 PUSH2 0x3D8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x151 SWAP2 SWAP1 PUSH2 0xF74 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x166 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x17A PUSH2 0x175 CALLDATASIZE PUSH1 0x4 PUSH2 0xFA3 JUMP JUMPDEST PUSH2 0x46A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x151 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x196 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x151 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x17A PUSH2 0x1C4 CALLDATASIZE PUSH1 0x4 PUSH2 0xFCF JUMP JUMPDEST PUSH2 0x480 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1DE PUSH2 0x536 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x151 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x208 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x9 SLOAD PUSH2 0x19B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x21D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x17A PUSH2 0x22C CALLDATASIZE PUSH1 0x4 PUSH2 0xFA3 JUMP JUMPDEST PUSH2 0x5E5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x23D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1DE PUSH2 0x24C CALLDATASIZE PUSH1 0x4 PUSH2 0x1010 JUMP JUMPDEST PUSH2 0x61C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x25D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19B PUSH2 0x26C CALLDATASIZE PUSH1 0x4 PUSH2 0x1029 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x293 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1DE PUSH2 0x2A2 CALLDATASIZE PUSH1 0x4 PUSH2 0x1010 JUMP JUMPDEST PUSH2 0x629 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1DE PUSH2 0x2C2 CALLDATASIZE PUSH1 0x4 PUSH2 0xFA3 JUMP JUMPDEST PUSH2 0x66D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x40 MLOAD PUSH2 0x151 SWAP2 SWAP1 PUSH2 0x1046 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1DE PUSH2 0x308 CALLDATASIZE PUSH1 0x4 PUSH2 0x1010 JUMP JUMPDEST PUSH2 0x6F5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x319 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x144 PUSH2 0x739 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x32E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x17A PUSH2 0x33D CALLDATASIZE PUSH1 0x4 PUSH2 0xFA3 JUMP JUMPDEST PUSH2 0x748 JUMP JUMPDEST PUSH2 0x1DE PUSH2 0x7E3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x356 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x17A PUSH2 0x365 CALLDATASIZE PUSH1 0x4 PUSH2 0xFA3 JUMP JUMPDEST PUSH2 0x865 JUMP JUMPDEST PUSH2 0x1DE PUSH2 0x378 CALLDATASIZE PUSH1 0x4 PUSH2 0x1070 JUMP JUMPDEST PUSH2 0x872 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x389 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19B PUSH2 0x398 CALLDATASIZE PUSH1 0x4 PUSH2 0x1121 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xB SLOAD PUSH2 0x19B JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x3E7 SWAP1 PUSH2 0x115A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x413 SWAP1 PUSH2 0x115A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x460 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x435 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x460 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x443 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x477 CALLER DUP5 DUP5 PUSH2 0xADB JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x48D DUP5 DUP5 DUP5 PUSH2 0xC00 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x517 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732061 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x6C6C6F77616E6365 PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x52B DUP6 CALLER PUSH2 0x526 DUP7 DUP6 PUSH2 0x11AB JUMP JUMPDEST PUSH2 0xADB JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x64 PUSH1 0x9 SLOAD PUSH1 0x5 PUSH2 0x549 SWAP2 SWAP1 PUSH2 0x11C2 JUMP JUMPDEST PUSH2 0x553 SWAP2 SWAP1 PUSH2 0x11E1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x9 SLOAD PUSH2 0x565 SWAP2 SWAP1 PUSH2 0x11AB JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x40 MLOAD SWAP2 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP4 ISZERO PUSH2 0x8FC MUL SWAP1 DUP5 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x5A0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP3 ISZERO PUSH2 0x8FC MUL SWAP1 DUP4 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x5DB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x0 PUSH1 0x9 SSTORE POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x477 SWAP2 DUP6 SWAP1 PUSH2 0x526 SWAP1 DUP7 SWAP1 PUSH2 0x1203 JUMP JUMPDEST PUSH2 0x626 CALLER DUP3 PUSH2 0xDD8 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 PUSH2 0x64C JUMPI POP PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST PUSH2 0x668 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x50E SWAP1 PUSH2 0x121B JUMP JUMPDEST PUSH1 0xB SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x679 DUP4 CALLER PUSH2 0x398 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x6D7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E20616D6F756E74206578636565647320616C6C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x616E6365 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x50E JUMP JUMPDEST PUSH2 0x6E6 DUP4 CALLER PUSH2 0x526 DUP6 DUP6 PUSH2 0x11AB JUMP JUMPDEST PUSH2 0x6F0 DUP4 DUP4 PUSH2 0xDD8 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 PUSH2 0x718 JUMPI POP PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST PUSH2 0x734 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x50E SWAP1 PUSH2 0x121B JUMP JUMPDEST PUSH1 0xA SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x3E7 SWAP1 PUSH2 0x115A JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x7CA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x50E JUMP JUMPDEST PUSH2 0x7D9 CALLER DUP6 PUSH2 0x526 DUP7 DUP6 PUSH2 0x11AB JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xDE0B6B3A7640000 PUSH1 0xA SLOAD CALLVALUE PUSH2 0x7FC SWAP2 SWAP1 PUSH2 0x11C2 JUMP JUMPDEST PUSH2 0x806 SWAP2 SWAP1 PUSH2 0x11E1 JUMP JUMPDEST SWAP1 POP PUSH2 0x813 ADDRESS CALLER DUP4 PUSH2 0xC00 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE CALLVALUE PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x737C69225D647E5994EAB1A6C301BF6D9232BEB2759AE1E27A8966B4732BC489 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 CALLVALUE PUSH1 0x9 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x85D SWAP2 SWAP1 PUSH2 0x1203 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x477 CALLER DUP5 DUP5 PUSH2 0xC00 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x5 SLOAD EQ ISZERO PUSH2 0x8C5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x50E JUMP JUMPDEST PUSH1 0x2 PUSH1 0x5 SSTORE PUSH1 0xB SLOAD PUSH2 0x901 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x5 PUSH1 0x24 DUP3 ADD MSTORE PUSH5 0x26B7B93297 PUSH1 0xD9 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x50E JUMP JUMPDEST PUSH1 0xB SLOAD CALLVALUE LT ISZERO PUSH2 0x941 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x26B7B932961036B7B93297 PUSH1 0xA9 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x50E JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x40 MLOAD PUSH32 0xE7375F84984FEFA09F5F03AA56FFB11ED839B99D56943F858953E537609F8BE7 SWAP2 PUSH2 0x97E SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH2 0x1046 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH32 0xE7375F84984FEFA09F5F03AA56FFB11ED839B99D56943F858953E537609F8BE7 CALLER PUSH1 0x40 MLOAD PUSH2 0x9B5 SWAP2 SWAP1 PUSH2 0x1046 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x40 MLOAD CALLVALUE DUP2 MSTORE PUSH32 0x19CDFBBC87E2C4F8B08471BB8B544A25603AA3A6037DAB5DD4A660BE7A45B50C SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH32 0x7CDB51E9DBBC205231228146C3246E7F914AA6D4A33170E43ECC8E3593481D1A DUP2 PUSH1 0x40 MLOAD PUSH2 0xA1F SWAP2 SWAP1 PUSH2 0xF74 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0xC SLOAD PUSH1 0x40 MLOAD PUSH4 0x2DE9F717 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xB7A7DC5C SWAP1 PUSH2 0xA69 SWAP1 DUP5 SWAP1 PUSH11 0xADCA69491F412BB00C0000 SWAP1 ADDRESS SWAP1 PUSH1 0x1 SWAP1 PUSH1 0x4 ADD PUSH2 0x1244 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA83 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA97 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xABB SWAP2 SWAP1 PUSH2 0x127E JUMP JUMPDEST POP CALLVALUE PUSH1 0x9 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xACE SWAP2 SWAP1 PUSH2 0x1203 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x5 SSTORE POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xB3D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x50E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xB9E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x50E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xC64 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x50E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xCC6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x50E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0xD3E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x50E JUMP JUMPDEST PUSH2 0xD48 DUP3 DUP3 PUSH2 0x11AB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0xD7E SWAP1 DUP5 SWAP1 PUSH2 0x1203 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xDCA SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xE38 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x50E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0xEAC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x6365 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x50E JUMP JUMPDEST PUSH2 0xEB6 DUP3 DUP3 PUSH2 0x11AB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x2 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0xEE4 SWAP1 DUP5 SWAP1 PUSH2 0x11AB JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH2 0xBF3 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xF4D JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0xF31 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0xF5F JUMPI PUSH1 0x0 PUSH1 0x20 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0xF87 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xF27 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x626 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xFB6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0xFC1 DUP2 PUSH2 0xF8E JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xFE4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0xFEF DUP2 PUSH2 0xF8E JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0xFFF DUP2 PUSH2 0xF8E JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1022 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x103B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xF87 DUP2 PUSH2 0xF8E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1082 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x109A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP5 ADD SWAP2 POP DUP5 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x10AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x10C0 JUMPI PUSH2 0x10C0 PUSH2 0x105A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x10E8 JUMPI PUSH2 0x10E8 PUSH2 0x105A JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP8 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x1101 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP3 DUP2 ADD PUSH1 0x20 ADD SWAP3 SWAP1 SWAP3 MSTORE POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1134 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x113F DUP2 PUSH2 0xF8E JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x114F DUP2 PUSH2 0xF8E JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x116E JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x118F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x11BD JUMPI PUSH2 0x11BD PUSH2 0x1195 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x11DC JUMPI PUSH2 0x11DC PUSH2 0x1195 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x11FE JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1216 JUMPI PUSH2 0x1216 PUSH2 0x1195 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xF SWAP1 DUP3 ADD MSTORE PUSH15 0x27B7363C903A34329030B236B4B717 PUSH1 0x89 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x80 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1257 PUSH1 0x80 DUP4 ADD DUP8 PUSH2 0xF27 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP6 SWAP1 SWAP6 MSTORE POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND PUSH1 0x40 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0x60 SWAP1 SWAP2 ADD MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1290 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xF87 DUP2 PUSH2 0xF8E JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF6 PUSH6 0xCAFA22FFCF92 0xB8 SWAP12 0xE9 CALL 0xBA 0xCF SMOD LOG0 PUSH28 0x9F7643800B17A27033C2C5B224AD5064736F6C63430008090033E737 0x5F DUP5 SWAP9 0x4F 0xEF LOG0 SWAP16 0x5F SUB 0xAA JUMP SELFDESTRUCT 0xB1 0x1E 0xD8 CODECOPY 0xB9 SWAP14 JUMP SWAP5 EXTCODEHASH DUP6 DUP10 MSTORE8 0xE5 CALLDATACOPY PUSH1 0x9F DUP12 0xE7 0xDD CALLCODE MSTORE 0xAD SHL 0xE2 0xC8 SWAP12 PUSH10 0xC2B068FC378DAA952BA7 CALL PUSH4 0xC4A11628 CREATE2 GAS 0x4D CREATE2 0x23 0xB3 0xEF 0x1F 0x2D LT 0xC6 0xBC 0x5F ADDMOD LT GT SELFBALANCE 0xCF NOT 0x2D 0x4F DUP10 0xEA CALLER 0x26 PUSH12 0x76F65303D27D5F1D17E840AB CALLDATACOPY LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD5 SHR PUSH17 0x18BD37E042EB3B1DA1CB45AFB404E70930 0xBE DUP7 0xEE 0xCD DUP3 SWAP13 PUSH28 0x6A819506BE64736F6C63430008090033000000000000000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        2510,
        47357
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "8": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "LT",
      "path": "1"
    },
    "9": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x38B"
    },
    "13": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "14": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "16": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "CALLDATALOAD",
      "path": "1"
    },
    "17": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xE0"
    },
    "19": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "SHR",
      "path": "1"
    },
    "20": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "DUP1",
      "path": "1"
    },
    "21": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x78182D03"
    },
    "26": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "GT",
      "path": "1"
    },
    "27": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x1D7"
    },
    "31": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "32": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "DUP1",
      "path": "1"
    },
    "33": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xD18B34FC"
    },
    "38": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "GT",
      "path": "1"
    },
    "39": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x101"
    },
    "43": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "44": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "DUP1",
      "path": "1"
    },
    "45": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xE73E14BF"
    },
    "50": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "GT",
      "path": "1"
    },
    "51": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x9C"
    },
    "55": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "56": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "DUP1",
      "path": "1"
    },
    "57": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xE73E14BF"
    },
    "62": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "EQ",
      "path": "1"
    },
    "63": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0xA76"
    },
    "67": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "68": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "DUP1",
      "path": "1"
    },
    "69": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xEBB6BE1C"
    },
    "74": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "EQ",
      "path": "1"
    },
    "75": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0xAAA"
    },
    "79": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "80": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "DUP1",
      "path": "1"
    },
    "81": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xEBEF4F0E"
    },
    "86": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "EQ",
      "path": "1"
    },
    "87": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0xAC2"
    },
    "91": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "92": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "DUP1",
      "path": "1"
    },
    "93": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xEDA98299"
    },
    "98": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "EQ",
      "path": "1"
    },
    "99": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0xADA"
    },
    "103": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "104": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "DUP1",
      "path": "1"
    },
    "105": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xF18E673D"
    },
    "110": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "EQ",
      "path": "1"
    },
    "111": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0xAF2"
    },
    "115": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "116": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "DUP1",
      "path": "1"
    },
    "117": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xF1FDF469"
    },
    "122": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "EQ",
      "path": "1"
    },
    "123": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0xB17"
    },
    "127": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "128": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "DUP1",
      "path": "1"
    },
    "129": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xFA144964"
    },
    "134": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "EQ",
      "path": "1"
    },
    "135": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0xB3C"
    },
    "139": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "140": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "DUP1",
      "path": "1"
    },
    "141": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xFAC70E23"
    },
    "146": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "EQ",
      "path": "1"
    },
    "147": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0xB61"
    },
    "151": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "152": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "154": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "DUP1",
      "path": "1"
    },
    "155": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "REVERT",
      "path": "1"
    },
    "156": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "157": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "DUP1",
      "path": "1"
    },
    "158": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xD18B34FC"
    },
    "163": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "EQ",
      "path": "1"
    },
    "164": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x99F"
    },
    "168": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "169": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "DUP1",
      "path": "1"
    },
    "170": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xDA35A26F"
    },
    "175": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "EQ",
      "path": "1"
    },
    "176": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x9A9"
    },
    "180": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "181": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "DUP1",
      "path": "1"
    },
    "182": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xDD62ED3E"
    },
    "187": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "EQ",
      "path": "1"
    },
    "188": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x9CE"
    },
    "192": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "193": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "DUP1",
      "path": "1"
    },
    "194": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xDF56B490"
    },
    "199": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "EQ",
      "path": "1"
    },
    "200": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x9F3"
    },
    "204": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "205": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "DUP1",
      "path": "1"
    },
    "206": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xE2903F9E"
    },
    "211": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "EQ",
      "path": "1"
    },
    "212": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0xA0A"
    },
    "216": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "217": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "DUP1",
      "path": "1"
    },
    "218": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xE2C50B4B"
    },
    "223": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "EQ",
      "path": "1"
    },
    "224": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0xA22"
    },
    "228": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "229": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "DUP1",
      "path": "1"
    },
    "230": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xE3F56AF4"
    },
    "235": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "EQ",
      "path": "1"
    },
    "236": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0xA39"
    },
    "240": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "241": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "DUP1",
      "path": "1"
    },
    "242": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xE51C8922"
    },
    "247": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "EQ",
      "path": "1"
    },
    "248": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0xA5E"
    },
    "252": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "253": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "255": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "DUP1",
      "path": "1"
    },
    "256": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "REVERT",
      "path": "1"
    },
    "257": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "258": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "DUP1",
      "path": "1"
    },
    "259": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xA4544648"
    },
    "264": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "GT",
      "path": "1"
    },
    "265": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x172"
    },
    "269": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "270": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "DUP1",
      "path": "1"
    },
    "271": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xA4544648"
    },
    "276": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "EQ",
      "path": "1"
    },
    "277": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x892"
    },
    "281": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "282": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "DUP1",
      "path": "1"
    },
    "283": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xA457C2D7"
    },
    "288": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "EQ",
      "path": "1"
    },
    "289": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x8B7"
    },
    "293": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "294": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "DUP1",
      "path": "1"
    },
    "295": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xA694FC3A"
    },
    "300": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "EQ",
      "path": "1"
    },
    "301": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x8DC"
    },
    "305": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "306": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "DUP1",
      "path": "1"
    },
    "307": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xA9059CBB"
    },
    "312": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "EQ",
      "path": "1"
    },
    "313": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x901"
    },
    "317": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "318": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "DUP1",
      "path": "1"
    },
    "319": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xB19A207F"
    },
    "324": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "EQ",
      "path": "1"
    },
    "325": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x926"
    },
    "329": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "330": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "DUP1",
      "path": "1"
    },
    "331": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xB4E51B7B"
    },
    "336": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "EQ",
      "path": "1"
    },
    "337": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x94B"
    },
    "341": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "342": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "DUP1",
      "path": "1"
    },
    "343": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xB7A7DC5C"
    },
    "348": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "EQ",
      "path": "1"
    },
    "349": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x955"
    },
    "353": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "354": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "DUP1",
      "path": "1"
    },
    "355": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xBED34BBA"
    },
    "360": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "EQ",
      "path": "1"
    },
    "361": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x97A"
    },
    "365": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "366": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "368": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "DUP1",
      "path": "1"
    },
    "369": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "REVERT",
      "path": "1"
    },
    "370": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "371": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "DUP1",
      "path": "1"
    },
    "372": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x78182D03"
    },
    "377": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "EQ",
      "path": "1"
    },
    "378": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x78C"
    },
    "382": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "383": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "DUP1",
      "path": "1"
    },
    "384": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x79CC6790"
    },
    "389": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "EQ",
      "path": "1"
    },
    "390": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x7A4"
    },
    "394": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "395": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "DUP1",
      "path": "1"
    },
    "396": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x8297F29F"
    },
    "401": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "EQ",
      "path": "1"
    },
    "402": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x7C9"
    },
    "406": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "407": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "DUP1",
      "path": "1"
    },
    "408": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x8761DC5F"
    },
    "413": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "EQ",
      "path": "1"
    },
    "414": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x806"
    },
    "418": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "419": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "DUP1",
      "path": "1"
    },
    "420": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x8B8FBD92"
    },
    "425": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "EQ",
      "path": "1"
    },
    "426": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x82B"
    },
    "430": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "431": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "DUP1",
      "path": "1"
    },
    "432": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x935418FC"
    },
    "437": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "EQ",
      "path": "1"
    },
    "438": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x84B"
    },
    "442": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "443": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "DUP1",
      "path": "1"
    },
    "444": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x95D89B41"
    },
    "449": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "EQ",
      "path": "1"
    },
    "450": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x855"
    },
    "454": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "455": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "DUP1",
      "path": "1"
    },
    "456": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x9BC255F8"
    },
    "461": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "EQ",
      "path": "1"
    },
    "462": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x86D"
    },
    "466": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "467": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "469": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "DUP1",
      "path": "1"
    },
    "470": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "REVERT",
      "path": "1"
    },
    "471": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "472": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "DUP1",
      "path": "1"
    },
    "473": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x3F31C3D4"
    },
    "478": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "GT",
      "path": "1"
    },
    "479": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x2B9"
    },
    "483": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "484": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "DUP1",
      "path": "1"
    },
    "485": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x597E1FB5"
    },
    "490": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "GT",
      "path": "1"
    },
    "491": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x254"
    },
    "495": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "496": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "DUP1",
      "path": "1"
    },
    "497": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x597E1FB5"
    },
    "502": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "EQ",
      "path": "1"
    },
    "503": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x694"
    },
    "507": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "508": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "DUP1",
      "path": "1"
    },
    "509": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x60C7C34A"
    },
    "514": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "EQ",
      "path": "1"
    },
    "515": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x6B5"
    },
    "519": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "520": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "DUP1",
      "path": "1"
    },
    "521": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x61414358"
    },
    "526": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "EQ",
      "path": "1"
    },
    "527": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x6CD"
    },
    "531": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "532": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "DUP1",
      "path": "1"
    },
    "533": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x6A35205E"
    },
    "538": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "EQ",
      "path": "1"
    },
    "539": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x6E5"
    },
    "543": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "544": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "DUP1",
      "path": "1"
    },
    "545": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x6C3C84F7"
    },
    "550": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "EQ",
      "path": "1"
    },
    "551": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x6FD"
    },
    "555": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "556": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "DUP1",
      "path": "1"
    },
    "557": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x6D714B68"
    },
    "562": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "EQ",
      "path": "1"
    },
    "563": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x715"
    },
    "567": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "568": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "DUP1",
      "path": "1"
    },
    "569": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x70A08231"
    },
    "574": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "EQ",
      "path": "1"
    },
    "575": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x73A"
    },
    "579": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "580": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "DUP1",
      "path": "1"
    },
    "581": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x76795411"
    },
    "586": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "EQ",
      "path": "1"
    },
    "587": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x774"
    },
    "591": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "592": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "594": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "DUP1",
      "path": "1"
    },
    "595": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "REVERT",
      "path": "1"
    },
    "596": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "597": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "DUP1",
      "path": "1"
    },
    "598": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x3F31C3D4"
    },
    "603": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "EQ",
      "path": "1"
    },
    "604": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x5BC"
    },
    "608": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "609": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "DUP1",
      "path": "1"
    },
    "610": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x42966C68"
    },
    "615": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "EQ",
      "path": "1"
    },
    "616": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x5E1"
    },
    "620": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "621": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "DUP1",
      "path": "1"
    },
    "622": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x43D726D6"
    },
    "627": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "EQ",
      "path": "1"
    },
    "628": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x606"
    },
    "632": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "633": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "DUP1",
      "path": "1"
    },
    "634": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x4409559A"
    },
    "639": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "EQ",
      "path": "1"
    },
    "640": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x61E"
    },
    "644": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "645": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "DUP1",
      "path": "1"
    },
    "646": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x4420E486"
    },
    "651": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "EQ",
      "path": "1"
    },
    "652": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x640"
    },
    "656": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "657": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "DUP1",
      "path": "1"
    },
    "658": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x44874F4A"
    },
    "663": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "EQ",
      "path": "1"
    },
    "664": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x657"
    },
    "668": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "669": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "DUP1",
      "path": "1"
    },
    "670": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x495057BE"
    },
    "675": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "EQ",
      "path": "1"
    },
    "676": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x46D"
    },
    "680": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "681": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "DUP1",
      "path": "1"
    },
    "682": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x588EE29B"
    },
    "687": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "EQ",
      "path": "1"
    },
    "688": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x67C"
    },
    "692": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "693": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "695": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "DUP1",
      "path": "1"
    },
    "696": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "REVERT",
      "path": "1"
    },
    "697": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "698": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "DUP1",
      "path": "1"
    },
    "699": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x266001D3"
    },
    "704": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "GT",
      "path": "1"
    },
    "705": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x32A"
    },
    "709": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "710": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "DUP1",
      "path": "1"
    },
    "711": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x266001D3"
    },
    "716": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "EQ",
      "path": "1"
    },
    "717": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x4D9"
    },
    "721": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "722": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "DUP1",
      "path": "1"
    },
    "723": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x29722A86"
    },
    "728": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "EQ",
      "path": "1"
    },
    "729": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x4FE"
    },
    "733": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "734": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "DUP1",
      "path": "1"
    },
    "735": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x305601BC"
    },
    "740": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "EQ",
      "path": "1"
    },
    "741": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x516"
    },
    "745": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "746": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "DUP1",
      "path": "1"
    },
    "747": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x313CE567"
    },
    "752": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "EQ",
      "path": "1"
    },
    "753": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x52E"
    },
    "757": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "758": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "DUP1",
      "path": "1"
    },
    "759": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x32E7C5BF"
    },
    "764": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "EQ",
      "path": "1"
    },
    "765": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x54C"
    },
    "769": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "770": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "DUP1",
      "path": "1"
    },
    "771": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x39509351"
    },
    "776": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "EQ",
      "path": "1"
    },
    "777": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x563"
    },
    "781": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "782": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "DUP1",
      "path": "1"
    },
    "783": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x39E7357C"
    },
    "788": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "EQ",
      "path": "1"
    },
    "789": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x588"
    },
    "793": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "794": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "DUP1",
      "path": "1"
    },
    "795": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x3E9D5E0E"
    },
    "800": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "EQ",
      "path": "1"
    },
    "801": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x5A0"
    },
    "805": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "806": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "808": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "DUP1",
      "path": "1"
    },
    "809": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "REVERT",
      "path": "1"
    },
    "810": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "811": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "DUP1",
      "path": "1"
    },
    "812": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x6FDDE03"
    },
    "817": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "EQ",
      "path": "1"
    },
    "818": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x390"
    },
    "822": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "823": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "DUP1",
      "path": "1"
    },
    "824": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x95EA7B3"
    },
    "829": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "EQ",
      "path": "1"
    },
    "830": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x3C0"
    },
    "834": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "835": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "DUP1",
      "path": "1"
    },
    "836": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x9ED4607"
    },
    "841": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "EQ",
      "path": "1"
    },
    "842": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x3F6"
    },
    "846": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "847": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "DUP1",
      "path": "1"
    },
    "848": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x179B7742"
    },
    "853": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "EQ",
      "path": "1"
    },
    "854": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x41D"
    },
    "858": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "859": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "DUP1",
      "path": "1"
    },
    "860": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x18160DDD"
    },
    "865": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "EQ",
      "path": "1"
    },
    "866": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x442"
    },
    "870": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "871": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "DUP1",
      "path": "1"
    },
    "872": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x1B9265B8"
    },
    "877": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "EQ",
      "path": "1"
    },
    "878": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x463"
    },
    "882": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "883": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "DUP1",
      "path": "1"
    },
    "884": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x2017FB74"
    },
    "889": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "EQ",
      "path": "1"
    },
    "890": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x46F"
    },
    "894": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "895": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "DUP1",
      "path": "1"
    },
    "896": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x23B872DD"
    },
    "901": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "EQ",
      "path": "1"
    },
    "902": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x4B4"
    },
    "906": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "907": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "908": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "910": {
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "DUP1",
      "path": "1"
    },
    "911": {
      "first_revert": true,
      "fn": null,
      "offset": [
        2510,
        47357
      ],
      "op": "REVERT",
      "path": "1"
    },
    "912": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "913": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "CALLVALUE",
      "path": "15"
    },
    "914": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "DUP1",
      "path": "15"
    },
    "915": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "916": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "PUSH3",
      "path": "15",
      "value": "0x39D"
    },
    "920": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "921": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "923": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "DUP1",
      "path": "15"
    },
    "924": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "REVERT",
      "path": "15"
    },
    "925": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "926": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "POP",
      "path": "15"
    },
    "927": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "PUSH3",
      "path": "15",
      "value": "0x3A8"
    },
    "931": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "PUSH3",
      "path": "15",
      "value": "0xB78"
    },
    "935": {
      "fn": "ERC20Upgradeable.name",
      "jump": "i",
      "offset": [
        2493,
        2591
      ],
      "op": "JUMP",
      "path": "15"
    },
    "936": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "937": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "939": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "940": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "PUSH3",
      "path": "15",
      "value": "0x3B7"
    },
    "944": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "945": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "946": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "PUSH3",
      "path": "15",
      "value": "0x33A6"
    },
    "950": {
      "fn": "ERC20Upgradeable.name",
      "jump": "i",
      "offset": [
        2493,
        2591
      ],
      "op": "JUMP",
      "path": "15"
    },
    "951": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "952": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "954": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "955": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "DUP1",
      "path": "15"
    },
    "956": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "957": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "SUB",
      "path": "15"
    },
    "958": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "959": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "RETURN",
      "path": "15"
    },
    "960": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "961": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "CALLVALUE",
      "path": "15"
    },
    "962": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "DUP1",
      "path": "15"
    },
    "963": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "964": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "PUSH3",
      "path": "15",
      "value": "0x3CD"
    },
    "968": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "969": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "971": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "DUP1",
      "path": "15"
    },
    "972": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "REVERT",
      "path": "15"
    },
    "973": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "974": {
      "op": "POP"
    },
    "975": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "PUSH3",
      "path": "15",
      "value": "0x3E5"
    },
    "979": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "PUSH3",
      "path": "15",
      "value": "0x3DF"
    },
    "983": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "984": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "986": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "PUSH3",
      "path": "15",
      "value": "0x33DF"
    },
    "990": {
      "fn": "ERC20Upgradeable.approve",
      "jump": "i",
      "offset": [
        4770,
        4967
      ],
      "op": "JUMP",
      "path": "15"
    },
    "991": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "992": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "PUSH3",
      "path": "15",
      "value": "0xC12"
    },
    "996": {
      "fn": "ERC20Upgradeable.approve",
      "jump": "i",
      "offset": [
        4770,
        4967
      ],
      "op": "JUMP",
      "path": "15"
    },
    "997": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "998": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "1000": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "1001": {
      "op": "SWAP1"
    },
    "1002": {
      "op": "ISZERO"
    },
    "1003": {
      "op": "ISZERO"
    },
    "1004": {
      "op": "DUP2"
    },
    "1005": {
      "op": "MSTORE"
    },
    "1006": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1008": {
      "op": "ADD"
    },
    "1009": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "PUSH3",
      "path": "15",
      "value": "0x3B7"
    },
    "1013": {
      "op": "JUMP"
    },
    "1014": {
      "fn": "CultureCoin.clone",
      "offset": [
        17266,
        17471
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1015": {
      "fn": "CultureCoin.clone",
      "offset": [
        17266,
        17471
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "1016": {
      "fn": "CultureCoin.clone",
      "offset": [
        17266,
        17471
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1017": {
      "fn": "CultureCoin.clone",
      "offset": [
        17266,
        17471
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1018": {
      "fn": "CultureCoin.clone",
      "offset": [
        17266,
        17471
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x403"
    },
    "1022": {
      "fn": "CultureCoin.clone",
      "offset": [
        17266,
        17471
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1023": {
      "fn": "CultureCoin.clone",
      "offset": [
        17266,
        17471
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1025": {
      "fn": "CultureCoin.clone",
      "offset": [
        17266,
        17471
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1026": {
      "fn": "CultureCoin.clone",
      "offset": [
        17266,
        17471
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1027": {
      "fn": "CultureCoin.clone",
      "offset": [
        17266,
        17471
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1028": {
      "fn": "CultureCoin.clone",
      "offset": [
        17266,
        17471
      ],
      "op": "POP",
      "path": "1"
    },
    "1029": {
      "fn": "CultureCoin.clone",
      "offset": [
        17266,
        17471
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x40E"
    },
    "1033": {
      "fn": "CultureCoin.clone",
      "offset": [
        17266,
        17471
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0xC2C"
    },
    "1037": {
      "fn": "CultureCoin.clone",
      "jump": "i",
      "offset": [
        17266,
        17471
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1038": {
      "fn": "CultureCoin.clone",
      "offset": [
        17266,
        17471
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1039": {
      "fn": "CultureCoin.clone",
      "offset": [
        17266,
        17471
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1041": {
      "fn": "CultureCoin.clone",
      "offset": [
        17266,
        17471
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1042": {
      "fn": "CultureCoin.clone",
      "offset": [
        17266,
        17471
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x3B7"
    },
    "1046": {
      "fn": "CultureCoin.clone",
      "offset": [
        17266,
        17471
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1047": {
      "fn": "CultureCoin.clone",
      "offset": [
        17266,
        17471
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1048": {
      "fn": "CultureCoin.clone",
      "offset": [
        17266,
        17471
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x340C"
    },
    "1052": {
      "fn": "CultureCoin.clone",
      "jump": "i",
      "offset": [
        17266,
        17471
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1053": {
      "fn": "CultureCoin.clonesearch",
      "offset": [
        17507,
        18114
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1054": {
      "fn": "CultureCoin.clonesearch",
      "offset": [
        17507,
        18114
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "1055": {
      "fn": "CultureCoin.clonesearch",
      "offset": [
        17507,
        18114
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1056": {
      "fn": "CultureCoin.clonesearch",
      "offset": [
        17507,
        18114
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1057": {
      "fn": "CultureCoin.clonesearch",
      "offset": [
        17507,
        18114
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x42A"
    },
    "1061": {
      "fn": "CultureCoin.clonesearch",
      "offset": [
        17507,
        18114
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1062": {
      "fn": "CultureCoin.clonesearch",
      "offset": [
        17507,
        18114
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1064": {
      "fn": "CultureCoin.clonesearch",
      "offset": [
        17507,
        18114
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1065": {
      "fn": "CultureCoin.clonesearch",
      "offset": [
        17507,
        18114
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1066": {
      "fn": "CultureCoin.clonesearch",
      "offset": [
        17507,
        18114
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1067": {
      "op": "POP"
    },
    "1068": {
      "fn": "CultureCoin.clonesearch",
      "offset": [
        17507,
        18114
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x3E5"
    },
    "1072": {
      "fn": "CultureCoin.clonesearch",
      "offset": [
        17507,
        18114
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x43C"
    },
    "1076": {
      "fn": "CultureCoin.clonesearch",
      "offset": [
        17507,
        18114
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "1077": {
      "fn": "CultureCoin.clonesearch",
      "offset": [
        17507,
        18114
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1079": {
      "fn": "CultureCoin.clonesearch",
      "offset": [
        17507,
        18114
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x3420"
    },
    "1083": {
      "fn": "CultureCoin.clonesearch",
      "jump": "i",
      "offset": [
        17507,
        18114
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1084": {
      "fn": "CultureCoin.clonesearch",
      "offset": [
        17507,
        18114
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1085": {
      "fn": "CultureCoin.clonesearch",
      "offset": [
        17507,
        18114
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0xC3B"
    },
    "1089": {
      "fn": "CultureCoin.clonesearch",
      "jump": "i",
      "offset": [
        17507,
        18114
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1090": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        3581,
        3687
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1091": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        3581,
        3687
      ],
      "op": "CALLVALUE",
      "path": "15"
    },
    "1092": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        3581,
        3687
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1093": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        3581,
        3687
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "1094": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        3581,
        3687
      ],
      "op": "PUSH3",
      "path": "15",
      "value": "0x44F"
    },
    "1098": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        3581,
        3687
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "1099": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        3581,
        3687
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "1101": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        3581,
        3687
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1102": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        3581,
        3687
      ],
      "op": "REVERT",
      "path": "15"
    },
    "1103": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        3581,
        3687
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1104": {
      "op": "POP"
    },
    "1105": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        3668,
        3680
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 0,
      "value": "0x35"
    },
    "1107": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        3668,
        3680
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "1108": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        3581,
        3687
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1109": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        3581,
        3687
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "1111": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        3581,
        3687
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "1112": {
      "op": "SWAP1"
    },
    "1113": {
      "op": "DUP2"
    },
    "1114": {
      "op": "MSTORE"
    },
    "1115": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1117": {
      "op": "ADD"
    },
    "1118": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        3581,
        3687
      ],
      "op": "PUSH3",
      "path": "15",
      "value": "0x3B7"
    },
    "1122": {
      "op": "JUMP"
    },
    "1123": {
      "fn": "CultureCoin.pay",
      "offset": [
        23931,
        24101
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1124": {
      "fn": "CultureCoin.pay",
      "offset": [
        23931,
        24101
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x46D"
    },
    "1128": {
      "fn": "CultureCoin.pay",
      "offset": [
        23931,
        24101
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0xC5F"
    },
    "1132": {
      "fn": "CultureCoin.pay",
      "jump": "i",
      "offset": [
        23931,
        24101
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1133": {
      "fn": "CultureCoin.pay",
      "offset": [
        23931,
        24101
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1134": {
      "fn": "CultureCoin.pay",
      "offset": [
        23931,
        24101
      ],
      "op": "STOP",
      "path": "1"
    },
    "1135": {
      "fn": "CultureCoin.getCoin",
      "offset": [
        21189,
        21324
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1136": {
      "fn": "CultureCoin.getCoin",
      "offset": [
        21189,
        21324
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "1137": {
      "fn": "CultureCoin.getCoin",
      "offset": [
        21189,
        21324
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1138": {
      "fn": "CultureCoin.getCoin",
      "offset": [
        21189,
        21324
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1139": {
      "fn": "CultureCoin.getCoin",
      "offset": [
        21189,
        21324
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x47C"
    },
    "1143": {
      "fn": "CultureCoin.getCoin",
      "offset": [
        21189,
        21324
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1144": {
      "fn": "CultureCoin.getCoin",
      "offset": [
        21189,
        21324
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1146": {
      "fn": "CultureCoin.getCoin",
      "offset": [
        21189,
        21324
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1147": {
      "fn": "CultureCoin.getCoin",
      "offset": [
        21189,
        21324
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1148": {
      "fn": "CultureCoin.getCoin",
      "offset": [
        21189,
        21324
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1149": {
      "op": "POP"
    },
    "1150": {
      "fn": "CultureCoin.getCoin",
      "offset": [
        21189,
        21324
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x494"
    },
    "1154": {
      "fn": "CultureCoin.getCoin",
      "offset": [
        21189,
        21324
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x48E"
    },
    "1158": {
      "fn": "CultureCoin.getCoin",
      "offset": [
        21189,
        21324
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "1159": {
      "fn": "CultureCoin.getCoin",
      "offset": [
        21189,
        21324
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1161": {
      "fn": "CultureCoin.getCoin",
      "offset": [
        21189,
        21324
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x34E9"
    },
    "1165": {
      "fn": "CultureCoin.getCoin",
      "jump": "i",
      "offset": [
        21189,
        21324
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1166": {
      "fn": "CultureCoin.getCoin",
      "offset": [
        21189,
        21324
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1167": {
      "fn": "CultureCoin.getCoin",
      "offset": [
        21189,
        21324
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0xD34"
    },
    "1171": {
      "fn": "CultureCoin.getCoin",
      "jump": "i",
      "offset": [
        21189,
        21324
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1172": {
      "fn": "CultureCoin.getCoin",
      "offset": [
        21189,
        21324
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1173": {
      "fn": "CultureCoin.getCoin",
      "offset": [
        21189,
        21324
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1175": {
      "fn": "CultureCoin.getCoin",
      "offset": [
        21189,
        21324
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1176": {
      "fn": "CultureCoin.getCoin",
      "offset": [
        21189,
        21324
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1177": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1179": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1181": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1183": {
      "op": "SHL"
    },
    "1184": {
      "op": "SUB"
    },
    "1185": {
      "op": "SWAP1"
    },
    "1186": {
      "op": "SWAP4"
    },
    "1187": {
      "op": "AND"
    },
    "1188": {
      "op": "DUP4"
    },
    "1189": {
      "op": "MSTORE"
    },
    "1190": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1192": {
      "op": "DUP4"
    },
    "1193": {
      "op": "ADD"
    },
    "1194": {
      "op": "SWAP2"
    },
    "1195": {
      "op": "SWAP1"
    },
    "1196": {
      "op": "SWAP2"
    },
    "1197": {
      "op": "MSTORE"
    },
    "1198": {
      "op": "ADD"
    },
    "1199": {
      "fn": "CultureCoin.getCoin",
      "offset": [
        21189,
        21324
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x3B7"
    },
    "1203": {
      "op": "JUMP"
    },
    "1204": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5529,
        5815
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1205": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5529,
        5815
      ],
      "op": "CALLVALUE",
      "path": "15"
    },
    "1206": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5529,
        5815
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1207": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5529,
        5815
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "1208": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5529,
        5815
      ],
      "op": "PUSH3",
      "path": "15",
      "value": "0x4C1"
    },
    "1212": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5529,
        5815
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "1213": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5529,
        5815
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "1215": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5529,
        5815
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1216": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5529,
        5815
      ],
      "op": "REVERT",
      "path": "15"
    },
    "1217": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5529,
        5815
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1218": {
      "op": "POP"
    },
    "1219": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5529,
        5815
      ],
      "op": "PUSH3",
      "path": "15",
      "value": "0x3E5"
    },
    "1223": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5529,
        5815
      ],
      "op": "PUSH3",
      "path": "15",
      "value": "0x4D3"
    },
    "1227": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5529,
        5815
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "1228": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5529,
        5815
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "1230": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5529,
        5815
      ],
      "op": "PUSH3",
      "path": "15",
      "value": "0x352A"
    },
    "1234": {
      "fn": "ERC20Upgradeable.transferFrom",
      "jump": "i",
      "offset": [
        5529,
        5815
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1235": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5529,
        5815
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1236": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5529,
        5815
      ],
      "op": "PUSH3",
      "path": "15",
      "value": "0xD8B"
    },
    "1240": {
      "fn": "ERC20Upgradeable.transferFrom",
      "jump": "i",
      "offset": [
        5529,
        5815
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1241": {
      "fn": "CultureCoin.concatenate",
      "offset": [
        33956,
        34094
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1242": {
      "fn": "CultureCoin.concatenate",
      "offset": [
        33956,
        34094
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "1243": {
      "fn": "CultureCoin.concatenate",
      "offset": [
        33956,
        34094
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1244": {
      "fn": "CultureCoin.concatenate",
      "offset": [
        33956,
        34094
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1245": {
      "fn": "CultureCoin.concatenate",
      "offset": [
        33956,
        34094
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x4E6"
    },
    "1249": {
      "fn": "CultureCoin.concatenate",
      "offset": [
        33956,
        34094
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1250": {
      "fn": "CultureCoin.concatenate",
      "offset": [
        33956,
        34094
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1252": {
      "fn": "CultureCoin.concatenate",
      "offset": [
        33956,
        34094
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1253": {
      "fn": "CultureCoin.concatenate",
      "offset": [
        33956,
        34094
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1254": {
      "fn": "CultureCoin.concatenate",
      "offset": [
        33956,
        34094
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1255": {
      "op": "POP"
    },
    "1256": {
      "fn": "CultureCoin.concatenate",
      "offset": [
        33956,
        34094
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x3A8"
    },
    "1260": {
      "fn": "CultureCoin.concatenate",
      "offset": [
        33956,
        34094
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x4F8"
    },
    "1264": {
      "fn": "CultureCoin.concatenate",
      "offset": [
        33956,
        34094
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "1265": {
      "fn": "CultureCoin.concatenate",
      "offset": [
        33956,
        34094
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1267": {
      "fn": "CultureCoin.concatenate",
      "offset": [
        33956,
        34094
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x356B"
    },
    "1271": {
      "fn": "CultureCoin.concatenate",
      "jump": "i",
      "offset": [
        33956,
        34094
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1272": {
      "fn": "CultureCoin.concatenate",
      "offset": [
        33956,
        34094
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1273": {
      "fn": "CultureCoin.concatenate",
      "offset": [
        33956,
        34094
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0xDB3"
    },
    "1277": {
      "fn": "CultureCoin.concatenate",
      "jump": "i",
      "offset": [
        33956,
        34094
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1278": {
      "offset": [
        20132,
        20158
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1279": {
      "fn": "CultureCoin.concatenate",
      "offset": [
        20132,
        20158
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "1280": {
      "fn": "CultureCoin.concatenate",
      "offset": [
        20132,
        20158
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1281": {
      "fn": "CultureCoin.concatenate",
      "offset": [
        20132,
        20158
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1282": {
      "fn": "CultureCoin.concatenate",
      "offset": [
        20132,
        20158
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x50B"
    },
    "1286": {
      "fn": "CultureCoin.concatenate",
      "offset": [
        20132,
        20158
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1287": {
      "fn": "CultureCoin.concatenate",
      "offset": [
        20132,
        20158
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1289": {
      "fn": "CultureCoin.concatenate",
      "offset": [
        20132,
        20158
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1290": {
      "fn": "CultureCoin.concatenate",
      "offset": [
        20132,
        20158
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1291": {
      "fn": "CultureCoin.concatenate",
      "offset": [
        20132,
        20158
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1292": {
      "fn": "CultureCoin.concatenate",
      "offset": [
        20132,
        20158
      ],
      "op": "POP",
      "path": "1"
    },
    "1293": {
      "fn": "CultureCoin.concatenate",
      "offset": [
        20132,
        20158
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x454"
    },
    "1297": {
      "fn": "CultureCoin.concatenate",
      "offset": [
        20132,
        20158
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xEB"
    },
    "1299": {
      "fn": "CultureCoin.concatenate",
      "offset": [
        20132,
        20158
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1300": {
      "fn": "CultureCoin.concatenate",
      "offset": [
        20132,
        20158
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1301": {
      "fn": "CultureCoin.concatenate",
      "offset": [
        20132,
        20158
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1302": {
      "fn": "CultureCoin.getXAllowance",
      "offset": [
        17044,
        17139
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1303": {
      "fn": "CultureCoin.getXAllowance",
      "offset": [
        17044,
        17139
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "1304": {
      "fn": "CultureCoin.getXAllowance",
      "offset": [
        17044,
        17139
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1305": {
      "fn": "CultureCoin.getXAllowance",
      "offset": [
        17044,
        17139
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1306": {
      "fn": "CultureCoin.getXAllowance",
      "offset": [
        17044,
        17139
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x523"
    },
    "1310": {
      "fn": "CultureCoin.getXAllowance",
      "offset": [
        17044,
        17139
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1311": {
      "fn": "CultureCoin.getXAllowance",
      "offset": [
        17044,
        17139
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1313": {
      "fn": "CultureCoin.getXAllowance",
      "offset": [
        17044,
        17139
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1314": {
      "fn": "CultureCoin.getXAllowance",
      "offset": [
        17044,
        17139
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1315": {
      "fn": "CultureCoin.getXAllowance",
      "offset": [
        17044,
        17139
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1316": {
      "fn": "CultureCoin.getXAllowance",
      "offset": [
        17044,
        17139
      ],
      "op": "POP",
      "path": "1"
    },
    "1317": {
      "fn": "CultureCoin.getXAllowance",
      "offset": [
        17044,
        17139
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x454"
    },
    "1321": {
      "fn": "CultureCoin.getXAllowance",
      "offset": [
        17044,
        17139
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0xDE1"
    },
    "1325": {
      "fn": "CultureCoin.getXAllowance",
      "jump": "i",
      "offset": [
        17044,
        17139
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1326": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3430,
        3521
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1327": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3430,
        3521
      ],
      "op": "CALLVALUE",
      "path": "15"
    },
    "1328": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3430,
        3521
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1329": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3430,
        3521
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "1330": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3430,
        3521
      ],
      "op": "PUSH3",
      "path": "15",
      "value": "0x53B"
    },
    "1334": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3430,
        3521
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "1335": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3430,
        3521
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "1337": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3430,
        3521
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1338": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3430,
        3521
      ],
      "op": "REVERT",
      "path": "15"
    },
    "1339": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3430,
        3521
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1340": {
      "op": "POP"
    },
    "1341": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3430,
        3521
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "1343": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3430,
        3521
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "1344": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3512,
        3514
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 1,
      "value": "0x12"
    },
    "1346": {
      "op": "DUP2"
    },
    "1347": {
      "op": "MSTORE"
    },
    "1348": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1350": {
      "op": "ADD"
    },
    "1351": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3430,
        3521
      ],
      "op": "PUSH3",
      "path": "15",
      "value": "0x3B7"
    },
    "1355": {
      "op": "JUMP"
    },
    "1356": {
      "fn": "CultureCoin.B",
      "offset": [
        7946,
        8015
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1357": {
      "fn": "CultureCoin.B",
      "offset": [
        7946,
        8015
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "1358": {
      "fn": "CultureCoin.B",
      "offset": [
        7946,
        8015
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1359": {
      "fn": "CultureCoin.B",
      "offset": [
        7946,
        8015
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1360": {
      "fn": "CultureCoin.B",
      "offset": [
        7946,
        8015
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x559"
    },
    "1364": {
      "fn": "CultureCoin.B",
      "offset": [
        7946,
        8015
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1365": {
      "fn": "CultureCoin.B",
      "offset": [
        7946,
        8015
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1367": {
      "fn": "CultureCoin.B",
      "offset": [
        7946,
        8015
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1368": {
      "fn": "CultureCoin.B",
      "offset": [
        7946,
        8015
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1369": {
      "fn": "CultureCoin.B",
      "offset": [
        7946,
        8015
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1370": {
      "op": "POP"
    },
    "1371": {
      "fn": "CultureCoin.B",
      "offset": [
        8007,
        8008
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 2,
      "value": "0xCD"
    },
    "1373": {
      "fn": "CultureCoin.B",
      "offset": [
        8007,
        8008
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1374": {
      "fn": "CultureCoin.B",
      "offset": [
        7946,
        8015
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x454"
    },
    "1378": {
      "fn": "CultureCoin.B",
      "offset": [
        7946,
        8015
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1379": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6210,
        6444
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1380": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6210,
        6444
      ],
      "op": "CALLVALUE",
      "path": "15"
    },
    "1381": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6210,
        6444
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1382": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6210,
        6444
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "1383": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6210,
        6444
      ],
      "op": "PUSH3",
      "path": "15",
      "value": "0x570"
    },
    "1387": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6210,
        6444
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "1388": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6210,
        6444
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "1390": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6210,
        6444
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1391": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6210,
        6444
      ],
      "op": "REVERT",
      "path": "15"
    },
    "1392": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6210,
        6444
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1393": {
      "op": "POP"
    },
    "1394": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6210,
        6444
      ],
      "op": "PUSH3",
      "path": "15",
      "value": "0x3E5"
    },
    "1398": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6210,
        6444
      ],
      "op": "PUSH3",
      "path": "15",
      "value": "0x582"
    },
    "1402": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6210,
        6444
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "1403": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6210,
        6444
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "1405": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6210,
        6444
      ],
      "op": "PUSH3",
      "path": "15",
      "value": "0x33DF"
    },
    "1409": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "jump": "i",
      "offset": [
        6210,
        6444
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1410": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6210,
        6444
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1411": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6210,
        6444
      ],
      "op": "PUSH3",
      "path": "15",
      "value": "0xDFA"
    },
    "1415": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "jump": "i",
      "offset": [
        6210,
        6444
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1416": {
      "fn": "CultureCoin.getSeed",
      "offset": [
        34699,
        34766
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1417": {
      "fn": "CultureCoin.getSeed",
      "offset": [
        34699,
        34766
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "1418": {
      "fn": "CultureCoin.getSeed",
      "offset": [
        34699,
        34766
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1419": {
      "fn": "CultureCoin.getSeed",
      "offset": [
        34699,
        34766
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1420": {
      "fn": "CultureCoin.getSeed",
      "offset": [
        34699,
        34766
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x595"
    },
    "1424": {
      "fn": "CultureCoin.getSeed",
      "offset": [
        34699,
        34766
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1425": {
      "fn": "CultureCoin.getSeed",
      "offset": [
        34699,
        34766
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1427": {
      "fn": "CultureCoin.getSeed",
      "offset": [
        34699,
        34766
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1428": {
      "fn": "CultureCoin.getSeed",
      "offset": [
        34699,
        34766
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1429": {
      "fn": "CultureCoin.getSeed",
      "offset": [
        34699,
        34766
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1430": {
      "fn": "CultureCoin.getSeed",
      "offset": [
        34699,
        34766
      ],
      "op": "POP",
      "path": "1"
    },
    "1431": {
      "fn": "CultureCoin.getSeed",
      "offset": [
        34699,
        34766
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x46D"
    },
    "1435": {
      "fn": "CultureCoin.getSeed",
      "offset": [
        34699,
        34766
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0xE22"
    },
    "1439": {
      "fn": "CultureCoin.getSeed",
      "jump": "i",
      "offset": [
        34699,
        34766
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1440": {
      "offset": [
        18786,
        18803
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1441": {
      "fn": "CultureCoin.getSeed",
      "offset": [
        18786,
        18803
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "1442": {
      "fn": "CultureCoin.getSeed",
      "offset": [
        18786,
        18803
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1443": {
      "fn": "CultureCoin.getSeed",
      "offset": [
        18786,
        18803
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1444": {
      "fn": "CultureCoin.getSeed",
      "offset": [
        18786,
        18803
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x5AD"
    },
    "1448": {
      "fn": "CultureCoin.getSeed",
      "offset": [
        18786,
        18803
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1449": {
      "fn": "CultureCoin.getSeed",
      "offset": [
        18786,
        18803
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1451": {
      "fn": "CultureCoin.getSeed",
      "offset": [
        18786,
        18803
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1452": {
      "fn": "CultureCoin.getSeed",
      "offset": [
        18786,
        18803
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1453": {
      "fn": "CultureCoin.getSeed",
      "offset": [
        18786,
        18803
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1454": {
      "op": "POP"
    },
    "1455": {
      "offset": [
        18786,
        18803
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xEA"
    },
    "1457": {
      "fn": "CultureCoin.getSeed",
      "offset": [
        18786,
        18803
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1458": {
      "fn": "CultureCoin.getSeed",
      "offset": [
        18786,
        18803
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x3E5"
    },
    "1462": {
      "fn": "CultureCoin.getSeed",
      "offset": [
        18786,
        18803
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1463": {
      "fn": "CultureCoin.getSeed",
      "offset": [
        18786,
        18803
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "1465": {
      "fn": "CultureCoin.getSeed",
      "offset": [
        18786,
        18803
      ],
      "op": "AND",
      "path": "1"
    },
    "1466": {
      "fn": "CultureCoin.getSeed",
      "offset": [
        18786,
        18803
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1467": {
      "fn": "CultureCoin.getSeed",
      "offset": [
        18786,
        18803
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1468": {
      "fn": "CultureCoin.cloneMoney",
      "offset": [
        24106,
        24350
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1469": {
      "fn": "CultureCoin.cloneMoney",
      "offset": [
        24106,
        24350
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "1470": {
      "fn": "CultureCoin.cloneMoney",
      "offset": [
        24106,
        24350
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1471": {
      "fn": "CultureCoin.cloneMoney",
      "offset": [
        24106,
        24350
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1472": {
      "fn": "CultureCoin.cloneMoney",
      "offset": [
        24106,
        24350
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x5C9"
    },
    "1476": {
      "fn": "CultureCoin.cloneMoney",
      "offset": [
        24106,
        24350
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1477": {
      "fn": "CultureCoin.cloneMoney",
      "offset": [
        24106,
        24350
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1479": {
      "fn": "CultureCoin.cloneMoney",
      "offset": [
        24106,
        24350
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1480": {
      "fn": "CultureCoin.cloneMoney",
      "offset": [
        24106,
        24350
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1481": {
      "fn": "CultureCoin.cloneMoney",
      "offset": [
        24106,
        24350
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1482": {
      "op": "POP"
    },
    "1483": {
      "fn": "CultureCoin.cloneMoney",
      "offset": [
        24106,
        24350
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x46D"
    },
    "1487": {
      "fn": "CultureCoin.cloneMoney",
      "offset": [
        24106,
        24350
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x5DB"
    },
    "1491": {
      "fn": "CultureCoin.cloneMoney",
      "offset": [
        24106,
        24350
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "1492": {
      "fn": "CultureCoin.cloneMoney",
      "offset": [
        24106,
        24350
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1494": {
      "fn": "CultureCoin.cloneMoney",
      "offset": [
        24106,
        24350
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x35D6"
    },
    "1498": {
      "fn": "CultureCoin.cloneMoney",
      "jump": "i",
      "offset": [
        24106,
        24350
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1499": {
      "fn": "CultureCoin.cloneMoney",
      "offset": [
        24106,
        24350
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1500": {
      "fn": "CultureCoin.cloneMoney",
      "offset": [
        24106,
        24350
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0xE6B"
    },
    "1504": {
      "fn": "CultureCoin.cloneMoney",
      "jump": "i",
      "offset": [
        24106,
        24350
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1505": {
      "fn": "ERC20BurnableUpgradeable.burn",
      "offset": [
        848,
        937
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1506": {
      "fn": "ERC20BurnableUpgradeable.burn",
      "offset": [
        848,
        937
      ],
      "op": "CALLVALUE",
      "path": "17"
    },
    "1507": {
      "fn": "ERC20BurnableUpgradeable.burn",
      "offset": [
        848,
        937
      ],
      "op": "DUP1",
      "path": "17"
    },
    "1508": {
      "fn": "ERC20BurnableUpgradeable.burn",
      "offset": [
        848,
        937
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "1509": {
      "fn": "ERC20BurnableUpgradeable.burn",
      "offset": [
        848,
        937
      ],
      "op": "PUSH3",
      "path": "17",
      "value": "0x5EE"
    },
    "1513": {
      "fn": "ERC20BurnableUpgradeable.burn",
      "offset": [
        848,
        937
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "1514": {
      "fn": "ERC20BurnableUpgradeable.burn",
      "offset": [
        848,
        937
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "1516": {
      "fn": "ERC20BurnableUpgradeable.burn",
      "offset": [
        848,
        937
      ],
      "op": "DUP1",
      "path": "17"
    },
    "1517": {
      "fn": "ERC20BurnableUpgradeable.burn",
      "offset": [
        848,
        937
      ],
      "op": "REVERT",
      "path": "17"
    },
    "1518": {
      "fn": "ERC20BurnableUpgradeable.burn",
      "offset": [
        848,
        937
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1519": {
      "op": "POP"
    },
    "1520": {
      "fn": "ERC20BurnableUpgradeable.burn",
      "offset": [
        848,
        937
      ],
      "op": "PUSH3",
      "path": "17",
      "value": "0x46D"
    },
    "1524": {
      "fn": "ERC20BurnableUpgradeable.burn",
      "offset": [
        848,
        937
      ],
      "op": "PUSH3",
      "path": "17",
      "value": "0x600"
    },
    "1528": {
      "fn": "ERC20BurnableUpgradeable.burn",
      "offset": [
        848,
        937
      ],
      "op": "CALLDATASIZE",
      "path": "17"
    },
    "1529": {
      "fn": "ERC20BurnableUpgradeable.burn",
      "offset": [
        848,
        937
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "1531": {
      "fn": "ERC20BurnableUpgradeable.burn",
      "offset": [
        848,
        937
      ],
      "op": "PUSH3",
      "path": "17",
      "value": "0x35D6"
    },
    "1535": {
      "fn": "ERC20BurnableUpgradeable.burn",
      "jump": "i",
      "offset": [
        848,
        937
      ],
      "op": "JUMP",
      "path": "17"
    },
    "1536": {
      "fn": "ERC20BurnableUpgradeable.burn",
      "offset": [
        848,
        937
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1537": {
      "fn": "ERC20BurnableUpgradeable.burn",
      "offset": [
        848,
        937
      ],
      "op": "PUSH3",
      "path": "17",
      "value": "0xF5B"
    },
    "1541": {
      "fn": "ERC20BurnableUpgradeable.burn",
      "jump": "i",
      "offset": [
        848,
        937
      ],
      "op": "JUMP",
      "path": "17"
    },
    "1542": {
      "fn": "CultureCoin.close",
      "offset": [
        20164,
        20886
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1543": {
      "fn": "CultureCoin.close",
      "offset": [
        20164,
        20886
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "1544": {
      "fn": "CultureCoin.close",
      "offset": [
        20164,
        20886
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1545": {
      "fn": "CultureCoin.close",
      "offset": [
        20164,
        20886
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1546": {
      "fn": "CultureCoin.close",
      "offset": [
        20164,
        20886
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x613"
    },
    "1550": {
      "fn": "CultureCoin.close",
      "offset": [
        20164,
        20886
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1551": {
      "fn": "CultureCoin.close",
      "offset": [
        20164,
        20886
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1553": {
      "fn": "CultureCoin.close",
      "offset": [
        20164,
        20886
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1554": {
      "fn": "CultureCoin.close",
      "offset": [
        20164,
        20886
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1555": {
      "fn": "CultureCoin.close",
      "offset": [
        20164,
        20886
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1556": {
      "fn": "CultureCoin.close",
      "offset": [
        20164,
        20886
      ],
      "op": "POP",
      "path": "1"
    },
    "1557": {
      "fn": "CultureCoin.close",
      "offset": [
        20164,
        20886
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x46D"
    },
    "1561": {
      "fn": "CultureCoin.close",
      "offset": [
        20164,
        20886
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0xF6A"
    },
    "1565": {
      "fn": "CultureCoin.close",
      "jump": "i",
      "offset": [
        20164,
        20886
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1566": {
      "offset": [
        11540,
        11558
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1567": {
      "fn": "CultureCoin.close",
      "offset": [
        11540,
        11558
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "1568": {
      "fn": "CultureCoin.close",
      "offset": [
        11540,
        11558
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1569": {
      "fn": "CultureCoin.close",
      "offset": [
        11540,
        11558
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1570": {
      "fn": "CultureCoin.close",
      "offset": [
        11540,
        11558
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x62B"
    },
    "1574": {
      "fn": "CultureCoin.close",
      "offset": [
        11540,
        11558
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1575": {
      "fn": "CultureCoin.close",
      "offset": [
        11540,
        11558
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1577": {
      "fn": "CultureCoin.close",
      "offset": [
        11540,
        11558
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1578": {
      "fn": "CultureCoin.close",
      "offset": [
        11540,
        11558
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1579": {
      "fn": "CultureCoin.close",
      "offset": [
        11540,
        11558
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1580": {
      "op": "POP"
    },
    "1581": {
      "offset": [
        11540,
        11558
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xD5"
    },
    "1583": {
      "fn": "CultureCoin.close",
      "offset": [
        11540,
        11558
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1584": {
      "fn": "CultureCoin.close",
      "offset": [
        11540,
        11558
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x40E"
    },
    "1588": {
      "fn": "CultureCoin.close",
      "offset": [
        11540,
        11558
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1589": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1591": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1593": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1595": {
      "op": "SHL"
    },
    "1596": {
      "op": "SUB"
    },
    "1597": {
      "offset": [
        11540,
        11558
      ],
      "op": "AND",
      "path": "1"
    },
    "1598": {
      "fn": "CultureCoin.close",
      "offset": [
        11540,
        11558
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1599": {
      "fn": "CultureCoin.close",
      "offset": [
        11540,
        11558
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1600": {
      "fn": "CultureCoin.register",
      "offset": [
        21046,
        21184
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1601": {
      "fn": "CultureCoin.register",
      "offset": [
        21046,
        21184
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x46D"
    },
    "1605": {
      "fn": "CultureCoin.register",
      "offset": [
        21046,
        21184
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x651"
    },
    "1609": {
      "fn": "CultureCoin.register",
      "offset": [
        21046,
        21184
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "1610": {
      "fn": "CultureCoin.register",
      "offset": [
        21046,
        21184
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1612": {
      "fn": "CultureCoin.register",
      "offset": [
        21046,
        21184
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x3420"
    },
    "1616": {
      "fn": "CultureCoin.register",
      "jump": "i",
      "offset": [
        21046,
        21184
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1617": {
      "fn": "CultureCoin.register",
      "offset": [
        21046,
        21184
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1618": {
      "fn": "CultureCoin.register",
      "offset": [
        21046,
        21184
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x114D"
    },
    "1622": {
      "fn": "CultureCoin.register",
      "jump": "i",
      "offset": [
        21046,
        21184
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1623": {
      "fn": "CultureCoin.setDexXMTSPRate",
      "offset": [
        16423,
        16559
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1624": {
      "fn": "CultureCoin.setDexXMTSPRate",
      "offset": [
        16423,
        16559
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "1625": {
      "fn": "CultureCoin.setDexXMTSPRate",
      "offset": [
        16423,
        16559
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1626": {
      "fn": "CultureCoin.setDexXMTSPRate",
      "offset": [
        16423,
        16559
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1627": {
      "fn": "CultureCoin.setDexXMTSPRate",
      "offset": [
        16423,
        16559
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x664"
    },
    "1631": {
      "fn": "CultureCoin.setDexXMTSPRate",
      "offset": [
        16423,
        16559
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1632": {
      "fn": "CultureCoin.setDexXMTSPRate",
      "offset": [
        16423,
        16559
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1634": {
      "fn": "CultureCoin.setDexXMTSPRate",
      "offset": [
        16423,
        16559
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1635": {
      "fn": "CultureCoin.setDexXMTSPRate",
      "offset": [
        16423,
        16559
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1636": {
      "fn": "CultureCoin.setDexXMTSPRate",
      "offset": [
        16423,
        16559
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1637": {
      "op": "POP"
    },
    "1638": {
      "fn": "CultureCoin.setDexXMTSPRate",
      "offset": [
        16423,
        16559
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x46D"
    },
    "1642": {
      "fn": "CultureCoin.setDexXMTSPRate",
      "offset": [
        16423,
        16559
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x676"
    },
    "1646": {
      "fn": "CultureCoin.setDexXMTSPRate",
      "offset": [
        16423,
        16559
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "1647": {
      "fn": "CultureCoin.setDexXMTSPRate",
      "offset": [
        16423,
        16559
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1649": {
      "fn": "CultureCoin.setDexXMTSPRate",
      "offset": [
        16423,
        16559
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x35D6"
    },
    "1653": {
      "fn": "CultureCoin.setDexXMTSPRate",
      "jump": "i",
      "offset": [
        16423,
        16559
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1654": {
      "fn": "CultureCoin.setDexXMTSPRate",
      "offset": [
        16423,
        16559
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1655": {
      "fn": "CultureCoin.setDexXMTSPRate",
      "offset": [
        16423,
        16559
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x11A2"
    },
    "1659": {
      "fn": "CultureCoin.setDexXMTSPRate",
      "jump": "i",
      "offset": [
        16423,
        16559
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1660": {
      "fn": "CultureCoin.debug",
      "offset": [
        35885,
        36062
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1661": {
      "fn": "CultureCoin.debug",
      "offset": [
        35885,
        36062
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "1662": {
      "fn": "CultureCoin.debug",
      "offset": [
        35885,
        36062
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1663": {
      "fn": "CultureCoin.debug",
      "offset": [
        35885,
        36062
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1664": {
      "fn": "CultureCoin.debug",
      "offset": [
        35885,
        36062
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x689"
    },
    "1668": {
      "fn": "CultureCoin.debug",
      "offset": [
        35885,
        36062
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1669": {
      "fn": "CultureCoin.debug",
      "offset": [
        35885,
        36062
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1671": {
      "fn": "CultureCoin.debug",
      "offset": [
        35885,
        36062
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1672": {
      "fn": "CultureCoin.debug",
      "offset": [
        35885,
        36062
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1673": {
      "fn": "CultureCoin.debug",
      "offset": [
        35885,
        36062
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1674": {
      "fn": "CultureCoin.debug",
      "offset": [
        35885,
        36062
      ],
      "op": "POP",
      "path": "1"
    },
    "1675": {
      "fn": "CultureCoin.debug",
      "offset": [
        35885,
        36062
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x46D"
    },
    "1679": {
      "fn": "CultureCoin.debug",
      "offset": [
        35885,
        36062
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x11C1"
    },
    "1683": {
      "fn": "CultureCoin.debug",
      "jump": "i",
      "offset": [
        35885,
        36062
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1684": {
      "offset": [
        18809,
        18827
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1685": {
      "fn": "CultureCoin.debug",
      "offset": [
        18809,
        18827
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "1686": {
      "fn": "CultureCoin.debug",
      "offset": [
        18809,
        18827
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1687": {
      "fn": "CultureCoin.debug",
      "offset": [
        18809,
        18827
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1688": {
      "fn": "CultureCoin.debug",
      "offset": [
        18809,
        18827
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x6A1"
    },
    "1692": {
      "fn": "CultureCoin.debug",
      "offset": [
        18809,
        18827
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1693": {
      "fn": "CultureCoin.debug",
      "offset": [
        18809,
        18827
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1695": {
      "fn": "CultureCoin.debug",
      "offset": [
        18809,
        18827
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1696": {
      "fn": "CultureCoin.debug",
      "offset": [
        18809,
        18827
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1697": {
      "fn": "CultureCoin.debug",
      "offset": [
        18809,
        18827
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1698": {
      "op": "POP"
    },
    "1699": {
      "offset": [
        18809,
        18827
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xEA"
    },
    "1701": {
      "fn": "CultureCoin.debug",
      "offset": [
        18809,
        18827
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1702": {
      "fn": "CultureCoin.debug",
      "offset": [
        18809,
        18827
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x3E5"
    },
    "1706": {
      "fn": "CultureCoin.debug",
      "offset": [
        18809,
        18827
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1707": {
      "fn": "CultureCoin.debug",
      "offset": [
        18809,
        18827
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x100"
    },
    "1710": {
      "fn": "CultureCoin.debug",
      "offset": [
        18809,
        18827
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1711": {
      "fn": "CultureCoin.debug",
      "offset": [
        18809,
        18827
      ],
      "op": "DIV",
      "path": "1"
    },
    "1712": {
      "fn": "CultureCoin.debug",
      "offset": [
        18809,
        18827
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "1714": {
      "fn": "CultureCoin.debug",
      "offset": [
        18809,
        18827
      ],
      "op": "AND",
      "path": "1"
    },
    "1715": {
      "fn": "CultureCoin.debug",
      "offset": [
        18809,
        18827
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1716": {
      "fn": "CultureCoin.debug",
      "offset": [
        18809,
        18827
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1717": {
      "fn": "CultureCoin.cloneAccount",
      "offset": [
        24355,
        24436
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1718": {
      "fn": "CultureCoin.cloneAccount",
      "offset": [
        24355,
        24436
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "1719": {
      "fn": "CultureCoin.cloneAccount",
      "offset": [
        24355,
        24436
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1720": {
      "fn": "CultureCoin.cloneAccount",
      "offset": [
        24355,
        24436
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1721": {
      "fn": "CultureCoin.cloneAccount",
      "offset": [
        24355,
        24436
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x6C2"
    },
    "1725": {
      "fn": "CultureCoin.cloneAccount",
      "offset": [
        24355,
        24436
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1726": {
      "fn": "CultureCoin.cloneAccount",
      "offset": [
        24355,
        24436
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1728": {
      "fn": "CultureCoin.cloneAccount",
      "offset": [
        24355,
        24436
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1729": {
      "fn": "CultureCoin.cloneAccount",
      "offset": [
        24355,
        24436
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1730": {
      "fn": "CultureCoin.cloneAccount",
      "offset": [
        24355,
        24436
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1731": {
      "fn": "CultureCoin.cloneAccount",
      "offset": [
        24355,
        24436
      ],
      "op": "POP",
      "path": "1"
    },
    "1732": {
      "fn": "CultureCoin.cloneAccount",
      "offset": [
        24355,
        24436
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x40E"
    },
    "1736": {
      "fn": "CultureCoin.cloneAccount",
      "offset": [
        24355,
        24436
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x12A3"
    },
    "1740": {
      "fn": "CultureCoin.cloneAccount",
      "jump": "i",
      "offset": [
        24355,
        24436
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1741": {
      "offset": [
        2396,
        2424
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1742": {
      "fn": "CultureCoin.cloneAccount",
      "offset": [
        2396,
        2424
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "1743": {
      "fn": "CultureCoin.cloneAccount",
      "offset": [
        2396,
        2424
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1744": {
      "fn": "CultureCoin.cloneAccount",
      "offset": [
        2396,
        2424
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1745": {
      "fn": "CultureCoin.cloneAccount",
      "offset": [
        2396,
        2424
      ],
      "op": "PUSH3",
      "path": "5",
      "value": "0x6DA"
    },
    "1749": {
      "fn": "CultureCoin.cloneAccount",
      "offset": [
        2396,
        2424
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1750": {
      "fn": "CultureCoin.cloneAccount",
      "offset": [
        2396,
        2424
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1752": {
      "fn": "CultureCoin.cloneAccount",
      "offset": [
        2396,
        2424
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1753": {
      "fn": "CultureCoin.cloneAccount",
      "offset": [
        2396,
        2424
      ],
      "op": "REVERT",
      "path": "5"
    },
    "1754": {
      "fn": "CultureCoin.cloneAccount",
      "offset": [
        2396,
        2424
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1755": {
      "fn": "CultureCoin.cloneAccount",
      "offset": [
        2396,
        2424
      ],
      "op": "POP",
      "path": "5"
    },
    "1756": {
      "fn": "CultureCoin.cloneAccount",
      "offset": [
        2396,
        2424
      ],
      "op": "PUSH3",
      "path": "5",
      "value": "0x454"
    },
    "1760": {
      "fn": "CultureCoin.cloneAccount",
      "offset": [
        2396,
        2424
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x99"
    },
    "1762": {
      "fn": "CultureCoin.cloneAccount",
      "offset": [
        2396,
        2424
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "1763": {
      "fn": "CultureCoin.cloneAccount",
      "offset": [
        2396,
        2424
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1764": {
      "fn": "CultureCoin.cloneAccount",
      "offset": [
        2396,
        2424
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1765": {
      "offset": [
        13970,
        13994
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1766": {
      "fn": "CultureCoin.cloneAccount",
      "offset": [
        13970,
        13994
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "1767": {
      "fn": "CultureCoin.cloneAccount",
      "offset": [
        13970,
        13994
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1768": {
      "fn": "CultureCoin.cloneAccount",
      "offset": [
        13970,
        13994
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1769": {
      "fn": "CultureCoin.cloneAccount",
      "offset": [
        13970,
        13994
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x6F2"
    },
    "1773": {
      "fn": "CultureCoin.cloneAccount",
      "offset": [
        13970,
        13994
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1774": {
      "fn": "CultureCoin.cloneAccount",
      "offset": [
        13970,
        13994
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1776": {
      "fn": "CultureCoin.cloneAccount",
      "offset": [
        13970,
        13994
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1777": {
      "fn": "CultureCoin.cloneAccount",
      "offset": [
        13970,
        13994
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1778": {
      "fn": "CultureCoin.cloneAccount",
      "offset": [
        13970,
        13994
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1779": {
      "fn": "CultureCoin.cloneAccount",
      "offset": [
        13970,
        13994
      ],
      "op": "POP",
      "path": "1"
    },
    "1780": {
      "fn": "CultureCoin.cloneAccount",
      "offset": [
        13970,
        13994
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x454"
    },
    "1784": {
      "fn": "CultureCoin.cloneAccount",
      "offset": [
        13970,
        13994
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xE3"
    },
    "1786": {
      "fn": "CultureCoin.cloneAccount",
      "offset": [
        13970,
        13994
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1787": {
      "fn": "CultureCoin.cloneAccount",
      "offset": [
        13970,
        13994
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1788": {
      "fn": "CultureCoin.cloneAccount",
      "offset": [
        13970,
        13994
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1789": {
      "fn": "CultureCoin.unbrick",
      "offset": [
        31269,
        31651
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1790": {
      "fn": "CultureCoin.unbrick",
      "offset": [
        31269,
        31651
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "1791": {
      "fn": "CultureCoin.unbrick",
      "offset": [
        31269,
        31651
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1792": {
      "fn": "CultureCoin.unbrick",
      "offset": [
        31269,
        31651
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1793": {
      "fn": "CultureCoin.unbrick",
      "offset": [
        31269,
        31651
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x70A"
    },
    "1797": {
      "fn": "CultureCoin.unbrick",
      "offset": [
        31269,
        31651
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1798": {
      "fn": "CultureCoin.unbrick",
      "offset": [
        31269,
        31651
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1800": {
      "fn": "CultureCoin.unbrick",
      "offset": [
        31269,
        31651
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1801": {
      "fn": "CultureCoin.unbrick",
      "offset": [
        31269,
        31651
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1802": {
      "fn": "CultureCoin.unbrick",
      "offset": [
        31269,
        31651
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1803": {
      "fn": "CultureCoin.unbrick",
      "offset": [
        31269,
        31651
      ],
      "op": "POP",
      "path": "1"
    },
    "1804": {
      "fn": "CultureCoin.unbrick",
      "offset": [
        31269,
        31651
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x46D"
    },
    "1808": {
      "fn": "CultureCoin.unbrick",
      "offset": [
        31269,
        31651
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x12AF"
    },
    "1812": {
      "fn": "CultureCoin.unbrick",
      "jump": "i",
      "offset": [
        31269,
        31651
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1813": {
      "fn": "CultureCoin.setAddon",
      "offset": [
        14265,
        14410
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1814": {
      "fn": "CultureCoin.setAddon",
      "offset": [
        14265,
        14410
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "1815": {
      "fn": "CultureCoin.setAddon",
      "offset": [
        14265,
        14410
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1816": {
      "fn": "CultureCoin.setAddon",
      "offset": [
        14265,
        14410
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1817": {
      "fn": "CultureCoin.setAddon",
      "offset": [
        14265,
        14410
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x722"
    },
    "1821": {
      "fn": "CultureCoin.setAddon",
      "offset": [
        14265,
        14410
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1822": {
      "fn": "CultureCoin.setAddon",
      "offset": [
        14265,
        14410
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1824": {
      "fn": "CultureCoin.setAddon",
      "offset": [
        14265,
        14410
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1825": {
      "fn": "CultureCoin.setAddon",
      "offset": [
        14265,
        14410
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1826": {
      "fn": "CultureCoin.setAddon",
      "offset": [
        14265,
        14410
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1827": {
      "op": "POP"
    },
    "1828": {
      "fn": "CultureCoin.setAddon",
      "offset": [
        14265,
        14410
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x46D"
    },
    "1832": {
      "fn": "CultureCoin.setAddon",
      "offset": [
        14265,
        14410
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x734"
    },
    "1836": {
      "fn": "CultureCoin.setAddon",
      "offset": [
        14265,
        14410
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "1837": {
      "fn": "CultureCoin.setAddon",
      "offset": [
        14265,
        14410
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1839": {
      "fn": "CultureCoin.setAddon",
      "offset": [
        14265,
        14410
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x3601"
    },
    "1843": {
      "fn": "CultureCoin.setAddon",
      "jump": "i",
      "offset": [
        14265,
        14410
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1844": {
      "fn": "CultureCoin.setAddon",
      "offset": [
        14265,
        14410
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1845": {
      "fn": "CultureCoin.setAddon",
      "offset": [
        14265,
        14410
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x1474"
    },
    "1849": {
      "fn": "CultureCoin.setAddon",
      "jump": "i",
      "offset": [
        14265,
        14410
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1850": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3745,
        3870
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1851": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3745,
        3870
      ],
      "op": "CALLVALUE",
      "path": "15"
    },
    "1852": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3745,
        3870
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1853": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3745,
        3870
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "1854": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3745,
        3870
      ],
      "op": "PUSH3",
      "path": "15",
      "value": "0x747"
    },
    "1858": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3745,
        3870
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "1859": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3745,
        3870
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "1861": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3745,
        3870
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1862": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3745,
        3870
      ],
      "op": "REVERT",
      "path": "15"
    },
    "1863": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3745,
        3870
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1864": {
      "op": "POP"
    },
    "1865": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3745,
        3870
      ],
      "op": "PUSH3",
      "path": "15",
      "value": "0x454"
    },
    "1869": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3745,
        3870
      ],
      "op": "PUSH3",
      "path": "15",
      "value": "0x759"
    },
    "1873": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3745,
        3870
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "1874": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3745,
        3870
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "1876": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3745,
        3870
      ],
      "op": "PUSH3",
      "path": "15",
      "value": "0x3420"
    },
    "1880": {
      "fn": "ERC20Upgradeable.balanceOf",
      "jump": "i",
      "offset": [
        3745,
        3870
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1881": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3745,
        3870
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1882": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1884": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1886": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1888": {
      "op": "SHL"
    },
    "1889": {
      "op": "SUB"
    },
    "1890": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "AND",
      "path": "15",
      "statement": 3
    },
    "1891": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3819,
        3826
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "1893": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1894": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1895": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1896": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3854
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x33"
    },
    "1898": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "1900": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1901": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "1903": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1904": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "1905": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "1906": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3845,
        3863
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1907": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3745,
        3870
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1908": {
      "offset": [
        24995,
        25028
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1909": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        24995,
        25028
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "1910": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        24995,
        25028
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1911": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        24995,
        25028
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1912": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        24995,
        25028
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x781"
    },
    "1916": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        24995,
        25028
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1917": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        24995,
        25028
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1919": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        24995,
        25028
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1920": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        24995,
        25028
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1921": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        24995,
        25028
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1922": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        24995,
        25028
      ],
      "op": "POP",
      "path": "1"
    },
    "1923": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        24995,
        25028
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x454"
    },
    "1927": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        24995,
        25028
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xEC"
    },
    "1929": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        24995,
        25028
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1930": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        24995,
        25028
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1931": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        24995,
        25028
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1932": {
      "offset": [
        13937,
        13964
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1933": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        13937,
        13964
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "1934": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        13937,
        13964
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1935": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        13937,
        13964
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1936": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        13937,
        13964
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x799"
    },
    "1940": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        13937,
        13964
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1941": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        13937,
        13964
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1943": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        13937,
        13964
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1944": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        13937,
        13964
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1945": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        13937,
        13964
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1946": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        13937,
        13964
      ],
      "op": "POP",
      "path": "1"
    },
    "1947": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        13937,
        13964
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x454"
    },
    "1951": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        13937,
        13964
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xE2"
    },
    "1953": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        13937,
        13964
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1954": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        13937,
        13964
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1955": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        13937,
        13964
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1956": {
      "fn": "ERC20BurnableUpgradeable.burnFrom",
      "offset": [
        1243,
        1404
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1957": {
      "fn": "ERC20BurnableUpgradeable.burnFrom",
      "offset": [
        1243,
        1404
      ],
      "op": "CALLVALUE",
      "path": "17"
    },
    "1958": {
      "fn": "ERC20BurnableUpgradeable.burnFrom",
      "offset": [
        1243,
        1404
      ],
      "op": "DUP1",
      "path": "17"
    },
    "1959": {
      "fn": "ERC20BurnableUpgradeable.burnFrom",
      "offset": [
        1243,
        1404
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "1960": {
      "fn": "ERC20BurnableUpgradeable.burnFrom",
      "offset": [
        1243,
        1404
      ],
      "op": "PUSH3",
      "path": "17",
      "value": "0x7B1"
    },
    "1964": {
      "fn": "ERC20BurnableUpgradeable.burnFrom",
      "offset": [
        1243,
        1404
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "1965": {
      "fn": "ERC20BurnableUpgradeable.burnFrom",
      "offset": [
        1243,
        1404
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "1967": {
      "fn": "ERC20BurnableUpgradeable.burnFrom",
      "offset": [
        1243,
        1404
      ],
      "op": "DUP1",
      "path": "17"
    },
    "1968": {
      "fn": "ERC20BurnableUpgradeable.burnFrom",
      "offset": [
        1243,
        1404
      ],
      "op": "REVERT",
      "path": "17"
    },
    "1969": {
      "fn": "ERC20BurnableUpgradeable.burnFrom",
      "offset": [
        1243,
        1404
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1970": {
      "op": "POP"
    },
    "1971": {
      "fn": "ERC20BurnableUpgradeable.burnFrom",
      "offset": [
        1243,
        1404
      ],
      "op": "PUSH3",
      "path": "17",
      "value": "0x46D"
    },
    "1975": {
      "fn": "ERC20BurnableUpgradeable.burnFrom",
      "offset": [
        1243,
        1404
      ],
      "op": "PUSH3",
      "path": "17",
      "value": "0x7C3"
    },
    "1979": {
      "fn": "ERC20BurnableUpgradeable.burnFrom",
      "offset": [
        1243,
        1404
      ],
      "op": "CALLDATASIZE",
      "path": "17"
    },
    "1980": {
      "fn": "ERC20BurnableUpgradeable.burnFrom",
      "offset": [
        1243,
        1404
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "1982": {
      "fn": "ERC20BurnableUpgradeable.burnFrom",
      "offset": [
        1243,
        1404
      ],
      "op": "PUSH3",
      "path": "17",
      "value": "0x33DF"
    },
    "1986": {
      "fn": "ERC20BurnableUpgradeable.burnFrom",
      "jump": "i",
      "offset": [
        1243,
        1404
      ],
      "op": "JUMP",
      "path": "17"
    },
    "1987": {
      "fn": "ERC20BurnableUpgradeable.burnFrom",
      "offset": [
        1243,
        1404
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1988": {
      "fn": "ERC20BurnableUpgradeable.burnFrom",
      "offset": [
        1243,
        1404
      ],
      "op": "PUSH3",
      "path": "17",
      "value": "0x14E9"
    },
    "1992": {
      "fn": "ERC20BurnableUpgradeable.burnFrom",
      "jump": "i",
      "offset": [
        1243,
        1404
      ],
      "op": "JUMP",
      "path": "17"
    },
    "1993": {
      "fn": "CultureCoin.getAddon",
      "offset": [
        14159,
        14260
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1994": {
      "fn": "CultureCoin.getAddon",
      "offset": [
        14159,
        14260
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "1995": {
      "fn": "CultureCoin.getAddon",
      "offset": [
        14159,
        14260
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1996": {
      "fn": "CultureCoin.getAddon",
      "offset": [
        14159,
        14260
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1997": {
      "fn": "CultureCoin.getAddon",
      "offset": [
        14159,
        14260
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x7D6"
    },
    "2001": {
      "fn": "CultureCoin.getAddon",
      "offset": [
        14159,
        14260
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2002": {
      "fn": "CultureCoin.getAddon",
      "offset": [
        14159,
        14260
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2004": {
      "fn": "CultureCoin.getAddon",
      "offset": [
        14159,
        14260
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2005": {
      "fn": "CultureCoin.getAddon",
      "offset": [
        14159,
        14260
      ],
      "op": "REVERT",
      "path": "1"
    },
    "2006": {
      "fn": "CultureCoin.getAddon",
      "offset": [
        14159,
        14260
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2007": {
      "op": "POP"
    },
    "2008": {
      "fn": "CultureCoin.getAddon",
      "offset": [
        14159,
        14260
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x3E5"
    },
    "2012": {
      "fn": "CultureCoin.getAddon",
      "offset": [
        14159,
        14260
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x7E8"
    },
    "2016": {
      "fn": "CultureCoin.getAddon",
      "offset": [
        14159,
        14260
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "2017": {
      "fn": "CultureCoin.getAddon",
      "offset": [
        14159,
        14260
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2019": {
      "fn": "CultureCoin.getAddon",
      "offset": [
        14159,
        14260
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x3420"
    },
    "2023": {
      "fn": "CultureCoin.getAddon",
      "jump": "i",
      "offset": [
        14159,
        14260
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2024": {
      "fn": "CultureCoin.getAddon",
      "offset": [
        14159,
        14260
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2025": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2027": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2029": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2031": {
      "op": "SHL"
    },
    "2032": {
      "op": "SUB"
    },
    "2033": {
      "fn": "CultureCoin.getAddon",
      "offset": [
        14238,
        14252
      ],
      "op": "AND",
      "path": "1",
      "statement": 4
    },
    "2034": {
      "fn": "CultureCoin.getAddon",
      "offset": [
        14215,
        14219
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2036": {
      "fn": "CultureCoin.getAddon",
      "offset": [
        14238,
        14252
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2037": {
      "fn": "CultureCoin.getAddon",
      "offset": [
        14238,
        14252
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2038": {
      "fn": "CultureCoin.getAddon",
      "offset": [
        14238,
        14252
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2039": {
      "fn": "CultureCoin.getAddon",
      "offset": [
        14238,
        14244
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xE8"
    },
    "2041": {
      "fn": "CultureCoin.getAddon",
      "offset": [
        14238,
        14252
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2043": {
      "fn": "CultureCoin.getAddon",
      "offset": [
        14238,
        14252
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2044": {
      "fn": "CultureCoin.getAddon",
      "offset": [
        14238,
        14252
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2046": {
      "fn": "CultureCoin.getAddon",
      "offset": [
        14238,
        14252
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2047": {
      "fn": "CultureCoin.getAddon",
      "offset": [
        14238,
        14252
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "2048": {
      "fn": "CultureCoin.getAddon",
      "offset": [
        14238,
        14252
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2049": {
      "fn": "CultureCoin.getAddon",
      "offset": [
        14238,
        14252
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "2051": {
      "fn": "CultureCoin.getAddon",
      "offset": [
        14238,
        14252
      ],
      "op": "AND",
      "path": "1"
    },
    "2052": {
      "fn": "CultureCoin.getAddon",
      "offset": [
        14238,
        14252
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2053": {
      "fn": "CultureCoin.getAddon",
      "offset": [
        14159,
        14260
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2054": {
      "fn": "CultureCoin.setRewardPerHour",
      "offset": [
        4842,
        4998
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2055": {
      "fn": "CultureCoin.setRewardPerHour",
      "offset": [
        4842,
        4998
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "2056": {
      "fn": "CultureCoin.setRewardPerHour",
      "offset": [
        4842,
        4998
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2057": {
      "fn": "CultureCoin.setRewardPerHour",
      "offset": [
        4842,
        4998
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2058": {
      "fn": "CultureCoin.setRewardPerHour",
      "offset": [
        4842,
        4998
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x813"
    },
    "2062": {
      "fn": "CultureCoin.setRewardPerHour",
      "offset": [
        4842,
        4998
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2063": {
      "fn": "CultureCoin.setRewardPerHour",
      "offset": [
        4842,
        4998
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2065": {
      "fn": "CultureCoin.setRewardPerHour",
      "offset": [
        4842,
        4998
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2066": {
      "fn": "CultureCoin.setRewardPerHour",
      "offset": [
        4842,
        4998
      ],
      "op": "REVERT",
      "path": "1"
    },
    "2067": {
      "fn": "CultureCoin.setRewardPerHour",
      "offset": [
        4842,
        4998
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2068": {
      "op": "POP"
    },
    "2069": {
      "fn": "CultureCoin.setRewardPerHour",
      "offset": [
        4842,
        4998
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x46D"
    },
    "2073": {
      "fn": "CultureCoin.setRewardPerHour",
      "offset": [
        4842,
        4998
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x825"
    },
    "2077": {
      "fn": "CultureCoin.setRewardPerHour",
      "offset": [
        4842,
        4998
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "2078": {
      "fn": "CultureCoin.setRewardPerHour",
      "offset": [
        4842,
        4998
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2080": {
      "fn": "CultureCoin.setRewardPerHour",
      "offset": [
        4842,
        4998
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x35D6"
    },
    "2084": {
      "fn": "CultureCoin.setRewardPerHour",
      "jump": "i",
      "offset": [
        4842,
        4998
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2085": {
      "fn": "CultureCoin.setRewardPerHour",
      "offset": [
        4842,
        4998
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2086": {
      "fn": "CultureCoin.setRewardPerHour",
      "offset": [
        4842,
        4998
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x1506"
    },
    "2090": {
      "fn": "CultureCoin.setRewardPerHour",
      "jump": "i",
      "offset": [
        4842,
        4998
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2091": {
      "fn": "CultureCoin.P",
      "offset": [
        34771,
        34910
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2092": {
      "fn": "CultureCoin.P",
      "offset": [
        34771,
        34910
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "2093": {
      "fn": "CultureCoin.P",
      "offset": [
        34771,
        34910
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2094": {
      "fn": "CultureCoin.P",
      "offset": [
        34771,
        34910
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2095": {
      "fn": "CultureCoin.P",
      "offset": [
        34771,
        34910
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x838"
    },
    "2099": {
      "fn": "CultureCoin.P",
      "offset": [
        34771,
        34910
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2100": {
      "fn": "CultureCoin.P",
      "offset": [
        34771,
        34910
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2102": {
      "fn": "CultureCoin.P",
      "offset": [
        34771,
        34910
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2103": {
      "fn": "CultureCoin.P",
      "offset": [
        34771,
        34910
      ],
      "op": "REVERT",
      "path": "1"
    },
    "2104": {
      "fn": "CultureCoin.P",
      "offset": [
        34771,
        34910
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2105": {
      "op": "POP"
    },
    "2106": {
      "fn": "CultureCoin.P",
      "offset": [
        34902,
        34903
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 5,
      "value": "0xCE"
    },
    "2108": {
      "fn": "CultureCoin.P",
      "offset": [
        34902,
        34903
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2109": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2111": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2113": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2115": {
      "op": "SHL"
    },
    "2116": {
      "op": "SUB"
    },
    "2117": {
      "fn": "CultureCoin.P",
      "offset": [
        34902,
        34903
      ],
      "op": "AND",
      "path": "1"
    },
    "2118": {
      "fn": "CultureCoin.P",
      "offset": [
        34771,
        34910
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x40E"
    },
    "2122": {
      "fn": "CultureCoin.P",
      "offset": [
        34771,
        34910
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2123": {
      "fn": "CultureCoin.dexXMTSPIn",
      "offset": [
        15943,
        16418
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2124": {
      "fn": "CultureCoin.dexXMTSPIn",
      "offset": [
        15943,
        16418
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x454"
    },
    "2128": {
      "fn": "CultureCoin.dexXMTSPIn",
      "offset": [
        15943,
        16418
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x1554"
    },
    "2132": {
      "fn": "CultureCoin.dexXMTSPIn",
      "jump": "i",
      "offset": [
        15943,
        16418
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2133": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2704,
        2806
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2134": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2704,
        2806
      ],
      "op": "CALLVALUE",
      "path": "15"
    },
    "2135": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2704,
        2806
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2136": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2704,
        2806
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "2137": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2704,
        2806
      ],
      "op": "PUSH3",
      "path": "15",
      "value": "0x862"
    },
    "2141": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2704,
        2806
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "2142": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2704,
        2806
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "2144": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2704,
        2806
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2145": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2704,
        2806
      ],
      "op": "REVERT",
      "path": "15"
    },
    "2146": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2704,
        2806
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2147": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2704,
        2806
      ],
      "op": "POP",
      "path": "15"
    },
    "2148": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2704,
        2806
      ],
      "op": "PUSH3",
      "path": "15",
      "value": "0x3A8"
    },
    "2152": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2704,
        2806
      ],
      "op": "PUSH3",
      "path": "15",
      "value": "0x166C"
    },
    "2156": {
      "fn": "ERC20Upgradeable.symbol",
      "jump": "i",
      "offset": [
        2704,
        2806
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2157": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        14461,
        15303
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2158": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        14461,
        15303
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "2159": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        14461,
        15303
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2160": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        14461,
        15303
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2161": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        14461,
        15303
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x87A"
    },
    "2165": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        14461,
        15303
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2166": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        14461,
        15303
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2168": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        14461,
        15303
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2169": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        14461,
        15303
      ],
      "op": "REVERT",
      "path": "1"
    },
    "2170": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        14461,
        15303
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2171": {
      "op": "POP"
    },
    "2172": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        14461,
        15303
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x454"
    },
    "2176": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        14461,
        15303
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x88C"
    },
    "2180": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        14461,
        15303
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "2181": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        14461,
        15303
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2183": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        14461,
        15303
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x33DF"
    },
    "2187": {
      "fn": "CultureCoin.dexCCInFrom",
      "jump": "i",
      "offset": [
        14461,
        15303
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2188": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        14461,
        15303
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2189": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        14461,
        15303
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x167D"
    },
    "2193": {
      "fn": "CultureCoin.dexCCInFrom",
      "jump": "i",
      "offset": [
        14461,
        15303
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2194": {
      "fn": "CultureCoin.flagMemeCoin",
      "offset": [
        21330,
        21520
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2195": {
      "fn": "CultureCoin.flagMemeCoin",
      "offset": [
        21330,
        21520
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "2196": {
      "fn": "CultureCoin.flagMemeCoin",
      "offset": [
        21330,
        21520
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2197": {
      "fn": "CultureCoin.flagMemeCoin",
      "offset": [
        21330,
        21520
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2198": {
      "fn": "CultureCoin.flagMemeCoin",
      "offset": [
        21330,
        21520
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x89F"
    },
    "2202": {
      "fn": "CultureCoin.flagMemeCoin",
      "offset": [
        21330,
        21520
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2203": {
      "fn": "CultureCoin.flagMemeCoin",
      "offset": [
        21330,
        21520
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2205": {
      "fn": "CultureCoin.flagMemeCoin",
      "offset": [
        21330,
        21520
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2206": {
      "fn": "CultureCoin.flagMemeCoin",
      "offset": [
        21330,
        21520
      ],
      "op": "REVERT",
      "path": "1"
    },
    "2207": {
      "fn": "CultureCoin.flagMemeCoin",
      "offset": [
        21330,
        21520
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2208": {
      "op": "POP"
    },
    "2209": {
      "fn": "CultureCoin.flagMemeCoin",
      "offset": [
        21330,
        21520
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x46D"
    },
    "2213": {
      "fn": "CultureCoin.flagMemeCoin",
      "offset": [
        21330,
        21520
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x8B1"
    },
    "2217": {
      "fn": "CultureCoin.flagMemeCoin",
      "offset": [
        21330,
        21520
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "2218": {
      "fn": "CultureCoin.flagMemeCoin",
      "offset": [
        21330,
        21520
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2220": {
      "fn": "CultureCoin.flagMemeCoin",
      "offset": [
        21330,
        21520
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x34E9"
    },
    "2224": {
      "fn": "CultureCoin.flagMemeCoin",
      "jump": "i",
      "offset": [
        21330,
        21520
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2225": {
      "fn": "CultureCoin.flagMemeCoin",
      "offset": [
        21330,
        21520
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2226": {
      "fn": "CultureCoin.flagMemeCoin",
      "offset": [
        21330,
        21520
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x18DD"
    },
    "2230": {
      "fn": "CultureCoin.flagMemeCoin",
      "jump": "i",
      "offset": [
        21330,
        21520
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2231": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6931,
        7358
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2232": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6931,
        7358
      ],
      "op": "CALLVALUE",
      "path": "15"
    },
    "2233": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6931,
        7358
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2234": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6931,
        7358
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "2235": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6931,
        7358
      ],
      "op": "PUSH3",
      "path": "15",
      "value": "0x8C4"
    },
    "2239": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6931,
        7358
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "2240": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6931,
        7358
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "2242": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6931,
        7358
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2243": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6931,
        7358
      ],
      "op": "REVERT",
      "path": "15"
    },
    "2244": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6931,
        7358
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2245": {
      "op": "POP"
    },
    "2246": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6931,
        7358
      ],
      "op": "PUSH3",
      "path": "15",
      "value": "0x3E5"
    },
    "2250": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6931,
        7358
      ],
      "op": "PUSH3",
      "path": "15",
      "value": "0x8D6"
    },
    "2254": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6931,
        7358
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "2255": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6931,
        7358
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "2257": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6931,
        7358
      ],
      "op": "PUSH3",
      "path": "15",
      "value": "0x33DF"
    },
    "2261": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "jump": "i",
      "offset": [
        6931,
        7358
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2262": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6931,
        7358
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2263": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6931,
        7358
      ],
      "op": "PUSH3",
      "path": "15",
      "value": "0x1996"
    },
    "2267": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "jump": "i",
      "offset": [
        6931,
        7358
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2268": {
      "fn": "CultureCoin.stake",
      "offset": [
        5291,
        5736
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2269": {
      "fn": "CultureCoin.stake",
      "offset": [
        5291,
        5736
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "2270": {
      "fn": "CultureCoin.stake",
      "offset": [
        5291,
        5736
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2271": {
      "fn": "CultureCoin.stake",
      "offset": [
        5291,
        5736
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2272": {
      "fn": "CultureCoin.stake",
      "offset": [
        5291,
        5736
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x8E9"
    },
    "2276": {
      "fn": "CultureCoin.stake",
      "offset": [
        5291,
        5736
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2277": {
      "fn": "CultureCoin.stake",
      "offset": [
        5291,
        5736
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2279": {
      "fn": "CultureCoin.stake",
      "offset": [
        5291,
        5736
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2280": {
      "fn": "CultureCoin.stake",
      "offset": [
        5291,
        5736
      ],
      "op": "REVERT",
      "path": "1"
    },
    "2281": {
      "fn": "CultureCoin.stake",
      "offset": [
        5291,
        5736
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2282": {
      "op": "POP"
    },
    "2283": {
      "fn": "CultureCoin.stake",
      "offset": [
        5291,
        5736
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x46D"
    },
    "2287": {
      "fn": "CultureCoin.stake",
      "offset": [
        5291,
        5736
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x8FB"
    },
    "2291": {
      "fn": "CultureCoin.stake",
      "offset": [
        5291,
        5736
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "2292": {
      "fn": "CultureCoin.stake",
      "offset": [
        5291,
        5736
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2294": {
      "fn": "CultureCoin.stake",
      "offset": [
        5291,
        5736
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x35D6"
    },
    "2298": {
      "fn": "CultureCoin.stake",
      "jump": "i",
      "offset": [
        5291,
        5736
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2299": {
      "fn": "CultureCoin.stake",
      "offset": [
        5291,
        5736
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2300": {
      "fn": "CultureCoin.stake",
      "offset": [
        5291,
        5736
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x1A17"
    },
    "2304": {
      "fn": "CultureCoin.stake",
      "jump": "i",
      "offset": [
        5291,
        5736
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2305": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4066,
        4255
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2306": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4066,
        4255
      ],
      "op": "CALLVALUE",
      "path": "15"
    },
    "2307": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4066,
        4255
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2308": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4066,
        4255
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "2309": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4066,
        4255
      ],
      "op": "PUSH3",
      "path": "15",
      "value": "0x90E"
    },
    "2313": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4066,
        4255
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "2314": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4066,
        4255
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "2316": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4066,
        4255
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2317": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4066,
        4255
      ],
      "op": "REVERT",
      "path": "15"
    },
    "2318": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4066,
        4255
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2319": {
      "op": "POP"
    },
    "2320": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4066,
        4255
      ],
      "op": "PUSH3",
      "path": "15",
      "value": "0x3E5"
    },
    "2324": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4066,
        4255
      ],
      "op": "PUSH3",
      "path": "15",
      "value": "0x920"
    },
    "2328": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4066,
        4255
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "2329": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4066,
        4255
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "2331": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4066,
        4255
      ],
      "op": "PUSH3",
      "path": "15",
      "value": "0x33DF"
    },
    "2335": {
      "fn": "ERC20Upgradeable.transfer",
      "jump": "i",
      "offset": [
        4066,
        4255
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2336": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4066,
        4255
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2337": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4066,
        4255
      ],
      "op": "PUSH3",
      "path": "15",
      "value": "0x1B3C"
    },
    "2341": {
      "fn": "ERC20Upgradeable.transfer",
      "jump": "i",
      "offset": [
        4066,
        4255
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2342": {
      "fn": "CultureCoin.setDexCCRate",
      "offset": [
        16564,
        16688
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2343": {
      "fn": "CultureCoin.setDexCCRate",
      "offset": [
        16564,
        16688
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "2344": {
      "fn": "CultureCoin.setDexCCRate",
      "offset": [
        16564,
        16688
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2345": {
      "fn": "CultureCoin.setDexCCRate",
      "offset": [
        16564,
        16688
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2346": {
      "fn": "CultureCoin.setDexCCRate",
      "offset": [
        16564,
        16688
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x933"
    },
    "2350": {
      "fn": "CultureCoin.setDexCCRate",
      "offset": [
        16564,
        16688
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2351": {
      "fn": "CultureCoin.setDexCCRate",
      "offset": [
        16564,
        16688
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2353": {
      "fn": "CultureCoin.setDexCCRate",
      "offset": [
        16564,
        16688
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2354": {
      "fn": "CultureCoin.setDexCCRate",
      "offset": [
        16564,
        16688
      ],
      "op": "REVERT",
      "path": "1"
    },
    "2355": {
      "fn": "CultureCoin.setDexCCRate",
      "offset": [
        16564,
        16688
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2356": {
      "op": "POP"
    },
    "2357": {
      "fn": "CultureCoin.setDexCCRate",
      "offset": [
        16564,
        16688
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x46D"
    },
    "2361": {
      "fn": "CultureCoin.setDexCCRate",
      "offset": [
        16564,
        16688
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x945"
    },
    "2365": {
      "fn": "CultureCoin.setDexCCRate",
      "offset": [
        16564,
        16688
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "2366": {
      "fn": "CultureCoin.setDexCCRate",
      "offset": [
        16564,
        16688
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2368": {
      "fn": "CultureCoin.setDexCCRate",
      "offset": [
        16564,
        16688
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x35D6"
    },
    "2372": {
      "fn": "CultureCoin.setDexCCRate",
      "jump": "i",
      "offset": [
        16564,
        16688
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2373": {
      "fn": "CultureCoin.setDexCCRate",
      "offset": [
        16564,
        16688
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2374": {
      "fn": "CultureCoin.setDexCCRate",
      "offset": [
        16564,
        16688
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x1B4C"
    },
    "2378": {
      "fn": "CultureCoin.setDexCCRate",
      "jump": "i",
      "offset": [
        16564,
        16688
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2379": {
      "fn": "CultureCoin.sane",
      "offset": [
        25034,
        25834
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2380": {
      "fn": "CultureCoin.sane",
      "offset": [
        25034,
        25834
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x46D"
    },
    "2384": {
      "fn": "CultureCoin.sane",
      "offset": [
        25034,
        25834
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x1B69"
    },
    "2388": {
      "fn": "CultureCoin.sane",
      "jump": "i",
      "offset": [
        25034,
        25834
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2389": {
      "fn": "CultureCoin.seed",
      "offset": [
        18120,
        18781
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2390": {
      "fn": "CultureCoin.seed",
      "offset": [
        18120,
        18781
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "2391": {
      "fn": "CultureCoin.seed",
      "offset": [
        18120,
        18781
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2392": {
      "fn": "CultureCoin.seed",
      "offset": [
        18120,
        18781
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2393": {
      "fn": "CultureCoin.seed",
      "offset": [
        18120,
        18781
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x962"
    },
    "2397": {
      "fn": "CultureCoin.seed",
      "offset": [
        18120,
        18781
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2398": {
      "fn": "CultureCoin.seed",
      "offset": [
        18120,
        18781
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2400": {
      "fn": "CultureCoin.seed",
      "offset": [
        18120,
        18781
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2401": {
      "fn": "CultureCoin.seed",
      "offset": [
        18120,
        18781
      ],
      "op": "REVERT",
      "path": "1"
    },
    "2402": {
      "fn": "CultureCoin.seed",
      "offset": [
        18120,
        18781
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2403": {
      "op": "POP"
    },
    "2404": {
      "fn": "CultureCoin.seed",
      "offset": [
        18120,
        18781
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x40E"
    },
    "2408": {
      "fn": "CultureCoin.seed",
      "offset": [
        18120,
        18781
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x974"
    },
    "2412": {
      "fn": "CultureCoin.seed",
      "offset": [
        18120,
        18781
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "2413": {
      "fn": "CultureCoin.seed",
      "offset": [
        18120,
        18781
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2415": {
      "fn": "CultureCoin.seed",
      "offset": [
        18120,
        18781
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x3639"
    },
    "2419": {
      "fn": "CultureCoin.seed",
      "jump": "i",
      "offset": [
        18120,
        18781
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2420": {
      "fn": "CultureCoin.seed",
      "offset": [
        18120,
        18781
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2421": {
      "fn": "CultureCoin.seed",
      "offset": [
        18120,
        18781
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x1D6C"
    },
    "2425": {
      "fn": "CultureCoin.seed",
      "jump": "i",
      "offset": [
        18120,
        18781
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2426": {
      "fn": "CultureCoin.compareStrings",
      "offset": [
        32767,
        32938
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2427": {
      "fn": "CultureCoin.compareStrings",
      "offset": [
        32767,
        32938
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "2428": {
      "fn": "CultureCoin.compareStrings",
      "offset": [
        32767,
        32938
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2429": {
      "fn": "CultureCoin.compareStrings",
      "offset": [
        32767,
        32938
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2430": {
      "fn": "CultureCoin.compareStrings",
      "offset": [
        32767,
        32938
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x987"
    },
    "2434": {
      "fn": "CultureCoin.compareStrings",
      "offset": [
        32767,
        32938
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2435": {
      "fn": "CultureCoin.compareStrings",
      "offset": [
        32767,
        32938
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2437": {
      "fn": "CultureCoin.compareStrings",
      "offset": [
        32767,
        32938
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2438": {
      "fn": "CultureCoin.compareStrings",
      "offset": [
        32767,
        32938
      ],
      "op": "REVERT",
      "path": "1"
    },
    "2439": {
      "fn": "CultureCoin.compareStrings",
      "offset": [
        32767,
        32938
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2440": {
      "op": "POP"
    },
    "2441": {
      "fn": "CultureCoin.compareStrings",
      "offset": [
        32767,
        32938
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x3E5"
    },
    "2445": {
      "fn": "CultureCoin.compareStrings",
      "offset": [
        32767,
        32938
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x999"
    },
    "2449": {
      "fn": "CultureCoin.compareStrings",
      "offset": [
        32767,
        32938
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "2450": {
      "fn": "CultureCoin.compareStrings",
      "offset": [
        32767,
        32938
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2452": {
      "fn": "CultureCoin.compareStrings",
      "offset": [
        32767,
        32938
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x356B"
    },
    "2456": {
      "fn": "CultureCoin.compareStrings",
      "jump": "i",
      "offset": [
        32767,
        32938
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2457": {
      "fn": "CultureCoin.compareStrings",
      "offset": [
        32767,
        32938
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2458": {
      "fn": "CultureCoin.compareStrings",
      "offset": [
        32767,
        32938
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x1EB7"
    },
    "2462": {
      "fn": "CultureCoin.compareStrings",
      "jump": "i",
      "offset": [
        32767,
        32938
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2463": {
      "fn": "CultureCoin.sane2",
      "offset": [
        25839,
        26730
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2464": {
      "fn": "CultureCoin.sane2",
      "offset": [
        25839,
        26730
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x46D"
    },
    "2468": {
      "fn": "CultureCoin.sane2",
      "offset": [
        25839,
        26730
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x1F14"
    },
    "2472": {
      "fn": "CultureCoin.sane2",
      "jump": "i",
      "offset": [
        25839,
        26730
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2473": {
      "fn": "CultureCoin.initialize",
      "offset": [
        2733,
        4670
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2474": {
      "fn": "CultureCoin.initialize",
      "offset": [
        2733,
        4670
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "2475": {
      "fn": "CultureCoin.initialize",
      "offset": [
        2733,
        4670
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2476": {
      "fn": "CultureCoin.initialize",
      "offset": [
        2733,
        4670
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2477": {
      "fn": "CultureCoin.initialize",
      "offset": [
        2733,
        4670
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x9B6"
    },
    "2481": {
      "fn": "CultureCoin.initialize",
      "offset": [
        2733,
        4670
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2482": {
      "fn": "CultureCoin.initialize",
      "offset": [
        2733,
        4670
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2484": {
      "fn": "CultureCoin.initialize",
      "offset": [
        2733,
        4670
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2485": {
      "fn": "CultureCoin.initialize",
      "offset": [
        2733,
        4670
      ],
      "op": "REVERT",
      "path": "1"
    },
    "2486": {
      "fn": "CultureCoin.initialize",
      "offset": [
        2733,
        4670
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2487": {
      "op": "POP"
    },
    "2488": {
      "fn": "CultureCoin.initialize",
      "offset": [
        2733,
        4670
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x46D"
    },
    "2492": {
      "fn": "CultureCoin.initialize",
      "offset": [
        2733,
        4670
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x9C8"
    },
    "2496": {
      "fn": "CultureCoin.initialize",
      "offset": [
        2733,
        4670
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "2497": {
      "fn": "CultureCoin.initialize",
      "offset": [
        2733,
        4670
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2499": {
      "fn": "CultureCoin.initialize",
      "offset": [
        2733,
        4670
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x36A9"
    },
    "2503": {
      "fn": "CultureCoin.initialize",
      "jump": "i",
      "offset": [
        2733,
        4670
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2504": {
      "fn": "CultureCoin.initialize",
      "offset": [
        2733,
        4670
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2505": {
      "fn": "CultureCoin.initialize",
      "offset": [
        2733,
        4670
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x1F32"
    },
    "2509": {
      "fn": "CultureCoin.initialize",
      "jump": "i",
      "offset": [
        2733,
        4670
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2510": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4313,
        4462
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2511": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4313,
        4462
      ],
      "op": "CALLVALUE",
      "path": "15"
    },
    "2512": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4313,
        4462
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2513": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4313,
        4462
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "2514": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4313,
        4462
      ],
      "op": "PUSH3",
      "path": "15",
      "value": "0x9DB"
    },
    "2518": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4313,
        4462
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "2519": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4313,
        4462
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "2521": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4313,
        4462
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2522": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4313,
        4462
      ],
      "op": "REVERT",
      "path": "15"
    },
    "2523": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4313,
        4462
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2524": {
      "op": "POP"
    },
    "2525": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4313,
        4462
      ],
      "op": "PUSH3",
      "path": "15",
      "value": "0x454"
    },
    "2529": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4313,
        4462
      ],
      "op": "PUSH3",
      "path": "15",
      "value": "0x9ED"
    },
    "2533": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4313,
        4462
      ],
      "op": "CALLDATASIZE",
      "path": "15"
    },
    "2534": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4313,
        4462
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "2536": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4313,
        4462
      ],
      "op": "PUSH3",
      "path": "15",
      "value": "0x36CF"
    },
    "2540": {
      "fn": "ERC20Upgradeable.allowance",
      "jump": "i",
      "offset": [
        4313,
        4462
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2541": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4313,
        4462
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2542": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4313,
        4462
      ],
      "op": "PUSH3",
      "path": "15",
      "value": "0x2164"
    },
    "2546": {
      "fn": "ERC20Upgradeable.allowance",
      "jump": "i",
      "offset": [
        4313,
        4462
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2547": {
      "fn": "CultureCoin.getDexCCRate",
      "offset": [
        16951,
        17039
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2548": {
      "fn": "CultureCoin.getDexCCRate",
      "offset": [
        16951,
        17039
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "2549": {
      "fn": "CultureCoin.getDexCCRate",
      "offset": [
        16951,
        17039
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2550": {
      "fn": "CultureCoin.getDexCCRate",
      "offset": [
        16951,
        17039
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2551": {
      "fn": "CultureCoin.getDexCCRate",
      "offset": [
        16951,
        17039
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0xA00"
    },
    "2555": {
      "fn": "CultureCoin.getDexCCRate",
      "offset": [
        16951,
        17039
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2556": {
      "fn": "CultureCoin.getDexCCRate",
      "offset": [
        16951,
        17039
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2558": {
      "fn": "CultureCoin.getDexCCRate",
      "offset": [
        16951,
        17039
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2559": {
      "fn": "CultureCoin.getDexCCRate",
      "offset": [
        16951,
        17039
      ],
      "op": "REVERT",
      "path": "1"
    },
    "2560": {
      "fn": "CultureCoin.getDexCCRate",
      "offset": [
        16951,
        17039
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2561": {
      "op": "POP"
    },
    "2562": {
      "fn": "CultureCoin.getDexCCRate",
      "offset": [
        17023,
        17032
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 6,
      "value": "0xE3"
    },
    "2564": {
      "fn": "CultureCoin.getDexCCRate",
      "offset": [
        17023,
        17032
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2565": {
      "fn": "CultureCoin.getDexCCRate",
      "offset": [
        16951,
        17039
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x454"
    },
    "2569": {
      "fn": "CultureCoin.getDexCCRate",
      "offset": [
        16951,
        17039
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2570": {
      "offset": [
        14086,
        14110
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2571": {
      "fn": "CultureCoin.getDexCCRate",
      "offset": [
        14086,
        14110
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "2572": {
      "fn": "CultureCoin.getDexCCRate",
      "offset": [
        14086,
        14110
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2573": {
      "fn": "CultureCoin.getDexCCRate",
      "offset": [
        14086,
        14110
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2574": {
      "fn": "CultureCoin.getDexCCRate",
      "offset": [
        14086,
        14110
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0xA17"
    },
    "2578": {
      "fn": "CultureCoin.getDexCCRate",
      "offset": [
        14086,
        14110
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2579": {
      "fn": "CultureCoin.getDexCCRate",
      "offset": [
        14086,
        14110
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2581": {
      "fn": "CultureCoin.getDexCCRate",
      "offset": [
        14086,
        14110
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2582": {
      "fn": "CultureCoin.getDexCCRate",
      "offset": [
        14086,
        14110
      ],
      "op": "REVERT",
      "path": "1"
    },
    "2583": {
      "fn": "CultureCoin.getDexCCRate",
      "offset": [
        14086,
        14110
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2584": {
      "fn": "CultureCoin.getDexCCRate",
      "offset": [
        14086,
        14110
      ],
      "op": "POP",
      "path": "1"
    },
    "2585": {
      "fn": "CultureCoin.getDexCCRate",
      "offset": [
        14086,
        14110
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x454"
    },
    "2589": {
      "fn": "CultureCoin.getDexCCRate",
      "offset": [
        14086,
        14110
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xE7"
    },
    "2591": {
      "fn": "CultureCoin.getDexCCRate",
      "offset": [
        14086,
        14110
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2592": {
      "fn": "CultureCoin.getDexCCRate",
      "offset": [
        14086,
        14110
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2593": {
      "fn": "CultureCoin.getDexCCRate",
      "offset": [
        14086,
        14110
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2594": {
      "fn": "CultureCoin.getRewardPerHour",
      "offset": [
        5003,
        5099
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2595": {
      "fn": "CultureCoin.getRewardPerHour",
      "offset": [
        5003,
        5099
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "2596": {
      "fn": "CultureCoin.getRewardPerHour",
      "offset": [
        5003,
        5099
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2597": {
      "fn": "CultureCoin.getRewardPerHour",
      "offset": [
        5003,
        5099
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2598": {
      "fn": "CultureCoin.getRewardPerHour",
      "offset": [
        5003,
        5099
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0xA2F"
    },
    "2602": {
      "fn": "CultureCoin.getRewardPerHour",
      "offset": [
        5003,
        5099
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2603": {
      "fn": "CultureCoin.getRewardPerHour",
      "offset": [
        5003,
        5099
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2605": {
      "fn": "CultureCoin.getRewardPerHour",
      "offset": [
        5003,
        5099
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2606": {
      "fn": "CultureCoin.getRewardPerHour",
      "offset": [
        5003,
        5099
      ],
      "op": "REVERT",
      "path": "1"
    },
    "2607": {
      "fn": "CultureCoin.getRewardPerHour",
      "offset": [
        5003,
        5099
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2608": {
      "op": "POP"
    },
    "2609": {
      "fn": "CultureCoin.getRewardPerHour",
      "offset": [
        5079,
        5092
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 7,
      "value": "0x99"
    },
    "2611": {
      "fn": "CultureCoin.getRewardPerHour",
      "offset": [
        5079,
        5092
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2612": {
      "fn": "CultureCoin.getRewardPerHour",
      "offset": [
        5003,
        5099
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x454"
    },
    "2616": {
      "fn": "CultureCoin.getRewardPerHour",
      "offset": [
        5003,
        5099
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2617": {
      "fn": "CultureCoin.dexCCIn",
      "offset": [
        15308,
        15815
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2618": {
      "fn": "CultureCoin.dexCCIn",
      "offset": [
        15308,
        15815
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "2619": {
      "fn": "CultureCoin.dexCCIn",
      "offset": [
        15308,
        15815
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2620": {
      "fn": "CultureCoin.dexCCIn",
      "offset": [
        15308,
        15815
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2621": {
      "fn": "CultureCoin.dexCCIn",
      "offset": [
        15308,
        15815
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0xA46"
    },
    "2625": {
      "fn": "CultureCoin.dexCCIn",
      "offset": [
        15308,
        15815
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2626": {
      "fn": "CultureCoin.dexCCIn",
      "offset": [
        15308,
        15815
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2628": {
      "fn": "CultureCoin.dexCCIn",
      "offset": [
        15308,
        15815
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2629": {
      "fn": "CultureCoin.dexCCIn",
      "offset": [
        15308,
        15815
      ],
      "op": "REVERT",
      "path": "1"
    },
    "2630": {
      "fn": "CultureCoin.dexCCIn",
      "offset": [
        15308,
        15815
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2631": {
      "op": "POP"
    },
    "2632": {
      "fn": "CultureCoin.dexCCIn",
      "offset": [
        15308,
        15815
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x454"
    },
    "2636": {
      "fn": "CultureCoin.dexCCIn",
      "offset": [
        15308,
        15815
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0xA58"
    },
    "2640": {
      "fn": "CultureCoin.dexCCIn",
      "offset": [
        15308,
        15815
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "2641": {
      "fn": "CultureCoin.dexCCIn",
      "offset": [
        15308,
        15815
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2643": {
      "fn": "CultureCoin.dexCCIn",
      "offset": [
        15308,
        15815
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x35D6"
    },
    "2647": {
      "fn": "CultureCoin.dexCCIn",
      "jump": "i",
      "offset": [
        15308,
        15815
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2648": {
      "fn": "CultureCoin.dexCCIn",
      "offset": [
        15308,
        15815
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2649": {
      "fn": "CultureCoin.dexCCIn",
      "offset": [
        15308,
        15815
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x218F"
    },
    "2653": {
      "fn": "CultureCoin.dexCCIn",
      "jump": "i",
      "offset": [
        15308,
        15815
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2654": {
      "offset": [
        7165,
        7189
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2655": {
      "fn": "CultureCoin.dexCCIn",
      "offset": [
        7165,
        7189
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "2656": {
      "fn": "CultureCoin.dexCCIn",
      "offset": [
        7165,
        7189
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2657": {
      "fn": "CultureCoin.dexCCIn",
      "offset": [
        7165,
        7189
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2658": {
      "fn": "CultureCoin.dexCCIn",
      "offset": [
        7165,
        7189
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0xA6B"
    },
    "2662": {
      "fn": "CultureCoin.dexCCIn",
      "offset": [
        7165,
        7189
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2663": {
      "fn": "CultureCoin.dexCCIn",
      "offset": [
        7165,
        7189
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2665": {
      "fn": "CultureCoin.dexCCIn",
      "offset": [
        7165,
        7189
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2666": {
      "fn": "CultureCoin.dexCCIn",
      "offset": [
        7165,
        7189
      ],
      "op": "REVERT",
      "path": "1"
    },
    "2667": {
      "fn": "CultureCoin.dexCCIn",
      "offset": [
        7165,
        7189
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2668": {
      "fn": "CultureCoin.dexCCIn",
      "offset": [
        7165,
        7189
      ],
      "op": "POP",
      "path": "1"
    },
    "2669": {
      "fn": "CultureCoin.dexCCIn",
      "offset": [
        7165,
        7189
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x454"
    },
    "2673": {
      "fn": "CultureCoin.dexCCIn",
      "offset": [
        7165,
        7189
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xCC"
    },
    "2675": {
      "fn": "CultureCoin.dexCCIn",
      "offset": [
        7165,
        7189
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2676": {
      "fn": "CultureCoin.dexCCIn",
      "offset": [
        7165,
        7189
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2677": {
      "fn": "CultureCoin.dexCCIn",
      "offset": [
        7165,
        7189
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2678": {
      "fn": "Stakeable.hasStake",
      "offset": [
        7521,
        8348
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2679": {
      "fn": "Stakeable.hasStake",
      "offset": [
        7521,
        8348
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "2680": {
      "fn": "Stakeable.hasStake",
      "offset": [
        7521,
        8348
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2681": {
      "fn": "Stakeable.hasStake",
      "offset": [
        7521,
        8348
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "2682": {
      "fn": "Stakeable.hasStake",
      "offset": [
        7521,
        8348
      ],
      "op": "PUSH3",
      "path": "5",
      "value": "0xA83"
    },
    "2686": {
      "fn": "Stakeable.hasStake",
      "offset": [
        7521,
        8348
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2687": {
      "fn": "Stakeable.hasStake",
      "offset": [
        7521,
        8348
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2689": {
      "fn": "Stakeable.hasStake",
      "offset": [
        7521,
        8348
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2690": {
      "fn": "Stakeable.hasStake",
      "offset": [
        7521,
        8348
      ],
      "op": "REVERT",
      "path": "5"
    },
    "2691": {
      "fn": "Stakeable.hasStake",
      "offset": [
        7521,
        8348
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2692": {
      "op": "POP"
    },
    "2693": {
      "fn": "Stakeable.hasStake",
      "offset": [
        7521,
        8348
      ],
      "op": "PUSH3",
      "path": "5",
      "value": "0xA9B"
    },
    "2697": {
      "fn": "Stakeable.hasStake",
      "offset": [
        7521,
        8348
      ],
      "op": "PUSH3",
      "path": "5",
      "value": "0xA95"
    },
    "2701": {
      "fn": "Stakeable.hasStake",
      "offset": [
        7521,
        8348
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "2702": {
      "fn": "Stakeable.hasStake",
      "offset": [
        7521,
        8348
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "2704": {
      "fn": "Stakeable.hasStake",
      "offset": [
        7521,
        8348
      ],
      "op": "PUSH3",
      "path": "5",
      "value": "0x3420"
    },
    "2708": {
      "fn": "Stakeable.hasStake",
      "jump": "i",
      "offset": [
        7521,
        8348
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2709": {
      "fn": "Stakeable.hasStake",
      "offset": [
        7521,
        8348
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2710": {
      "fn": "Stakeable.hasStake",
      "offset": [
        7521,
        8348
      ],
      "op": "PUSH3",
      "path": "5",
      "value": "0x22D6"
    },
    "2714": {
      "fn": "Stakeable.hasStake",
      "jump": "i",
      "offset": [
        7521,
        8348
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2715": {
      "fn": "Stakeable.hasStake",
      "offset": [
        7521,
        8348
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2716": {
      "fn": "Stakeable.hasStake",
      "offset": [
        7521,
        8348
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2718": {
      "fn": "Stakeable.hasStake",
      "offset": [
        7521,
        8348
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2719": {
      "fn": "Stakeable.hasStake",
      "offset": [
        7521,
        8348
      ],
      "op": "PUSH3",
      "path": "5",
      "value": "0x3B7"
    },
    "2723": {
      "fn": "Stakeable.hasStake",
      "offset": [
        7521,
        8348
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2724": {
      "fn": "Stakeable.hasStake",
      "offset": [
        7521,
        8348
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2725": {
      "fn": "Stakeable.hasStake",
      "offset": [
        7521,
        8348
      ],
      "op": "PUSH3",
      "path": "5",
      "value": "0x36FE"
    },
    "2729": {
      "fn": "Stakeable.hasStake",
      "jump": "i",
      "offset": [
        7521,
        8348
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2730": {
      "offset": [
        14057,
        14080
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2731": {
      "fn": "Stakeable.hasStake",
      "offset": [
        14057,
        14080
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "2732": {
      "fn": "Stakeable.hasStake",
      "offset": [
        14057,
        14080
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2733": {
      "fn": "Stakeable.hasStake",
      "offset": [
        14057,
        14080
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2734": {
      "fn": "Stakeable.hasStake",
      "offset": [
        14057,
        14080
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0xAB7"
    },
    "2738": {
      "fn": "Stakeable.hasStake",
      "offset": [
        14057,
        14080
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2739": {
      "fn": "Stakeable.hasStake",
      "offset": [
        14057,
        14080
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2741": {
      "fn": "Stakeable.hasStake",
      "offset": [
        14057,
        14080
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2742": {
      "fn": "Stakeable.hasStake",
      "offset": [
        14057,
        14080
      ],
      "op": "REVERT",
      "path": "1"
    },
    "2743": {
      "fn": "Stakeable.hasStake",
      "offset": [
        14057,
        14080
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2744": {
      "fn": "Stakeable.hasStake",
      "offset": [
        14057,
        14080
      ],
      "op": "POP",
      "path": "1"
    },
    "2745": {
      "fn": "Stakeable.hasStake",
      "offset": [
        14057,
        14080
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x454"
    },
    "2749": {
      "fn": "Stakeable.hasStake",
      "offset": [
        14057,
        14080
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xE6"
    },
    "2751": {
      "fn": "Stakeable.hasStake",
      "offset": [
        14057,
        14080
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2752": {
      "fn": "Stakeable.hasStake",
      "offset": [
        14057,
        14080
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2753": {
      "fn": "Stakeable.hasStake",
      "offset": [
        14057,
        14080
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2754": {
      "offset": [
        14000,
        14022
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2755": {
      "fn": "Stakeable.hasStake",
      "offset": [
        14000,
        14022
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "2756": {
      "fn": "Stakeable.hasStake",
      "offset": [
        14000,
        14022
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2757": {
      "fn": "Stakeable.hasStake",
      "offset": [
        14000,
        14022
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2758": {
      "fn": "Stakeable.hasStake",
      "offset": [
        14000,
        14022
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0xACF"
    },
    "2762": {
      "fn": "Stakeable.hasStake",
      "offset": [
        14000,
        14022
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2763": {
      "fn": "Stakeable.hasStake",
      "offset": [
        14000,
        14022
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2765": {
      "fn": "Stakeable.hasStake",
      "offset": [
        14000,
        14022
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2766": {
      "fn": "Stakeable.hasStake",
      "offset": [
        14000,
        14022
      ],
      "op": "REVERT",
      "path": "1"
    },
    "2767": {
      "fn": "Stakeable.hasStake",
      "offset": [
        14000,
        14022
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2768": {
      "fn": "Stakeable.hasStake",
      "offset": [
        14000,
        14022
      ],
      "op": "POP",
      "path": "1"
    },
    "2769": {
      "fn": "Stakeable.hasStake",
      "offset": [
        14000,
        14022
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x454"
    },
    "2773": {
      "fn": "Stakeable.hasStake",
      "offset": [
        14000,
        14022
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xE4"
    },
    "2775": {
      "fn": "Stakeable.hasStake",
      "offset": [
        14000,
        14022
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2776": {
      "fn": "Stakeable.hasStake",
      "offset": [
        14000,
        14022
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2777": {
      "fn": "Stakeable.hasStake",
      "offset": [
        14000,
        14022
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2778": {
      "offset": [
        14028,
        14051
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2779": {
      "fn": "Stakeable.hasStake",
      "offset": [
        14028,
        14051
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "2780": {
      "fn": "Stakeable.hasStake",
      "offset": [
        14028,
        14051
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2781": {
      "fn": "Stakeable.hasStake",
      "offset": [
        14028,
        14051
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2782": {
      "fn": "Stakeable.hasStake",
      "offset": [
        14028,
        14051
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0xAE7"
    },
    "2786": {
      "fn": "Stakeable.hasStake",
      "offset": [
        14028,
        14051
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2787": {
      "fn": "Stakeable.hasStake",
      "offset": [
        14028,
        14051
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2789": {
      "fn": "Stakeable.hasStake",
      "offset": [
        14028,
        14051
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2790": {
      "fn": "Stakeable.hasStake",
      "offset": [
        14028,
        14051
      ],
      "op": "REVERT",
      "path": "1"
    },
    "2791": {
      "fn": "Stakeable.hasStake",
      "offset": [
        14028,
        14051
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2792": {
      "fn": "Stakeable.hasStake",
      "offset": [
        14028,
        14051
      ],
      "op": "POP",
      "path": "1"
    },
    "2793": {
      "fn": "Stakeable.hasStake",
      "offset": [
        14028,
        14051
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x454"
    },
    "2797": {
      "fn": "Stakeable.hasStake",
      "offset": [
        14028,
        14051
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xE5"
    },
    "2799": {
      "fn": "Stakeable.hasStake",
      "offset": [
        14028,
        14051
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2800": {
      "fn": "Stakeable.hasStake",
      "offset": [
        14028,
        14051
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2801": {
      "fn": "Stakeable.hasStake",
      "offset": [
        14028,
        14051
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2802": {
      "fn": "CultureCoin.setDexRates",
      "offset": [
        16693,
        16847
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2803": {
      "fn": "CultureCoin.setDexRates",
      "offset": [
        16693,
        16847
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "2804": {
      "fn": "CultureCoin.setDexRates",
      "offset": [
        16693,
        16847
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2805": {
      "fn": "CultureCoin.setDexRates",
      "offset": [
        16693,
        16847
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2806": {
      "fn": "CultureCoin.setDexRates",
      "offset": [
        16693,
        16847
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0xAFF"
    },
    "2810": {
      "fn": "CultureCoin.setDexRates",
      "offset": [
        16693,
        16847
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2811": {
      "fn": "CultureCoin.setDexRates",
      "offset": [
        16693,
        16847
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2813": {
      "fn": "CultureCoin.setDexRates",
      "offset": [
        16693,
        16847
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2814": {
      "fn": "CultureCoin.setDexRates",
      "offset": [
        16693,
        16847
      ],
      "op": "REVERT",
      "path": "1"
    },
    "2815": {
      "fn": "CultureCoin.setDexRates",
      "offset": [
        16693,
        16847
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2816": {
      "op": "POP"
    },
    "2817": {
      "fn": "CultureCoin.setDexRates",
      "offset": [
        16693,
        16847
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x46D"
    },
    "2821": {
      "fn": "CultureCoin.setDexRates",
      "offset": [
        16693,
        16847
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0xB11"
    },
    "2825": {
      "fn": "CultureCoin.setDexRates",
      "offset": [
        16693,
        16847
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "2826": {
      "fn": "CultureCoin.setDexRates",
      "offset": [
        16693,
        16847
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2828": {
      "fn": "CultureCoin.setDexRates",
      "offset": [
        16693,
        16847
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x3781"
    },
    "2832": {
      "fn": "CultureCoin.setDexRates",
      "jump": "i",
      "offset": [
        16693,
        16847
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2833": {
      "fn": "CultureCoin.setDexRates",
      "offset": [
        16693,
        16847
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2834": {
      "fn": "CultureCoin.setDexRates",
      "offset": [
        16693,
        16847
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x2492"
    },
    "2838": {
      "fn": "CultureCoin.setDexRates",
      "jump": "i",
      "offset": [
        16693,
        16847
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2839": {
      "fn": "CultureCoin.withdrawStake",
      "offset": [
        5997,
        6593
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2840": {
      "fn": "CultureCoin.withdrawStake",
      "offset": [
        5997,
        6593
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "2841": {
      "fn": "CultureCoin.withdrawStake",
      "offset": [
        5997,
        6593
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2842": {
      "fn": "CultureCoin.withdrawStake",
      "offset": [
        5997,
        6593
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2843": {
      "fn": "CultureCoin.withdrawStake",
      "offset": [
        5997,
        6593
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0xB24"
    },
    "2847": {
      "fn": "CultureCoin.withdrawStake",
      "offset": [
        5997,
        6593
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2848": {
      "fn": "CultureCoin.withdrawStake",
      "offset": [
        5997,
        6593
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2850": {
      "fn": "CultureCoin.withdrawStake",
      "offset": [
        5997,
        6593
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2851": {
      "fn": "CultureCoin.withdrawStake",
      "offset": [
        5997,
        6593
      ],
      "op": "REVERT",
      "path": "1"
    },
    "2852": {
      "fn": "CultureCoin.withdrawStake",
      "offset": [
        5997,
        6593
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2853": {
      "op": "POP"
    },
    "2854": {
      "fn": "CultureCoin.withdrawStake",
      "offset": [
        5997,
        6593
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x454"
    },
    "2858": {
      "fn": "CultureCoin.withdrawStake",
      "offset": [
        5997,
        6593
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0xB36"
    },
    "2862": {
      "fn": "CultureCoin.withdrawStake",
      "offset": [
        5997,
        6593
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "2863": {
      "fn": "CultureCoin.withdrawStake",
      "offset": [
        5997,
        6593
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2865": {
      "fn": "CultureCoin.withdrawStake",
      "offset": [
        5997,
        6593
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x3781"
    },
    "2869": {
      "fn": "CultureCoin.withdrawStake",
      "jump": "i",
      "offset": [
        5997,
        6593
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2870": {
      "fn": "CultureCoin.withdrawStake",
      "offset": [
        5997,
        6593
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2871": {
      "fn": "CultureCoin.withdrawStake",
      "offset": [
        5997,
        6593
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x24A8"
    },
    "2875": {
      "fn": "CultureCoin.withdrawStake",
      "jump": "i",
      "offset": [
        5997,
        6593
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2876": {
      "fn": "CultureCoin.setMaxXOut",
      "offset": [
        15820,
        15938
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2877": {
      "fn": "CultureCoin.setMaxXOut",
      "offset": [
        15820,
        15938
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "2878": {
      "fn": "CultureCoin.setMaxXOut",
      "offset": [
        15820,
        15938
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2879": {
      "fn": "CultureCoin.setMaxXOut",
      "offset": [
        15820,
        15938
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2880": {
      "fn": "CultureCoin.setMaxXOut",
      "offset": [
        15820,
        15938
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0xB49"
    },
    "2884": {
      "fn": "CultureCoin.setMaxXOut",
      "offset": [
        15820,
        15938
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2885": {
      "fn": "CultureCoin.setMaxXOut",
      "offset": [
        15820,
        15938
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2887": {
      "fn": "CultureCoin.setMaxXOut",
      "offset": [
        15820,
        15938
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2888": {
      "fn": "CultureCoin.setMaxXOut",
      "offset": [
        15820,
        15938
      ],
      "op": "REVERT",
      "path": "1"
    },
    "2889": {
      "fn": "CultureCoin.setMaxXOut",
      "offset": [
        15820,
        15938
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2890": {
      "op": "POP"
    },
    "2891": {
      "fn": "CultureCoin.setMaxXOut",
      "offset": [
        15820,
        15938
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x46D"
    },
    "2895": {
      "fn": "CultureCoin.setMaxXOut",
      "offset": [
        15820,
        15938
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0xB5B"
    },
    "2899": {
      "fn": "CultureCoin.setMaxXOut",
      "offset": [
        15820,
        15938
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "2900": {
      "fn": "CultureCoin.setMaxXOut",
      "offset": [
        15820,
        15938
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2902": {
      "fn": "CultureCoin.setMaxXOut",
      "offset": [
        15820,
        15938
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x35D6"
    },
    "2906": {
      "fn": "CultureCoin.setMaxXOut",
      "jump": "i",
      "offset": [
        15820,
        15938
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2907": {
      "fn": "CultureCoin.setMaxXOut",
      "offset": [
        15820,
        15938
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2908": {
      "fn": "CultureCoin.setMaxXOut",
      "offset": [
        15820,
        15938
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x256E"
    },
    "2912": {
      "fn": "CultureCoin.setMaxXOut",
      "jump": "i",
      "offset": [
        15820,
        15938
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2913": {
      "fn": "CultureCoin.getDexXMTSPRate",
      "offset": [
        16852,
        16946
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2914": {
      "fn": "CultureCoin.getDexXMTSPRate",
      "offset": [
        16852,
        16946
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "2915": {
      "fn": "CultureCoin.getDexXMTSPRate",
      "offset": [
        16852,
        16946
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2916": {
      "fn": "CultureCoin.getDexXMTSPRate",
      "offset": [
        16852,
        16946
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2917": {
      "fn": "CultureCoin.getDexXMTSPRate",
      "offset": [
        16852,
        16946
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0xB6E"
    },
    "2921": {
      "fn": "CultureCoin.getDexXMTSPRate",
      "offset": [
        16852,
        16946
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2922": {
      "fn": "CultureCoin.getDexXMTSPRate",
      "offset": [
        16852,
        16946
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2924": {
      "fn": "CultureCoin.getDexXMTSPRate",
      "offset": [
        16852,
        16946
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2925": {
      "fn": "CultureCoin.getDexXMTSPRate",
      "offset": [
        16852,
        16946
      ],
      "op": "REVERT",
      "path": "1"
    },
    "2926": {
      "fn": "CultureCoin.getDexXMTSPRate",
      "offset": [
        16852,
        16946
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2927": {
      "op": "POP"
    },
    "2928": {
      "fn": "CultureCoin.getDexXMTSPRate",
      "offset": [
        16927,
        16939
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 8,
      "value": "0xE2"
    },
    "2930": {
      "fn": "CultureCoin.getDexXMTSPRate",
      "offset": [
        16927,
        16939
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2931": {
      "fn": "CultureCoin.getDexXMTSPRate",
      "offset": [
        16852,
        16946
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x454"
    },
    "2935": {
      "fn": "CultureCoin.getDexXMTSPRate",
      "offset": [
        16852,
        16946
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2936": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2937": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2547,
        2560
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x60"
    },
    "2939": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2579,
        2584
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 9,
      "value": "0x36"
    },
    "2941": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2942": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "2943": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH3",
      "path": "15",
      "value": "0xB89"
    },
    "2947": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2948": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH3",
      "path": "15",
      "value": "0x37A4"
    },
    "2952": {
      "fn": "ERC20Upgradeable.name",
      "jump": "i",
      "offset": [
        2572,
        2584
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2953": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2954": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2955": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1F"
    },
    "2957": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "ADD",
      "path": "15"
    },
    "2958": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "2960": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2961": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "2962": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DIV",
      "path": "15"
    },
    "2963": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "MUL",
      "path": "15"
    },
    "2964": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "2966": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "ADD",
      "path": "15"
    },
    "2967": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "2969": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "2970": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2971": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2972": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "ADD",
      "path": "15"
    },
    "2973": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "2975": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2976": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2977": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "2978": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "2979": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2980": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2981": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2982": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "2983": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "2985": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "ADD",
      "path": "15"
    },
    "2986": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP3",
      "path": "15"
    },
    "2987": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2988": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "2989": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH3",
      "path": "15",
      "value": "0xBB7"
    },
    "2993": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2994": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH3",
      "path": "15",
      "value": "0x37A4"
    },
    "2998": {
      "fn": "ERC20Upgradeable.name",
      "jump": "i",
      "offset": [
        2572,
        2584
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2999": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3000": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3001": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "3002": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH3",
      "path": "15",
      "value": "0xC08"
    },
    "3006": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "3007": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3008": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1F"
    },
    "3010": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "LT",
      "path": "15"
    },
    "3011": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH3",
      "path": "15",
      "value": "0xBDC"
    },
    "3015": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "3016": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x100"
    },
    "3019": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3020": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP4",
      "path": "15"
    },
    "3021": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "3022": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DIV",
      "path": "15"
    },
    "3023": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "MUL",
      "path": "15"
    },
    "3024": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP4",
      "path": "15"
    },
    "3025": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3026": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "3027": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3029": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "ADD",
      "path": "15"
    },
    "3030": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "3031": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH3",
      "path": "15",
      "value": "0xC08"
    },
    "3035": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "JUMP",
      "path": "15"
    },
    "3036": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3037": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP3",
      "path": "15"
    },
    "3038": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "ADD",
      "path": "15"
    },
    "3039": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "3040": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3041": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "3043": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3044": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3046": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "3048": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "3049": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3050": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3051": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3052": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "3053": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3054": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3055": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3056": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "3058": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "ADD",
      "path": "15"
    },
    "3059": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3060": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "3062": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "ADD",
      "path": "15"
    },
    "3063": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3064": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP4",
      "path": "15"
    },
    "3065": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "GT",
      "path": "15"
    },
    "3066": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH3",
      "path": "15",
      "value": "0xBEA"
    },
    "3070": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "3071": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP3",
      "path": "15"
    },
    "3072": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3073": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SUB",
      "path": "15"
    },
    "3074": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1F"
    },
    "3076": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "AND",
      "path": "15"
    },
    "3077": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "DUP3",
      "path": "15"
    },
    "3078": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "ADD",
      "path": "15"
    },
    "3079": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "3080": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3081": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "POP",
      "path": "15"
    },
    "3082": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "POP",
      "path": "15"
    },
    "3083": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "POP",
      "path": "15"
    },
    "3084": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "POP",
      "path": "15"
    },
    "3085": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "POP",
      "path": "15"
    },
    "3086": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3087": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2572,
        2584
      ],
      "op": "POP",
      "path": "15"
    },
    "3088": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2493,
        2591
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3089": {
      "fn": "ERC20Upgradeable.name",
      "jump": "o",
      "offset": [
        2493,
        2591
      ],
      "op": "JUMP",
      "path": "15"
    },
    "3090": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3091": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4853,
        4857
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "3093": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        929,
        939
      ],
      "op": "CALLER",
      "path": "20",
      "statement": 10
    },
    "3094": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4907,
        4939
      ],
      "op": "PUSH3",
      "path": "15",
      "statement": 11,
      "value": "0xC22"
    },
    "3098": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        929,
        939
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3099": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4923,
        4930
      ],
      "op": "DUP6",
      "path": "15"
    },
    "3100": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4932,
        4938
      ],
      "op": "DUP6",
      "path": "15"
    },
    "3101": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4907,
        4915
      ],
      "op": "PUSH3",
      "path": "15",
      "value": "0x258B"
    },
    "3105": {
      "fn": "ERC20Upgradeable.approve",
      "jump": "i",
      "offset": [
        4907,
        4939
      ],
      "op": "JUMP",
      "path": "15"
    },
    "3106": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4907,
        4939
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3107": {
      "op": "POP"
    },
    "3108": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4956,
        4960
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 12,
      "value": "0x1"
    },
    "3110": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4956,
        4960
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "3111": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4770,
        4967
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "3112": {
      "op": "POP"
    },
    "3113": {
      "op": "POP"
    },
    "3114": {
      "op": "POP"
    },
    "3115": {
      "fn": "ERC20Upgradeable.approve",
      "jump": "o",
      "offset": [
        4770,
        4967
      ],
      "op": "JUMP",
      "path": "15"
    },
    "3116": {
      "fn": "CultureCoin.clone",
      "offset": [
        17266,
        17471
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3117": {
      "fn": "CultureCoin.clone",
      "offset": [
        17324,
        17327
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 13,
      "value": "0xD5"
    },
    "3119": {
      "fn": "CultureCoin.clone",
      "offset": [
        17324,
        17327
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3120": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3122": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3124": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3126": {
      "op": "SHL"
    },
    "3127": {
      "op": "SUB"
    },
    "3128": {
      "fn": "CultureCoin.clone",
      "offset": [
        17324,
        17327
      ],
      "op": "AND",
      "path": "1"
    },
    "3129": {
      "fn": "CultureCoin.clone",
      "offset": [
        17324,
        17327
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3130": {
      "fn": "CultureCoin.clone",
      "jump": "o",
      "offset": [
        17266,
        17471
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3131": {
      "fn": "CultureCoin.clonesearch",
      "offset": [
        17507,
        18114
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3132": {
      "fn": "CultureCoin.clonesearch",
      "offset": [
        17559,
        17563
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3134": {
      "fn": "CultureCoin.clonesearch",
      "offset": [
        17796,
        17797
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 14,
      "value": "0x1"
    },
    "3136": {
      "fn": "CultureCoin.clonesearch",
      "offset": [
        17783,
        17792
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xE9"
    },
    "3138": {
      "fn": "CultureCoin.clonesearch",
      "offset": [
        17783,
        17792
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3140": {
      "fn": "CultureCoin.clonesearch",
      "offset": [
        17783,
        17797
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3141": {
      "fn": "CultureCoin.clonesearch",
      "offset": [
        17783,
        17797
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3142": {
      "fn": "CultureCoin.clonesearch",
      "offset": [
        17783,
        17797
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3143": {
      "fn": "CultureCoin.clonesearch",
      "offset": [
        17783,
        17797
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0xC52"
    },
    "3147": {
      "fn": "CultureCoin.clonesearch",
      "offset": [
        17783,
        17797
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3148": {
      "fn": "CultureCoin.clonesearch",
      "offset": [
        17783,
        17797
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3149": {
      "fn": "CultureCoin.clonesearch",
      "offset": [
        17783,
        17797
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x37F7"
    },
    "3153": {
      "fn": "CultureCoin.clonesearch",
      "jump": "i",
      "offset": [
        17783,
        17797
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3154": {
      "fn": "CultureCoin.clonesearch",
      "offset": [
        17783,
        17797
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3155": {
      "fn": "CultureCoin.clonesearch",
      "offset": [
        17783,
        17797
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3156": {
      "fn": "CultureCoin.clonesearch",
      "offset": [
        17783,
        17797
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3157": {
      "fn": "CultureCoin.clonesearch",
      "offset": [
        17783,
        17797
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "3158": {
      "op": "POP"
    },
    "3159": {
      "fn": "CultureCoin.clonesearch",
      "offset": [
        17814,
        17819
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 15,
      "value": "0x0"
    },
    "3161": {
      "fn": "CultureCoin.clonesearch",
      "offset": [
        17814,
        17819
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "3162": {
      "fn": "CultureCoin.clonesearch",
      "offset": [
        17507,
        18114
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "3163": {
      "op": "POP"
    },
    "3164": {
      "op": "POP"
    },
    "3165": {
      "op": "POP"
    },
    "3166": {
      "fn": "CultureCoin.clonesearch",
      "jump": "o",
      "offset": [
        17507,
        18114
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3167": {
      "fn": "CultureCoin.pay",
      "offset": [
        23931,
        24101
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3168": {
      "fn": "CultureCoin.pay",
      "offset": [
        23982,
        23987
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 16,
      "value": "0xEA"
    },
    "3170": {
      "fn": "CultureCoin.pay",
      "offset": [
        23982,
        23987
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3171": {
      "fn": "CultureCoin.pay",
      "offset": [
        23982,
        23987
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "3173": {
      "fn": "CultureCoin.pay",
      "offset": [
        23982,
        23987
      ],
      "op": "AND",
      "path": "1"
    },
    "3174": {
      "branch": 184,
      "fn": "CultureCoin.pay",
      "offset": [
        23981,
        23987
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "3175": {
      "fn": "CultureCoin.pay",
      "offset": [
        23973,
        23998
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0xCA1"
    },
    "3179": {
      "branch": 184,
      "fn": "CultureCoin.pay",
      "offset": [
        23973,
        23998
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3180": {
      "fn": "CultureCoin.pay",
      "offset": [
        23973,
        23998
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3182": {
      "fn": "CultureCoin.pay",
      "offset": [
        23973,
        23998
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3183": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3187": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3189": {
      "op": "SHL"
    },
    "3190": {
      "fn": "CultureCoin.pay",
      "offset": [
        23973,
        23998
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3191": {
      "fn": "CultureCoin.pay",
      "offset": [
        23973,
        23998
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3192": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3194": {
      "fn": "CultureCoin.pay",
      "offset": [
        23973,
        23998
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "3196": {
      "fn": "CultureCoin.pay",
      "offset": [
        23973,
        23998
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3197": {
      "fn": "CultureCoin.pay",
      "offset": [
        23973,
        23998
      ],
      "op": "ADD",
      "path": "1"
    },
    "3198": {
      "op": "MSTORE"
    },
    "3199": {
      "op": "PUSH1",
      "value": "0x6"
    },
    "3201": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3203": {
      "op": "DUP3"
    },
    "3204": {
      "op": "ADD"
    },
    "3205": {
      "op": "MSTORE"
    },
    "3206": {
      "op": "PUSH6",
      "value": "0x213934B1B597"
    },
    "3213": {
      "op": "PUSH1",
      "value": "0xD1"
    },
    "3215": {
      "op": "SHL"
    },
    "3216": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3218": {
      "op": "DUP3"
    },
    "3219": {
      "op": "ADD"
    },
    "3220": {
      "op": "MSTORE"
    },
    "3221": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3223": {
      "op": "ADD"
    },
    "3224": {
      "fn": "CultureCoin.pay",
      "offset": [
        23973,
        23998
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3225": {
      "fn": "CultureCoin.pay",
      "offset": [
        23973,
        23998
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3227": {
      "fn": "CultureCoin.pay",
      "offset": [
        23973,
        23998
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3228": {
      "fn": "CultureCoin.pay",
      "offset": [
        23973,
        23998
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3229": {
      "fn": "CultureCoin.pay",
      "offset": [
        23973,
        23998
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3230": {
      "fn": "CultureCoin.pay",
      "offset": [
        23973,
        23998
      ],
      "op": "SUB",
      "path": "1"
    },
    "3231": {
      "fn": "CultureCoin.pay",
      "offset": [
        23973,
        23998
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3232": {
      "fn": "CultureCoin.pay",
      "offset": [
        23973,
        23998
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "1"
    },
    "3233": {
      "fn": "CultureCoin.pay",
      "offset": [
        23973,
        23998
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3234": {
      "fn": "CultureCoin.pay",
      "offset": [
        24017,
        24023
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 17,
      "value": "0xEA"
    },
    "3236": {
      "fn": "CultureCoin.pay",
      "offset": [
        24017,
        24023
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3237": {
      "fn": "CultureCoin.pay",
      "offset": [
        24017,
        24023
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x100"
    },
    "3240": {
      "fn": "CultureCoin.pay",
      "offset": [
        24017,
        24023
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3241": {
      "fn": "CultureCoin.pay",
      "offset": [
        24017,
        24023
      ],
      "op": "DIV",
      "path": "1"
    },
    "3242": {
      "fn": "CultureCoin.pay",
      "offset": [
        24017,
        24023
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "3244": {
      "fn": "CultureCoin.pay",
      "offset": [
        24017,
        24023
      ],
      "op": "AND",
      "path": "1"
    },
    "3245": {
      "branch": 185,
      "fn": "CultureCoin.pay",
      "offset": [
        24016,
        24023
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "3246": {
      "fn": "CultureCoin.pay",
      "offset": [
        24008,
        24035
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0xCE5"
    },
    "3250": {
      "branch": 185,
      "fn": "CultureCoin.pay",
      "offset": [
        24008,
        24035
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3251": {
      "fn": "CultureCoin.pay",
      "offset": [
        24008,
        24035
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3253": {
      "fn": "CultureCoin.pay",
      "offset": [
        24008,
        24035
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3254": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3258": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3260": {
      "op": "SHL"
    },
    "3261": {
      "fn": "CultureCoin.pay",
      "offset": [
        24008,
        24035
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3262": {
      "fn": "CultureCoin.pay",
      "offset": [
        24008,
        24035
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3263": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3265": {
      "fn": "CultureCoin.pay",
      "offset": [
        24008,
        24035
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "3267": {
      "fn": "CultureCoin.pay",
      "offset": [
        24008,
        24035
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3268": {
      "fn": "CultureCoin.pay",
      "offset": [
        24008,
        24035
      ],
      "op": "ADD",
      "path": "1"
    },
    "3269": {
      "op": "MSTORE"
    },
    "3270": {
      "op": "PUSH1",
      "value": "0x7"
    },
    "3272": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3274": {
      "op": "DUP3"
    },
    "3275": {
      "op": "ADD"
    },
    "3276": {
      "op": "MSTORE"
    },
    "3277": {
      "op": "PUSH7",
      "value": "0x21B637B9B2B217"
    },
    "3285": {
      "op": "PUSH1",
      "value": "0xC9"
    },
    "3287": {
      "op": "SHL"
    },
    "3288": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3290": {
      "op": "DUP3"
    },
    "3291": {
      "op": "ADD"
    },
    "3292": {
      "op": "MSTORE"
    },
    "3293": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3295": {
      "op": "ADD"
    },
    "3296": {
      "fn": "CultureCoin.pay",
      "offset": [
        24008,
        24035
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0xC98"
    },
    "3300": {
      "op": "JUMP"
    },
    "3301": {
      "fn": "CultureCoin.pay",
      "offset": [
        24008,
        24035
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3302": {
      "fn": "CultureCoin.pay",
      "offset": [
        24050,
        24070
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 18,
      "value": "0x40"
    },
    "3304": {
      "fn": "CultureCoin.pay",
      "offset": [
        24050,
        24070
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3305": {
      "fn": "CultureCoin.pay",
      "offset": [
        24060,
        24069
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "3306": {
      "op": "DUP2"
    },
    "3307": {
      "op": "MSTORE"
    },
    "3308": {
      "fn": "CultureCoin.pay",
      "offset": [
        24050,
        24070
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0x19CDFBBC87E2C4F8B08471BB8B544A25603AA3A6037DAB5DD4A660BE7A45B50C"
    },
    "3341": {
      "fn": "CultureCoin.pay",
      "offset": [
        24050,
        24070
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3342": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3344": {
      "op": "ADD"
    },
    "3345": {
      "fn": "CultureCoin.pay",
      "offset": [
        24050,
        24070
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3346": {
      "fn": "CultureCoin.pay",
      "offset": [
        24050,
        24070
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3348": {
      "fn": "CultureCoin.pay",
      "offset": [
        24050,
        24070
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3349": {
      "fn": "CultureCoin.pay",
      "offset": [
        24050,
        24070
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3350": {
      "fn": "CultureCoin.pay",
      "offset": [
        24050,
        24070
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3351": {
      "fn": "CultureCoin.pay",
      "offset": [
        24050,
        24070
      ],
      "op": "SUB",
      "path": "1"
    },
    "3352": {
      "fn": "CultureCoin.pay",
      "offset": [
        24050,
        24070
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3353": {
      "fn": "CultureCoin.pay",
      "offset": [
        24050,
        24070
      ],
      "op": "LOG1",
      "path": "1"
    },
    "3354": {
      "fn": "CultureCoin.pay",
      "offset": [
        24085,
        24094
      ],
      "op": "CALLVALUE",
      "path": "1",
      "statement": 19
    },
    "3355": {
      "fn": "CultureCoin.pay",
      "offset": [
        24080,
        24081
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xCD"
    },
    "3357": {
      "fn": "CultureCoin.pay",
      "offset": [
        24080,
        24081
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3359": {
      "fn": "CultureCoin.pay",
      "offset": [
        24080,
        24094
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3360": {
      "fn": "CultureCoin.pay",
      "offset": [
        24080,
        24094
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3361": {
      "fn": "CultureCoin.pay",
      "offset": [
        24080,
        24094
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3362": {
      "fn": "CultureCoin.pay",
      "offset": [
        24080,
        24094
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0xD2D"
    },
    "3366": {
      "fn": "CultureCoin.pay",
      "offset": [
        24080,
        24094
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3367": {
      "fn": "CultureCoin.pay",
      "offset": [
        24080,
        24094
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3368": {
      "fn": "CultureCoin.pay",
      "offset": [
        24080,
        24094
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x37F7"
    },
    "3372": {
      "fn": "CultureCoin.pay",
      "jump": "i",
      "offset": [
        24080,
        24094
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3373": {
      "fn": "CultureCoin.pay",
      "offset": [
        24080,
        24094
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3374": {
      "fn": "CultureCoin.pay",
      "offset": [
        24080,
        24094
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3375": {
      "fn": "CultureCoin.pay",
      "offset": [
        24080,
        24094
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3376": {
      "fn": "CultureCoin.pay",
      "offset": [
        24080,
        24094
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "3377": {
      "op": "POP"
    },
    "3378": {
      "op": "POP"
    },
    "3379": {
      "fn": "CultureCoin.pay",
      "jump": "o",
      "offset": [
        23931,
        24101
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3380": {
      "fn": "CultureCoin.getCoin",
      "offset": [
        21189,
        21324
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3381": {
      "fn": "CultureCoin.getCoin",
      "offset": [
        21249,
        21256
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3383": {
      "fn": "CultureCoin.getCoin",
      "offset": [
        21257,
        21264
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3384": {
      "fn": "CultureCoin.getCoin",
      "offset": [
        21284,
        21290
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 20,
      "value": "0xDA"
    },
    "3386": {
      "fn": "CultureCoin.getCoin",
      "offset": [
        21291,
        21296
      ],
      "op": "DUP4",
      "path": "1"
    },
    "3387": {
      "fn": "CultureCoin.getCoin",
      "offset": [
        21284,
        21297
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3389": {
      "fn": "CultureCoin.getCoin",
      "offset": [
        21284,
        21297
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3390": {
      "fn": "CultureCoin.getCoin",
      "offset": [
        21284,
        21297
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0xD49"
    },
    "3394": {
      "fn": "CultureCoin.getCoin",
      "offset": [
        21284,
        21297
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3395": {
      "fn": "CultureCoin.getCoin",
      "offset": [
        21284,
        21297
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3396": {
      "fn": "CultureCoin.getCoin",
      "offset": [
        21284,
        21297
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x3812"
    },
    "3400": {
      "fn": "CultureCoin.getCoin",
      "jump": "i",
      "offset": [
        21284,
        21297
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3401": {
      "fn": "CultureCoin.getCoin",
      "offset": [
        21284,
        21297
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3402": {
      "fn": "CultureCoin.getCoin",
      "offset": [
        21284,
        21297
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3403": {
      "fn": "CultureCoin.getCoin",
      "offset": [
        21284,
        21297
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3404": {
      "fn": "CultureCoin.getCoin",
      "offset": [
        21284,
        21297
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3405": {
      "fn": "CultureCoin.getCoin",
      "offset": [
        21284,
        21297
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3407": {
      "fn": "CultureCoin.getCoin",
      "offset": [
        21284,
        21297
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3408": {
      "fn": "CultureCoin.getCoin",
      "offset": [
        21284,
        21297
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3409": {
      "fn": "CultureCoin.getCoin",
      "offset": [
        21284,
        21297
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3410": {
      "fn": "CultureCoin.getCoin",
      "offset": [
        21284,
        21297
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3411": {
      "fn": "CultureCoin.getCoin",
      "offset": [
        21284,
        21297
      ],
      "op": "SUB",
      "path": "1"
    },
    "3412": {
      "fn": "CultureCoin.getCoin",
      "offset": [
        21284,
        21297
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "3414": {
      "fn": "CultureCoin.getCoin",
      "offset": [
        21284,
        21297
      ],
      "op": "ADD",
      "path": "1"
    },
    "3415": {
      "fn": "CultureCoin.getCoin",
      "offset": [
        21284,
        21297
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3416": {
      "fn": "CultureCoin.getCoin",
      "offset": [
        21284,
        21297
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "3417": {
      "fn": "CultureCoin.getCoin",
      "offset": [
        21284,
        21297
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3418": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3420": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3422": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3424": {
      "op": "SHL"
    },
    "3425": {
      "op": "SUB"
    },
    "3426": {
      "fn": "CultureCoin.getCoin",
      "offset": [
        21284,
        21297
      ],
      "op": "AND",
      "path": "1"
    },
    "3427": {
      "fn": "CultureCoin.getCoin",
      "offset": [
        21284,
        21297
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3428": {
      "fn": "CultureCoin.getCoin",
      "offset": [
        21299,
        21309
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xDC"
    },
    "3430": {
      "fn": "CultureCoin.getCoin",
      "offset": [
        21299,
        21309
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3431": {
      "fn": "CultureCoin.getCoin",
      "offset": [
        21299,
        21316
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0xD73"
    },
    "3435": {
      "fn": "CultureCoin.getCoin",
      "offset": [
        21299,
        21316
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3436": {
      "fn": "CultureCoin.getCoin",
      "offset": [
        21310,
        21315
      ],
      "op": "DUP7",
      "path": "1"
    },
    "3437": {
      "fn": "CultureCoin.getCoin",
      "offset": [
        21310,
        21315
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3438": {
      "fn": "CultureCoin.getCoin",
      "offset": [
        21299,
        21316
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x3812"
    },
    "3442": {
      "fn": "CultureCoin.getCoin",
      "jump": "i",
      "offset": [
        21299,
        21316
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3443": {
      "fn": "CultureCoin.getCoin",
      "offset": [
        21299,
        21316
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3444": {
      "fn": "CultureCoin.getCoin",
      "offset": [
        21299,
        21316
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3445": {
      "fn": "CultureCoin.getCoin",
      "offset": [
        21299,
        21316
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3446": {
      "fn": "CultureCoin.getCoin",
      "offset": [
        21299,
        21316
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3447": {
      "fn": "CultureCoin.getCoin",
      "offset": [
        21299,
        21316
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "3449": {
      "fn": "CultureCoin.getCoin",
      "offset": [
        21299,
        21316
      ],
      "op": "ADD",
      "path": "1"
    },
    "3450": {
      "fn": "CultureCoin.getCoin",
      "offset": [
        21299,
        21316
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3452": {
      "fn": "CultureCoin.getCoin",
      "offset": [
        21299,
        21316
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3453": {
      "fn": "CultureCoin.getCoin",
      "offset": [
        21299,
        21316
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3454": {
      "fn": "CultureCoin.getCoin",
      "offset": [
        21299,
        21316
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3455": {
      "fn": "CultureCoin.getCoin",
      "offset": [
        21299,
        21316
      ],
      "op": "SUB",
      "path": "1"
    },
    "3456": {
      "fn": "CultureCoin.getCoin",
      "offset": [
        21299,
        21316
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3457": {
      "fn": "CultureCoin.getCoin",
      "offset": [
        21299,
        21316
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "3458": {
      "fn": "CultureCoin.getCoin",
      "offset": [
        21299,
        21316
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3459": {
      "fn": "CultureCoin.getCoin",
      "offset": [
        21276,
        21317
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3460": {
      "fn": "CultureCoin.getCoin",
      "offset": [
        21276,
        21317
      ],
      "op": "POP",
      "path": "1"
    },
    "3461": {
      "fn": "CultureCoin.getCoin",
      "offset": [
        21276,
        21317
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3462": {
      "fn": "CultureCoin.getCoin",
      "offset": [
        21276,
        21317
      ],
      "op": "POP",
      "path": "1"
    },
    "3463": {
      "fn": "CultureCoin.getCoin",
      "offset": [
        21189,
        21324
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3464": {
      "fn": "CultureCoin.getCoin",
      "offset": [
        21189,
        21324
      ],
      "op": "POP",
      "path": "1"
    },
    "3465": {
      "fn": "CultureCoin.getCoin",
      "offset": [
        21189,
        21324
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3466": {
      "fn": "CultureCoin.getCoin",
      "jump": "o",
      "offset": [
        21189,
        21324
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3467": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5529,
        5815
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3468": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5656,
        5660
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "3470": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        929,
        939
      ],
      "op": "CALLER",
      "path": "20"
    },
    "3471": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5712,
        5750
      ],
      "op": "PUSH3",
      "path": "15",
      "statement": 21,
      "value": "0xD9B"
    },
    "3475": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5728,
        5732
      ],
      "op": "DUP6",
      "path": "15"
    },
    "3476": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        929,
        939
      ],
      "op": "DUP3",
      "path": "20"
    },
    "3477": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5743,
        5749
      ],
      "op": "DUP6",
      "path": "15"
    },
    "3478": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5712,
        5727
      ],
      "op": "PUSH3",
      "path": "15",
      "value": "0x26B3"
    },
    "3482": {
      "fn": "ERC20Upgradeable.transferFrom",
      "jump": "i",
      "offset": [
        5712,
        5750
      ],
      "op": "JUMP",
      "path": "15"
    },
    "3483": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5712,
        5750
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3484": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5760,
        5787
      ],
      "op": "PUSH3",
      "path": "15",
      "statement": 22,
      "value": "0xDA8"
    },
    "3488": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5770,
        5774
      ],
      "op": "DUP6",
      "path": "15"
    },
    "3489": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5776,
        5778
      ],
      "op": "DUP6",
      "path": "15"
    },
    "3490": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5780,
        5786
      ],
      "op": "DUP6",
      "path": "15"
    },
    "3491": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5760,
        5769
      ],
      "op": "PUSH3",
      "path": "15",
      "value": "0x2734"
    },
    "3495": {
      "fn": "ERC20Upgradeable.transferFrom",
      "jump": "i",
      "offset": [
        5760,
        5787
      ],
      "op": "JUMP",
      "path": "15"
    },
    "3496": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5760,
        5787
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3497": {
      "op": "POP"
    },
    "3498": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5804,
        5808
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 23,
      "value": "0x1"
    },
    "3500": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5804,
        5808
      ],
      "op": "SWAP5",
      "path": "15"
    },
    "3501": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5529,
        5815
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "3502": {
      "op": "POP"
    },
    "3503": {
      "op": "POP"
    },
    "3504": {
      "op": "POP"
    },
    "3505": {
      "op": "POP"
    },
    "3506": {
      "fn": "ERC20Upgradeable.transferFrom",
      "jump": "o",
      "offset": [
        5529,
        5815
      ],
      "op": "JUMP",
      "path": "15"
    },
    "3507": {
      "fn": "CultureCoin.concatenate",
      "offset": [
        33956,
        34094
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3508": {
      "fn": "CultureCoin.concatenate",
      "offset": [
        34035,
        34048
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x60"
    },
    "3510": {
      "fn": "CultureCoin.concatenate",
      "offset": [
        34083,
        34085
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 24
    },
    "3511": {
      "fn": "CultureCoin.concatenate",
      "offset": [
        34087,
        34089
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3512": {
      "fn": "CultureCoin.concatenate",
      "offset": [
        34066,
        34090
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3514": {
      "fn": "CultureCoin.concatenate",
      "offset": [
        34066,
        34090
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3515": {
      "fn": "CultureCoin.concatenate",
      "offset": [
        34066,
        34090
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "3517": {
      "fn": "CultureCoin.concatenate",
      "offset": [
        34066,
        34090
      ],
      "op": "ADD",
      "path": "1"
    },
    "3518": {
      "fn": "CultureCoin.concatenate",
      "offset": [
        34066,
        34090
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0xDCA"
    },
    "3522": {
      "fn": "CultureCoin.concatenate",
      "offset": [
        34066,
        34090
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "3523": {
      "fn": "CultureCoin.concatenate",
      "offset": [
        34066,
        34090
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3524": {
      "fn": "CultureCoin.concatenate",
      "offset": [
        34066,
        34090
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3525": {
      "fn": "CultureCoin.concatenate",
      "offset": [
        34066,
        34090
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x3830"
    },
    "3529": {
      "fn": "CultureCoin.concatenate",
      "jump": "i",
      "offset": [
        34066,
        34090
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3530": {
      "fn": "CultureCoin.concatenate",
      "offset": [
        34066,
        34090
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3531": {
      "fn": "CultureCoin.concatenate",
      "offset": [
        34066,
        34090
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3533": {
      "fn": "CultureCoin.concatenate",
      "offset": [
        34066,
        34090
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3534": {
      "fn": "CultureCoin.concatenate",
      "offset": [
        34066,
        34090
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "3536": {
      "fn": "CultureCoin.concatenate",
      "offset": [
        34066,
        34090
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3537": {
      "fn": "CultureCoin.concatenate",
      "offset": [
        34066,
        34090
      ],
      "op": "DUP4",
      "path": "1"
    },
    "3538": {
      "fn": "CultureCoin.concatenate",
      "offset": [
        34066,
        34090
      ],
      "op": "SUB",
      "path": "1"
    },
    "3539": {
      "fn": "CultureCoin.concatenate",
      "offset": [
        34066,
        34090
      ],
      "op": "SUB",
      "path": "1"
    },
    "3540": {
      "fn": "CultureCoin.concatenate",
      "offset": [
        34066,
        34090
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3541": {
      "fn": "CultureCoin.concatenate",
      "offset": [
        34066,
        34090
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3542": {
      "fn": "CultureCoin.concatenate",
      "offset": [
        34066,
        34090
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3543": {
      "fn": "CultureCoin.concatenate",
      "offset": [
        34066,
        34090
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3545": {
      "fn": "CultureCoin.concatenate",
      "offset": [
        34066,
        34090
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3546": {
      "fn": "CultureCoin.concatenate",
      "offset": [
        34052,
        34091
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3547": {
      "fn": "CultureCoin.concatenate",
      "offset": [
        34052,
        34091
      ],
      "op": "POP",
      "path": "1"
    },
    "3548": {
      "fn": "CultureCoin.concatenate",
      "offset": [
        33956,
        34094
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "3549": {
      "fn": "CultureCoin.concatenate",
      "offset": [
        33956,
        34094
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3550": {
      "fn": "CultureCoin.concatenate",
      "offset": [
        33956,
        34094
      ],
      "op": "POP",
      "path": "1"
    },
    "3551": {
      "fn": "CultureCoin.concatenate",
      "offset": [
        33956,
        34094
      ],
      "op": "POP",
      "path": "1"
    },
    "3552": {
      "fn": "CultureCoin.concatenate",
      "jump": "o",
      "offset": [
        33956,
        34094
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3553": {
      "fn": "CultureCoin.getXAllowance",
      "offset": [
        17044,
        17139
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3554": {
      "fn": "CultureCoin.getXAllowance",
      "offset": [
        17091,
        17095
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3556": {
      "fn": "CultureCoin.getXAllowance",
      "offset": [
        17124,
        17132
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 25,
      "value": "0xE6"
    },
    "3558": {
      "fn": "CultureCoin.getXAllowance",
      "offset": [
        17124,
        17132
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3559": {
      "fn": "CultureCoin.getXAllowance",
      "offset": [
        17114,
        17121
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xE4"
    },
    "3561": {
      "fn": "CultureCoin.getXAllowance",
      "offset": [
        17114,
        17121
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3562": {
      "fn": "CultureCoin.getXAllowance",
      "offset": [
        17114,
        17132
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0xDF5"
    },
    "3566": {
      "fn": "CultureCoin.getXAllowance",
      "offset": [
        17114,
        17132
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3567": {
      "fn": "CultureCoin.getXAllowance",
      "offset": [
        17114,
        17132
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3568": {
      "fn": "CultureCoin.getXAllowance",
      "offset": [
        17114,
        17132
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x3863"
    },
    "3572": {
      "fn": "CultureCoin.getXAllowance",
      "jump": "i",
      "offset": [
        17114,
        17132
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3573": {
      "fn": "CultureCoin.getXAllowance",
      "offset": [
        17114,
        17132
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3574": {
      "fn": "CultureCoin.getXAllowance",
      "offset": [
        17107,
        17132
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3575": {
      "fn": "CultureCoin.getXAllowance",
      "offset": [
        17107,
        17132
      ],
      "op": "POP",
      "path": "1"
    },
    "3576": {
      "fn": "CultureCoin.getXAllowance",
      "offset": [
        17044,
        17139
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3577": {
      "fn": "CultureCoin.getXAllowance",
      "jump": "o",
      "offset": [
        17044,
        17139
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3578": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6210,
        6444
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3579": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6298,
        6302
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "3581": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        929,
        939
      ],
      "op": "CALLER",
      "path": "20"
    },
    "3582": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6352,
        6416
      ],
      "op": "PUSH3",
      "path": "15",
      "statement": 26,
      "value": "0xC22"
    },
    "3586": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        929,
        939
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3587": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6368,
        6375
      ],
      "op": "DUP6",
      "path": "15"
    },
    "3588": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6405,
        6415
      ],
      "op": "DUP6",
      "path": "15"
    },
    "3589": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6402
      ],
      "op": "PUSH3",
      "path": "15",
      "value": "0xE10"
    },
    "3593": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        929,
        939
      ],
      "op": "DUP4",
      "path": "20"
    },
    "3594": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6368,
        6375
      ],
      "op": "DUP4",
      "path": "15"
    },
    "3595": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6386
      ],
      "op": "PUSH3",
      "path": "15",
      "value": "0x2164"
    },
    "3599": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "jump": "i",
      "offset": [
        6377,
        6402
      ],
      "op": "JUMP",
      "path": "15"
    },
    "3600": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6402
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3601": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6415
      ],
      "op": "PUSH3",
      "path": "15",
      "value": "0xE1C"
    },
    "3605": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6415
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "3606": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6415
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3607": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6415
      ],
      "op": "PUSH3",
      "path": "15",
      "value": "0x37F7"
    },
    "3611": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "jump": "i",
      "offset": [
        6377,
        6415
      ],
      "op": "JUMP",
      "path": "15"
    },
    "3612": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6377,
        6415
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3613": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6352,
        6360
      ],
      "op": "PUSH3",
      "path": "15",
      "value": "0x258B"
    },
    "3617": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "jump": "i",
      "offset": [
        6352,
        6416
      ],
      "op": "JUMP",
      "path": "15"
    },
    "3618": {
      "fn": "CultureCoin.getSeed",
      "offset": [
        34699,
        34766
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3619": {
      "fn": "CultureCoin.getSeed",
      "offset": [
        34747,
        34758
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 27,
      "value": "0xEE"
    },
    "3621": {
      "fn": "CultureCoin.getSeed",
      "offset": [
        34747,
        34758
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3622": {
      "fn": "CultureCoin.getSeed",
      "offset": [
        34742,
        34759
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3624": {
      "fn": "CultureCoin.getSeed",
      "offset": [
        34742,
        34759
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3625": {
      "fn": "CultureCoin.getSeed",
      "offset": [
        34742,
        34759
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0xD1C8FE98F1F49786133C2B0BEC4CDDF9F73586849F7102495587F0434FEEECD"
    },
    "3658": {
      "fn": "CultureCoin.getSeed",
      "offset": [
        34742,
        34759
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3659": {
      "fn": "CultureCoin.getSeed",
      "offset": [
        34742,
        34759
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0xE61"
    },
    "3663": {
      "fn": "CultureCoin.getSeed",
      "offset": [
        34742,
        34759
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3664": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3666": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3668": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3670": {
      "op": "SHL"
    },
    "3671": {
      "op": "SUB"
    },
    "3672": {
      "fn": "CultureCoin.getSeed",
      "offset": [
        34747,
        34758
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3673": {
      "fn": "CultureCoin.getSeed",
      "offset": [
        34747,
        34758
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3674": {
      "fn": "CultureCoin.getSeed",
      "offset": [
        34747,
        34758
      ],
      "op": "AND",
      "path": "1"
    },
    "3675": {
      "fn": "CultureCoin.getSeed",
      "offset": [
        34747,
        34758
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3676": {
      "fn": "CultureCoin.getSeed",
      "offset": [
        34742,
        34759
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x340C"
    },
    "3680": {
      "fn": "CultureCoin.getSeed",
      "jump": "i",
      "offset": [
        34742,
        34759
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3681": {
      "fn": "CultureCoin.getSeed",
      "offset": [
        34742,
        34759
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3682": {
      "fn": "CultureCoin.getSeed",
      "offset": [
        34742,
        34759
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3684": {
      "fn": "CultureCoin.getSeed",
      "offset": [
        34742,
        34759
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3685": {
      "fn": "CultureCoin.getSeed",
      "offset": [
        34742,
        34759
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3686": {
      "fn": "CultureCoin.getSeed",
      "offset": [
        34742,
        34759
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3687": {
      "fn": "CultureCoin.getSeed",
      "offset": [
        34742,
        34759
      ],
      "op": "SUB",
      "path": "1"
    },
    "3688": {
      "fn": "CultureCoin.getSeed",
      "offset": [
        34742,
        34759
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3689": {
      "fn": "CultureCoin.getSeed",
      "offset": [
        34742,
        34759
      ],
      "op": "LOG1",
      "path": "1"
    },
    "3690": {
      "fn": "CultureCoin.getSeed",
      "jump": "o",
      "offset": [
        34699,
        34766
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3691": {
      "fn": "CultureCoin.cloneMoney",
      "offset": [
        24106,
        24350
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3692": {
      "offset": [
        1815,
        1816
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x2"
    },
    "3694": {
      "offset": [
        2569,
        2576
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x9A"
    },
    "3696": {
      "fn": "CultureCoin.cloneMoney",
      "offset": [
        2569,
        2576
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "3697": {
      "offset": [
        2569,
        2588
      ],
      "op": "EQ",
      "path": "14"
    },
    "3698": {
      "fn": "CultureCoin.cloneMoney",
      "offset": [
        2569,
        2588
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "3699": {
      "offset": [
        2561,
        2624
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0xE91"
    },
    "3703": {
      "offset": [
        2561,
        2624
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "3704": {
      "fn": "CultureCoin.cloneMoney",
      "offset": [
        2561,
        2624
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "3706": {
      "fn": "CultureCoin.cloneMoney",
      "offset": [
        2561,
        2624
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "3707": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3711": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3713": {
      "op": "SHL"
    },
    "3714": {
      "offset": [
        2561,
        2624
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3715": {
      "fn": "CultureCoin.cloneMoney",
      "offset": [
        2561,
        2624
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3716": {
      "fn": "CultureCoin.cloneMoney",
      "offset": [
        2561,
        2624
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "3718": {
      "fn": "CultureCoin.cloneMoney",
      "offset": [
        2561,
        2624
      ],
      "op": "ADD",
      "path": "14"
    },
    "3719": {
      "fn": "CultureCoin.cloneMoney",
      "offset": [
        2561,
        2624
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0xC98"
    },
    "3723": {
      "fn": "CultureCoin.cloneMoney",
      "offset": [
        2561,
        2624
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3724": {
      "fn": "CultureCoin.cloneMoney",
      "offset": [
        2561,
        2624
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x387D"
    },
    "3728": {
      "fn": "CultureCoin.cloneMoney",
      "jump": "i",
      "offset": [
        2561,
        2624
      ],
      "op": "JUMP",
      "path": "14"
    },
    "3729": {
      "fn": "CultureCoin.cloneMoney",
      "offset": [
        2561,
        2624
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3730": {
      "offset": [
        1815,
        1816
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x2"
    },
    "3732": {
      "offset": [
        2699,
        2706
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x9A"
    },
    "3734": {
      "offset": [
        2699,
        2717
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "3735": {
      "fn": "CultureCoin.cloneMoney",
      "offset": [
        24251,
        24258
      ],
      "op": "PUSH3",
      "path": "1",
      "statement": 28,
      "value": "0xEA0"
    },
    "3739": {
      "fn": "CultureCoin.cloneMoney",
      "offset": [
        24251,
        24256
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0xC2C"
    },
    "3743": {
      "fn": "CultureCoin.cloneMoney",
      "jump": "i",
      "offset": [
        24251,
        24258
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3744": {
      "fn": "CultureCoin.cloneMoney",
      "offset": [
        24251,
        24258
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3745": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3747": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3749": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3751": {
      "op": "SHL"
    },
    "3752": {
      "op": "SUB"
    },
    "3753": {
      "fn": "CultureCoin.cloneMoney",
      "offset": [
        24237,
        24258
      ],
      "op": "AND",
      "path": "1"
    },
    "3754": {
      "fn": "CultureCoin.cloneMoney",
      "offset": [
        24237,
        24247
      ],
      "op": "CALLER",
      "path": "1"
    },
    "3755": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3757": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3759": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3761": {
      "op": "SHL"
    },
    "3762": {
      "op": "SUB"
    },
    "3763": {
      "fn": "CultureCoin.cloneMoney",
      "offset": [
        24237,
        24258
      ],
      "op": "AND",
      "path": "1"
    },
    "3764": {
      "branch": 186,
      "fn": "CultureCoin.cloneMoney",
      "offset": [
        24237,
        24258
      ],
      "op": "EQ",
      "path": "1"
    },
    "3765": {
      "fn": "CultureCoin.cloneMoney",
      "offset": [
        24229,
        24279
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0xEF5"
    },
    "3769": {
      "branch": 186,
      "fn": "CultureCoin.cloneMoney",
      "offset": [
        24229,
        24279
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3770": {
      "fn": "CultureCoin.cloneMoney",
      "offset": [
        24229,
        24279
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3772": {
      "fn": "CultureCoin.cloneMoney",
      "offset": [
        24229,
        24279
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3773": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3777": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3779": {
      "op": "SHL"
    },
    "3780": {
      "fn": "CultureCoin.cloneMoney",
      "offset": [
        24229,
        24279
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3781": {
      "fn": "CultureCoin.cloneMoney",
      "offset": [
        24229,
        24279
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3782": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3784": {
      "fn": "CultureCoin.cloneMoney",
      "offset": [
        24229,
        24279
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "3786": {
      "fn": "CultureCoin.cloneMoney",
      "offset": [
        24229,
        24279
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3787": {
      "fn": "CultureCoin.cloneMoney",
      "offset": [
        24229,
        24279
      ],
      "op": "ADD",
      "path": "1"
    },
    "3788": {
      "op": "MSTORE"
    },
    "3789": {
      "op": "PUSH1",
      "value": "0x10"
    },
    "3791": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3793": {
      "op": "DUP3"
    },
    "3794": {
      "op": "ADD"
    },
    "3795": {
      "op": "MSTORE"
    },
    "3796": {
      "op": "PUSH16",
      "value": "0x2CB7BA9030B93290309031B637B73297"
    },
    "3813": {
      "op": "PUSH1",
      "value": "0x81"
    },
    "3815": {
      "op": "SHL"
    },
    "3816": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3818": {
      "op": "DUP3"
    },
    "3819": {
      "op": "ADD"
    },
    "3820": {
      "op": "MSTORE"
    },
    "3821": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3823": {
      "op": "ADD"
    },
    "3824": {
      "fn": "CultureCoin.cloneMoney",
      "offset": [
        24229,
        24279
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0xC98"
    },
    "3828": {
      "op": "JUMP"
    },
    "3829": {
      "fn": "CultureCoin.cloneMoney",
      "offset": [
        24229,
        24279
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3830": {
      "fn": "CultureCoin.cloneMoney",
      "offset": [
        24294,
        24300
      ],
      "op": "DUP1",
      "path": "1",
      "statement": 29
    },
    "3831": {
      "fn": "CultureCoin.cloneMoney",
      "offset": [
        24289,
        24290
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xCD"
    },
    "3833": {
      "fn": "CultureCoin.cloneMoney",
      "offset": [
        24289,
        24290
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3835": {
      "fn": "CultureCoin.cloneMoney",
      "offset": [
        24289,
        24300
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3836": {
      "fn": "CultureCoin.cloneMoney",
      "offset": [
        24289,
        24300
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3837": {
      "fn": "CultureCoin.cloneMoney",
      "offset": [
        24289,
        24300
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3838": {
      "fn": "CultureCoin.cloneMoney",
      "offset": [
        24289,
        24300
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0xF09"
    },
    "3842": {
      "fn": "CultureCoin.cloneMoney",
      "offset": [
        24289,
        24300
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3843": {
      "fn": "CultureCoin.cloneMoney",
      "offset": [
        24289,
        24300
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3844": {
      "fn": "CultureCoin.cloneMoney",
      "offset": [
        24289,
        24300
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x3863"
    },
    "3848": {
      "fn": "CultureCoin.cloneMoney",
      "jump": "i",
      "offset": [
        24289,
        24300
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3849": {
      "fn": "CultureCoin.cloneMoney",
      "offset": [
        24289,
        24300
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3850": {
      "fn": "CultureCoin.cloneMoney",
      "offset": [
        24289,
        24300
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3851": {
      "fn": "CultureCoin.cloneMoney",
      "offset": [
        24289,
        24300
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3852": {
      "fn": "CultureCoin.cloneMoney",
      "offset": [
        24289,
        24300
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "3853": {
      "op": "POP"
    },
    "3854": {
      "fn": "CultureCoin.cloneMoney",
      "offset": [
        24318,
        24325
      ],
      "op": "PUSH3",
      "path": "1",
      "statement": 30,
      "value": "0xF19"
    },
    "3858": {
      "fn": "CultureCoin.cloneMoney",
      "offset": [
        24318,
        24325
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3859": {
      "op": "POP"
    },
    "3860": {
      "fn": "CultureCoin.cloneMoney",
      "offset": [
        24318,
        24323
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0xC2C"
    },
    "3864": {
      "fn": "CultureCoin.cloneMoney",
      "jump": "i",
      "offset": [
        24318,
        24325
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3865": {
      "fn": "CultureCoin.cloneMoney",
      "offset": [
        24318,
        24325
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3866": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3868": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3870": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3872": {
      "op": "SHL"
    },
    "3873": {
      "op": "SUB"
    },
    "3874": {
      "fn": "CultureCoin.cloneMoney",
      "offset": [
        24310,
        24335
      ],
      "op": "AND",
      "path": "1"
    },
    "3875": {
      "fn": "CultureCoin.cloneMoney",
      "offset": [
        24310,
        24343
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x8FC"
    },
    "3878": {
      "fn": "CultureCoin.cloneMoney",
      "offset": [
        24336,
        24342
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3879": {
      "fn": "CultureCoin.cloneMoney",
      "offset": [
        24310,
        24343
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3880": {
      "fn": "CultureCoin.cloneMoney",
      "offset": [
        24310,
        24343
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3881": {
      "fn": "CultureCoin.cloneMoney",
      "offset": [
        24310,
        24343
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "3882": {
      "fn": "CultureCoin.cloneMoney",
      "offset": [
        24310,
        24343
      ],
      "op": "MUL",
      "path": "1"
    },
    "3883": {
      "fn": "CultureCoin.cloneMoney",
      "offset": [
        24310,
        24343
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3884": {
      "fn": "CultureCoin.cloneMoney",
      "offset": [
        24310,
        24343
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3886": {
      "fn": "CultureCoin.cloneMoney",
      "offset": [
        24310,
        24343
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3887": {
      "fn": "CultureCoin.cloneMoney",
      "offset": [
        24310,
        24343
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3889": {
      "fn": "CultureCoin.cloneMoney",
      "offset": [
        24310,
        24343
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3891": {
      "fn": "CultureCoin.cloneMoney",
      "offset": [
        24310,
        24343
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3892": {
      "fn": "CultureCoin.cloneMoney",
      "offset": [
        24310,
        24343
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3893": {
      "fn": "CultureCoin.cloneMoney",
      "offset": [
        24310,
        24343
      ],
      "op": "DUP4",
      "path": "1"
    },
    "3894": {
      "fn": "CultureCoin.cloneMoney",
      "offset": [
        24310,
        24343
      ],
      "op": "SUB",
      "path": "1"
    },
    "3895": {
      "fn": "CultureCoin.cloneMoney",
      "offset": [
        24310,
        24343
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3896": {
      "fn": "CultureCoin.cloneMoney",
      "offset": [
        24310,
        24343
      ],
      "op": "DUP6",
      "path": "1"
    },
    "3897": {
      "fn": "CultureCoin.cloneMoney",
      "offset": [
        24310,
        24343
      ],
      "op": "DUP9",
      "path": "1"
    },
    "3898": {
      "fn": "CultureCoin.cloneMoney",
      "offset": [
        24310,
        24343
      ],
      "op": "DUP9",
      "path": "1"
    },
    "3899": {
      "fn": "CultureCoin.cloneMoney",
      "offset": [
        24310,
        24343
      ],
      "op": "CALL",
      "path": "1"
    },
    "3900": {
      "fn": "CultureCoin.cloneMoney",
      "offset": [
        24310,
        24343
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "3901": {
      "fn": "CultureCoin.cloneMoney",
      "offset": [
        24310,
        24343
      ],
      "op": "POP",
      "path": "1"
    },
    "3902": {
      "fn": "CultureCoin.cloneMoney",
      "offset": [
        24310,
        24343
      ],
      "op": "POP",
      "path": "1"
    },
    "3903": {
      "fn": "CultureCoin.cloneMoney",
      "offset": [
        24310,
        24343
      ],
      "op": "POP",
      "path": "1"
    },
    "3904": {
      "fn": "CultureCoin.cloneMoney",
      "offset": [
        24310,
        24343
      ],
      "op": "POP",
      "path": "1"
    },
    "3905": {
      "fn": "CultureCoin.cloneMoney",
      "offset": [
        24310,
        24343
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "3906": {
      "fn": "CultureCoin.cloneMoney",
      "offset": [
        24310,
        24343
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3907": {
      "fn": "CultureCoin.cloneMoney",
      "offset": [
        24310,
        24343
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "3908": {
      "fn": "CultureCoin.cloneMoney",
      "offset": [
        24310,
        24343
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0xF52"
    },
    "3912": {
      "fn": "CultureCoin.cloneMoney",
      "offset": [
        24310,
        24343
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3913": {
      "fn": "CultureCoin.cloneMoney",
      "offset": [
        24310,
        24343
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "3914": {
      "fn": "CultureCoin.cloneMoney",
      "offset": [
        24310,
        24343
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3916": {
      "fn": "CultureCoin.cloneMoney",
      "offset": [
        24310,
        24343
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3917": {
      "fn": "CultureCoin.cloneMoney",
      "offset": [
        24310,
        24343
      ],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "3918": {
      "fn": "CultureCoin.cloneMoney",
      "offset": [
        24310,
        24343
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "3919": {
      "fn": "CultureCoin.cloneMoney",
      "offset": [
        24310,
        24343
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3921": {
      "fn": "CultureCoin.cloneMoney",
      "offset": [
        24310,
        24343
      ],
      "op": "REVERT",
      "path": "1"
    },
    "3922": {
      "fn": "CultureCoin.cloneMoney",
      "offset": [
        24310,
        24343
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3923": {
      "op": "POP"
    },
    "3924": {
      "op": "POP"
    },
    "3925": {
      "offset": [
        1772,
        1773
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1"
    },
    "3927": {
      "offset": [
        2872,
        2879
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x9A"
    },
    "3929": {
      "offset": [
        2872,
        2894
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "3930": {
      "fn": "CultureCoin.cloneMoney",
      "jump": "o",
      "offset": [
        24106,
        24350
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3931": {
      "fn": "ERC20BurnableUpgradeable.burn",
      "offset": [
        848,
        937
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "3932": {
      "fn": "ERC20BurnableUpgradeable.burn",
      "offset": [
        903,
        930
      ],
      "op": "PUSH3",
      "path": "17",
      "statement": 31,
      "value": "0xF67"
    },
    "3936": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        929,
        939
      ],
      "op": "CALLER",
      "path": "20"
    },
    "3937": {
      "fn": "ERC20BurnableUpgradeable.burn",
      "offset": [
        923,
        929
      ],
      "op": "DUP3",
      "path": "17"
    },
    "3938": {
      "fn": "ERC20BurnableUpgradeable.burn",
      "offset": [
        903,
        908
      ],
      "op": "PUSH3",
      "path": "17",
      "value": "0x28FB"
    },
    "3942": {
      "fn": "ERC20BurnableUpgradeable.burn",
      "jump": "i",
      "offset": [
        903,
        930
      ],
      "op": "JUMP",
      "path": "17"
    },
    "3943": {
      "fn": "ERC20BurnableUpgradeable.burn",
      "offset": [
        903,
        930
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "3944": {
      "fn": "ERC20BurnableUpgradeable.burn",
      "offset": [
        848,
        937
      ],
      "op": "POP",
      "path": "17"
    },
    "3945": {
      "fn": "ERC20BurnableUpgradeable.burn",
      "jump": "o",
      "offset": [
        848,
        937
      ],
      "op": "JUMP",
      "path": "17"
    },
    "3946": {
      "fn": "CultureCoin.close",
      "offset": [
        20164,
        20886
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3947": {
      "fn": "CultureCoin.close",
      "offset": [
        20209,
        20214
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 32,
      "value": "0xEA"
    },
    "3949": {
      "fn": "CultureCoin.close",
      "offset": [
        20209,
        20214
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3950": {
      "fn": "CultureCoin.close",
      "offset": [
        20209,
        20214
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "3952": {
      "fn": "CultureCoin.close",
      "offset": [
        20209,
        20214
      ],
      "op": "AND",
      "path": "1"
    },
    "3953": {
      "branch": 187,
      "fn": "CultureCoin.close",
      "offset": [
        20208,
        20214
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "3954": {
      "fn": "CultureCoin.close",
      "offset": [
        20200,
        20245
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0xFBF"
    },
    "3958": {
      "branch": 187,
      "fn": "CultureCoin.close",
      "offset": [
        20200,
        20245
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3959": {
      "fn": "CultureCoin.close",
      "offset": [
        20200,
        20245
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3961": {
      "fn": "CultureCoin.close",
      "offset": [
        20200,
        20245
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3962": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3966": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3968": {
      "op": "SHL"
    },
    "3969": {
      "fn": "CultureCoin.close",
      "offset": [
        20200,
        20245
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3970": {
      "fn": "CultureCoin.close",
      "offset": [
        20200,
        20245
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3971": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3973": {
      "fn": "CultureCoin.close",
      "offset": [
        20200,
        20245
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "3975": {
      "fn": "CultureCoin.close",
      "offset": [
        20200,
        20245
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3976": {
      "fn": "CultureCoin.close",
      "offset": [
        20200,
        20245
      ],
      "op": "ADD",
      "path": "1"
    },
    "3977": {
      "op": "MSTORE"
    },
    "3978": {
      "op": "PUSH1",
      "value": "0x1A"
    },
    "3980": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3982": {
      "op": "DUP3"
    },
    "3983": {
      "op": "ADD"
    },
    "3984": {
      "op": "MSTORE"
    },
    "3985": {
      "op": "PUSH32",
      "value": "0x596F752063616E206E6F7420636C6F7365206120627269636B2E000000000000"
    },
    "4018": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4020": {
      "op": "DUP3"
    },
    "4021": {
      "op": "ADD"
    },
    "4022": {
      "op": "MSTORE"
    },
    "4023": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4025": {
      "op": "ADD"
    },
    "4026": {
      "fn": "CultureCoin.close",
      "offset": [
        20200,
        20245
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0xC98"
    },
    "4030": {
      "op": "JUMP"
    },
    "4031": {
      "fn": "CultureCoin.close",
      "offset": [
        20200,
        20245
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4032": {
      "fn": "CultureCoin.close",
      "offset": [
        20264,
        20270
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 33,
      "value": "0xEA"
    },
    "4034": {
      "fn": "CultureCoin.close",
      "offset": [
        20264,
        20270
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "4035": {
      "fn": "CultureCoin.close",
      "offset": [
        20264,
        20270
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x100"
    },
    "4038": {
      "fn": "CultureCoin.close",
      "offset": [
        20264,
        20270
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4039": {
      "fn": "CultureCoin.close",
      "offset": [
        20264,
        20270
      ],
      "op": "DIV",
      "path": "1"
    },
    "4040": {
      "fn": "CultureCoin.close",
      "offset": [
        20264,
        20270
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "4042": {
      "fn": "CultureCoin.close",
      "offset": [
        20264,
        20270
      ],
      "op": "AND",
      "path": "1"
    },
    "4043": {
      "branch": 188,
      "fn": "CultureCoin.close",
      "offset": [
        20263,
        20270
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "4044": {
      "fn": "CultureCoin.close",
      "offset": [
        20255,
        20309
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x1024"
    },
    "4048": {
      "branch": 188,
      "fn": "CultureCoin.close",
      "offset": [
        20255,
        20309
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "4049": {
      "fn": "CultureCoin.close",
      "offset": [
        20255,
        20309
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "4051": {
      "fn": "CultureCoin.close",
      "offset": [
        20255,
        20309
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "4052": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4056": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4058": {
      "op": "SHL"
    },
    "4059": {
      "fn": "CultureCoin.close",
      "offset": [
        20255,
        20309
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4060": {
      "fn": "CultureCoin.close",
      "offset": [
        20255,
        20309
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4061": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4063": {
      "fn": "CultureCoin.close",
      "offset": [
        20255,
        20309
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "4065": {
      "fn": "CultureCoin.close",
      "offset": [
        20255,
        20309
      ],
      "op": "DUP3",
      "path": "1"
    },
    "4066": {
      "fn": "CultureCoin.close",
      "offset": [
        20255,
        20309
      ],
      "op": "ADD",
      "path": "1"
    },
    "4067": {
      "op": "MSTORE"
    },
    "4068": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "4070": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4072": {
      "op": "DUP3"
    },
    "4073": {
      "op": "ADD"
    },
    "4074": {
      "op": "MSTORE"
    },
    "4075": {
      "op": "PUSH32",
      "value": "0x596F752063616E206E6F7420636C6F73653A20416C726561647920636C6F7365"
    },
    "4108": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4110": {
      "op": "DUP3"
    },
    "4111": {
      "op": "ADD"
    },
    "4112": {
      "op": "MSTORE"
    },
    "4113": {
      "op": "PUSH2",
      "value": "0x3217"
    },
    "4116": {
      "op": "PUSH1",
      "value": "0xF1"
    },
    "4118": {
      "op": "SHL"
    },
    "4119": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4121": {
      "op": "DUP3"
    },
    "4122": {
      "op": "ADD"
    },
    "4123": {
      "op": "MSTORE"
    },
    "4124": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4126": {
      "op": "ADD"
    },
    "4127": {
      "fn": "CultureCoin.close",
      "offset": [
        20255,
        20309
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0xC98"
    },
    "4131": {
      "op": "JUMP"
    },
    "4132": {
      "fn": "CultureCoin.close",
      "offset": [
        20255,
        20309
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4133": {
      "fn": "CultureCoin.close",
      "offset": [
        20328,
        20338
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 34,
      "value": "0xEA"
    },
    "4135": {
      "fn": "CultureCoin.close",
      "offset": [
        20328,
        20338
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "4136": {
      "fn": "CultureCoin.close",
      "offset": [
        20328,
        20338
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x10000"
    },
    "4140": {
      "fn": "CultureCoin.close",
      "offset": [
        20328,
        20338
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4141": {
      "fn": "CultureCoin.close",
      "offset": [
        20328,
        20338
      ],
      "op": "DIV",
      "path": "1"
    },
    "4142": {
      "fn": "CultureCoin.close",
      "offset": [
        20328,
        20338
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "4144": {
      "fn": "CultureCoin.close",
      "offset": [
        20328,
        20338
      ],
      "op": "AND",
      "path": "1"
    },
    "4145": {
      "branch": 189,
      "fn": "CultureCoin.close",
      "offset": [
        20327,
        20338
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "4146": {
      "fn": "CultureCoin.close",
      "offset": [
        20319,
        20373
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x107F"
    },
    "4150": {
      "branch": 189,
      "fn": "CultureCoin.close",
      "offset": [
        20319,
        20373
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "4151": {
      "fn": "CultureCoin.close",
      "offset": [
        20319,
        20373
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "4153": {
      "fn": "CultureCoin.close",
      "offset": [
        20319,
        20373
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "4154": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4158": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4160": {
      "op": "SHL"
    },
    "4161": {
      "fn": "CultureCoin.close",
      "offset": [
        20319,
        20373
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4162": {
      "fn": "CultureCoin.close",
      "offset": [
        20319,
        20373
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4163": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4165": {
      "fn": "CultureCoin.close",
      "offset": [
        20319,
        20373
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "4167": {
      "fn": "CultureCoin.close",
      "offset": [
        20319,
        20373
      ],
      "op": "DUP3",
      "path": "1"
    },
    "4168": {
      "fn": "CultureCoin.close",
      "offset": [
        20319,
        20373
      ],
      "op": "ADD",
      "path": "1"
    },
    "4169": {
      "op": "MSTORE"
    },
    "4170": {
      "op": "PUSH1",
      "value": "0x1E"
    },
    "4172": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4174": {
      "op": "DUP3"
    },
    "4175": {
      "op": "ADD"
    },
    "4176": {
      "op": "MSTORE"
    },
    "4177": {
      "op": "PUSH32",
      "value": "0x596F752063616E206E6F7420636C6F73653A204D6574617374616B65642E0000"
    },
    "4210": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4212": {
      "op": "DUP3"
    },
    "4213": {
      "op": "ADD"
    },
    "4214": {
      "op": "MSTORE"
    },
    "4215": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4217": {
      "op": "ADD"
    },
    "4218": {
      "fn": "CultureCoin.close",
      "offset": [
        20319,
        20373
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0xC98"
    },
    "4222": {
      "op": "JUMP"
    },
    "4223": {
      "fn": "CultureCoin.close",
      "offset": [
        20319,
        20373
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4224": {
      "fn": "CultureCoin.close",
      "offset": [
        20405,
        20408
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 35,
      "value": "0xD5"
    },
    "4226": {
      "fn": "CultureCoin.close",
      "offset": [
        20405,
        20408
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "4227": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4229": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4231": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4233": {
      "op": "SHL"
    },
    "4234": {
      "op": "SUB"
    },
    "4235": {
      "fn": "CultureCoin.close",
      "offset": [
        20405,
        20408
      ],
      "op": "AND",
      "path": "1"
    },
    "4236": {
      "fn": "CultureCoin.close",
      "offset": [
        20391,
        20401
      ],
      "op": "CALLER",
      "path": "1"
    },
    "4237": {
      "branch": 190,
      "fn": "CultureCoin.close",
      "offset": [
        20391,
        20408
      ],
      "op": "EQ",
      "path": "1"
    },
    "4238": {
      "fn": "CultureCoin.close",
      "offset": [
        20383,
        20423
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x10C8"
    },
    "4242": {
      "branch": 190,
      "fn": "CultureCoin.close",
      "offset": [
        20383,
        20423
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "4243": {
      "fn": "CultureCoin.close",
      "offset": [
        20383,
        20423
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "4245": {
      "fn": "CultureCoin.close",
      "offset": [
        20383,
        20423
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "4246": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4250": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4252": {
      "op": "SHL"
    },
    "4253": {
      "fn": "CultureCoin.close",
      "offset": [
        20383,
        20423
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4254": {
      "fn": "CultureCoin.close",
      "offset": [
        20383,
        20423
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4255": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4257": {
      "fn": "CultureCoin.close",
      "offset": [
        20383,
        20423
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "4259": {
      "fn": "CultureCoin.close",
      "offset": [
        20383,
        20423
      ],
      "op": "DUP3",
      "path": "1"
    },
    "4260": {
      "fn": "CultureCoin.close",
      "offset": [
        20383,
        20423
      ],
      "op": "ADD",
      "path": "1"
    },
    "4261": {
      "op": "MSTORE"
    },
    "4262": {
      "op": "PUSH1",
      "value": "0xA"
    },
    "4264": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4266": {
      "op": "DUP3"
    },
    "4267": {
      "op": "ADD"
    },
    "4268": {
      "op": "MSTORE"
    },
    "4269": {
      "op": "PUSH10",
      "value": "0x2737BA1037BBB732B917"
    },
    "4280": {
      "op": "PUSH1",
      "value": "0xB1"
    },
    "4282": {
      "op": "SHL"
    },
    "4283": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4285": {
      "op": "DUP3"
    },
    "4286": {
      "op": "ADD"
    },
    "4287": {
      "op": "MSTORE"
    },
    "4288": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4290": {
      "op": "ADD"
    },
    "4291": {
      "fn": "CultureCoin.close",
      "offset": [
        20383,
        20423
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0xC98"
    },
    "4295": {
      "op": "JUMP"
    },
    "4296": {
      "fn": "CultureCoin.close",
      "offset": [
        20383,
        20423
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4297": {
      "fn": "CultureCoin.close",
      "offset": [
        20778,
        20784
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 36,
      "value": "0xEA"
    },
    "4299": {
      "fn": "CultureCoin.close",
      "offset": [
        20778,
        20791
      ],
      "op": "DUP1",
      "path": "1"
    },
    "4300": {
      "fn": "CultureCoin.close",
      "offset": [
        20778,
        20791
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "4301": {
      "op": "PUSH2",
      "value": "0xFF00"
    },
    "4304": {
      "op": "NOT"
    },
    "4305": {
      "fn": "CultureCoin.close",
      "offset": [
        20778,
        20791
      ],
      "op": "AND",
      "path": "1"
    },
    "4306": {
      "fn": "CultureCoin.close",
      "offset": [
        20778,
        20791
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x100"
    },
    "4309": {
      "fn": "CultureCoin.close",
      "offset": [
        20778,
        20791
      ],
      "op": "OR",
      "path": "1"
    },
    "4310": {
      "fn": "CultureCoin.close",
      "offset": [
        20778,
        20791
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4311": {
      "fn": "CultureCoin.close",
      "offset": [
        20778,
        20791
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "4312": {
      "fn": "CultureCoin.close",
      "offset": [
        20806,
        20879
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 37,
      "value": "0x40"
    },
    "4314": {
      "fn": "CultureCoin.close",
      "offset": [
        20806,
        20879
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "4315": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4317": {
      "op": "DUP1"
    },
    "4318": {
      "op": "MLOAD"
    },
    "4319": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4321": {
      "op": "PUSH3",
      "value": "0x5700"
    },
    "4325": {
      "op": "DUP4"
    },
    "4326": {
      "op": "CODECOPY"
    },
    "4327": {
      "op": "DUP2"
    },
    "4328": {
      "op": "MLOAD"
    },
    "4329": {
      "op": "SWAP2"
    },
    "4330": {
      "op": "MSTORE"
    },
    "4331": {
      "fn": "CultureCoin.close",
      "offset": [
        20806,
        20879
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4332": {
      "fn": "CultureCoin.close",
      "offset": [
        20806,
        20879
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0xE61"
    },
    "4336": {
      "fn": "CultureCoin.close",
      "offset": [
        20806,
        20879
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4337": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4339": {
      "op": "DUP1"
    },
    "4340": {
      "op": "DUP3"
    },
    "4341": {
      "op": "MSTORE"
    },
    "4342": {
      "op": "PUSH1",
      "value": "0x3C"
    },
    "4344": {
      "op": "SWAP1"
    },
    "4345": {
      "op": "DUP3"
    },
    "4346": {
      "op": "ADD"
    },
    "4347": {
      "op": "MSTORE"
    },
    "4348": {
      "op": "PUSH32",
      "value": "0x4F7572206C61737420686172726168206265666F726520776520636C6F736520"
    },
    "4381": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4383": {
      "op": "DUP3"
    },
    "4384": {
      "op": "ADD"
    },
    "4385": {
      "op": "MSTORE"
    },
    "4386": {
      "op": "PUSH32",
      "value": "0x666F7220676F6F642E20576520617265206E6F7720636C6F7365642E00000000"
    },
    "4419": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4421": {
      "op": "DUP3"
    },
    "4422": {
      "op": "ADD"
    },
    "4423": {
      "op": "MSTORE"
    },
    "4424": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4426": {
      "op": "ADD"
    },
    "4427": {
      "op": "SWAP1"
    },
    "4428": {
      "op": "JUMP"
    },
    "4429": {
      "fn": "CultureCoin.register",
      "offset": [
        21046,
        21184
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4430": {
      "fn": "CultureCoin.register",
      "offset": [
        21113,
        21134
      ],
      "op": "PUSH32",
      "path": "1",
      "statement": 38,
      "value": "0xE7375F84984FEFA09F5F03AA56FFB11ED839B99D56943F858953E537609F8BE7"
    },
    "4463": {
      "fn": "CultureCoin.register",
      "offset": [
        21126,
        21133
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4464": {
      "fn": "CultureCoin.register",
      "offset": [
        21113,
        21134
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "4466": {
      "fn": "CultureCoin.register",
      "offset": [
        21113,
        21134
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "4467": {
      "fn": "CultureCoin.register",
      "offset": [
        21113,
        21134
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x117E"
    },
    "4471": {
      "fn": "CultureCoin.register",
      "offset": [
        21113,
        21134
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "4472": {
      "fn": "CultureCoin.register",
      "offset": [
        21113,
        21134
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4473": {
      "fn": "CultureCoin.register",
      "offset": [
        21113,
        21134
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x340C"
    },
    "4477": {
      "fn": "CultureCoin.register",
      "jump": "i",
      "offset": [
        21113,
        21134
      ],
      "op": "JUMP",
      "path": "1"
    },
    "4478": {
      "fn": "CultureCoin.register",
      "offset": [
        21113,
        21134
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4479": {
      "fn": "CultureCoin.register",
      "offset": [
        21113,
        21134
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "4481": {
      "fn": "CultureCoin.register",
      "offset": [
        21113,
        21134
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "4482": {
      "fn": "CultureCoin.register",
      "offset": [
        21113,
        21134
      ],
      "op": "DUP1",
      "path": "1"
    },
    "4483": {
      "fn": "CultureCoin.register",
      "offset": [
        21113,
        21134
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "4484": {
      "fn": "CultureCoin.register",
      "offset": [
        21113,
        21134
      ],
      "op": "SUB",
      "path": "1"
    },
    "4485": {
      "fn": "CultureCoin.register",
      "offset": [
        21113,
        21134
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4486": {
      "fn": "CultureCoin.register",
      "offset": [
        21113,
        21134
      ],
      "op": "LOG1",
      "path": "1"
    },
    "4487": {
      "fn": "CultureCoin.register",
      "offset": [
        21168,
        21177
      ],
      "op": "CALLVALUE",
      "path": "1",
      "statement": 39
    },
    "4488": {
      "fn": "CultureCoin.register",
      "offset": [
        21163,
        21164
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xCD"
    },
    "4490": {
      "fn": "CultureCoin.register",
      "offset": [
        21163,
        21164
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "4492": {
      "fn": "CultureCoin.register",
      "offset": [
        21163,
        21177
      ],
      "op": "DUP3",
      "path": "1"
    },
    "4493": {
      "fn": "CultureCoin.register",
      "offset": [
        21163,
        21177
      ],
      "op": "DUP3",
      "path": "1"
    },
    "4494": {
      "fn": "CultureCoin.register",
      "offset": [
        21163,
        21177
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "4495": {
      "fn": "CultureCoin.register",
      "offset": [
        21163,
        21177
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x119A"
    },
    "4499": {
      "fn": "CultureCoin.register",
      "offset": [
        21163,
        21177
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "4500": {
      "fn": "CultureCoin.register",
      "offset": [
        21163,
        21177
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4501": {
      "fn": "CultureCoin.register",
      "offset": [
        21163,
        21177
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x37F7"
    },
    "4505": {
      "fn": "CultureCoin.register",
      "jump": "i",
      "offset": [
        21163,
        21177
      ],
      "op": "JUMP",
      "path": "1"
    },
    "4506": {
      "fn": "CultureCoin.register",
      "offset": [
        21163,
        21177
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4507": {
      "fn": "CultureCoin.register",
      "offset": [
        21163,
        21177
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4508": {
      "fn": "CultureCoin.register",
      "offset": [
        21163,
        21177
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "4509": {
      "fn": "CultureCoin.register",
      "offset": [
        21163,
        21177
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "4510": {
      "op": "POP"
    },
    "4511": {
      "op": "POP"
    },
    "4512": {
      "op": "POP"
    },
    "4513": {
      "fn": "CultureCoin.register",
      "jump": "o",
      "offset": [
        21046,
        21184
      ],
      "op": "JUMP",
      "path": "1"
    },
    "4514": {
      "fn": "CultureCoin.setDexXMTSPRate",
      "offset": [
        16423,
        16559
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4515": {
      "fn": "CultureCoin.setDexXMTSPRate",
      "offset": [
        16496,
        16499
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 40,
      "value": "0xD5"
    },
    "4517": {
      "fn": "CultureCoin.setDexXMTSPRate",
      "offset": [
        16496,
        16499
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "4518": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4520": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4522": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4524": {
      "op": "SHL"
    },
    "4525": {
      "op": "SUB"
    },
    "4526": {
      "fn": "CultureCoin.setDexXMTSPRate",
      "offset": [
        16496,
        16499
      ],
      "op": "AND",
      "path": "1"
    },
    "4527": {
      "fn": "CultureCoin.setDexXMTSPRate",
      "offset": [
        16503,
        16513
      ],
      "op": "CALLER",
      "path": "1"
    },
    "4528": {
      "branch": 191,
      "fn": "CultureCoin.setDexXMTSPRate",
      "offset": [
        16496,
        16513
      ],
      "op": "EQ",
      "path": "1"
    },
    "4529": {
      "fn": "CultureCoin.setDexXMTSPRate",
      "offset": [
        16488,
        16514
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x11BA"
    },
    "4533": {
      "branch": 191,
      "fn": "CultureCoin.setDexXMTSPRate",
      "offset": [
        16488,
        16514
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "4534": {
      "fn": "CultureCoin.setDexXMTSPRate",
      "offset": [
        16488,
        16514
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "4536": {
      "fn": "CultureCoin.setDexXMTSPRate",
      "offset": [
        16488,
        16514
      ],
      "op": "DUP1",
      "path": "1"
    },
    "4537": {
      "fn": "CultureCoin.setDexXMTSPRate",
      "offset": [
        16488,
        16514
      ],
      "op": "REVERT",
      "path": "1"
    },
    "4538": {
      "fn": "CultureCoin.setDexXMTSPRate",
      "offset": [
        16488,
        16514
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4539": {
      "fn": "CultureCoin.setDexXMTSPRate",
      "offset": [
        16524,
        16536
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 41,
      "value": "0xE2"
    },
    "4541": {
      "fn": "CultureCoin.setDexXMTSPRate",
      "offset": [
        16524,
        16552
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "4542": {
      "fn": "CultureCoin.setDexXMTSPRate",
      "jump": "o",
      "offset": [
        16423,
        16559
      ],
      "op": "JUMP",
      "path": "1"
    },
    "4543": {
      "fn": "Receiver.addonPay",
      "offset": [
        104,
        146
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4544": {
      "fn": "Receiver.addonPay",
      "jump": "o",
      "offset": [
        104,
        146
      ],
      "op": "JUMP",
      "path": "12"
    },
    "4545": {
      "fn": "CultureCoin.debug",
      "offset": [
        35885,
        36062
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4546": {
      "fn": "CultureCoin.debug",
      "offset": [
        35921,
        35934
      ],
      "op": "PUSH3",
      "path": "1",
      "statement": 42,
      "value": "0x11CB"
    },
    "4550": {
      "fn": "CultureCoin.debug",
      "offset": [
        35921,
        35932
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x2A3E"
    },
    "4554": {
      "fn": "CultureCoin.debug",
      "jump": "i",
      "offset": [
        35921,
        35934
      ],
      "op": "JUMP",
      "path": "1"
    },
    "4555": {
      "fn": "CultureCoin.debug",
      "offset": [
        35921,
        35934
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4556": {
      "fn": "CultureCoin.debug",
      "offset": [
        35921,
        35934
      ],
      "op": "POP",
      "path": "1"
    },
    "4557": {
      "fn": "CultureCoin.debug",
      "offset": [
        35949,
        36020
      ],
      "op": "PUSH32",
      "path": "1",
      "statement": 43,
      "value": "0x2AF7EE6C8F08ECCB0BD31D90E03CA2C2373DBECF67C26FB36684CF46F38AC259"
    },
    "4590": {
      "fn": "CultureCoin.debug",
      "offset": [
        35949,
        36020
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "4592": {
      "fn": "CultureCoin.debug",
      "offset": [
        35949,
        36020
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "4593": {
      "fn": "CultureCoin.debug",
      "offset": [
        35949,
        36020
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x1267"
    },
    "4597": {
      "fn": "CultureCoin.debug",
      "offset": [
        35949,
        36020
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4598": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4600": {
      "op": "DUP1"
    },
    "4601": {
      "op": "DUP3"
    },
    "4602": {
      "op": "MSTORE"
    },
    "4603": {
      "op": "PUSH1",
      "value": "0x6"
    },
    "4605": {
      "op": "SWAP1"
    },
    "4606": {
      "op": "DUP3"
    },
    "4607": {
      "op": "ADD"
    },
    "4608": {
      "op": "MSTORE"
    },
    "4609": {
      "op": "PUSH6",
      "value": "0x2222A12AA39D"
    },
    "4616": {
      "op": "PUSH1",
      "value": "0xD1"
    },
    "4618": {
      "op": "SHL"
    },
    "4619": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4621": {
      "op": "DUP3"
    },
    "4622": {
      "op": "ADD"
    },
    "4623": {
      "op": "MSTORE"
    },
    "4624": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4626": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4628": {
      "op": "DUP3"
    },
    "4629": {
      "op": "ADD"
    },
    "4630": {
      "op": "DUP2"
    },
    "4631": {
      "op": "SWAP1"
    },
    "4632": {
      "op": "MSTORE"
    },
    "4633": {
      "op": "PUSH1",
      "value": "0x34"
    },
    "4635": {
      "op": "SWAP1"
    },
    "4636": {
      "op": "DUP3"
    },
    "4637": {
      "op": "ADD"
    },
    "4638": {
      "op": "MSTORE"
    },
    "4639": {
      "op": "PUSH32",
      "value": "0x636C6F776E7365617263682829207761732063616C6C656420616E6420776173"
    },
    "4672": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4674": {
      "op": "DUP3"
    },
    "4675": {
      "op": "ADD"
    },
    "4676": {
      "op": "MSTORE"
    },
    "4677": {
      "op": "PUSH20",
      "value": "0x103737BA103830BCB0B1363297102CB4B5B2B997"
    },
    "4698": {
      "op": "PUSH1",
      "value": "0x61"
    },
    "4700": {
      "op": "SHL"
    },
    "4701": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "4703": {
      "op": "DUP3"
    },
    "4704": {
      "op": "ADD"
    },
    "4705": {
      "op": "MSTORE"
    },
    "4706": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4708": {
      "op": "ADD"
    },
    "4709": {
      "op": "SWAP1"
    },
    "4710": {
      "op": "JUMP"
    },
    "4711": {
      "fn": "CultureCoin.debug",
      "offset": [
        35949,
        36020
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4712": {
      "fn": "CultureCoin.debug",
      "offset": [
        35949,
        36020
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "4714": {
      "fn": "CultureCoin.debug",
      "offset": [
        35949,
        36020
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "4715": {
      "fn": "CultureCoin.debug",
      "offset": [
        35949,
        36020
      ],
      "op": "DUP1",
      "path": "1"
    },
    "4716": {
      "fn": "CultureCoin.debug",
      "offset": [
        35949,
        36020
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "4717": {
      "fn": "CultureCoin.debug",
      "offset": [
        35949,
        36020
      ],
      "op": "SUB",
      "path": "1"
    },
    "4718": {
      "fn": "CultureCoin.debug",
      "offset": [
        35949,
        36020
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4719": {
      "fn": "CultureCoin.debug",
      "offset": [
        35949,
        36020
      ],
      "op": "LOG1",
      "path": "1"
    },
    "4720": {
      "fn": "CultureCoin.debug",
      "offset": [
        36035,
        36055
      ],
      "op": "PUSH32",
      "path": "1",
      "statement": 44,
      "value": "0x19CDFBBC87E2C4F8B08471BB8B544A25603AA3A6037DAB5DD4A660BE7A45B50C"
    },
    "4753": {
      "fn": "CultureCoin.debug",
      "offset": [
        36045,
        36054
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xE9"
    },
    "4755": {
      "fn": "CultureCoin.debug",
      "offset": [
        36045,
        36054
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "4756": {
      "fn": "CultureCoin.debug",
      "offset": [
        36035,
        36055
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "4758": {
      "fn": "CultureCoin.debug",
      "offset": [
        36035,
        36055
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "4759": {
      "fn": "CultureCoin.debug",
      "offset": [
        36035,
        36055
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0xE61"
    },
    "4763": {
      "fn": "CultureCoin.debug",
      "offset": [
        36035,
        36055
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "4764": {
      "op": "DUP2"
    },
    "4765": {
      "op": "MSTORE"
    },
    "4766": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4768": {
      "op": "ADD"
    },
    "4769": {
      "op": "SWAP1"
    },
    "4770": {
      "op": "JUMP"
    },
    "4771": {
      "fn": "CultureCoin.cloneAccount",
      "offset": [
        24355,
        24436
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4772": {
      "fn": "CultureCoin.cloneAccount",
      "offset": [
        24396,
        24403
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "4774": {
      "fn": "CultureCoin.cloneAccount",
      "offset": [
        24422,
        24429
      ],
      "op": "PUSH3",
      "path": "1",
      "statement": 45,
      "value": "0xDF5"
    },
    "4778": {
      "fn": "CultureCoin.cloneAccount",
      "offset": [
        24422,
        24427
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0xC2C"
    },
    "4782": {
      "fn": "CultureCoin.cloneAccount",
      "jump": "i",
      "offset": [
        24422,
        24429
      ],
      "op": "JUMP",
      "path": "1"
    },
    "4783": {
      "fn": "CultureCoin.unbrick",
      "offset": [
        31269,
        31651
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4784": {
      "fn": "CultureCoin.unbrick",
      "offset": [
        31329,
        31332
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 46,
      "value": "0xD5"
    },
    "4786": {
      "fn": "CultureCoin.unbrick",
      "offset": [
        31329,
        31332
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "4787": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4789": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4791": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4793": {
      "op": "SHL"
    },
    "4794": {
      "op": "SUB"
    },
    "4795": {
      "fn": "CultureCoin.unbrick",
      "offset": [
        31329,
        31332
      ],
      "op": "AND",
      "path": "1"
    },
    "4796": {
      "fn": "CultureCoin.unbrick",
      "offset": [
        31315,
        31325
      ],
      "op": "CALLER",
      "path": "1"
    },
    "4797": {
      "branch": 192,
      "fn": "CultureCoin.unbrick",
      "offset": [
        31315,
        31332
      ],
      "op": "EQ",
      "path": "1"
    },
    "4798": {
      "fn": "CultureCoin.unbrick",
      "offset": [
        31307,
        31395
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x1331"
    },
    "4802": {
      "branch": 192,
      "fn": "CultureCoin.unbrick",
      "offset": [
        31307,
        31395
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "4803": {
      "fn": "CultureCoin.unbrick",
      "offset": [
        31307,
        31395
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "4805": {
      "fn": "CultureCoin.unbrick",
      "offset": [
        31307,
        31395
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "4806": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4810": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4812": {
      "op": "SHL"
    },
    "4813": {
      "fn": "CultureCoin.unbrick",
      "offset": [
        31307,
        31395
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4814": {
      "fn": "CultureCoin.unbrick",
      "offset": [
        31307,
        31395
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4815": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4817": {
      "fn": "CultureCoin.unbrick",
      "offset": [
        31307,
        31395
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "4819": {
      "fn": "CultureCoin.unbrick",
      "offset": [
        31307,
        31395
      ],
      "op": "DUP3",
      "path": "1"
    },
    "4820": {
      "fn": "CultureCoin.unbrick",
      "offset": [
        31307,
        31395
      ],
      "op": "ADD",
      "path": "1"
    },
    "4821": {
      "op": "MSTORE"
    },
    "4822": {
      "op": "PUSH1",
      "value": "0x3A"
    },
    "4824": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4826": {
      "op": "DUP3"
    },
    "4827": {
      "op": "ADD"
    },
    "4828": {
      "op": "MSTORE"
    },
    "4829": {
      "op": "PUSH32",
      "value": "0x596F7520646F206E6F7420686176652074686520706F77657220746F20636861"
    },
    "4862": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4864": {
      "op": "DUP3"
    },
    "4865": {
      "op": "ADD"
    },
    "4866": {
      "op": "MSTORE"
    },
    "4867": {
      "op": "PUSH32",
      "value": "0x6E676520746865206675747572652C206F6E6C79204920646F2E000000000000"
    },
    "4900": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4902": {
      "op": "DUP3"
    },
    "4903": {
      "op": "ADD"
    },
    "4904": {
      "op": "MSTORE"
    },
    "4905": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4907": {
      "op": "ADD"
    },
    "4908": {
      "fn": "CultureCoin.unbrick",
      "offset": [
        31307,
        31395
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0xC98"
    },
    "4912": {
      "op": "JUMP"
    },
    "4913": {
      "fn": "CultureCoin.unbrick",
      "offset": [
        31307,
        31395
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4914": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4916": {
      "op": "DUP1"
    },
    "4917": {
      "op": "MLOAD"
    },
    "4918": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4920": {
      "op": "PUSH3",
      "value": "0x5700"
    },
    "4924": {
      "op": "DUP4"
    },
    "4925": {
      "op": "CODECOPY"
    },
    "4926": {
      "op": "DUP2"
    },
    "4927": {
      "op": "MLOAD"
    },
    "4928": {
      "op": "SWAP2"
    },
    "4929": {
      "op": "MSTORE"
    },
    "4930": {
      "fn": "CultureCoin.unbrick",
      "offset": [
        31406,
        31505
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 47,
      "value": "0x40"
    },
    "4932": {
      "fn": "CultureCoin.unbrick",
      "offset": [
        31406,
        31505
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "4933": {
      "fn": "CultureCoin.unbrick",
      "offset": [
        31406,
        31505
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x13C5"
    },
    "4937": {
      "fn": "CultureCoin.unbrick",
      "offset": [
        31406,
        31505
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4938": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4940": {
      "op": "DUP1"
    },
    "4941": {
      "op": "DUP3"
    },
    "4942": {
      "op": "MSTORE"
    },
    "4943": {
      "op": "PUSH1",
      "value": "0x56"
    },
    "4945": {
      "op": "SWAP1"
    },
    "4946": {
      "op": "DUP3"
    },
    "4947": {
      "op": "ADD"
    },
    "4948": {
      "op": "MSTORE"
    },
    "4949": {
      "op": "PUSH32",
      "value": "0x506C656173652077656C636F6D65206F757220666972737420627269636B206F"
    },
    "4982": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4984": {
      "op": "DUP3"
    },
    "4985": {
      "op": "ADD"
    },
    "4986": {
      "op": "MSTORE"
    },
    "4987": {
      "op": "PUSH32",
      "value": "0x6620616C6C2074696D652C20627269636B656420627574206E6F742061206272"
    },
    "5020": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5022": {
      "op": "DUP3"
    },
    "5023": {
      "op": "ADD"
    },
    "5024": {
      "op": "MSTORE"
    },
    "5025": {
      "op": "PUSH22",
      "value": "0x34B1B590313ABA1039BA34B636103090313934B1B597"
    },
    "5048": {
      "op": "PUSH1",
      "value": "0x51"
    },
    "5050": {
      "op": "SHL"
    },
    "5051": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5053": {
      "op": "DUP3"
    },
    "5054": {
      "op": "ADD"
    },
    "5055": {
      "op": "MSTORE"
    },
    "5056": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5058": {
      "op": "ADD"
    },
    "5059": {
      "op": "SWAP1"
    },
    "5060": {
      "op": "JUMP"
    },
    "5061": {
      "fn": "CultureCoin.unbrick",
      "offset": [
        31406,
        31505
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5062": {
      "fn": "CultureCoin.unbrick",
      "offset": [
        31406,
        31505
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "5064": {
      "fn": "CultureCoin.unbrick",
      "offset": [
        31406,
        31505
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "5065": {
      "fn": "CultureCoin.unbrick",
      "offset": [
        31406,
        31505
      ],
      "op": "DUP1",
      "path": "1"
    },
    "5066": {
      "fn": "CultureCoin.unbrick",
      "offset": [
        31406,
        31505
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "5067": {
      "fn": "CultureCoin.unbrick",
      "offset": [
        31406,
        31505
      ],
      "op": "SUB",
      "path": "1"
    },
    "5068": {
      "fn": "CultureCoin.unbrick",
      "offset": [
        31406,
        31505
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5069": {
      "fn": "CultureCoin.unbrick",
      "offset": [
        31406,
        31505
      ],
      "op": "LOG1",
      "path": "1"
    },
    "5070": {
      "fn": "CultureCoin.unbrick",
      "offset": [
        31511,
        31516
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 48,
      "value": "0xEA"
    },
    "5072": {
      "fn": "CultureCoin.unbrick",
      "offset": [
        31511,
        31524
      ],
      "op": "DUP1",
      "path": "1"
    },
    "5073": {
      "fn": "CultureCoin.unbrick",
      "offset": [
        31511,
        31524
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "5074": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "5076": {
      "op": "NOT"
    },
    "5077": {
      "fn": "CultureCoin.unbrick",
      "offset": [
        31511,
        31524
      ],
      "op": "AND",
      "path": "1"
    },
    "5078": {
      "fn": "CultureCoin.unbrick",
      "offset": [
        31511,
        31524
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5079": {
      "fn": "CultureCoin.unbrick",
      "offset": [
        31511,
        31524
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "5080": {
      "fn": "CultureCoin.unbrick",
      "offset": [
        31535,
        31644
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 49,
      "value": "0x40"
    },
    "5082": {
      "fn": "CultureCoin.unbrick",
      "offset": [
        31535,
        31644
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "5083": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5085": {
      "op": "DUP1"
    },
    "5086": {
      "op": "MLOAD"
    },
    "5087": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5089": {
      "op": "PUSH3",
      "value": "0x5700"
    },
    "5093": {
      "op": "DUP4"
    },
    "5094": {
      "op": "CODECOPY"
    },
    "5095": {
      "op": "DUP2"
    },
    "5096": {
      "op": "MLOAD"
    },
    "5097": {
      "op": "SWAP2"
    },
    "5098": {
      "op": "MSTORE"
    },
    "5099": {
      "fn": "CultureCoin.unbrick",
      "offset": [
        31535,
        31644
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5100": {
      "fn": "CultureCoin.unbrick",
      "offset": [
        31535,
        31644
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0xE61"
    },
    "5104": {
      "fn": "CultureCoin.unbrick",
      "offset": [
        31535,
        31644
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5105": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5107": {
      "op": "DUP1"
    },
    "5108": {
      "op": "DUP3"
    },
    "5109": {
      "op": "MSTORE"
    },
    "5110": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5112": {
      "op": "SWAP1"
    },
    "5113": {
      "op": "DUP3"
    },
    "5114": {
      "op": "ADD"
    },
    "5115": {
      "op": "DUP2"
    },
    "5116": {
      "op": "SWAP1"
    },
    "5117": {
      "op": "MSTORE"
    },
    "5118": {
      "op": "PUSH32",
      "value": "0x4920616D20616C736F206C6561726E696E672074686174207468697320697320"
    },
    "5151": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5153": {
      "op": "DUP4"
    },
    "5154": {
      "op": "ADD"
    },
    "5155": {
      "op": "MSTORE"
    },
    "5156": {
      "op": "PUSH32",
      "value": "0x6E6F742074686520666972737420627269636B206F6620616C6C2074696D652E"
    },
    "5189": {
      "op": "SWAP1"
    },
    "5190": {
      "op": "DUP3"
    },
    "5191": {
      "op": "ADD"
    },
    "5192": {
      "op": "MSTORE"
    },
    "5193": {
      "op": "PUSH32",
      "value": "0x204F6B61792C20746865726520796F7520686176652069742C20666F6C6B732E"
    },
    "5226": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5228": {
      "op": "DUP3"
    },
    "5229": {
      "op": "ADD"
    },
    "5230": {
      "op": "MSTORE"
    },
    "5231": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5233": {
      "op": "ADD"
    },
    "5234": {
      "op": "SWAP1"
    },
    "5235": {
      "op": "JUMP"
    },
    "5236": {
      "fn": "CultureCoin.setAddon",
      "offset": [
        14265,
        14410
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5237": {
      "fn": "CultureCoin.setAddon",
      "offset": [
        14352,
        14355
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 50,
      "value": "0xD5"
    },
    "5239": {
      "fn": "CultureCoin.setAddon",
      "offset": [
        14352,
        14355
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "5240": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5242": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5244": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5246": {
      "op": "SHL"
    },
    "5247": {
      "op": "SUB"
    },
    "5248": {
      "fn": "CultureCoin.setAddon",
      "offset": [
        14352,
        14355
      ],
      "op": "AND",
      "path": "1"
    },
    "5249": {
      "fn": "CultureCoin.setAddon",
      "offset": [
        14338,
        14348
      ],
      "op": "CALLER",
      "path": "1"
    },
    "5250": {
      "branch": 193,
      "fn": "CultureCoin.setAddon",
      "offset": [
        14338,
        14355
      ],
      "op": "EQ",
      "path": "1"
    },
    "5251": {
      "fn": "CultureCoin.setAddon",
      "offset": [
        14330,
        14371
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x14BE"
    },
    "5255": {
      "branch": 193,
      "fn": "CultureCoin.setAddon",
      "offset": [
        14330,
        14371
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "5256": {
      "fn": "CultureCoin.setAddon",
      "offset": [
        14330,
        14371
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "5258": {
      "fn": "CultureCoin.setAddon",
      "offset": [
        14330,
        14371
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "5259": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5263": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5265": {
      "op": "SHL"
    },
    "5266": {
      "fn": "CultureCoin.setAddon",
      "offset": [
        14330,
        14371
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5267": {
      "fn": "CultureCoin.setAddon",
      "offset": [
        14330,
        14371
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5268": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5270": {
      "fn": "CultureCoin.setAddon",
      "offset": [
        14330,
        14371
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "5272": {
      "fn": "CultureCoin.setAddon",
      "offset": [
        14330,
        14371
      ],
      "op": "DUP3",
      "path": "1"
    },
    "5273": {
      "fn": "CultureCoin.setAddon",
      "offset": [
        14330,
        14371
      ],
      "op": "ADD",
      "path": "1"
    },
    "5274": {
      "op": "MSTORE"
    },
    "5275": {
      "op": "PUSH1",
      "value": "0xB"
    },
    "5277": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5279": {
      "op": "DUP3"
    },
    "5280": {
      "op": "ADD"
    },
    "5281": {
      "op": "MSTORE"
    },
    "5282": {
      "op": "PUSH11",
      "value": "0x20B236B4B71037B7363C97"
    },
    "5294": {
      "op": "PUSH1",
      "value": "0xA9"
    },
    "5296": {
      "op": "SHL"
    },
    "5297": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5299": {
      "op": "DUP3"
    },
    "5300": {
      "op": "ADD"
    },
    "5301": {
      "op": "MSTORE"
    },
    "5302": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5304": {
      "op": "ADD"
    },
    "5305": {
      "fn": "CultureCoin.setAddon",
      "offset": [
        14330,
        14371
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0xC98"
    },
    "5309": {
      "op": "JUMP"
    },
    "5310": {
      "fn": "CultureCoin.setAddon",
      "offset": [
        14330,
        14371
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5311": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5313": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5315": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5317": {
      "op": "SHL"
    },
    "5318": {
      "op": "SUB"
    },
    "5319": {
      "fn": "CultureCoin.setAddon",
      "offset": [
        14381,
        14395
      ],
      "op": "SWAP2",
      "path": "1",
      "statement": 51
    },
    "5320": {
      "fn": "CultureCoin.setAddon",
      "offset": [
        14381,
        14395
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5321": {
      "fn": "CultureCoin.setAddon",
      "offset": [
        14381,
        14395
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "5322": {
      "fn": "CultureCoin.setAddon",
      "offset": [
        14381,
        14395
      ],
      "op": "AND",
      "path": "1"
    },
    "5323": {
      "fn": "CultureCoin.setAddon",
      "offset": [
        14381,
        14395
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "5325": {
      "fn": "CultureCoin.setAddon",
      "offset": [
        14381,
        14395
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5326": {
      "fn": "CultureCoin.setAddon",
      "offset": [
        14381,
        14395
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5327": {
      "fn": "CultureCoin.setAddon",
      "offset": [
        14381,
        14395
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5328": {
      "fn": "CultureCoin.setAddon",
      "offset": [
        14381,
        14387
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xE8"
    },
    "5330": {
      "fn": "CultureCoin.setAddon",
      "offset": [
        14381,
        14395
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "5332": {
      "fn": "CultureCoin.setAddon",
      "offset": [
        14381,
        14395
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5333": {
      "fn": "CultureCoin.setAddon",
      "offset": [
        14381,
        14395
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "5335": {
      "fn": "CultureCoin.setAddon",
      "offset": [
        14381,
        14395
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5336": {
      "fn": "CultureCoin.setAddon",
      "offset": [
        14381,
        14395
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "5337": {
      "fn": "CultureCoin.setAddon",
      "offset": [
        14381,
        14403
      ],
      "op": "DUP1",
      "path": "1"
    },
    "5338": {
      "fn": "CultureCoin.setAddon",
      "offset": [
        14381,
        14403
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "5339": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "5341": {
      "op": "NOT"
    },
    "5342": {
      "fn": "CultureCoin.setAddon",
      "offset": [
        14381,
        14403
      ],
      "op": "AND",
      "path": "1"
    },
    "5343": {
      "fn": "CultureCoin.setAddon",
      "offset": [
        14381,
        14403
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "5344": {
      "fn": "CultureCoin.setAddon",
      "offset": [
        14381,
        14403
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "5345": {
      "fn": "CultureCoin.setAddon",
      "offset": [
        14381,
        14403
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "5346": {
      "fn": "CultureCoin.setAddon",
      "offset": [
        14381,
        14403
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "5347": {
      "fn": "CultureCoin.setAddon",
      "offset": [
        14381,
        14403
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5348": {
      "fn": "CultureCoin.setAddon",
      "offset": [
        14381,
        14403
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "5349": {
      "fn": "CultureCoin.setAddon",
      "offset": [
        14381,
        14403
      ],
      "op": "OR",
      "path": "1"
    },
    "5350": {
      "fn": "CultureCoin.setAddon",
      "offset": [
        14381,
        14403
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5351": {
      "fn": "CultureCoin.setAddon",
      "offset": [
        14381,
        14403
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "5352": {
      "fn": "CultureCoin.setAddon",
      "jump": "o",
      "offset": [
        14265,
        14410
      ],
      "op": "JUMP",
      "path": "1"
    },
    "5353": {
      "fn": "ERC20BurnableUpgradeable.burnFrom",
      "offset": [
        1243,
        1404
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "5354": {
      "fn": "ERC20BurnableUpgradeable.burnFrom",
      "offset": [
        1319,
        1365
      ],
      "op": "PUSH3",
      "path": "17",
      "statement": 52,
      "value": "0x14F6"
    },
    "5358": {
      "fn": "ERC20BurnableUpgradeable.burnFrom",
      "offset": [
        1335,
        1342
      ],
      "op": "DUP3",
      "path": "17"
    },
    "5359": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        929,
        939
      ],
      "op": "CALLER",
      "path": "20"
    },
    "5360": {
      "fn": "ERC20BurnableUpgradeable.burnFrom",
      "offset": [
        1358,
        1364
      ],
      "op": "DUP4",
      "path": "17"
    },
    "5361": {
      "fn": "ERC20BurnableUpgradeable.burnFrom",
      "offset": [
        1319,
        1334
      ],
      "op": "PUSH3",
      "path": "17",
      "value": "0x26B3"
    },
    "5365": {
      "fn": "ERC20BurnableUpgradeable.burnFrom",
      "jump": "i",
      "offset": [
        1319,
        1365
      ],
      "op": "JUMP",
      "path": "17"
    },
    "5366": {
      "fn": "ERC20BurnableUpgradeable.burnFrom",
      "offset": [
        1319,
        1365
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "5367": {
      "fn": "ERC20BurnableUpgradeable.burnFrom",
      "offset": [
        1375,
        1397
      ],
      "op": "PUSH3",
      "path": "17",
      "statement": 53,
      "value": "0x1502"
    },
    "5371": {
      "fn": "ERC20BurnableUpgradeable.burnFrom",
      "offset": [
        1381,
        1388
      ],
      "op": "DUP3",
      "path": "17"
    },
    "5372": {
      "fn": "ERC20BurnableUpgradeable.burnFrom",
      "offset": [
        1390,
        1396
      ],
      "op": "DUP3",
      "path": "17"
    },
    "5373": {
      "fn": "ERC20BurnableUpgradeable.burnFrom",
      "offset": [
        1375,
        1380
      ],
      "op": "PUSH3",
      "path": "17",
      "value": "0x28FB"
    },
    "5377": {
      "fn": "ERC20BurnableUpgradeable.burnFrom",
      "jump": "i",
      "offset": [
        1375,
        1397
      ],
      "op": "JUMP",
      "path": "17"
    },
    "5378": {
      "fn": "ERC20BurnableUpgradeable.burnFrom",
      "offset": [
        1375,
        1397
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "5379": {
      "fn": "ERC20BurnableUpgradeable.burnFrom",
      "offset": [
        1243,
        1404
      ],
      "op": "POP",
      "path": "17"
    },
    "5380": {
      "fn": "ERC20BurnableUpgradeable.burnFrom",
      "offset": [
        1243,
        1404
      ],
      "op": "POP",
      "path": "17"
    },
    "5381": {
      "fn": "ERC20BurnableUpgradeable.burnFrom",
      "jump": "o",
      "offset": [
        1243,
        1404
      ],
      "op": "JUMP",
      "path": "17"
    },
    "5382": {
      "fn": "CultureCoin.setRewardPerHour",
      "offset": [
        4842,
        4998
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5383": {
      "fn": "CultureCoin.setRewardPerHour",
      "offset": [
        4933,
        4936
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 54,
      "value": "0xD5"
    },
    "5385": {
      "fn": "CultureCoin.setRewardPerHour",
      "offset": [
        4933,
        4936
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "5386": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5388": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5390": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5392": {
      "op": "SHL"
    },
    "5393": {
      "op": "SUB"
    },
    "5394": {
      "fn": "CultureCoin.setRewardPerHour",
      "offset": [
        4933,
        4936
      ],
      "op": "AND",
      "path": "1"
    },
    "5395": {
      "fn": "CultureCoin.setRewardPerHour",
      "offset": [
        4919,
        4929
      ],
      "op": "CALLER",
      "path": "1"
    },
    "5396": {
      "branch": 194,
      "fn": "CultureCoin.setRewardPerHour",
      "offset": [
        4919,
        4936
      ],
      "op": "EQ",
      "path": "1"
    },
    "5397": {
      "fn": "CultureCoin.setRewardPerHour",
      "offset": [
        4911,
        4951
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x154F"
    },
    "5401": {
      "branch": 194,
      "fn": "CultureCoin.setRewardPerHour",
      "offset": [
        4911,
        4951
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "5402": {
      "fn": "CultureCoin.setRewardPerHour",
      "offset": [
        4911,
        4951
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "5404": {
      "fn": "CultureCoin.setRewardPerHour",
      "offset": [
        4911,
        4951
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "5405": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5409": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5411": {
      "op": "SHL"
    },
    "5412": {
      "fn": "CultureCoin.setRewardPerHour",
      "offset": [
        4911,
        4951
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5413": {
      "fn": "CultureCoin.setRewardPerHour",
      "offset": [
        4911,
        4951
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5414": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5416": {
      "fn": "CultureCoin.setRewardPerHour",
      "offset": [
        4911,
        4951
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "5418": {
      "fn": "CultureCoin.setRewardPerHour",
      "offset": [
        4911,
        4951
      ],
      "op": "DUP3",
      "path": "1"
    },
    "5419": {
      "fn": "CultureCoin.setRewardPerHour",
      "offset": [
        4911,
        4951
      ],
      "op": "ADD",
      "path": "1"
    },
    "5420": {
      "op": "MSTORE"
    },
    "5421": {
      "op": "PUSH1",
      "value": "0xA"
    },
    "5423": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5425": {
      "op": "DUP3"
    },
    "5426": {
      "op": "ADD"
    },
    "5427": {
      "op": "MSTORE"
    },
    "5428": {
      "op": "PUSH10",
      "value": "0x29B7B9393C9610373797"
    },
    "5439": {
      "op": "PUSH1",
      "value": "0xB1"
    },
    "5441": {
      "op": "SHL"
    },
    "5442": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5444": {
      "op": "DUP3"
    },
    "5445": {
      "op": "ADD"
    },
    "5446": {
      "op": "MSTORE"
    },
    "5447": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5449": {
      "op": "ADD"
    },
    "5450": {
      "fn": "CultureCoin.setRewardPerHour",
      "offset": [
        4911,
        4951
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0xC98"
    },
    "5454": {
      "op": "JUMP"
    },
    "5455": {
      "fn": "CultureCoin.setRewardPerHour",
      "offset": [
        4911,
        4951
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5456": {
      "fn": "CultureCoin.setRewardPerHour",
      "offset": [
        4961,
        4974
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 55,
      "value": "0x99"
    },
    "5458": {
      "fn": "CultureCoin.setRewardPerHour",
      "offset": [
        4961,
        4991
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "5459": {
      "fn": "CultureCoin.setRewardPerHour",
      "jump": "o",
      "offset": [
        4842,
        4998
      ],
      "op": "JUMP",
      "path": "1"
    },
    "5460": {
      "fn": "CultureCoin.dexXMTSPIn",
      "offset": [
        15943,
        16418
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5461": {
      "fn": "CultureCoin.dexXMTSPIn",
      "offset": [
        16003,
        16010
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "5463": {
      "offset": [
        1815,
        1816
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x2"
    },
    "5465": {
      "offset": [
        2569,
        2576
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x9A"
    },
    "5467": {
      "fn": "CultureCoin.dexXMTSPIn",
      "offset": [
        2569,
        2576
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "5468": {
      "offset": [
        2569,
        2588
      ],
      "op": "EQ",
      "path": "14"
    },
    "5469": {
      "fn": "CultureCoin.dexXMTSPIn",
      "offset": [
        2569,
        2588
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "5470": {
      "offset": [
        2561,
        2624
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x157C"
    },
    "5474": {
      "offset": [
        2561,
        2624
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "5475": {
      "fn": "CultureCoin.dexXMTSPIn",
      "offset": [
        2561,
        2624
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "5477": {
      "fn": "CultureCoin.dexXMTSPIn",
      "offset": [
        2561,
        2624
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "5478": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5482": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5484": {
      "op": "SHL"
    },
    "5485": {
      "offset": [
        2561,
        2624
      ],
      "op": "DUP2",
      "path": "14"
    },
    "5486": {
      "fn": "CultureCoin.dexXMTSPIn",
      "offset": [
        2561,
        2624
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5487": {
      "fn": "CultureCoin.dexXMTSPIn",
      "offset": [
        2561,
        2624
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "5489": {
      "fn": "CultureCoin.dexXMTSPIn",
      "offset": [
        2561,
        2624
      ],
      "op": "ADD",
      "path": "14"
    },
    "5490": {
      "fn": "CultureCoin.dexXMTSPIn",
      "offset": [
        2561,
        2624
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0xC98"
    },
    "5494": {
      "fn": "CultureCoin.dexXMTSPIn",
      "offset": [
        2561,
        2624
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "5495": {
      "fn": "CultureCoin.dexXMTSPIn",
      "offset": [
        2561,
        2624
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x387D"
    },
    "5499": {
      "fn": "CultureCoin.dexXMTSPIn",
      "jump": "i",
      "offset": [
        2561,
        2624
      ],
      "op": "JUMP",
      "path": "14"
    },
    "5500": {
      "fn": "CultureCoin.dexXMTSPIn",
      "offset": [
        2561,
        2624
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "5501": {
      "offset": [
        1815,
        1816
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x2"
    },
    "5503": {
      "offset": [
        2699,
        2706
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x9A"
    },
    "5505": {
      "offset": [
        2699,
        2717
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "5506": {
      "fn": "CultureCoin.dexXMTSPIn",
      "offset": [
        16031,
        16037
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 56,
      "value": "0xEA"
    },
    "5508": {
      "fn": "CultureCoin.dexXMTSPIn",
      "offset": [
        16031,
        16037
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "5509": {
      "fn": "CultureCoin.dexXMTSPIn",
      "offset": [
        16031,
        16037
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x100"
    },
    "5512": {
      "fn": "CultureCoin.dexXMTSPIn",
      "offset": [
        16031,
        16037
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5513": {
      "fn": "CultureCoin.dexXMTSPIn",
      "offset": [
        16031,
        16037
      ],
      "op": "DIV",
      "path": "1"
    },
    "5514": {
      "fn": "CultureCoin.dexXMTSPIn",
      "offset": [
        16031,
        16037
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "5516": {
      "fn": "CultureCoin.dexXMTSPIn",
      "offset": [
        16031,
        16037
      ],
      "op": "AND",
      "path": "1"
    },
    "5517": {
      "branch": 195,
      "fn": "CultureCoin.dexXMTSPIn",
      "offset": [
        16030,
        16037
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "5518": {
      "fn": "CultureCoin.dexXMTSPIn",
      "offset": [
        16022,
        16086
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x15AC"
    },
    "5522": {
      "branch": 195,
      "fn": "CultureCoin.dexXMTSPIn",
      "offset": [
        16022,
        16086
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "5523": {
      "fn": "CultureCoin.dexXMTSPIn",
      "offset": [
        16022,
        16086
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "5525": {
      "fn": "CultureCoin.dexXMTSPIn",
      "offset": [
        16022,
        16086
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "5526": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5530": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5532": {
      "op": "SHL"
    },
    "5533": {
      "fn": "CultureCoin.dexXMTSPIn",
      "offset": [
        16022,
        16086
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5534": {
      "fn": "CultureCoin.dexXMTSPIn",
      "offset": [
        16022,
        16086
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5535": {
      "fn": "CultureCoin.dexXMTSPIn",
      "offset": [
        16022,
        16086
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "5537": {
      "fn": "CultureCoin.dexXMTSPIn",
      "offset": [
        16022,
        16086
      ],
      "op": "ADD",
      "path": "1"
    },
    "5538": {
      "fn": "CultureCoin.dexXMTSPIn",
      "offset": [
        16022,
        16086
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0xC98"
    },
    "5542": {
      "fn": "CultureCoin.dexXMTSPIn",
      "offset": [
        16022,
        16086
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5543": {
      "fn": "CultureCoin.dexXMTSPIn",
      "offset": [
        16022,
        16086
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x38B4"
    },
    "5547": {
      "fn": "CultureCoin.dexXMTSPIn",
      "jump": "i",
      "offset": [
        16022,
        16086
      ],
      "op": "JUMP",
      "path": "1"
    },
    "5548": {
      "fn": "CultureCoin.dexXMTSPIn",
      "offset": [
        16022,
        16086
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5549": {
      "fn": "CultureCoin.dexXMTSPIn",
      "offset": [
        16119,
        16120
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 57,
      "value": "0x0"
    },
    "5551": {
      "fn": "CultureCoin.dexXMTSPIn",
      "offset": [
        16104,
        16116
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xE2"
    },
    "5553": {
      "fn": "CultureCoin.dexXMTSPIn",
      "offset": [
        16104,
        16116
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "5554": {
      "branch": 196,
      "fn": "CultureCoin.dexXMTSPIn",
      "offset": [
        16104,
        16120
      ],
      "op": "GT",
      "path": "1"
    },
    "5555": {
      "fn": "CultureCoin.dexXMTSPIn",
      "offset": [
        16096,
        16134
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x15D1"
    },
    "5559": {
      "branch": 196,
      "fn": "CultureCoin.dexXMTSPIn",
      "offset": [
        16096,
        16134
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "5560": {
      "fn": "CultureCoin.dexXMTSPIn",
      "offset": [
        16096,
        16134
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "5562": {
      "fn": "CultureCoin.dexXMTSPIn",
      "offset": [
        16096,
        16134
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "5563": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5567": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5569": {
      "op": "SHL"
    },
    "5570": {
      "fn": "CultureCoin.dexXMTSPIn",
      "offset": [
        16096,
        16134
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5571": {
      "fn": "CultureCoin.dexXMTSPIn",
      "offset": [
        16096,
        16134
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5572": {
      "fn": "CultureCoin.dexXMTSPIn",
      "offset": [
        16096,
        16134
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "5574": {
      "fn": "CultureCoin.dexXMTSPIn",
      "offset": [
        16096,
        16134
      ],
      "op": "ADD",
      "path": "1"
    },
    "5575": {
      "fn": "CultureCoin.dexXMTSPIn",
      "offset": [
        16096,
        16134
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0xC98"
    },
    "5579": {
      "fn": "CultureCoin.dexXMTSPIn",
      "offset": [
        16096,
        16134
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5580": {
      "fn": "CultureCoin.dexXMTSPIn",
      "offset": [
        16096,
        16134
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x3900"
    },
    "5584": {
      "fn": "CultureCoin.dexXMTSPIn",
      "jump": "i",
      "offset": [
        16096,
        16134
      ],
      "op": "JUMP",
      "path": "1"
    },
    "5585": {
      "fn": "CultureCoin.dexXMTSPIn",
      "offset": [
        16096,
        16134
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5586": {
      "fn": "CultureCoin.dexXMTSPIn",
      "offset": [
        16145,
        16164
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "5588": {
      "fn": "CultureCoin.dexXMTSPIn",
      "offset": [
        16196,
        16203
      ],
      "op": "PUSH8",
      "path": "1",
      "value": "0xDE0B6B3A7640000"
    },
    "5597": {
      "fn": "CultureCoin.dexXMTSPIn",
      "offset": [
        16180,
        16192
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xE2"
    },
    "5599": {
      "fn": "CultureCoin.dexXMTSPIn",
      "offset": [
        16180,
        16192
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "5600": {
      "fn": "CultureCoin.dexXMTSPIn",
      "offset": [
        16168,
        16177
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "5601": {
      "fn": "CultureCoin.dexXMTSPIn",
      "offset": [
        16168,
        16192
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x15EC"
    },
    "5605": {
      "fn": "CultureCoin.dexXMTSPIn",
      "offset": [
        16168,
        16192
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "5606": {
      "fn": "CultureCoin.dexXMTSPIn",
      "offset": [
        16168,
        16192
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5607": {
      "fn": "CultureCoin.dexXMTSPIn",
      "offset": [
        16168,
        16192
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x3923"
    },
    "5611": {
      "fn": "CultureCoin.dexXMTSPIn",
      "jump": "i",
      "offset": [
        16168,
        16192
      ],
      "op": "JUMP",
      "path": "1"
    },
    "5612": {
      "fn": "CultureCoin.dexXMTSPIn",
      "offset": [
        16168,
        16192
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5613": {
      "fn": "CultureCoin.dexXMTSPIn",
      "offset": [
        16167,
        16203
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x15F8"
    },
    "5617": {
      "fn": "CultureCoin.dexXMTSPIn",
      "offset": [
        16167,
        16203
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "5618": {
      "fn": "CultureCoin.dexXMTSPIn",
      "offset": [
        16167,
        16203
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5619": {
      "fn": "CultureCoin.dexXMTSPIn",
      "offset": [
        16167,
        16203
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x3945"
    },
    "5623": {
      "fn": "CultureCoin.dexXMTSPIn",
      "jump": "i",
      "offset": [
        16167,
        16203
      ],
      "op": "JUMP",
      "path": "1"
    },
    "5624": {
      "fn": "CultureCoin.dexXMTSPIn",
      "offset": [
        16167,
        16203
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5625": {
      "fn": "CultureCoin.dexXMTSPIn",
      "offset": [
        16145,
        16203
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5626": {
      "fn": "CultureCoin.dexXMTSPIn",
      "offset": [
        16145,
        16203
      ],
      "op": "POP",
      "path": "1"
    },
    "5627": {
      "fn": "CultureCoin.dexXMTSPIn",
      "offset": [
        16213,
        16262
      ],
      "op": "PUSH3",
      "path": "1",
      "statement": 58,
      "value": "0x1607"
    },
    "5631": {
      "fn": "CultureCoin.dexXMTSPIn",
      "offset": [
        16231,
        16235
      ],
      "op": "ADDRESS",
      "path": "1"
    },
    "5632": {
      "fn": "CultureCoin.dexXMTSPIn",
      "offset": [
        16238,
        16248
      ],
      "op": "CALLER",
      "path": "1"
    },
    "5633": {
      "fn": "CultureCoin.dexXMTSPIn",
      "offset": [
        16250,
        16261
      ],
      "op": "DUP4",
      "path": "1"
    },
    "5634": {
      "fn": "CultureCoin.dexXMTSPIn",
      "offset": [
        16213,
        16222
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x2734"
    },
    "5638": {
      "fn": "CultureCoin.dexXMTSPIn",
      "jump": "i",
      "offset": [
        16213,
        16262
      ],
      "op": "JUMP",
      "path": "1"
    },
    "5639": {
      "fn": "CultureCoin.dexXMTSPIn",
      "offset": [
        16213,
        16262
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5640": {
      "fn": "CultureCoin.dexXMTSPIn",
      "offset": [
        16278,
        16287
      ],
      "op": "CALLVALUE",
      "path": "1",
      "statement": 59
    },
    "5641": {
      "fn": "CultureCoin.dexXMTSPIn",
      "offset": [
        16273,
        16274
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xCD"
    },
    "5643": {
      "fn": "CultureCoin.dexXMTSPIn",
      "offset": [
        16273,
        16274
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "5645": {
      "fn": "CultureCoin.dexXMTSPIn",
      "offset": [
        16273,
        16287
      ],
      "op": "DUP3",
      "path": "1"
    },
    "5646": {
      "fn": "CultureCoin.dexXMTSPIn",
      "offset": [
        16273,
        16287
      ],
      "op": "DUP3",
      "path": "1"
    },
    "5647": {
      "fn": "CultureCoin.dexXMTSPIn",
      "offset": [
        16273,
        16287
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "5648": {
      "fn": "CultureCoin.dexXMTSPIn",
      "offset": [
        16273,
        16287
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x161B"
    },
    "5652": {
      "fn": "CultureCoin.dexXMTSPIn",
      "offset": [
        16273,
        16287
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "5653": {
      "fn": "CultureCoin.dexXMTSPIn",
      "offset": [
        16273,
        16287
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5654": {
      "fn": "CultureCoin.dexXMTSPIn",
      "offset": [
        16273,
        16287
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x37F7"
    },
    "5658": {
      "fn": "CultureCoin.dexXMTSPIn",
      "jump": "i",
      "offset": [
        16273,
        16287
      ],
      "op": "JUMP",
      "path": "1"
    },
    "5659": {
      "fn": "CultureCoin.dexXMTSPIn",
      "offset": [
        16273,
        16287
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5660": {
      "fn": "CultureCoin.dexXMTSPIn",
      "offset": [
        16273,
        16287
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "5661": {
      "fn": "CultureCoin.dexXMTSPIn",
      "offset": [
        16273,
        16287
      ],
      "op": "POP",
      "path": "1"
    },
    "5662": {
      "fn": "CultureCoin.dexXMTSPIn",
      "offset": [
        16273,
        16287
      ],
      "op": "POP",
      "path": "1"
    },
    "5663": {
      "fn": "CultureCoin.dexXMTSPIn",
      "offset": [
        16273,
        16287
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5664": {
      "fn": "CultureCoin.dexXMTSPIn",
      "offset": [
        16273,
        16287
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5665": {
      "fn": "CultureCoin.dexXMTSPIn",
      "offset": [
        16273,
        16287
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "5666": {
      "fn": "CultureCoin.dexXMTSPIn",
      "offset": [
        16273,
        16287
      ],
      "op": "POP",
      "path": "1"
    },
    "5667": {
      "fn": "CultureCoin.dexXMTSPIn",
      "offset": [
        16311,
        16322
      ],
      "op": "DUP1",
      "path": "1",
      "statement": 60
    },
    "5668": {
      "fn": "CultureCoin.dexXMTSPIn",
      "offset": [
        16298,
        16307
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xE7"
    },
    "5670": {
      "fn": "CultureCoin.dexXMTSPIn",
      "offset": [
        16298,
        16307
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "5672": {
      "fn": "CultureCoin.dexXMTSPIn",
      "offset": [
        16298,
        16322
      ],
      "op": "DUP3",
      "path": "1"
    },
    "5673": {
      "fn": "CultureCoin.dexXMTSPIn",
      "offset": [
        16298,
        16322
      ],
      "op": "DUP3",
      "path": "1"
    },
    "5674": {
      "fn": "CultureCoin.dexXMTSPIn",
      "offset": [
        16298,
        16322
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "5675": {
      "fn": "CultureCoin.dexXMTSPIn",
      "offset": [
        16298,
        16322
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x1636"
    },
    "5679": {
      "fn": "CultureCoin.dexXMTSPIn",
      "offset": [
        16298,
        16322
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "5680": {
      "fn": "CultureCoin.dexXMTSPIn",
      "offset": [
        16298,
        16322
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5681": {
      "fn": "CultureCoin.dexXMTSPIn",
      "offset": [
        16298,
        16322
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x37F7"
    },
    "5685": {
      "fn": "CultureCoin.dexXMTSPIn",
      "jump": "i",
      "offset": [
        16298,
        16322
      ],
      "op": "JUMP",
      "path": "1"
    },
    "5686": {
      "fn": "CultureCoin.dexXMTSPIn",
      "offset": [
        16298,
        16322
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5687": {
      "fn": "CultureCoin.dexXMTSPIn",
      "offset": [
        16298,
        16322
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5688": {
      "fn": "CultureCoin.dexXMTSPIn",
      "offset": [
        16298,
        16322
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "5689": {
      "fn": "CultureCoin.dexXMTSPIn",
      "offset": [
        16298,
        16322
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "5690": {
      "op": "POP"
    },
    "5691": {
      "op": "POP"
    },
    "5692": {
      "fn": "CultureCoin.dexXMTSPIn",
      "offset": [
        16353,
        16361
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 61,
      "value": "0xE5"
    },
    "5694": {
      "fn": "CultureCoin.dexXMTSPIn",
      "offset": [
        16353,
        16361
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "5695": {
      "fn": "CultureCoin.dexXMTSPIn",
      "offset": [
        16340,
        16349
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xE7"
    },
    "5697": {
      "fn": "CultureCoin.dexXMTSPIn",
      "offset": [
        16340,
        16349
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "5698": {
      "fn": "CultureCoin.dexXMTSPIn",
      "offset": [
        16340,
        16361
      ],
      "op": "GT",
      "path": "1"
    },
    "5699": {
      "branch": 197,
      "fn": "CultureCoin.dexXMTSPIn",
      "offset": [
        16340,
        16361
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "5700": {
      "fn": "CultureCoin.dexXMTSPIn",
      "offset": [
        16332,
        16386
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x1662"
    },
    "5704": {
      "branch": 197,
      "fn": "CultureCoin.dexXMTSPIn",
      "offset": [
        16332,
        16386
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "5705": {
      "fn": "CultureCoin.dexXMTSPIn",
      "offset": [
        16332,
        16386
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "5707": {
      "fn": "CultureCoin.dexXMTSPIn",
      "offset": [
        16332,
        16386
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "5708": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5712": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5714": {
      "op": "SHL"
    },
    "5715": {
      "fn": "CultureCoin.dexXMTSPIn",
      "offset": [
        16332,
        16386
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5716": {
      "fn": "CultureCoin.dexXMTSPIn",
      "offset": [
        16332,
        16386
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5717": {
      "fn": "CultureCoin.dexXMTSPIn",
      "offset": [
        16332,
        16386
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "5719": {
      "fn": "CultureCoin.dexXMTSPIn",
      "offset": [
        16332,
        16386
      ],
      "op": "ADD",
      "path": "1"
    },
    "5720": {
      "fn": "CultureCoin.dexXMTSPIn",
      "offset": [
        16332,
        16386
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0xC98"
    },
    "5724": {
      "fn": "CultureCoin.dexXMTSPIn",
      "offset": [
        16332,
        16386
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5725": {
      "fn": "CultureCoin.dexXMTSPIn",
      "offset": [
        16332,
        16386
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x3968"
    },
    "5729": {
      "fn": "CultureCoin.dexXMTSPIn",
      "jump": "i",
      "offset": [
        16332,
        16386
      ],
      "op": "JUMP",
      "path": "1"
    },
    "5730": {
      "fn": "CultureCoin.dexXMTSPIn",
      "offset": [
        16332,
        16386
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5731": {
      "fn": "CultureCoin.dexXMTSPIn",
      "offset": [
        16400,
        16411
      ],
      "op": "SWAP1",
      "path": "1",
      "statement": 62
    },
    "5732": {
      "op": "POP"
    },
    "5733": {
      "offset": [
        1772,
        1773
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1"
    },
    "5735": {
      "offset": [
        2872,
        2879
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x9A"
    },
    "5737": {
      "offset": [
        2872,
        2894
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "5738": {
      "fn": "CultureCoin.dexXMTSPIn",
      "offset": [
        15943,
        16418
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5739": {
      "fn": "CultureCoin.dexXMTSPIn",
      "jump": "o",
      "offset": [
        15943,
        16418
      ],
      "op": "JUMP",
      "path": "1"
    },
    "5740": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2704,
        2806
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "5741": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2760,
        2773
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x60"
    },
    "5743": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2792,
        2799
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 63,
      "value": "0x37"
    },
    "5745": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2785,
        2799
      ],
      "op": "DUP1",
      "path": "15"
    },
    "5746": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2785,
        2799
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "5747": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2785,
        2799
      ],
      "op": "PUSH3",
      "path": "15",
      "value": "0xB89"
    },
    "5751": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2785,
        2799
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5752": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2785,
        2799
      ],
      "op": "PUSH3",
      "path": "15",
      "value": "0x37A4"
    },
    "5756": {
      "fn": "ERC20Upgradeable.symbol",
      "jump": "i",
      "offset": [
        2785,
        2799
      ],
      "op": "JUMP",
      "path": "15"
    },
    "5757": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        14461,
        15303
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5758": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        14546,
        14553
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "5760": {
      "offset": [
        1815,
        1816
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x2"
    },
    "5762": {
      "offset": [
        2569,
        2576
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x9A"
    },
    "5764": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        2569,
        2576
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "5765": {
      "offset": [
        2569,
        2588
      ],
      "op": "EQ",
      "path": "14"
    },
    "5766": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        2569,
        2588
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "5767": {
      "offset": [
        2561,
        2624
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x16A5"
    },
    "5771": {
      "offset": [
        2561,
        2624
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "5772": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        2561,
        2624
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "5774": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        2561,
        2624
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "5775": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5779": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5781": {
      "op": "SHL"
    },
    "5782": {
      "offset": [
        2561,
        2624
      ],
      "op": "DUP2",
      "path": "14"
    },
    "5783": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        2561,
        2624
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5784": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        2561,
        2624
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "5786": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        2561,
        2624
      ],
      "op": "ADD",
      "path": "14"
    },
    "5787": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        2561,
        2624
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0xC98"
    },
    "5791": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        2561,
        2624
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "5792": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        2561,
        2624
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x387D"
    },
    "5796": {
      "fn": "CultureCoin.dexCCInFrom",
      "jump": "i",
      "offset": [
        2561,
        2624
      ],
      "op": "JUMP",
      "path": "14"
    },
    "5797": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        2561,
        2624
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "5798": {
      "offset": [
        1815,
        1816
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x2"
    },
    "5800": {
      "offset": [
        2699,
        2706
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x9A"
    },
    "5802": {
      "offset": [
        2699,
        2717
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "5803": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        14575,
        14581
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 64,
      "value": "0xEA"
    },
    "5805": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        14575,
        14581
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "5806": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        14575,
        14581
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x100"
    },
    "5809": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        14575,
        14581
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5810": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        14575,
        14581
      ],
      "op": "DIV",
      "path": "1"
    },
    "5811": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        14575,
        14581
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "5813": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        14575,
        14581
      ],
      "op": "AND",
      "path": "1"
    },
    "5814": {
      "branch": 198,
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        14574,
        14581
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "5815": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        14566,
        14632
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x171B"
    },
    "5819": {
      "branch": 198,
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        14566,
        14632
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "5820": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        14566,
        14632
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "5822": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        14566,
        14632
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "5823": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5827": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5829": {
      "op": "SHL"
    },
    "5830": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        14566,
        14632
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5831": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        14566,
        14632
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5832": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5834": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        14566,
        14632
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "5836": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        14566,
        14632
      ],
      "op": "DUP3",
      "path": "1"
    },
    "5837": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        14566,
        14632
      ],
      "op": "ADD",
      "path": "1"
    },
    "5838": {
      "op": "MSTORE"
    },
    "5839": {
      "op": "PUSH1",
      "value": "0x2E"
    },
    "5841": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5843": {
      "op": "DUP3"
    },
    "5844": {
      "op": "ADD"
    },
    "5845": {
      "op": "MSTORE"
    },
    "5846": {
      "op": "PUSH32",
      "value": "0x54686973206973206E6F74206120726567697374657220616E796D6F72652E20"
    },
    "5879": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5881": {
      "op": "DUP3"
    },
    "5882": {
      "op": "ADD"
    },
    "5883": {
      "op": "MSTORE"
    },
    "5884": {
      "op": "PUSH14",
      "value": "0x24BA1034B9903090313934B1B597"
    },
    "5899": {
      "op": "PUSH1",
      "value": "0x91"
    },
    "5901": {
      "op": "SHL"
    },
    "5902": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5904": {
      "op": "DUP3"
    },
    "5905": {
      "op": "ADD"
    },
    "5906": {
      "op": "MSTORE"
    },
    "5907": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "5909": {
      "op": "ADD"
    },
    "5910": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        14566,
        14632
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0xC98"
    },
    "5914": {
      "op": "JUMP"
    },
    "5915": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        14566,
        14632
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5916": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        14662,
        14663
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 65,
      "value": "0x0"
    },
    "5918": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        14650,
        14659
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xE3"
    },
    "5920": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        14650,
        14659
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "5921": {
      "branch": 199,
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        14650,
        14663
      ],
      "op": "GT",
      "path": "1"
    },
    "5922": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        14642,
        14677
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x1740"
    },
    "5926": {
      "branch": 199,
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        14642,
        14677
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "5927": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        14642,
        14677
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "5929": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        14642,
        14677
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "5930": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5934": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5936": {
      "op": "SHL"
    },
    "5937": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        14642,
        14677
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5938": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        14642,
        14677
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5939": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        14642,
        14677
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "5941": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        14642,
        14677
      ],
      "op": "ADD",
      "path": "1"
    },
    "5942": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        14642,
        14677
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0xC98"
    },
    "5946": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        14642,
        14677
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5947": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        14642,
        14677
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x3900"
    },
    "5951": {
      "fn": "CultureCoin.dexCCInFrom",
      "jump": "i",
      "offset": [
        14642,
        14677
      ],
      "op": "JUMP",
      "path": "1"
    },
    "5952": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        14642,
        14677
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5953": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        14702,
        14712
      ],
      "op": "CALLER",
      "path": "1",
      "statement": 66
    },
    "5954": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        14695,
        14713
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "5956": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        14695,
        14713
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5957": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        14695,
        14713
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5958": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        14695,
        14713
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5959": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        14695,
        14701
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xE8"
    },
    "5961": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        14695,
        14713
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "5963": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        14695,
        14713
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5964": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        14695,
        14713
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "5966": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        14695,
        14713
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5967": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        14695,
        14713
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "5968": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        14695,
        14713
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "5969": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        14695,
        14713
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "5971": {
      "branch": 200,
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        14695,
        14713
      ],
      "op": "AND",
      "path": "1"
    },
    "5972": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        14687,
        14750
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x17A1"
    },
    "5976": {
      "branch": 200,
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        14687,
        14750
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "5977": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        14687,
        14750
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "5979": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        14687,
        14750
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "5980": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5984": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5986": {
      "op": "SHL"
    },
    "5987": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        14687,
        14750
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5988": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        14687,
        14750
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5989": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5991": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        14687,
        14750
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "5993": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        14687,
        14750
      ],
      "op": "DUP3",
      "path": "1"
    },
    "5994": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        14687,
        14750
      ],
      "op": "ADD",
      "path": "1"
    },
    "5995": {
      "op": "DUP2"
    },
    "5996": {
      "op": "SWAP1"
    },
    "5997": {
      "op": "MSTORE"
    },
    "5998": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6000": {
      "op": "DUP3"
    },
    "6001": {
      "op": "ADD"
    },
    "6002": {
      "op": "MSTORE"
    },
    "6003": {
      "op": "PUSH32",
      "value": "0x596F752063616E27742075736520746869732066756E6374696F6E207965742E"
    },
    "6036": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6038": {
      "op": "DUP3"
    },
    "6039": {
      "op": "ADD"
    },
    "6040": {
      "op": "MSTORE"
    },
    "6041": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6043": {
      "op": "ADD"
    },
    "6044": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        14687,
        14750
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0xC98"
    },
    "6048": {
      "op": "JUMP"
    },
    "6049": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        14687,
        14750
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "6050": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        14765,
        14784
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "6052": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        14811,
        14818
      ],
      "op": "PUSH8",
      "path": "1",
      "value": "0xDE0B6B3A7640000"
    },
    "6061": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        14798,
        14807
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xE3"
    },
    "6063": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        14798,
        14807
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "6064": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        14788,
        14795
      ],
      "op": "DUP5",
      "path": "1"
    },
    "6065": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        14788,
        14807
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x17BC"
    },
    "6069": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        14788,
        14807
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "6070": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        14788,
        14807
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6071": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        14788,
        14807
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x3923"
    },
    "6075": {
      "fn": "CultureCoin.dexCCInFrom",
      "jump": "i",
      "offset": [
        14788,
        14807
      ],
      "op": "JUMP",
      "path": "1"
    },
    "6076": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        14788,
        14807
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "6077": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        14787,
        14818
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x17C8"
    },
    "6081": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        14787,
        14818
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "6082": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        14787,
        14818
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6083": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        14787,
        14818
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x3945"
    },
    "6087": {
      "fn": "CultureCoin.dexCCInFrom",
      "jump": "i",
      "offset": [
        14787,
        14818
      ],
      "op": "JUMP",
      "path": "1"
    },
    "6088": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        14787,
        14818
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "6089": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        14765,
        14818
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6090": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        14765,
        14818
      ],
      "op": "POP",
      "path": "1"
    },
    "6091": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        14851,
        14852
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 67,
      "value": "0xCD"
    },
    "6093": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        14851,
        14852
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "6094": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        14836,
        14847
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6095": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        14836,
        14852
      ],
      "op": "GT",
      "path": "1"
    },
    "6096": {
      "branch": 201,
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        14836,
        14852
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "6097": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        14828,
        14874
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x1812"
    },
    "6101": {
      "branch": 201,
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        14828,
        14874
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "6102": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        14828,
        14874
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "6104": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        14828,
        14874
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "6105": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6109": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6111": {
      "op": "SHL"
    },
    "6112": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        14828,
        14874
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6113": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        14828,
        14874
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6114": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6116": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        14828,
        14874
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "6118": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        14828,
        14874
      ],
      "op": "DUP3",
      "path": "1"
    },
    "6119": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        14828,
        14874
      ],
      "op": "ADD",
      "path": "1"
    },
    "6120": {
      "op": "MSTORE"
    },
    "6121": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "6123": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6125": {
      "op": "DUP3"
    },
    "6126": {
      "op": "ADD"
    },
    "6127": {
      "op": "MSTORE"
    },
    "6128": {
      "op": "PUSH17",
      "value": "0x2737BA1032B737BAB3B410333AB7323997"
    },
    "6146": {
      "op": "PUSH1",
      "value": "0x79"
    },
    "6148": {
      "op": "SHL"
    },
    "6149": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6151": {
      "op": "DUP3"
    },
    "6152": {
      "op": "ADD"
    },
    "6153": {
      "op": "MSTORE"
    },
    "6154": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6156": {
      "op": "ADD"
    },
    "6157": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        14828,
        14874
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0xC98"
    },
    "6161": {
      "op": "JUMP"
    },
    "6162": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        14828,
        14874
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "6163": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        14884,
        14907
      ],
      "op": "PUSH3",
      "path": "1",
      "statement": 68,
      "value": "0x181E"
    },
    "6167": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        14890,
        14897
      ],
      "op": "DUP5",
      "path": "1"
    },
    "6168": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        14899,
        14906
      ],
      "op": "DUP5",
      "path": "1"
    },
    "6169": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        14884,
        14889
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x28FB"
    },
    "6173": {
      "fn": "CultureCoin.dexCCInFrom",
      "jump": "i",
      "offset": [
        14884,
        14907
      ],
      "op": "JUMP",
      "path": "1"
    },
    "6174": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        14884,
        14907
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "6175": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        15021,
        15032
      ],
      "op": "DUP1",
      "path": "1",
      "statement": 69
    },
    "6176": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        15016,
        15017
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xCD"
    },
    "6178": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        15016,
        15017
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "6180": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        15016,
        15032
      ],
      "op": "DUP3",
      "path": "1"
    },
    "6181": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        15016,
        15032
      ],
      "op": "DUP3",
      "path": "1"
    },
    "6182": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        15016,
        15032
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "6183": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        15016,
        15032
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x1832"
    },
    "6187": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        15016,
        15032
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "6188": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        15016,
        15032
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6189": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        15016,
        15032
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x3863"
    },
    "6193": {
      "fn": "CultureCoin.dexCCInFrom",
      "jump": "i",
      "offset": [
        15016,
        15032
      ],
      "op": "JUMP",
      "path": "1"
    },
    "6194": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        15016,
        15032
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "6195": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        15016,
        15032
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "6196": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        15016,
        15032
      ],
      "op": "POP",
      "path": "1"
    },
    "6197": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        15016,
        15032
      ],
      "op": "POP",
      "path": "1"
    },
    "6198": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        15016,
        15032
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6199": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        15016,
        15032
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6200": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        15016,
        15032
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "6201": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        15016,
        15032
      ],
      "op": "POP",
      "path": "1"
    },
    "6202": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        15054,
        15065
      ],
      "op": "DUP1",
      "path": "1",
      "statement": 70
    },
    "6203": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        15042,
        15050
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xE6"
    },
    "6205": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        15042,
        15050
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "6207": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        15042,
        15065
      ],
      "op": "DUP3",
      "path": "1"
    },
    "6208": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        15042,
        15065
      ],
      "op": "DUP3",
      "path": "1"
    },
    "6209": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        15042,
        15065
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "6210": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        15042,
        15065
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x184D"
    },
    "6214": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        15042,
        15065
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "6215": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        15042,
        15065
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6216": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        15042,
        15065
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x37F7"
    },
    "6220": {
      "fn": "CultureCoin.dexCCInFrom",
      "jump": "i",
      "offset": [
        15042,
        15065
      ],
      "op": "JUMP",
      "path": "1"
    },
    "6221": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        15042,
        15065
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "6222": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        15042,
        15065
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "6223": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        15042,
        15065
      ],
      "op": "POP",
      "path": "1"
    },
    "6224": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        15042,
        15065
      ],
      "op": "POP",
      "path": "1"
    },
    "6225": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        15042,
        15065
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6226": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        15042,
        15065
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6227": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        15042,
        15065
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "6228": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        15042,
        15065
      ],
      "op": "POP",
      "path": "1"
    },
    "6229": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        15084,
        15094
      ],
      "op": "CALLER",
      "path": "1",
      "statement": 71
    },
    "6230": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6232": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6234": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6236": {
      "op": "SHL"
    },
    "6237": {
      "op": "SUB"
    },
    "6238": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        15075,
        15104
      ],
      "op": "AND",
      "path": "1"
    },
    "6239": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        15075,
        15104
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x495057BE"
    },
    "6244": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        15111,
        15122
      ],
      "op": "DUP3",
      "path": "1"
    },
    "6245": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        15075,
        15125
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "6247": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        15075,
        15125
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "6248": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        15075,
        15125
      ],
      "op": "DUP3",
      "path": "1"
    },
    "6249": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        15075,
        15125
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xFFFFFFFF"
    },
    "6254": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        15075,
        15125
      ],
      "op": "AND",
      "path": "1"
    },
    "6255": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        15075,
        15125
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xE0"
    },
    "6257": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        15075,
        15125
      ],
      "op": "SHL",
      "path": "1"
    },
    "6258": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        15075,
        15125
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6259": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        15075,
        15125
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6260": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        15075,
        15125
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "6262": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        15075,
        15125
      ],
      "op": "ADD",
      "path": "1"
    },
    "6263": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        15075,
        15125
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "6265": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        15075,
        15125
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "6267": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        15075,
        15125
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "6268": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        15075,
        15125
      ],
      "op": "DUP1",
      "path": "1"
    },
    "6269": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        15075,
        15125
      ],
      "op": "DUP4",
      "path": "1"
    },
    "6270": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        15075,
        15125
      ],
      "op": "SUB",
      "path": "1"
    },
    "6271": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        15075,
        15125
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6272": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        15075,
        15125
      ],
      "op": "DUP6",
      "path": "1"
    },
    "6273": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        15075,
        15125
      ],
      "op": "DUP9",
      "path": "1"
    },
    "6274": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        15075,
        15125
      ],
      "op": "DUP1",
      "path": "1"
    },
    "6275": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        15075,
        15125
      ],
      "op": "EXTCODESIZE",
      "path": "1"
    },
    "6276": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        15075,
        15125
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "6277": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        15075,
        15125
      ],
      "op": "DUP1",
      "path": "1"
    },
    "6278": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        15075,
        15125
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "6279": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        15075,
        15125
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x1890"
    },
    "6283": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        15075,
        15125
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "6284": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        15075,
        15125
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "6286": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        15075,
        15125
      ],
      "op": "DUP1",
      "path": "1"
    },
    "6287": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        15075,
        15125
      ],
      "op": "REVERT",
      "path": "1"
    },
    "6288": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        15075,
        15125
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "6289": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        15075,
        15125
      ],
      "op": "POP",
      "path": "1"
    },
    "6290": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        15075,
        15125
      ],
      "op": "GAS",
      "path": "1"
    },
    "6291": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        15075,
        15125
      ],
      "op": "CALL",
      "path": "1"
    },
    "6292": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        15075,
        15125
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "6293": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        15075,
        15125
      ],
      "op": "DUP1",
      "path": "1"
    },
    "6294": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        15075,
        15125
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "6295": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        15075,
        15125
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x18A5"
    },
    "6299": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        15075,
        15125
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "6300": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        15075,
        15125
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "6301": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        15075,
        15125
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "6303": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        15075,
        15125
      ],
      "op": "DUP1",
      "path": "1"
    },
    "6304": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        15075,
        15125
      ],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "6305": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        15075,
        15125
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "6306": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        15075,
        15125
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "6308": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        15075,
        15125
      ],
      "op": "REVERT",
      "path": "1"
    },
    "6309": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        15075,
        15125
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "6310": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        15075,
        15125
      ],
      "op": "POP",
      "path": "1"
    },
    "6311": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        15075,
        15125
      ],
      "op": "POP",
      "path": "1"
    },
    "6312": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        15075,
        15125
      ],
      "op": "POP",
      "path": "1"
    },
    "6313": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        15075,
        15125
      ],
      "op": "POP",
      "path": "1"
    },
    "6314": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        15075,
        15125
      ],
      "op": "POP",
      "path": "1"
    },
    "6315": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        15236,
        15243
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 72,
      "value": "0xE4"
    },
    "6317": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        15236,
        15243
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "6318": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        15224,
        15232
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xE6"
    },
    "6320": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        15224,
        15232
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "6321": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        15224,
        15243
      ],
      "op": "GT",
      "path": "1"
    },
    "6322": {
      "branch": 202,
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        15224,
        15243
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "6323": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        15216,
        15268
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x18D1"
    },
    "6327": {
      "branch": 202,
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        15216,
        15268
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "6328": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        15216,
        15268
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "6330": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        15216,
        15268
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "6331": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6335": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6337": {
      "op": "SHL"
    },
    "6338": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        15216,
        15268
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6339": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        15216,
        15268
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6340": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        15216,
        15268
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "6342": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        15216,
        15268
      ],
      "op": "ADD",
      "path": "1"
    },
    "6343": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        15216,
        15268
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0xC98"
    },
    "6347": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        15216,
        15268
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6348": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        15216,
        15268
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x3968"
    },
    "6352": {
      "fn": "CultureCoin.dexCCInFrom",
      "jump": "i",
      "offset": [
        15216,
        15268
      ],
      "op": "JUMP",
      "path": "1"
    },
    "6353": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        15216,
        15268
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "6354": {
      "offset": [
        1772,
        1773
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1"
    },
    "6356": {
      "offset": [
        2872,
        2879
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x9A"
    },
    "6358": {
      "offset": [
        2872,
        2894
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "6359": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        15285,
        15296
      ],
      "op": "SWAP4",
      "path": "1",
      "statement": 73
    },
    "6360": {
      "fn": "CultureCoin.dexCCInFrom",
      "offset": [
        14461,
        15303
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "6361": {
      "op": "POP"
    },
    "6362": {
      "op": "POP"
    },
    "6363": {
      "op": "POP"
    },
    "6364": {
      "fn": "CultureCoin.dexCCInFrom",
      "jump": "o",
      "offset": [
        14461,
        15303
      ],
      "op": "JUMP",
      "path": "1"
    },
    "6365": {
      "fn": "CultureCoin.flagMemeCoin",
      "offset": [
        21330,
        21520
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "6366": {
      "fn": "CultureCoin.flagMemeCoin",
      "offset": [
        21414,
        21417
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 74,
      "value": "0xD5"
    },
    "6368": {
      "fn": "CultureCoin.flagMemeCoin",
      "offset": [
        21414,
        21417
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "6369": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6371": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6373": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6375": {
      "op": "SHL"
    },
    "6376": {
      "op": "SUB"
    },
    "6377": {
      "fn": "CultureCoin.flagMemeCoin",
      "offset": [
        21414,
        21417
      ],
      "op": "AND",
      "path": "1"
    },
    "6378": {
      "fn": "CultureCoin.flagMemeCoin",
      "offset": [
        21400,
        21410
      ],
      "op": "CALLER",
      "path": "1"
    },
    "6379": {
      "branch": 203,
      "fn": "CultureCoin.flagMemeCoin",
      "offset": [
        21400,
        21417
      ],
      "op": "EQ",
      "path": "1"
    },
    "6380": {
      "fn": "CultureCoin.flagMemeCoin",
      "offset": [
        21392,
        21480
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x195F"
    },
    "6384": {
      "branch": 203,
      "fn": "CultureCoin.flagMemeCoin",
      "offset": [
        21392,
        21480
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "6385": {
      "fn": "CultureCoin.flagMemeCoin",
      "offset": [
        21392,
        21480
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "6387": {
      "fn": "CultureCoin.flagMemeCoin",
      "offset": [
        21392,
        21480
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "6388": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6392": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6394": {
      "op": "SHL"
    },
    "6395": {
      "fn": "CultureCoin.flagMemeCoin",
      "offset": [
        21392,
        21480
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6396": {
      "fn": "CultureCoin.flagMemeCoin",
      "offset": [
        21392,
        21480
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6397": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6399": {
      "fn": "CultureCoin.flagMemeCoin",
      "offset": [
        21392,
        21480
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "6401": {
      "fn": "CultureCoin.flagMemeCoin",
      "offset": [
        21392,
        21480
      ],
      "op": "DUP3",
      "path": "1"
    },
    "6402": {
      "fn": "CultureCoin.flagMemeCoin",
      "offset": [
        21392,
        21480
      ],
      "op": "ADD",
      "path": "1"
    },
    "6403": {
      "op": "MSTORE"
    },
    "6404": {
      "op": "PUSH1",
      "value": "0x3A"
    },
    "6406": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6408": {
      "op": "DUP3"
    },
    "6409": {
      "op": "ADD"
    },
    "6410": {
      "op": "MSTORE"
    },
    "6411": {
      "op": "PUSH32",
      "value": "0x4F6E6C79207468652043756C74757265436F696E2061646D696E697374726174"
    },
    "6444": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6446": {
      "op": "DUP3"
    },
    "6447": {
      "op": "ADD"
    },
    "6448": {
      "op": "MSTORE"
    },
    "6449": {
      "op": "PUSH32",
      "value": "0x6F72206D617920666C6167206120636F696E20617320444F412E000000000000"
    },
    "6482": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6484": {
      "op": "DUP3"
    },
    "6485": {
      "op": "ADD"
    },
    "6486": {
      "op": "MSTORE"
    },
    "6487": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "6489": {
      "op": "ADD"
    },
    "6490": {
      "fn": "CultureCoin.flagMemeCoin",
      "offset": [
        21392,
        21480
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0xC98"
    },
    "6494": {
      "op": "JUMP"
    },
    "6495": {
      "fn": "CultureCoin.flagMemeCoin",
      "offset": [
        21392,
        21480
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "6496": {
      "fn": "CultureCoin.flagMemeCoin",
      "offset": [
        21508,
        21513
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 75,
      "value": "0x0"
    },
    "6498": {
      "fn": "CultureCoin.flagMemeCoin",
      "offset": [
        21490,
        21498
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xDB"
    },
    "6500": {
      "fn": "CultureCoin.flagMemeCoin",
      "offset": [
        21499,
        21504
      ],
      "op": "DUP3",
      "path": "1"
    },
    "6501": {
      "fn": "CultureCoin.flagMemeCoin",
      "offset": [
        21490,
        21505
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "6503": {
      "fn": "CultureCoin.flagMemeCoin",
      "offset": [
        21490,
        21505
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "6504": {
      "fn": "CultureCoin.flagMemeCoin",
      "offset": [
        21490,
        21505
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x1973"
    },
    "6508": {
      "fn": "CultureCoin.flagMemeCoin",
      "offset": [
        21490,
        21505
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "6509": {
      "fn": "CultureCoin.flagMemeCoin",
      "offset": [
        21490,
        21505
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6510": {
      "fn": "CultureCoin.flagMemeCoin",
      "offset": [
        21490,
        21505
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x3812"
    },
    "6514": {
      "fn": "CultureCoin.flagMemeCoin",
      "jump": "i",
      "offset": [
        21490,
        21505
      ],
      "op": "JUMP",
      "path": "1"
    },
    "6515": {
      "fn": "CultureCoin.flagMemeCoin",
      "offset": [
        21490,
        21505
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "6516": {
      "fn": "CultureCoin.flagMemeCoin",
      "offset": [
        21490,
        21505
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6517": {
      "fn": "CultureCoin.flagMemeCoin",
      "offset": [
        21490,
        21505
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6518": {
      "fn": "CultureCoin.flagMemeCoin",
      "offset": [
        21490,
        21505
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6519": {
      "fn": "CultureCoin.flagMemeCoin",
      "offset": [
        21490,
        21505
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "6521": {
      "fn": "CultureCoin.flagMemeCoin",
      "offset": [
        21490,
        21505
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "6522": {
      "fn": "CultureCoin.flagMemeCoin",
      "offset": [
        21490,
        21505
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6523": {
      "fn": "CultureCoin.flagMemeCoin",
      "offset": [
        21490,
        21505
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6524": {
      "fn": "CultureCoin.flagMemeCoin",
      "offset": [
        21490,
        21505
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6525": {
      "fn": "CultureCoin.flagMemeCoin",
      "offset": [
        21490,
        21505
      ],
      "op": "SUB",
      "path": "1"
    },
    "6526": {
      "fn": "CultureCoin.flagMemeCoin",
      "offset": [
        21490,
        21505
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "6528": {
      "fn": "CultureCoin.flagMemeCoin",
      "offset": [
        21490,
        21505
      ],
      "op": "ADD",
      "path": "1"
    },
    "6529": {
      "fn": "CultureCoin.flagMemeCoin",
      "offset": [
        21490,
        21505
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6530": {
      "fn": "CultureCoin.flagMemeCoin",
      "offset": [
        21490,
        21505
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "6531": {
      "fn": "CultureCoin.flagMemeCoin",
      "offset": [
        21490,
        21513
      ],
      "op": "DUP1",
      "path": "1"
    },
    "6532": {
      "fn": "CultureCoin.flagMemeCoin",
      "offset": [
        21490,
        21513
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "6533": {
      "fn": "CultureCoin.flagMemeCoin",
      "offset": [
        21490,
        21513
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "6534": {
      "fn": "CultureCoin.flagMemeCoin",
      "offset": [
        21490,
        21513
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "6535": {
      "fn": "CultureCoin.flagMemeCoin",
      "offset": [
        21490,
        21513
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "6536": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "6538": {
      "op": "NOT"
    },
    "6539": {
      "fn": "CultureCoin.flagMemeCoin",
      "offset": [
        21490,
        21513
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6540": {
      "fn": "CultureCoin.flagMemeCoin",
      "offset": [
        21490,
        21513
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "6541": {
      "fn": "CultureCoin.flagMemeCoin",
      "offset": [
        21490,
        21513
      ],
      "op": "AND",
      "path": "1"
    },
    "6542": {
      "fn": "CultureCoin.flagMemeCoin",
      "offset": [
        21490,
        21513
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "6543": {
      "fn": "CultureCoin.flagMemeCoin",
      "offset": [
        21490,
        21513
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6544": {
      "fn": "CultureCoin.flagMemeCoin",
      "offset": [
        21490,
        21513
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "6545": {
      "fn": "CultureCoin.flagMemeCoin",
      "offset": [
        21490,
        21513
      ],
      "op": "OR",
      "path": "1"
    },
    "6546": {
      "fn": "CultureCoin.flagMemeCoin",
      "offset": [
        21490,
        21513
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6547": {
      "fn": "CultureCoin.flagMemeCoin",
      "offset": [
        21490,
        21513
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "6548": {
      "op": "POP"
    },
    "6549": {
      "fn": "CultureCoin.flagMemeCoin",
      "jump": "o",
      "offset": [
        21330,
        21520
      ],
      "op": "JUMP",
      "path": "1"
    },
    "6550": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6931,
        7358
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "6551": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7024,
        7028
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "6553": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        929,
        939
      ],
      "op": "CALLER",
      "path": "20"
    },
    "6554": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7024,
        7028
      ],
      "op": "DUP2",
      "path": "15"
    },
    "6555": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7105,
        7130
      ],
      "op": "PUSH3",
      "path": "15",
      "value": "0x19A6"
    },
    "6559": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        929,
        939
      ],
      "op": "DUP3",
      "path": "20"
    },
    "6560": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7122,
        7129
      ],
      "op": "DUP7",
      "path": "15"
    },
    "6561": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7105,
        7114
      ],
      "op": "PUSH3",
      "path": "15",
      "value": "0x2164"
    },
    "6565": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "jump": "i",
      "offset": [
        7105,
        7130
      ],
      "op": "JUMP",
      "path": "15"
    },
    "6566": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7105,
        7130
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "6567": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7078,
        7130
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "6568": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7078,
        7130
      ],
      "op": "POP",
      "path": "15"
    },
    "6569": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7168,
        7183
      ],
      "op": "DUP4",
      "path": "15",
      "statement": 76
    },
    "6570": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7148,
        7164
      ],
      "op": "DUP2",
      "path": "15"
    },
    "6571": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7148,
        7183
      ],
      "op": "LT",
      "path": "15"
    },
    "6572": {
      "branch": 222,
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7148,
        7183
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "6573": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7140,
        7225
      ],
      "op": "PUSH3",
      "path": "15",
      "value": "0x1A08"
    },
    "6577": {
      "branch": 222,
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7140,
        7225
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "6578": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7140,
        7225
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "6580": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7140,
        7225
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "6581": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6585": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6587": {
      "op": "SHL"
    },
    "6588": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7140,
        7225
      ],
      "op": "DUP2",
      "path": "15"
    },
    "6589": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7140,
        7225
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "6590": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6592": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7140,
        7225
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "6594": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7140,
        7225
      ],
      "op": "DUP3",
      "path": "15"
    },
    "6595": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7140,
        7225
      ],
      "op": "ADD",
      "path": "15"
    },
    "6596": {
      "op": "MSTORE"
    },
    "6597": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "6599": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6601": {
      "op": "DUP3"
    },
    "6602": {
      "op": "ADD"
    },
    "6603": {
      "op": "MSTORE"
    },
    "6604": {
      "op": "PUSH32",
      "value": "0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
    },
    "6637": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6639": {
      "op": "DUP3"
    },
    "6640": {
      "op": "ADD"
    },
    "6641": {
      "op": "MSTORE"
    },
    "6642": {
      "op": "PUSH5",
      "value": "0x207A65726F"
    },
    "6648": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "6650": {
      "op": "SHL"
    },
    "6651": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6653": {
      "op": "DUP3"
    },
    "6654": {
      "op": "ADD"
    },
    "6655": {
      "op": "MSTORE"
    },
    "6656": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "6658": {
      "op": "ADD"
    },
    "6659": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7140,
        7225
      ],
      "op": "PUSH3",
      "path": "15",
      "value": "0xC98"
    },
    "6663": {
      "op": "JUMP"
    },
    "6664": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7140,
        7225
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "6665": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7259,
        7319
      ],
      "op": "PUSH3",
      "path": "15",
      "statement": 77,
      "value": "0xDA8"
    },
    "6669": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7268,
        7273
      ],
      "op": "DUP3",
      "path": "15"
    },
    "6670": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7275,
        7282
      ],
      "op": "DUP7",
      "path": "15"
    },
    "6671": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7303,
        7318
      ],
      "op": "DUP7",
      "path": "15"
    },
    "6672": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7284,
        7300
      ],
      "op": "DUP5",
      "path": "15"
    },
    "6673": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7284,
        7318
      ],
      "op": "SUB",
      "path": "15"
    },
    "6674": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7259,
        7267
      ],
      "op": "PUSH3",
      "path": "15",
      "value": "0x258B"
    },
    "6678": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "jump": "i",
      "offset": [
        7259,
        7319
      ],
      "op": "JUMP",
      "path": "15"
    },
    "6679": {
      "fn": "CultureCoin.stake",
      "offset": [
        5291,
        5736
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "6680": {
      "fn": "CultureCoin.stake",
      "offset": [
        5351,
        5356
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 78,
      "value": "0xEA"
    },
    "6682": {
      "fn": "CultureCoin.stake",
      "offset": [
        5351,
        5356
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "6683": {
      "fn": "CultureCoin.stake",
      "offset": [
        5351,
        5356
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "6685": {
      "fn": "CultureCoin.stake",
      "offset": [
        5351,
        5356
      ],
      "op": "AND",
      "path": "1"
    },
    "6686": {
      "branch": 204,
      "fn": "CultureCoin.stake",
      "offset": [
        5350,
        5356
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "6687": {
      "fn": "CultureCoin.stake",
      "offset": [
        5342,
        5383
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x1A3D"
    },
    "6691": {
      "branch": 204,
      "fn": "CultureCoin.stake",
      "offset": [
        5342,
        5383
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "6692": {
      "fn": "CultureCoin.stake",
      "offset": [
        5342,
        5383
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "6694": {
      "fn": "CultureCoin.stake",
      "offset": [
        5342,
        5383
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "6695": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6699": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6701": {
      "op": "SHL"
    },
    "6702": {
      "fn": "CultureCoin.stake",
      "offset": [
        5342,
        5383
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6703": {
      "fn": "CultureCoin.stake",
      "offset": [
        5342,
        5383
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6704": {
      "fn": "CultureCoin.stake",
      "offset": [
        5342,
        5383
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "6706": {
      "fn": "CultureCoin.stake",
      "offset": [
        5342,
        5383
      ],
      "op": "ADD",
      "path": "1"
    },
    "6707": {
      "fn": "CultureCoin.stake",
      "offset": [
        5342,
        5383
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0xC98"
    },
    "6711": {
      "fn": "CultureCoin.stake",
      "offset": [
        5342,
        5383
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6712": {
      "fn": "CultureCoin.stake",
      "offset": [
        5342,
        5383
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x3996"
    },
    "6716": {
      "fn": "CultureCoin.stake",
      "jump": "i",
      "offset": [
        5342,
        5383
      ],
      "op": "JUMP",
      "path": "1"
    },
    "6717": {
      "fn": "CultureCoin.stake",
      "offset": [
        5342,
        5383
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "6718": {
      "fn": "CultureCoin.stake",
      "offset": [
        5402,
        5408
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 79,
      "value": "0xEA"
    },
    "6720": {
      "fn": "CultureCoin.stake",
      "offset": [
        5402,
        5408
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "6721": {
      "fn": "CultureCoin.stake",
      "offset": [
        5402,
        5408
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x100"
    },
    "6724": {
      "fn": "CultureCoin.stake",
      "offset": [
        5402,
        5408
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6725": {
      "fn": "CultureCoin.stake",
      "offset": [
        5402,
        5408
      ],
      "op": "DIV",
      "path": "1"
    },
    "6726": {
      "fn": "CultureCoin.stake",
      "offset": [
        5402,
        5408
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "6728": {
      "fn": "CultureCoin.stake",
      "offset": [
        5402,
        5408
      ],
      "op": "AND",
      "path": "1"
    },
    "6729": {
      "branch": 205,
      "fn": "CultureCoin.stake",
      "offset": [
        5401,
        5408
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "6730": {
      "fn": "CultureCoin.stake",
      "offset": [
        5393,
        5471
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x1A68"
    },
    "6734": {
      "branch": 205,
      "fn": "CultureCoin.stake",
      "offset": [
        5393,
        5471
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "6735": {
      "fn": "CultureCoin.stake",
      "offset": [
        5393,
        5471
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "6737": {
      "fn": "CultureCoin.stake",
      "offset": [
        5393,
        5471
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "6738": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6742": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6744": {
      "op": "SHL"
    },
    "6745": {
      "fn": "CultureCoin.stake",
      "offset": [
        5393,
        5471
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6746": {
      "fn": "CultureCoin.stake",
      "offset": [
        5393,
        5471
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6747": {
      "fn": "CultureCoin.stake",
      "offset": [
        5393,
        5471
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "6749": {
      "fn": "CultureCoin.stake",
      "offset": [
        5393,
        5471
      ],
      "op": "ADD",
      "path": "1"
    },
    "6750": {
      "fn": "CultureCoin.stake",
      "offset": [
        5393,
        5471
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0xC98"
    },
    "6754": {
      "fn": "CultureCoin.stake",
      "offset": [
        5393,
        5471
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6755": {
      "fn": "CultureCoin.stake",
      "offset": [
        5393,
        5471
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x39C6"
    },
    "6759": {
      "fn": "CultureCoin.stake",
      "jump": "i",
      "offset": [
        5393,
        5471
      ],
      "op": "JUMP",
      "path": "1"
    },
    "6760": {
      "fn": "CultureCoin.stake",
      "offset": [
        5393,
        5471
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "6761": {
      "fn": "CultureCoin.stake",
      "offset": [
        5554,
        5580
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 80,
      "value": "0x40"
    },
    "6763": {
      "fn": "CultureCoin.stake",
      "offset": [
        5554,
        5580
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "6764": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "6769": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6771": {
      "op": "SHL"
    },
    "6772": {
      "fn": "CultureCoin.stake",
      "offset": [
        5554,
        5580
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6773": {
      "fn": "CultureCoin.stake",
      "offset": [
        5554,
        5580
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6774": {
      "fn": "CultureCoin.stake",
      "offset": [
        5554,
        5558
      ],
      "op": "ADDRESS",
      "path": "1"
    },
    "6775": {
      "fn": "CultureCoin.stake",
      "offset": [
        5554,
        5558
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6776": {
      "fn": "CultureCoin.stake",
      "offset": [
        5554,
        5568
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x70A08231"
    },
    "6781": {
      "fn": "CultureCoin.stake",
      "offset": [
        5554,
        5568
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6782": {
      "fn": "CultureCoin.stake",
      "offset": [
        5554,
        5580
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x1A8D"
    },
    "6786": {
      "fn": "CultureCoin.stake",
      "offset": [
        5554,
        5580
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6787": {
      "fn": "CultureCoin.stake",
      "offset": [
        5569,
        5579
      ],
      "op": "CALLER",
      "path": "1"
    },
    "6788": {
      "fn": "CultureCoin.stake",
      "offset": [
        5569,
        5579
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6789": {
      "fn": "CultureCoin.stake",
      "offset": [
        5554,
        5580
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "6791": {
      "fn": "CultureCoin.stake",
      "offset": [
        5554,
        5580
      ],
      "op": "ADD",
      "path": "1"
    },
    "6792": {
      "fn": "CultureCoin.stake",
      "offset": [
        5554,
        5580
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x340C"
    },
    "6796": {
      "fn": "CultureCoin.stake",
      "jump": "i",
      "offset": [
        5554,
        5580
      ],
      "op": "JUMP",
      "path": "1"
    },
    "6797": {
      "fn": "CultureCoin.stake",
      "offset": [
        5554,
        5580
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "6798": {
      "fn": "CultureCoin.stake",
      "offset": [
        5554,
        5580
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "6800": {
      "fn": "CultureCoin.stake",
      "offset": [
        5554,
        5580
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "6802": {
      "fn": "CultureCoin.stake",
      "offset": [
        5554,
        5580
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "6803": {
      "fn": "CultureCoin.stake",
      "offset": [
        5554,
        5580
      ],
      "op": "DUP1",
      "path": "1"
    },
    "6804": {
      "fn": "CultureCoin.stake",
      "offset": [
        5554,
        5580
      ],
      "op": "DUP4",
      "path": "1"
    },
    "6805": {
      "fn": "CultureCoin.stake",
      "offset": [
        5554,
        5580
      ],
      "op": "SUB",
      "path": "1"
    },
    "6806": {
      "fn": "CultureCoin.stake",
      "offset": [
        5554,
        5580
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6807": {
      "fn": "CultureCoin.stake",
      "offset": [
        5554,
        5580
      ],
      "op": "DUP7",
      "path": "1"
    },
    "6808": {
      "fn": "CultureCoin.stake",
      "offset": [
        5554,
        5580
      ],
      "op": "DUP1",
      "path": "1"
    },
    "6809": {
      "fn": "CultureCoin.stake",
      "offset": [
        5554,
        5580
      ],
      "op": "EXTCODESIZE",
      "path": "1"
    },
    "6810": {
      "fn": "CultureCoin.stake",
      "offset": [
        5554,
        5580
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "6811": {
      "fn": "CultureCoin.stake",
      "offset": [
        5554,
        5580
      ],
      "op": "DUP1",
      "path": "1"
    },
    "6812": {
      "fn": "CultureCoin.stake",
      "offset": [
        5554,
        5580
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "6813": {
      "fn": "CultureCoin.stake",
      "offset": [
        5554,
        5580
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x1AA6"
    },
    "6817": {
      "fn": "CultureCoin.stake",
      "offset": [
        5554,
        5580
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "6818": {
      "fn": "CultureCoin.stake",
      "offset": [
        5554,
        5580
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "6820": {
      "fn": "CultureCoin.stake",
      "offset": [
        5554,
        5580
      ],
      "op": "DUP1",
      "path": "1"
    },
    "6821": {
      "fn": "CultureCoin.stake",
      "offset": [
        5554,
        5580
      ],
      "op": "REVERT",
      "path": "1"
    },
    "6822": {
      "fn": "CultureCoin.stake",
      "offset": [
        5554,
        5580
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "6823": {
      "fn": "CultureCoin.stake",
      "offset": [
        5554,
        5580
      ],
      "op": "POP",
      "path": "1"
    },
    "6824": {
      "fn": "CultureCoin.stake",
      "offset": [
        5554,
        5580
      ],
      "op": "GAS",
      "path": "1"
    },
    "6825": {
      "fn": "CultureCoin.stake",
      "offset": [
        5554,
        5580
      ],
      "op": "STATICCALL",
      "path": "1"
    },
    "6826": {
      "fn": "CultureCoin.stake",
      "offset": [
        5554,
        5580
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "6827": {
      "fn": "CultureCoin.stake",
      "offset": [
        5554,
        5580
      ],
      "op": "DUP1",
      "path": "1"
    },
    "6828": {
      "fn": "CultureCoin.stake",
      "offset": [
        5554,
        5580
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "6829": {
      "fn": "CultureCoin.stake",
      "offset": [
        5554,
        5580
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x1ABB"
    },
    "6833": {
      "fn": "CultureCoin.stake",
      "offset": [
        5554,
        5580
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "6834": {
      "fn": "CultureCoin.stake",
      "offset": [
        5554,
        5580
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "6835": {
      "fn": "CultureCoin.stake",
      "offset": [
        5554,
        5580
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "6837": {
      "fn": "CultureCoin.stake",
      "offset": [
        5554,
        5580
      ],
      "op": "DUP1",
      "path": "1"
    },
    "6838": {
      "fn": "CultureCoin.stake",
      "offset": [
        5554,
        5580
      ],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "6839": {
      "fn": "CultureCoin.stake",
      "offset": [
        5554,
        5580
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "6840": {
      "fn": "CultureCoin.stake",
      "offset": [
        5554,
        5580
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "6842": {
      "fn": "CultureCoin.stake",
      "offset": [
        5554,
        5580
      ],
      "op": "REVERT",
      "path": "1"
    },
    "6843": {
      "fn": "CultureCoin.stake",
      "offset": [
        5554,
        5580
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "6844": {
      "fn": "CultureCoin.stake",
      "offset": [
        5554,
        5580
      ],
      "op": "POP",
      "path": "1"
    },
    "6845": {
      "fn": "CultureCoin.stake",
      "offset": [
        5554,
        5580
      ],
      "op": "POP",
      "path": "1"
    },
    "6846": {
      "fn": "CultureCoin.stake",
      "offset": [
        5554,
        5580
      ],
      "op": "POP",
      "path": "1"
    },
    "6847": {
      "fn": "CultureCoin.stake",
      "offset": [
        5554,
        5580
      ],
      "op": "POP",
      "path": "1"
    },
    "6848": {
      "fn": "CultureCoin.stake",
      "offset": [
        5554,
        5580
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "6850": {
      "fn": "CultureCoin.stake",
      "offset": [
        5554,
        5580
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "6851": {
      "fn": "CultureCoin.stake",
      "offset": [
        5554,
        5580
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "6852": {
      "fn": "CultureCoin.stake",
      "offset": [
        5554,
        5580
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "6854": {
      "fn": "CultureCoin.stake",
      "offset": [
        5554,
        5580
      ],
      "op": "NOT",
      "path": "1"
    },
    "6855": {
      "fn": "CultureCoin.stake",
      "offset": [
        5554,
        5580
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "6857": {
      "fn": "CultureCoin.stake",
      "offset": [
        5554,
        5580
      ],
      "op": "DUP3",
      "path": "1"
    },
    "6858": {
      "fn": "CultureCoin.stake",
      "offset": [
        5554,
        5580
      ],
      "op": "ADD",
      "path": "1"
    },
    "6859": {
      "fn": "CultureCoin.stake",
      "offset": [
        5554,
        5580
      ],
      "op": "AND",
      "path": "1"
    },
    "6860": {
      "fn": "CultureCoin.stake",
      "offset": [
        5554,
        5580
      ],
      "op": "DUP3",
      "path": "1"
    },
    "6861": {
      "fn": "CultureCoin.stake",
      "offset": [
        5554,
        5580
      ],
      "op": "ADD",
      "path": "1"
    },
    "6862": {
      "fn": "CultureCoin.stake",
      "offset": [
        5554,
        5580
      ],
      "op": "DUP1",
      "path": "1"
    },
    "6863": {
      "fn": "CultureCoin.stake",
      "offset": [
        5554,
        5580
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "6865": {
      "fn": "CultureCoin.stake",
      "offset": [
        5554,
        5580
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6866": {
      "fn": "CultureCoin.stake",
      "offset": [
        5554,
        5580
      ],
      "op": "POP",
      "path": "1"
    },
    "6867": {
      "fn": "CultureCoin.stake",
      "offset": [
        5554,
        5580
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6868": {
      "fn": "CultureCoin.stake",
      "offset": [
        5554,
        5580
      ],
      "op": "ADD",
      "path": "1"
    },
    "6869": {
      "fn": "CultureCoin.stake",
      "offset": [
        5554,
        5580
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6870": {
      "fn": "CultureCoin.stake",
      "offset": [
        5554,
        5580
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x1AE1"
    },
    "6874": {
      "fn": "CultureCoin.stake",
      "offset": [
        5554,
        5580
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "6875": {
      "fn": "CultureCoin.stake",
      "offset": [
        5554,
        5580
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6876": {
      "fn": "CultureCoin.stake",
      "offset": [
        5554,
        5580
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x3A23"
    },
    "6880": {
      "fn": "CultureCoin.stake",
      "jump": "i",
      "offset": [
        5554,
        5580
      ],
      "op": "JUMP",
      "path": "1"
    },
    "6881": {
      "fn": "CultureCoin.stake",
      "offset": [
        5554,
        5580
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "6882": {
      "fn": "CultureCoin.stake",
      "offset": [
        5544,
        5551
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6883": {
      "branch": 206,
      "fn": "CultureCoin.stake",
      "offset": [
        5544,
        5580
      ],
      "op": "LT",
      "path": "1"
    },
    "6884": {
      "fn": "CultureCoin.stake",
      "offset": [
        5536,
        5615
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x1B31"
    },
    "6888": {
      "branch": 206,
      "fn": "CultureCoin.stake",
      "offset": [
        5536,
        5615
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "6889": {
      "fn": "CultureCoin.stake",
      "offset": [
        5536,
        5615
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "6891": {
      "fn": "CultureCoin.stake",
      "offset": [
        5536,
        5615
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "6892": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6896": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6898": {
      "op": "SHL"
    },
    "6899": {
      "fn": "CultureCoin.stake",
      "offset": [
        5536,
        5615
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6900": {
      "fn": "CultureCoin.stake",
      "offset": [
        5536,
        5615
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6901": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6903": {
      "fn": "CultureCoin.stake",
      "offset": [
        5536,
        5615
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "6905": {
      "fn": "CultureCoin.stake",
      "offset": [
        5536,
        5615
      ],
      "op": "DUP3",
      "path": "1"
    },
    "6906": {
      "fn": "CultureCoin.stake",
      "offset": [
        5536,
        5615
      ],
      "op": "ADD",
      "path": "1"
    },
    "6907": {
      "op": "MSTORE"
    },
    "6908": {
      "op": "PUSH1",
      "value": "0x1E"
    },
    "6910": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6912": {
      "op": "DUP3"
    },
    "6913": {
      "op": "ADD"
    },
    "6914": {
      "op": "MSTORE"
    },
    "6915": {
      "op": "PUSH32",
      "value": "0x43616E6E6F74207374616B65206D6F7265207468616E20796F75206F776E0000"
    },
    "6948": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6950": {
      "op": "DUP3"
    },
    "6951": {
      "op": "ADD"
    },
    "6952": {
      "op": "MSTORE"
    },
    "6953": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6955": {
      "op": "ADD"
    },
    "6956": {
      "fn": "CultureCoin.stake",
      "offset": [
        5536,
        5615
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0xC98"
    },
    "6960": {
      "op": "JUMP"
    },
    "6961": {
      "fn": "CultureCoin.stake",
      "offset": [
        5536,
        5615
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "6962": {
      "fn": "CultureCoin.stake",
      "offset": [
        5626,
        5641
      ],
      "op": "PUSH3",
      "path": "1",
      "statement": 81,
      "value": "0xF5B"
    },
    "6966": {
      "fn": "CultureCoin.stake",
      "offset": [
        5633,
        5640
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6967": {
      "fn": "CultureCoin.stake",
      "offset": [
        5626,
        5632
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x2A52"
    },
    "6971": {
      "fn": "CultureCoin.stake",
      "jump": "i",
      "offset": [
        5626,
        5641
      ],
      "op": "JUMP",
      "path": "1"
    },
    "6972": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4066,
        4255
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "6973": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4145,
        4149
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "6975": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        929,
        939
      ],
      "op": "CALLER",
      "path": "20"
    },
    "6976": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4199,
        4227
      ],
      "op": "PUSH3",
      "path": "15",
      "statement": 82,
      "value": "0xC22"
    },
    "6980": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        929,
        939
      ],
      "op": "DUP2",
      "path": "20"
    },
    "6981": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4216,
        4218
      ],
      "op": "DUP6",
      "path": "15"
    },
    "6982": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4220,
        4226
      ],
      "op": "DUP6",
      "path": "15"
    },
    "6983": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4199,
        4208
      ],
      "op": "PUSH3",
      "path": "15",
      "value": "0x2734"
    },
    "6987": {
      "fn": "ERC20Upgradeable.transfer",
      "jump": "i",
      "offset": [
        4199,
        4227
      ],
      "op": "JUMP",
      "path": "15"
    },
    "6988": {
      "fn": "CultureCoin.setDexCCRate",
      "offset": [
        16564,
        16688
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "6989": {
      "fn": "CultureCoin.setDexCCRate",
      "offset": [
        16631,
        16634
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 83,
      "value": "0xD5"
    },
    "6991": {
      "fn": "CultureCoin.setDexCCRate",
      "offset": [
        16631,
        16634
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "6992": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6994": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6996": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6998": {
      "op": "SHL"
    },
    "6999": {
      "op": "SUB"
    },
    "7000": {
      "fn": "CultureCoin.setDexCCRate",
      "offset": [
        16631,
        16634
      ],
      "op": "AND",
      "path": "1"
    },
    "7001": {
      "fn": "CultureCoin.setDexCCRate",
      "offset": [
        16638,
        16648
      ],
      "op": "CALLER",
      "path": "1"
    },
    "7002": {
      "branch": 207,
      "fn": "CultureCoin.setDexCCRate",
      "offset": [
        16631,
        16648
      ],
      "op": "EQ",
      "path": "1"
    },
    "7003": {
      "fn": "CultureCoin.setDexCCRate",
      "offset": [
        16623,
        16649
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x1B64"
    },
    "7007": {
      "branch": 207,
      "fn": "CultureCoin.setDexCCRate",
      "offset": [
        16623,
        16649
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "7008": {
      "fn": "CultureCoin.setDexCCRate",
      "offset": [
        16623,
        16649
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "7010": {
      "fn": "CultureCoin.setDexCCRate",
      "offset": [
        16623,
        16649
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7011": {
      "fn": "CultureCoin.setDexCCRate",
      "offset": [
        16623,
        16649
      ],
      "op": "REVERT",
      "path": "1"
    },
    "7012": {
      "fn": "CultureCoin.setDexCCRate",
      "offset": [
        16623,
        16649
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7013": {
      "fn": "CultureCoin.setDexCCRate",
      "offset": [
        16659,
        16668
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 84,
      "value": "0xE3"
    },
    "7015": {
      "fn": "CultureCoin.setDexCCRate",
      "offset": [
        16659,
        16681
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "7016": {
      "fn": "CultureCoin.setDexCCRate",
      "jump": "o",
      "offset": [
        16564,
        16688
      ],
      "op": "JUMP",
      "path": "1"
    },
    "7017": {
      "fn": "CultureCoin.sane",
      "offset": [
        25034,
        25834
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7018": {
      "fn": "CultureCoin.sane",
      "offset": [
        25106,
        25107
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 85,
      "value": "0x0"
    },
    "7020": {
      "fn": "CultureCoin.sane",
      "offset": [
        25085,
        25103
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xEC"
    },
    "7022": {
      "fn": "CultureCoin.sane",
      "offset": [
        25085,
        25103
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "7023": {
      "branch": 208,
      "fn": "CultureCoin.sane",
      "offset": [
        25085,
        25107
      ],
      "op": "GT",
      "path": "1"
    },
    "7024": {
      "fn": "CultureCoin.sane",
      "offset": [
        25077,
        25141
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x1BBD"
    },
    "7028": {
      "branch": 208,
      "fn": "CultureCoin.sane",
      "offset": [
        25077,
        25141
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "7029": {
      "fn": "CultureCoin.sane",
      "offset": [
        25077,
        25141
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "7031": {
      "fn": "CultureCoin.sane",
      "offset": [
        25077,
        25141
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "7032": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7036": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7038": {
      "op": "SHL"
    },
    "7039": {
      "fn": "CultureCoin.sane",
      "offset": [
        25077,
        25141
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7040": {
      "fn": "CultureCoin.sane",
      "offset": [
        25077,
        25141
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7041": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7043": {
      "fn": "CultureCoin.sane",
      "offset": [
        25077,
        25141
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "7045": {
      "fn": "CultureCoin.sane",
      "offset": [
        25077,
        25141
      ],
      "op": "DUP3",
      "path": "1"
    },
    "7046": {
      "fn": "CultureCoin.sane",
      "offset": [
        25077,
        25141
      ],
      "op": "ADD",
      "path": "1"
    },
    "7047": {
      "op": "MSTORE"
    },
    "7048": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "7050": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7052": {
      "op": "DUP3"
    },
    "7053": {
      "op": "ADD"
    },
    "7054": {
      "op": "MSTORE"
    },
    "7055": {
      "op": "PUSH32",
      "value": "0x506C656173652061646D696E73747261746520796F757220636F696E2E000000"
    },
    "7088": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7090": {
      "op": "DUP3"
    },
    "7091": {
      "op": "ADD"
    },
    "7092": {
      "op": "MSTORE"
    },
    "7093": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7095": {
      "op": "ADD"
    },
    "7096": {
      "fn": "CultureCoin.sane",
      "offset": [
        25077,
        25141
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0xC98"
    },
    "7100": {
      "op": "JUMP"
    },
    "7101": {
      "fn": "CultureCoin.sane",
      "offset": [
        25077,
        25141
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7102": {
      "fn": "CultureCoin.sane",
      "offset": [
        25264,
        25282
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 86,
      "value": "0xEC"
    },
    "7104": {
      "fn": "CultureCoin.sane",
      "offset": [
        25264,
        25282
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "7105": {
      "fn": "CultureCoin.sane",
      "offset": [
        25251,
        25260
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "7106": {
      "fn": "CultureCoin.sane",
      "offset": [
        25251,
        25282
      ],
      "op": "LT",
      "path": "1"
    },
    "7107": {
      "branch": 209,
      "fn": "CultureCoin.sane",
      "offset": [
        25251,
        25282
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "7108": {
      "fn": "CultureCoin.sane",
      "offset": [
        25243,
        25294
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x1BFB"
    },
    "7112": {
      "branch": 209,
      "fn": "CultureCoin.sane",
      "offset": [
        25243,
        25294
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "7113": {
      "fn": "CultureCoin.sane",
      "offset": [
        25243,
        25294
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "7115": {
      "fn": "CultureCoin.sane",
      "offset": [
        25243,
        25294
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "7116": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7120": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7122": {
      "op": "SHL"
    },
    "7123": {
      "fn": "CultureCoin.sane",
      "offset": [
        25243,
        25294
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7124": {
      "fn": "CultureCoin.sane",
      "offset": [
        25243,
        25294
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7125": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7127": {
      "fn": "CultureCoin.sane",
      "offset": [
        25243,
        25294
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "7129": {
      "fn": "CultureCoin.sane",
      "offset": [
        25243,
        25294
      ],
      "op": "DUP3",
      "path": "1"
    },
    "7130": {
      "fn": "CultureCoin.sane",
      "offset": [
        25243,
        25294
      ],
      "op": "ADD",
      "path": "1"
    },
    "7131": {
      "op": "MSTORE"
    },
    "7132": {
      "op": "PUSH1",
      "value": "0x7"
    },
    "7134": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7136": {
      "op": "DUP3"
    },
    "7137": {
      "op": "ADD"
    },
    "7138": {
      "op": "MSTORE"
    },
    "7139": {
      "op": "PUSH7",
      "value": "0x283632B0B9B297"
    },
    "7147": {
      "op": "PUSH1",
      "value": "0xC9"
    },
    "7149": {
      "op": "SHL"
    },
    "7150": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7152": {
      "op": "DUP3"
    },
    "7153": {
      "op": "ADD"
    },
    "7154": {
      "op": "MSTORE"
    },
    "7155": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7157": {
      "op": "ADD"
    },
    "7158": {
      "fn": "CultureCoin.sane",
      "offset": [
        25243,
        25294
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0xC98"
    },
    "7162": {
      "op": "JUMP"
    },
    "7163": {
      "fn": "CultureCoin.sane",
      "offset": [
        25243,
        25294
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7164": {
      "fn": "CultureCoin.sane",
      "offset": [
        25386,
        25391
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xEA"
    },
    "7166": {
      "fn": "CultureCoin.sane",
      "offset": [
        25386,
        25391
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "7167": {
      "fn": "CultureCoin.sane",
      "offset": [
        25386,
        25391
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "7169": {
      "branch": 210,
      "fn": "CultureCoin.sane",
      "offset": [
        25386,
        25391
      ],
      "op": "AND",
      "path": "1"
    },
    "7170": {
      "fn": "CultureCoin.sane",
      "offset": [
        25383,
        25450
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "7171": {
      "fn": "CultureCoin.sane",
      "offset": [
        25383,
        25450
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x1C6B"
    },
    "7175": {
      "branch": 210,
      "fn": "CultureCoin.sane",
      "offset": [
        25383,
        25450
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "7176": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7178": {
      "op": "DUP1"
    },
    "7179": {
      "op": "MLOAD"
    },
    "7180": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7182": {
      "op": "PUSH3",
      "value": "0x5700"
    },
    "7186": {
      "op": "DUP4"
    },
    "7187": {
      "op": "CODECOPY"
    },
    "7188": {
      "op": "DUP2"
    },
    "7189": {
      "op": "MLOAD"
    },
    "7190": {
      "op": "SWAP2"
    },
    "7191": {
      "op": "MSTORE"
    },
    "7192": {
      "fn": "CultureCoin.sane",
      "offset": [
        25400,
        25448
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 87,
      "value": "0x40"
    },
    "7194": {
      "fn": "CultureCoin.sane",
      "offset": [
        25400,
        25448
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "7195": {
      "fn": "CultureCoin.sane",
      "offset": [
        25400,
        25448
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x1C62"
    },
    "7199": {
      "fn": "CultureCoin.sane",
      "offset": [
        25400,
        25448
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7200": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7202": {
      "op": "DUP1"
    },
    "7203": {
      "op": "DUP3"
    },
    "7204": {
      "op": "MSTORE"
    },
    "7205": {
      "op": "PUSH1",
      "value": "0x23"
    },
    "7207": {
      "op": "SWAP1"
    },
    "7208": {
      "op": "DUP3"
    },
    "7209": {
      "op": "ADD"
    },
    "7210": {
      "op": "MSTORE"
    },
    "7211": {
      "op": "PUSH32",
      "value": "0x54686973206D656D6520636F696E207468696E6B732069742773206120627269"
    },
    "7244": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7246": {
      "op": "DUP3"
    },
    "7247": {
      "op": "ADD"
    },
    "7248": {
      "op": "MSTORE"
    },
    "7249": {
      "op": "PUSH3",
      "value": "0x31B597"
    },
    "7253": {
      "op": "PUSH1",
      "value": "0xE9"
    },
    "7255": {
      "op": "SHL"
    },
    "7256": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7258": {
      "op": "DUP3"
    },
    "7259": {
      "op": "ADD"
    },
    "7260": {
      "op": "MSTORE"
    },
    "7261": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "7263": {
      "op": "ADD"
    },
    "7264": {
      "op": "SWAP1"
    },
    "7265": {
      "op": "JUMP"
    },
    "7266": {
      "fn": "CultureCoin.sane",
      "offset": [
        25400,
        25448
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7267": {
      "fn": "CultureCoin.sane",
      "offset": [
        25400,
        25448
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "7269": {
      "fn": "CultureCoin.sane",
      "offset": [
        25400,
        25448
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "7270": {
      "fn": "CultureCoin.sane",
      "offset": [
        25400,
        25448
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7271": {
      "fn": "CultureCoin.sane",
      "offset": [
        25400,
        25448
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "7272": {
      "fn": "CultureCoin.sane",
      "offset": [
        25400,
        25448
      ],
      "op": "SUB",
      "path": "1"
    },
    "7273": {
      "fn": "CultureCoin.sane",
      "offset": [
        25400,
        25448
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7274": {
      "fn": "CultureCoin.sane",
      "offset": [
        25400,
        25448
      ],
      "op": "LOG1",
      "path": "1"
    },
    "7275": {
      "fn": "CultureCoin.sane",
      "offset": [
        25383,
        25450
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7276": {
      "fn": "CultureCoin.sane",
      "offset": [
        25522,
        25528
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xEA"
    },
    "7278": {
      "fn": "CultureCoin.sane",
      "offset": [
        25522,
        25528
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "7279": {
      "fn": "CultureCoin.sane",
      "offset": [
        25522,
        25528
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x100"
    },
    "7282": {
      "fn": "CultureCoin.sane",
      "offset": [
        25522,
        25528
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7283": {
      "fn": "CultureCoin.sane",
      "offset": [
        25522,
        25528
      ],
      "op": "DIV",
      "path": "1"
    },
    "7284": {
      "fn": "CultureCoin.sane",
      "offset": [
        25522,
        25528
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "7286": {
      "branch": 211,
      "fn": "CultureCoin.sane",
      "offset": [
        25522,
        25528
      ],
      "op": "AND",
      "path": "1"
    },
    "7287": {
      "fn": "CultureCoin.sane",
      "offset": [
        25519,
        25599
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "7288": {
      "fn": "CultureCoin.sane",
      "offset": [
        25519,
        25599
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x1CEC"
    },
    "7292": {
      "branch": 211,
      "fn": "CultureCoin.sane",
      "offset": [
        25519,
        25599
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "7293": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7295": {
      "op": "DUP1"
    },
    "7296": {
      "op": "MLOAD"
    },
    "7297": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7299": {
      "op": "PUSH3",
      "value": "0x5700"
    },
    "7303": {
      "op": "DUP4"
    },
    "7304": {
      "op": "CODECOPY"
    },
    "7305": {
      "op": "DUP2"
    },
    "7306": {
      "op": "MLOAD"
    },
    "7307": {
      "op": "SWAP2"
    },
    "7308": {
      "op": "MSTORE"
    },
    "7309": {
      "fn": "CultureCoin.sane",
      "offset": [
        25536,
        25596
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 88,
      "value": "0x40"
    },
    "7311": {
      "fn": "CultureCoin.sane",
      "offset": [
        25536,
        25596
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "7312": {
      "fn": "CultureCoin.sane",
      "offset": [
        25536,
        25596
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x1CE3"
    },
    "7316": {
      "fn": "CultureCoin.sane",
      "offset": [
        25536,
        25596
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7317": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7319": {
      "op": "DUP1"
    },
    "7320": {
      "op": "DUP3"
    },
    "7321": {
      "op": "MSTORE"
    },
    "7322": {
      "op": "PUSH1",
      "value": "0x2F"
    },
    "7324": {
      "op": "SWAP1"
    },
    "7325": {
      "op": "DUP3"
    },
    "7326": {
      "op": "ADD"
    },
    "7327": {
      "op": "MSTORE"
    },
    "7328": {
      "op": "PUSH32",
      "value": "0x54686973206D656D6520636F696E207468696E6B73206974277320636C6F7365"
    },
    "7361": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7363": {
      "op": "DUP3"
    },
    "7364": {
      "op": "ADD"
    },
    "7365": {
      "op": "MSTORE"
    },
    "7366": {
      "op": "PUSH15",
      "value": "0x32103337B910313AB9B4B732B9B997"
    },
    "7382": {
      "op": "PUSH1",
      "value": "0x89"
    },
    "7384": {
      "op": "SHL"
    },
    "7385": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7387": {
      "op": "DUP3"
    },
    "7388": {
      "op": "ADD"
    },
    "7389": {
      "op": "MSTORE"
    },
    "7390": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "7392": {
      "op": "ADD"
    },
    "7393": {
      "op": "SWAP1"
    },
    "7394": {
      "op": "JUMP"
    },
    "7395": {
      "fn": "CultureCoin.sane",
      "offset": [
        25536,
        25596
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7396": {
      "fn": "CultureCoin.sane",
      "offset": [
        25536,
        25596
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "7398": {
      "fn": "CultureCoin.sane",
      "offset": [
        25536,
        25596
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "7399": {
      "fn": "CultureCoin.sane",
      "offset": [
        25536,
        25596
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7400": {
      "fn": "CultureCoin.sane",
      "offset": [
        25536,
        25596
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "7401": {
      "fn": "CultureCoin.sane",
      "offset": [
        25536,
        25596
      ],
      "op": "SUB",
      "path": "1"
    },
    "7402": {
      "fn": "CultureCoin.sane",
      "offset": [
        25536,
        25596
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7403": {
      "fn": "CultureCoin.sane",
      "offset": [
        25536,
        25596
      ],
      "op": "LOG1",
      "path": "1"
    },
    "7404": {
      "fn": "CultureCoin.sane",
      "offset": [
        25519,
        25599
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7405": {
      "fn": "CultureCoin.sane",
      "offset": [
        25622,
        25625
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xD5"
    },
    "7407": {
      "fn": "CultureCoin.sane",
      "offset": [
        25622,
        25625
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "7408": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7410": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7412": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7414": {
      "op": "SHL"
    },
    "7415": {
      "op": "SUB"
    },
    "7416": {
      "fn": "CultureCoin.sane",
      "offset": [
        25622,
        25625
      ],
      "op": "AND",
      "path": "1"
    },
    "7417": {
      "fn": "CultureCoin.sane",
      "offset": [
        25611,
        25618
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x1D02"
    },
    "7421": {
      "fn": "CultureCoin.sane",
      "offset": [
        25611,
        25616
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0xC2C"
    },
    "7425": {
      "fn": "CultureCoin.sane",
      "jump": "i",
      "offset": [
        25611,
        25618
      ],
      "op": "JUMP",
      "path": "1"
    },
    "7426": {
      "fn": "CultureCoin.sane",
      "offset": [
        25611,
        25618
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7427": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7429": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7431": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7433": {
      "op": "SHL"
    },
    "7434": {
      "op": "SUB"
    },
    "7435": {
      "fn": "CultureCoin.sane",
      "offset": [
        25611,
        25625
      ],
      "op": "AND",
      "path": "1"
    },
    "7436": {
      "branch": 212,
      "fn": "CultureCoin.sane",
      "offset": [
        25611,
        25625
      ],
      "op": "EQ",
      "path": "1"
    },
    "7437": {
      "fn": "CultureCoin.sane",
      "offset": [
        25608,
        25768
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x1D38"
    },
    "7441": {
      "branch": 212,
      "fn": "CultureCoin.sane",
      "offset": [
        25608,
        25768
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "7442": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7444": {
      "op": "DUP1"
    },
    "7445": {
      "op": "MLOAD"
    },
    "7446": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7448": {
      "op": "PUSH3",
      "value": "0x5700"
    },
    "7452": {
      "op": "DUP4"
    },
    "7453": {
      "op": "CODECOPY"
    },
    "7454": {
      "op": "DUP2"
    },
    "7455": {
      "op": "MLOAD"
    },
    "7456": {
      "op": "SWAP2"
    },
    "7457": {
      "op": "MSTORE"
    },
    "7458": {
      "fn": "CultureCoin.sane",
      "offset": [
        25646,
        25720
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 89,
      "value": "0x40"
    },
    "7460": {
      "fn": "CultureCoin.sane",
      "offset": [
        25646,
        25720
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "7461": {
      "fn": "CultureCoin.sane",
      "offset": [
        25646,
        25720
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x1D2F"
    },
    "7465": {
      "fn": "CultureCoin.sane",
      "offset": [
        25646,
        25720
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7466": {
      "fn": "CultureCoin.sane",
      "offset": [
        25646,
        25720
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x3A3D"
    },
    "7470": {
      "fn": "CultureCoin.sane",
      "jump": "i",
      "offset": [
        25646,
        25720
      ],
      "op": "JUMP",
      "path": "1"
    },
    "7471": {
      "fn": "CultureCoin.sane",
      "offset": [
        25646,
        25720
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7472": {
      "fn": "CultureCoin.sane",
      "offset": [
        25646,
        25720
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "7474": {
      "fn": "CultureCoin.sane",
      "offset": [
        25646,
        25720
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "7475": {
      "fn": "CultureCoin.sane",
      "offset": [
        25646,
        25720
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7476": {
      "fn": "CultureCoin.sane",
      "offset": [
        25646,
        25720
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "7477": {
      "fn": "CultureCoin.sane",
      "offset": [
        25646,
        25720
      ],
      "op": "SUB",
      "path": "1"
    },
    "7478": {
      "fn": "CultureCoin.sane",
      "offset": [
        25646,
        25720
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7479": {
      "fn": "CultureCoin.sane",
      "offset": [
        25646,
        25720
      ],
      "op": "LOG1",
      "path": "1"
    },
    "7480": {
      "fn": "CultureCoin.sane",
      "offset": [
        25608,
        25768
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7481": {
      "fn": "CultureCoin.sane",
      "offset": [
        25782,
        25803
      ],
      "op": "PUSH32",
      "path": "1",
      "statement": 90,
      "value": "0xA2CEB0EA4C1D58A42D42E6190C7DF2D44E4D514484472917B44610687FC68D0E"
    },
    "7514": {
      "fn": "CultureCoin.sane",
      "offset": [
        25787,
        25791
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xD2"
    },
    "7516": {
      "fn": "CultureCoin.sane",
      "offset": [
        25793,
        25802
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "7517": {
      "fn": "CultureCoin.sane",
      "offset": [
        25782,
        25803
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "7519": {
      "fn": "CultureCoin.sane",
      "offset": [
        25782,
        25803
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "7520": {
      "fn": "CultureCoin.sane",
      "offset": [
        25782,
        25803
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0xD11"
    },
    "7524": {
      "fn": "CultureCoin.sane",
      "offset": [
        25782,
        25803
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "7525": {
      "fn": "CultureCoin.sane",
      "offset": [
        25782,
        25803
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "7526": {
      "fn": "CultureCoin.sane",
      "offset": [
        25782,
        25803
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7527": {
      "fn": "CultureCoin.sane",
      "offset": [
        25782,
        25803
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x3A9A"
    },
    "7531": {
      "fn": "CultureCoin.sane",
      "jump": "i",
      "offset": [
        25782,
        25803
      ],
      "op": "JUMP",
      "path": "1"
    },
    "7532": {
      "fn": "CultureCoin.seed",
      "offset": [
        18120,
        18781
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7533": {
      "fn": "CultureCoin.seed",
      "offset": [
        18245,
        18252
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "7535": {
      "offset": [
        1815,
        1816
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x2"
    },
    "7537": {
      "offset": [
        2569,
        2576
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x9A"
    },
    "7539": {
      "fn": "CultureCoin.seed",
      "offset": [
        2569,
        2576
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "7540": {
      "offset": [
        2569,
        2588
      ],
      "op": "EQ",
      "path": "14"
    },
    "7541": {
      "fn": "CultureCoin.seed",
      "offset": [
        2569,
        2588
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "7542": {
      "offset": [
        2561,
        2624
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x1D94"
    },
    "7546": {
      "offset": [
        2561,
        2624
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "7547": {
      "fn": "CultureCoin.seed",
      "offset": [
        2561,
        2624
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "7549": {
      "fn": "CultureCoin.seed",
      "offset": [
        2561,
        2624
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "7550": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7554": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7556": {
      "op": "SHL"
    },
    "7557": {
      "offset": [
        2561,
        2624
      ],
      "op": "DUP2",
      "path": "14"
    },
    "7558": {
      "fn": "CultureCoin.seed",
      "offset": [
        2561,
        2624
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "7559": {
      "fn": "CultureCoin.seed",
      "offset": [
        2561,
        2624
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "7561": {
      "fn": "CultureCoin.seed",
      "offset": [
        2561,
        2624
      ],
      "op": "ADD",
      "path": "14"
    },
    "7562": {
      "fn": "CultureCoin.seed",
      "offset": [
        2561,
        2624
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0xC98"
    },
    "7566": {
      "fn": "CultureCoin.seed",
      "offset": [
        2561,
        2624
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "7567": {
      "fn": "CultureCoin.seed",
      "offset": [
        2561,
        2624
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x387D"
    },
    "7571": {
      "fn": "CultureCoin.seed",
      "jump": "i",
      "offset": [
        2561,
        2624
      ],
      "op": "JUMP",
      "path": "14"
    },
    "7572": {
      "fn": "CultureCoin.seed",
      "offset": [
        2561,
        2624
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "7573": {
      "offset": [
        1815,
        1816
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x2"
    },
    "7575": {
      "offset": [
        2699,
        2706
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x9A"
    },
    "7577": {
      "offset": [
        2699,
        2717
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "7578": {
      "fn": "CultureCoin.seed",
      "offset": [
        18273,
        18278
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 91,
      "value": "0xEA"
    },
    "7580": {
      "fn": "CultureCoin.seed",
      "offset": [
        18273,
        18278
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "7581": {
      "fn": "CultureCoin.seed",
      "offset": [
        18273,
        18278
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "7583": {
      "fn": "CultureCoin.seed",
      "offset": [
        18273,
        18278
      ],
      "op": "AND",
      "path": "1"
    },
    "7584": {
      "branch": 213,
      "fn": "CultureCoin.seed",
      "offset": [
        18272,
        18278
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "7585": {
      "fn": "CultureCoin.seed",
      "offset": [
        18264,
        18308
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x1DEA"
    },
    "7589": {
      "branch": 213,
      "fn": "CultureCoin.seed",
      "offset": [
        18264,
        18308
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "7590": {
      "fn": "CultureCoin.seed",
      "offset": [
        18264,
        18308
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "7592": {
      "fn": "CultureCoin.seed",
      "offset": [
        18264,
        18308
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "7593": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7597": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7599": {
      "op": "SHL"
    },
    "7600": {
      "fn": "CultureCoin.seed",
      "offset": [
        18264,
        18308
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7601": {
      "fn": "CultureCoin.seed",
      "offset": [
        18264,
        18308
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7602": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7604": {
      "fn": "CultureCoin.seed",
      "offset": [
        18264,
        18308
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "7606": {
      "fn": "CultureCoin.seed",
      "offset": [
        18264,
        18308
      ],
      "op": "DUP3",
      "path": "1"
    },
    "7607": {
      "fn": "CultureCoin.seed",
      "offset": [
        18264,
        18308
      ],
      "op": "ADD",
      "path": "1"
    },
    "7608": {
      "op": "MSTORE"
    },
    "7609": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "7611": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7613": {
      "op": "DUP3"
    },
    "7614": {
      "op": "ADD"
    },
    "7615": {
      "op": "MSTORE"
    },
    "7616": {
      "op": "PUSH25",
      "value": "0x213934B1B5B9903237903737BA1036B0B5B29039B2B2B23997"
    },
    "7642": {
      "op": "PUSH1",
      "value": "0x39"
    },
    "7644": {
      "op": "SHL"
    },
    "7645": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7647": {
      "op": "DUP3"
    },
    "7648": {
      "op": "ADD"
    },
    "7649": {
      "op": "MSTORE"
    },
    "7650": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7652": {
      "op": "ADD"
    },
    "7653": {
      "fn": "CultureCoin.seed",
      "offset": [
        18264,
        18308
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0xC98"
    },
    "7657": {
      "op": "JUMP"
    },
    "7658": {
      "fn": "CultureCoin.seed",
      "offset": [
        18264,
        18308
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7659": {
      "fn": "CultureCoin.seed",
      "offset": [
        18429,
        18444
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "7661": {
      "fn": "CultureCoin.seed",
      "offset": [
        18478,
        18490
      ],
      "op": "DUP5",
      "path": "1"
    },
    "7662": {
      "fn": "CultureCoin.seed",
      "offset": [
        18500,
        18504
      ],
      "op": "ADDRESS",
      "path": "1"
    },
    "7663": {
      "fn": "CultureCoin.seed",
      "offset": [
        18507,
        18521
      ],
      "op": "DUP6",
      "path": "1"
    },
    "7664": {
      "fn": "CultureCoin.seed",
      "offset": [
        18523,
        18528
      ],
      "op": "DUP9",
      "path": "1"
    },
    "7665": {
      "fn": "CultureCoin.seed",
      "offset": [
        18455,
        18529
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "7667": {
      "fn": "CultureCoin.seed",
      "offset": [
        18455,
        18529
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "7668": {
      "fn": "CultureCoin.seed",
      "offset": [
        18455,
        18529
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x1DFE"
    },
    "7672": {
      "fn": "CultureCoin.seed",
      "offset": [
        18455,
        18529
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7673": {
      "fn": "CultureCoin.seed",
      "offset": [
        18455,
        18529
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x329F"
    },
    "7677": {
      "fn": "CultureCoin.seed",
      "jump": "i",
      "offset": [
        18455,
        18529
      ],
      "op": "JUMP",
      "path": "1"
    },
    "7678": {
      "fn": "CultureCoin.seed",
      "offset": [
        18455,
        18529
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7679": {
      "fn": "CultureCoin.seed",
      "offset": [
        18455,
        18529
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x1E0D"
    },
    "7683": {
      "fn": "CultureCoin.seed",
      "offset": [
        18455,
        18529
      ],
      "op": "SWAP5",
      "path": "1"
    },
    "7684": {
      "fn": "CultureCoin.seed",
      "offset": [
        18455,
        18529
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "7685": {
      "fn": "CultureCoin.seed",
      "offset": [
        18455,
        18529
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "7686": {
      "fn": "CultureCoin.seed",
      "offset": [
        18455,
        18529
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "7687": {
      "fn": "CultureCoin.seed",
      "offset": [
        18455,
        18529
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7688": {
      "fn": "CultureCoin.seed",
      "offset": [
        18455,
        18529
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x3B52"
    },
    "7692": {
      "fn": "CultureCoin.seed",
      "jump": "i",
      "offset": [
        18455,
        18529
      ],
      "op": "JUMP",
      "path": "1"
    },
    "7693": {
      "fn": "CultureCoin.seed",
      "offset": [
        18455,
        18529
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7694": {
      "fn": "CultureCoin.seed",
      "offset": [
        18455,
        18529
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "7696": {
      "fn": "CultureCoin.seed",
      "offset": [
        18455,
        18529
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "7697": {
      "fn": "CultureCoin.seed",
      "offset": [
        18455,
        18529
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7698": {
      "fn": "CultureCoin.seed",
      "offset": [
        18455,
        18529
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "7699": {
      "fn": "CultureCoin.seed",
      "offset": [
        18455,
        18529
      ],
      "op": "SUB",
      "path": "1"
    },
    "7700": {
      "fn": "CultureCoin.seed",
      "offset": [
        18455,
        18529
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7701": {
      "fn": "CultureCoin.seed",
      "offset": [
        18455,
        18529
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "7703": {
      "fn": "CultureCoin.seed",
      "offset": [
        18455,
        18529
      ],
      "op": "CREATE",
      "path": "1"
    },
    "7704": {
      "fn": "CultureCoin.seed",
      "offset": [
        18455,
        18529
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7705": {
      "fn": "CultureCoin.seed",
      "offset": [
        18455,
        18529
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "7706": {
      "fn": "CultureCoin.seed",
      "offset": [
        18455,
        18529
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7707": {
      "fn": "CultureCoin.seed",
      "offset": [
        18455,
        18529
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "7708": {
      "fn": "CultureCoin.seed",
      "offset": [
        18455,
        18529
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x1E2A"
    },
    "7712": {
      "fn": "CultureCoin.seed",
      "offset": [
        18455,
        18529
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "7713": {
      "fn": "CultureCoin.seed",
      "offset": [
        18455,
        18529
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "7714": {
      "fn": "CultureCoin.seed",
      "offset": [
        18455,
        18529
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "7716": {
      "fn": "CultureCoin.seed",
      "offset": [
        18455,
        18529
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7717": {
      "fn": "CultureCoin.seed",
      "offset": [
        18455,
        18529
      ],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "7718": {
      "fn": "CultureCoin.seed",
      "offset": [
        18455,
        18529
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "7719": {
      "fn": "CultureCoin.seed",
      "offset": [
        18455,
        18529
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "7721": {
      "fn": "CultureCoin.seed",
      "offset": [
        18455,
        18529
      ],
      "op": "REVERT",
      "path": "1"
    },
    "7722": {
      "fn": "CultureCoin.seed",
      "offset": [
        18455,
        18529
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7723": {
      "fn": "CultureCoin.seed",
      "offset": [
        18455,
        18529
      ],
      "op": "POP",
      "path": "1"
    },
    "7724": {
      "fn": "CultureCoin.seed",
      "offset": [
        18429,
        18530
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7725": {
      "fn": "CultureCoin.seed",
      "offset": [
        18429,
        18530
      ],
      "op": "POP",
      "path": "1"
    },
    "7726": {
      "branch": 214,
      "fn": "CultureCoin.seed",
      "offset": [
        18594,
        18603
      ],
      "op": "DUP3",
      "path": "1"
    },
    "7727": {
      "fn": "CultureCoin.seed",
      "offset": [
        18591,
        18751
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "7728": {
      "fn": "CultureCoin.seed",
      "offset": [
        18591,
        18751
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x1E47"
    },
    "7732": {
      "branch": 214,
      "fn": "CultureCoin.seed",
      "offset": [
        18591,
        18751
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "7733": {
      "fn": "CultureCoin.seed",
      "offset": [
        18619,
        18658
      ],
      "op": "PUSH3",
      "path": "1",
      "statement": 92,
      "value": "0x1E41"
    },
    "7737": {
      "fn": "CultureCoin.seed",
      "offset": [
        18629,
        18634
      ],
      "op": "DUP7",
      "path": "1"
    },
    "7738": {
      "fn": "CultureCoin.seed",
      "offset": [
        18636,
        18643
      ],
      "op": "DUP3",
      "path": "1"
    },
    "7739": {
      "fn": "CultureCoin.seed",
      "offset": [
        18645,
        18657
      ],
      "op": "DUP8",
      "path": "1"
    },
    "7740": {
      "fn": "CultureCoin.seed",
      "offset": [
        18619,
        18628
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x2BA4"
    },
    "7744": {
      "fn": "CultureCoin.seed",
      "jump": "i",
      "offset": [
        18619,
        18658
      ],
      "op": "JUMP",
      "path": "1"
    },
    "7745": {
      "fn": "CultureCoin.seed",
      "offset": [
        18619,
        18658
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7746": {
      "fn": "CultureCoin.seed",
      "offset": [
        18591,
        18751
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x1EA9"
    },
    "7750": {
      "fn": "CultureCoin.seed",
      "offset": [
        18591,
        18751
      ],
      "op": "JUMP",
      "path": "1"
    },
    "7751": {
      "fn": "CultureCoin.seed",
      "offset": [
        18591,
        18751
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7752": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7754": {
      "op": "DUP1"
    },
    "7755": {
      "op": "MLOAD"
    },
    "7756": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7758": {
      "op": "PUSH3",
      "value": "0x5700"
    },
    "7762": {
      "op": "DUP4"
    },
    "7763": {
      "op": "CODECOPY"
    },
    "7764": {
      "op": "DUP2"
    },
    "7765": {
      "op": "MLOAD"
    },
    "7766": {
      "op": "SWAP2"
    },
    "7767": {
      "op": "MSTORE"
    },
    "7768": {
      "fn": "CultureCoin.seed",
      "offset": [
        18694,
        18740
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 93,
      "value": "0x40"
    },
    "7770": {
      "fn": "CultureCoin.seed",
      "offset": [
        18694,
        18740
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "7771": {
      "fn": "CultureCoin.seed",
      "offset": [
        18694,
        18740
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x1EA0"
    },
    "7775": {
      "fn": "CultureCoin.seed",
      "offset": [
        18694,
        18740
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7776": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7778": {
      "op": "DUP1"
    },
    "7779": {
      "op": "DUP3"
    },
    "7780": {
      "op": "MSTORE"
    },
    "7781": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "7783": {
      "op": "SWAP1"
    },
    "7784": {
      "op": "DUP3"
    },
    "7785": {
      "op": "ADD"
    },
    "7786": {
      "op": "MSTORE"
    },
    "7787": {
      "op": "PUSH32",
      "value": "0x54686520636F696E206D7573742062652061207265616C20676F6F64206F6E65"
    },
    "7820": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7822": {
      "op": "DUP3"
    },
    "7823": {
      "op": "ADD"
    },
    "7824": {
      "op": "MSTORE"
    },
    "7825": {
      "op": "PUSH1",
      "value": "0x17"
    },
    "7827": {
      "op": "PUSH1",
      "value": "0xF9"
    },
    "7829": {
      "op": "SHL"
    },
    "7830": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7832": {
      "op": "DUP3"
    },
    "7833": {
      "op": "ADD"
    },
    "7834": {
      "op": "MSTORE"
    },
    "7835": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "7837": {
      "op": "ADD"
    },
    "7838": {
      "op": "SWAP1"
    },
    "7839": {
      "op": "JUMP"
    },
    "7840": {
      "fn": "CultureCoin.seed",
      "offset": [
        18694,
        18740
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7841": {
      "fn": "CultureCoin.seed",
      "offset": [
        18694,
        18740
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "7843": {
      "fn": "CultureCoin.seed",
      "offset": [
        18694,
        18740
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "7844": {
      "fn": "CultureCoin.seed",
      "offset": [
        18694,
        18740
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7845": {
      "fn": "CultureCoin.seed",
      "offset": [
        18694,
        18740
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "7846": {
      "fn": "CultureCoin.seed",
      "offset": [
        18694,
        18740
      ],
      "op": "SUB",
      "path": "1"
    },
    "7847": {
      "fn": "CultureCoin.seed",
      "offset": [
        18694,
        18740
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7848": {
      "fn": "CultureCoin.seed",
      "offset": [
        18694,
        18740
      ],
      "op": "LOG1",
      "path": "1"
    },
    "7849": {
      "fn": "CultureCoin.seed",
      "offset": [
        18591,
        18751
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7850": {
      "offset": [
        1772,
        1773
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1"
    },
    "7852": {
      "offset": [
        2872,
        2879
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x9A"
    },
    "7854": {
      "offset": [
        2872,
        2894
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "7855": {
      "fn": "CultureCoin.seed",
      "offset": [
        18767,
        18774
      ],
      "op": "SWAP6",
      "path": "1",
      "statement": 94
    },
    "7856": {
      "fn": "CultureCoin.seed",
      "offset": [
        18120,
        18781
      ],
      "op": "SWAP5",
      "path": "1"
    },
    "7857": {
      "op": "POP"
    },
    "7858": {
      "op": "POP"
    },
    "7859": {
      "op": "POP"
    },
    "7860": {
      "op": "POP"
    },
    "7861": {
      "op": "POP"
    },
    "7862": {
      "fn": "CultureCoin.seed",
      "jump": "o",
      "offset": [
        18120,
        18781
      ],
      "op": "JUMP",
      "path": "1"
    },
    "7863": {
      "fn": "CultureCoin.compareStrings",
      "offset": [
        32767,
        32938
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7864": {
      "fn": "CultureCoin.compareStrings",
      "offset": [
        32848,
        32852
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "7866": {
      "fn": "CultureCoin.compareStrings",
      "offset": [
        32929,
        32931
      ],
      "op": "DUP2",
      "path": "1",
      "statement": 95
    },
    "7867": {
      "fn": "CultureCoin.compareStrings",
      "offset": [
        32911,
        32933
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "7869": {
      "fn": "CultureCoin.compareStrings",
      "offset": [
        32911,
        32933
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "7870": {
      "fn": "CultureCoin.compareStrings",
      "offset": [
        32911,
        32933
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "7872": {
      "fn": "CultureCoin.compareStrings",
      "offset": [
        32911,
        32933
      ],
      "op": "ADD",
      "path": "1"
    },
    "7873": {
      "fn": "CultureCoin.compareStrings",
      "offset": [
        32911,
        32933
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x1ECC"
    },
    "7877": {
      "fn": "CultureCoin.compareStrings",
      "offset": [
        32911,
        32933
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "7878": {
      "fn": "CultureCoin.compareStrings",
      "offset": [
        32911,
        32933
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7879": {
      "fn": "CultureCoin.compareStrings",
      "offset": [
        32911,
        32933
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x3812"
    },
    "7883": {
      "fn": "CultureCoin.compareStrings",
      "jump": "i",
      "offset": [
        32911,
        32933
      ],
      "op": "JUMP",
      "path": "1"
    },
    "7884": {
      "fn": "CultureCoin.compareStrings",
      "offset": [
        32911,
        32933
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7885": {
      "fn": "CultureCoin.compareStrings",
      "offset": [
        32911,
        32933
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "7887": {
      "fn": "CultureCoin.compareStrings",
      "offset": [
        32911,
        32933
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "7888": {
      "fn": "CultureCoin.compareStrings",
      "offset": [
        32911,
        32933
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "7890": {
      "fn": "CultureCoin.compareStrings",
      "offset": [
        32911,
        32933
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7891": {
      "fn": "CultureCoin.compareStrings",
      "offset": [
        32911,
        32933
      ],
      "op": "DUP4",
      "path": "1"
    },
    "7892": {
      "fn": "CultureCoin.compareStrings",
      "offset": [
        32911,
        32933
      ],
      "op": "SUB",
      "path": "1"
    },
    "7893": {
      "fn": "CultureCoin.compareStrings",
      "offset": [
        32911,
        32933
      ],
      "op": "SUB",
      "path": "1"
    },
    "7894": {
      "fn": "CultureCoin.compareStrings",
      "offset": [
        32911,
        32933
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7895": {
      "fn": "CultureCoin.compareStrings",
      "offset": [
        32911,
        32933
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7896": {
      "fn": "CultureCoin.compareStrings",
      "offset": [
        32911,
        32933
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7897": {
      "fn": "CultureCoin.compareStrings",
      "offset": [
        32911,
        32933
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "7899": {
      "fn": "CultureCoin.compareStrings",
      "offset": [
        32911,
        32933
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7900": {
      "fn": "CultureCoin.compareStrings",
      "offset": [
        32901,
        32934
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7901": {
      "fn": "CultureCoin.compareStrings",
      "offset": [
        32901,
        32934
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "7902": {
      "fn": "CultureCoin.compareStrings",
      "offset": [
        32901,
        32934
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7903": {
      "fn": "CultureCoin.compareStrings",
      "offset": [
        32901,
        32934
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "7905": {
      "fn": "CultureCoin.compareStrings",
      "offset": [
        32901,
        32934
      ],
      "op": "ADD",
      "path": "1"
    },
    "7906": {
      "fn": "CultureCoin.compareStrings",
      "offset": [
        32901,
        32934
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "7907": {
      "fn": "CultureCoin.compareStrings",
      "offset": [
        32892,
        32894
      ],
      "op": "DUP4",
      "path": "1"
    },
    "7908": {
      "fn": "CultureCoin.compareStrings",
      "offset": [
        32874,
        32896
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "7910": {
      "fn": "CultureCoin.compareStrings",
      "offset": [
        32874,
        32896
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "7911": {
      "fn": "CultureCoin.compareStrings",
      "offset": [
        32874,
        32896
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "7913": {
      "fn": "CultureCoin.compareStrings",
      "offset": [
        32874,
        32896
      ],
      "op": "ADD",
      "path": "1"
    },
    "7914": {
      "fn": "CultureCoin.compareStrings",
      "offset": [
        32874,
        32896
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x1EF5"
    },
    "7918": {
      "fn": "CultureCoin.compareStrings",
      "offset": [
        32874,
        32896
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "7919": {
      "fn": "CultureCoin.compareStrings",
      "offset": [
        32874,
        32896
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7920": {
      "fn": "CultureCoin.compareStrings",
      "offset": [
        32874,
        32896
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x3812"
    },
    "7924": {
      "fn": "CultureCoin.compareStrings",
      "jump": "i",
      "offset": [
        32874,
        32896
      ],
      "op": "JUMP",
      "path": "1"
    },
    "7925": {
      "fn": "CultureCoin.compareStrings",
      "offset": [
        32874,
        32896
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7926": {
      "fn": "CultureCoin.compareStrings",
      "offset": [
        32874,
        32896
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "7928": {
      "fn": "CultureCoin.compareStrings",
      "offset": [
        32874,
        32896
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "7929": {
      "fn": "CultureCoin.compareStrings",
      "offset": [
        32874,
        32896
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "7931": {
      "fn": "CultureCoin.compareStrings",
      "offset": [
        32874,
        32896
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7932": {
      "fn": "CultureCoin.compareStrings",
      "offset": [
        32874,
        32896
      ],
      "op": "DUP4",
      "path": "1"
    },
    "7933": {
      "fn": "CultureCoin.compareStrings",
      "offset": [
        32874,
        32896
      ],
      "op": "SUB",
      "path": "1"
    },
    "7934": {
      "fn": "CultureCoin.compareStrings",
      "offset": [
        32874,
        32896
      ],
      "op": "SUB",
      "path": "1"
    },
    "7935": {
      "fn": "CultureCoin.compareStrings",
      "offset": [
        32874,
        32896
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7936": {
      "fn": "CultureCoin.compareStrings",
      "offset": [
        32874,
        32896
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7937": {
      "fn": "CultureCoin.compareStrings",
      "offset": [
        32874,
        32896
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7938": {
      "fn": "CultureCoin.compareStrings",
      "offset": [
        32874,
        32896
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "7940": {
      "fn": "CultureCoin.compareStrings",
      "offset": [
        32874,
        32896
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7941": {
      "fn": "CultureCoin.compareStrings",
      "offset": [
        32864,
        32897
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7942": {
      "fn": "CultureCoin.compareStrings",
      "offset": [
        32864,
        32897
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "7943": {
      "fn": "CultureCoin.compareStrings",
      "offset": [
        32864,
        32897
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7944": {
      "fn": "CultureCoin.compareStrings",
      "offset": [
        32864,
        32897
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "7946": {
      "fn": "CultureCoin.compareStrings",
      "offset": [
        32864,
        32897
      ],
      "op": "ADD",
      "path": "1"
    },
    "7947": {
      "fn": "CultureCoin.compareStrings",
      "offset": [
        32864,
        32897
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "7948": {
      "fn": "CultureCoin.compareStrings",
      "offset": [
        32864,
        32934
      ],
      "op": "EQ",
      "path": "1"
    },
    "7949": {
      "fn": "CultureCoin.compareStrings",
      "offset": [
        32856,
        32935
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7950": {
      "fn": "CultureCoin.compareStrings",
      "offset": [
        32856,
        32935
      ],
      "op": "POP",
      "path": "1"
    },
    "7951": {
      "fn": "CultureCoin.compareStrings",
      "offset": [
        32767,
        32938
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "7952": {
      "fn": "CultureCoin.compareStrings",
      "offset": [
        32767,
        32938
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "7953": {
      "fn": "CultureCoin.compareStrings",
      "offset": [
        32767,
        32938
      ],
      "op": "POP",
      "path": "1"
    },
    "7954": {
      "fn": "CultureCoin.compareStrings",
      "offset": [
        32767,
        32938
      ],
      "op": "POP",
      "path": "1"
    },
    "7955": {
      "fn": "CultureCoin.compareStrings",
      "jump": "o",
      "offset": [
        32767,
        32938
      ],
      "op": "JUMP",
      "path": "1"
    },
    "7956": {
      "fn": "CultureCoin.sane2",
      "offset": [
        25839,
        26730
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7957": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7959": {
      "op": "DUP1"
    },
    "7960": {
      "op": "MLOAD"
    },
    "7961": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7963": {
      "op": "PUSH3",
      "value": "0x5700"
    },
    "7967": {
      "op": "DUP4"
    },
    "7968": {
      "op": "CODECOPY"
    },
    "7969": {
      "op": "DUP2"
    },
    "7970": {
      "op": "MLOAD"
    },
    "7971": {
      "op": "SWAP2"
    },
    "7972": {
      "op": "MSTORE"
    },
    "7973": {
      "fn": "CultureCoin.sane2",
      "offset": [
        26512,
        26586
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 96,
      "value": "0x40"
    },
    "7975": {
      "fn": "CultureCoin.sane2",
      "offset": [
        26512,
        26586
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "7976": {
      "fn": "CultureCoin.sane2",
      "offset": [
        26512,
        26586
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x1D2F"
    },
    "7980": {
      "fn": "CultureCoin.sane2",
      "offset": [
        26512,
        26586
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7981": {
      "fn": "CultureCoin.sane2",
      "offset": [
        26512,
        26586
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x3A3D"
    },
    "7985": {
      "fn": "CultureCoin.sane2",
      "jump": "i",
      "offset": [
        26512,
        26586
      ],
      "op": "JUMP",
      "path": "1"
    },
    "7986": {
      "fn": "CultureCoin.initialize",
      "offset": [
        2733,
        4670
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7987": {
      "offset": [
        2369,
        2382
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "7989": {
      "fn": "CultureCoin.initialize",
      "offset": [
        2369,
        2382
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "7990": {
      "fn": "CultureCoin.initialize",
      "offset": [
        2369,
        2382
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x100"
    },
    "7993": {
      "fn": "CultureCoin.initialize",
      "offset": [
        2369,
        2382
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "7994": {
      "fn": "CultureCoin.initialize",
      "offset": [
        2369,
        2382
      ],
      "op": "DIV",
      "path": "13"
    },
    "7995": {
      "fn": "CultureCoin.initialize",
      "offset": [
        2369,
        2382
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xFF"
    },
    "7997": {
      "branch": 233,
      "fn": "CultureCoin.initialize",
      "offset": [
        2369,
        2382
      ],
      "op": "AND",
      "path": "13"
    },
    "7998": {
      "offset": [
        2369,
        2417
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x1F4F"
    },
    "8002": {
      "branch": 233,
      "fn": "CultureCoin.initialize",
      "offset": [
        2369,
        2417
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "8003": {
      "offset": [
        2405,
        2417
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "8005": {
      "fn": "CultureCoin.initialize",
      "offset": [
        2405,
        2417
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "8006": {
      "fn": "CultureCoin.initialize",
      "offset": [
        2405,
        2417
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xFF"
    },
    "8008": {
      "fn": "CultureCoin.initialize",
      "offset": [
        2405,
        2417
      ],
      "op": "AND",
      "path": "13"
    },
    "8009": {
      "offset": [
        2404,
        2417
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "8010": {
      "offset": [
        2369,
        2417
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x1F53"
    },
    "8014": {
      "fn": "CultureCoin.initialize",
      "offset": [
        2369,
        2417
      ],
      "op": "JUMP",
      "path": "13"
    },
    "8015": {
      "branch": 234,
      "fn": "CultureCoin.initialize",
      "offset": [
        2369,
        2417
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "8016": {
      "fn": "Initializable._isConstructor",
      "offset": [
        3147,
        3151
      ],
      "op": "ADDRESS",
      "path": "13",
      "statement": 97
    },
    "8017": {
      "op": "EXTCODESIZE"
    },
    "8018": {
      "op": "ISZERO"
    },
    "8019": {
      "offset": [
        2385,
        2401
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "8020": {
      "offset": [
        2361,
        2468
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x1FB8"
    },
    "8024": {
      "branch": 234,
      "offset": [
        2361,
        2468
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "8025": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2361,
        2468
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "8027": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2361,
        2468
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "8028": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8032": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8034": {
      "op": "SHL"
    },
    "8035": {
      "offset": [
        2361,
        2468
      ],
      "op": "DUP2",
      "path": "13"
    },
    "8036": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2361,
        2468
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "8037": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8039": {
      "offset": [
        2361,
        2468
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "8041": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2361,
        2468
      ],
      "op": "DUP3",
      "path": "13"
    },
    "8042": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2361,
        2468
      ],
      "op": "ADD",
      "path": "13"
    },
    "8043": {
      "op": "MSTORE"
    },
    "8044": {
      "op": "PUSH1",
      "value": "0x2E"
    },
    "8046": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8048": {
      "op": "DUP3"
    },
    "8049": {
      "op": "ADD"
    },
    "8050": {
      "op": "MSTORE"
    },
    "8051": {
      "op": "PUSH32",
      "value": "0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561"
    },
    "8084": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8086": {
      "op": "DUP3"
    },
    "8087": {
      "op": "ADD"
    },
    "8088": {
      "op": "MSTORE"
    },
    "8089": {
      "op": "PUSH14",
      "value": "0x191E481A5B9A5D1A585B1A5E9959"
    },
    "8104": {
      "op": "PUSH1",
      "value": "0x92"
    },
    "8106": {
      "op": "SHL"
    },
    "8107": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8109": {
      "op": "DUP3"
    },
    "8110": {
      "op": "ADD"
    },
    "8111": {
      "op": "MSTORE"
    },
    "8112": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "8114": {
      "op": "ADD"
    },
    "8115": {
      "offset": [
        2361,
        2468
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0xC98"
    },
    "8119": {
      "op": "JUMP"
    },
    "8120": {
      "offset": [
        2361,
        2468
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "8121": {
      "offset": [
        2479,
        2498
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "8123": {
      "offset": [
        2502,
        2515
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "8124": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2502,
        2515
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x100"
    },
    "8127": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2502,
        2515
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "8128": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2502,
        2515
      ],
      "op": "DIV",
      "path": "13"
    },
    "8129": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2502,
        2515
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xFF"
    },
    "8131": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2502,
        2515
      ],
      "op": "AND",
      "path": "13"
    },
    "8132": {
      "offset": [
        2501,
        2515
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "8133": {
      "offset": [
        2525,
        2623
      ],
      "op": "DUP1",
      "path": "13"
    },
    "8134": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2525,
        2623
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "8135": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2525,
        2623
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x1FDB"
    },
    "8139": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2525,
        2623
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "8140": {
      "offset": [
        2559,
        2572
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "8142": {
      "offset": [
        2559,
        2579
      ],
      "op": "DUP1",
      "path": "13"
    },
    "8143": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2559,
        2579
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "8144": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "8147": {
      "op": "NOT"
    },
    "8148": {
      "offset": [
        2593,
        2612
      ],
      "op": "AND",
      "path": "13"
    },
    "8149": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2593,
        2612
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x101"
    },
    "8152": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2593,
        2612
      ],
      "op": "OR",
      "path": "13"
    },
    "8153": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2593,
        2612
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "8154": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2593,
        2612
      ],
      "op": "SSTORE",
      "path": "13"
    },
    "8155": {
      "offset": [
        2525,
        2623
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "8156": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8158": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8160": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8162": {
      "op": "SHL"
    },
    "8163": {
      "op": "SUB"
    },
    "8164": {
      "fn": "CultureCoin.initialize",
      "offset": [
        2830,
        2848
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 98
    },
    "8165": {
      "branch": 215,
      "fn": "CultureCoin.initialize",
      "offset": [
        2830,
        2848
      ],
      "op": "AND",
      "path": "1"
    },
    "8166": {
      "fn": "CultureCoin.initialize",
      "offset": [
        2822,
        2865
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x2022"
    },
    "8170": {
      "branch": 215,
      "fn": "CultureCoin.initialize",
      "offset": [
        2822,
        2865
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "8171": {
      "fn": "CultureCoin.initialize",
      "offset": [
        2822,
        2865
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "8173": {
      "fn": "CultureCoin.initialize",
      "offset": [
        2822,
        2865
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "8174": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8178": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8180": {
      "op": "SHL"
    },
    "8181": {
      "fn": "CultureCoin.initialize",
      "offset": [
        2822,
        2865
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8182": {
      "fn": "CultureCoin.initialize",
      "offset": [
        2822,
        2865
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "8183": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8185": {
      "fn": "CultureCoin.initialize",
      "offset": [
        2822,
        2865
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "8187": {
      "fn": "CultureCoin.initialize",
      "offset": [
        2822,
        2865
      ],
      "op": "DUP3",
      "path": "1"
    },
    "8188": {
      "fn": "CultureCoin.initialize",
      "offset": [
        2822,
        2865
      ],
      "op": "ADD",
      "path": "1"
    },
    "8189": {
      "op": "MSTORE"
    },
    "8190": {
      "op": "PUSH1",
      "value": "0xC"
    },
    "8192": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8194": {
      "op": "DUP3"
    },
    "8195": {
      "op": "ADD"
    },
    "8196": {
      "op": "MSTORE"
    },
    "8197": {
      "op": "PUSH12",
      "value": "0x5A65726F2061646472657373"
    },
    "8210": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8212": {
      "op": "SHL"
    },
    "8213": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8215": {
      "op": "DUP3"
    },
    "8216": {
      "op": "ADD"
    },
    "8217": {
      "op": "MSTORE"
    },
    "8218": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8220": {
      "op": "ADD"
    },
    "8221": {
      "fn": "CultureCoin.initialize",
      "offset": [
        2822,
        2865
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0xC98"
    },
    "8225": {
      "op": "JUMP"
    },
    "8226": {
      "fn": "CultureCoin.initialize",
      "offset": [
        2822,
        2865
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8227": {
      "fn": "CultureCoin.initialize",
      "offset": [
        2875,
        2908
      ],
      "op": "PUSH3",
      "path": "1",
      "statement": 99,
      "value": "0x206B"
    },
    "8231": {
      "fn": "CultureCoin.initialize",
      "offset": [
        2875,
        2908
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "8233": {
      "fn": "CultureCoin.initialize",
      "offset": [
        2875,
        2908
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "8234": {
      "fn": "CultureCoin.initialize",
      "offset": [
        2875,
        2908
      ],
      "op": "DUP1",
      "path": "1"
    },
    "8235": {
      "fn": "CultureCoin.initialize",
      "offset": [
        2875,
        2908
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "8237": {
      "fn": "CultureCoin.initialize",
      "offset": [
        2875,
        2908
      ],
      "op": "ADD",
      "path": "1"
    },
    "8238": {
      "fn": "CultureCoin.initialize",
      "offset": [
        2875,
        2908
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "8240": {
      "fn": "CultureCoin.initialize",
      "offset": [
        2875,
        2908
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "8241": {
      "fn": "CultureCoin.initialize",
      "offset": [
        2875,
        2908
      ],
      "op": "DUP1",
      "path": "1"
    },
    "8242": {
      "fn": "CultureCoin.initialize",
      "offset": [
        2875,
        2908
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xB"
    },
    "8244": {
      "fn": "CultureCoin.initialize",
      "offset": [
        2875,
        2908
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8245": {
      "fn": "CultureCoin.initialize",
      "offset": [
        2875,
        2908
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "8246": {
      "fn": "CultureCoin.initialize",
      "offset": [
        2875,
        2908
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "8248": {
      "fn": "CultureCoin.initialize",
      "offset": [
        2875,
        2908
      ],
      "op": "ADD",
      "path": "1"
    },
    "8249": {
      "op": "PUSH11",
      "value": "0x21BAB63A3AB932A1B7B4B7"
    },
    "8261": {
      "op": "PUSH1",
      "value": "0xA9"
    },
    "8263": {
      "op": "SHL"
    },
    "8264": {
      "fn": "CultureCoin.initialize",
      "offset": [
        2875,
        2908
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8265": {
      "fn": "CultureCoin.initialize",
      "offset": [
        2875,
        2908
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "8266": {
      "fn": "CultureCoin.initialize",
      "offset": [
        2875,
        2908
      ],
      "op": "POP",
      "path": "1"
    },
    "8267": {
      "fn": "CultureCoin.initialize",
      "offset": [
        2875,
        2908
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "8269": {
      "fn": "CultureCoin.initialize",
      "offset": [
        2875,
        2908
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "8270": {
      "fn": "CultureCoin.initialize",
      "offset": [
        2875,
        2908
      ],
      "op": "DUP1",
      "path": "1"
    },
    "8271": {
      "fn": "CultureCoin.initialize",
      "offset": [
        2875,
        2908
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "8273": {
      "fn": "CultureCoin.initialize",
      "offset": [
        2875,
        2908
      ],
      "op": "ADD",
      "path": "1"
    },
    "8274": {
      "fn": "CultureCoin.initialize",
      "offset": [
        2875,
        2908
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "8276": {
      "fn": "CultureCoin.initialize",
      "offset": [
        2875,
        2908
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "8277": {
      "fn": "CultureCoin.initialize",
      "offset": [
        2875,
        2908
      ],
      "op": "DUP1",
      "path": "1"
    },
    "8278": {
      "fn": "CultureCoin.initialize",
      "offset": [
        2875,
        2908
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "8280": {
      "fn": "CultureCoin.initialize",
      "offset": [
        2875,
        2908
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8281": {
      "fn": "CultureCoin.initialize",
      "offset": [
        2875,
        2908
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "8282": {
      "fn": "CultureCoin.initialize",
      "offset": [
        2875,
        2908
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "8284": {
      "fn": "CultureCoin.initialize",
      "offset": [
        2875,
        2908
      ],
      "op": "ADD",
      "path": "1"
    },
    "8285": {
      "op": "PUSH2",
      "value": "0x4343"
    },
    "8288": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "8290": {
      "op": "SHL"
    },
    "8291": {
      "fn": "CultureCoin.initialize",
      "offset": [
        2875,
        2908
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8292": {
      "fn": "CultureCoin.initialize",
      "offset": [
        2875,
        2908
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "8293": {
      "fn": "CultureCoin.initialize",
      "offset": [
        2875,
        2908
      ],
      "op": "POP",
      "path": "1"
    },
    "8294": {
      "fn": "CultureCoin.initialize",
      "offset": [
        2875,
        2887
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x2D8D"
    },
    "8298": {
      "fn": "CultureCoin.initialize",
      "jump": "i",
      "offset": [
        2875,
        2908
      ],
      "op": "JUMP",
      "path": "1"
    },
    "8299": {
      "fn": "CultureCoin.initialize",
      "offset": [
        2875,
        2908
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8300": {
      "fn": "CultureCoin.initialize",
      "offset": [
        2918,
        2940
      ],
      "op": "PUSH3",
      "path": "1",
      "statement": 100,
      "value": "0x2075"
    },
    "8304": {
      "fn": "CultureCoin.initialize",
      "offset": [
        2918,
        2938
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x2DC3"
    },
    "8308": {
      "fn": "CultureCoin.initialize",
      "jump": "i",
      "offset": [
        2918,
        2940
      ],
      "op": "JUMP",
      "path": "1"
    },
    "8309": {
      "fn": "CultureCoin.initialize",
      "offset": [
        2918,
        2940
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8310": {
      "fn": "CultureCoin.initialize",
      "offset": [
        2950,
        2962
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 101,
      "value": "0x97"
    },
    "8312": {
      "fn": "CultureCoin.initialize",
      "offset": [
        2950,
        2969
      ],
      "op": "DUP1",
      "path": "1"
    },
    "8313": {
      "fn": "CultureCoin.initialize",
      "offset": [
        2950,
        2969
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "8314": {
      "fn": "CultureCoin.initialize",
      "offset": [
        2950,
        2969
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "8316": {
      "fn": "CultureCoin.initialize",
      "offset": [
        2950,
        2969
      ],
      "op": "ADD",
      "path": "1"
    },
    "8317": {
      "fn": "CultureCoin.initialize",
      "offset": [
        2950,
        2969
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8318": {
      "fn": "CultureCoin.initialize",
      "offset": [
        2950,
        2969
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "8319": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8321": {
      "fn": "CultureCoin.initialize",
      "offset": [
        2950,
        2969
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "8322": {
      "fn": "CultureCoin.initialize",
      "offset": [
        3039,
        3063
      ],
      "op": "PUSH3",
      "path": "1",
      "statement": 102,
      "value": "0x208B"
    },
    "8326": {
      "fn": "CultureCoin.initialize",
      "offset": [
        3039,
        3061
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x2DED"
    },
    "8330": {
      "fn": "CultureCoin.initialize",
      "jump": "i",
      "offset": [
        3039,
        3063
      ],
      "op": "JUMP",
      "path": "1"
    },
    "8331": {
      "fn": "CultureCoin.initialize",
      "offset": [
        3039,
        3063
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8332": {
      "fn": "CultureCoin.initialize",
      "offset": [
        3095,
        3112
      ],
      "op": "PUSH11",
      "path": "1",
      "value": "0x5DD8D27FAA6C3525C40000"
    },
    "8344": {
      "fn": "CultureCoin.initialize",
      "offset": [
        3145,
        3190
      ],
      "op": "PUSH3",
      "path": "1",
      "statement": 103,
      "value": "0x20AE"
    },
    "8348": {
      "fn": "CultureCoin.initialize",
      "offset": [
        3151,
        3161
      ],
      "op": "CALLER",
      "path": "1"
    },
    "8349": {
      "fn": "CultureCoin.initialize",
      "offset": [
        3163,
        3189
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x20A8"
    },
    "8353": {
      "fn": "CultureCoin.initialize",
      "offset": [
        3095,
        3112
      ],
      "op": "DUP4",
      "path": "1"
    },
    "8354": {
      "fn": "CultureCoin.initialize",
      "offset": [
        3163,
        3176
      ],
      "op": "DUP8",
      "path": "1"
    },
    "8355": {
      "fn": "CultureCoin.initialize",
      "offset": [
        3163,
        3189
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x3863"
    },
    "8359": {
      "fn": "CultureCoin.initialize",
      "jump": "i",
      "offset": [
        3163,
        3189
      ],
      "op": "JUMP",
      "path": "1"
    },
    "8360": {
      "fn": "CultureCoin.initialize",
      "offset": [
        3163,
        3189
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8361": {
      "fn": "CultureCoin.initialize",
      "offset": [
        3145,
        3150
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x2E21"
    },
    "8365": {
      "fn": "CultureCoin.initialize",
      "jump": "i",
      "offset": [
        3145,
        3190
      ],
      "op": "JUMP",
      "path": "1"
    },
    "8366": {
      "fn": "CultureCoin.initialize",
      "offset": [
        3145,
        3190
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8367": {
      "fn": "CultureCoin.initialize",
      "offset": [
        3200,
        3232
      ],
      "op": "PUSH3",
      "path": "1",
      "statement": 104,
      "value": "0x20BA"
    },
    "8371": {
      "fn": "CultureCoin.initialize",
      "offset": [
        3214,
        3218
      ],
      "op": "ADDRESS",
      "path": "1"
    },
    "8372": {
      "fn": "CultureCoin.initialize",
      "offset": [
        3221,
        3231
      ],
      "op": "DUP3",
      "path": "1"
    },
    "8373": {
      "fn": "CultureCoin.initialize",
      "offset": [
        3200,
        3205
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x2E21"
    },
    "8377": {
      "fn": "CultureCoin.initialize",
      "jump": "i",
      "offset": [
        3200,
        3232
      ],
      "op": "JUMP",
      "path": "1"
    },
    "8378": {
      "fn": "CultureCoin.initialize",
      "offset": [
        3200,
        3232
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8379": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8381": {
      "op": "NOT"
    },
    "8382": {
      "fn": "CultureCoin.initialize",
      "offset": [
        3243,
        3254
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 105,
      "value": "0xEB"
    },
    "8384": {
      "fn": "CultureCoin.initialize",
      "offset": [
        3243,
        3335
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "8385": {
      "fn": "CultureCoin.initialize",
      "offset": [
        3401,
        3404
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 106,
      "value": "0xD5"
    },
    "8387": {
      "fn": "CultureCoin.initialize",
      "offset": [
        3401,
        3411
      ],
      "op": "DUP1",
      "path": "1"
    },
    "8388": {
      "fn": "CultureCoin.initialize",
      "offset": [
        3401,
        3411
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "8389": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8391": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8393": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8395": {
      "op": "SHL"
    },
    "8396": {
      "op": "SUB"
    },
    "8397": {
      "op": "NOT"
    },
    "8398": {
      "fn": "CultureCoin.initialize",
      "offset": [
        3401,
        3411
      ],
      "op": "AND",
      "path": "1"
    },
    "8399": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8401": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8403": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8405": {
      "op": "SHL"
    },
    "8406": {
      "op": "SUB"
    },
    "8407": {
      "fn": "CultureCoin.initialize",
      "offset": [
        3401,
        3411
      ],
      "op": "DUP6",
      "path": "1"
    },
    "8408": {
      "fn": "CultureCoin.initialize",
      "offset": [
        3401,
        3411
      ],
      "op": "AND",
      "path": "1"
    },
    "8409": {
      "fn": "CultureCoin.initialize",
      "offset": [
        3401,
        3411
      ],
      "op": "OR",
      "path": "1"
    },
    "8410": {
      "fn": "CultureCoin.initialize",
      "offset": [
        3401,
        3411
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8411": {
      "fn": "CultureCoin.initialize",
      "offset": [
        3401,
        3411
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "8412": {
      "fn": "CultureCoin.initialize",
      "offset": [
        3566,
        3576
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 107,
      "value": "0x40"
    },
    "8414": {
      "fn": "CultureCoin.initialize",
      "offset": [
        3566,
        3576
      ],
      "op": "DUP1",
      "path": "1"
    },
    "8415": {
      "fn": "CultureCoin.initialize",
      "offset": [
        3566,
        3576
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "8416": {
      "fn": "CultureCoin.initialize",
      "offset": [
        3566,
        3576
      ],
      "op": "DUP1",
      "path": "1"
    },
    "8417": {
      "fn": "CultureCoin.initialize",
      "offset": [
        3566,
        3576
      ],
      "op": "DUP3",
      "path": "1"
    },
    "8418": {
      "fn": "CultureCoin.initialize",
      "offset": [
        3566,
        3576
      ],
      "op": "ADD",
      "path": "1"
    },
    "8419": {
      "fn": "CultureCoin.initialize",
      "offset": [
        3566,
        3576
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8420": {
      "fn": "CultureCoin.initialize",
      "offset": [
        3566,
        3576
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "8421": {
      "fn": "CultureCoin.initialize",
      "offset": [
        3566,
        3576
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "8422": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8424": {
      "fn": "CultureCoin.initialize",
      "offset": [
        3566,
        3576
      ],
      "op": "DUP1",
      "path": "1"
    },
    "8425": {
      "fn": "CultureCoin.initialize",
      "offset": [
        3566,
        3576
      ],
      "op": "DUP3",
      "path": "1"
    },
    "8426": {
      "fn": "CultureCoin.initialize",
      "offset": [
        3566,
        3576
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "8427": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "8429": {
      "op": "PUSH1",
      "value": "0xF9"
    },
    "8431": {
      "op": "SHL"
    },
    "8432": {
      "fn": "CultureCoin.initialize",
      "offset": [
        3566,
        3576
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "8434": {
      "fn": "CultureCoin.initialize",
      "offset": [
        3566,
        3576
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8435": {
      "fn": "CultureCoin.initialize",
      "offset": [
        3566,
        3576
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "8436": {
      "fn": "CultureCoin.initialize",
      "offset": [
        3566,
        3576
      ],
      "op": "ADD",
      "path": "1"
    },
    "8437": {
      "fn": "CultureCoin.initialize",
      "offset": [
        3566,
        3576
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "8438": {
      "fn": "CultureCoin.initialize",
      "offset": [
        3566,
        3576
      ],
      "op": "DUP3",
      "path": "1"
    },
    "8439": {
      "fn": "CultureCoin.initialize",
      "offset": [
        3566,
        3576
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "8440": {
      "fn": "CultureCoin.initialize",
      "offset": [
        3566,
        3576
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x2105"
    },
    "8444": {
      "fn": "CultureCoin.initialize",
      "offset": [
        3566,
        3576
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "8445": {
      "fn": "CultureCoin.initialize",
      "offset": [
        3566,
        3570
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xD2"
    },
    "8447": {
      "fn": "CultureCoin.initialize",
      "offset": [
        3566,
        3570
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "8448": {
      "fn": "CultureCoin.initialize",
      "offset": [
        3566,
        3576
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x32AD"
    },
    "8452": {
      "fn": "CultureCoin.initialize",
      "jump": "i",
      "offset": [
        3566,
        3576
      ],
      "op": "JUMP",
      "path": "1"
    },
    "8453": {
      "fn": "CultureCoin.initialize",
      "offset": [
        3566,
        3576
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8454": {
      "op": "POP"
    },
    "8455": {
      "fn": "CultureCoin.initialize",
      "offset": [
        3733,
        3742
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 108,
      "value": "0xEA"
    },
    "8457": {
      "fn": "CultureCoin.initialize",
      "offset": [
        3733,
        3749
      ],
      "op": "DUP1",
      "path": "1"
    },
    "8458": {
      "fn": "CultureCoin.initialize",
      "offset": [
        3733,
        3749
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "8459": {
      "op": "PUSH5",
      "value": "0xFF00000000"
    },
    "8465": {
      "op": "NOT"
    },
    "8466": {
      "fn": "CultureCoin.initialize",
      "offset": [
        3733,
        3749
      ],
      "op": "AND",
      "path": "1"
    },
    "8467": {
      "fn": "CultureCoin.initialize",
      "offset": [
        3733,
        3749
      ],
      "op": "PUSH5",
      "path": "1",
      "value": "0x100000000"
    },
    "8473": {
      "fn": "CultureCoin.initialize",
      "offset": [
        3733,
        3749
      ],
      "op": "OR",
      "path": "1"
    },
    "8474": {
      "fn": "CultureCoin.initialize",
      "offset": [
        3733,
        3749
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8475": {
      "fn": "CultureCoin.initialize",
      "offset": [
        3733,
        3749
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "8476": {
      "fn": "CultureCoin.initialize",
      "offset": [
        4140,
        4153
      ],
      "op": "PUSH8",
      "path": "1",
      "statement": 109,
      "value": "0x37824949B666000"
    },
    "8485": {
      "fn": "CultureCoin.initialize",
      "offset": [
        4125,
        4137
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xE2"
    },
    "8487": {
      "fn": "CultureCoin.initialize",
      "offset": [
        4125,
        4153
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "8488": {
      "fn": "CultureCoin.initialize",
      "offset": [
        4199,
        4212
      ],
      "op": "PUSH8",
      "path": "1",
      "statement": 110,
      "value": "0x36F4C81D2CFEA000"
    },
    "8497": {
      "fn": "CultureCoin.initialize",
      "offset": [
        4187,
        4196
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xE3"
    },
    "8499": {
      "fn": "CultureCoin.initialize",
      "offset": [
        4187,
        4212
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "8500": {
      "fn": "CultureCoin.initialize",
      "offset": [
        4259,
        4273
      ],
      "op": "PUSH3",
      "path": "1",
      "statement": 111,
      "value": "0x2140"
    },
    "8504": {
      "fn": "CultureCoin.initialize",
      "offset": [
        4259,
        4269
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8505": {
      "fn": "CultureCoin.initialize",
      "offset": [
        3733,
        3742
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "8507": {
      "fn": "CultureCoin.initialize",
      "offset": [
        4259,
        4273
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x3923"
    },
    "8511": {
      "fn": "CultureCoin.initialize",
      "jump": "i",
      "offset": [
        4259,
        4273
      ],
      "op": "JUMP",
      "path": "1"
    },
    "8512": {
      "fn": "CultureCoin.initialize",
      "offset": [
        4259,
        4273
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8513": {
      "fn": "CultureCoin.initialize",
      "offset": [
        4249,
        4256
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xE4"
    },
    "8515": {
      "fn": "CultureCoin.initialize",
      "offset": [
        4249,
        4273
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "8516": {
      "fn": "CultureCoin.initialize",
      "offset": [
        4414,
        4422
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 112,
      "value": "0xE5"
    },
    "8518": {
      "fn": "CultureCoin.initialize",
      "offset": [
        4414,
        4435
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "8519": {
      "fn": "CultureCoin.initialize",
      "offset": [
        4589,
        4593
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 113,
      "value": "0x3E8"
    },
    "8522": {
      "fn": "CultureCoin.initialize",
      "offset": [
        4573,
        4586
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x99"
    },
    "8524": {
      "fn": "CultureCoin.initialize",
      "offset": [
        4573,
        4593
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "8525": {
      "offset": [
        2645,
        2711
      ],
      "op": "DUP1",
      "path": "13"
    },
    "8526": {
      "fn": "CultureCoin.initialize",
      "offset": [
        2645,
        2711
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "8527": {
      "fn": "CultureCoin.initialize",
      "offset": [
        2645,
        2711
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x215F"
    },
    "8531": {
      "fn": "CultureCoin.initialize",
      "offset": [
        2645,
        2711
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "8532": {
      "offset": [
        2695,
        2700
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "8534": {
      "offset": [
        2679,
        2700
      ],
      "op": "DUP1",
      "path": "13"
    },
    "8535": {
      "fn": "CultureCoin.initialize",
      "offset": [
        2679,
        2700
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "8536": {
      "op": "PUSH2",
      "value": "0xFF00"
    },
    "8539": {
      "op": "NOT"
    },
    "8540": {
      "offset": [
        2679,
        2700
      ],
      "op": "AND",
      "path": "13"
    },
    "8541": {
      "fn": "CultureCoin.initialize",
      "offset": [
        2679,
        2700
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "8542": {
      "fn": "CultureCoin.initialize",
      "offset": [
        2679,
        2700
      ],
      "op": "SSTORE",
      "path": "13"
    },
    "8543": {
      "offset": [
        2645,
        2711
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "8544": {
      "offset": [
        2080,
        2717
      ],
      "op": "POP",
      "path": "13"
    },
    "8545": {
      "fn": "CultureCoin.initialize",
      "offset": [
        2733,
        4670
      ],
      "op": "POP",
      "path": "1"
    },
    "8546": {
      "fn": "CultureCoin.initialize",
      "offset": [
        2733,
        4670
      ],
      "op": "POP",
      "path": "1"
    },
    "8547": {
      "fn": "CultureCoin.initialize",
      "jump": "o",
      "offset": [
        2733,
        4670
      ],
      "op": "JUMP",
      "path": "1"
    },
    "8548": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4313,
        4462
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "8549": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8551": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8553": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8555": {
      "op": "SHL"
    },
    "8556": {
      "op": "SUB"
    },
    "8557": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "SWAP2",
      "path": "15",
      "statement": 114
    },
    "8558": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "DUP3",
      "path": "15"
    },
    "8559": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "AND",
      "path": "15"
    },
    "8560": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4402,
        4409
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "8562": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "8563": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "DUP2",
      "path": "15"
    },
    "8564": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "8565": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4439
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x34"
    },
    "8567": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "8569": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "8570": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "DUP2",
      "path": "15"
    },
    "8571": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "8572": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "8574": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "DUP1",
      "path": "15"
    },
    "8575": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "DUP4",
      "path": "15"
    },
    "8576": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4446
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "8577": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "8578": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "8579": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "SWAP5",
      "path": "15"
    },
    "8580": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "AND",
      "path": "15"
    },
    "8581": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "DUP3",
      "path": "15"
    },
    "8582": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "8583": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "8584": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "8585": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "8586": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "8587": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "8588": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "8589": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4428,
        4455
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "8590": {
      "fn": "ERC20Upgradeable.allowance",
      "jump": "o",
      "offset": [
        4313,
        4462
      ],
      "op": "JUMP",
      "path": "15"
    },
    "8591": {
      "fn": "CultureCoin.dexCCIn",
      "offset": [
        15308,
        15815
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8592": {
      "fn": "CultureCoin.dexCCIn",
      "offset": [
        15372,
        15379
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "8594": {
      "offset": [
        1815,
        1816
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x2"
    },
    "8596": {
      "offset": [
        2569,
        2576
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x9A"
    },
    "8598": {
      "fn": "CultureCoin.dexCCIn",
      "offset": [
        2569,
        2576
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "8599": {
      "offset": [
        2569,
        2588
      ],
      "op": "EQ",
      "path": "14"
    },
    "8600": {
      "fn": "CultureCoin.dexCCIn",
      "offset": [
        2569,
        2588
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "8601": {
      "offset": [
        2561,
        2624
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x21B7"
    },
    "8605": {
      "offset": [
        2561,
        2624
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "8606": {
      "fn": "CultureCoin.dexCCIn",
      "offset": [
        2561,
        2624
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "8608": {
      "fn": "CultureCoin.dexCCIn",
      "offset": [
        2561,
        2624
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "8609": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8613": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8615": {
      "op": "SHL"
    },
    "8616": {
      "offset": [
        2561,
        2624
      ],
      "op": "DUP2",
      "path": "14"
    },
    "8617": {
      "fn": "CultureCoin.dexCCIn",
      "offset": [
        2561,
        2624
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "8618": {
      "fn": "CultureCoin.dexCCIn",
      "offset": [
        2561,
        2624
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "8620": {
      "fn": "CultureCoin.dexCCIn",
      "offset": [
        2561,
        2624
      ],
      "op": "ADD",
      "path": "14"
    },
    "8621": {
      "fn": "CultureCoin.dexCCIn",
      "offset": [
        2561,
        2624
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0xC98"
    },
    "8625": {
      "fn": "CultureCoin.dexCCIn",
      "offset": [
        2561,
        2624
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "8626": {
      "fn": "CultureCoin.dexCCIn",
      "offset": [
        2561,
        2624
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x387D"
    },
    "8630": {
      "fn": "CultureCoin.dexCCIn",
      "jump": "i",
      "offset": [
        2561,
        2624
      ],
      "op": "JUMP",
      "path": "14"
    },
    "8631": {
      "fn": "CultureCoin.dexCCIn",
      "offset": [
        2561,
        2624
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "8632": {
      "offset": [
        1815,
        1816
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x2"
    },
    "8634": {
      "offset": [
        2699,
        2706
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x9A"
    },
    "8636": {
      "offset": [
        2699,
        2717
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "8637": {
      "fn": "CultureCoin.dexCCIn",
      "offset": [
        15400,
        15406
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 115,
      "value": "0xEA"
    },
    "8639": {
      "fn": "CultureCoin.dexCCIn",
      "offset": [
        15400,
        15406
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "8640": {
      "fn": "CultureCoin.dexCCIn",
      "offset": [
        15400,
        15406
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x100"
    },
    "8643": {
      "fn": "CultureCoin.dexCCIn",
      "offset": [
        15400,
        15406
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8644": {
      "fn": "CultureCoin.dexCCIn",
      "offset": [
        15400,
        15406
      ],
      "op": "DIV",
      "path": "1"
    },
    "8645": {
      "fn": "CultureCoin.dexCCIn",
      "offset": [
        15400,
        15406
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "8647": {
      "fn": "CultureCoin.dexCCIn",
      "offset": [
        15400,
        15406
      ],
      "op": "AND",
      "path": "1"
    },
    "8648": {
      "branch": 216,
      "fn": "CultureCoin.dexCCIn",
      "offset": [
        15399,
        15406
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "8649": {
      "fn": "CultureCoin.dexCCIn",
      "offset": [
        15391,
        15455
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x21E7"
    },
    "8653": {
      "branch": 216,
      "fn": "CultureCoin.dexCCIn",
      "offset": [
        15391,
        15455
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "8654": {
      "fn": "CultureCoin.dexCCIn",
      "offset": [
        15391,
        15455
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "8656": {
      "fn": "CultureCoin.dexCCIn",
      "offset": [
        15391,
        15455
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "8657": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8661": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8663": {
      "op": "SHL"
    },
    "8664": {
      "fn": "CultureCoin.dexCCIn",
      "offset": [
        15391,
        15455
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8665": {
      "fn": "CultureCoin.dexCCIn",
      "offset": [
        15391,
        15455
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "8666": {
      "fn": "CultureCoin.dexCCIn",
      "offset": [
        15391,
        15455
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "8668": {
      "fn": "CultureCoin.dexCCIn",
      "offset": [
        15391,
        15455
      ],
      "op": "ADD",
      "path": "1"
    },
    "8669": {
      "fn": "CultureCoin.dexCCIn",
      "offset": [
        15391,
        15455
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0xC98"
    },
    "8673": {
      "fn": "CultureCoin.dexCCIn",
      "offset": [
        15391,
        15455
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8674": {
      "fn": "CultureCoin.dexCCIn",
      "offset": [
        15391,
        15455
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x38B4"
    },
    "8678": {
      "fn": "CultureCoin.dexCCIn",
      "jump": "i",
      "offset": [
        15391,
        15455
      ],
      "op": "JUMP",
      "path": "1"
    },
    "8679": {
      "fn": "CultureCoin.dexCCIn",
      "offset": [
        15391,
        15455
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8680": {
      "fn": "CultureCoin.dexCCIn",
      "offset": [
        15485,
        15486
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 116,
      "value": "0x0"
    },
    "8682": {
      "fn": "CultureCoin.dexCCIn",
      "offset": [
        15473,
        15482
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xE3"
    },
    "8684": {
      "fn": "CultureCoin.dexCCIn",
      "offset": [
        15473,
        15482
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "8685": {
      "branch": 217,
      "fn": "CultureCoin.dexCCIn",
      "offset": [
        15473,
        15486
      ],
      "op": "GT",
      "path": "1"
    },
    "8686": {
      "fn": "CultureCoin.dexCCIn",
      "offset": [
        15465,
        15500
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x220C"
    },
    "8690": {
      "branch": 217,
      "fn": "CultureCoin.dexCCIn",
      "offset": [
        15465,
        15500
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "8691": {
      "fn": "CultureCoin.dexCCIn",
      "offset": [
        15465,
        15500
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "8693": {
      "fn": "CultureCoin.dexCCIn",
      "offset": [
        15465,
        15500
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "8694": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8698": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8700": {
      "op": "SHL"
    },
    "8701": {
      "fn": "CultureCoin.dexCCIn",
      "offset": [
        15465,
        15500
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8702": {
      "fn": "CultureCoin.dexCCIn",
      "offset": [
        15465,
        15500
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "8703": {
      "fn": "CultureCoin.dexCCIn",
      "offset": [
        15465,
        15500
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "8705": {
      "fn": "CultureCoin.dexCCIn",
      "offset": [
        15465,
        15500
      ],
      "op": "ADD",
      "path": "1"
    },
    "8706": {
      "fn": "CultureCoin.dexCCIn",
      "offset": [
        15465,
        15500
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0xC98"
    },
    "8710": {
      "fn": "CultureCoin.dexCCIn",
      "offset": [
        15465,
        15500
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8711": {
      "fn": "CultureCoin.dexCCIn",
      "offset": [
        15465,
        15500
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x3900"
    },
    "8715": {
      "fn": "CultureCoin.dexCCIn",
      "jump": "i",
      "offset": [
        15465,
        15500
      ],
      "op": "JUMP",
      "path": "1"
    },
    "8716": {
      "fn": "CultureCoin.dexCCIn",
      "offset": [
        15465,
        15500
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8717": {
      "fn": "CultureCoin.dexCCIn",
      "offset": [
        15511,
        15530
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "8719": {
      "fn": "CultureCoin.dexCCIn",
      "offset": [
        15557,
        15564
      ],
      "op": "PUSH8",
      "path": "1",
      "value": "0xDE0B6B3A7640000"
    },
    "8728": {
      "fn": "CultureCoin.dexCCIn",
      "offset": [
        15544,
        15553
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xE3"
    },
    "8730": {
      "fn": "CultureCoin.dexCCIn",
      "offset": [
        15544,
        15553
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "8731": {
      "fn": "CultureCoin.dexCCIn",
      "offset": [
        15534,
        15541
      ],
      "op": "DUP5",
      "path": "1"
    },
    "8732": {
      "fn": "CultureCoin.dexCCIn",
      "offset": [
        15534,
        15553
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x2227"
    },
    "8736": {
      "fn": "CultureCoin.dexCCIn",
      "offset": [
        15534,
        15553
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "8737": {
      "fn": "CultureCoin.dexCCIn",
      "offset": [
        15534,
        15553
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8738": {
      "fn": "CultureCoin.dexCCIn",
      "offset": [
        15534,
        15553
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x3923"
    },
    "8742": {
      "fn": "CultureCoin.dexCCIn",
      "jump": "i",
      "offset": [
        15534,
        15553
      ],
      "op": "JUMP",
      "path": "1"
    },
    "8743": {
      "fn": "CultureCoin.dexCCIn",
      "offset": [
        15534,
        15553
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8744": {
      "fn": "CultureCoin.dexCCIn",
      "offset": [
        15533,
        15564
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x2233"
    },
    "8748": {
      "fn": "CultureCoin.dexCCIn",
      "offset": [
        15533,
        15564
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "8749": {
      "fn": "CultureCoin.dexCCIn",
      "offset": [
        15533,
        15564
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8750": {
      "fn": "CultureCoin.dexCCIn",
      "offset": [
        15533,
        15564
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x3945"
    },
    "8754": {
      "fn": "CultureCoin.dexCCIn",
      "jump": "i",
      "offset": [
        15533,
        15564
      ],
      "op": "JUMP",
      "path": "1"
    },
    "8755": {
      "fn": "CultureCoin.dexCCIn",
      "offset": [
        15533,
        15564
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8756": {
      "fn": "CultureCoin.dexCCIn",
      "offset": [
        15511,
        15564
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8757": {
      "fn": "CultureCoin.dexCCIn",
      "offset": [
        15511,
        15564
      ],
      "op": "POP",
      "path": "1"
    },
    "8758": {
      "fn": "CultureCoin.dexCCIn",
      "offset": [
        15575,
        15601
      ],
      "op": "PUSH3",
      "path": "1",
      "statement": 117,
      "value": "0x2241"
    },
    "8762": {
      "fn": "CultureCoin.dexCCIn",
      "offset": [
        15581,
        15591
      ],
      "op": "CALLER",
      "path": "1"
    },
    "8763": {
      "fn": "CultureCoin.dexCCIn",
      "offset": [
        15593,
        15600
      ],
      "op": "DUP5",
      "path": "1"
    },
    "8764": {
      "fn": "CultureCoin.dexCCIn",
      "offset": [
        15575,
        15580
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x28FB"
    },
    "8768": {
      "fn": "CultureCoin.dexCCIn",
      "jump": "i",
      "offset": [
        15575,
        15601
      ],
      "op": "JUMP",
      "path": "1"
    },
    "8769": {
      "fn": "CultureCoin.dexCCIn",
      "offset": [
        15575,
        15601
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8770": {
      "fn": "CultureCoin.dexCCIn",
      "offset": [
        15621,
        15632
      ],
      "op": "DUP1",
      "path": "1",
      "statement": 118
    },
    "8771": {
      "fn": "CultureCoin.dexCCIn",
      "offset": [
        15616,
        15617
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xCD"
    },
    "8773": {
      "fn": "CultureCoin.dexCCIn",
      "offset": [
        15616,
        15617
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "8775": {
      "fn": "CultureCoin.dexCCIn",
      "offset": [
        15616,
        15632
      ],
      "op": "DUP3",
      "path": "1"
    },
    "8776": {
      "fn": "CultureCoin.dexCCIn",
      "offset": [
        15616,
        15632
      ],
      "op": "DUP3",
      "path": "1"
    },
    "8777": {
      "fn": "CultureCoin.dexCCIn",
      "offset": [
        15616,
        15632
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "8778": {
      "fn": "CultureCoin.dexCCIn",
      "offset": [
        15616,
        15632
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x2255"
    },
    "8782": {
      "fn": "CultureCoin.dexCCIn",
      "offset": [
        15616,
        15632
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "8783": {
      "fn": "CultureCoin.dexCCIn",
      "offset": [
        15616,
        15632
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8784": {
      "fn": "CultureCoin.dexCCIn",
      "offset": [
        15616,
        15632
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x3863"
    },
    "8788": {
      "fn": "CultureCoin.dexCCIn",
      "jump": "i",
      "offset": [
        15616,
        15632
      ],
      "op": "JUMP",
      "path": "1"
    },
    "8789": {
      "fn": "CultureCoin.dexCCIn",
      "offset": [
        15616,
        15632
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8790": {
      "fn": "CultureCoin.dexCCIn",
      "offset": [
        15616,
        15632
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "8791": {
      "fn": "CultureCoin.dexCCIn",
      "offset": [
        15616,
        15632
      ],
      "op": "POP",
      "path": "1"
    },
    "8792": {
      "fn": "CultureCoin.dexCCIn",
      "offset": [
        15616,
        15632
      ],
      "op": "POP",
      "path": "1"
    },
    "8793": {
      "fn": "CultureCoin.dexCCIn",
      "offset": [
        15616,
        15632
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8794": {
      "fn": "CultureCoin.dexCCIn",
      "offset": [
        15616,
        15632
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8795": {
      "fn": "CultureCoin.dexCCIn",
      "offset": [
        15616,
        15632
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "8796": {
      "fn": "CultureCoin.dexCCIn",
      "offset": [
        15616,
        15632
      ],
      "op": "POP",
      "path": "1"
    },
    "8797": {
      "fn": "CultureCoin.dexCCIn",
      "offset": [
        15654,
        15665
      ],
      "op": "DUP1",
      "path": "1",
      "statement": 119
    },
    "8798": {
      "fn": "CultureCoin.dexCCIn",
      "offset": [
        15642,
        15650
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xE6"
    },
    "8800": {
      "fn": "CultureCoin.dexCCIn",
      "offset": [
        15642,
        15650
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "8802": {
      "fn": "CultureCoin.dexCCIn",
      "offset": [
        15642,
        15665
      ],
      "op": "DUP3",
      "path": "1"
    },
    "8803": {
      "fn": "CultureCoin.dexCCIn",
      "offset": [
        15642,
        15665
      ],
      "op": "DUP3",
      "path": "1"
    },
    "8804": {
      "fn": "CultureCoin.dexCCIn",
      "offset": [
        15642,
        15665
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "8805": {
      "fn": "CultureCoin.dexCCIn",
      "offset": [
        15642,
        15665
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x2270"
    },
    "8809": {
      "fn": "CultureCoin.dexCCIn",
      "offset": [
        15642,
        15665
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "8810": {
      "fn": "CultureCoin.dexCCIn",
      "offset": [
        15642,
        15665
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8811": {
      "fn": "CultureCoin.dexCCIn",
      "offset": [
        15642,
        15665
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x37F7"
    },
    "8815": {
      "fn": "CultureCoin.dexCCIn",
      "jump": "i",
      "offset": [
        15642,
        15665
      ],
      "op": "JUMP",
      "path": "1"
    },
    "8816": {
      "fn": "CultureCoin.dexCCIn",
      "offset": [
        15642,
        15665
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8817": {
      "fn": "CultureCoin.dexCCIn",
      "offset": [
        15642,
        15665
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8818": {
      "fn": "CultureCoin.dexCCIn",
      "offset": [
        15642,
        15665
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "8819": {
      "fn": "CultureCoin.dexCCIn",
      "offset": [
        15642,
        15665
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "8820": {
      "op": "POP"
    },
    "8821": {
      "op": "POP"
    },
    "8822": {
      "fn": "CultureCoin.dexCCIn",
      "offset": [
        15676,
        15717
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 120,
      "value": "0x40"
    },
    "8824": {
      "fn": "CultureCoin.dexCCIn",
      "offset": [
        15676,
        15717
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "8825": {
      "fn": "CultureCoin.dexCCIn",
      "offset": [
        15684,
        15694
      ],
      "op": "CALLER",
      "path": "1"
    },
    "8826": {
      "fn": "CultureCoin.dexCCIn",
      "offset": [
        15684,
        15694
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8827": {
      "fn": "CultureCoin.dexCCIn",
      "offset": [
        15676,
        15717
      ],
      "op": "DUP3",
      "path": "1"
    },
    "8828": {
      "fn": "CultureCoin.dexCCIn",
      "offset": [
        15676,
        15717
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "8829": {
      "fn": "CultureCoin.dexCCIn",
      "offset": [
        15676,
        15717
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x8FC"
    },
    "8832": {
      "fn": "CultureCoin.dexCCIn",
      "offset": [
        15676,
        15717
      ],
      "op": "MUL",
      "path": "1"
    },
    "8833": {
      "fn": "CultureCoin.dexCCIn",
      "offset": [
        15676,
        15717
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8834": {
      "fn": "CultureCoin.dexCCIn",
      "offset": [
        15705,
        15716
      ],
      "op": "DUP4",
      "path": "1"
    },
    "8835": {
      "fn": "CultureCoin.dexCCIn",
      "offset": [
        15705,
        15716
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8836": {
      "fn": "CultureCoin.dexCCIn",
      "offset": [
        15676,
        15717
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "8838": {
      "fn": "CultureCoin.dexCCIn",
      "offset": [
        15676,
        15717
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8839": {
      "fn": "CultureCoin.dexCCIn",
      "offset": [
        15676,
        15717
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8840": {
      "fn": "CultureCoin.dexCCIn",
      "offset": [
        15676,
        15717
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8841": {
      "fn": "CultureCoin.dexCCIn",
      "offset": [
        15705,
        15716
      ],
      "op": "DUP6",
      "path": "1"
    },
    "8842": {
      "fn": "CultureCoin.dexCCIn",
      "offset": [
        15684,
        15694
      ],
      "op": "DUP9",
      "path": "1"
    },
    "8843": {
      "fn": "CultureCoin.dexCCIn",
      "offset": [
        15676,
        15717
      ],
      "op": "DUP9",
      "path": "1"
    },
    "8844": {
      "fn": "CultureCoin.dexCCIn",
      "offset": [
        15676,
        15717
      ],
      "op": "CALL",
      "path": "1"
    },
    "8845": {
      "fn": "CultureCoin.dexCCIn",
      "offset": [
        15676,
        15717
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "8846": {
      "fn": "CultureCoin.dexCCIn",
      "offset": [
        15676,
        15717
      ],
      "op": "POP",
      "path": "1"
    },
    "8847": {
      "fn": "CultureCoin.dexCCIn",
      "offset": [
        15676,
        15717
      ],
      "op": "POP",
      "path": "1"
    },
    "8848": {
      "fn": "CultureCoin.dexCCIn",
      "offset": [
        15676,
        15717
      ],
      "op": "POP",
      "path": "1"
    },
    "8849": {
      "fn": "CultureCoin.dexCCIn",
      "offset": [
        15676,
        15717
      ],
      "op": "POP",
      "path": "1"
    },
    "8850": {
      "fn": "CultureCoin.dexCCIn",
      "offset": [
        15676,
        15717
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "8851": {
      "fn": "CultureCoin.dexCCIn",
      "offset": [
        15676,
        15717
      ],
      "op": "DUP1",
      "path": "1"
    },
    "8852": {
      "fn": "CultureCoin.dexCCIn",
      "offset": [
        15676,
        15717
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "8853": {
      "fn": "CultureCoin.dexCCIn",
      "offset": [
        15676,
        15717
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x22A3"
    },
    "8857": {
      "fn": "CultureCoin.dexCCIn",
      "offset": [
        15676,
        15717
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "8858": {
      "fn": "CultureCoin.dexCCIn",
      "offset": [
        15676,
        15717
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "8859": {
      "fn": "CultureCoin.dexCCIn",
      "offset": [
        15676,
        15717
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "8861": {
      "fn": "CultureCoin.dexCCIn",
      "offset": [
        15676,
        15717
      ],
      "op": "DUP1",
      "path": "1"
    },
    "8862": {
      "fn": "CultureCoin.dexCCIn",
      "offset": [
        15676,
        15717
      ],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "8863": {
      "fn": "CultureCoin.dexCCIn",
      "offset": [
        15676,
        15717
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "8864": {
      "fn": "CultureCoin.dexCCIn",
      "offset": [
        15676,
        15717
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "8866": {
      "fn": "CultureCoin.dexCCIn",
      "offset": [
        15676,
        15717
      ],
      "op": "REVERT",
      "path": "1"
    },
    "8867": {
      "fn": "CultureCoin.dexCCIn",
      "offset": [
        15676,
        15717
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8868": {
      "fn": "CultureCoin.dexCCIn",
      "offset": [
        15676,
        15717
      ],
      "op": "POP",
      "path": "1"
    },
    "8869": {
      "fn": "CultureCoin.dexCCIn",
      "offset": [
        15747,
        15754
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 121,
      "value": "0xE4"
    },
    "8871": {
      "fn": "CultureCoin.dexCCIn",
      "offset": [
        15747,
        15754
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "8872": {
      "fn": "CultureCoin.dexCCIn",
      "offset": [
        15735,
        15743
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xE6"
    },
    "8874": {
      "fn": "CultureCoin.dexCCIn",
      "offset": [
        15735,
        15743
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "8875": {
      "fn": "CultureCoin.dexCCIn",
      "offset": [
        15735,
        15754
      ],
      "op": "GT",
      "path": "1"
    },
    "8876": {
      "branch": 218,
      "fn": "CultureCoin.dexCCIn",
      "offset": [
        15735,
        15754
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "8877": {
      "fn": "CultureCoin.dexCCIn",
      "offset": [
        15727,
        15779
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x22CB"
    },
    "8881": {
      "branch": 218,
      "fn": "CultureCoin.dexCCIn",
      "offset": [
        15727,
        15779
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "8882": {
      "fn": "CultureCoin.dexCCIn",
      "offset": [
        15727,
        15779
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "8884": {
      "fn": "CultureCoin.dexCCIn",
      "offset": [
        15727,
        15779
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "8885": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8889": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8891": {
      "op": "SHL"
    },
    "8892": {
      "fn": "CultureCoin.dexCCIn",
      "offset": [
        15727,
        15779
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8893": {
      "fn": "CultureCoin.dexCCIn",
      "offset": [
        15727,
        15779
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "8894": {
      "fn": "CultureCoin.dexCCIn",
      "offset": [
        15727,
        15779
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "8896": {
      "fn": "CultureCoin.dexCCIn",
      "offset": [
        15727,
        15779
      ],
      "op": "ADD",
      "path": "1"
    },
    "8897": {
      "fn": "CultureCoin.dexCCIn",
      "offset": [
        15727,
        15779
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0xC98"
    },
    "8901": {
      "fn": "CultureCoin.dexCCIn",
      "offset": [
        15727,
        15779
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8902": {
      "fn": "CultureCoin.dexCCIn",
      "offset": [
        15727,
        15779
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x3968"
    },
    "8906": {
      "fn": "CultureCoin.dexCCIn",
      "jump": "i",
      "offset": [
        15727,
        15779
      ],
      "op": "JUMP",
      "path": "1"
    },
    "8907": {
      "fn": "CultureCoin.dexCCIn",
      "offset": [
        15727,
        15779
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8908": {
      "offset": [
        1772,
        1773
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1"
    },
    "8910": {
      "offset": [
        2872,
        2879
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x9A"
    },
    "8912": {
      "offset": [
        2872,
        2894
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "8913": {
      "fn": "CultureCoin.dexCCIn",
      "offset": [
        15797,
        15808
      ],
      "op": "SWAP3",
      "path": "1",
      "statement": 122
    },
    "8914": {
      "fn": "CultureCoin.dexCCIn",
      "offset": [
        15308,
        15815
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "8915": {
      "op": "POP"
    },
    "8916": {
      "op": "POP"
    },
    "8917": {
      "fn": "CultureCoin.dexCCIn",
      "jump": "o",
      "offset": [
        15308,
        15815
      ],
      "op": "JUMP",
      "path": "1"
    },
    "8918": {
      "fn": "Stakeable.hasStake",
      "offset": [
        7521,
        8348
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "8919": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8921": {
      "op": "DUP1"
    },
    "8922": {
      "op": "MLOAD"
    },
    "8923": {
      "op": "DUP1"
    },
    "8924": {
      "op": "DUP3"
    },
    "8925": {
      "op": "ADD"
    },
    "8926": {
      "op": "SWAP1"
    },
    "8927": {
      "op": "SWAP2"
    },
    "8928": {
      "op": "MSTORE"
    },
    "8929": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8931": {
      "op": "DUP2"
    },
    "8932": {
      "op": "MSTORE"
    },
    "8933": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8935": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8937": {
      "op": "DUP3"
    },
    "8938": {
      "op": "ADD"
    },
    "8939": {
      "op": "MSTORE"
    },
    "8940": {
      "fn": "Stakeable.hasStake",
      "offset": [
        7688,
        7712
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "8942": {
      "fn": "Stakeable.hasStake",
      "offset": [
        7791,
        7820
      ],
      "op": "DUP1",
      "path": "5"
    },
    "8943": {
      "fn": "Stakeable.hasStake",
      "offset": [
        7823,
        7886
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "8945": {
      "fn": "Stakeable.hasStake",
      "offset": [
        7823,
        7886
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "8946": {
      "fn": "Stakeable.hasStake",
      "offset": [
        7823,
        7886
      ],
      "op": "DUP1",
      "path": "5"
    },
    "8947": {
      "fn": "Stakeable.hasStake",
      "offset": [
        7823,
        7886
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "8949": {
      "fn": "Stakeable.hasStake",
      "offset": [
        7823,
        7886
      ],
      "op": "ADD",
      "path": "5"
    },
    "8950": {
      "fn": "Stakeable.hasStake",
      "offset": [
        7823,
        7886
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "8952": {
      "fn": "Stakeable.hasStake",
      "offset": [
        7823,
        7886
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "8953": {
      "fn": "Stakeable.hasStake",
      "offset": [
        7823,
        7886
      ],
      "op": "DUP1",
      "path": "5"
    },
    "8954": {
      "fn": "Stakeable.hasStake",
      "offset": [
        7838,
        7839
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "8956": {
      "fn": "Stakeable.hasStake",
      "offset": [
        7823,
        7886
      ],
      "op": "DUP2",
      "path": "5"
    },
    "8957": {
      "fn": "Stakeable.hasStake",
      "offset": [
        7823,
        7886
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "8958": {
      "fn": "Stakeable.hasStake",
      "offset": [
        7823,
        7886
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "8960": {
      "fn": "Stakeable.hasStake",
      "offset": [
        7823,
        7886
      ],
      "op": "ADD",
      "path": "5"
    },
    "8961": {
      "fn": "Stakeable.hasStake",
      "offset": [
        7841,
        7853
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x97"
    },
    "8963": {
      "fn": "Stakeable.hasStake",
      "offset": [
        7854,
        7860
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x98"
    },
    "8965": {
      "fn": "Stakeable.hasStake",
      "offset": [
        7854,
        7869
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "8967": {
      "fn": "Stakeable.hasStake",
      "offset": [
        7861,
        7868
      ],
      "op": "DUP9",
      "path": "5"
    },
    "8968": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8970": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8972": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8974": {
      "op": "SHL"
    },
    "8975": {
      "op": "SUB"
    },
    "8976": {
      "fn": "Stakeable.hasStake",
      "offset": [
        7854,
        7869
      ],
      "op": "AND",
      "path": "5"
    },
    "8977": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8979": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8981": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8983": {
      "op": "SHL"
    },
    "8984": {
      "op": "SUB"
    },
    "8985": {
      "fn": "Stakeable.hasStake",
      "offset": [
        7854,
        7869
      ],
      "op": "AND",
      "path": "5"
    },
    "8986": {
      "fn": "Stakeable.hasStake",
      "offset": [
        7854,
        7869
      ],
      "op": "DUP2",
      "path": "5"
    },
    "8987": {
      "fn": "Stakeable.hasStake",
      "offset": [
        7854,
        7869
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "8988": {
      "fn": "Stakeable.hasStake",
      "offset": [
        7854,
        7869
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "8990": {
      "fn": "Stakeable.hasStake",
      "offset": [
        7854,
        7869
      ],
      "op": "ADD",
      "path": "5"
    },
    "8991": {
      "fn": "Stakeable.hasStake",
      "offset": [
        7854,
        7869
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "8992": {
      "fn": "Stakeable.hasStake",
      "offset": [
        7854,
        7869
      ],
      "op": "DUP2",
      "path": "5"
    },
    "8993": {
      "fn": "Stakeable.hasStake",
      "offset": [
        7854,
        7869
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "8994": {
      "fn": "Stakeable.hasStake",
      "offset": [
        7854,
        7869
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "8996": {
      "fn": "Stakeable.hasStake",
      "offset": [
        7854,
        7869
      ],
      "op": "ADD",
      "path": "5"
    },
    "8997": {
      "fn": "Stakeable.hasStake",
      "offset": [
        7854,
        7869
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "8999": {
      "fn": "Stakeable.hasStake",
      "offset": [
        7854,
        7869
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "9000": {
      "fn": "Stakeable.hasStake",
      "offset": [
        7854,
        7869
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "9001": {
      "fn": "Stakeable.hasStake",
      "offset": [
        7841,
        7870
      ],
      "op": "DUP2",
      "path": "5"
    },
    "9002": {
      "fn": "Stakeable.hasStake",
      "offset": [
        7841,
        7870
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "9003": {
      "fn": "Stakeable.hasStake",
      "offset": [
        7841,
        7870
      ],
      "op": "DUP2",
      "path": "5"
    },
    "9004": {
      "fn": "Stakeable.hasStake",
      "offset": [
        7841,
        7870
      ],
      "op": "LT",
      "path": "5"
    },
    "9005": {
      "fn": "Stakeable.hasStake",
      "offset": [
        7841,
        7870
      ],
      "op": "PUSH3",
      "path": "5",
      "value": "0x233B"
    },
    "9009": {
      "fn": "Stakeable.hasStake",
      "offset": [
        7841,
        7870
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "9010": {
      "fn": "Stakeable.hasStake",
      "offset": [
        7841,
        7870
      ],
      "op": "PUSH3",
      "path": "5",
      "value": "0x233B"
    },
    "9014": {
      "fn": "Stakeable.hasStake",
      "offset": [
        7841,
        7870
      ],
      "op": "PUSH3",
      "path": "5",
      "value": "0x3B86"
    },
    "9018": {
      "fn": "Stakeable.hasStake",
      "jump": "i",
      "offset": [
        7841,
        7870
      ],
      "op": "JUMP",
      "path": "5"
    },
    "9019": {
      "fn": "Stakeable.hasStake",
      "offset": [
        7841,
        7870
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "9020": {
      "fn": "Stakeable.hasStake",
      "offset": [
        7841,
        7870
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "9021": {
      "fn": "Stakeable.hasStake",
      "offset": [
        7841,
        7870
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "9023": {
      "fn": "Stakeable.hasStake",
      "offset": [
        7841,
        7870
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "9024": {
      "fn": "Stakeable.hasStake",
      "offset": [
        7841,
        7870
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "9026": {
      "fn": "Stakeable.hasStake",
      "offset": [
        7841,
        7870
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "9028": {
      "fn": "Stakeable.hasStake",
      "offset": [
        7841,
        7870
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "9029": {
      "fn": "Stakeable.hasStake",
      "offset": [
        7841,
        7870
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "9030": {
      "fn": "Stakeable.hasStake",
      "offset": [
        7841,
        7870
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "9032": {
      "fn": "Stakeable.hasStake",
      "offset": [
        7841,
        7870
      ],
      "op": "MUL",
      "path": "5"
    },
    "9033": {
      "fn": "Stakeable.hasStake",
      "offset": [
        7841,
        7870
      ],
      "op": "ADD",
      "path": "5"
    },
    "9034": {
      "fn": "Stakeable.hasStake",
      "offset": [
        7841,
        7885
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "9036": {
      "fn": "Stakeable.hasStake",
      "offset": [
        7841,
        7885
      ],
      "op": "ADD",
      "path": "5"
    },
    "9037": {
      "fn": "Stakeable.hasStake",
      "offset": [
        7823,
        7886
      ],
      "op": "DUP1",
      "path": "5"
    },
    "9038": {
      "fn": "Stakeable.hasStake",
      "offset": [
        7823,
        7886
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "9039": {
      "fn": "Stakeable.hasStake",
      "offset": [
        7823,
        7886
      ],
      "op": "DUP1",
      "path": "5"
    },
    "9040": {
      "fn": "Stakeable.hasStake",
      "offset": [
        7823,
        7886
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "9042": {
      "fn": "Stakeable.hasStake",
      "offset": [
        7823,
        7886
      ],
      "op": "MUL",
      "path": "5"
    },
    "9043": {
      "fn": "Stakeable.hasStake",
      "offset": [
        7823,
        7886
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "9045": {
      "fn": "Stakeable.hasStake",
      "offset": [
        7823,
        7886
      ],
      "op": "ADD",
      "path": "5"
    },
    "9046": {
      "fn": "Stakeable.hasStake",
      "offset": [
        7823,
        7886
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "9048": {
      "fn": "Stakeable.hasStake",
      "offset": [
        7823,
        7886
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "9049": {
      "fn": "Stakeable.hasStake",
      "offset": [
        7823,
        7886
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "9050": {
      "fn": "Stakeable.hasStake",
      "offset": [
        7823,
        7886
      ],
      "op": "DUP2",
      "path": "5"
    },
    "9051": {
      "fn": "Stakeable.hasStake",
      "offset": [
        7823,
        7886
      ],
      "op": "ADD",
      "path": "5"
    },
    "9052": {
      "fn": "Stakeable.hasStake",
      "offset": [
        7823,
        7886
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "9054": {
      "fn": "Stakeable.hasStake",
      "offset": [
        7823,
        7886
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "9055": {
      "fn": "Stakeable.hasStake",
      "offset": [
        7823,
        7886
      ],
      "op": "DUP1",
      "path": "5"
    },
    "9056": {
      "fn": "Stakeable.hasStake",
      "offset": [
        7823,
        7886
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "9057": {
      "fn": "Stakeable.hasStake",
      "offset": [
        7823,
        7886
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "9058": {
      "fn": "Stakeable.hasStake",
      "offset": [
        7823,
        7886
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "9059": {
      "fn": "Stakeable.hasStake",
      "offset": [
        7823,
        7886
      ],
      "op": "DUP2",
      "path": "5"
    },
    "9060": {
      "fn": "Stakeable.hasStake",
      "offset": [
        7823,
        7886
      ],
      "op": "DUP2",
      "path": "5"
    },
    "9061": {
      "fn": "Stakeable.hasStake",
      "offset": [
        7823,
        7886
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "9062": {
      "fn": "Stakeable.hasStake",
      "offset": [
        7823,
        7886
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "9064": {
      "fn": "Stakeable.hasStake",
      "offset": [
        7823,
        7886
      ],
      "op": "ADD",
      "path": "5"
    },
    "9065": {
      "fn": "Stakeable.hasStake",
      "offset": [
        7823,
        7886
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "9067": {
      "fn": "Stakeable.hasStake",
      "offset": [
        7823,
        7886
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "9068": {
      "fn": "Stakeable.hasStake",
      "offset": [
        7823,
        7886
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "9069": {
      "fn": "Stakeable.hasStake",
      "offset": [
        7823,
        7886
      ],
      "op": "DUP3",
      "path": "5"
    },
    "9070": {
      "fn": "Stakeable.hasStake",
      "offset": [
        7823,
        7886
      ],
      "op": "DUP3",
      "path": "5"
    },
    "9071": {
      "fn": "Stakeable.hasStake",
      "offset": [
        7823,
        7886
      ],
      "op": "LT",
      "path": "5"
    },
    "9072": {
      "fn": "Stakeable.hasStake",
      "offset": [
        7823,
        7886
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "9073": {
      "fn": "Stakeable.hasStake",
      "offset": [
        7823,
        7886
      ],
      "op": "PUSH3",
      "path": "5",
      "value": "0x23CB"
    },
    "9077": {
      "fn": "Stakeable.hasStake",
      "offset": [
        7823,
        7886
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "9078": {
      "fn": "Stakeable.hasStake",
      "offset": [
        7823,
        7886
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "9080": {
      "fn": "Stakeable.hasStake",
      "offset": [
        7823,
        7886
      ],
      "op": "DUP5",
      "path": "5"
    },
    "9081": {
      "fn": "Stakeable.hasStake",
      "offset": [
        7823,
        7886
      ],
      "op": "DUP2",
      "path": "5"
    },
    "9082": {
      "fn": "Stakeable.hasStake",
      "offset": [
        7823,
        7886
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "9083": {
      "fn": "Stakeable.hasStake",
      "offset": [
        7823,
        7886
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "9085": {
      "fn": "Stakeable.hasStake",
      "offset": [
        7823,
        7886
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "9086": {
      "fn": "Stakeable.hasStake",
      "offset": [
        7823,
        7886
      ],
      "op": "DUP2",
      "path": "5"
    },
    "9087": {
      "fn": "Stakeable.hasStake",
      "offset": [
        7823,
        7886
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "9088": {
      "fn": "Stakeable.hasStake",
      "offset": [
        7823,
        7886
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "9089": {
      "fn": "Stakeable.hasStake",
      "offset": [
        7823,
        7886
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "9091": {
      "fn": "Stakeable.hasStake",
      "offset": [
        7823,
        7886
      ],
      "op": "DUP1",
      "path": "5"
    },
    "9092": {
      "fn": "Stakeable.hasStake",
      "offset": [
        7823,
        7886
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "9093": {
      "fn": "Stakeable.hasStake",
      "offset": [
        7823,
        7886
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x80"
    },
    "9095": {
      "fn": "Stakeable.hasStake",
      "offset": [
        7823,
        7886
      ],
      "op": "DUP2",
      "path": "5"
    },
    "9096": {
      "fn": "Stakeable.hasStake",
      "offset": [
        7823,
        7886
      ],
      "op": "ADD",
      "path": "5"
    },
    "9097": {
      "fn": "Stakeable.hasStake",
      "offset": [
        7823,
        7886
      ],
      "op": "DUP3",
      "path": "5"
    },
    "9098": {
      "fn": "Stakeable.hasStake",
      "offset": [
        7823,
        7886
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "9099": {
      "fn": "Stakeable.hasStake",
      "offset": [
        7823,
        7886
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "9101": {
      "fn": "Stakeable.hasStake",
      "offset": [
        7823,
        7886
      ],
      "op": "DUP7",
      "path": "5"
    },
    "9102": {
      "fn": "Stakeable.hasStake",
      "offset": [
        7823,
        7886
      ],
      "op": "MUL",
      "path": "5"
    },
    "9103": {
      "fn": "Stakeable.hasStake",
      "offset": [
        7823,
        7886
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "9104": {
      "fn": "Stakeable.hasStake",
      "offset": [
        7823,
        7886
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "9105": {
      "fn": "Stakeable.hasStake",
      "offset": [
        7823,
        7886
      ],
      "op": "ADD",
      "path": "5"
    },
    "9106": {
      "fn": "Stakeable.hasStake",
      "offset": [
        7823,
        7886
      ],
      "op": "DUP1",
      "path": "5"
    },
    "9107": {
      "fn": "Stakeable.hasStake",
      "offset": [
        7823,
        7886
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "9108": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9110": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9112": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9114": {
      "op": "SHL"
    },
    "9115": {
      "op": "SUB"
    },
    "9116": {
      "fn": "Stakeable.hasStake",
      "offset": [
        7823,
        7886
      ],
      "op": "AND",
      "path": "5"
    },
    "9117": {
      "fn": "Stakeable.hasStake",
      "offset": [
        7823,
        7886
      ],
      "op": "DUP4",
      "path": "5"
    },
    "9118": {
      "fn": "Stakeable.hasStake",
      "offset": [
        7823,
        7886
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "9119": {
      "fn": "Stakeable.hasStake",
      "offset": [
        7823,
        7886
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "9121": {
      "fn": "Stakeable.hasStake",
      "offset": [
        7823,
        7886
      ],
      "op": "DUP1",
      "path": "5"
    },
    "9122": {
      "fn": "Stakeable.hasStake",
      "offset": [
        7823,
        7886
      ],
      "op": "DUP3",
      "path": "5"
    },
    "9123": {
      "fn": "Stakeable.hasStake",
      "offset": [
        7823,
        7886
      ],
      "op": "ADD",
      "path": "5"
    },
    "9124": {
      "fn": "Stakeable.hasStake",
      "offset": [
        7823,
        7886
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "9125": {
      "fn": "Stakeable.hasStake",
      "offset": [
        7823,
        7886
      ],
      "op": "DUP5",
      "path": "5"
    },
    "9126": {
      "fn": "Stakeable.hasStake",
      "offset": [
        7823,
        7886
      ],
      "op": "DUP7",
      "path": "5"
    },
    "9127": {
      "fn": "Stakeable.hasStake",
      "offset": [
        7823,
        7886
      ],
      "op": "ADD",
      "path": "5"
    },
    "9128": {
      "fn": "Stakeable.hasStake",
      "offset": [
        7823,
        7886
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "9129": {
      "fn": "Stakeable.hasStake",
      "offset": [
        7823,
        7886
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "9131": {
      "fn": "Stakeable.hasStake",
      "offset": [
        7823,
        7886
      ],
      "op": "DUP3",
      "path": "5"
    },
    "9132": {
      "fn": "Stakeable.hasStake",
      "offset": [
        7823,
        7886
      ],
      "op": "ADD",
      "path": "5"
    },
    "9133": {
      "fn": "Stakeable.hasStake",
      "offset": [
        7823,
        7886
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "9134": {
      "fn": "Stakeable.hasStake",
      "offset": [
        7823,
        7886
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "9135": {
      "fn": "Stakeable.hasStake",
      "offset": [
        7823,
        7886
      ],
      "op": "DUP5",
      "path": "5"
    },
    "9136": {
      "fn": "Stakeable.hasStake",
      "offset": [
        7823,
        7886
      ],
      "op": "ADD",
      "path": "5"
    },
    "9137": {
      "fn": "Stakeable.hasStake",
      "offset": [
        7823,
        7886
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "9138": {
      "fn": "Stakeable.hasStake",
      "offset": [
        7823,
        7886
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "9139": {
      "fn": "Stakeable.hasStake",
      "offset": [
        7823,
        7886
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "9140": {
      "fn": "Stakeable.hasStake",
      "offset": [
        7823,
        7886
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "9141": {
      "fn": "Stakeable.hasStake",
      "offset": [
        7823,
        7886
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3"
    },
    "9143": {
      "fn": "Stakeable.hasStake",
      "offset": [
        7823,
        7886
      ],
      "op": "ADD",
      "path": "5"
    },
    "9144": {
      "fn": "Stakeable.hasStake",
      "offset": [
        7823,
        7886
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "9145": {
      "fn": "Stakeable.hasStake",
      "offset": [
        7823,
        7886
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x60"
    },
    "9147": {
      "fn": "Stakeable.hasStake",
      "offset": [
        7823,
        7886
      ],
      "op": "DUP4",
      "path": "5"
    },
    "9148": {
      "fn": "Stakeable.hasStake",
      "offset": [
        7823,
        7886
      ],
      "op": "ADD",
      "path": "5"
    },
    "9149": {
      "fn": "Stakeable.hasStake",
      "offset": [
        7823,
        7886
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "9150": {
      "fn": "Stakeable.hasStake",
      "offset": [
        7823,
        7886
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "9151": {
      "fn": "Stakeable.hasStake",
      "offset": [
        7823,
        7886
      ],
      "op": "DUP4",
      "path": "5"
    },
    "9152": {
      "fn": "Stakeable.hasStake",
      "offset": [
        7823,
        7886
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "9153": {
      "fn": "Stakeable.hasStake",
      "offset": [
        7823,
        7886
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "9154": {
      "fn": "Stakeable.hasStake",
      "offset": [
        7823,
        7886
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "9155": {
      "fn": "Stakeable.hasStake",
      "offset": [
        7823,
        7886
      ],
      "op": "ADD",
      "path": "5"
    },
    "9156": {
      "fn": "Stakeable.hasStake",
      "offset": [
        7823,
        7886
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "9157": {
      "fn": "Stakeable.hasStake",
      "offset": [
        7823,
        7886
      ],
      "op": "ADD",
      "path": "5"
    },
    "9158": {
      "fn": "Stakeable.hasStake",
      "offset": [
        7823,
        7886
      ],
      "op": "PUSH3",
      "path": "5",
      "value": "0x236C"
    },
    "9162": {
      "fn": "Stakeable.hasStake",
      "offset": [
        7823,
        7886
      ],
      "op": "JUMP",
      "path": "5"
    },
    "9163": {
      "fn": "Stakeable.hasStake",
      "offset": [
        7823,
        7886
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "9164": {
      "op": "POP"
    },
    "9165": {
      "op": "POP"
    },
    "9166": {
      "op": "POP"
    },
    "9167": {
      "fn": "Stakeable.hasStake",
      "offset": [
        7823,
        7886
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "9168": {
      "fn": "Stakeable.hasStake",
      "offset": [
        7823,
        7886
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "9169": {
      "op": "POP"
    },
    "9170": {
      "fn": "Stakeable.hasStake",
      "offset": [
        7791,
        7886
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "9171": {
      "op": "POP"
    },
    "9172": {
      "fn": "Stakeable.hasStake",
      "offset": [
        7958,
        7967
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "9174": {
      "fn": "Stakeable.hasStake",
      "offset": [
        7953,
        8226
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "9175": {
      "fn": "Stakeable.hasStake",
      "offset": [
        7977,
        7984
      ],
      "op": "DUP2",
      "path": "5"
    },
    "9176": {
      "fn": "Stakeable.hasStake",
      "offset": [
        7977,
        7991
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "9178": {
      "fn": "Stakeable.hasStake",
      "offset": [
        7977,
        7991
      ],
      "op": "ADD",
      "path": "5"
    },
    "9179": {
      "fn": "Stakeable.hasStake",
      "offset": [
        7977,
        7991
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "9180": {
      "fn": "Stakeable.hasStake",
      "offset": [
        7977,
        7998
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "9181": {
      "fn": "Stakeable.hasStake",
      "offset": [
        7973,
        7974
      ],
      "op": "DUP2",
      "path": "5"
    },
    "9182": {
      "fn": "Stakeable.hasStake",
      "offset": [
        7973,
        7998
      ],
      "op": "LT",
      "path": "5"
    },
    "9183": {
      "fn": "Stakeable.hasStake",
      "offset": [
        7953,
        8226
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "9184": {
      "fn": "Stakeable.hasStake",
      "offset": [
        7953,
        8226
      ],
      "op": "PUSH3",
      "path": "5",
      "value": "0x2488"
    },
    "9188": {
      "fn": "Stakeable.hasStake",
      "offset": [
        7953,
        8226
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "9189": {
      "fn": "Stakeable.hasStake",
      "offset": [
        8020,
        8043
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "9191": {
      "fn": "Stakeable.hasStake",
      "offset": [
        8046,
        8085
      ],
      "op": "PUSH3",
      "path": "5",
      "value": "0x2411"
    },
    "9195": {
      "fn": "Stakeable.hasStake",
      "offset": [
        8067,
        8074
      ],
      "op": "DUP4",
      "path": "5"
    },
    "9196": {
      "fn": "Stakeable.hasStake",
      "offset": [
        8067,
        8081
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "9198": {
      "fn": "Stakeable.hasStake",
      "offset": [
        8067,
        8081
      ],
      "op": "ADD",
      "path": "5"
    },
    "9199": {
      "fn": "Stakeable.hasStake",
      "offset": [
        8067,
        8081
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "9200": {
      "fn": "Stakeable.hasStake",
      "offset": [
        8082,
        8083
      ],
      "op": "DUP4",
      "path": "5"
    },
    "9201": {
      "fn": "Stakeable.hasStake",
      "offset": [
        8067,
        8084
      ],
      "op": "DUP2",
      "path": "5"
    },
    "9202": {
      "fn": "Stakeable.hasStake",
      "offset": [
        8067,
        8084
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "9203": {
      "fn": "Stakeable.hasStake",
      "offset": [
        8067,
        8084
      ],
      "op": "DUP2",
      "path": "5"
    },
    "9204": {
      "fn": "Stakeable.hasStake",
      "offset": [
        8067,
        8084
      ],
      "op": "LT",
      "path": "5"
    },
    "9205": {
      "fn": "Stakeable.hasStake",
      "offset": [
        8067,
        8084
      ],
      "op": "PUSH3",
      "path": "5",
      "value": "0x2403"
    },
    "9209": {
      "fn": "Stakeable.hasStake",
      "offset": [
        8067,
        8084
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "9210": {
      "fn": "Stakeable.hasStake",
      "offset": [
        8067,
        8084
      ],
      "op": "PUSH3",
      "path": "5",
      "value": "0x2403"
    },
    "9214": {
      "fn": "Stakeable.hasStake",
      "offset": [
        8067,
        8084
      ],
      "op": "PUSH3",
      "path": "5",
      "value": "0x3B86"
    },
    "9218": {
      "fn": "Stakeable.hasStake",
      "jump": "i",
      "offset": [
        8067,
        8084
      ],
      "op": "JUMP",
      "path": "5"
    },
    "9219": {
      "fn": "Stakeable.hasStake",
      "offset": [
        8067,
        8084
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "9220": {
      "fn": "Stakeable.hasStake",
      "offset": [
        8067,
        8084
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "9222": {
      "fn": "Stakeable.hasStake",
      "offset": [
        8067,
        8084
      ],
      "op": "MUL",
      "path": "5"
    },
    "9223": {
      "fn": "Stakeable.hasStake",
      "offset": [
        8067,
        8084
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "9225": {
      "fn": "Stakeable.hasStake",
      "offset": [
        8067,
        8084
      ],
      "op": "ADD",
      "path": "5"
    },
    "9226": {
      "fn": "Stakeable.hasStake",
      "offset": [
        8067,
        8084
      ],
      "op": "ADD",
      "path": "5"
    },
    "9227": {
      "fn": "Stakeable.hasStake",
      "offset": [
        8067,
        8084
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "9228": {
      "fn": "Stakeable.hasStake",
      "offset": [
        8046,
        8066
      ],
      "op": "PUSH3",
      "path": "5",
      "value": "0x2EF5"
    },
    "9232": {
      "fn": "Stakeable.hasStake",
      "jump": "i",
      "offset": [
        8046,
        8085
      ],
      "op": "JUMP",
      "path": "5"
    },
    "9233": {
      "fn": "Stakeable.hasStake",
      "offset": [
        8046,
        8085
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "9234": {
      "fn": "Stakeable.hasStake",
      "offset": [
        8020,
        8085
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "9235": {
      "fn": "Stakeable.hasStake",
      "offset": [
        8020,
        8085
      ],
      "op": "POP",
      "path": "5"
    },
    "9236": {
      "fn": "Stakeable.hasStake",
      "offset": [
        8128,
        8143
      ],
      "op": "DUP1",
      "path": "5",
      "statement": 123
    },
    "9237": {
      "fn": "Stakeable.hasStake",
      "offset": [
        8098,
        8105
      ],
      "op": "DUP4",
      "path": "5"
    },
    "9238": {
      "fn": "Stakeable.hasStake",
      "offset": [
        8098,
        8112
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "9240": {
      "fn": "Stakeable.hasStake",
      "offset": [
        8098,
        8112
      ],
      "op": "ADD",
      "path": "5"
    },
    "9241": {
      "fn": "Stakeable.hasStake",
      "offset": [
        8098,
        8112
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "9242": {
      "fn": "Stakeable.hasStake",
      "offset": [
        8113,
        8114
      ],
      "op": "DUP4",
      "path": "5"
    },
    "9243": {
      "fn": "Stakeable.hasStake",
      "offset": [
        8098,
        8115
      ],
      "op": "DUP2",
      "path": "5"
    },
    "9244": {
      "fn": "Stakeable.hasStake",
      "offset": [
        8098,
        8115
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "9245": {
      "fn": "Stakeable.hasStake",
      "offset": [
        8098,
        8115
      ],
      "op": "DUP2",
      "path": "5"
    },
    "9246": {
      "fn": "Stakeable.hasStake",
      "offset": [
        8098,
        8115
      ],
      "op": "LT",
      "path": "5"
    },
    "9247": {
      "fn": "Stakeable.hasStake",
      "offset": [
        8098,
        8115
      ],
      "op": "PUSH3",
      "path": "5",
      "value": "0x242D"
    },
    "9251": {
      "fn": "Stakeable.hasStake",
      "offset": [
        8098,
        8115
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "9252": {
      "fn": "Stakeable.hasStake",
      "offset": [
        8098,
        8115
      ],
      "op": "PUSH3",
      "path": "5",
      "value": "0x242D"
    },
    "9256": {
      "fn": "Stakeable.hasStake",
      "offset": [
        8098,
        8115
      ],
      "op": "PUSH3",
      "path": "5",
      "value": "0x3B86"
    },
    "9260": {
      "fn": "Stakeable.hasStake",
      "jump": "i",
      "offset": [
        8098,
        8115
      ],
      "op": "JUMP",
      "path": "5"
    },
    "9261": {
      "fn": "Stakeable.hasStake",
      "offset": [
        8098,
        8115
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "9262": {
      "fn": "Stakeable.hasStake",
      "offset": [
        8098,
        8115
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "9264": {
      "fn": "Stakeable.hasStake",
      "offset": [
        8098,
        8115
      ],
      "op": "MUL",
      "path": "5"
    },
    "9265": {
      "fn": "Stakeable.hasStake",
      "offset": [
        8098,
        8115
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "9267": {
      "fn": "Stakeable.hasStake",
      "offset": [
        8098,
        8115
      ],
      "op": "ADD",
      "path": "5"
    },
    "9268": {
      "fn": "Stakeable.hasStake",
      "offset": [
        8098,
        8115
      ],
      "op": "ADD",
      "path": "5"
    },
    "9269": {
      "fn": "Stakeable.hasStake",
      "offset": [
        8098,
        8115
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "9270": {
      "fn": "Stakeable.hasStake",
      "offset": [
        8098,
        8125
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x60"
    },
    "9272": {
      "fn": "Stakeable.hasStake",
      "offset": [
        8098,
        8125
      ],
      "op": "ADD",
      "path": "5"
    },
    "9273": {
      "fn": "Stakeable.hasStake",
      "offset": [
        8098,
        8143
      ],
      "op": "DUP2",
      "path": "5"
    },
    "9274": {
      "fn": "Stakeable.hasStake",
      "offset": [
        8098,
        8143
      ],
      "op": "DUP2",
      "path": "5"
    },
    "9275": {
      "fn": "Stakeable.hasStake",
      "offset": [
        8098,
        8143
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "9276": {
      "fn": "Stakeable.hasStake",
      "offset": [
        8098,
        8143
      ],
      "op": "POP",
      "path": "5"
    },
    "9277": {
      "fn": "Stakeable.hasStake",
      "offset": [
        8098,
        8143
      ],
      "op": "POP",
      "path": "5"
    },
    "9278": {
      "fn": "Stakeable.hasStake",
      "offset": [
        8192,
        8199
      ],
      "op": "DUP3",
      "path": "5",
      "statement": 124
    },
    "9279": {
      "fn": "Stakeable.hasStake",
      "offset": [
        8192,
        8206
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "9281": {
      "fn": "Stakeable.hasStake",
      "offset": [
        8192,
        8206
      ],
      "op": "ADD",
      "path": "5"
    },
    "9282": {
      "fn": "Stakeable.hasStake",
      "offset": [
        8192,
        8206
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "9283": {
      "fn": "Stakeable.hasStake",
      "offset": [
        8207,
        8208
      ],
      "op": "DUP3",
      "path": "5"
    },
    "9284": {
      "fn": "Stakeable.hasStake",
      "offset": [
        8192,
        8209
      ],
      "op": "DUP2",
      "path": "5"
    },
    "9285": {
      "fn": "Stakeable.hasStake",
      "offset": [
        8192,
        8209
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "9286": {
      "fn": "Stakeable.hasStake",
      "offset": [
        8192,
        8209
      ],
      "op": "DUP2",
      "path": "5"
    },
    "9287": {
      "fn": "Stakeable.hasStake",
      "offset": [
        8192,
        8209
      ],
      "op": "LT",
      "path": "5"
    },
    "9288": {
      "fn": "Stakeable.hasStake",
      "offset": [
        8192,
        8209
      ],
      "op": "PUSH3",
      "path": "5",
      "value": "0x2456"
    },
    "9292": {
      "fn": "Stakeable.hasStake",
      "offset": [
        8192,
        8209
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "9293": {
      "fn": "Stakeable.hasStake",
      "offset": [
        8192,
        8209
      ],
      "op": "PUSH3",
      "path": "5",
      "value": "0x2456"
    },
    "9297": {
      "fn": "Stakeable.hasStake",
      "offset": [
        8192,
        8209
      ],
      "op": "PUSH3",
      "path": "5",
      "value": "0x3B86"
    },
    "9301": {
      "fn": "Stakeable.hasStake",
      "jump": "i",
      "offset": [
        8192,
        8209
      ],
      "op": "JUMP",
      "path": "5"
    },
    "9302": {
      "fn": "Stakeable.hasStake",
      "offset": [
        8192,
        8209
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "9303": {
      "fn": "Stakeable.hasStake",
      "offset": [
        8192,
        8209
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "9305": {
      "fn": "Stakeable.hasStake",
      "offset": [
        8192,
        8209
      ],
      "op": "MUL",
      "path": "5"
    },
    "9306": {
      "fn": "Stakeable.hasStake",
      "offset": [
        8192,
        8209
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "9308": {
      "fn": "Stakeable.hasStake",
      "offset": [
        8192,
        8209
      ],
      "op": "ADD",
      "path": "5"
    },
    "9309": {
      "fn": "Stakeable.hasStake",
      "offset": [
        8192,
        8209
      ],
      "op": "ADD",
      "path": "5"
    },
    "9310": {
      "fn": "Stakeable.hasStake",
      "offset": [
        8192,
        8209
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "9311": {
      "fn": "Stakeable.hasStake",
      "offset": [
        8192,
        8216
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "9313": {
      "fn": "Stakeable.hasStake",
      "offset": [
        8192,
        8216
      ],
      "op": "ADD",
      "path": "5"
    },
    "9314": {
      "fn": "Stakeable.hasStake",
      "offset": [
        8192,
        8216
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "9315": {
      "fn": "Stakeable.hasStake",
      "offset": [
        8175,
        8191
      ],
      "op": "DUP5",
      "path": "5"
    },
    "9316": {
      "fn": "Stakeable.hasStake",
      "offset": [
        8175,
        8216
      ],
      "op": "PUSH3",
      "path": "5",
      "value": "0x246F"
    },
    "9320": {
      "fn": "Stakeable.hasStake",
      "offset": [
        8175,
        8216
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "9321": {
      "fn": "Stakeable.hasStake",
      "offset": [
        8175,
        8216
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "9322": {
      "fn": "Stakeable.hasStake",
      "offset": [
        8175,
        8216
      ],
      "op": "PUSH3",
      "path": "5",
      "value": "0x37F7"
    },
    "9326": {
      "fn": "Stakeable.hasStake",
      "jump": "i",
      "offset": [
        8175,
        8216
      ],
      "op": "JUMP",
      "path": "5"
    },
    "9327": {
      "fn": "Stakeable.hasStake",
      "offset": [
        8175,
        8216
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "9328": {
      "fn": "Stakeable.hasStake",
      "offset": [
        8156,
        8216
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "9329": {
      "op": "POP"
    },
    "9330": {
      "fn": "Stakeable.hasStake",
      "offset": [
        8000,
        8006
      ],
      "op": "PUSH3",
      "path": "5",
      "statement": 125,
      "value": "0x2480"
    },
    "9334": {
      "fn": "Stakeable.hasStake",
      "offset": [
        8000,
        8006
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "9335": {
      "op": "POP"
    },
    "9336": {
      "fn": "Stakeable.hasStake",
      "offset": [
        8005,
        8006
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "9338": {
      "fn": "Stakeable.hasStake",
      "offset": [
        8000,
        8006
      ],
      "op": "DUP3",
      "path": "5"
    },
    "9339": {
      "fn": "Stakeable.hasStake",
      "offset": [
        8000,
        8006
      ],
      "op": "PUSH3",
      "path": "5",
      "value": "0x37F7"
    },
    "9343": {
      "fn": "Stakeable.hasStake",
      "jump": "i",
      "offset": [
        8000,
        8006
      ],
      "op": "JUMP",
      "path": "5"
    },
    "9344": {
      "fn": "Stakeable.hasStake",
      "offset": [
        8000,
        8006
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "9345": {
      "fn": "Stakeable.hasStake",
      "offset": [
        8000,
        8006
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "9346": {
      "fn": "Stakeable.hasStake",
      "offset": [
        8000,
        8006
      ],
      "op": "POP",
      "path": "5"
    },
    "9347": {
      "fn": "Stakeable.hasStake",
      "offset": [
        7953,
        8226
      ],
      "op": "PUSH3",
      "path": "5",
      "value": "0x23D6"
    },
    "9351": {
      "fn": "Stakeable.hasStake",
      "offset": [
        7953,
        8226
      ],
      "op": "JUMP",
      "path": "5"
    },
    "9352": {
      "fn": "Stakeable.hasStake",
      "offset": [
        7953,
        8226
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "9353": {
      "op": "POP"
    },
    "9354": {
      "fn": "Stakeable.hasStake",
      "offset": [
        8279,
        8318
      ],
      "op": "SWAP1",
      "path": "5",
      "statement": 126
    },
    "9355": {
      "fn": "Stakeable.hasStake",
      "offset": [
        8279,
        8318
      ],
      "op": "DUP2",
      "path": "5"
    },
    "9356": {
      "fn": "Stakeable.hasStake",
      "offset": [
        8279,
        8318
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "9357": {
      "fn": "Stakeable.hasStake",
      "offset": [
        8279,
        8286
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "9358": {
      "fn": "Stakeable.hasStake",
      "offset": [
        7521,
        8348
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "9359": {
      "op": "POP"
    },
    "9360": {
      "op": "POP"
    },
    "9361": {
      "fn": "Stakeable.hasStake",
      "jump": "o",
      "offset": [
        7521,
        8348
      ],
      "op": "JUMP",
      "path": "5"
    },
    "9362": {
      "fn": "CultureCoin.setDexRates",
      "offset": [
        16693,
        16847
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "9363": {
      "fn": "CultureCoin.setDexRates",
      "offset": [
        16776,
        16806
      ],
      "op": "PUSH3",
      "path": "1",
      "statement": 127,
      "value": "0x249D"
    },
    "9367": {
      "fn": "CultureCoin.setDexRates",
      "offset": [
        16792,
        16805
      ],
      "op": "DUP3",
      "path": "1"
    },
    "9368": {
      "fn": "CultureCoin.setDexRates",
      "offset": [
        16776,
        16791
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x11A2"
    },
    "9372": {
      "fn": "CultureCoin.setDexRates",
      "jump": "i",
      "offset": [
        16776,
        16806
      ],
      "op": "JUMP",
      "path": "1"
    },
    "9373": {
      "fn": "CultureCoin.setDexRates",
      "offset": [
        16776,
        16806
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "9374": {
      "fn": "CultureCoin.setDexRates",
      "offset": [
        16816,
        16840
      ],
      "op": "PUSH3",
      "path": "1",
      "statement": 128,
      "value": "0x1502"
    },
    "9378": {
      "fn": "CultureCoin.setDexRates",
      "offset": [
        16829,
        16839
      ],
      "op": "DUP2",
      "path": "1"
    },
    "9379": {
      "fn": "CultureCoin.setDexRates",
      "offset": [
        16816,
        16828
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x1B4C"
    },
    "9383": {
      "fn": "CultureCoin.setDexRates",
      "jump": "i",
      "offset": [
        16816,
        16840
      ],
      "op": "JUMP",
      "path": "1"
    },
    "9384": {
      "fn": "CultureCoin.withdrawStake",
      "offset": [
        5997,
        6593
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "9385": {
      "fn": "CultureCoin.withdrawStake",
      "offset": [
        6087,
        6094
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "9387": {
      "offset": [
        1815,
        1816
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x2"
    },
    "9389": {
      "offset": [
        2569,
        2576
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x9A"
    },
    "9391": {
      "fn": "CultureCoin.withdrawStake",
      "offset": [
        2569,
        2576
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "9392": {
      "offset": [
        2569,
        2588
      ],
      "op": "EQ",
      "path": "14"
    },
    "9393": {
      "branch": 236,
      "fn": "CultureCoin.withdrawStake",
      "offset": [
        2569,
        2588
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "9394": {
      "offset": [
        2561,
        2624
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x24D0"
    },
    "9398": {
      "branch": 236,
      "offset": [
        2561,
        2624
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "9399": {
      "fn": "CultureCoin.withdrawStake",
      "offset": [
        2561,
        2624
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "9401": {
      "fn": "CultureCoin.withdrawStake",
      "offset": [
        2561,
        2624
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "9402": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9406": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9408": {
      "op": "SHL"
    },
    "9409": {
      "offset": [
        2561,
        2624
      ],
      "op": "DUP2",
      "path": "14"
    },
    "9410": {
      "fn": "CultureCoin.withdrawStake",
      "offset": [
        2561,
        2624
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "9411": {
      "fn": "CultureCoin.withdrawStake",
      "offset": [
        2561,
        2624
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "9413": {
      "fn": "CultureCoin.withdrawStake",
      "offset": [
        2561,
        2624
      ],
      "op": "ADD",
      "path": "14"
    },
    "9414": {
      "fn": "CultureCoin.withdrawStake",
      "offset": [
        2561,
        2624
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0xC98"
    },
    "9418": {
      "fn": "CultureCoin.withdrawStake",
      "offset": [
        2561,
        2624
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "9419": {
      "fn": "CultureCoin.withdrawStake",
      "offset": [
        2561,
        2624
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x387D"
    },
    "9423": {
      "fn": "CultureCoin.withdrawStake",
      "jump": "i",
      "offset": [
        2561,
        2624
      ],
      "op": "JUMP",
      "path": "14"
    },
    "9424": {
      "fn": "CultureCoin.withdrawStake",
      "offset": [
        2561,
        2624
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "9425": {
      "offset": [
        1815,
        1816
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x2"
    },
    "9427": {
      "offset": [
        2699,
        2706
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x9A"
    },
    "9429": {
      "offset": [
        2699,
        2717
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "9430": {
      "fn": "CultureCoin.withdrawStake",
      "offset": [
        6115,
        6120
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 129,
      "value": "0xEA"
    },
    "9432": {
      "fn": "CultureCoin.withdrawStake",
      "offset": [
        6115,
        6120
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "9433": {
      "fn": "CultureCoin.withdrawStake",
      "offset": [
        6115,
        6120
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "9435": {
      "fn": "CultureCoin.withdrawStake",
      "offset": [
        6115,
        6120
      ],
      "op": "AND",
      "path": "1"
    },
    "9436": {
      "branch": 219,
      "fn": "CultureCoin.withdrawStake",
      "offset": [
        6114,
        6120
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "9437": {
      "fn": "CultureCoin.withdrawStake",
      "offset": [
        6106,
        6147
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x24FB"
    },
    "9441": {
      "branch": 219,
      "fn": "CultureCoin.withdrawStake",
      "offset": [
        6106,
        6147
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "9442": {
      "fn": "CultureCoin.withdrawStake",
      "offset": [
        6106,
        6147
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "9444": {
      "fn": "CultureCoin.withdrawStake",
      "offset": [
        6106,
        6147
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "9445": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9449": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9451": {
      "op": "SHL"
    },
    "9452": {
      "fn": "CultureCoin.withdrawStake",
      "offset": [
        6106,
        6147
      ],
      "op": "DUP2",
      "path": "1"
    },
    "9453": {
      "fn": "CultureCoin.withdrawStake",
      "offset": [
        6106,
        6147
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "9454": {
      "fn": "CultureCoin.withdrawStake",
      "offset": [
        6106,
        6147
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "9456": {
      "fn": "CultureCoin.withdrawStake",
      "offset": [
        6106,
        6147
      ],
      "op": "ADD",
      "path": "1"
    },
    "9457": {
      "fn": "CultureCoin.withdrawStake",
      "offset": [
        6106,
        6147
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0xC98"
    },
    "9461": {
      "fn": "CultureCoin.withdrawStake",
      "offset": [
        6106,
        6147
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9462": {
      "fn": "CultureCoin.withdrawStake",
      "offset": [
        6106,
        6147
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x3996"
    },
    "9466": {
      "fn": "CultureCoin.withdrawStake",
      "jump": "i",
      "offset": [
        6106,
        6147
      ],
      "op": "JUMP",
      "path": "1"
    },
    "9467": {
      "fn": "CultureCoin.withdrawStake",
      "offset": [
        6106,
        6147
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "9468": {
      "fn": "CultureCoin.withdrawStake",
      "offset": [
        6166,
        6172
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 130,
      "value": "0xEA"
    },
    "9470": {
      "fn": "CultureCoin.withdrawStake",
      "offset": [
        6166,
        6172
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "9471": {
      "fn": "CultureCoin.withdrawStake",
      "offset": [
        6166,
        6172
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x100"
    },
    "9474": {
      "fn": "CultureCoin.withdrawStake",
      "offset": [
        6166,
        6172
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9475": {
      "fn": "CultureCoin.withdrawStake",
      "offset": [
        6166,
        6172
      ],
      "op": "DIV",
      "path": "1"
    },
    "9476": {
      "fn": "CultureCoin.withdrawStake",
      "offset": [
        6166,
        6172
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "9478": {
      "fn": "CultureCoin.withdrawStake",
      "offset": [
        6166,
        6172
      ],
      "op": "AND",
      "path": "1"
    },
    "9479": {
      "branch": 220,
      "fn": "CultureCoin.withdrawStake",
      "offset": [
        6165,
        6172
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "9480": {
      "fn": "CultureCoin.withdrawStake",
      "offset": [
        6157,
        6235
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x2526"
    },
    "9484": {
      "branch": 220,
      "fn": "CultureCoin.withdrawStake",
      "offset": [
        6157,
        6235
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "9485": {
      "fn": "CultureCoin.withdrawStake",
      "offset": [
        6157,
        6235
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "9487": {
      "fn": "CultureCoin.withdrawStake",
      "offset": [
        6157,
        6235
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "9488": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9492": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9494": {
      "op": "SHL"
    },
    "9495": {
      "fn": "CultureCoin.withdrawStake",
      "offset": [
        6157,
        6235
      ],
      "op": "DUP2",
      "path": "1"
    },
    "9496": {
      "fn": "CultureCoin.withdrawStake",
      "offset": [
        6157,
        6235
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "9497": {
      "fn": "CultureCoin.withdrawStake",
      "offset": [
        6157,
        6235
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "9499": {
      "fn": "CultureCoin.withdrawStake",
      "offset": [
        6157,
        6235
      ],
      "op": "ADD",
      "path": "1"
    },
    "9500": {
      "fn": "CultureCoin.withdrawStake",
      "offset": [
        6157,
        6235
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0xC98"
    },
    "9504": {
      "fn": "CultureCoin.withdrawStake",
      "offset": [
        6157,
        6235
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9505": {
      "fn": "CultureCoin.withdrawStake",
      "offset": [
        6157,
        6235
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x39C6"
    },
    "9509": {
      "fn": "CultureCoin.withdrawStake",
      "jump": "i",
      "offset": [
        6157,
        6235
      ],
      "op": "JUMP",
      "path": "1"
    },
    "9510": {
      "fn": "CultureCoin.withdrawStake",
      "offset": [
        6157,
        6235
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "9511": {
      "fn": "CultureCoin.withdrawStake",
      "offset": [
        6245,
        6267
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "9513": {
      "fn": "CultureCoin.withdrawStake",
      "offset": [
        6270,
        6305
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x2534"
    },
    "9517": {
      "fn": "CultureCoin.withdrawStake",
      "offset": [
        6285,
        6291
      ],
      "op": "DUP5",
      "path": "1"
    },
    "9518": {
      "fn": "CultureCoin.withdrawStake",
      "offset": [
        6293,
        6304
      ],
      "op": "DUP5",
      "path": "1"
    },
    "9519": {
      "fn": "CultureCoin.withdrawStake",
      "offset": [
        6270,
        6284
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x2F3D"
    },
    "9523": {
      "fn": "CultureCoin.withdrawStake",
      "jump": "i",
      "offset": [
        6270,
        6305
      ],
      "op": "JUMP",
      "path": "1"
    },
    "9524": {
      "fn": "CultureCoin.withdrawStake",
      "offset": [
        6270,
        6305
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "9525": {
      "fn": "CultureCoin.withdrawStake",
      "offset": [
        6245,
        6305
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9526": {
      "op": "POP"
    },
    "9527": {
      "fn": "CultureCoin.withdrawStake",
      "offset": [
        6362,
        6369
      ],
      "op": "PUSH8",
      "path": "1",
      "statement": 131,
      "value": "0xDE0B6B3A7640000"
    },
    "9536": {
      "fn": "CultureCoin.withdrawStake",
      "offset": [
        6333,
        6359
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x2553"
    },
    "9540": {
      "fn": "CultureCoin.withdrawStake",
      "offset": [
        6245,
        6305
      ],
      "op": "DUP3",
      "path": "1"
    },
    "9541": {
      "fn": "CultureCoin.withdrawStake",
      "offset": [
        6350,
        6359
      ],
      "op": "PUSH8",
      "path": "1",
      "value": "0xDBD2FC137A30000"
    },
    "9550": {
      "fn": "CultureCoin.withdrawStake",
      "offset": [
        6333,
        6359
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x3923"
    },
    "9554": {
      "fn": "CultureCoin.withdrawStake",
      "jump": "i",
      "offset": [
        6333,
        6359
      ],
      "op": "JUMP",
      "path": "1"
    },
    "9555": {
      "fn": "CultureCoin.withdrawStake",
      "offset": [
        6333,
        6359
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "9556": {
      "fn": "CultureCoin.withdrawStake",
      "offset": [
        6333,
        6369
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x255F"
    },
    "9560": {
      "fn": "CultureCoin.withdrawStake",
      "offset": [
        6333,
        6369
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "9561": {
      "fn": "CultureCoin.withdrawStake",
      "offset": [
        6333,
        6369
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9562": {
      "fn": "CultureCoin.withdrawStake",
      "offset": [
        6333,
        6369
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x3945"
    },
    "9566": {
      "fn": "CultureCoin.withdrawStake",
      "jump": "i",
      "offset": [
        6333,
        6369
      ],
      "op": "JUMP",
      "path": "1"
    },
    "9567": {
      "fn": "CultureCoin.withdrawStake",
      "offset": [
        6333,
        6369
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "9568": {
      "fn": "CultureCoin.withdrawStake",
      "offset": [
        6316,
        6369
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9569": {
      "fn": "CultureCoin.withdrawStake",
      "offset": [
        6316,
        6369
      ],
      "op": "POP",
      "path": "1"
    },
    "9570": {
      "fn": "CultureCoin.withdrawStake",
      "offset": [
        6503,
        6555
      ],
      "op": "PUSH3",
      "path": "1",
      "statement": 132,
      "value": "0x18D1"
    },
    "9574": {
      "fn": "CultureCoin.withdrawStake",
      "offset": [
        6521,
        6525
      ],
      "op": "ADDRESS",
      "path": "1"
    },
    "9575": {
      "fn": "CultureCoin.withdrawStake",
      "offset": [
        6528,
        6538
      ],
      "op": "CALLER",
      "path": "1"
    },
    "9576": {
      "fn": "CultureCoin.withdrawStake",
      "offset": [
        6540,
        6554
      ],
      "op": "DUP4",
      "path": "1"
    },
    "9577": {
      "fn": "CultureCoin.withdrawStake",
      "offset": [
        6503,
        6512
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x2734"
    },
    "9581": {
      "fn": "CultureCoin.withdrawStake",
      "jump": "i",
      "offset": [
        6503,
        6555
      ],
      "op": "JUMP",
      "path": "1"
    },
    "9582": {
      "fn": "CultureCoin.setMaxXOut",
      "offset": [
        15820,
        15938
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "9583": {
      "fn": "CultureCoin.setMaxXOut",
      "offset": [
        15885,
        15888
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 133,
      "value": "0xD5"
    },
    "9585": {
      "fn": "CultureCoin.setMaxXOut",
      "offset": [
        15885,
        15888
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "9586": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9588": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9590": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9592": {
      "op": "SHL"
    },
    "9593": {
      "op": "SUB"
    },
    "9594": {
      "fn": "CultureCoin.setMaxXOut",
      "offset": [
        15885,
        15888
      ],
      "op": "AND",
      "path": "1"
    },
    "9595": {
      "fn": "CultureCoin.setMaxXOut",
      "offset": [
        15892,
        15902
      ],
      "op": "CALLER",
      "path": "1"
    },
    "9596": {
      "branch": 221,
      "fn": "CultureCoin.setMaxXOut",
      "offset": [
        15885,
        15902
      ],
      "op": "EQ",
      "path": "1"
    },
    "9597": {
      "fn": "CultureCoin.setMaxXOut",
      "offset": [
        15877,
        15903
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x2586"
    },
    "9601": {
      "branch": 221,
      "fn": "CultureCoin.setMaxXOut",
      "offset": [
        15877,
        15903
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "9602": {
      "fn": "CultureCoin.setMaxXOut",
      "offset": [
        15877,
        15903
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "9604": {
      "fn": "CultureCoin.setMaxXOut",
      "offset": [
        15877,
        15903
      ],
      "op": "DUP1",
      "path": "1"
    },
    "9605": {
      "fn": "CultureCoin.setMaxXOut",
      "offset": [
        15877,
        15903
      ],
      "op": "REVERT",
      "path": "1"
    },
    "9606": {
      "fn": "CultureCoin.setMaxXOut",
      "offset": [
        15877,
        15903
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "9607": {
      "fn": "CultureCoin.setMaxXOut",
      "offset": [
        15913,
        15920
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 134,
      "value": "0xE4"
    },
    "9609": {
      "fn": "CultureCoin.setMaxXOut",
      "offset": [
        15913,
        15931
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "9610": {
      "fn": "CultureCoin.setMaxXOut",
      "jump": "o",
      "offset": [
        15820,
        15938
      ],
      "op": "JUMP",
      "path": "1"
    },
    "9611": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10456,
        10826
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "9612": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9614": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9616": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9618": {
      "op": "SHL"
    },
    "9619": {
      "op": "SUB"
    },
    "9620": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10587,
        10606
      ],
      "op": "DUP4",
      "path": "15",
      "statement": 135
    },
    "9621": {
      "branch": 223,
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10587,
        10606
      ],
      "op": "AND",
      "path": "15"
    },
    "9622": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10579,
        10647
      ],
      "op": "PUSH3",
      "path": "15",
      "value": "0x25EF"
    },
    "9626": {
      "branch": 223,
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10579,
        10647
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "9627": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10579,
        10647
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "9629": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10579,
        10647
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "9630": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9634": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9636": {
      "op": "SHL"
    },
    "9637": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10579,
        10647
      ],
      "op": "DUP2",
      "path": "15"
    },
    "9638": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10579,
        10647
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "9639": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9641": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10579,
        10647
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "9643": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10579,
        10647
      ],
      "op": "DUP3",
      "path": "15"
    },
    "9644": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10579,
        10647
      ],
      "op": "ADD",
      "path": "15"
    },
    "9645": {
      "op": "MSTORE"
    },
    "9646": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9648": {
      "op": "DUP1"
    },
    "9649": {
      "op": "DUP3"
    },
    "9650": {
      "op": "ADD"
    },
    "9651": {
      "op": "MSTORE"
    },
    "9652": {
      "op": "PUSH32",
      "value": "0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
    },
    "9685": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9687": {
      "op": "DUP3"
    },
    "9688": {
      "op": "ADD"
    },
    "9689": {
      "op": "MSTORE"
    },
    "9690": {
      "op": "PUSH4",
      "value": "0x72657373"
    },
    "9695": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9697": {
      "op": "SHL"
    },
    "9698": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9700": {
      "op": "DUP3"
    },
    "9701": {
      "op": "ADD"
    },
    "9702": {
      "op": "MSTORE"
    },
    "9703": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "9705": {
      "op": "ADD"
    },
    "9706": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10579,
        10647
      ],
      "op": "PUSH3",
      "path": "15",
      "value": "0xC98"
    },
    "9710": {
      "op": "JUMP"
    },
    "9711": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10579,
        10647
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "9712": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9714": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9716": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9718": {
      "op": "SHL"
    },
    "9719": {
      "op": "SUB"
    },
    "9720": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10665,
        10686
      ],
      "op": "DUP3",
      "path": "15",
      "statement": 136
    },
    "9721": {
      "branch": 224,
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10665,
        10686
      ],
      "op": "AND",
      "path": "15"
    },
    "9722": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10657,
        10725
      ],
      "op": "PUSH3",
      "path": "15",
      "value": "0x2652"
    },
    "9726": {
      "branch": 224,
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10657,
        10725
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "9727": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10657,
        10725
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "9729": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10657,
        10725
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "9730": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9734": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9736": {
      "op": "SHL"
    },
    "9737": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10657,
        10725
      ],
      "op": "DUP2",
      "path": "15"
    },
    "9738": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10657,
        10725
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "9739": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9741": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10657,
        10725
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "9743": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10657,
        10725
      ],
      "op": "DUP3",
      "path": "15"
    },
    "9744": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10657,
        10725
      ],
      "op": "ADD",
      "path": "15"
    },
    "9745": {
      "op": "MSTORE"
    },
    "9746": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "9748": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9750": {
      "op": "DUP3"
    },
    "9751": {
      "op": "ADD"
    },
    "9752": {
      "op": "MSTORE"
    },
    "9753": {
      "op": "PUSH32",
      "value": "0x45524332303A20617070726F766520746F20746865207A65726F206164647265"
    },
    "9786": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9788": {
      "op": "DUP3"
    },
    "9789": {
      "op": "ADD"
    },
    "9790": {
      "op": "MSTORE"
    },
    "9791": {
      "op": "PUSH2",
      "value": "0x7373"
    },
    "9794": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "9796": {
      "op": "SHL"
    },
    "9797": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9799": {
      "op": "DUP3"
    },
    "9800": {
      "op": "ADD"
    },
    "9801": {
      "op": "MSTORE"
    },
    "9802": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "9804": {
      "op": "ADD"
    },
    "9805": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10657,
        10725
      ],
      "op": "PUSH3",
      "path": "15",
      "value": "0xC98"
    },
    "9809": {
      "op": "JUMP"
    },
    "9810": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10657,
        10725
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "9811": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9813": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9815": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9817": {
      "op": "SHL"
    },
    "9818": {
      "op": "SUB"
    },
    "9819": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10736,
        10754
      ],
      "op": "DUP4",
      "path": "15",
      "statement": 137
    },
    "9820": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10736,
        10754
      ],
      "op": "DUP2",
      "path": "15"
    },
    "9821": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10736,
        10754
      ],
      "op": "AND",
      "path": "15"
    },
    "9822": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10736,
        10754
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "9824": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10736,
        10754
      ],
      "op": "DUP2",
      "path": "15"
    },
    "9825": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10736,
        10754
      ],
      "op": "DUP2",
      "path": "15"
    },
    "9826": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10736,
        10754
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "9827": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10736,
        10747
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x34"
    },
    "9829": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10736,
        10754
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "9831": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10736,
        10754
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9832": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10736,
        10754
      ],
      "op": "DUP2",
      "path": "15"
    },
    "9833": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10736,
        10754
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "9834": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10736,
        10754
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "9836": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10736,
        10754
      ],
      "op": "DUP1",
      "path": "15"
    },
    "9837": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10736,
        10754
      ],
      "op": "DUP4",
      "path": "15"
    },
    "9838": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10736,
        10754
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "9839": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10736,
        10763
      ],
      "op": "SWAP5",
      "path": "15"
    },
    "9840": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10736,
        10763
      ],
      "op": "DUP8",
      "path": "15"
    },
    "9841": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10736,
        10763
      ],
      "op": "AND",
      "path": "15"
    },
    "9842": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10736,
        10763
      ],
      "op": "DUP1",
      "path": "15"
    },
    "9843": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10736,
        10763
      ],
      "op": "DUP5",
      "path": "15"
    },
    "9844": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10736,
        10763
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "9845": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10736,
        10763
      ],
      "op": "SWAP5",
      "path": "15"
    },
    "9846": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10736,
        10763
      ],
      "op": "DUP3",
      "path": "15"
    },
    "9847": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10736,
        10763
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "9848": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10736,
        10763
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "9849": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10736,
        10763
      ],
      "op": "DUP3",
      "path": "15"
    },
    "9850": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10736,
        10763
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9851": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10736,
        10763
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "9852": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10736,
        10772
      ],
      "op": "DUP6",
      "path": "15"
    },
    "9853": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10736,
        10772
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9854": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10736,
        10772
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "9855": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10787,
        10819
      ],
      "op": "SWAP1",
      "path": "15",
      "statement": 138
    },
    "9856": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10787,
        10819
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "9857": {
      "op": "DUP5"
    },
    "9858": {
      "op": "DUP2"
    },
    "9859": {
      "op": "MSTORE"
    },
    "9860": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10787,
        10819
      ],
      "op": "PUSH32",
      "path": "15",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "9893": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10787,
        10819
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "9894": {
      "op": "ADD"
    },
    "9895": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10787,
        10819
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "9897": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10787,
        10819
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "9898": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10787,
        10819
      ],
      "op": "DUP1",
      "path": "15"
    },
    "9899": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10787,
        10819
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "9900": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10787,
        10819
      ],
      "op": "SUB",
      "path": "15"
    },
    "9901": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10787,
        10819
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9902": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10787,
        10819
      ],
      "op": "LOG3",
      "path": "15"
    },
    "9903": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10456,
        10826
      ],
      "op": "POP",
      "path": "15"
    },
    "9904": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10456,
        10826
      ],
      "op": "POP",
      "path": "15"
    },
    "9905": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10456,
        10826
      ],
      "op": "POP",
      "path": "15"
    },
    "9906": {
      "fn": "ERC20Upgradeable._approve",
      "jump": "o",
      "offset": [
        10456,
        10826
      ],
      "op": "JUMP",
      "path": "15"
    },
    "9907": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11107,
        11548
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "9908": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11237,
        11261
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "9910": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11264,
        11289
      ],
      "op": "PUSH3",
      "path": "15",
      "value": "0x26C1"
    },
    "9914": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11274,
        11279
      ],
      "op": "DUP5",
      "path": "15"
    },
    "9915": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11281,
        11288
      ],
      "op": "DUP5",
      "path": "15"
    },
    "9916": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11264,
        11273
      ],
      "op": "PUSH3",
      "path": "15",
      "value": "0x2164"
    },
    "9920": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "jump": "i",
      "offset": [
        11264,
        11289
      ],
      "op": "JUMP",
      "path": "15"
    },
    "9921": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11264,
        11289
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "9922": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11237,
        11289
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9923": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11237,
        11289
      ],
      "op": "POP",
      "path": "15"
    },
    "9924": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9926": {
      "op": "NOT"
    },
    "9927": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11303,
        11319
      ],
      "op": "DUP2",
      "path": "15"
    },
    "9928": {
      "branch": 225,
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11303,
        11340
      ],
      "op": "EQ",
      "path": "15"
    },
    "9929": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11299,
        11542
      ],
      "op": "PUSH3",
      "path": "15",
      "value": "0x272E"
    },
    "9933": {
      "branch": 225,
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11299,
        11542
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "9934": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11384,
        11390
      ],
      "op": "DUP2",
      "path": "15",
      "statement": 139
    },
    "9935": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11364,
        11380
      ],
      "op": "DUP2",
      "path": "15"
    },
    "9936": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11364,
        11390
      ],
      "op": "LT",
      "path": "15"
    },
    "9937": {
      "branch": 226,
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11364,
        11390
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "9938": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11356,
        11424
      ],
      "op": "PUSH3",
      "path": "15",
      "value": "0x271F"
    },
    "9942": {
      "branch": 226,
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11356,
        11424
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "9943": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11356,
        11424
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "9945": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11356,
        11424
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "9946": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9950": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9952": {
      "op": "SHL"
    },
    "9953": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11356,
        11424
      ],
      "op": "DUP2",
      "path": "15"
    },
    "9954": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11356,
        11424
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "9955": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9957": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11356,
        11424
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "9959": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11356,
        11424
      ],
      "op": "DUP3",
      "path": "15"
    },
    "9960": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11356,
        11424
      ],
      "op": "ADD",
      "path": "15"
    },
    "9961": {
      "op": "MSTORE"
    },
    "9962": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "9964": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9966": {
      "op": "DUP3"
    },
    "9967": {
      "op": "ADD"
    },
    "9968": {
      "op": "MSTORE"
    },
    "9969": {
      "op": "PUSH32",
      "value": "0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000"
    },
    "10002": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "10004": {
      "op": "DUP3"
    },
    "10005": {
      "op": "ADD"
    },
    "10006": {
      "op": "MSTORE"
    },
    "10007": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "10009": {
      "op": "ADD"
    },
    "10010": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11356,
        11424
      ],
      "op": "PUSH3",
      "path": "15",
      "value": "0xC98"
    },
    "10014": {
      "op": "JUMP"
    },
    "10015": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11356,
        11424
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "10016": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11466,
        11517
      ],
      "op": "PUSH3",
      "path": "15",
      "statement": 140,
      "value": "0x272E"
    },
    "10020": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11475,
        11480
      ],
      "op": "DUP5",
      "path": "15"
    },
    "10021": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11482,
        11489
      ],
      "op": "DUP5",
      "path": "15"
    },
    "10022": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11510,
        11516
      ],
      "op": "DUP5",
      "path": "15"
    },
    "10023": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11491,
        11507
      ],
      "op": "DUP5",
      "path": "15"
    },
    "10024": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11491,
        11516
      ],
      "op": "SUB",
      "path": "15"
    },
    "10025": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11466,
        11474
      ],
      "op": "PUSH3",
      "path": "15",
      "value": "0x258B"
    },
    "10029": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "jump": "i",
      "offset": [
        11466,
        11517
      ],
      "op": "JUMP",
      "path": "15"
    },
    "10030": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11466,
        11517
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "10031": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11227,
        11548
      ],
      "op": "POP",
      "path": "15"
    },
    "10032": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11107,
        11548
      ],
      "op": "POP",
      "path": "15"
    },
    "10033": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11107,
        11548
      ],
      "op": "POP",
      "path": "15"
    },
    "10034": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11107,
        11548
      ],
      "op": "POP",
      "path": "15"
    },
    "10035": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "jump": "o",
      "offset": [
        11107,
        11548
      ],
      "op": "JUMP",
      "path": "15"
    },
    "10036": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7821,
        8472
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "10037": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10039": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10041": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10043": {
      "op": "SHL"
    },
    "10044": {
      "op": "SUB"
    },
    "10045": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7947,
        7965
      ],
      "op": "DUP4",
      "path": "15",
      "statement": 141
    },
    "10046": {
      "branch": 227,
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7947,
        7965
      ],
      "op": "AND",
      "path": "15"
    },
    "10047": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7939,
        8007
      ],
      "op": "PUSH3",
      "path": "15",
      "value": "0x279A"
    },
    "10051": {
      "branch": 227,
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7939,
        8007
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "10052": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7939,
        8007
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "10054": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7939,
        8007
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "10055": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10059": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10061": {
      "op": "SHL"
    },
    "10062": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7939,
        8007
      ],
      "op": "DUP2",
      "path": "15"
    },
    "10063": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7939,
        8007
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "10064": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10066": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7939,
        8007
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "10068": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7939,
        8007
      ],
      "op": "DUP3",
      "path": "15"
    },
    "10069": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7939,
        8007
      ],
      "op": "ADD",
      "path": "15"
    },
    "10070": {
      "op": "MSTORE"
    },
    "10071": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "10073": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10075": {
      "op": "DUP3"
    },
    "10076": {
      "op": "ADD"
    },
    "10077": {
      "op": "MSTORE"
    },
    "10078": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E736665722066726F6D20746865207A65726F206164"
    },
    "10111": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "10113": {
      "op": "DUP3"
    },
    "10114": {
      "op": "ADD"
    },
    "10115": {
      "op": "MSTORE"
    },
    "10116": {
      "op": "PUSH5",
      "value": "0x6472657373"
    },
    "10122": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "10124": {
      "op": "SHL"
    },
    "10125": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "10127": {
      "op": "DUP3"
    },
    "10128": {
      "op": "ADD"
    },
    "10129": {
      "op": "MSTORE"
    },
    "10130": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "10132": {
      "op": "ADD"
    },
    "10133": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7939,
        8007
      ],
      "op": "PUSH3",
      "path": "15",
      "value": "0xC98"
    },
    "10137": {
      "op": "JUMP"
    },
    "10138": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7939,
        8007
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "10139": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10141": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10143": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10145": {
      "op": "SHL"
    },
    "10146": {
      "op": "SUB"
    },
    "10147": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8025,
        8041
      ],
      "op": "DUP3",
      "path": "15",
      "statement": 142
    },
    "10148": {
      "branch": 228,
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8025,
        8041
      ],
      "op": "AND",
      "path": "15"
    },
    "10149": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8017,
        8081
      ],
      "op": "PUSH3",
      "path": "15",
      "value": "0x27FE"
    },
    "10153": {
      "branch": 228,
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8017,
        8081
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "10154": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8017,
        8081
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "10156": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8017,
        8081
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "10157": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10161": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10163": {
      "op": "SHL"
    },
    "10164": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8017,
        8081
      ],
      "op": "DUP2",
      "path": "15"
    },
    "10165": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8017,
        8081
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "10166": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10168": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8017,
        8081
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "10170": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8017,
        8081
      ],
      "op": "DUP3",
      "path": "15"
    },
    "10171": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8017,
        8081
      ],
      "op": "ADD",
      "path": "15"
    },
    "10172": {
      "op": "MSTORE"
    },
    "10173": {
      "op": "PUSH1",
      "value": "0x23"
    },
    "10175": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10177": {
      "op": "DUP3"
    },
    "10178": {
      "op": "ADD"
    },
    "10179": {
      "op": "MSTORE"
    },
    "10180": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E7366657220746F20746865207A65726F2061646472"
    },
    "10213": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "10215": {
      "op": "DUP3"
    },
    "10216": {
      "op": "ADD"
    },
    "10217": {
      "op": "MSTORE"
    },
    "10218": {
      "op": "PUSH3",
      "value": "0x657373"
    },
    "10222": {
      "op": "PUSH1",
      "value": "0xE8"
    },
    "10224": {
      "op": "SHL"
    },
    "10225": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "10227": {
      "op": "DUP3"
    },
    "10228": {
      "op": "ADD"
    },
    "10229": {
      "op": "MSTORE"
    },
    "10230": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "10232": {
      "op": "ADD"
    },
    "10233": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8017,
        8081
      ],
      "op": "PUSH3",
      "path": "15",
      "value": "0xC98"
    },
    "10237": {
      "op": "JUMP"
    },
    "10238": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8017,
        8081
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "10239": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10241": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10243": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10245": {
      "op": "SHL"
    },
    "10246": {
      "op": "SUB"
    },
    "10247": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8163,
        8178
      ],
      "op": "DUP4",
      "path": "15"
    },
    "10248": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8163,
        8178
      ],
      "op": "AND",
      "path": "15"
    },
    "10249": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8141,
        8160
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "10251": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8163,
        8178
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "10252": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8163,
        8178
      ],
      "op": "DUP2",
      "path": "15"
    },
    "10253": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8163,
        8178
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "10254": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8163,
        8172
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x33"
    },
    "10256": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8163,
        8178
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "10258": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8163,
        8178
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "10259": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8163,
        8178
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "10261": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8163,
        8178
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "10262": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8163,
        8178
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "10263": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8163,
        8178
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "10264": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8196,
        8217
      ],
      "op": "DUP2",
      "path": "15",
      "statement": 143
    },
    "10265": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8196,
        8217
      ],
      "op": "DUP2",
      "path": "15"
    },
    "10266": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8196,
        8217
      ],
      "op": "LT",
      "path": "15"
    },
    "10267": {
      "branch": 229,
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8196,
        8217
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "10268": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8188,
        8260
      ],
      "op": "PUSH3",
      "path": "15",
      "value": "0x2878"
    },
    "10272": {
      "branch": 229,
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8188,
        8260
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "10273": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8188,
        8260
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "10275": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8188,
        8260
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "10276": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10280": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10282": {
      "op": "SHL"
    },
    "10283": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8188,
        8260
      ],
      "op": "DUP2",
      "path": "15"
    },
    "10284": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8188,
        8260
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "10285": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10287": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8188,
        8260
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "10289": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8188,
        8260
      ],
      "op": "DUP3",
      "path": "15"
    },
    "10290": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8188,
        8260
      ],
      "op": "ADD",
      "path": "15"
    },
    "10291": {
      "op": "MSTORE"
    },
    "10292": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "10294": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10296": {
      "op": "DUP3"
    },
    "10297": {
      "op": "ADD"
    },
    "10298": {
      "op": "MSTORE"
    },
    "10299": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E7366657220616D6F756E7420657863656564732062"
    },
    "10332": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "10334": {
      "op": "DUP3"
    },
    "10335": {
      "op": "ADD"
    },
    "10336": {
      "op": "MSTORE"
    },
    "10337": {
      "op": "PUSH6",
      "value": "0x616C616E6365"
    },
    "10344": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "10346": {
      "op": "SHL"
    },
    "10347": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "10349": {
      "op": "DUP3"
    },
    "10350": {
      "op": "ADD"
    },
    "10351": {
      "op": "MSTORE"
    },
    "10352": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "10354": {
      "op": "ADD"
    },
    "10355": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8188,
        8260
      ],
      "op": "PUSH3",
      "path": "15",
      "value": "0xC98"
    },
    "10359": {
      "op": "JUMP"
    },
    "10360": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8188,
        8260
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "10361": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10363": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10365": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10367": {
      "op": "SHL"
    },
    "10368": {
      "op": "SUB"
    },
    "10369": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8294,
        8309
      ],
      "op": "DUP1",
      "path": "15",
      "statement": 144
    },
    "10370": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8294,
        8309
      ],
      "op": "DUP6",
      "path": "15"
    },
    "10371": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8294,
        8309
      ],
      "op": "AND",
      "path": "15"
    },
    "10372": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8294,
        8309
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "10374": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8294,
        8309
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "10375": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8294,
        8309
      ],
      "op": "DUP2",
      "path": "15"
    },
    "10376": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8294,
        8309
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "10377": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8294,
        8303
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x33"
    },
    "10379": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8294,
        8309
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "10381": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8294,
        8309
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "10382": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8294,
        8309
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "10384": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8294,
        8309
      ],
      "op": "DUP1",
      "path": "15"
    },
    "10385": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8294,
        8309
      ],
      "op": "DUP3",
      "path": "15"
    },
    "10386": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8294,
        8309
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "10387": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8312,
        8332
      ],
      "op": "DUP6",
      "path": "15"
    },
    "10388": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8312,
        8332
      ],
      "op": "DUP6",
      "path": "15"
    },
    "10389": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8312,
        8332
      ],
      "op": "SUB",
      "path": "15"
    },
    "10390": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8294,
        8332
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "10391": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8294,
        8332
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "10392": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8352,
        8365
      ],
      "op": "SWAP2",
      "path": "15",
      "statement": 145
    },
    "10393": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8352,
        8365
      ],
      "op": "DUP6",
      "path": "15"
    },
    "10394": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8352,
        8365
      ],
      "op": "AND",
      "path": "15"
    },
    "10395": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8352,
        8365
      ],
      "op": "DUP2",
      "path": "15"
    },
    "10396": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8352,
        8365
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "10397": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8352,
        8365
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "10398": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8352,
        8365
      ],
      "op": "DUP2",
      "path": "15"
    },
    "10399": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8352,
        8365
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "10400": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8352,
        8375
      ],
      "op": "DUP1",
      "path": "15"
    },
    "10401": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8352,
        8375
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "10402": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8326,
        8332
      ],
      "op": "DUP5",
      "path": "15"
    },
    "10403": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8326,
        8332
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "10404": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8294,
        8309
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "10405": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8352,
        8375
      ],
      "op": "PUSH3",
      "path": "15",
      "value": "0x28B1"
    },
    "10409": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8352,
        8375
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "10410": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8326,
        8332
      ],
      "op": "DUP5",
      "path": "15"
    },
    "10411": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8326,
        8332
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "10412": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8352,
        8375
      ],
      "op": "PUSH3",
      "path": "15",
      "value": "0x37F7"
    },
    "10416": {
      "fn": "ERC20Upgradeable._transfer",
      "jump": "i",
      "offset": [
        8352,
        8375
      ],
      "op": "JUMP",
      "path": "15"
    },
    "10417": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8352,
        8375
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "10418": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8352,
        8375
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "10419": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8352,
        8375
      ],
      "op": "POP",
      "path": "15"
    },
    "10420": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8352,
        8375
      ],
      "op": "POP",
      "path": "15"
    },
    "10421": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8352,
        8375
      ],
      "op": "DUP2",
      "path": "15"
    },
    "10422": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8352,
        8375
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "10423": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8352,
        8375
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "10424": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8352,
        8375
      ],
      "op": "POP",
      "path": "15"
    },
    "10425": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8406,
        8408
      ],
      "op": "DUP3",
      "path": "15",
      "statement": 146
    },
    "10426": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10428": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10430": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10432": {
      "op": "SHL"
    },
    "10433": {
      "op": "SUB"
    },
    "10434": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8391,
        8417
      ],
      "op": "AND",
      "path": "15"
    },
    "10435": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8400,
        8404
      ],
      "op": "DUP5",
      "path": "15"
    },
    "10436": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10438": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10440": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10442": {
      "op": "SHL"
    },
    "10443": {
      "op": "SUB"
    },
    "10444": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8391,
        8417
      ],
      "op": "AND",
      "path": "15"
    },
    "10445": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10447": {
      "op": "DUP1"
    },
    "10448": {
      "op": "MLOAD"
    },
    "10449": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10451": {
      "op": "PUSH3",
      "value": "0x56E0"
    },
    "10455": {
      "op": "DUP4"
    },
    "10456": {
      "op": "CODECOPY"
    },
    "10457": {
      "op": "DUP2"
    },
    "10458": {
      "op": "MLOAD"
    },
    "10459": {
      "op": "SWAP2"
    },
    "10460": {
      "op": "MSTORE"
    },
    "10461": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8410,
        8416
      ],
      "op": "DUP5",
      "path": "15"
    },
    "10462": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8391,
        8417
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "10464": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8391,
        8417
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "10465": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8391,
        8417
      ],
      "op": "PUSH3",
      "path": "15",
      "value": "0x28ED"
    },
    "10469": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8391,
        8417
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "10470": {
      "op": "DUP2"
    },
    "10471": {
      "op": "MSTORE"
    },
    "10472": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10474": {
      "op": "ADD"
    },
    "10475": {
      "op": "SWAP1"
    },
    "10476": {
      "op": "JUMP"
    },
    "10477": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8391,
        8417
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "10478": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8391,
        8417
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "10480": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8391,
        8417
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "10481": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8391,
        8417
      ],
      "op": "DUP1",
      "path": "15"
    },
    "10482": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8391,
        8417
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "10483": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8391,
        8417
      ],
      "op": "SUB",
      "path": "15"
    },
    "10484": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8391,
        8417
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "10485": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8391,
        8417
      ],
      "op": "LOG3",
      "path": "15"
    },
    "10486": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8428,
        8465
      ],
      "op": "PUSH3",
      "path": "15",
      "statement": 147,
      "value": "0x272E"
    },
    "10490": {
      "fn": "CultureCoin.initialize",
      "offset": [
        2733,
        4670
      ],
      "op": "JUMP",
      "path": "1"
    },
    "10491": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9457,
        10033
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "10492": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10494": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10496": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10498": {
      "op": "SHL"
    },
    "10499": {
      "op": "SUB"
    },
    "10500": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9540,
        9561
      ],
      "op": "DUP3",
      "path": "15",
      "statement": 148
    },
    "10501": {
      "branch": 230,
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9540,
        9561
      ],
      "op": "AND",
      "path": "15"
    },
    "10502": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9532,
        9599
      ],
      "op": "PUSH3",
      "path": "15",
      "value": "0x295D"
    },
    "10506": {
      "branch": 230,
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9532,
        9599
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "10507": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9532,
        9599
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "10509": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9532,
        9599
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "10510": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10514": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10516": {
      "op": "SHL"
    },
    "10517": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9532,
        9599
      ],
      "op": "DUP2",
      "path": "15"
    },
    "10518": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9532,
        9599
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "10519": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10521": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9532,
        9599
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "10523": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9532,
        9599
      ],
      "op": "DUP3",
      "path": "15"
    },
    "10524": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9532,
        9599
      ],
      "op": "ADD",
      "path": "15"
    },
    "10525": {
      "op": "MSTORE"
    },
    "10526": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "10528": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10530": {
      "op": "DUP3"
    },
    "10531": {
      "op": "ADD"
    },
    "10532": {
      "op": "MSTORE"
    },
    "10533": {
      "op": "PUSH32",
      "value": "0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573"
    },
    "10566": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "10568": {
      "op": "DUP3"
    },
    "10569": {
      "op": "ADD"
    },
    "10570": {
      "op": "MSTORE"
    },
    "10571": {
      "op": "PUSH1",
      "value": "0x73"
    },
    "10573": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "10575": {
      "op": "SHL"
    },
    "10576": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "10578": {
      "op": "DUP3"
    },
    "10579": {
      "op": "ADD"
    },
    "10580": {
      "op": "MSTORE"
    },
    "10581": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "10583": {
      "op": "ADD"
    },
    "10584": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9532,
        9599
      ],
      "op": "PUSH3",
      "path": "15",
      "value": "0xC98"
    },
    "10588": {
      "op": "JUMP"
    },
    "10589": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9532,
        9599
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "10590": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10592": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10594": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10596": {
      "op": "SHL"
    },
    "10597": {
      "op": "SUB"
    },
    "10598": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9695,
        9713
      ],
      "op": "DUP3",
      "path": "15"
    },
    "10599": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9695,
        9713
      ],
      "op": "AND",
      "path": "15"
    },
    "10600": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9670,
        9692
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "10602": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9695,
        9713
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "10603": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9695,
        9713
      ],
      "op": "DUP2",
      "path": "15"
    },
    "10604": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9695,
        9713
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "10605": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9695,
        9704
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x33"
    },
    "10607": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9695,
        9713
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "10609": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9695,
        9713
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "10610": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9695,
        9713
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "10612": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9695,
        9713
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "10613": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9695,
        9713
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "10614": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9695,
        9713
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "10615": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9731,
        9755
      ],
      "op": "DUP2",
      "path": "15",
      "statement": 149
    },
    "10616": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9731,
        9755
      ],
      "op": "DUP2",
      "path": "15"
    },
    "10617": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9731,
        9755
      ],
      "op": "LT",
      "path": "15"
    },
    "10618": {
      "branch": 231,
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9731,
        9755
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "10619": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9723,
        9794
      ],
      "op": "PUSH3",
      "path": "15",
      "value": "0x29D3"
    },
    "10623": {
      "branch": 231,
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9723,
        9794
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "10624": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9723,
        9794
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "10626": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9723,
        9794
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "10627": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10631": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10633": {
      "op": "SHL"
    },
    "10634": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9723,
        9794
      ],
      "op": "DUP2",
      "path": "15"
    },
    "10635": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9723,
        9794
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "10636": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10638": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9723,
        9794
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "10640": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9723,
        9794
      ],
      "op": "DUP3",
      "path": "15"
    },
    "10641": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9723,
        9794
      ],
      "op": "ADD",
      "path": "15"
    },
    "10642": {
      "op": "MSTORE"
    },
    "10643": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "10645": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10647": {
      "op": "DUP3"
    },
    "10648": {
      "op": "ADD"
    },
    "10649": {
      "op": "MSTORE"
    },
    "10650": {
      "op": "PUSH32",
      "value": "0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E"
    },
    "10683": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "10685": {
      "op": "DUP3"
    },
    "10686": {
      "op": "ADD"
    },
    "10687": {
      "op": "MSTORE"
    },
    "10688": {
      "op": "PUSH2",
      "value": "0x6365"
    },
    "10691": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "10693": {
      "op": "SHL"
    },
    "10694": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "10696": {
      "op": "DUP3"
    },
    "10697": {
      "op": "ADD"
    },
    "10698": {
      "op": "MSTORE"
    },
    "10699": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "10701": {
      "op": "ADD"
    },
    "10702": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9723,
        9794
      ],
      "op": "PUSH3",
      "path": "15",
      "value": "0xC98"
    },
    "10706": {
      "op": "JUMP"
    },
    "10707": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9723,
        9794
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "10708": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10710": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10712": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10714": {
      "op": "SHL"
    },
    "10715": {
      "op": "SUB"
    },
    "10716": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9828,
        9846
      ],
      "op": "DUP4",
      "path": "15",
      "statement": 150
    },
    "10717": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9828,
        9846
      ],
      "op": "AND",
      "path": "15"
    },
    "10718": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9828,
        9846
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "10720": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9828,
        9846
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "10721": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9828,
        9846
      ],
      "op": "DUP2",
      "path": "15"
    },
    "10722": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9828,
        9846
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "10723": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9828,
        9837
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x33"
    },
    "10725": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9828,
        9846
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "10727": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9828,
        9846
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "10728": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9828,
        9846
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "10730": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9828,
        9846
      ],
      "op": "DUP2",
      "path": "15"
    },
    "10731": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9828,
        9846
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "10732": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9849,
        9872
      ],
      "op": "DUP4",
      "path": "15"
    },
    "10733": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9849,
        9872
      ],
      "op": "DUP4",
      "path": "15"
    },
    "10734": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9849,
        9872
      ],
      "op": "SUB",
      "path": "15"
    },
    "10735": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9828,
        9872
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "10736": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9828,
        9872
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "10737": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9892,
        9904
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 151,
      "value": "0x35"
    },
    "10739": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9892,
        9914
      ],
      "op": "DUP1",
      "path": "15"
    },
    "10740": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9892,
        9914
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "10741": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9866,
        9872
      ],
      "op": "DUP5",
      "path": "15"
    },
    "10742": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9866,
        9872
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "10743": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9828,
        9846
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "10744": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9892,
        9914
      ],
      "op": "PUSH3",
      "path": "15",
      "value": "0x2A04"
    },
    "10748": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9892,
        9914
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "10749": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9866,
        9872
      ],
      "op": "DUP5",
      "path": "15"
    },
    "10750": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9866,
        9872
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "10751": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9892,
        9914
      ],
      "op": "PUSH3",
      "path": "15",
      "value": "0x3863"
    },
    "10755": {
      "fn": "ERC20Upgradeable._burn",
      "jump": "i",
      "offset": [
        9892,
        9914
      ],
      "op": "JUMP",
      "path": "15"
    },
    "10756": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9892,
        9914
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "10757": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9892,
        9914
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "10758": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9892,
        9914
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "10759": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9892,
        9914
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "10760": {
      "op": "POP"
    },
    "10761": {
      "op": "POP"
    },
    "10762": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9930,
        9967
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 152,
      "value": "0x40"
    },
    "10764": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9930,
        9967
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "10765": {
      "op": "DUP3"
    },
    "10766": {
      "op": "DUP2"
    },
    "10767": {
      "op": "MSTORE"
    },
    "10768": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9956,
        9957
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "10770": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9956,
        9957
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "10771": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10773": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10775": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10777": {
      "op": "SHL"
    },
    "10778": {
      "op": "SUB"
    },
    "10779": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9930,
        9967
      ],
      "op": "DUP6",
      "path": "15"
    },
    "10780": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9930,
        9967
      ],
      "op": "AND",
      "path": "15"
    },
    "10781": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9930,
        9967
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "10782": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10784": {
      "op": "DUP1"
    },
    "10785": {
      "op": "MLOAD"
    },
    "10786": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10788": {
      "op": "PUSH3",
      "value": "0x56E0"
    },
    "10792": {
      "op": "DUP4"
    },
    "10793": {
      "op": "CODECOPY"
    },
    "10794": {
      "op": "DUP2"
    },
    "10795": {
      "op": "MLOAD"
    },
    "10796": {
      "op": "SWAP2"
    },
    "10797": {
      "op": "MSTORE"
    },
    "10798": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9930,
        9967
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "10799": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10801": {
      "op": "ADD"
    },
    "10802": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9930,
        9967
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "10804": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9930,
        9967
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "10805": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9930,
        9967
      ],
      "op": "DUP1",
      "path": "15"
    },
    "10806": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9930,
        9967
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "10807": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9930,
        9967
      ],
      "op": "SUB",
      "path": "15"
    },
    "10808": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9930,
        9967
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "10809": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9930,
        9967
      ],
      "op": "LOG3",
      "path": "15"
    },
    "10810": {
      "offset": [
        2080,
        2717
      ],
      "op": "POP",
      "path": "13"
    },
    "10811": {
      "fn": "CultureCoin.initialize",
      "offset": [
        2733,
        4670
      ],
      "op": "POP",
      "path": "1"
    },
    "10812": {
      "fn": "CultureCoin.initialize",
      "offset": [
        2733,
        4670
      ],
      "op": "POP",
      "path": "1"
    },
    "10813": {
      "fn": "CultureCoin.initialize",
      "jump": "o",
      "offset": [
        2733,
        4670
      ],
      "op": "JUMP",
      "path": "1"
    },
    "10814": {
      "fn": "CultureCoin.clownsearch",
      "offset": [
        35795,
        35880
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "10815": {
      "fn": "CultureCoin.clownsearch",
      "offset": [
        35834,
        35841
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "10817": {
      "fn": "CultureCoin.clownsearch",
      "offset": [
        35853,
        35873
      ],
      "op": "PUSH3",
      "path": "1",
      "statement": 153,
      "value": "0x2A4E"
    },
    "10821": {
      "fn": "CultureCoin.clownsearch",
      "offset": [
        35865,
        35872
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x43C"
    },
    "10825": {
      "fn": "CultureCoin.clownsearch",
      "offset": [
        35865,
        35870
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0xC2C"
    },
    "10829": {
      "fn": "CultureCoin.clownsearch",
      "jump": "i",
      "offset": [
        35865,
        35872
      ],
      "op": "JUMP",
      "path": "1"
    },
    "10830": {
      "fn": "CultureCoin.clownsearch",
      "offset": [
        35853,
        35873
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "10831": {
      "fn": "CultureCoin.clownsearch",
      "offset": [
        35853,
        35873
      ],
      "op": "POP",
      "path": "1"
    },
    "10832": {
      "fn": "CultureCoin.clownsearch",
      "offset": [
        35795,
        35880
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "10833": {
      "fn": "CultureCoin.clownsearch",
      "jump": "o",
      "offset": [
        35795,
        35880
      ],
      "op": "JUMP",
      "path": "1"
    },
    "10834": {
      "fn": "Stakeable._stake",
      "offset": [
        3685,
        4861
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "10835": {
      "fn": "Stakeable._stake",
      "offset": [
        3809,
        3810
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 154,
      "value": "0x0"
    },
    "10837": {
      "fn": "Stakeable._stake",
      "offset": [
        3799,
        3806
      ],
      "op": "DUP2",
      "path": "5"
    },
    "10838": {
      "branch": 237,
      "fn": "Stakeable._stake",
      "offset": [
        3799,
        3810
      ],
      "op": "GT",
      "path": "5"
    },
    "10839": {
      "fn": "Stakeable._stake",
      "offset": [
        3791,
        3835
      ],
      "op": "PUSH3",
      "path": "5",
      "value": "0x2A9B"
    },
    "10843": {
      "branch": 237,
      "fn": "Stakeable._stake",
      "offset": [
        3791,
        3835
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "10844": {
      "fn": "Stakeable._stake",
      "offset": [
        3791,
        3835
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "10846": {
      "fn": "Stakeable._stake",
      "offset": [
        3791,
        3835
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "10847": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10851": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10853": {
      "op": "SHL"
    },
    "10854": {
      "fn": "Stakeable._stake",
      "offset": [
        3791,
        3835
      ],
      "op": "DUP2",
      "path": "5"
    },
    "10855": {
      "fn": "Stakeable._stake",
      "offset": [
        3791,
        3835
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "10856": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10858": {
      "fn": "Stakeable._stake",
      "offset": [
        3791,
        3835
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "10860": {
      "fn": "Stakeable._stake",
      "offset": [
        3791,
        3835
      ],
      "op": "DUP3",
      "path": "5"
    },
    "10861": {
      "fn": "Stakeable._stake",
      "offset": [
        3791,
        3835
      ],
      "op": "ADD",
      "path": "5"
    },
    "10862": {
      "op": "MSTORE"
    },
    "10863": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "10865": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10867": {
      "op": "DUP3"
    },
    "10868": {
      "op": "ADD"
    },
    "10869": {
      "op": "MSTORE"
    },
    "10870": {
      "op": "PUSH20",
      "value": "0x43616E6E6F74207374616B65206E6F7468696E67"
    },
    "10891": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "10893": {
      "op": "SHL"
    },
    "10894": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "10896": {
      "op": "DUP3"
    },
    "10897": {
      "op": "ADD"
    },
    "10898": {
      "op": "MSTORE"
    },
    "10899": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "10901": {
      "op": "ADD"
    },
    "10902": {
      "fn": "Stakeable._stake",
      "offset": [
        3791,
        3835
      ],
      "op": "PUSH3",
      "path": "5",
      "value": "0xC98"
    },
    "10906": {
      "op": "JUMP"
    },
    "10907": {
      "fn": "Stakeable._stake",
      "offset": [
        3791,
        3835
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "10908": {
      "fn": "Stakeable._stake",
      "offset": [
        3974,
        3984
      ],
      "op": "CALLER",
      "path": "5"
    },
    "10909": {
      "fn": "Stakeable._stake",
      "offset": [
        3951,
        3964
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "10911": {
      "fn": "Stakeable._stake",
      "offset": [
        3967,
        3985
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "10912": {
      "fn": "Stakeable._stake",
      "offset": [
        3967,
        3985
      ],
      "op": "DUP2",
      "path": "5"
    },
    "10913": {
      "fn": "Stakeable._stake",
      "offset": [
        3967,
        3985
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "10914": {
      "fn": "Stakeable._stake",
      "offset": [
        3967,
        3973
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x98"
    },
    "10916": {
      "fn": "Stakeable._stake",
      "offset": [
        3967,
        3985
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "10918": {
      "fn": "Stakeable._stake",
      "offset": [
        3967,
        3985
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "10919": {
      "fn": "Stakeable._stake",
      "offset": [
        3967,
        3985
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "10921": {
      "fn": "Stakeable._stake",
      "offset": [
        3967,
        3985
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "10922": {
      "fn": "Stakeable._stake",
      "offset": [
        3967,
        3985
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "10923": {
      "fn": "Stakeable._stake",
      "offset": [
        3967,
        3985
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "10924": {
      "fn": "Stakeable._stake",
      "offset": [
        4102,
        4117
      ],
      "op": "TIMESTAMP",
      "path": "5"
    },
    "10925": {
      "branch": 238,
      "fn": "Stakeable._stake",
      "offset": [
        4211,
        4221
      ],
      "op": "DUP2",
      "path": "5"
    },
    "10926": {
      "fn": "Stakeable._stake",
      "offset": [
        4208,
        4536
      ],
      "op": "PUSH3",
      "path": "5",
      "value": "0x2AC0"
    },
    "10930": {
      "branch": 238,
      "fn": "Stakeable._stake",
      "offset": [
        4208,
        4536
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "10931": {
      "fn": "Stakeable._stake",
      "offset": [
        4498,
        4525
      ],
      "op": "PUSH3",
      "path": "5",
      "statement": 155,
      "value": "0x2ABD"
    },
    "10935": {
      "fn": "Stakeable._stake",
      "offset": [
        4514,
        4524
      ],
      "op": "CALLER",
      "path": "5"
    },
    "10936": {
      "fn": "Stakeable._stake",
      "offset": [
        4498,
        4513
      ],
      "op": "PUSH3",
      "path": "5",
      "value": "0x319E"
    },
    "10940": {
      "fn": "Stakeable._stake",
      "jump": "i",
      "offset": [
        4498,
        4525
      ],
      "op": "JUMP",
      "path": "5"
    },
    "10941": {
      "fn": "Stakeable._stake",
      "offset": [
        4498,
        4525
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "10942": {
      "fn": "Stakeable._stake",
      "offset": [
        4490,
        4525
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "10943": {
      "fn": "Stakeable._stake",
      "offset": [
        4490,
        4525
      ],
      "op": "POP",
      "path": "5"
    },
    "10944": {
      "fn": "Stakeable._stake",
      "offset": [
        4208,
        4536
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "10945": {
      "fn": "Stakeable._stake",
      "offset": [
        4663,
        4675
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 156,
      "value": "0x97"
    },
    "10947": {
      "fn": "Stakeable._stake",
      "offset": [
        4676,
        4681
      ],
      "op": "DUP3",
      "path": "5"
    },
    "10948": {
      "fn": "Stakeable._stake",
      "offset": [
        4663,
        4682
      ],
      "op": "DUP2",
      "path": "5"
    },
    "10949": {
      "fn": "Stakeable._stake",
      "offset": [
        4663,
        4682
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "10950": {
      "fn": "Stakeable._stake",
      "offset": [
        4663,
        4682
      ],
      "op": "DUP2",
      "path": "5"
    },
    "10951": {
      "fn": "Stakeable._stake",
      "offset": [
        4663,
        4682
      ],
      "op": "LT",
      "path": "5"
    },
    "10952": {
      "fn": "Stakeable._stake",
      "offset": [
        4663,
        4682
      ],
      "op": "PUSH3",
      "path": "5",
      "value": "0x2AD6"
    },
    "10956": {
      "fn": "Stakeable._stake",
      "offset": [
        4663,
        4682
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "10957": {
      "fn": "Stakeable._stake",
      "offset": [
        4663,
        4682
      ],
      "op": "PUSH3",
      "path": "5",
      "value": "0x2AD6"
    },
    "10961": {
      "fn": "Stakeable._stake",
      "offset": [
        4663,
        4682
      ],
      "op": "PUSH3",
      "path": "5",
      "value": "0x3B86"
    },
    "10965": {
      "fn": "Stakeable._stake",
      "jump": "i",
      "offset": [
        4663,
        4682
      ],
      "op": "JUMP",
      "path": "5"
    },
    "10966": {
      "fn": "Stakeable._stake",
      "offset": [
        4663,
        4682
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "10967": {
      "fn": "Stakeable._stake",
      "offset": [
        4663,
        4682
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "10969": {
      "fn": "Stakeable._stake",
      "offset": [
        4663,
        4682
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "10970": {
      "fn": "Stakeable._stake",
      "offset": [
        4663,
        4682
      ],
      "op": "DUP3",
      "path": "5"
    },
    "10971": {
      "fn": "Stakeable._stake",
      "offset": [
        4663,
        4682
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "10972": {
      "fn": "Stakeable._stake",
      "offset": [
        4663,
        4682
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "10974": {
      "fn": "Stakeable._stake",
      "offset": [
        4663,
        4682
      ],
      "op": "DUP1",
      "path": "5"
    },
    "10975": {
      "fn": "Stakeable._stake",
      "offset": [
        4663,
        4682
      ],
      "op": "DUP4",
      "path": "5"
    },
    "10976": {
      "fn": "Stakeable._stake",
      "offset": [
        4663,
        4682
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "10977": {
      "fn": "Stakeable._stake",
      "offset": [
        4703,
        4742
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "10979": {
      "fn": "Stakeable._stake",
      "offset": [
        4703,
        4742
      ],
      "op": "DUP1",
      "path": "5"
    },
    "10980": {
      "fn": "Stakeable._stake",
      "offset": [
        4703,
        4742
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "10981": {
      "fn": "Stakeable._stake",
      "offset": [
        4703,
        4742
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x80"
    },
    "10983": {
      "fn": "Stakeable._stake",
      "offset": [
        4703,
        4742
      ],
      "op": "DUP2",
      "path": "5"
    },
    "10984": {
      "fn": "Stakeable._stake",
      "offset": [
        4703,
        4742
      ],
      "op": "ADD",
      "path": "5"
    },
    "10985": {
      "fn": "Stakeable._stake",
      "offset": [
        4703,
        4742
      ],
      "op": "DUP3",
      "path": "5"
    },
    "10986": {
      "fn": "Stakeable._stake",
      "offset": [
        4703,
        4742
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "10987": {
      "fn": "Stakeable._stake",
      "offset": [
        4709,
        4719
      ],
      "op": "CALLER",
      "path": "5"
    },
    "10988": {
      "fn": "Stakeable._stake",
      "offset": [
        4703,
        4742
      ],
      "op": "DUP1",
      "path": "5"
    },
    "10989": {
      "fn": "Stakeable._stake",
      "offset": [
        4703,
        4742
      ],
      "op": "DUP3",
      "path": "5"
    },
    "10990": {
      "fn": "Stakeable._stake",
      "offset": [
        4703,
        4742
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "10991": {
      "fn": "Stakeable._stake",
      "offset": [
        4703,
        4742
      ],
      "op": "DUP2",
      "path": "5"
    },
    "10992": {
      "fn": "Stakeable._stake",
      "offset": [
        4703,
        4742
      ],
      "op": "DUP6",
      "path": "5"
    },
    "10993": {
      "fn": "Stakeable._stake",
      "offset": [
        4703,
        4742
      ],
      "op": "ADD",
      "path": "5"
    },
    "10994": {
      "fn": "Stakeable._stake",
      "offset": [
        4703,
        4742
      ],
      "op": "DUP11",
      "path": "5"
    },
    "10995": {
      "fn": "Stakeable._stake",
      "offset": [
        4703,
        4742
      ],
      "op": "DUP2",
      "path": "5"
    },
    "10996": {
      "fn": "Stakeable._stake",
      "offset": [
        4703,
        4742
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "10997": {
      "fn": "Stakeable._stake",
      "offset": [
        4703,
        4742
      ],
      "op": "DUP3",
      "path": "5"
    },
    "10998": {
      "fn": "Stakeable._stake",
      "offset": [
        4703,
        4742
      ],
      "op": "DUP5",
      "path": "5"
    },
    "10999": {
      "fn": "Stakeable._stake",
      "offset": [
        4703,
        4742
      ],
      "op": "ADD",
      "path": "5"
    },
    "11000": {
      "fn": "Stakeable._stake",
      "offset": [
        4703,
        4742
      ],
      "op": "DUP10",
      "path": "5"
    },
    "11001": {
      "fn": "Stakeable._stake",
      "offset": [
        4703,
        4742
      ],
      "op": "DUP2",
      "path": "5"
    },
    "11002": {
      "fn": "Stakeable._stake",
      "offset": [
        4703,
        4742
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "11003": {
      "fn": "Stakeable._stake",
      "offset": [
        4703,
        4742
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x60"
    },
    "11005": {
      "fn": "Stakeable._stake",
      "offset": [
        4703,
        4742
      ],
      "op": "DUP1",
      "path": "5"
    },
    "11006": {
      "fn": "Stakeable._stake",
      "offset": [
        4703,
        4742
      ],
      "op": "DUP6",
      "path": "5"
    },
    "11007": {
      "fn": "Stakeable._stake",
      "offset": [
        4703,
        4742
      ],
      "op": "ADD",
      "path": "5"
    },
    "11008": {
      "fn": "Stakeable._stake",
      "offset": [
        4703,
        4742
      ],
      "op": "DUP11",
      "path": "5"
    },
    "11009": {
      "fn": "Stakeable._stake",
      "offset": [
        4703,
        4742
      ],
      "op": "DUP2",
      "path": "5"
    },
    "11010": {
      "fn": "Stakeable._stake",
      "offset": [
        4703,
        4742
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "11011": {
      "fn": "Stakeable._stake",
      "offset": [
        4663,
        4682
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "11013": {
      "fn": "Stakeable._stake",
      "offset": [
        4663,
        4682
      ],
      "op": "SWAP10",
      "path": "5"
    },
    "11014": {
      "fn": "Stakeable._stake",
      "offset": [
        4663,
        4682
      ],
      "op": "DUP11",
      "path": "5"
    },
    "11015": {
      "fn": "Stakeable._stake",
      "offset": [
        4663,
        4682
      ],
      "op": "MUL",
      "path": "5"
    },
    "11016": {
      "fn": "Stakeable._stake",
      "offset": [
        4663,
        4682
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "11017": {
      "fn": "Stakeable._stake",
      "offset": [
        4663,
        4682
      ],
      "op": "SWAP8",
      "path": "5"
    },
    "11018": {
      "fn": "Stakeable._stake",
      "offset": [
        4663,
        4682
      ],
      "op": "ADD",
      "path": "5"
    },
    "11019": {
      "fn": "Stakeable._stake",
      "offset": [
        4663,
        4697
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "11021": {
      "fn": "Stakeable._stake",
      "offset": [
        4663,
        4697
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "11022": {
      "fn": "Stakeable._stake",
      "offset": [
        4663,
        4697
      ],
      "op": "DUP2",
      "path": "5"
    },
    "11023": {
      "fn": "Stakeable._stake",
      "offset": [
        4663,
        4697
      ],
      "op": "ADD",
      "path": "5"
    },
    "11024": {
      "fn": "Stakeable._stake",
      "offset": [
        4663,
        4743
      ],
      "op": "DUP1",
      "path": "5"
    },
    "11025": {
      "fn": "Stakeable._stake",
      "offset": [
        4663,
        4743
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "11026": {
      "fn": "Stakeable._stake",
      "offset": [
        4663,
        4743
      ],
      "op": "DUP1",
      "path": "5"
    },
    "11027": {
      "fn": "Stakeable._stake",
      "offset": [
        4663,
        4743
      ],
      "op": "DUP4",
      "path": "5"
    },
    "11028": {
      "fn": "Stakeable._stake",
      "offset": [
        4663,
        4743
      ],
      "op": "ADD",
      "path": "5"
    },
    "11029": {
      "fn": "Stakeable._stake",
      "offset": [
        4663,
        4743
      ],
      "op": "DUP3",
      "path": "5"
    },
    "11030": {
      "fn": "Stakeable._stake",
      "offset": [
        4663,
        4743
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "11031": {
      "fn": "Stakeable._stake",
      "offset": [
        4663,
        4743
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "11032": {
      "fn": "Stakeable._stake",
      "offset": [
        4663,
        4743
      ],
      "op": "DUP13",
      "path": "5"
    },
    "11033": {
      "fn": "Stakeable._stake",
      "offset": [
        4663,
        4743
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "11034": {
      "fn": "Stakeable._stake",
      "offset": [
        4663,
        4743
      ],
      "op": "SWAP11",
      "path": "5"
    },
    "11035": {
      "fn": "Stakeable._stake",
      "offset": [
        4663,
        4743
      ],
      "op": "DUP10",
      "path": "5"
    },
    "11036": {
      "fn": "Stakeable._stake",
      "offset": [
        4663,
        4743
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "11037": {
      "fn": "Stakeable._stake",
      "offset": [
        4663,
        4743
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "11038": {
      "fn": "Stakeable._stake",
      "offset": [
        4663,
        4743
      ],
      "op": "SWAP6",
      "path": "5"
    },
    "11039": {
      "fn": "Stakeable._stake",
      "offset": [
        4663,
        4743
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "11040": {
      "fn": "Stakeable._stake",
      "offset": [
        4663,
        4743
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "11042": {
      "fn": "Stakeable._stake",
      "offset": [
        4663,
        4743
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "11043": {
      "fn": "Stakeable._stake",
      "offset": [
        4663,
        4743
      ],
      "op": "SWAP12",
      "path": "5"
    },
    "11044": {
      "fn": "Stakeable._stake",
      "offset": [
        4663,
        4743
      ],
      "op": "MUL",
      "path": "5"
    },
    "11045": {
      "fn": "Stakeable._stake",
      "offset": [
        4663,
        4743
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "11046": {
      "fn": "Stakeable._stake",
      "offset": [
        4663,
        4743
      ],
      "op": "SWAP6",
      "path": "5"
    },
    "11047": {
      "fn": "Stakeable._stake",
      "offset": [
        4663,
        4743
      ],
      "op": "ADD",
      "path": "5"
    },
    "11048": {
      "fn": "Stakeable._stake",
      "offset": [
        4663,
        4743
      ],
      "op": "DUP1",
      "path": "5"
    },
    "11049": {
      "fn": "Stakeable._stake",
      "offset": [
        4663,
        4743
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "11050": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11052": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11054": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11056": {
      "op": "SHL"
    },
    "11057": {
      "op": "SUB"
    },
    "11058": {
      "op": "NOT"
    },
    "11059": {
      "fn": "Stakeable._stake",
      "offset": [
        4663,
        4743
      ],
      "op": "AND",
      "path": "5"
    },
    "11060": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11062": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11064": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11066": {
      "op": "SHL"
    },
    "11067": {
      "op": "SUB"
    },
    "11068": {
      "fn": "Stakeable._stake",
      "offset": [
        4663,
        4743
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "11069": {
      "fn": "Stakeable._stake",
      "offset": [
        4663,
        4743
      ],
      "op": "SWAP12",
      "path": "5"
    },
    "11070": {
      "fn": "Stakeable._stake",
      "offset": [
        4663,
        4743
      ],
      "op": "AND",
      "path": "5"
    },
    "11071": {
      "fn": "Stakeable._stake",
      "offset": [
        4663,
        4743
      ],
      "op": "SWAP11",
      "path": "5"
    },
    "11072": {
      "fn": "Stakeable._stake",
      "offset": [
        4663,
        4743
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "11073": {
      "fn": "Stakeable._stake",
      "offset": [
        4663,
        4743
      ],
      "op": "SWAP11",
      "path": "5"
    },
    "11074": {
      "fn": "Stakeable._stake",
      "offset": [
        4663,
        4743
      ],
      "op": "OR",
      "path": "5"
    },
    "11075": {
      "fn": "Stakeable._stake",
      "offset": [
        4663,
        4743
      ],
      "op": "DUP11",
      "path": "5"
    },
    "11076": {
      "fn": "Stakeable._stake",
      "offset": [
        4663,
        4743
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "11077": {
      "fn": "Stakeable._stake",
      "offset": [
        4663,
        4743
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "11078": {
      "fn": "Stakeable._stake",
      "offset": [
        4663,
        4743
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "11079": {
      "fn": "Stakeable._stake",
      "offset": [
        4663,
        4743
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "11080": {
      "fn": "Stakeable._stake",
      "offset": [
        4663,
        4743
      ],
      "op": "DUP10",
      "path": "5"
    },
    "11081": {
      "fn": "Stakeable._stake",
      "offset": [
        4663,
        4743
      ],
      "op": "ADD",
      "path": "5"
    },
    "11082": {
      "fn": "Stakeable._stake",
      "offset": [
        4663,
        4743
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "11083": {
      "fn": "Stakeable._stake",
      "offset": [
        4663,
        4743
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "11084": {
      "fn": "Stakeable._stake",
      "offset": [
        4663,
        4743
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "11085": {
      "fn": "Stakeable._stake",
      "offset": [
        4663,
        4743
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "11086": {
      "fn": "Stakeable._stake",
      "offset": [
        4663,
        4743
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "11087": {
      "fn": "Stakeable._stake",
      "offset": [
        4663,
        4743
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "11088": {
      "fn": "Stakeable._stake",
      "offset": [
        4663,
        4743
      ],
      "op": "SWAP6",
      "path": "5"
    },
    "11089": {
      "fn": "Stakeable._stake",
      "offset": [
        4663,
        4743
      ],
      "op": "DUP8",
      "path": "5"
    },
    "11090": {
      "fn": "Stakeable._stake",
      "offset": [
        4663,
        4743
      ],
      "op": "ADD",
      "path": "5"
    },
    "11091": {
      "fn": "Stakeable._stake",
      "offset": [
        4663,
        4743
      ],
      "op": "SWAP6",
      "path": "5"
    },
    "11092": {
      "fn": "Stakeable._stake",
      "offset": [
        4663,
        4743
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "11093": {
      "fn": "Stakeable._stake",
      "offset": [
        4663,
        4743
      ],
      "op": "SWAP6",
      "path": "5"
    },
    "11094": {
      "fn": "Stakeable._stake",
      "offset": [
        4663,
        4743
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "11095": {
      "fn": "Stakeable._stake",
      "offset": [
        4663,
        4743
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "11096": {
      "fn": "Stakeable._stake",
      "offset": [
        4663,
        4743
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "11097": {
      "fn": "Stakeable._stake",
      "offset": [
        4663,
        4743
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3"
    },
    "11099": {
      "fn": "Stakeable._stake",
      "offset": [
        4663,
        4743
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "11100": {
      "fn": "Stakeable._stake",
      "offset": [
        4663,
        4743
      ],
      "op": "SWAP6",
      "path": "5"
    },
    "11101": {
      "fn": "Stakeable._stake",
      "offset": [
        4663,
        4743
      ],
      "op": "ADD",
      "path": "5"
    },
    "11102": {
      "fn": "Stakeable._stake",
      "offset": [
        4663,
        4743
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "11103": {
      "fn": "Stakeable._stake",
      "offset": [
        4663,
        4743
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "11104": {
      "fn": "Stakeable._stake",
      "offset": [
        4663,
        4743
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "11105": {
      "fn": "Stakeable._stake",
      "offset": [
        4663,
        4743
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "11106": {
      "fn": "Stakeable._stake",
      "offset": [
        4810,
        4854
      ],
      "op": "DUP4",
      "path": "5",
      "statement": 157
    },
    "11107": {
      "fn": "Stakeable._stake",
      "offset": [
        4810,
        4854
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "11108": {
      "op": "DUP8"
    },
    "11109": {
      "op": "DUP2"
    },
    "11110": {
      "op": "MSTORE"
    },
    "11111": {
      "op": "SWAP2"
    },
    "11112": {
      "op": "DUP3"
    },
    "11113": {
      "op": "ADD"
    },
    "11114": {
      "op": "DUP7"
    },
    "11115": {
      "op": "SWAP1"
    },
    "11116": {
      "op": "MSTORE"
    },
    "11117": {
      "op": "SWAP3"
    },
    "11118": {
      "op": "DUP2"
    },
    "11119": {
      "op": "ADD"
    },
    "11120": {
      "op": "DUP5"
    },
    "11121": {
      "op": "SWAP1"
    },
    "11122": {
      "op": "MSTORE"
    },
    "11123": {
      "fn": "Stakeable._stake",
      "offset": [
        4709,
        4719
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "11124": {
      "fn": "Stakeable._stake",
      "offset": [
        4709,
        4719
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "11125": {
      "fn": "Stakeable._stake",
      "offset": [
        4810,
        4854
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0xB4CAAF29ADDA3EEFEE3AD552A8E85058589BF834C7466CAE4EE58787F70589ED"
    },
    "11158": {
      "fn": "Stakeable._stake",
      "offset": [
        4810,
        4854
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "11159": {
      "op": "ADD"
    },
    "11160": {
      "fn": "Stakeable._stake",
      "offset": [
        4810,
        4854
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "11162": {
      "fn": "Stakeable._stake",
      "offset": [
        4810,
        4854
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "11163": {
      "fn": "Stakeable._stake",
      "offset": [
        4810,
        4854
      ],
      "op": "DUP1",
      "path": "5"
    },
    "11164": {
      "fn": "Stakeable._stake",
      "offset": [
        4810,
        4854
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "11165": {
      "fn": "Stakeable._stake",
      "offset": [
        4810,
        4854
      ],
      "op": "SUB",
      "path": "5"
    },
    "11166": {
      "fn": "Stakeable._stake",
      "offset": [
        4810,
        4854
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "11167": {
      "fn": "Stakeable._stake",
      "offset": [
        4810,
        4854
      ],
      "op": "LOG2",
      "path": "5"
    },
    "11168": {
      "fn": "Stakeable._stake",
      "offset": [
        3726,
        4861
      ],
      "op": "POP",
      "path": "5"
    },
    "11169": {
      "fn": "Stakeable._stake",
      "offset": [
        3726,
        4861
      ],
      "op": "POP",
      "path": "5"
    },
    "11170": {
      "fn": "Stakeable._stake",
      "offset": [
        3685,
        4861
      ],
      "op": "POP",
      "path": "5"
    },
    "11171": {
      "fn": "Stakeable._stake",
      "jump": "o",
      "offset": [
        3685,
        4861
      ],
      "op": "JUMP",
      "path": "5"
    },
    "11172": {
      "fn": "CultureCoin.iRegister",
      "offset": [
        19570,
        20127
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "11173": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11175": {
      "op": "DUP1"
    },
    "11176": {
      "op": "MLOAD"
    },
    "11177": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11179": {
      "op": "PUSH3",
      "value": "0x5700"
    },
    "11183": {
      "op": "DUP4"
    },
    "11184": {
      "op": "CODECOPY"
    },
    "11185": {
      "op": "DUP2"
    },
    "11186": {
      "op": "MLOAD"
    },
    "11187": {
      "op": "SWAP2"
    },
    "11188": {
      "op": "MSTORE"
    },
    "11189": {
      "fn": "CultureCoin.iRegister",
      "offset": [
        19672,
        19727
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 158,
      "value": "0x40"
    },
    "11191": {
      "fn": "CultureCoin.iRegister",
      "offset": [
        19672,
        19727
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "11192": {
      "fn": "CultureCoin.iRegister",
      "offset": [
        19672,
        19727
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x2C06"
    },
    "11196": {
      "fn": "CultureCoin.iRegister",
      "offset": [
        19672,
        19727
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "11197": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11199": {
      "op": "DUP1"
    },
    "11200": {
      "op": "DUP3"
    },
    "11201": {
      "op": "MSTORE"
    },
    "11202": {
      "op": "PUSH1",
      "value": "0x2A"
    },
    "11204": {
      "op": "SWAP1"
    },
    "11205": {
      "op": "DUP3"
    },
    "11206": {
      "op": "ADD"
    },
    "11207": {
      "op": "MSTORE"
    },
    "11208": {
      "op": "PUSH32",
      "value": "0x436F696E206861732063616C6C656420666F7220696E7465726E616C20726567"
    },
    "11241": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11243": {
      "op": "DUP3"
    },
    "11244": {
      "op": "ADD"
    },
    "11245": {
      "op": "MSTORE"
    },
    "11246": {
      "op": "PUSH10",
      "value": "0x34B9BA3930BA34B7B717"
    },
    "11257": {
      "op": "PUSH1",
      "value": "0xB1"
    },
    "11259": {
      "op": "SHL"
    },
    "11260": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "11262": {
      "op": "DUP3"
    },
    "11263": {
      "op": "ADD"
    },
    "11264": {
      "op": "MSTORE"
    },
    "11265": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "11267": {
      "op": "ADD"
    },
    "11268": {
      "op": "SWAP1"
    },
    "11269": {
      "op": "JUMP"
    },
    "11270": {
      "fn": "CultureCoin.iRegister",
      "offset": [
        19672,
        19727
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "11271": {
      "fn": "CultureCoin.iRegister",
      "offset": [
        19672,
        19727
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "11273": {
      "fn": "CultureCoin.iRegister",
      "offset": [
        19672,
        19727
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "11274": {
      "fn": "CultureCoin.iRegister",
      "offset": [
        19672,
        19727
      ],
      "op": "DUP1",
      "path": "1"
    },
    "11275": {
      "fn": "CultureCoin.iRegister",
      "offset": [
        19672,
        19727
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "11276": {
      "fn": "CultureCoin.iRegister",
      "offset": [
        19672,
        19727
      ],
      "op": "SUB",
      "path": "1"
    },
    "11277": {
      "fn": "CultureCoin.iRegister",
      "offset": [
        19672,
        19727
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "11278": {
      "fn": "CultureCoin.iRegister",
      "offset": [
        19672,
        19727
      ],
      "op": "LOG1",
      "path": "1"
    },
    "11279": {
      "fn": "CultureCoin.iRegister",
      "offset": [
        19754,
        19760
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xDA"
    },
    "11281": {
      "fn": "CultureCoin.iRegister",
      "offset": [
        19761,
        19766
      ],
      "op": "DUP4",
      "path": "1"
    },
    "11282": {
      "fn": "CultureCoin.iRegister",
      "offset": [
        19754,
        19767
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "11284": {
      "fn": "CultureCoin.iRegister",
      "offset": [
        19754,
        19767
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "11285": {
      "fn": "CultureCoin.iRegister",
      "offset": [
        19754,
        19767
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x2C20"
    },
    "11289": {
      "fn": "CultureCoin.iRegister",
      "offset": [
        19754,
        19767
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "11290": {
      "fn": "CultureCoin.iRegister",
      "offset": [
        19754,
        19767
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "11291": {
      "fn": "CultureCoin.iRegister",
      "offset": [
        19754,
        19767
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x3812"
    },
    "11295": {
      "fn": "CultureCoin.iRegister",
      "jump": "i",
      "offset": [
        19754,
        19767
      ],
      "op": "JUMP",
      "path": "1"
    },
    "11296": {
      "fn": "CultureCoin.iRegister",
      "offset": [
        19754,
        19767
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "11297": {
      "fn": "CultureCoin.iRegister",
      "offset": [
        19754,
        19767
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "11298": {
      "fn": "CultureCoin.iRegister",
      "offset": [
        19754,
        19767
      ],
      "op": "DUP2",
      "path": "1"
    },
    "11299": {
      "fn": "CultureCoin.iRegister",
      "offset": [
        19754,
        19767
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "11300": {
      "fn": "CultureCoin.iRegister",
      "offset": [
        19754,
        19767
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "11302": {
      "fn": "CultureCoin.iRegister",
      "offset": [
        19754,
        19767
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "11303": {
      "fn": "CultureCoin.iRegister",
      "offset": [
        19754,
        19767
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "11304": {
      "fn": "CultureCoin.iRegister",
      "offset": [
        19754,
        19767
      ],
      "op": "DUP2",
      "path": "1"
    },
    "11305": {
      "fn": "CultureCoin.iRegister",
      "offset": [
        19754,
        19767
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "11306": {
      "fn": "CultureCoin.iRegister",
      "offset": [
        19754,
        19767
      ],
      "op": "SUB",
      "path": "1"
    },
    "11307": {
      "fn": "CultureCoin.iRegister",
      "offset": [
        19754,
        19767
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "11309": {
      "fn": "CultureCoin.iRegister",
      "offset": [
        19754,
        19767
      ],
      "op": "ADD",
      "path": "1"
    },
    "11310": {
      "fn": "CultureCoin.iRegister",
      "offset": [
        19754,
        19767
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "11311": {
      "fn": "CultureCoin.iRegister",
      "offset": [
        19754,
        19767
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "11312": {
      "fn": "CultureCoin.iRegister",
      "offset": [
        19754,
        19767
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "11313": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11315": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11317": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11319": {
      "op": "SHL"
    },
    "11320": {
      "op": "SUB"
    },
    "11321": {
      "fn": "CultureCoin.iRegister",
      "offset": [
        19754,
        19767
      ],
      "op": "AND",
      "path": "1"
    },
    "11322": {
      "fn": "CultureCoin.iRegister",
      "offset": [
        19737,
        20121
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x2D55"
    },
    "11326": {
      "fn": "CultureCoin.iRegister",
      "offset": [
        19737,
        20121
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "11327": {
      "fn": "CultureCoin.iRegister",
      "offset": [
        19783,
        19793
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 159,
      "value": "0xDC"
    },
    "11329": {
      "fn": "CultureCoin.iRegister",
      "offset": [
        19794,
        19799
      ],
      "op": "DUP4",
      "path": "1"
    },
    "11330": {
      "fn": "CultureCoin.iRegister",
      "offset": [
        19783,
        19800
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "11332": {
      "fn": "CultureCoin.iRegister",
      "offset": [
        19783,
        19800
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "11333": {
      "fn": "CultureCoin.iRegister",
      "offset": [
        19783,
        19800
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x2C50"
    },
    "11337": {
      "fn": "CultureCoin.iRegister",
      "offset": [
        19783,
        19800
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "11338": {
      "fn": "CultureCoin.iRegister",
      "offset": [
        19783,
        19800
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "11339": {
      "fn": "CultureCoin.iRegister",
      "offset": [
        19783,
        19800
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x3812"
    },
    "11343": {
      "fn": "CultureCoin.iRegister",
      "jump": "i",
      "offset": [
        19783,
        19800
      ],
      "op": "JUMP",
      "path": "1"
    },
    "11344": {
      "fn": "CultureCoin.iRegister",
      "offset": [
        19783,
        19800
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "11345": {
      "fn": "CultureCoin.iRegister",
      "offset": [
        19783,
        19800
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "11346": {
      "fn": "CultureCoin.iRegister",
      "offset": [
        19783,
        19800
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "11348": {
      "fn": "CultureCoin.iRegister",
      "offset": [
        19783,
        19800
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "11349": {
      "fn": "CultureCoin.iRegister",
      "offset": [
        19877,
        19884
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 160
    },
    "11350": {
      "fn": "CultureCoin.iRegister",
      "offset": [
        19877,
        19884
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "11351": {
      "fn": "CultureCoin.iRegister",
      "offset": [
        19861,
        19867
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xDA"
    },
    "11353": {
      "fn": "CultureCoin.iRegister",
      "offset": [
        19861,
        19867
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "11354": {
      "fn": "CultureCoin.iRegister",
      "offset": [
        19861,
        19874
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x2C66"
    },
    "11358": {
      "fn": "CultureCoin.iRegister",
      "offset": [
        19861,
        19874
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "11359": {
      "fn": "CultureCoin.iRegister",
      "offset": [
        19868,
        19873
      ],
      "op": "DUP7",
      "path": "1"
    },
    "11360": {
      "fn": "CultureCoin.iRegister",
      "offset": [
        19868,
        19873
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "11361": {
      "fn": "CultureCoin.iRegister",
      "offset": [
        19861,
        19874
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x3812"
    },
    "11365": {
      "fn": "CultureCoin.iRegister",
      "jump": "i",
      "offset": [
        19861,
        19874
      ],
      "op": "JUMP",
      "path": "1"
    },
    "11366": {
      "fn": "CultureCoin.iRegister",
      "offset": [
        19861,
        19874
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "11367": {
      "fn": "CultureCoin.iRegister",
      "offset": [
        19861,
        19874
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "11368": {
      "fn": "CultureCoin.iRegister",
      "offset": [
        19861,
        19874
      ],
      "op": "DUP2",
      "path": "1"
    },
    "11369": {
      "fn": "CultureCoin.iRegister",
      "offset": [
        19861,
        19874
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "11370": {
      "fn": "CultureCoin.iRegister",
      "offset": [
        19861,
        19874
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "11372": {
      "fn": "CultureCoin.iRegister",
      "offset": [
        19861,
        19874
      ],
      "op": "ADD",
      "path": "1"
    },
    "11373": {
      "fn": "CultureCoin.iRegister",
      "offset": [
        19861,
        19874
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "11375": {
      "fn": "CultureCoin.iRegister",
      "offset": [
        19861,
        19874
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "11376": {
      "fn": "CultureCoin.iRegister",
      "offset": [
        19861,
        19874
      ],
      "op": "DUP1",
      "path": "1"
    },
    "11377": {
      "fn": "CultureCoin.iRegister",
      "offset": [
        19861,
        19874
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "11378": {
      "fn": "CultureCoin.iRegister",
      "offset": [
        19861,
        19874
      ],
      "op": "SUB",
      "path": "1"
    },
    "11379": {
      "fn": "CultureCoin.iRegister",
      "offset": [
        19861,
        19874
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "11380": {
      "fn": "CultureCoin.iRegister",
      "offset": [
        19861,
        19874
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "11381": {
      "fn": "CultureCoin.iRegister",
      "offset": [
        19861,
        19874
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "11383": {
      "fn": "CultureCoin.iRegister",
      "offset": [
        19861,
        19884
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x100"
    },
    "11386": {
      "fn": "CultureCoin.iRegister",
      "offset": [
        19861,
        19884
      ],
      "op": "EXP",
      "path": "1"
    },
    "11387": {
      "fn": "CultureCoin.iRegister",
      "offset": [
        19861,
        19884
      ],
      "op": "DUP2",
      "path": "1"
    },
    "11388": {
      "fn": "CultureCoin.iRegister",
      "offset": [
        19861,
        19884
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "11389": {
      "fn": "CultureCoin.iRegister",
      "offset": [
        19861,
        19884
      ],
      "op": "DUP2",
      "path": "1"
    },
    "11390": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11392": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11394": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11396": {
      "op": "SHL"
    },
    "11397": {
      "op": "SUB"
    },
    "11398": {
      "fn": "CultureCoin.iRegister",
      "offset": [
        19861,
        19884
      ],
      "op": "MUL",
      "path": "1"
    },
    "11399": {
      "fn": "CultureCoin.iRegister",
      "offset": [
        19861,
        19884
      ],
      "op": "NOT",
      "path": "1"
    },
    "11400": {
      "fn": "CultureCoin.iRegister",
      "offset": [
        19861,
        19884
      ],
      "op": "AND",
      "path": "1"
    },
    "11401": {
      "fn": "CultureCoin.iRegister",
      "offset": [
        19861,
        19884
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "11402": {
      "fn": "CultureCoin.iRegister",
      "offset": [
        19861,
        19884
      ],
      "op": "DUP4",
      "path": "1"
    },
    "11403": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11405": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11407": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11409": {
      "op": "SHL"
    },
    "11410": {
      "op": "SUB"
    },
    "11411": {
      "fn": "CultureCoin.iRegister",
      "offset": [
        19861,
        19884
      ],
      "op": "AND",
      "path": "1"
    },
    "11412": {
      "fn": "CultureCoin.iRegister",
      "offset": [
        19861,
        19884
      ],
      "op": "MUL",
      "path": "1"
    },
    "11413": {
      "fn": "CultureCoin.iRegister",
      "offset": [
        19861,
        19884
      ],
      "op": "OR",
      "path": "1"
    },
    "11414": {
      "fn": "CultureCoin.iRegister",
      "offset": [
        19861,
        19884
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "11415": {
      "fn": "CultureCoin.iRegister",
      "offset": [
        19861,
        19884
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "11416": {
      "fn": "CultureCoin.iRegister",
      "offset": [
        19861,
        19884
      ],
      "op": "POP",
      "path": "1"
    },
    "11417": {
      "fn": "CultureCoin.iRegister",
      "offset": [
        19918,
        19928
      ],
      "op": "CALLER",
      "path": "1",
      "statement": 161
    },
    "11418": {
      "fn": "CultureCoin.iRegister",
      "offset": [
        19898,
        19908
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xDE"
    },
    "11420": {
      "fn": "CultureCoin.iRegister",
      "offset": [
        19909,
        19914
      ],
      "op": "DUP5",
      "path": "1"
    },
    "11421": {
      "fn": "CultureCoin.iRegister",
      "offset": [
        19898,
        19915
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "11423": {
      "fn": "CultureCoin.iRegister",
      "offset": [
        19898,
        19915
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "11424": {
      "fn": "CultureCoin.iRegister",
      "offset": [
        19898,
        19915
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x2CAB"
    },
    "11428": {
      "fn": "CultureCoin.iRegister",
      "offset": [
        19898,
        19915
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "11429": {
      "fn": "CultureCoin.iRegister",
      "offset": [
        19898,
        19915
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "11430": {
      "fn": "CultureCoin.iRegister",
      "offset": [
        19898,
        19915
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x3812"
    },
    "11434": {
      "fn": "CultureCoin.iRegister",
      "jump": "i",
      "offset": [
        19898,
        19915
      ],
      "op": "JUMP",
      "path": "1"
    },
    "11435": {
      "fn": "CultureCoin.iRegister",
      "offset": [
        19898,
        19915
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "11436": {
      "fn": "CultureCoin.iRegister",
      "offset": [
        19898,
        19915
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "11437": {
      "fn": "CultureCoin.iRegister",
      "offset": [
        19898,
        19915
      ],
      "op": "DUP2",
      "path": "1"
    },
    "11438": {
      "fn": "CultureCoin.iRegister",
      "offset": [
        19898,
        19915
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "11439": {
      "fn": "CultureCoin.iRegister",
      "offset": [
        19898,
        19915
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "11441": {
      "fn": "CultureCoin.iRegister",
      "offset": [
        19898,
        19915
      ],
      "op": "ADD",
      "path": "1"
    },
    "11442": {
      "fn": "CultureCoin.iRegister",
      "offset": [
        19898,
        19915
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "11444": {
      "fn": "CultureCoin.iRegister",
      "offset": [
        19898,
        19915
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "11445": {
      "fn": "CultureCoin.iRegister",
      "offset": [
        19898,
        19915
      ],
      "op": "DUP1",
      "path": "1"
    },
    "11446": {
      "fn": "CultureCoin.iRegister",
      "offset": [
        19898,
        19915
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "11447": {
      "fn": "CultureCoin.iRegister",
      "offset": [
        19898,
        19915
      ],
      "op": "SUB",
      "path": "1"
    },
    "11448": {
      "fn": "CultureCoin.iRegister",
      "offset": [
        19898,
        19915
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "11449": {
      "fn": "CultureCoin.iRegister",
      "offset": [
        19898,
        19915
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "11450": {
      "fn": "CultureCoin.iRegister",
      "offset": [
        19898,
        19915
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "11452": {
      "fn": "CultureCoin.iRegister",
      "offset": [
        19898,
        19928
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x100"
    },
    "11455": {
      "fn": "CultureCoin.iRegister",
      "offset": [
        19898,
        19928
      ],
      "op": "EXP",
      "path": "1"
    },
    "11456": {
      "fn": "CultureCoin.iRegister",
      "offset": [
        19898,
        19928
      ],
      "op": "DUP2",
      "path": "1"
    },
    "11457": {
      "fn": "CultureCoin.iRegister",
      "offset": [
        19898,
        19928
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "11458": {
      "fn": "CultureCoin.iRegister",
      "offset": [
        19898,
        19928
      ],
      "op": "DUP2",
      "path": "1"
    },
    "11459": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11461": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11463": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11465": {
      "op": "SHL"
    },
    "11466": {
      "op": "SUB"
    },
    "11467": {
      "fn": "CultureCoin.iRegister",
      "offset": [
        19898,
        19928
      ],
      "op": "MUL",
      "path": "1"
    },
    "11468": {
      "fn": "CultureCoin.iRegister",
      "offset": [
        19898,
        19928
      ],
      "op": "NOT",
      "path": "1"
    },
    "11469": {
      "fn": "CultureCoin.iRegister",
      "offset": [
        19898,
        19928
      ],
      "op": "AND",
      "path": "1"
    },
    "11470": {
      "fn": "CultureCoin.iRegister",
      "offset": [
        19898,
        19928
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "11471": {
      "fn": "CultureCoin.iRegister",
      "offset": [
        19898,
        19928
      ],
      "op": "DUP4",
      "path": "1"
    },
    "11472": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11474": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11476": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11478": {
      "op": "SHL"
    },
    "11479": {
      "op": "SUB"
    },
    "11480": {
      "fn": "CultureCoin.iRegister",
      "offset": [
        19898,
        19928
      ],
      "op": "AND",
      "path": "1"
    },
    "11481": {
      "fn": "CultureCoin.iRegister",
      "offset": [
        19898,
        19928
      ],
      "op": "MUL",
      "path": "1"
    },
    "11482": {
      "fn": "CultureCoin.iRegister",
      "offset": [
        19898,
        19928
      ],
      "op": "OR",
      "path": "1"
    },
    "11483": {
      "fn": "CultureCoin.iRegister",
      "offset": [
        19898,
        19928
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "11484": {
      "fn": "CultureCoin.iRegister",
      "offset": [
        19898,
        19928
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "11485": {
      "fn": "CultureCoin.iRegister",
      "offset": [
        19898,
        19928
      ],
      "op": "POP",
      "path": "1"
    },
    "11486": {
      "fn": "CultureCoin.iRegister",
      "offset": [
        19960,
        19964
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 162,
      "value": "0x1"
    },
    "11488": {
      "fn": "CultureCoin.iRegister",
      "offset": [
        19942,
        19950
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xDB"
    },
    "11490": {
      "fn": "CultureCoin.iRegister",
      "offset": [
        19951,
        19956
      ],
      "op": "DUP5",
      "path": "1"
    },
    "11491": {
      "fn": "CultureCoin.iRegister",
      "offset": [
        19942,
        19957
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "11493": {
      "fn": "CultureCoin.iRegister",
      "offset": [
        19942,
        19957
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "11494": {
      "fn": "CultureCoin.iRegister",
      "offset": [
        19942,
        19957
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x2CF1"
    },
    "11498": {
      "fn": "CultureCoin.iRegister",
      "offset": [
        19942,
        19957
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "11499": {
      "fn": "CultureCoin.iRegister",
      "offset": [
        19942,
        19957
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "11500": {
      "fn": "CultureCoin.iRegister",
      "offset": [
        19942,
        19957
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x3812"
    },
    "11504": {
      "fn": "CultureCoin.iRegister",
      "jump": "i",
      "offset": [
        19942,
        19957
      ],
      "op": "JUMP",
      "path": "1"
    },
    "11505": {
      "fn": "CultureCoin.iRegister",
      "offset": [
        19942,
        19957
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "11506": {
      "fn": "CultureCoin.iRegister",
      "offset": [
        19942,
        19957
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "11507": {
      "fn": "CultureCoin.iRegister",
      "offset": [
        19942,
        19957
      ],
      "op": "DUP2",
      "path": "1"
    },
    "11508": {
      "fn": "CultureCoin.iRegister",
      "offset": [
        19942,
        19957
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "11509": {
      "fn": "CultureCoin.iRegister",
      "offset": [
        19942,
        19957
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "11511": {
      "fn": "CultureCoin.iRegister",
      "offset": [
        19942,
        19957
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "11512": {
      "fn": "CultureCoin.iRegister",
      "offset": [
        19942,
        19957
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "11513": {
      "fn": "CultureCoin.iRegister",
      "offset": [
        19942,
        19957
      ],
      "op": "DUP2",
      "path": "1"
    },
    "11514": {
      "fn": "CultureCoin.iRegister",
      "offset": [
        19942,
        19957
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "11515": {
      "fn": "CultureCoin.iRegister",
      "offset": [
        19942,
        19957
      ],
      "op": "SUB",
      "path": "1"
    },
    "11516": {
      "fn": "CultureCoin.iRegister",
      "offset": [
        19942,
        19957
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "11518": {
      "fn": "CultureCoin.iRegister",
      "offset": [
        19942,
        19957
      ],
      "op": "ADD",
      "path": "1"
    },
    "11519": {
      "fn": "CultureCoin.iRegister",
      "offset": [
        19942,
        19957
      ],
      "op": "DUP2",
      "path": "1"
    },
    "11520": {
      "fn": "CultureCoin.iRegister",
      "offset": [
        19942,
        19957
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "11521": {
      "fn": "CultureCoin.iRegister",
      "offset": [
        19942,
        19964
      ],
      "op": "DUP1",
      "path": "1"
    },
    "11522": {
      "fn": "CultureCoin.iRegister",
      "offset": [
        19942,
        19964
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "11523": {
      "fn": "CultureCoin.iRegister",
      "offset": [
        19942,
        19964
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "11524": {
      "fn": "CultureCoin.iRegister",
      "offset": [
        19942,
        19964
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "11525": {
      "fn": "CultureCoin.iRegister",
      "offset": [
        19942,
        19964
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "11526": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "11528": {
      "op": "NOT"
    },
    "11529": {
      "fn": "CultureCoin.iRegister",
      "offset": [
        19942,
        19964
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "11530": {
      "fn": "CultureCoin.iRegister",
      "offset": [
        19942,
        19964
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "11531": {
      "fn": "CultureCoin.iRegister",
      "offset": [
        19942,
        19964
      ],
      "op": "AND",
      "path": "1"
    },
    "11532": {
      "fn": "CultureCoin.iRegister",
      "offset": [
        19942,
        19964
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "11533": {
      "fn": "CultureCoin.iRegister",
      "offset": [
        19942,
        19964
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "11534": {
      "fn": "CultureCoin.iRegister",
      "offset": [
        19942,
        19964
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "11535": {
      "fn": "CultureCoin.iRegister",
      "offset": [
        19942,
        19964
      ],
      "op": "OR",
      "path": "1"
    },
    "11536": {
      "fn": "CultureCoin.iRegister",
      "offset": [
        19942,
        19964
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "11537": {
      "fn": "CultureCoin.iRegister",
      "offset": [
        19942,
        19964
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "11538": {
      "fn": "CultureCoin.iRegister",
      "offset": [
        19942,
        19964
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "11539": {
      "fn": "CultureCoin.iRegister",
      "offset": [
        19983,
        20028
      ],
      "op": "PUSH32",
      "path": "1",
      "statement": 163,
      "value": "0x681527AF24EFDB94FD8BA1EE38E6D7D4E2D64446E9B34E8AE1A9C649B4498269"
    },
    "11572": {
      "fn": "CultureCoin.iRegister",
      "offset": [
        19983,
        20028
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "11573": {
      "fn": "CultureCoin.iRegister",
      "offset": [
        19983,
        20028
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x2D48"
    },
    "11577": {
      "fn": "CultureCoin.iRegister",
      "offset": [
        19983,
        20028
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "11578": {
      "fn": "CultureCoin.iRegister",
      "offset": [
        19993,
        19998
      ],
      "op": "DUP6",
      "path": "1"
    },
    "11579": {
      "fn": "CultureCoin.iRegister",
      "offset": [
        19993,
        19998
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "11580": {
      "fn": "CultureCoin.iRegister",
      "offset": [
        20000,
        20007
      ],
      "op": "DUP6",
      "path": "1"
    },
    "11581": {
      "fn": "CultureCoin.iRegister",
      "offset": [
        20000,
        20007
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "11582": {
      "fn": "CultureCoin.iRegister",
      "offset": [
        20009,
        20021
      ],
      "op": "DUP6",
      "path": "1"
    },
    "11583": {
      "fn": "CultureCoin.iRegister",
      "offset": [
        20009,
        20021
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "11584": {
      "fn": "CultureCoin.iRegister",
      "offset": [
        19942,
        19964
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "11586": {
      "fn": "CultureCoin.iRegister",
      "offset": [
        19942,
        19964
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "11587": {
      "fn": "CultureCoin.iRegister",
      "offset": [
        19983,
        20028
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x3B9C"
    },
    "11591": {
      "fn": "CultureCoin.iRegister",
      "jump": "i",
      "offset": [
        19983,
        20028
      ],
      "op": "JUMP",
      "path": "1"
    },
    "11592": {
      "fn": "CultureCoin.iRegister",
      "offset": [
        19983,
        20028
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "11593": {
      "fn": "CultureCoin.iRegister",
      "offset": [
        19983,
        20028
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "11595": {
      "fn": "CultureCoin.iRegister",
      "offset": [
        19983,
        20028
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "11596": {
      "fn": "CultureCoin.iRegister",
      "offset": [
        19983,
        20028
      ],
      "op": "DUP1",
      "path": "1"
    },
    "11597": {
      "fn": "CultureCoin.iRegister",
      "offset": [
        19983,
        20028
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "11598": {
      "fn": "CultureCoin.iRegister",
      "offset": [
        19983,
        20028
      ],
      "op": "SUB",
      "path": "1"
    },
    "11599": {
      "fn": "CultureCoin.iRegister",
      "offset": [
        19983,
        20028
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "11600": {
      "fn": "CultureCoin.iRegister",
      "offset": [
        19983,
        20028
      ],
      "op": "LOG1",
      "path": "1"
    },
    "11601": {
      "offset": [
        2080,
        2717
      ],
      "op": "POP",
      "path": "13"
    },
    "11602": {
      "fn": "CultureCoin.initialize",
      "offset": [
        2733,
        4670
      ],
      "op": "POP",
      "path": "1"
    },
    "11603": {
      "fn": "CultureCoin.initialize",
      "offset": [
        2733,
        4670
      ],
      "op": "POP",
      "path": "1"
    },
    "11604": {
      "fn": "CultureCoin.initialize",
      "jump": "o",
      "offset": [
        2733,
        4670
      ],
      "op": "JUMP",
      "path": "1"
    },
    "11605": {
      "fn": "CultureCoin.iRegister",
      "offset": [
        19737,
        20121
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "11606": {
      "fn": "CultureCoin.iRegister",
      "offset": [
        20064,
        20110
      ],
      "op": "PUSH32",
      "path": "1",
      "statement": 164,
      "value": "0x681527AF24EFDB94FD8BA1EE38E6D7D4E2D64446E9B34E8AE1A9C649B4498269"
    },
    "11639": {
      "fn": "CultureCoin.iRegister",
      "offset": [
        20074,
        20079
      ],
      "op": "DUP4",
      "path": "1"
    },
    "11640": {
      "fn": "CultureCoin.iRegister",
      "offset": [
        20081,
        20088
      ],
      "op": "DUP4",
      "path": "1"
    },
    "11641": {
      "fn": "CultureCoin.iRegister",
      "offset": [
        20090,
        20102
      ],
      "op": "DUP4",
      "path": "1"
    },
    "11642": {
      "fn": "CultureCoin.iRegister",
      "offset": [
        20104,
        20109
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "11644": {
      "fn": "CultureCoin.iRegister",
      "offset": [
        20064,
        20110
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "11646": {
      "fn": "CultureCoin.iRegister",
      "offset": [
        20064,
        20110
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "11647": {
      "fn": "CultureCoin.iRegister",
      "offset": [
        20064,
        20110
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x2D48"
    },
    "11651": {
      "fn": "CultureCoin.iRegister",
      "offset": [
        20064,
        20110
      ],
      "op": "SWAP5",
      "path": "1"
    },
    "11652": {
      "fn": "CultureCoin.iRegister",
      "offset": [
        20064,
        20110
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "11653": {
      "fn": "CultureCoin.iRegister",
      "offset": [
        20064,
        20110
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "11654": {
      "fn": "CultureCoin.iRegister",
      "offset": [
        20064,
        20110
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "11655": {
      "fn": "CultureCoin.iRegister",
      "offset": [
        20064,
        20110
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "11656": {
      "fn": "CultureCoin.iRegister",
      "offset": [
        20064,
        20110
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x3B9C"
    },
    "11660": {
      "fn": "CultureCoin.iRegister",
      "jump": "i",
      "offset": [
        20064,
        20110
      ],
      "op": "JUMP",
      "path": "1"
    },
    "11661": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2116,
        2263
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "11662": {
      "offset": [
        2952,
        2965
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "11664": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2952,
        2965
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "11665": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2952,
        2965
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x100"
    },
    "11668": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2952,
        2965
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "11669": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2952,
        2965
      ],
      "op": "DIV",
      "path": "13"
    },
    "11670": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2952,
        2965
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xFF"
    },
    "11672": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2952,
        2965
      ],
      "op": "AND",
      "path": "13"
    },
    "11673": {
      "offset": [
        2944,
        3013
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x2DB7"
    },
    "11677": {
      "offset": [
        2944,
        3013
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "11678": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2944,
        3013
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "11680": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2944,
        3013
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "11681": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "11685": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "11687": {
      "op": "SHL"
    },
    "11688": {
      "offset": [
        2944,
        3013
      ],
      "op": "DUP2",
      "path": "13"
    },
    "11689": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2944,
        3013
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "11690": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2944,
        3013
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "11692": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2944,
        3013
      ],
      "op": "ADD",
      "path": "13"
    },
    "11693": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2944,
        3013
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0xC98"
    },
    "11697": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2944,
        3013
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "11698": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2944,
        3013
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x3BD8"
    },
    "11702": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "jump": "i",
      "offset": [
        2944,
        3013
      ],
      "op": "JUMP",
      "path": "13"
    },
    "11703": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2944,
        3013
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "11704": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2218,
        2256
      ],
      "op": "PUSH3",
      "path": "15",
      "statement": 165,
      "value": "0x1502"
    },
    "11708": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2241,
        2246
      ],
      "op": "DUP3",
      "path": "15"
    },
    "11709": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2248,
        2255
      ],
      "op": "DUP3",
      "path": "15"
    },
    "11710": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2218,
        2240
      ],
      "op": "PUSH3",
      "path": "15",
      "value": "0x3219"
    },
    "11714": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "jump": "i",
      "offset": [
        2218,
        2256
      ],
      "op": "JUMP",
      "path": "15"
    },
    "11715": {
      "fn": "ERC20BurnableUpgradeable.__ERC20Burnable_init",
      "offset": [
        594,
        659
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "11716": {
      "offset": [
        2952,
        2965
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "11718": {
      "fn": "ERC20BurnableUpgradeable.__ERC20Burnable_init",
      "offset": [
        2952,
        2965
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "11719": {
      "fn": "ERC20BurnableUpgradeable.__ERC20Burnable_init",
      "offset": [
        2952,
        2965
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x100"
    },
    "11722": {
      "fn": "ERC20BurnableUpgradeable.__ERC20Burnable_init",
      "offset": [
        2952,
        2965
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "11723": {
      "fn": "ERC20BurnableUpgradeable.__ERC20Burnable_init",
      "offset": [
        2952,
        2965
      ],
      "op": "DIV",
      "path": "13"
    },
    "11724": {
      "fn": "ERC20BurnableUpgradeable.__ERC20Burnable_init",
      "offset": [
        2952,
        2965
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xFF"
    },
    "11726": {
      "fn": "ERC20BurnableUpgradeable.__ERC20Burnable_init",
      "offset": [
        2952,
        2965
      ],
      "op": "AND",
      "path": "13"
    },
    "11727": {
      "offset": [
        2944,
        3013
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x11BF"
    },
    "11731": {
      "offset": [
        2944,
        3013
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "11732": {
      "fn": "ERC20BurnableUpgradeable.__ERC20Burnable_init",
      "offset": [
        2944,
        3013
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "11734": {
      "fn": "ERC20BurnableUpgradeable.__ERC20Burnable_init",
      "offset": [
        2944,
        3013
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "11735": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "11739": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "11741": {
      "op": "SHL"
    },
    "11742": {
      "offset": [
        2944,
        3013
      ],
      "op": "DUP2",
      "path": "13"
    },
    "11743": {
      "fn": "ERC20BurnableUpgradeable.__ERC20Burnable_init",
      "offset": [
        2944,
        3013
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "11744": {
      "fn": "ERC20BurnableUpgradeable.__ERC20Burnable_init",
      "offset": [
        2944,
        3013
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "11746": {
      "fn": "ERC20BurnableUpgradeable.__ERC20Burnable_init",
      "offset": [
        2944,
        3013
      ],
      "op": "ADD",
      "path": "13"
    },
    "11747": {
      "fn": "ERC20BurnableUpgradeable.__ERC20Burnable_init",
      "offset": [
        2944,
        3013
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0xC98"
    },
    "11751": {
      "fn": "ERC20BurnableUpgradeable.__ERC20Burnable_init",
      "offset": [
        2944,
        3013
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "11752": {
      "fn": "ERC20BurnableUpgradeable.__ERC20Burnable_init",
      "offset": [
        2944,
        3013
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x3BD8"
    },
    "11756": {
      "fn": "ERC20BurnableUpgradeable.__ERC20Burnable_init",
      "jump": "i",
      "offset": [
        2944,
        3013
      ],
      "op": "JUMP",
      "path": "13"
    },
    "11757": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init",
      "offset": [
        1853,
        1964
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "11758": {
      "offset": [
        2952,
        2965
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "11760": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init",
      "offset": [
        2952,
        2965
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "11761": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init",
      "offset": [
        2952,
        2965
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x100"
    },
    "11764": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init",
      "offset": [
        2952,
        2965
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "11765": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init",
      "offset": [
        2952,
        2965
      ],
      "op": "DIV",
      "path": "13"
    },
    "11766": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init",
      "offset": [
        2952,
        2965
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xFF"
    },
    "11768": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init",
      "offset": [
        2952,
        2965
      ],
      "op": "AND",
      "path": "13"
    },
    "11769": {
      "offset": [
        2944,
        3013
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x2E17"
    },
    "11773": {
      "offset": [
        2944,
        3013
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "11774": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init",
      "offset": [
        2944,
        3013
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "11776": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init",
      "offset": [
        2944,
        3013
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "11777": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "11781": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "11783": {
      "op": "SHL"
    },
    "11784": {
      "offset": [
        2944,
        3013
      ],
      "op": "DUP2",
      "path": "13"
    },
    "11785": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init",
      "offset": [
        2944,
        3013
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "11786": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init",
      "offset": [
        2944,
        3013
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "11788": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init",
      "offset": [
        2944,
        3013
      ],
      "op": "ADD",
      "path": "13"
    },
    "11789": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init",
      "offset": [
        2944,
        3013
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0xC98"
    },
    "11793": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init",
      "offset": [
        2944,
        3013
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "11794": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init",
      "offset": [
        2944,
        3013
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x3BD8"
    },
    "11798": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init",
      "jump": "i",
      "offset": [
        2944,
        3013
      ],
      "op": "JUMP",
      "path": "13"
    },
    "11799": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init",
      "offset": [
        2944,
        3013
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "11800": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init",
      "offset": [
        1923,
        1957
      ],
      "op": "PUSH3",
      "path": "14",
      "statement": 166,
      "value": "0x11BF"
    },
    "11804": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init",
      "offset": [
        1923,
        1955
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x326E"
    },
    "11808": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init",
      "jump": "i",
      "offset": [
        1923,
        1957
      ],
      "op": "JUMP",
      "path": "14"
    },
    "11809": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8748,
        9137
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "11810": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11812": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11814": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11816": {
      "op": "SHL"
    },
    "11817": {
      "op": "SUB"
    },
    "11818": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8831,
        8852
      ],
      "op": "DUP3",
      "path": "15",
      "statement": 167
    },
    "11819": {
      "branch": 232,
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8831,
        8852
      ],
      "op": "AND",
      "path": "15"
    },
    "11820": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8823,
        8888
      ],
      "op": "PUSH3",
      "path": "15",
      "value": "0x2E79"
    },
    "11824": {
      "branch": 232,
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8823,
        8888
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "11825": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8823,
        8888
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "11827": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8823,
        8888
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "11828": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "11832": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "11834": {
      "op": "SHL"
    },
    "11835": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8823,
        8888
      ],
      "op": "DUP2",
      "path": "15"
    },
    "11836": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8823,
        8888
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "11837": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11839": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8823,
        8888
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "11841": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8823,
        8888
      ],
      "op": "DUP3",
      "path": "15"
    },
    "11842": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8823,
        8888
      ],
      "op": "ADD",
      "path": "15"
    },
    "11843": {
      "op": "MSTORE"
    },
    "11844": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "11846": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "11848": {
      "op": "DUP3"
    },
    "11849": {
      "op": "ADD"
    },
    "11850": {
      "op": "MSTORE"
    },
    "11851": {
      "op": "PUSH32",
      "value": "0x45524332303A206D696E7420746F20746865207A65726F206164647265737300"
    },
    "11884": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "11886": {
      "op": "DUP3"
    },
    "11887": {
      "op": "ADD"
    },
    "11888": {
      "op": "MSTORE"
    },
    "11889": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "11891": {
      "op": "ADD"
    },
    "11892": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8823,
        8888
      ],
      "op": "PUSH3",
      "path": "15",
      "value": "0xC98"
    },
    "11896": {
      "op": "JUMP"
    },
    "11897": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8823,
        8888
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "11898": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8975,
        8981
      ],
      "op": "DUP1",
      "path": "15",
      "statement": 168
    },
    "11899": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8959,
        8971
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x35"
    },
    "11901": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8959,
        8971
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "11903": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8959,
        8981
      ],
      "op": "DUP3",
      "path": "15"
    },
    "11904": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8959,
        8981
      ],
      "op": "DUP3",
      "path": "15"
    },
    "11905": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8959,
        8981
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "11906": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8959,
        8981
      ],
      "op": "PUSH3",
      "path": "15",
      "value": "0x2E8D"
    },
    "11910": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8959,
        8981
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "11911": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8959,
        8981
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "11912": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8959,
        8981
      ],
      "op": "PUSH3",
      "path": "15",
      "value": "0x37F7"
    },
    "11916": {
      "fn": "ERC20Upgradeable._mint",
      "jump": "i",
      "offset": [
        8959,
        8981
      ],
      "op": "JUMP",
      "path": "15"
    },
    "11917": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8959,
        8981
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "11918": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8959,
        8981
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "11919": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8959,
        8981
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "11920": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8959,
        8981
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "11921": {
      "op": "POP"
    },
    "11922": {
      "op": "POP"
    },
    "11923": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11925": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11927": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11929": {
      "op": "SHL"
    },
    "11930": {
      "op": "SUB"
    },
    "11931": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8991,
        9009
      ],
      "op": "DUP3",
      "path": "15",
      "statement": 169
    },
    "11932": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8991,
        9009
      ],
      "op": "AND",
      "path": "15"
    },
    "11933": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8991,
        9009
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "11935": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8991,
        9009
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "11936": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8991,
        9009
      ],
      "op": "DUP2",
      "path": "15"
    },
    "11937": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8991,
        9009
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "11938": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8991,
        9000
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x33"
    },
    "11940": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8991,
        9009
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "11942": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8991,
        9009
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "11943": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8991,
        9009
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "11945": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8991,
        9009
      ],
      "op": "DUP2",
      "path": "15"
    },
    "11946": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8991,
        9009
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "11947": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8991,
        9019
      ],
      "op": "DUP1",
      "path": "15"
    },
    "11948": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8991,
        9019
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "11949": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9013,
        9019
      ],
      "op": "DUP4",
      "path": "15"
    },
    "11950": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9013,
        9019
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "11951": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8991,
        9009
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "11952": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8991,
        9019
      ],
      "op": "PUSH3",
      "path": "15",
      "value": "0x2EBC"
    },
    "11956": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8991,
        9019
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "11957": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9013,
        9019
      ],
      "op": "DUP5",
      "path": "15"
    },
    "11958": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9013,
        9019
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "11959": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8991,
        9019
      ],
      "op": "PUSH3",
      "path": "15",
      "value": "0x37F7"
    },
    "11963": {
      "fn": "ERC20Upgradeable._mint",
      "jump": "i",
      "offset": [
        8991,
        9019
      ],
      "op": "JUMP",
      "path": "15"
    },
    "11964": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8991,
        9019
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "11965": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8991,
        9019
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "11966": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8991,
        9019
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "11967": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8991,
        9019
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "11968": {
      "op": "POP"
    },
    "11969": {
      "op": "POP"
    },
    "11970": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9034,
        9071
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 170,
      "value": "0x40"
    },
    "11972": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9034,
        9071
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "11973": {
      "op": "DUP2"
    },
    "11974": {
      "op": "DUP2"
    },
    "11975": {
      "op": "MSTORE"
    },
    "11976": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11978": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11980": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11982": {
      "op": "SHL"
    },
    "11983": {
      "op": "SUB"
    },
    "11984": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9034,
        9071
      ],
      "op": "DUP4",
      "path": "15"
    },
    "11985": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9034,
        9071
      ],
      "op": "AND",
      "path": "15"
    },
    "11986": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9034,
        9071
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "11987": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9051,
        9052
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "11989": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9051,
        9052
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "11990": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11992": {
      "op": "DUP1"
    },
    "11993": {
      "op": "MLOAD"
    },
    "11994": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11996": {
      "op": "PUSH3",
      "value": "0x56E0"
    },
    "12000": {
      "op": "DUP4"
    },
    "12001": {
      "op": "CODECOPY"
    },
    "12002": {
      "op": "DUP2"
    },
    "12003": {
      "op": "MLOAD"
    },
    "12004": {
      "op": "SWAP2"
    },
    "12005": {
      "op": "MSTORE"
    },
    "12006": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9034,
        9071
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "12007": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12009": {
      "op": "ADD"
    },
    "12010": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9034,
        9071
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "12012": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9034,
        9071
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "12013": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9034,
        9071
      ],
      "op": "DUP1",
      "path": "15"
    },
    "12014": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9034,
        9071
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "12015": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9034,
        9071
      ],
      "op": "SUB",
      "path": "15"
    },
    "12016": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9034,
        9071
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "12017": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        9034,
        9071
      ],
      "op": "LOG3",
      "path": "15"
    },
    "12018": {
      "fn": "ERC20BurnableUpgradeable.burnFrom",
      "offset": [
        1243,
        1404
      ],
      "op": "POP",
      "path": "17"
    },
    "12019": {
      "fn": "ERC20BurnableUpgradeable.burnFrom",
      "offset": [
        1243,
        1404
      ],
      "op": "POP",
      "path": "17"
    },
    "12020": {
      "fn": "ERC20BurnableUpgradeable.burnFrom",
      "jump": "o",
      "offset": [
        1243,
        1404
      ],
      "op": "JUMP",
      "path": "17"
    },
    "12021": {
      "fn": "Stakeable.calculateStakeReward",
      "offset": [
        5054,
        5854
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "12022": {
      "fn": "Stakeable.calculateStakeReward",
      "offset": [
        5135,
        5142
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "12024": {
      "fn": "Stakeable.calculateStakeReward",
      "offset": [
        5823,
        5836
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 171,
      "value": "0x99"
    },
    "12026": {
      "fn": "Stakeable.calculateStakeReward",
      "offset": [
        5823,
        5836
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "12027": {
      "fn": "Stakeable.calculateStakeReward",
      "offset": [
        5837,
        5844
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xE10"
    },
    "12030": {
      "fn": "Stakeable.calculateStakeReward",
      "offset": [
        5823,
        5844
      ],
      "op": "PUSH3",
      "path": "5",
      "value": "0x2F09"
    },
    "12034": {
      "fn": "Stakeable.calculateStakeReward",
      "offset": [
        5823,
        5844
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "12035": {
      "fn": "Stakeable.calculateStakeReward",
      "offset": [
        5823,
        5844
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "12036": {
      "fn": "Stakeable.calculateStakeReward",
      "offset": [
        5823,
        5844
      ],
      "op": "PUSH3",
      "path": "5",
      "value": "0x3923"
    },
    "12040": {
      "fn": "Stakeable.calculateStakeReward",
      "jump": "i",
      "offset": [
        5823,
        5844
      ],
      "op": "JUMP",
      "path": "5"
    },
    "12041": {
      "fn": "Stakeable.calculateStakeReward",
      "offset": [
        5823,
        5844
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "12042": {
      "fn": "Stakeable.calculateStakeReward",
      "offset": [
        5798,
        5819
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "12044": {
      "fn": "Stakeable.calculateStakeReward",
      "offset": [
        5798,
        5819
      ],
      "op": "DUP4",
      "path": "5"
    },
    "12045": {
      "fn": "Stakeable.calculateStakeReward",
      "offset": [
        5798,
        5819
      ],
      "op": "ADD",
      "path": "5"
    },
    "12046": {
      "fn": "Stakeable.calculateStakeReward",
      "offset": [
        5798,
        5819
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "12047": {
      "fn": "Stakeable.calculateStakeReward",
      "offset": [
        5774,
        5794
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "12049": {
      "fn": "Stakeable.calculateStakeReward",
      "offset": [
        5774,
        5794
      ],
      "op": "DUP5",
      "path": "5"
    },
    "12050": {
      "fn": "Stakeable.calculateStakeReward",
      "offset": [
        5774,
        5794
      ],
      "op": "ADD",
      "path": "5"
    },
    "12051": {
      "fn": "Stakeable.calculateStakeReward",
      "offset": [
        5774,
        5794
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "12052": {
      "fn": "Stakeable.calculateStakeReward",
      "offset": [
        5756,
        5794
      ],
      "op": "PUSH3",
      "path": "5",
      "value": "0x2F1F"
    },
    "12056": {
      "fn": "Stakeable.calculateStakeReward",
      "offset": [
        5756,
        5794
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "12057": {
      "fn": "Stakeable.calculateStakeReward",
      "offset": [
        5756,
        5771
      ],
      "op": "TIMESTAMP",
      "path": "5"
    },
    "12058": {
      "fn": "Stakeable.calculateStakeReward",
      "offset": [
        5756,
        5794
      ],
      "op": "PUSH3",
      "path": "5",
      "value": "0x3863"
    },
    "12062": {
      "fn": "Stakeable.calculateStakeReward",
      "jump": "i",
      "offset": [
        5756,
        5794
      ],
      "op": "JUMP",
      "path": "5"
    },
    "12063": {
      "fn": "Stakeable.calculateStakeReward",
      "offset": [
        5756,
        5794
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "12064": {
      "fn": "Stakeable.calculateStakeReward",
      "offset": [
        5755,
        5819
      ],
      "op": "PUSH3",
      "path": "5",
      "value": "0x2F2B"
    },
    "12068": {
      "fn": "Stakeable.calculateStakeReward",
      "offset": [
        5755,
        5819
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "12069": {
      "fn": "Stakeable.calculateStakeReward",
      "offset": [
        5755,
        5819
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "12070": {
      "fn": "Stakeable.calculateStakeReward",
      "offset": [
        5755,
        5819
      ],
      "op": "PUSH3",
      "path": "5",
      "value": "0x3923"
    },
    "12074": {
      "fn": "Stakeable.calculateStakeReward",
      "jump": "i",
      "offset": [
        5755,
        5819
      ],
      "op": "JUMP",
      "path": "5"
    },
    "12075": {
      "fn": "Stakeable.calculateStakeReward",
      "offset": [
        5755,
        5819
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "12076": {
      "fn": "Stakeable.calculateStakeReward",
      "offset": [
        5755,
        5845
      ],
      "op": "PUSH3",
      "path": "5",
      "value": "0x2F37"
    },
    "12080": {
      "fn": "Stakeable.calculateStakeReward",
      "offset": [
        5755,
        5845
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "12081": {
      "fn": "Stakeable.calculateStakeReward",
      "offset": [
        5755,
        5845
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "12082": {
      "fn": "Stakeable.calculateStakeReward",
      "offset": [
        5755,
        5845
      ],
      "op": "PUSH3",
      "path": "5",
      "value": "0x3945"
    },
    "12086": {
      "fn": "Stakeable.calculateStakeReward",
      "jump": "i",
      "offset": [
        5755,
        5845
      ],
      "op": "JUMP",
      "path": "5"
    },
    "12087": {
      "fn": "Stakeable.calculateStakeReward",
      "offset": [
        5755,
        5845
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "12088": {
      "fn": "Stakeable.calculateStakeReward",
      "offset": [
        5748,
        5845
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "12089": {
      "fn": "Stakeable.calculateStakeReward",
      "offset": [
        5054,
        5854
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "12090": {
      "op": "POP"
    },
    "12091": {
      "op": "POP"
    },
    "12092": {
      "fn": "Stakeable.calculateStakeReward",
      "jump": "o",
      "offset": [
        5054,
        5854
      ],
      "op": "JUMP",
      "path": "5"
    },
    "12093": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6198,
        7370
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "12094": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6390,
        6400
      ],
      "op": "CALLER",
      "path": "5"
    },
    "12095": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6270,
        6277
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "12097": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6383,
        6401
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "12098": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6383,
        6401
      ],
      "op": "DUP2",
      "path": "5"
    },
    "12099": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6383,
        6401
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "12100": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6383,
        6389
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x98"
    },
    "12102": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6383,
        6401
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "12104": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6383,
        6401
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "12105": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6383,
        6401
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "12107": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6383,
        6401
      ],
      "op": "DUP2",
      "path": "5"
    },
    "12108": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6383,
        6401
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "12109": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6383,
        6401
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "12110": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6440,
        6452
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x97"
    },
    "12112": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6440,
        6464
      ],
      "op": "DUP1",
      "path": "5"
    },
    "12113": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6440,
        6464
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "12114": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6270,
        6277
      ],
      "op": "DUP4",
      "path": "5"
    },
    "12115": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6270,
        6277
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "12116": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6440,
        6452
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "12117": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6383,
        6401
      ],
      "op": "DUP4",
      "path": "5"
    },
    "12118": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6383,
        6401
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "12119": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6440,
        6464
      ],
      "op": "DUP2",
      "path": "5"
    },
    "12120": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6440,
        6464
      ],
      "op": "LT",
      "path": "5"
    },
    "12121": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6440,
        6464
      ],
      "op": "PUSH3",
      "path": "5",
      "value": "0x2F67"
    },
    "12125": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6440,
        6464
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "12126": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6440,
        6464
      ],
      "op": "PUSH3",
      "path": "5",
      "value": "0x2F67"
    },
    "12130": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6440,
        6464
      ],
      "op": "PUSH3",
      "path": "5",
      "value": "0x3B86"
    },
    "12134": {
      "fn": "Stakeable._withdrawStake",
      "jump": "i",
      "offset": [
        6440,
        6464
      ],
      "op": "JUMP",
      "path": "5"
    },
    "12135": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6440,
        6464
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "12136": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6440,
        6464
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "12137": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6440,
        6464
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "12139": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6440,
        6464
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "12140": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6440,
        6464
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "12142": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6440,
        6464
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "12144": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6440,
        6464
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "12145": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6440,
        6464
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "12146": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6440,
        6464
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "12148": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6440,
        6464
      ],
      "op": "MUL",
      "path": "5"
    },
    "12149": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6440,
        6464
      ],
      "op": "ADD",
      "path": "5"
    },
    "12150": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6440,
        6479
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "12152": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6440,
        6479
      ],
      "op": "ADD",
      "path": "5"
    },
    "12153": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6480,
        6485
      ],
      "op": "DUP5",
      "path": "5"
    },
    "12154": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6440,
        6486
      ],
      "op": "DUP2",
      "path": "5"
    },
    "12155": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6440,
        6486
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "12156": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6440,
        6486
      ],
      "op": "DUP2",
      "path": "5"
    },
    "12157": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6440,
        6486
      ],
      "op": "LT",
      "path": "5"
    },
    "12158": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6440,
        6486
      ],
      "op": "PUSH3",
      "path": "5",
      "value": "0x2F8C"
    },
    "12162": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6440,
        6486
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "12163": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6440,
        6486
      ],
      "op": "PUSH3",
      "path": "5",
      "value": "0x2F8C"
    },
    "12167": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6440,
        6486
      ],
      "op": "PUSH3",
      "path": "5",
      "value": "0x3B86"
    },
    "12171": {
      "fn": "Stakeable._withdrawStake",
      "jump": "i",
      "offset": [
        6440,
        6486
      ],
      "op": "JUMP",
      "path": "5"
    },
    "12172": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6440,
        6486
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "12173": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6440,
        6486
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "12175": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6440,
        6486
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "12176": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6440,
        6486
      ],
      "op": "DUP3",
      "path": "5"
    },
    "12177": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6440,
        6486
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "12178": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6440,
        6486
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "12180": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6440,
        6486
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "12181": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6440,
        6486
      ],
      "op": "DUP3",
      "path": "5"
    },
    "12182": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6440,
        6486
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "12183": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6440,
        6486
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "12184": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6411,
        6486
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "12186": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6411,
        6486
      ],
      "op": "DUP1",
      "path": "5"
    },
    "12187": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6411,
        6486
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "12188": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6411,
        6486
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x80"
    },
    "12190": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6411,
        6486
      ],
      "op": "DUP2",
      "path": "5"
    },
    "12191": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6411,
        6486
      ],
      "op": "ADD",
      "path": "5"
    },
    "12192": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6411,
        6486
      ],
      "op": "DUP3",
      "path": "5"
    },
    "12193": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6411,
        6486
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "12194": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6440,
        6486
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "12196": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6440,
        6486
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "12197": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6440,
        6486
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "12198": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6440,
        6486
      ],
      "op": "MUL",
      "path": "5"
    },
    "12199": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6440,
        6486
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "12200": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6440,
        6486
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "12201": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6440,
        6486
      ],
      "op": "ADD",
      "path": "5"
    },
    "12202": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6411,
        6486
      ],
      "op": "DUP1",
      "path": "5"
    },
    "12203": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6411,
        6486
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "12204": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12206": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12208": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12210": {
      "op": "SHL"
    },
    "12211": {
      "op": "SUB"
    },
    "12212": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6411,
        6486
      ],
      "op": "AND",
      "path": "5"
    },
    "12213": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6411,
        6486
      ],
      "op": "DUP4",
      "path": "5"
    },
    "12214": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6411,
        6486
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "12215": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6411,
        6486
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "12217": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6411,
        6486
      ],
      "op": "DUP2",
      "path": "5"
    },
    "12218": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6411,
        6486
      ],
      "op": "ADD",
      "path": "5"
    },
    "12219": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6411,
        6486
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "12220": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6411,
        6486
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "12221": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6411,
        6486
      ],
      "op": "DUP4",
      "path": "5"
    },
    "12222": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6411,
        6486
      ],
      "op": "ADD",
      "path": "5"
    },
    "12223": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6411,
        6486
      ],
      "op": "DUP5",
      "path": "5"
    },
    "12224": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6411,
        6486
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "12225": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6411,
        6486
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "12226": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6411,
        6486
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "12228": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6411,
        6486
      ],
      "op": "DUP2",
      "path": "5"
    },
    "12229": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6411,
        6486
      ],
      "op": "ADD",
      "path": "5"
    },
    "12230": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6411,
        6486
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "12231": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6411,
        6486
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "12232": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6411,
        6486
      ],
      "op": "DUP4",
      "path": "5"
    },
    "12233": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6411,
        6486
      ],
      "op": "ADD",
      "path": "5"
    },
    "12234": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6411,
        6486
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "12235": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6411,
        6486
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "12236": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6411,
        6486
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "12237": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6411,
        6486
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "12238": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6411,
        6486
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3"
    },
    "12240": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6411,
        6486
      ],
      "op": "ADD",
      "path": "5"
    },
    "12241": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6411,
        6486
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "12242": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6411,
        6486
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x60"
    },
    "12244": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6411,
        6486
      ],
      "op": "DUP3",
      "path": "5"
    },
    "12245": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6411,
        6486
      ],
      "op": "ADD",
      "path": "5"
    },
    "12246": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6411,
        6486
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "12247": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6411,
        6486
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "12248": {
      "op": "POP"
    },
    "12249": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6504,
        6534
      ],
      "op": "DUP6",
      "path": "5",
      "statement": 172
    },
    "12250": {
      "op": "GT"
    },
    "12251": {
      "branch": 239,
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6504,
        6534
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "12252": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6496,
        6589
      ],
      "op": "PUSH3",
      "path": "5",
      "value": "0x3044"
    },
    "12256": {
      "branch": 239,
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6496,
        6589
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "12257": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6496,
        6589
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "12259": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6496,
        6589
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "12260": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "12264": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "12266": {
      "op": "SHL"
    },
    "12267": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6496,
        6589
      ],
      "op": "DUP2",
      "path": "5"
    },
    "12268": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6496,
        6589
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "12269": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12271": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6496,
        6589
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "12273": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6496,
        6589
      ],
      "op": "DUP3",
      "path": "5"
    },
    "12274": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6496,
        6589
      ],
      "op": "ADD",
      "path": "5"
    },
    "12275": {
      "op": "MSTORE"
    },
    "12276": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "12278": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "12280": {
      "op": "DUP3"
    },
    "12281": {
      "op": "ADD"
    },
    "12282": {
      "op": "MSTORE"
    },
    "12283": {
      "op": "PUSH32",
      "value": "0x5374616B696E673A2043616E6E6F74207769746864726177206D6F7265207468"
    },
    "12316": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "12318": {
      "op": "DUP3"
    },
    "12319": {
      "op": "ADD"
    },
    "12320": {
      "op": "MSTORE"
    },
    "12321": {
      "op": "PUSH18",
      "value": "0x185B881E5BDD481A185D99481CDD185AD959"
    },
    "12340": {
      "op": "PUSH1",
      "value": "0x72"
    },
    "12342": {
      "op": "SHL"
    },
    "12343": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "12345": {
      "op": "DUP3"
    },
    "12346": {
      "op": "ADD"
    },
    "12347": {
      "op": "MSTORE"
    },
    "12348": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "12350": {
      "op": "ADD"
    },
    "12351": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6496,
        6589
      ],
      "op": "PUSH3",
      "path": "5",
      "value": "0xC98"
    },
    "12355": {
      "op": "JUMP"
    },
    "12356": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6496,
        6589
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "12357": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6677,
        6691
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "12359": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6694,
        6729
      ],
      "op": "PUSH3",
      "path": "5",
      "value": "0x3051"
    },
    "12363": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6715,
        6728
      ],
      "op": "DUP3",
      "path": "5"
    },
    "12364": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6694,
        6714
      ],
      "op": "PUSH3",
      "path": "5",
      "value": "0x2EF5"
    },
    "12368": {
      "fn": "Stakeable._withdrawStake",
      "jump": "i",
      "offset": [
        6694,
        6729
      ],
      "op": "JUMP",
      "path": "5"
    },
    "12369": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6694,
        6729
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "12370": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6677,
        6729
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "12371": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6677,
        6729
      ],
      "op": "POP",
      "path": "5"
    },
    "12372": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6840,
        6846
      ],
      "op": "DUP6",
      "path": "5",
      "statement": 173
    },
    "12373": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6817,
        6830
      ],
      "op": "DUP3",
      "path": "5"
    },
    "12374": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6817,
        6837
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "12376": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6817,
        6837
      ],
      "op": "ADD",
      "path": "5"
    },
    "12377": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6817,
        6837
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "12378": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6817,
        6846
      ],
      "op": "PUSH3",
      "path": "5",
      "value": "0x3065"
    },
    "12382": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6817,
        6846
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "12383": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6817,
        6846
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "12384": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6817,
        6846
      ],
      "op": "PUSH3",
      "path": "5",
      "value": "0x3863"
    },
    "12388": {
      "fn": "Stakeable._withdrawStake",
      "jump": "i",
      "offset": [
        6817,
        6846
      ],
      "op": "JUMP",
      "path": "5"
    },
    "12389": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6817,
        6846
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "12390": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6794,
        6814
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "12392": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6794,
        6814
      ],
      "op": "DUP4",
      "path": "5"
    },
    "12393": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6794,
        6814
      ],
      "op": "ADD",
      "path": "5"
    },
    "12394": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6794,
        6846
      ],
      "op": "DUP2",
      "path": "5"
    },
    "12395": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6794,
        6846
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "12396": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6794,
        6846
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "12397": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6931,
        7331
      ],
      "op": "PUSH3",
      "path": "5",
      "value": "0x30E1"
    },
    "12401": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6931,
        7331
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "12402": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6982,
        6994
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 174,
      "value": "0x97"
    },
    "12404": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6995,
        7005
      ],
      "op": "DUP4",
      "path": "5"
    },
    "12405": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6982,
        7006
      ],
      "op": "DUP2",
      "path": "5"
    },
    "12406": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6982,
        7006
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "12407": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6982,
        7006
      ],
      "op": "DUP2",
      "path": "5"
    },
    "12408": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6982,
        7006
      ],
      "op": "LT",
      "path": "5"
    },
    "12409": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6982,
        7006
      ],
      "op": "PUSH3",
      "path": "5",
      "value": "0x3087"
    },
    "12413": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6982,
        7006
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "12414": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6982,
        7006
      ],
      "op": "PUSH3",
      "path": "5",
      "value": "0x3087"
    },
    "12418": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6982,
        7006
      ],
      "op": "PUSH3",
      "path": "5",
      "value": "0x3B86"
    },
    "12422": {
      "fn": "Stakeable._withdrawStake",
      "jump": "i",
      "offset": [
        6982,
        7006
      ],
      "op": "JUMP",
      "path": "5"
    },
    "12423": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6982,
        7006
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "12424": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6982,
        7006
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "12425": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6982,
        7006
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "12427": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6982,
        7006
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "12428": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6982,
        7006
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "12430": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6982,
        7006
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "12432": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6982,
        7006
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "12433": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6982,
        7006
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "12434": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6982,
        7006
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "12436": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6982,
        7006
      ],
      "op": "MUL",
      "path": "5"
    },
    "12437": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6982,
        7006
      ],
      "op": "ADD",
      "path": "5"
    },
    "12438": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6982,
        7021
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "12440": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6982,
        7021
      ],
      "op": "ADD",
      "path": "5"
    },
    "12441": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        7022,
        7027
      ],
      "op": "DUP6",
      "path": "5"
    },
    "12442": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6982,
        7028
      ],
      "op": "DUP2",
      "path": "5"
    },
    "12443": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6982,
        7028
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "12444": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6982,
        7028
      ],
      "op": "DUP2",
      "path": "5"
    },
    "12445": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6982,
        7028
      ],
      "op": "LT",
      "path": "5"
    },
    "12446": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6982,
        7028
      ],
      "op": "PUSH3",
      "path": "5",
      "value": "0x30AC"
    },
    "12450": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6982,
        7028
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "12451": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6982,
        7028
      ],
      "op": "PUSH3",
      "path": "5",
      "value": "0x30AC"
    },
    "12455": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6982,
        7028
      ],
      "op": "PUSH3",
      "path": "5",
      "value": "0x3B86"
    },
    "12459": {
      "fn": "Stakeable._withdrawStake",
      "jump": "i",
      "offset": [
        6982,
        7028
      ],
      "op": "JUMP",
      "path": "5"
    },
    "12460": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6982,
        7028
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "12461": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6982,
        7028
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "12463": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6982,
        7028
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "12464": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6982,
        7028
      ],
      "op": "DUP3",
      "path": "5"
    },
    "12465": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6982,
        7028
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "12466": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6982,
        7028
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "12468": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6982,
        7028
      ],
      "op": "DUP3",
      "path": "5"
    },
    "12469": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6982,
        7028
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "12470": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6982,
        7028
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "12472": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6982,
        7028
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "12473": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6982,
        7028
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "12474": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6982,
        7028
      ],
      "op": "MUL",
      "path": "5"
    },
    "12475": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6982,
        7028
      ],
      "op": "ADD",
      "path": "5"
    },
    "12476": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6975,
        7028
      ],
      "op": "DUP1",
      "path": "5"
    },
    "12477": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6975,
        7028
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "12478": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12480": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12482": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12484": {
      "op": "SHL"
    },
    "12485": {
      "op": "SUB"
    },
    "12486": {
      "op": "NOT"
    },
    "12487": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6975,
        7028
      ],
      "op": "AND",
      "path": "5"
    },
    "12488": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6975,
        7028
      ],
      "op": "DUP2",
      "path": "5"
    },
    "12489": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6975,
        7028
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "12490": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6975,
        7028
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "12492": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6975,
        7028
      ],
      "op": "DUP2",
      "path": "5"
    },
    "12493": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6975,
        7028
      ],
      "op": "ADD",
      "path": "5"
    },
    "12494": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6975,
        7028
      ],
      "op": "DUP3",
      "path": "5"
    },
    "12495": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6975,
        7028
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "12496": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6975,
        7028
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "12497": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6975,
        7028
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "12499": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6975,
        7028
      ],
      "op": "DUP2",
      "path": "5"
    },
    "12500": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6975,
        7028
      ],
      "op": "ADD",
      "path": "5"
    },
    "12501": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6975,
        7028
      ],
      "op": "DUP3",
      "path": "5"
    },
    "12502": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6975,
        7028
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "12503": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6975,
        7028
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "12504": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6975,
        7028
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3"
    },
    "12506": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6975,
        7028
      ],
      "op": "ADD",
      "path": "5"
    },
    "12507": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6975,
        7028
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "12508": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6931,
        7331
      ],
      "op": "PUSH3",
      "path": "5",
      "value": "0x3188"
    },
    "12512": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6931,
        7331
      ],
      "op": "JUMP",
      "path": "5"
    },
    "12513": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6931,
        7331
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "12514": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        7174,
        7187
      ],
      "op": "DUP2",
      "path": "5",
      "statement": 175
    },
    "12515": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        7174,
        7194
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "12517": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        7174,
        7194
      ],
      "op": "ADD",
      "path": "5"
    },
    "12518": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        7174,
        7194
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "12519": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        7118,
        7130
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x97"
    },
    "12521": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        7131,
        7141
      ],
      "op": "DUP5",
      "path": "5"
    },
    "12522": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        7118,
        7142
      ],
      "op": "DUP2",
      "path": "5"
    },
    "12523": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        7118,
        7142
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "12524": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        7118,
        7142
      ],
      "op": "DUP2",
      "path": "5"
    },
    "12525": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        7118,
        7142
      ],
      "op": "LT",
      "path": "5"
    },
    "12526": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        7118,
        7142
      ],
      "op": "PUSH3",
      "path": "5",
      "value": "0x30FC"
    },
    "12530": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        7118,
        7142
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "12531": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        7118,
        7142
      ],
      "op": "PUSH3",
      "path": "5",
      "value": "0x30FC"
    },
    "12535": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        7118,
        7142
      ],
      "op": "PUSH3",
      "path": "5",
      "value": "0x3B86"
    },
    "12539": {
      "fn": "Stakeable._withdrawStake",
      "jump": "i",
      "offset": [
        7118,
        7142
      ],
      "op": "JUMP",
      "path": "5"
    },
    "12540": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        7118,
        7142
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "12541": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        7118,
        7142
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "12542": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        7118,
        7142
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "12544": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        7118,
        7142
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "12545": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        7118,
        7142
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "12547": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        7118,
        7142
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "12549": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        7118,
        7142
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "12550": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        7118,
        7142
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "12551": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        7118,
        7142
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "12553": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        7118,
        7142
      ],
      "op": "MUL",
      "path": "5"
    },
    "12554": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        7118,
        7142
      ],
      "op": "ADD",
      "path": "5"
    },
    "12555": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        7118,
        7157
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "12557": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        7118,
        7157
      ],
      "op": "ADD",
      "path": "5"
    },
    "12558": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        7158,
        7163
      ],
      "op": "DUP7",
      "path": "5"
    },
    "12559": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        7118,
        7164
      ],
      "op": "DUP2",
      "path": "5"
    },
    "12560": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        7118,
        7164
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "12561": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        7118,
        7164
      ],
      "op": "DUP2",
      "path": "5"
    },
    "12562": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        7118,
        7164
      ],
      "op": "LT",
      "path": "5"
    },
    "12563": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        7118,
        7164
      ],
      "op": "PUSH3",
      "path": "5",
      "value": "0x3121"
    },
    "12567": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        7118,
        7164
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "12568": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        7118,
        7164
      ],
      "op": "PUSH3",
      "path": "5",
      "value": "0x3121"
    },
    "12572": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        7118,
        7164
      ],
      "op": "PUSH3",
      "path": "5",
      "value": "0x3B86"
    },
    "12576": {
      "fn": "Stakeable._withdrawStake",
      "jump": "i",
      "offset": [
        7118,
        7164
      ],
      "op": "JUMP",
      "path": "5"
    },
    "12577": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        7118,
        7164
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "12578": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        7118,
        7164
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "12579": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        7118,
        7164
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "12581": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        7118,
        7164
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "12582": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        7118,
        7164
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "12584": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        7118,
        7164
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "12586": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        7118,
        7164
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "12587": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        7118,
        7164
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "12588": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        7118,
        7164
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "12590": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        7118,
        7164
      ],
      "op": "MUL",
      "path": "5"
    },
    "12591": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        7118,
        7164
      ],
      "op": "ADD",
      "path": "5"
    },
    "12592": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        7118,
        7171
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "12594": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        7118,
        7171
      ],
      "op": "ADD",
      "path": "5"
    },
    "12595": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        7118,
        7194
      ],
      "op": "DUP2",
      "path": "5"
    },
    "12596": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        7118,
        7194
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "12597": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        7118,
        7194
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "12598": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        7118,
        7194
      ],
      "op": "POP",
      "path": "5"
    },
    "12599": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        7300,
        7315
      ],
      "op": "TIMESTAMP",
      "path": "5",
      "statement": 176
    },
    "12600": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        7245,
        7257
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x97"
    },
    "12602": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        7258,
        7268
      ],
      "op": "DUP5",
      "path": "5"
    },
    "12603": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        7245,
        7269
      ],
      "op": "DUP2",
      "path": "5"
    },
    "12604": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        7245,
        7269
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "12605": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        7245,
        7269
      ],
      "op": "DUP2",
      "path": "5"
    },
    "12606": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        7245,
        7269
      ],
      "op": "LT",
      "path": "5"
    },
    "12607": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        7245,
        7269
      ],
      "op": "PUSH3",
      "path": "5",
      "value": "0x314D"
    },
    "12611": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        7245,
        7269
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "12612": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        7245,
        7269
      ],
      "op": "PUSH3",
      "path": "5",
      "value": "0x314D"
    },
    "12616": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        7245,
        7269
      ],
      "op": "PUSH3",
      "path": "5",
      "value": "0x3B86"
    },
    "12620": {
      "fn": "Stakeable._withdrawStake",
      "jump": "i",
      "offset": [
        7245,
        7269
      ],
      "op": "JUMP",
      "path": "5"
    },
    "12621": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        7245,
        7269
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "12622": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        7245,
        7269
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "12623": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        7245,
        7269
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "12625": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        7245,
        7269
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "12626": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        7245,
        7269
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "12628": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        7245,
        7269
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "12630": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        7245,
        7269
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "12631": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        7245,
        7269
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "12632": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        7245,
        7269
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "12634": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        7245,
        7269
      ],
      "op": "MUL",
      "path": "5"
    },
    "12635": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        7245,
        7269
      ],
      "op": "ADD",
      "path": "5"
    },
    "12636": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        7245,
        7284
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "12638": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        7245,
        7284
      ],
      "op": "ADD",
      "path": "5"
    },
    "12639": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        7285,
        7290
      ],
      "op": "DUP7",
      "path": "5"
    },
    "12640": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        7245,
        7291
      ],
      "op": "DUP2",
      "path": "5"
    },
    "12641": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        7245,
        7291
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "12642": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        7245,
        7291
      ],
      "op": "DUP2",
      "path": "5"
    },
    "12643": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        7245,
        7291
      ],
      "op": "LT",
      "path": "5"
    },
    "12644": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        7245,
        7291
      ],
      "op": "PUSH3",
      "path": "5",
      "value": "0x3172"
    },
    "12648": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        7245,
        7291
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "12649": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        7245,
        7291
      ],
      "op": "PUSH3",
      "path": "5",
      "value": "0x3172"
    },
    "12653": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        7245,
        7291
      ],
      "op": "PUSH3",
      "path": "5",
      "value": "0x3B86"
    },
    "12657": {
      "fn": "Stakeable._withdrawStake",
      "jump": "i",
      "offset": [
        7245,
        7291
      ],
      "op": "JUMP",
      "path": "5"
    },
    "12658": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        7245,
        7291
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "12659": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        7245,
        7291
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "12660": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        7245,
        7291
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "12662": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        7245,
        7291
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "12663": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        7245,
        7291
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "12665": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        7245,
        7291
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "12667": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        7245,
        7291
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "12668": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        7245,
        7291
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "12669": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        7245,
        7291
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "12671": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        7245,
        7291
      ],
      "op": "MUL",
      "path": "5"
    },
    "12672": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        7245,
        7291
      ],
      "op": "ADD",
      "path": "5"
    },
    "12673": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        7245,
        7297
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "12675": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        7245,
        7297
      ],
      "op": "ADD",
      "path": "5"
    },
    "12676": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        7245,
        7315
      ],
      "op": "DUP2",
      "path": "5"
    },
    "12677": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        7245,
        7315
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "12678": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        7245,
        7315
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "12679": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        7245,
        7315
      ],
      "op": "POP",
      "path": "5"
    },
    "12680": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6931,
        7331
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "12681": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        7349,
        7362
      ],
      "op": "PUSH3",
      "path": "5",
      "statement": 177,
      "value": "0x3194"
    },
    "12685": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        7356,
        7362
      ],
      "op": "DUP2",
      "path": "5"
    },
    "12686": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        7349,
        7355
      ],
      "op": "DUP8",
      "path": "5"
    },
    "12687": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        7349,
        7362
      ],
      "op": "PUSH3",
      "path": "5",
      "value": "0x37F7"
    },
    "12691": {
      "fn": "Stakeable._withdrawStake",
      "jump": "i",
      "offset": [
        7349,
        7362
      ],
      "op": "JUMP",
      "path": "5"
    },
    "12692": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        7349,
        7362
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "12693": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        7342,
        7362
      ],
      "op": "SWAP7",
      "path": "5"
    },
    "12694": {
      "fn": "Stakeable._withdrawStake",
      "offset": [
        6198,
        7370
      ],
      "op": "SWAP6",
      "path": "5"
    },
    "12695": {
      "op": "POP"
    },
    "12696": {
      "op": "POP"
    },
    "12697": {
      "op": "POP"
    },
    "12698": {
      "op": "POP"
    },
    "12699": {
      "op": "POP"
    },
    "12700": {
      "op": "POP"
    },
    "12701": {
      "fn": "Stakeable._withdrawStake",
      "jump": "o",
      "offset": [
        6198,
        7370
      ],
      "op": "JUMP",
      "path": "5"
    },
    "12702": {
      "fn": "Stakeable._addStakeholder",
      "offset": [
        2973,
        3477
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "12703": {
      "fn": "Stakeable._addStakeholder",
      "offset": [
        3130,
        3142
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 178,
      "value": "0x97"
    },
    "12705": {
      "fn": "Stakeable._addStakeholder",
      "offset": [
        3130,
        3149
      ],
      "op": "DUP1",
      "path": "5"
    },
    "12706": {
      "fn": "Stakeable._addStakeholder",
      "offset": [
        3130,
        3149
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "12707": {
      "fn": "Stakeable._addStakeholder",
      "offset": [
        3130,
        3149
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "12709": {
      "fn": "Stakeable._addStakeholder",
      "offset": [
        3130,
        3149
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "12710": {
      "fn": "Stakeable._addStakeholder",
      "offset": [
        3130,
        3149
      ],
      "op": "DUP2",
      "path": "5"
    },
    "12711": {
      "fn": "Stakeable._addStakeholder",
      "offset": [
        3130,
        3149
      ],
      "op": "ADD",
      "path": "5"
    },
    "12712": {
      "fn": "Stakeable._addStakeholder",
      "offset": [
        3130,
        3149
      ],
      "op": "DUP1",
      "path": "5"
    },
    "12713": {
      "fn": "Stakeable._addStakeholder",
      "offset": [
        3130,
        3149
      ],
      "op": "DUP4",
      "path": "5"
    },
    "12714": {
      "fn": "Stakeable._addStakeholder",
      "offset": [
        3130,
        3149
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "12715": {
      "fn": "Stakeable._addStakeholder",
      "offset": [
        3032,
        3039
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "12717": {
      "fn": "Stakeable._addStakeholder",
      "offset": [
        3130,
        3149
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "12718": {
      "fn": "Stakeable._addStakeholder",
      "offset": [
        3130,
        3149
      ],
      "op": "DUP4",
      "path": "5"
    },
    "12719": {
      "fn": "Stakeable._addStakeholder",
      "offset": [
        3130,
        3149
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "12720": {
      "fn": "Stakeable._addStakeholder",
      "offset": [
        3032,
        3039
      ],
      "op": "DUP3",
      "path": "5"
    },
    "12721": {
      "fn": "Stakeable._addStakeholder",
      "offset": [
        3032,
        3039
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "12722": {
      "fn": "Stakeable._addStakeholder",
      "offset": [
        3249,
        3272
      ],
      "op": "PUSH3",
      "path": "5",
      "value": "0x31BC"
    },
    "12726": {
      "fn": "Stakeable._addStakeholder",
      "offset": [
        3249,
        3272
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "12727": {
      "fn": "Stakeable._addStakeholder",
      "offset": [
        3249,
        3272
      ],
      "op": "PUSH3",
      "path": "5",
      "value": "0x3863"
    },
    "12731": {
      "fn": "Stakeable._addStakeholder",
      "jump": "i",
      "offset": [
        3249,
        3272
      ],
      "op": "JUMP",
      "path": "5"
    },
    "12732": {
      "fn": "Stakeable._addStakeholder",
      "offset": [
        3249,
        3272
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "12733": {
      "fn": "Stakeable._addStakeholder",
      "offset": [
        3229,
        3272
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "12734": {
      "fn": "Stakeable._addStakeholder",
      "offset": [
        3229,
        3272
      ],
      "op": "POP",
      "path": "5"
    },
    "12735": {
      "fn": "Stakeable._addStakeholder",
      "offset": [
        3360,
        3366
      ],
      "op": "DUP3",
      "path": "5",
      "statement": 179
    },
    "12736": {
      "fn": "Stakeable._addStakeholder",
      "offset": [
        3329,
        3341
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x97"
    },
    "12738": {
      "fn": "Stakeable._addStakeholder",
      "offset": [
        3342,
        3351
      ],
      "op": "DUP3",
      "path": "5"
    },
    "12739": {
      "fn": "Stakeable._addStakeholder",
      "offset": [
        3329,
        3352
      ],
      "op": "DUP2",
      "path": "5"
    },
    "12740": {
      "fn": "Stakeable._addStakeholder",
      "offset": [
        3329,
        3352
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "12741": {
      "fn": "Stakeable._addStakeholder",
      "offset": [
        3329,
        3352
      ],
      "op": "DUP2",
      "path": "5"
    },
    "12742": {
      "fn": "Stakeable._addStakeholder",
      "offset": [
        3329,
        3352
      ],
      "op": "LT",
      "path": "5"
    },
    "12743": {
      "fn": "Stakeable._addStakeholder",
      "offset": [
        3329,
        3352
      ],
      "op": "PUSH3",
      "path": "5",
      "value": "0x31D5"
    },
    "12747": {
      "fn": "Stakeable._addStakeholder",
      "offset": [
        3329,
        3352
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "12748": {
      "fn": "Stakeable._addStakeholder",
      "offset": [
        3329,
        3352
      ],
      "op": "PUSH3",
      "path": "5",
      "value": "0x31D5"
    },
    "12752": {
      "fn": "Stakeable._addStakeholder",
      "offset": [
        3329,
        3352
      ],
      "op": "PUSH3",
      "path": "5",
      "value": "0x3B86"
    },
    "12756": {
      "fn": "Stakeable._addStakeholder",
      "jump": "i",
      "offset": [
        3329,
        3352
      ],
      "op": "JUMP",
      "path": "5"
    },
    "12757": {
      "fn": "Stakeable._addStakeholder",
      "offset": [
        3329,
        3352
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "12758": {
      "fn": "Stakeable._addStakeholder",
      "offset": [
        3329,
        3352
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "12760": {
      "fn": "Stakeable._addStakeholder",
      "offset": [
        3329,
        3352
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "12761": {
      "fn": "Stakeable._addStakeholder",
      "offset": [
        3329,
        3352
      ],
      "op": "DUP3",
      "path": "5"
    },
    "12762": {
      "fn": "Stakeable._addStakeholder",
      "offset": [
        3329,
        3352
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "12763": {
      "fn": "Stakeable._addStakeholder",
      "offset": [
        3329,
        3352
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "12765": {
      "fn": "Stakeable._addStakeholder",
      "offset": [
        3329,
        3352
      ],
      "op": "DUP1",
      "path": "5"
    },
    "12766": {
      "fn": "Stakeable._addStakeholder",
      "offset": [
        3329,
        3352
      ],
      "op": "DUP4",
      "path": "5"
    },
    "12767": {
      "fn": "Stakeable._addStakeholder",
      "offset": [
        3329,
        3352
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "12768": {
      "fn": "Stakeable._addStakeholder",
      "offset": [
        3329,
        3352
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "12770": {
      "fn": "Stakeable._addStakeholder",
      "offset": [
        3329,
        3352
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "12771": {
      "fn": "Stakeable._addStakeholder",
      "offset": [
        3329,
        3352
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "12772": {
      "fn": "Stakeable._addStakeholder",
      "offset": [
        3329,
        3352
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "12773": {
      "fn": "Stakeable._addStakeholder",
      "offset": [
        3329,
        3352
      ],
      "op": "MUL",
      "path": "5"
    },
    "12774": {
      "fn": "Stakeable._addStakeholder",
      "offset": [
        3329,
        3352
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "12775": {
      "fn": "Stakeable._addStakeholder",
      "offset": [
        3329,
        3352
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "12776": {
      "fn": "Stakeable._addStakeholder",
      "offset": [
        3329,
        3352
      ],
      "op": "ADD",
      "path": "5"
    },
    "12777": {
      "fn": "Stakeable._addStakeholder",
      "offset": [
        3329,
        3366
      ],
      "op": "DUP1",
      "path": "5"
    },
    "12778": {
      "fn": "Stakeable._addStakeholder",
      "offset": [
        3329,
        3366
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "12779": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12781": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12783": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12785": {
      "op": "SHL"
    },
    "12786": {
      "op": "SUB"
    },
    "12787": {
      "op": "NOT"
    },
    "12788": {
      "fn": "Stakeable._addStakeholder",
      "offset": [
        3329,
        3366
      ],
      "op": "AND",
      "path": "5"
    },
    "12789": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12791": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12793": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12795": {
      "op": "SHL"
    },
    "12796": {
      "op": "SUB"
    },
    "12797": {
      "fn": "Stakeable._addStakeholder",
      "offset": [
        3329,
        3366
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "12798": {
      "fn": "Stakeable._addStakeholder",
      "offset": [
        3329,
        3366
      ],
      "op": "DUP6",
      "path": "5"
    },
    "12799": {
      "fn": "Stakeable._addStakeholder",
      "offset": [
        3329,
        3366
      ],
      "op": "AND",
      "path": "5"
    },
    "12800": {
      "fn": "Stakeable._addStakeholder",
      "offset": [
        3329,
        3366
      ],
      "op": "OR",
      "path": "5"
    },
    "12801": {
      "fn": "Stakeable._addStakeholder",
      "offset": [
        3329,
        3366
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "12802": {
      "fn": "Stakeable._addStakeholder",
      "offset": [
        3329,
        3366
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "12803": {
      "fn": "Stakeable._addStakeholder",
      "offset": [
        3417,
        3431
      ],
      "op": "SWAP5",
      "path": "5",
      "statement": 180
    },
    "12804": {
      "fn": "Stakeable._addStakeholder",
      "offset": [
        3417,
        3431
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "12805": {
      "fn": "Stakeable._addStakeholder",
      "offset": [
        3417,
        3431
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "12806": {
      "fn": "Stakeable._addStakeholder",
      "offset": [
        3417,
        3431
      ],
      "op": "AND",
      "path": "5"
    },
    "12807": {
      "fn": "Stakeable._addStakeholder",
      "offset": [
        3417,
        3431
      ],
      "op": "DUP2",
      "path": "5"
    },
    "12808": {
      "fn": "Stakeable._addStakeholder",
      "offset": [
        3417,
        3431
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "12809": {
      "fn": "Stakeable._addStakeholder",
      "offset": [
        3417,
        3423
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x98"
    },
    "12811": {
      "fn": "Stakeable._addStakeholder",
      "offset": [
        3417,
        3431
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "12812": {
      "fn": "Stakeable._addStakeholder",
      "offset": [
        3417,
        3431
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "12813": {
      "fn": "Stakeable._addStakeholder",
      "offset": [
        3417,
        3431
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "12814": {
      "fn": "Stakeable._addStakeholder",
      "offset": [
        3417,
        3431
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "12816": {
      "fn": "Stakeable._addStakeholder",
      "offset": [
        3417,
        3431
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "12817": {
      "fn": "Stakeable._addStakeholder",
      "offset": [
        3417,
        3431
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "12818": {
      "fn": "Stakeable._addStakeholder",
      "offset": [
        3417,
        3431
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "12819": {
      "fn": "Stakeable._addStakeholder",
      "offset": [
        3417,
        3443
      ],
      "op": "DUP3",
      "path": "5"
    },
    "12820": {
      "fn": "Stakeable._addStakeholder",
      "offset": [
        3417,
        3443
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "12821": {
      "fn": "Stakeable._addStakeholder",
      "offset": [
        3417,
        3443
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "12822": {
      "op": "POP"
    },
    "12823": {
      "fn": "Stakeable._addStakeholder",
      "offset": [
        3417,
        3431
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "12824": {
      "fn": "Stakeable._addStakeholder",
      "jump": "o",
      "offset": [
        2973,
        3477
      ],
      "op": "JUMP",
      "path": "5"
    },
    "12825": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2269,
        2428
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "12826": {
      "offset": [
        2952,
        2965
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "12828": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2952,
        2965
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "12829": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2952,
        2965
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x100"
    },
    "12832": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2952,
        2965
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "12833": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2952,
        2965
      ],
      "op": "DIV",
      "path": "13"
    },
    "12834": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2952,
        2965
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xFF"
    },
    "12836": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2952,
        2965
      ],
      "op": "AND",
      "path": "13"
    },
    "12837": {
      "offset": [
        2944,
        3013
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x3243"
    },
    "12841": {
      "offset": [
        2944,
        3013
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "12842": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2944,
        3013
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "12844": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2944,
        3013
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "12845": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "12849": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "12851": {
      "op": "SHL"
    },
    "12852": {
      "offset": [
        2944,
        3013
      ],
      "op": "DUP2",
      "path": "13"
    },
    "12853": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2944,
        3013
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "12854": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2944,
        3013
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "12856": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2944,
        3013
      ],
      "op": "ADD",
      "path": "13"
    },
    "12857": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2944,
        3013
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0xC98"
    },
    "12861": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2944,
        3013
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "12862": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2944,
        3013
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x3BD8"
    },
    "12866": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "jump": "i",
      "offset": [
        2944,
        3013
      ],
      "op": "JUMP",
      "path": "13"
    },
    "12867": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2944,
        3013
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "12868": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2381,
        2394
      ],
      "op": "DUP2",
      "path": "15",
      "statement": 181
    },
    "12869": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2381,
        2394
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "12870": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2381,
        2394
      ],
      "op": "PUSH3",
      "path": "15",
      "value": "0x3258"
    },
    "12874": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2381,
        2394
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "12875": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2381,
        2386
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x36"
    },
    "12877": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2381,
        2386
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "12878": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2381,
        2394
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "12880": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2381,
        2394
      ],
      "op": "DUP6",
      "path": "15"
    },
    "12881": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2381,
        2394
      ],
      "op": "ADD",
      "path": "15"
    },
    "12882": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2381,
        2394
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "12883": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2381,
        2394
      ],
      "op": "PUSH3",
      "path": "15",
      "value": "0x32AD"
    },
    "12887": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "jump": "i",
      "offset": [
        2381,
        2394
      ],
      "op": "JUMP",
      "path": "15"
    },
    "12888": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2381,
        2394
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "12889": {
      "op": "POP"
    },
    "12890": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2404,
        2421
      ],
      "op": "DUP1",
      "path": "15",
      "statement": 182
    },
    "12891": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2404,
        2421
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "12892": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2404,
        2421
      ],
      "op": "PUSH3",
      "path": "15",
      "value": "0x215F"
    },
    "12896": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2404,
        2421
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "12897": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2404,
        2411
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x37"
    },
    "12899": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2404,
        2411
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "12900": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2404,
        2421
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "12902": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2404,
        2421
      ],
      "op": "DUP5",
      "path": "15"
    },
    "12903": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2404,
        2421
      ],
      "op": "ADD",
      "path": "15"
    },
    "12904": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2404,
        2421
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "12905": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2404,
        2421
      ],
      "op": "PUSH3",
      "path": "15",
      "value": "0x32AD"
    },
    "12909": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "jump": "i",
      "offset": [
        2404,
        2421
      ],
      "op": "JUMP",
      "path": "15"
    },
    "12910": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init_unchained",
      "offset": [
        1970,
        2079
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "12911": {
      "offset": [
        2952,
        2965
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "12913": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init_unchained",
      "offset": [
        2952,
        2965
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "12914": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init_unchained",
      "offset": [
        2952,
        2965
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x100"
    },
    "12917": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init_unchained",
      "offset": [
        2952,
        2965
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "12918": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init_unchained",
      "offset": [
        2952,
        2965
      ],
      "op": "DIV",
      "path": "13"
    },
    "12919": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init_unchained",
      "offset": [
        2952,
        2965
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xFF"
    },
    "12921": {
      "branch": 235,
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init_unchained",
      "offset": [
        2952,
        2965
      ],
      "op": "AND",
      "path": "13"
    },
    "12922": {
      "offset": [
        2944,
        3013
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x3298"
    },
    "12926": {
      "branch": 235,
      "offset": [
        2944,
        3013
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "12927": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init_unchained",
      "offset": [
        2944,
        3013
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "12929": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init_unchained",
      "offset": [
        2944,
        3013
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "12930": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "12934": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "12936": {
      "op": "SHL"
    },
    "12937": {
      "offset": [
        2944,
        3013
      ],
      "op": "DUP2",
      "path": "13"
    },
    "12938": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init_unchained",
      "offset": [
        2944,
        3013
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "12939": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init_unchained",
      "offset": [
        2944,
        3013
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "12941": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init_unchained",
      "offset": [
        2944,
        3013
      ],
      "op": "ADD",
      "path": "13"
    },
    "12942": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init_unchained",
      "offset": [
        2944,
        3013
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0xC98"
    },
    "12946": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init_unchained",
      "offset": [
        2944,
        3013
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "12947": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init_unchained",
      "offset": [
        2944,
        3013
      ],
      "op": "PUSH3",
      "path": "13",
      "value": "0x3BD8"
    },
    "12951": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init_unchained",
      "jump": "i",
      "offset": [
        2944,
        3013
      ],
      "op": "JUMP",
      "path": "13"
    },
    "12952": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init_unchained",
      "offset": [
        2944,
        3013
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "12953": {
      "offset": [
        1772,
        1773
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1"
    },
    "12955": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init_unchained",
      "offset": [
        2050,
        2057
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 183,
      "value": "0x9A"
    },
    "12957": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init_unchained",
      "offset": [
        2050,
        2072
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "12958": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init_unchained",
      "jump": "o",
      "offset": [
        1970,
        2079
      ],
      "op": "JUMP",
      "path": "14"
    },
    "12959": {
      "op": "JUMPDEST"
    },
    "12960": {
      "op": "PUSH2",
      "value": "0x1ABC"
    },
    "12963": {
      "op": "DUP1"
    },
    "12964": {
      "op": "PUSH3",
      "value": "0x3C24"
    },
    "12968": {
      "op": "DUP4"
    },
    "12969": {
      "op": "CODECOPY"
    },
    "12970": {
      "op": "ADD"
    },
    "12971": {
      "op": "SWAP1"
    },
    "12972": {
      "jump": "o",
      "op": "JUMP"
    },
    "12973": {
      "op": "JUMPDEST"
    },
    "12974": {
      "op": "DUP3"
    },
    "12975": {
      "op": "DUP1"
    },
    "12976": {
      "op": "SLOAD"
    },
    "12977": {
      "op": "PUSH3",
      "value": "0x32BB"
    },
    "12981": {
      "op": "SWAP1"
    },
    "12982": {
      "op": "PUSH3",
      "value": "0x37A4"
    },
    "12986": {
      "jump": "i",
      "op": "JUMP"
    },
    "12987": {
      "op": "JUMPDEST"
    },
    "12988": {
      "op": "SWAP1"
    },
    "12989": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12991": {
      "op": "MSTORE"
    },
    "12992": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12994": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12996": {
      "op": "KECCAK256"
    },
    "12997": {
      "op": "SWAP1"
    },
    "12998": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "13000": {
      "op": "ADD"
    },
    "13001": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13003": {
      "op": "SWAP1"
    },
    "13004": {
      "op": "DIV"
    },
    "13005": {
      "op": "DUP2"
    },
    "13006": {
      "op": "ADD"
    },
    "13007": {
      "op": "SWAP3"
    },
    "13008": {
      "op": "DUP3"
    },
    "13009": {
      "op": "PUSH3",
      "value": "0x32DF"
    },
    "13013": {
      "op": "JUMPI"
    },
    "13014": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13016": {
      "op": "DUP6"
    },
    "13017": {
      "op": "SSTORE"
    },
    "13018": {
      "op": "PUSH3",
      "value": "0x332A"
    },
    "13022": {
      "op": "JUMP"
    },
    "13023": {
      "op": "JUMPDEST"
    },
    "13024": {
      "op": "DUP3"
    },
    "13025": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "13027": {
      "op": "LT"
    },
    "13028": {
      "op": "PUSH3",
      "value": "0x32FA"
    },
    "13032": {
      "op": "JUMPI"
    },
    "13033": {
      "op": "DUP1"
    },
    "13034": {
      "op": "MLOAD"
    },
    "13035": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "13037": {
      "op": "NOT"
    },
    "13038": {
      "op": "AND"
    },
    "13039": {
      "op": "DUP4"
    },
    "13040": {
      "op": "DUP1"
    },
    "13041": {
      "op": "ADD"
    },
    "13042": {
      "op": "OR"
    },
    "13043": {
      "op": "DUP6"
    },
    "13044": {
      "op": "SSTORE"
    },
    "13045": {
      "op": "PUSH3",
      "value": "0x332A"
    },
    "13049": {
      "op": "JUMP"
    },
    "13050": {
      "op": "JUMPDEST"
    },
    "13051": {
      "op": "DUP3"
    },
    "13052": {
      "op": "DUP1"
    },
    "13053": {
      "op": "ADD"
    },
    "13054": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13056": {
      "op": "ADD"
    },
    "13057": {
      "op": "DUP6"
    },
    "13058": {
      "op": "SSTORE"
    },
    "13059": {
      "op": "DUP3"
    },
    "13060": {
      "op": "ISZERO"
    },
    "13061": {
      "op": "PUSH3",
      "value": "0x332A"
    },
    "13065": {
      "op": "JUMPI"
    },
    "13066": {
      "op": "SWAP2"
    },
    "13067": {
      "op": "DUP3"
    },
    "13068": {
      "op": "ADD"
    },
    "13069": {
      "op": "JUMPDEST"
    },
    "13070": {
      "op": "DUP3"
    },
    "13071": {
      "op": "DUP2"
    },
    "13072": {
      "op": "GT"
    },
    "13073": {
      "op": "ISZERO"
    },
    "13074": {
      "op": "PUSH3",
      "value": "0x332A"
    },
    "13078": {
      "op": "JUMPI"
    },
    "13079": {
      "op": "DUP3"
    },
    "13080": {
      "op": "MLOAD"
    },
    "13081": {
      "op": "DUP3"
    },
    "13082": {
      "op": "SSTORE"
    },
    "13083": {
      "op": "SWAP2"
    },
    "13084": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13086": {
      "op": "ADD"
    },
    "13087": {
      "op": "SWAP2"
    },
    "13088": {
      "op": "SWAP1"
    },
    "13089": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13091": {
      "op": "ADD"
    },
    "13092": {
      "op": "SWAP1"
    },
    "13093": {
      "op": "PUSH3",
      "value": "0x330D"
    },
    "13097": {
      "op": "JUMP"
    },
    "13098": {
      "op": "JUMPDEST"
    },
    "13099": {
      "op": "POP"
    },
    "13100": {
      "op": "PUSH3",
      "value": "0x2A4E"
    },
    "13104": {
      "op": "SWAP3"
    },
    "13105": {
      "op": "SWAP2"
    },
    "13106": {
      "op": "POP"
    },
    "13107": {
      "op": "JUMPDEST"
    },
    "13108": {
      "op": "DUP1"
    },
    "13109": {
      "op": "DUP3"
    },
    "13110": {
      "op": "GT"
    },
    "13111": {
      "op": "ISZERO"
    },
    "13112": {
      "op": "PUSH3",
      "value": "0x2A4E"
    },
    "13116": {
      "op": "JUMPI"
    },
    "13117": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13119": {
      "op": "DUP2"
    },
    "13120": {
      "op": "SSTORE"
    },
    "13121": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13123": {
      "op": "ADD"
    },
    "13124": {
      "op": "PUSH3",
      "value": "0x3333"
    },
    "13128": {
      "op": "JUMP"
    },
    "13129": {
      "op": "JUMPDEST"
    },
    "13130": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13132": {
      "op": "JUMPDEST"
    },
    "13133": {
      "op": "DUP4"
    },
    "13134": {
      "op": "DUP2"
    },
    "13135": {
      "op": "LT"
    },
    "13136": {
      "op": "ISZERO"
    },
    "13137": {
      "op": "PUSH3",
      "value": "0x3366"
    },
    "13141": {
      "op": "JUMPI"
    },
    "13142": {
      "op": "DUP2"
    },
    "13143": {
      "op": "DUP2"
    },
    "13144": {
      "op": "ADD"
    },
    "13145": {
      "op": "MLOAD"
    },
    "13146": {
      "op": "DUP4"
    },
    "13147": {
      "op": "DUP3"
    },
    "13148": {
      "op": "ADD"
    },
    "13149": {
      "op": "MSTORE"
    },
    "13150": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13152": {
      "op": "ADD"
    },
    "13153": {
      "op": "PUSH3",
      "value": "0x334C"
    },
    "13157": {
      "op": "JUMP"
    },
    "13158": {
      "op": "JUMPDEST"
    },
    "13159": {
      "op": "DUP4"
    },
    "13160": {
      "op": "DUP2"
    },
    "13161": {
      "op": "GT"
    },
    "13162": {
      "op": "ISZERO"
    },
    "13163": {
      "op": "PUSH3",
      "value": "0x272E"
    },
    "13167": {
      "op": "JUMPI"
    },
    "13168": {
      "op": "POP"
    },
    "13169": {
      "op": "POP"
    },
    "13170": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13172": {
      "op": "SWAP2"
    },
    "13173": {
      "op": "ADD"
    },
    "13174": {
      "op": "MSTORE"
    },
    "13175": {
      "jump": "o",
      "op": "JUMP"
    },
    "13176": {
      "op": "JUMPDEST"
    },
    "13177": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13179": {
      "op": "DUP2"
    },
    "13180": {
      "op": "MLOAD"
    },
    "13181": {
      "op": "DUP1"
    },
    "13182": {
      "op": "DUP5"
    },
    "13183": {
      "op": "MSTORE"
    },
    "13184": {
      "op": "PUSH3",
      "value": "0x3392"
    },
    "13188": {
      "op": "DUP2"
    },
    "13189": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13191": {
      "op": "DUP7"
    },
    "13192": {
      "op": "ADD"
    },
    "13193": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13195": {
      "op": "DUP7"
    },
    "13196": {
      "op": "ADD"
    },
    "13197": {
      "op": "PUSH3",
      "value": "0x3349"
    },
    "13201": {
      "jump": "i",
      "op": "JUMP"
    },
    "13202": {
      "op": "JUMPDEST"
    },
    "13203": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "13205": {
      "op": "ADD"
    },
    "13206": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "13208": {
      "op": "NOT"
    },
    "13209": {
      "op": "AND"
    },
    "13210": {
      "op": "SWAP3"
    },
    "13211": {
      "op": "SWAP1"
    },
    "13212": {
      "op": "SWAP3"
    },
    "13213": {
      "op": "ADD"
    },
    "13214": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13216": {
      "op": "ADD"
    },
    "13217": {
      "op": "SWAP3"
    },
    "13218": {
      "op": "SWAP2"
    },
    "13219": {
      "op": "POP"
    },
    "13220": {
      "op": "POP"
    },
    "13221": {
      "jump": "o",
      "op": "JUMP"
    },
    "13222": {
      "op": "JUMPDEST"
    },
    "13223": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13225": {
      "op": "DUP2"
    },
    "13226": {
      "op": "MSTORE"
    },
    "13227": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13229": {
      "op": "PUSH3",
      "value": "0x33BB"
    },
    "13233": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13235": {
      "op": "DUP4"
    },
    "13236": {
      "op": "ADD"
    },
    "13237": {
      "op": "DUP5"
    },
    "13238": {
      "op": "PUSH3",
      "value": "0x3378"
    },
    "13242": {
      "jump": "i",
      "op": "JUMP"
    },
    "13243": {
      "op": "JUMPDEST"
    },
    "13244": {
      "op": "SWAP4"
    },
    "13245": {
      "op": "SWAP3"
    },
    "13246": {
      "op": "POP"
    },
    "13247": {
      "op": "POP"
    },
    "13248": {
      "op": "POP"
    },
    "13249": {
      "jump": "o",
      "op": "JUMP"
    },
    "13250": {
      "op": "JUMPDEST"
    },
    "13251": {
      "op": "DUP1"
    },
    "13252": {
      "op": "CALLDATALOAD"
    },
    "13253": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13255": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13257": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13259": {
      "op": "SHL"
    },
    "13260": {
      "op": "SUB"
    },
    "13261": {
      "op": "DUP2"
    },
    "13262": {
      "op": "AND"
    },
    "13263": {
      "op": "DUP2"
    },
    "13264": {
      "op": "EQ"
    },
    "13265": {
      "op": "PUSH3",
      "value": "0x33DA"
    },
    "13269": {
      "op": "JUMPI"
    },
    "13270": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13272": {
      "op": "DUP1"
    },
    "13273": {
      "op": "REVERT"
    },
    "13274": {
      "op": "JUMPDEST"
    },
    "13275": {
      "op": "SWAP2"
    },
    "13276": {
      "op": "SWAP1"
    },
    "13277": {
      "op": "POP"
    },
    "13278": {
      "jump": "o",
      "op": "JUMP"
    },
    "13279": {
      "op": "JUMPDEST"
    },
    "13280": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13282": {
      "op": "DUP1"
    },
    "13283": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13285": {
      "op": "DUP4"
    },
    "13286": {
      "op": "DUP6"
    },
    "13287": {
      "op": "SUB"
    },
    "13288": {
      "op": "SLT"
    },
    "13289": {
      "op": "ISZERO"
    },
    "13290": {
      "op": "PUSH3",
      "value": "0x33F3"
    },
    "13294": {
      "op": "JUMPI"
    },
    "13295": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13297": {
      "op": "DUP1"
    },
    "13298": {
      "op": "REVERT"
    },
    "13299": {
      "op": "JUMPDEST"
    },
    "13300": {
      "op": "PUSH3",
      "value": "0x33FE"
    },
    "13304": {
      "op": "DUP4"
    },
    "13305": {
      "op": "PUSH3",
      "value": "0x33C2"
    },
    "13309": {
      "jump": "i",
      "op": "JUMP"
    },
    "13310": {
      "op": "JUMPDEST"
    },
    "13311": {
      "op": "SWAP5"
    },
    "13312": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13314": {
      "op": "SWAP4"
    },
    "13315": {
      "op": "SWAP1"
    },
    "13316": {
      "op": "SWAP4"
    },
    "13317": {
      "op": "ADD"
    },
    "13318": {
      "op": "CALLDATALOAD"
    },
    "13319": {
      "op": "SWAP4"
    },
    "13320": {
      "op": "POP"
    },
    "13321": {
      "op": "POP"
    },
    "13322": {
      "op": "POP"
    },
    "13323": {
      "jump": "o",
      "op": "JUMP"
    },
    "13324": {
      "op": "JUMPDEST"
    },
    "13325": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13327": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13329": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13331": {
      "op": "SHL"
    },
    "13332": {
      "op": "SUB"
    },
    "13333": {
      "op": "SWAP2"
    },
    "13334": {
      "op": "SWAP1"
    },
    "13335": {
      "op": "SWAP2"
    },
    "13336": {
      "op": "AND"
    },
    "13337": {
      "op": "DUP2"
    },
    "13338": {
      "op": "MSTORE"
    },
    "13339": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13341": {
      "op": "ADD"
    },
    "13342": {
      "op": "SWAP1"
    },
    "13343": {
      "jump": "o",
      "op": "JUMP"
    },
    "13344": {
      "op": "JUMPDEST"
    },
    "13345": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13347": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13349": {
      "op": "DUP3"
    },
    "13350": {
      "op": "DUP5"
    },
    "13351": {
      "op": "SUB"
    },
    "13352": {
      "op": "SLT"
    },
    "13353": {
      "op": "ISZERO"
    },
    "13354": {
      "op": "PUSH3",
      "value": "0x3433"
    },
    "13358": {
      "op": "JUMPI"
    },
    "13359": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13361": {
      "op": "DUP1"
    },
    "13362": {
      "op": "REVERT"
    },
    "13363": {
      "op": "JUMPDEST"
    },
    "13364": {
      "op": "PUSH3",
      "value": "0x33BB"
    },
    "13368": {
      "op": "DUP3"
    },
    "13369": {
      "op": "PUSH3",
      "value": "0x33C2"
    },
    "13373": {
      "jump": "i",
      "op": "JUMP"
    },
    "13374": {
      "op": "JUMPDEST"
    },
    "13375": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "13380": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "13382": {
      "op": "SHL"
    },
    "13383": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13385": {
      "op": "MSTORE"
    },
    "13386": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "13388": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "13390": {
      "op": "MSTORE"
    },
    "13391": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "13393": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13395": {
      "op": "REVERT"
    },
    "13396": {
      "op": "JUMPDEST"
    },
    "13397": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13399": {
      "op": "DUP3"
    },
    "13400": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "13402": {
      "op": "DUP4"
    },
    "13403": {
      "op": "ADD"
    },
    "13404": {
      "op": "SLT"
    },
    "13405": {
      "op": "PUSH3",
      "value": "0x3466"
    },
    "13409": {
      "op": "JUMPI"
    },
    "13410": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13412": {
      "op": "DUP1"
    },
    "13413": {
      "op": "REVERT"
    },
    "13414": {
      "op": "JUMPDEST"
    },
    "13415": {
      "op": "DUP2"
    },
    "13416": {
      "op": "CALLDATALOAD"
    },
    "13417": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "13426": {
      "op": "DUP1"
    },
    "13427": {
      "op": "DUP3"
    },
    "13428": {
      "op": "GT"
    },
    "13429": {
      "op": "ISZERO"
    },
    "13430": {
      "op": "PUSH3",
      "value": "0x3484"
    },
    "13434": {
      "op": "JUMPI"
    },
    "13435": {
      "op": "PUSH3",
      "value": "0x3484"
    },
    "13439": {
      "op": "PUSH3",
      "value": "0x343E"
    },
    "13443": {
      "jump": "i",
      "op": "JUMP"
    },
    "13444": {
      "op": "JUMPDEST"
    },
    "13445": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13447": {
      "op": "MLOAD"
    },
    "13448": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "13450": {
      "op": "DUP4"
    },
    "13451": {
      "op": "ADD"
    },
    "13452": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "13454": {
      "op": "NOT"
    },
    "13455": {
      "op": "SWAP1"
    },
    "13456": {
      "op": "DUP2"
    },
    "13457": {
      "op": "AND"
    },
    "13458": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "13460": {
      "op": "ADD"
    },
    "13461": {
      "op": "AND"
    },
    "13462": {
      "op": "DUP2"
    },
    "13463": {
      "op": "ADD"
    },
    "13464": {
      "op": "SWAP1"
    },
    "13465": {
      "op": "DUP3"
    },
    "13466": {
      "op": "DUP3"
    },
    "13467": {
      "op": "GT"
    },
    "13468": {
      "op": "DUP2"
    },
    "13469": {
      "op": "DUP4"
    },
    "13470": {
      "op": "LT"
    },
    "13471": {
      "op": "OR"
    },
    "13472": {
      "op": "ISZERO"
    },
    "13473": {
      "op": "PUSH3",
      "value": "0x34AF"
    },
    "13477": {
      "op": "JUMPI"
    },
    "13478": {
      "op": "PUSH3",
      "value": "0x34AF"
    },
    "13482": {
      "op": "PUSH3",
      "value": "0x343E"
    },
    "13486": {
      "jump": "i",
      "op": "JUMP"
    },
    "13487": {
      "op": "JUMPDEST"
    },
    "13488": {
      "op": "DUP2"
    },
    "13489": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13491": {
      "op": "MSTORE"
    },
    "13492": {
      "op": "DUP4"
    },
    "13493": {
      "op": "DUP2"
    },
    "13494": {
      "op": "MSTORE"
    },
    "13495": {
      "op": "DUP7"
    },
    "13496": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13498": {
      "op": "DUP6"
    },
    "13499": {
      "op": "DUP9"
    },
    "13500": {
      "op": "ADD"
    },
    "13501": {
      "op": "ADD"
    },
    "13502": {
      "op": "GT"
    },
    "13503": {
      "op": "ISZERO"
    },
    "13504": {
      "op": "PUSH3",
      "value": "0x34C9"
    },
    "13508": {
      "op": "JUMPI"
    },
    "13509": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13511": {
      "op": "DUP1"
    },
    "13512": {
      "op": "REVERT"
    },
    "13513": {
      "op": "JUMPDEST"
    },
    "13514": {
      "op": "DUP4"
    },
    "13515": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13517": {
      "op": "DUP8"
    },
    "13518": {
      "op": "ADD"
    },
    "13519": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13521": {
      "op": "DUP4"
    },
    "13522": {
      "op": "ADD"
    },
    "13523": {
      "op": "CALLDATACOPY"
    },
    "13524": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13526": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13528": {
      "op": "DUP6"
    },
    "13529": {
      "op": "DUP4"
    },
    "13530": {
      "op": "ADD"
    },
    "13531": {
      "op": "ADD"
    },
    "13532": {
      "op": "MSTORE"
    },
    "13533": {
      "op": "DUP1"
    },
    "13534": {
      "op": "SWAP5"
    },
    "13535": {
      "op": "POP"
    },
    "13536": {
      "op": "POP"
    },
    "13537": {
      "op": "POP"
    },
    "13538": {
      "op": "POP"
    },
    "13539": {
      "op": "POP"
    },
    "13540": {
      "op": "SWAP3"
    },
    "13541": {
      "op": "SWAP2"
    },
    "13542": {
      "op": "POP"
    },
    "13543": {
      "op": "POP"
    },
    "13544": {
      "jump": "o",
      "op": "JUMP"
    },
    "13545": {
      "op": "JUMPDEST"
    },
    "13546": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13548": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13550": {
      "op": "DUP3"
    },
    "13551": {
      "op": "DUP5"
    },
    "13552": {
      "op": "SUB"
    },
    "13553": {
      "op": "SLT"
    },
    "13554": {
      "op": "ISZERO"
    },
    "13555": {
      "op": "PUSH3",
      "value": "0x34FC"
    },
    "13559": {
      "op": "JUMPI"
    },
    "13560": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13562": {
      "op": "DUP1"
    },
    "13563": {
      "op": "REVERT"
    },
    "13564": {
      "op": "JUMPDEST"
    },
    "13565": {
      "op": "DUP2"
    },
    "13566": {
      "op": "CALLDATALOAD"
    },
    "13567": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "13576": {
      "op": "DUP2"
    },
    "13577": {
      "op": "GT"
    },
    "13578": {
      "op": "ISZERO"
    },
    "13579": {
      "op": "PUSH3",
      "value": "0x3514"
    },
    "13583": {
      "op": "JUMPI"
    },
    "13584": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13586": {
      "op": "DUP1"
    },
    "13587": {
      "op": "REVERT"
    },
    "13588": {
      "op": "JUMPDEST"
    },
    "13589": {
      "op": "PUSH3",
      "value": "0x3522"
    },
    "13593": {
      "op": "DUP5"
    },
    "13594": {
      "op": "DUP3"
    },
    "13595": {
      "op": "DUP6"
    },
    "13596": {
      "op": "ADD"
    },
    "13597": {
      "op": "PUSH3",
      "value": "0x3454"
    },
    "13601": {
      "jump": "i",
      "op": "JUMP"
    },
    "13602": {
      "op": "JUMPDEST"
    },
    "13603": {
      "op": "SWAP5"
    },
    "13604": {
      "op": "SWAP4"
    },
    "13605": {
      "op": "POP"
    },
    "13606": {
      "op": "POP"
    },
    "13607": {
      "op": "POP"
    },
    "13608": {
      "op": "POP"
    },
    "13609": {
      "jump": "o",
      "op": "JUMP"
    },
    "13610": {
      "op": "JUMPDEST"
    },
    "13611": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13613": {
      "op": "DUP1"
    },
    "13614": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13616": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "13618": {
      "op": "DUP5"
    },
    "13619": {
      "op": "DUP7"
    },
    "13620": {
      "op": "SUB"
    },
    "13621": {
      "op": "SLT"
    },
    "13622": {
      "op": "ISZERO"
    },
    "13623": {
      "op": "PUSH3",
      "value": "0x3540"
    },
    "13627": {
      "op": "JUMPI"
    },
    "13628": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13630": {
      "op": "DUP1"
    },
    "13631": {
      "op": "REVERT"
    },
    "13632": {
      "op": "JUMPDEST"
    },
    "13633": {
      "op": "PUSH3",
      "value": "0x354B"
    },
    "13637": {
      "op": "DUP5"
    },
    "13638": {
      "op": "PUSH3",
      "value": "0x33C2"
    },
    "13642": {
      "jump": "i",
      "op": "JUMP"
    },
    "13643": {
      "op": "JUMPDEST"
    },
    "13644": {
      "op": "SWAP3"
    },
    "13645": {
      "op": "POP"
    },
    "13646": {
      "op": "PUSH3",
      "value": "0x355B"
    },
    "13650": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13652": {
      "op": "DUP6"
    },
    "13653": {
      "op": "ADD"
    },
    "13654": {
      "op": "PUSH3",
      "value": "0x33C2"
    },
    "13658": {
      "jump": "i",
      "op": "JUMP"
    },
    "13659": {
      "op": "JUMPDEST"
    },
    "13660": {
      "op": "SWAP2"
    },
    "13661": {
      "op": "POP"
    },
    "13662": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13664": {
      "op": "DUP5"
    },
    "13665": {
      "op": "ADD"
    },
    "13666": {
      "op": "CALLDATALOAD"
    },
    "13667": {
      "op": "SWAP1"
    },
    "13668": {
      "op": "POP"
    },
    "13669": {
      "op": "SWAP3"
    },
    "13670": {
      "op": "POP"
    },
    "13671": {
      "op": "SWAP3"
    },
    "13672": {
      "op": "POP"
    },
    "13673": {
      "op": "SWAP3"
    },
    "13674": {
      "jump": "o",
      "op": "JUMP"
    },
    "13675": {
      "op": "JUMPDEST"
    },
    "13676": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13678": {
      "op": "DUP1"
    },
    "13679": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13681": {
      "op": "DUP4"
    },
    "13682": {
      "op": "DUP6"
    },
    "13683": {
      "op": "SUB"
    },
    "13684": {
      "op": "SLT"
    },
    "13685": {
      "op": "ISZERO"
    },
    "13686": {
      "op": "PUSH3",
      "value": "0x357F"
    },
    "13690": {
      "op": "JUMPI"
    },
    "13691": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13693": {
      "op": "DUP1"
    },
    "13694": {
      "op": "REVERT"
    },
    "13695": {
      "op": "JUMPDEST"
    },
    "13696": {
      "op": "DUP3"
    },
    "13697": {
      "op": "CALLDATALOAD"
    },
    "13698": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "13707": {
      "op": "DUP1"
    },
    "13708": {
      "op": "DUP3"
    },
    "13709": {
      "op": "GT"
    },
    "13710": {
      "op": "ISZERO"
    },
    "13711": {
      "op": "PUSH3",
      "value": "0x3598"
    },
    "13715": {
      "op": "JUMPI"
    },
    "13716": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13718": {
      "op": "DUP1"
    },
    "13719": {
      "op": "REVERT"
    },
    "13720": {
      "op": "JUMPDEST"
    },
    "13721": {
      "op": "PUSH3",
      "value": "0x35A6"
    },
    "13725": {
      "op": "DUP7"
    },
    "13726": {
      "op": "DUP4"
    },
    "13727": {
      "op": "DUP8"
    },
    "13728": {
      "op": "ADD"
    },
    "13729": {
      "op": "PUSH3",
      "value": "0x3454"
    },
    "13733": {
      "jump": "i",
      "op": "JUMP"
    },
    "13734": {
      "op": "JUMPDEST"
    },
    "13735": {
      "op": "SWAP4"
    },
    "13736": {
      "op": "POP"
    },
    "13737": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13739": {
      "op": "DUP6"
    },
    "13740": {
      "op": "ADD"
    },
    "13741": {
      "op": "CALLDATALOAD"
    },
    "13742": {
      "op": "SWAP2"
    },
    "13743": {
      "op": "POP"
    },
    "13744": {
      "op": "DUP1"
    },
    "13745": {
      "op": "DUP3"
    },
    "13746": {
      "op": "GT"
    },
    "13747": {
      "op": "ISZERO"
    },
    "13748": {
      "op": "PUSH3",
      "value": "0x35BD"
    },
    "13752": {
      "op": "JUMPI"
    },
    "13753": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13755": {
      "op": "DUP1"
    },
    "13756": {
      "op": "REVERT"
    },
    "13757": {
      "op": "JUMPDEST"
    },
    "13758": {
      "op": "POP"
    },
    "13759": {
      "op": "PUSH3",
      "value": "0x35CC"
    },
    "13763": {
      "op": "DUP6"
    },
    "13764": {
      "op": "DUP3"
    },
    "13765": {
      "op": "DUP7"
    },
    "13766": {
      "op": "ADD"
    },
    "13767": {
      "op": "PUSH3",
      "value": "0x3454"
    },
    "13771": {
      "jump": "i",
      "op": "JUMP"
    },
    "13772": {
      "op": "JUMPDEST"
    },
    "13773": {
      "op": "SWAP2"
    },
    "13774": {
      "op": "POP"
    },
    "13775": {
      "op": "POP"
    },
    "13776": {
      "op": "SWAP3"
    },
    "13777": {
      "op": "POP"
    },
    "13778": {
      "op": "SWAP3"
    },
    "13779": {
      "op": "SWAP1"
    },
    "13780": {
      "op": "POP"
    },
    "13781": {
      "jump": "o",
      "op": "JUMP"
    },
    "13782": {
      "op": "JUMPDEST"
    },
    "13783": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13785": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13787": {
      "op": "DUP3"
    },
    "13788": {
      "op": "DUP5"
    },
    "13789": {
      "op": "SUB"
    },
    "13790": {
      "op": "SLT"
    },
    "13791": {
      "op": "ISZERO"
    },
    "13792": {
      "op": "PUSH3",
      "value": "0x35E9"
    },
    "13796": {
      "op": "JUMPI"
    },
    "13797": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13799": {
      "op": "DUP1"
    },
    "13800": {
      "op": "REVERT"
    },
    "13801": {
      "op": "JUMPDEST"
    },
    "13802": {
      "op": "POP"
    },
    "13803": {
      "op": "CALLDATALOAD"
    },
    "13804": {
      "op": "SWAP2"
    },
    "13805": {
      "op": "SWAP1"
    },
    "13806": {
      "op": "POP"
    },
    "13807": {
      "jump": "o",
      "op": "JUMP"
    },
    "13808": {
      "op": "JUMPDEST"
    },
    "13809": {
      "op": "DUP1"
    },
    "13810": {
      "op": "CALLDATALOAD"
    },
    "13811": {
      "op": "DUP1"
    },
    "13812": {
      "op": "ISZERO"
    },
    "13813": {
      "op": "ISZERO"
    },
    "13814": {
      "op": "DUP2"
    },
    "13815": {
      "op": "EQ"
    },
    "13816": {
      "op": "PUSH3",
      "value": "0x33DA"
    },
    "13820": {
      "op": "JUMPI"
    },
    "13821": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13823": {
      "op": "DUP1"
    },
    "13824": {
      "op": "REVERT"
    },
    "13825": {
      "op": "JUMPDEST"
    },
    "13826": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13828": {
      "op": "DUP1"
    },
    "13829": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13831": {
      "op": "DUP4"
    },
    "13832": {
      "op": "DUP6"
    },
    "13833": {
      "op": "SUB"
    },
    "13834": {
      "op": "SLT"
    },
    "13835": {
      "op": "ISZERO"
    },
    "13836": {
      "op": "PUSH3",
      "value": "0x3615"
    },
    "13840": {
      "op": "JUMPI"
    },
    "13841": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13843": {
      "op": "DUP1"
    },
    "13844": {
      "op": "REVERT"
    },
    "13845": {
      "op": "JUMPDEST"
    },
    "13846": {
      "op": "PUSH3",
      "value": "0x3620"
    },
    "13850": {
      "op": "DUP4"
    },
    "13851": {
      "op": "PUSH3",
      "value": "0x33C2"
    },
    "13855": {
      "jump": "i",
      "op": "JUMP"
    },
    "13856": {
      "op": "JUMPDEST"
    },
    "13857": {
      "op": "SWAP2"
    },
    "13858": {
      "op": "POP"
    },
    "13859": {
      "op": "PUSH3",
      "value": "0x3630"
    },
    "13863": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13865": {
      "op": "DUP5"
    },
    "13866": {
      "op": "ADD"
    },
    "13867": {
      "op": "PUSH3",
      "value": "0x35F0"
    },
    "13871": {
      "jump": "i",
      "op": "JUMP"
    },
    "13872": {
      "op": "JUMPDEST"
    },
    "13873": {
      "op": "SWAP1"
    },
    "13874": {
      "op": "POP"
    },
    "13875": {
      "op": "SWAP3"
    },
    "13876": {
      "op": "POP"
    },
    "13877": {
      "op": "SWAP3"
    },
    "13878": {
      "op": "SWAP1"
    },
    "13879": {
      "op": "POP"
    },
    "13880": {
      "jump": "o",
      "op": "JUMP"
    },
    "13881": {
      "op": "JUMPDEST"
    },
    "13882": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13884": {
      "op": "DUP1"
    },
    "13885": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13887": {
      "op": "DUP1"
    },
    "13888": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "13890": {
      "op": "DUP6"
    },
    "13891": {
      "op": "DUP8"
    },
    "13892": {
      "op": "SUB"
    },
    "13893": {
      "op": "SLT"
    },
    "13894": {
      "op": "ISZERO"
    },
    "13895": {
      "op": "PUSH3",
      "value": "0x3650"
    },
    "13899": {
      "op": "JUMPI"
    },
    "13900": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13902": {
      "op": "DUP1"
    },
    "13903": {
      "op": "REVERT"
    },
    "13904": {
      "op": "JUMPDEST"
    },
    "13905": {
      "op": "DUP5"
    },
    "13906": {
      "op": "CALLDATALOAD"
    },
    "13907": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "13916": {
      "op": "DUP2"
    },
    "13917": {
      "op": "GT"
    },
    "13918": {
      "op": "ISZERO"
    },
    "13919": {
      "op": "PUSH3",
      "value": "0x3668"
    },
    "13923": {
      "op": "JUMPI"
    },
    "13924": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13926": {
      "op": "DUP1"
    },
    "13927": {
      "op": "REVERT"
    },
    "13928": {
      "op": "JUMPDEST"
    },
    "13929": {
      "op": "PUSH3",
      "value": "0x3676"
    },
    "13933": {
      "op": "DUP8"
    },
    "13934": {
      "op": "DUP3"
    },
    "13935": {
      "op": "DUP9"
    },
    "13936": {
      "op": "ADD"
    },
    "13937": {
      "op": "PUSH3",
      "value": "0x3454"
    },
    "13941": {
      "jump": "i",
      "op": "JUMP"
    },
    "13942": {
      "op": "JUMPDEST"
    },
    "13943": {
      "op": "SWAP5"
    },
    "13944": {
      "op": "POP"
    },
    "13945": {
      "op": "POP"
    },
    "13946": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13948": {
      "op": "DUP6"
    },
    "13949": {
      "op": "ADD"
    },
    "13950": {
      "op": "CALLDATALOAD"
    },
    "13951": {
      "op": "SWAP3"
    },
    "13952": {
      "op": "POP"
    },
    "13953": {
      "op": "PUSH3",
      "value": "0x368E"
    },
    "13957": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13959": {
      "op": "DUP7"
    },
    "13960": {
      "op": "ADD"
    },
    "13961": {
      "op": "PUSH3",
      "value": "0x33C2"
    },
    "13965": {
      "jump": "i",
      "op": "JUMP"
    },
    "13966": {
      "op": "JUMPDEST"
    },
    "13967": {
      "op": "SWAP2"
    },
    "13968": {
      "op": "POP"
    },
    "13969": {
      "op": "PUSH3",
      "value": "0x369E"
    },
    "13973": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "13975": {
      "op": "DUP7"
    },
    "13976": {
      "op": "ADD"
    },
    "13977": {
      "op": "PUSH3",
      "value": "0x35F0"
    },
    "13981": {
      "jump": "i",
      "op": "JUMP"
    },
    "13982": {
      "op": "JUMPDEST"
    },
    "13983": {
      "op": "SWAP1"
    },
    "13984": {
      "op": "POP"
    },
    "13985": {
      "op": "SWAP3"
    },
    "13986": {
      "op": "SWAP6"
    },
    "13987": {
      "op": "SWAP2"
    },
    "13988": {
      "op": "SWAP5"
    },
    "13989": {
      "op": "POP"
    },
    "13990": {
      "op": "SWAP3"
    },
    "13991": {
      "op": "POP"
    },
    "13992": {
      "jump": "o",
      "op": "JUMP"
    },
    "13993": {
      "op": "JUMPDEST"
    },
    "13994": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13996": {
      "op": "DUP1"
    },
    "13997": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13999": {
      "op": "DUP4"
    },
    "14000": {
      "op": "DUP6"
    },
    "14001": {
      "op": "SUB"
    },
    "14002": {
      "op": "SLT"
    },
    "14003": {
      "op": "ISZERO"
    },
    "14004": {
      "op": "PUSH3",
      "value": "0x36BD"
    },
    "14008": {
      "op": "JUMPI"
    },
    "14009": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14011": {
      "op": "DUP1"
    },
    "14012": {
      "op": "REVERT"
    },
    "14013": {
      "op": "JUMPDEST"
    },
    "14014": {
      "op": "DUP3"
    },
    "14015": {
      "op": "CALLDATALOAD"
    },
    "14016": {
      "op": "SWAP2"
    },
    "14017": {
      "op": "POP"
    },
    "14018": {
      "op": "PUSH3",
      "value": "0x3630"
    },
    "14022": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14024": {
      "op": "DUP5"
    },
    "14025": {
      "op": "ADD"
    },
    "14026": {
      "op": "PUSH3",
      "value": "0x33C2"
    },
    "14030": {
      "jump": "i",
      "op": "JUMP"
    },
    "14031": {
      "op": "JUMPDEST"
    },
    "14032": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14034": {
      "op": "DUP1"
    },
    "14035": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14037": {
      "op": "DUP4"
    },
    "14038": {
      "op": "DUP6"
    },
    "14039": {
      "op": "SUB"
    },
    "14040": {
      "op": "SLT"
    },
    "14041": {
      "op": "ISZERO"
    },
    "14042": {
      "op": "PUSH3",
      "value": "0x36E3"
    },
    "14046": {
      "op": "JUMPI"
    },
    "14047": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14049": {
      "op": "DUP1"
    },
    "14050": {
      "op": "REVERT"
    },
    "14051": {
      "op": "JUMPDEST"
    },
    "14052": {
      "op": "PUSH3",
      "value": "0x36EE"
    },
    "14056": {
      "op": "DUP4"
    },
    "14057": {
      "op": "PUSH3",
      "value": "0x33C2"
    },
    "14061": {
      "jump": "i",
      "op": "JUMP"
    },
    "14062": {
      "op": "JUMPDEST"
    },
    "14063": {
      "op": "SWAP2"
    },
    "14064": {
      "op": "POP"
    },
    "14065": {
      "op": "PUSH3",
      "value": "0x3630"
    },
    "14069": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14071": {
      "op": "DUP5"
    },
    "14072": {
      "op": "ADD"
    },
    "14073": {
      "op": "PUSH3",
      "value": "0x33C2"
    },
    "14077": {
      "jump": "i",
      "op": "JUMP"
    },
    "14078": {
      "op": "JUMPDEST"
    },
    "14079": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14081": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14083": {
      "op": "DUP1"
    },
    "14084": {
      "op": "DUP4"
    },
    "14085": {
      "op": "MSTORE"
    },
    "14086": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "14088": {
      "op": "DUP1"
    },
    "14089": {
      "op": "DUP5"
    },
    "14090": {
      "op": "ADD"
    },
    "14091": {
      "op": "DUP6"
    },
    "14092": {
      "op": "MLOAD"
    },
    "14093": {
      "op": "DUP4"
    },
    "14094": {
      "op": "DUP7"
    },
    "14095": {
      "op": "ADD"
    },
    "14096": {
      "op": "MSTORE"
    },
    "14097": {
      "op": "DUP3"
    },
    "14098": {
      "op": "DUP7"
    },
    "14099": {
      "op": "ADD"
    },
    "14100": {
      "op": "MLOAD"
    },
    "14101": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14103": {
      "op": "DUP1"
    },
    "14104": {
      "op": "DUP2"
    },
    "14105": {
      "op": "DUP9"
    },
    "14106": {
      "op": "ADD"
    },
    "14107": {
      "op": "MSTORE"
    },
    "14108": {
      "op": "DUP3"
    },
    "14109": {
      "op": "DUP3"
    },
    "14110": {
      "op": "MLOAD"
    },
    "14111": {
      "op": "DUP1"
    },
    "14112": {
      "op": "DUP6"
    },
    "14113": {
      "op": "MSTORE"
    },
    "14114": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "14116": {
      "op": "SWAP5"
    },
    "14117": {
      "op": "POP"
    },
    "14118": {
      "op": "DUP5"
    },
    "14119": {
      "op": "DUP10"
    },
    "14120": {
      "op": "ADD"
    },
    "14121": {
      "op": "SWAP2"
    },
    "14122": {
      "op": "POP"
    },
    "14123": {
      "op": "DUP7"
    },
    "14124": {
      "op": "DUP5"
    },
    "14125": {
      "op": "ADD"
    },
    "14126": {
      "op": "SWAP4"
    },
    "14127": {
      "op": "POP"
    },
    "14128": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14130": {
      "op": "JUMPDEST"
    },
    "14131": {
      "op": "DUP2"
    },
    "14132": {
      "op": "DUP2"
    },
    "14133": {
      "op": "LT"
    },
    "14134": {
      "op": "ISZERO"
    },
    "14135": {
      "op": "PUSH3",
      "value": "0x3772"
    },
    "14139": {
      "op": "JUMPI"
    },
    "14140": {
      "op": "DUP5"
    },
    "14141": {
      "op": "MLOAD"
    },
    "14142": {
      "op": "DUP1"
    },
    "14143": {
      "op": "MLOAD"
    },
    "14144": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14146": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14148": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14150": {
      "op": "SHL"
    },
    "14151": {
      "op": "SUB"
    },
    "14152": {
      "op": "AND"
    },
    "14153": {
      "op": "DUP5"
    },
    "14154": {
      "op": "MSTORE"
    },
    "14155": {
      "op": "DUP9"
    },
    "14156": {
      "op": "DUP2"
    },
    "14157": {
      "op": "ADD"
    },
    "14158": {
      "op": "MLOAD"
    },
    "14159": {
      "op": "DUP10"
    },
    "14160": {
      "op": "DUP6"
    },
    "14161": {
      "op": "ADD"
    },
    "14162": {
      "op": "MSTORE"
    },
    "14163": {
      "op": "DUP5"
    },
    "14164": {
      "op": "DUP2"
    },
    "14165": {
      "op": "ADD"
    },
    "14166": {
      "op": "MLOAD"
    },
    "14167": {
      "op": "DUP6"
    },
    "14168": {
      "op": "DUP6"
    },
    "14169": {
      "op": "ADD"
    },
    "14170": {
      "op": "MSTORE"
    },
    "14171": {
      "op": "DUP8"
    },
    "14172": {
      "op": "ADD"
    },
    "14173": {
      "op": "MLOAD"
    },
    "14174": {
      "op": "DUP8"
    },
    "14175": {
      "op": "DUP5"
    },
    "14176": {
      "op": "ADD"
    },
    "14177": {
      "op": "MSTORE"
    },
    "14178": {
      "op": "SWAP4"
    },
    "14179": {
      "op": "DUP8"
    },
    "14180": {
      "op": "ADD"
    },
    "14181": {
      "op": "SWAP4"
    },
    "14182": {
      "op": "SWAP2"
    },
    "14183": {
      "op": "DUP6"
    },
    "14184": {
      "op": "ADD"
    },
    "14185": {
      "op": "SWAP2"
    },
    "14186": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14188": {
      "op": "ADD"
    },
    "14189": {
      "op": "PUSH3",
      "value": "0x3732"
    },
    "14193": {
      "op": "JUMP"
    },
    "14194": {
      "op": "JUMPDEST"
    },
    "14195": {
      "op": "POP"
    },
    "14196": {
      "op": "SWAP1"
    },
    "14197": {
      "op": "SWAP10"
    },
    "14198": {
      "op": "SWAP9"
    },
    "14199": {
      "op": "POP"
    },
    "14200": {
      "op": "POP"
    },
    "14201": {
      "op": "POP"
    },
    "14202": {
      "op": "POP"
    },
    "14203": {
      "op": "POP"
    },
    "14204": {
      "op": "POP"
    },
    "14205": {
      "op": "POP"
    },
    "14206": {
      "op": "POP"
    },
    "14207": {
      "op": "POP"
    },
    "14208": {
      "jump": "o",
      "op": "JUMP"
    },
    "14209": {
      "op": "JUMPDEST"
    },
    "14210": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14212": {
      "op": "DUP1"
    },
    "14213": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14215": {
      "op": "DUP4"
    },
    "14216": {
      "op": "DUP6"
    },
    "14217": {
      "op": "SUB"
    },
    "14218": {
      "op": "SLT"
    },
    "14219": {
      "op": "ISZERO"
    },
    "14220": {
      "op": "PUSH3",
      "value": "0x3795"
    },
    "14224": {
      "op": "JUMPI"
    },
    "14225": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14227": {
      "op": "DUP1"
    },
    "14228": {
      "op": "REVERT"
    },
    "14229": {
      "op": "JUMPDEST"
    },
    "14230": {
      "op": "POP"
    },
    "14231": {
      "op": "POP"
    },
    "14232": {
      "op": "DUP1"
    },
    "14233": {
      "op": "CALLDATALOAD"
    },
    "14234": {
      "op": "SWAP3"
    },
    "14235": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14237": {
      "op": "SWAP1"
    },
    "14238": {
      "op": "SWAP2"
    },
    "14239": {
      "op": "ADD"
    },
    "14240": {
      "op": "CALLDATALOAD"
    },
    "14241": {
      "op": "SWAP2"
    },
    "14242": {
      "op": "POP"
    },
    "14243": {
      "jump": "o",
      "op": "JUMP"
    },
    "14244": {
      "op": "JUMPDEST"
    },
    "14245": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14247": {
      "op": "DUP2"
    },
    "14248": {
      "op": "DUP2"
    },
    "14249": {
      "op": "SHR"
    },
    "14250": {
      "op": "SWAP1"
    },
    "14251": {
      "op": "DUP3"
    },
    "14252": {
      "op": "AND"
    },
    "14253": {
      "op": "DUP1"
    },
    "14254": {
      "op": "PUSH3",
      "value": "0x37B9"
    },
    "14258": {
      "op": "JUMPI"
    },
    "14259": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "14261": {
      "op": "DUP3"
    },
    "14262": {
      "op": "AND"
    },
    "14263": {
      "op": "SWAP2"
    },
    "14264": {
      "op": "POP"
    },
    "14265": {
      "op": "JUMPDEST"
    },
    "14266": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14268": {
      "op": "DUP3"
    },
    "14269": {
      "op": "LT"
    },
    "14270": {
      "op": "DUP2"
    },
    "14271": {
      "op": "EQ"
    },
    "14272": {
      "op": "ISZERO"
    },
    "14273": {
      "op": "PUSH3",
      "value": "0x37DB"
    },
    "14277": {
      "op": "JUMPI"
    },
    "14278": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "14283": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "14285": {
      "op": "SHL"
    },
    "14286": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14288": {
      "op": "MSTORE"
    },
    "14289": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "14291": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "14293": {
      "op": "MSTORE"
    },
    "14294": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "14296": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14298": {
      "op": "REVERT"
    },
    "14299": {
      "op": "JUMPDEST"
    },
    "14300": {
      "op": "POP"
    },
    "14301": {
      "op": "SWAP2"
    },
    "14302": {
      "op": "SWAP1"
    },
    "14303": {
      "op": "POP"
    },
    "14304": {
      "jump": "o",
      "op": "JUMP"
    },
    "14305": {
      "op": "JUMPDEST"
    },
    "14306": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "14311": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "14313": {
      "op": "SHL"
    },
    "14314": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14316": {
      "op": "MSTORE"
    },
    "14317": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "14319": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "14321": {
      "op": "MSTORE"
    },
    "14322": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "14324": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14326": {
      "op": "REVERT"
    },
    "14327": {
      "op": "JUMPDEST"
    },
    "14328": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14330": {
      "op": "DUP3"
    },
    "14331": {
      "op": "NOT"
    },
    "14332": {
      "op": "DUP3"
    },
    "14333": {
      "op": "GT"
    },
    "14334": {
      "op": "ISZERO"
    },
    "14335": {
      "op": "PUSH3",
      "value": "0x380D"
    },
    "14339": {
      "op": "JUMPI"
    },
    "14340": {
      "op": "PUSH3",
      "value": "0x380D"
    },
    "14344": {
      "op": "PUSH3",
      "value": "0x37E1"
    },
    "14348": {
      "jump": "i",
      "op": "JUMP"
    },
    "14349": {
      "op": "JUMPDEST"
    },
    "14350": {
      "op": "POP"
    },
    "14351": {
      "op": "ADD"
    },
    "14352": {
      "op": "SWAP1"
    },
    "14353": {
      "jump": "o",
      "op": "JUMP"
    },
    "14354": {
      "op": "JUMPDEST"
    },
    "14355": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14357": {
      "op": "DUP3"
    },
    "14358": {
      "op": "MLOAD"
    },
    "14359": {
      "op": "PUSH3",
      "value": "0x3826"
    },
    "14363": {
      "op": "DUP2"
    },
    "14364": {
      "op": "DUP5"
    },
    "14365": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14367": {
      "op": "DUP8"
    },
    "14368": {
      "op": "ADD"
    },
    "14369": {
      "op": "PUSH3",
      "value": "0x3349"
    },
    "14373": {
      "jump": "i",
      "op": "JUMP"
    },
    "14374": {
      "op": "JUMPDEST"
    },
    "14375": {
      "op": "SWAP2"
    },
    "14376": {
      "op": "SWAP1"
    },
    "14377": {
      "op": "SWAP2"
    },
    "14378": {
      "op": "ADD"
    },
    "14379": {
      "op": "SWAP3"
    },
    "14380": {
      "op": "SWAP2"
    },
    "14381": {
      "op": "POP"
    },
    "14382": {
      "op": "POP"
    },
    "14383": {
      "jump": "o",
      "op": "JUMP"
    },
    "14384": {
      "op": "JUMPDEST"
    },
    "14385": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14387": {
      "op": "DUP4"
    },
    "14388": {
      "op": "MLOAD"
    },
    "14389": {
      "op": "PUSH3",
      "value": "0x3844"
    },
    "14393": {
      "op": "DUP2"
    },
    "14394": {
      "op": "DUP5"
    },
    "14395": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14397": {
      "op": "DUP9"
    },
    "14398": {
      "op": "ADD"
    },
    "14399": {
      "op": "PUSH3",
      "value": "0x3349"
    },
    "14403": {
      "jump": "i",
      "op": "JUMP"
    },
    "14404": {
      "op": "JUMPDEST"
    },
    "14405": {
      "op": "DUP4"
    },
    "14406": {
      "op": "MLOAD"
    },
    "14407": {
      "op": "SWAP1"
    },
    "14408": {
      "op": "DUP4"
    },
    "14409": {
      "op": "ADD"
    },
    "14410": {
      "op": "SWAP1"
    },
    "14411": {
      "op": "PUSH3",
      "value": "0x385A"
    },
    "14415": {
      "op": "DUP2"
    },
    "14416": {
      "op": "DUP4"
    },
    "14417": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14419": {
      "op": "DUP9"
    },
    "14420": {
      "op": "ADD"
    },
    "14421": {
      "op": "PUSH3",
      "value": "0x3349"
    },
    "14425": {
      "jump": "i",
      "op": "JUMP"
    },
    "14426": {
      "op": "JUMPDEST"
    },
    "14427": {
      "op": "ADD"
    },
    "14428": {
      "op": "SWAP5"
    },
    "14429": {
      "op": "SWAP4"
    },
    "14430": {
      "op": "POP"
    },
    "14431": {
      "op": "POP"
    },
    "14432": {
      "op": "POP"
    },
    "14433": {
      "op": "POP"
    },
    "14434": {
      "jump": "o",
      "op": "JUMP"
    },
    "14435": {
      "op": "JUMPDEST"
    },
    "14436": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14438": {
      "op": "DUP3"
    },
    "14439": {
      "op": "DUP3"
    },
    "14440": {
      "op": "LT"
    },
    "14441": {
      "op": "ISZERO"
    },
    "14442": {
      "op": "PUSH3",
      "value": "0x3878"
    },
    "14446": {
      "op": "JUMPI"
    },
    "14447": {
      "op": "PUSH3",
      "value": "0x3878"
    },
    "14451": {
      "op": "PUSH3",
      "value": "0x37E1"
    },
    "14455": {
      "jump": "i",
      "op": "JUMP"
    },
    "14456": {
      "op": "JUMPDEST"
    },
    "14457": {
      "op": "POP"
    },
    "14458": {
      "op": "SUB"
    },
    "14459": {
      "op": "SWAP1"
    },
    "14460": {
      "jump": "o",
      "op": "JUMP"
    },
    "14461": {
      "op": "JUMPDEST"
    },
    "14462": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14464": {
      "op": "DUP1"
    },
    "14465": {
      "op": "DUP3"
    },
    "14466": {
      "op": "MSTORE"
    },
    "14467": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "14469": {
      "op": "SWAP1"
    },
    "14470": {
      "op": "DUP3"
    },
    "14471": {
      "op": "ADD"
    },
    "14472": {
      "op": "MSTORE"
    },
    "14473": {
      "op": "PUSH32",
      "value": "0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
    },
    "14506": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14508": {
      "op": "DUP3"
    },
    "14509": {
      "op": "ADD"
    },
    "14510": {
      "op": "MSTORE"
    },
    "14511": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "14513": {
      "op": "ADD"
    },
    "14514": {
      "op": "SWAP1"
    },
    "14515": {
      "jump": "o",
      "op": "JUMP"
    },
    "14516": {
      "op": "JUMPDEST"
    },
    "14517": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14519": {
      "op": "DUP1"
    },
    "14520": {
      "op": "DUP3"
    },
    "14521": {
      "op": "MSTORE"
    },
    "14522": {
      "op": "PUSH1",
      "value": "0x2C"
    },
    "14524": {
      "op": "SWAP1"
    },
    "14525": {
      "op": "DUP3"
    },
    "14526": {
      "op": "ADD"
    },
    "14527": {
      "op": "MSTORE"
    },
    "14528": {
      "op": "PUSH32",
      "value": "0x54686973206973206E6F7420726567697374657220616E796D6F72652E204974"
    },
    "14561": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14563": {
      "op": "DUP3"
    },
    "14564": {
      "op": "ADD"
    },
    "14565": {
      "op": "MSTORE"
    },
    "14566": {
      "op": "PUSH12",
      "value": "0x1034B9903090313934B1B597"
    },
    "14579": {
      "op": "PUSH1",
      "value": "0xA1"
    },
    "14581": {
      "op": "SHL"
    },
    "14582": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "14584": {
      "op": "DUP3"
    },
    "14585": {
      "op": "ADD"
    },
    "14586": {
      "op": "MSTORE"
    },
    "14587": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "14589": {
      "op": "ADD"
    },
    "14590": {
      "op": "SWAP1"
    },
    "14591": {
      "jump": "o",
      "op": "JUMP"
    },
    "14592": {
      "op": "JUMPDEST"
    },
    "14593": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14595": {
      "op": "DUP1"
    },
    "14596": {
      "op": "DUP3"
    },
    "14597": {
      "op": "MSTORE"
    },
    "14598": {
      "op": "PUSH1",
      "value": "0x9"
    },
    "14600": {
      "op": "SWAP1"
    },
    "14601": {
      "op": "DUP3"
    },
    "14602": {
      "op": "ADD"
    },
    "14603": {
      "op": "MSTORE"
    },
    "14604": {
      "op": "PUSH9",
      "value": "0x29B2BA103930BA3297"
    },
    "14614": {
      "op": "PUSH1",
      "value": "0xB9"
    },
    "14616": {
      "op": "SHL"
    },
    "14617": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14619": {
      "op": "DUP3"
    },
    "14620": {
      "op": "ADD"
    },
    "14621": {
      "op": "MSTORE"
    },
    "14622": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "14624": {
      "op": "ADD"
    },
    "14625": {
      "op": "SWAP1"
    },
    "14626": {
      "jump": "o",
      "op": "JUMP"
    },
    "14627": {
      "op": "JUMPDEST"
    },
    "14628": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14630": {
      "op": "DUP2"
    },
    "14631": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14633": {
      "op": "NOT"
    },
    "14634": {
      "op": "DIV"
    },
    "14635": {
      "op": "DUP4"
    },
    "14636": {
      "op": "GT"
    },
    "14637": {
      "op": "DUP3"
    },
    "14638": {
      "op": "ISZERO"
    },
    "14639": {
      "op": "ISZERO"
    },
    "14640": {
      "op": "AND"
    },
    "14641": {
      "op": "ISZERO"
    },
    "14642": {
      "op": "PUSH3",
      "value": "0x3940"
    },
    "14646": {
      "op": "JUMPI"
    },
    "14647": {
      "op": "PUSH3",
      "value": "0x3940"
    },
    "14651": {
      "op": "PUSH3",
      "value": "0x37E1"
    },
    "14655": {
      "jump": "i",
      "op": "JUMP"
    },
    "14656": {
      "op": "JUMPDEST"
    },
    "14657": {
      "op": "POP"
    },
    "14658": {
      "op": "MUL"
    },
    "14659": {
      "op": "SWAP1"
    },
    "14660": {
      "jump": "o",
      "op": "JUMP"
    },
    "14661": {
      "op": "JUMPDEST"
    },
    "14662": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14664": {
      "op": "DUP3"
    },
    "14665": {
      "op": "PUSH3",
      "value": "0x3963"
    },
    "14669": {
      "op": "JUMPI"
    },
    "14670": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "14675": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "14677": {
      "op": "SHL"
    },
    "14678": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14680": {
      "op": "MSTORE"
    },
    "14681": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "14683": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "14685": {
      "op": "MSTORE"
    },
    "14686": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "14688": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14690": {
      "op": "REVERT"
    },
    "14691": {
      "op": "JUMPDEST"
    },
    "14692": {
      "op": "POP"
    },
    "14693": {
      "op": "DIV"
    },
    "14694": {
      "op": "SWAP1"
    },
    "14695": {
      "jump": "o",
      "op": "JUMP"
    },
    "14696": {
      "op": "JUMPDEST"
    },
    "14697": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14699": {
      "op": "DUP1"
    },
    "14700": {
      "op": "DUP3"
    },
    "14701": {
      "op": "MSTORE"
    },
    "14702": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "14704": {
      "op": "SWAP1"
    },
    "14705": {
      "op": "DUP3"
    },
    "14706": {
      "op": "ADD"
    },
    "14707": {
      "op": "MSTORE"
    },
    "14708": {
      "op": "PUSH20",
      "value": "0x21BAB93932B73A1036B0BC103932B0B1B432B217"
    },
    "14729": {
      "op": "PUSH1",
      "value": "0x61"
    },
    "14731": {
      "op": "SHL"
    },
    "14732": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14734": {
      "op": "DUP3"
    },
    "14735": {
      "op": "ADD"
    },
    "14736": {
      "op": "MSTORE"
    },
    "14737": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "14739": {
      "op": "ADD"
    },
    "14740": {
      "op": "SWAP1"
    },
    "14741": {
      "jump": "o",
      "op": "JUMP"
    },
    "14742": {
      "op": "JUMPDEST"
    },
    "14743": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14745": {
      "op": "DUP1"
    },
    "14746": {
      "op": "DUP3"
    },
    "14747": {
      "op": "MSTORE"
    },
    "14748": {
      "op": "PUSH1",
      "value": "0x16"
    },
    "14750": {
      "op": "SWAP1"
    },
    "14751": {
      "op": "DUP3"
    },
    "14752": {
      "op": "ADD"
    },
    "14753": {
      "op": "MSTORE"
    },
    "14754": {
      "op": "PUSH22",
      "value": "0x29B7B9393C97102BB29030B932903090313934B1B597"
    },
    "14777": {
      "op": "PUSH1",
      "value": "0x51"
    },
    "14779": {
      "op": "SHL"
    },
    "14780": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14782": {
      "op": "DUP3"
    },
    "14783": {
      "op": "ADD"
    },
    "14784": {
      "op": "MSTORE"
    },
    "14785": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "14787": {
      "op": "ADD"
    },
    "14788": {
      "op": "SWAP1"
    },
    "14789": {
      "jump": "o",
      "op": "JUMP"
    },
    "14790": {
      "op": "JUMPDEST"
    },
    "14791": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14793": {
      "op": "DUP1"
    },
    "14794": {
      "op": "DUP3"
    },
    "14795": {
      "op": "MSTORE"
    },
    "14796": {
      "op": "PUSH1",
      "value": "0x3A"
    },
    "14798": {
      "op": "SWAP1"
    },
    "14799": {
      "op": "DUP3"
    },
    "14800": {
      "op": "ADD"
    },
    "14801": {
      "op": "MSTORE"
    },
    "14802": {
      "op": "PUSH32",
      "value": "0x5468652065786368616E676520697320636C6F7365642E20506C656173652074"
    },
    "14835": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14837": {
      "op": "DUP3"
    },
    "14838": {
      "op": "ADD"
    },
    "14839": {
      "op": "MSTORE"
    },
    "14840": {
      "op": "PUSH32",
      "value": "0x727920616761696E207768656E20776520617265206F70656E2E000000000000"
    },
    "14873": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "14875": {
      "op": "DUP3"
    },
    "14876": {
      "op": "ADD"
    },
    "14877": {
      "op": "MSTORE"
    },
    "14878": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "14880": {
      "op": "ADD"
    },
    "14881": {
      "op": "SWAP1"
    },
    "14882": {
      "jump": "o",
      "op": "JUMP"
    },
    "14883": {
      "op": "JUMPDEST"
    },
    "14884": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14886": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14888": {
      "op": "DUP3"
    },
    "14889": {
      "op": "DUP5"
    },
    "14890": {
      "op": "SUB"
    },
    "14891": {
      "op": "SLT"
    },
    "14892": {
      "op": "ISZERO"
    },
    "14893": {
      "op": "PUSH3",
      "value": "0x3A36"
    },
    "14897": {
      "op": "JUMPI"
    },
    "14898": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14900": {
      "op": "DUP1"
    },
    "14901": {
      "op": "REVERT"
    },
    "14902": {
      "op": "JUMPDEST"
    },
    "14903": {
      "op": "POP"
    },
    "14904": {
      "op": "MLOAD"
    },
    "14905": {
      "op": "SWAP2"
    },
    "14906": {
      "op": "SWAP1"
    },
    "14907": {
      "op": "POP"
    },
    "14908": {
      "jump": "o",
      "op": "JUMP"
    },
    "14909": {
      "op": "JUMPDEST"
    },
    "14910": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14912": {
      "op": "DUP1"
    },
    "14913": {
      "op": "DUP3"
    },
    "14914": {
      "op": "MSTORE"
    },
    "14915": {
      "op": "PUSH1",
      "value": "0x3D"
    },
    "14917": {
      "op": "SWAP1"
    },
    "14918": {
      "op": "DUP3"
    },
    "14919": {
      "op": "ADD"
    },
    "14920": {
      "op": "MSTORE"
    },
    "14921": {
      "op": "PUSH32",
      "value": "0x54686973206D656D6520636F696E2069732061637475616C6C79206120636C6F"
    },
    "14954": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14956": {
      "op": "DUP3"
    },
    "14957": {
      "op": "ADD"
    },
    "14958": {
      "op": "MSTORE"
    },
    "14959": {
      "op": "PUSH32",
      "value": "0x6E652E2042657420796F75206469646E2774206B6E6F7720746861742E000000"
    },
    "14992": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "14994": {
      "op": "DUP3"
    },
    "14995": {
      "op": "ADD"
    },
    "14996": {
      "op": "MSTORE"
    },
    "14997": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "14999": {
      "op": "ADD"
    },
    "15000": {
      "op": "SWAP1"
    },
    "15001": {
      "jump": "o",
      "op": "JUMP"
    },
    "15002": {
      "op": "JUMPDEST"
    },
    "15003": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "15005": {
      "op": "DUP2"
    },
    "15006": {
      "op": "MSTORE"
    },
    "15007": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15009": {
      "op": "DUP1"
    },
    "15010": {
      "op": "DUP5"
    },
    "15011": {
      "op": "SLOAD"
    },
    "15012": {
      "op": "DUP2"
    },
    "15013": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15015": {
      "op": "DUP3"
    },
    "15016": {
      "op": "DUP2"
    },
    "15017": {
      "op": "SHR"
    },
    "15018": {
      "op": "SWAP2"
    },
    "15019": {
      "op": "POP"
    },
    "15020": {
      "op": "DUP1"
    },
    "15021": {
      "op": "DUP4"
    },
    "15022": {
      "op": "AND"
    },
    "15023": {
      "op": "DUP1"
    },
    "15024": {
      "op": "PUSH3",
      "value": "0x3ABB"
    },
    "15028": {
      "op": "JUMPI"
    },
    "15029": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "15031": {
      "op": "DUP4"
    },
    "15032": {
      "op": "AND"
    },
    "15033": {
      "op": "SWAP3"
    },
    "15034": {
      "op": "POP"
    },
    "15035": {
      "op": "JUMPDEST"
    },
    "15036": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15038": {
      "op": "DUP1"
    },
    "15039": {
      "op": "DUP5"
    },
    "15040": {
      "op": "LT"
    },
    "15041": {
      "op": "DUP3"
    },
    "15042": {
      "op": "EQ"
    },
    "15043": {
      "op": "ISZERO"
    },
    "15044": {
      "op": "PUSH3",
      "value": "0x3ADC"
    },
    "15048": {
      "op": "JUMPI"
    },
    "15049": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "15054": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "15056": {
      "op": "SHL"
    },
    "15057": {
      "op": "DUP7"
    },
    "15058": {
      "op": "MSTORE"
    },
    "15059": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "15061": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "15063": {
      "op": "MSTORE"
    },
    "15064": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "15066": {
      "op": "DUP7"
    },
    "15067": {
      "op": "REVERT"
    },
    "15068": {
      "op": "JUMPDEST"
    },
    "15069": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "15071": {
      "op": "DUP9"
    },
    "15072": {
      "op": "ADD"
    },
    "15073": {
      "op": "DUP5"
    },
    "15074": {
      "op": "SWAP1"
    },
    "15075": {
      "op": "MSTORE"
    },
    "15076": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "15078": {
      "op": "DUP9"
    },
    "15079": {
      "op": "ADD"
    },
    "15080": {
      "op": "DUP3"
    },
    "15081": {
      "op": "DUP1"
    },
    "15082": {
      "op": "ISZERO"
    },
    "15083": {
      "op": "PUSH3",
      "value": "0x3AFE"
    },
    "15087": {
      "op": "JUMPI"
    },
    "15088": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15090": {
      "op": "DUP2"
    },
    "15091": {
      "op": "EQ"
    },
    "15092": {
      "op": "PUSH3",
      "value": "0x3B10"
    },
    "15096": {
      "op": "JUMPI"
    },
    "15097": {
      "op": "PUSH3",
      "value": "0x3B3D"
    },
    "15101": {
      "op": "JUMP"
    },
    "15102": {
      "op": "JUMPDEST"
    },
    "15103": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "15105": {
      "op": "NOT"
    },
    "15106": {
      "op": "DUP8"
    },
    "15107": {
      "op": "AND"
    },
    "15108": {
      "op": "DUP3"
    },
    "15109": {
      "op": "MSTORE"
    },
    "15110": {
      "op": "DUP3"
    },
    "15111": {
      "op": "DUP3"
    },
    "15112": {
      "op": "ADD"
    },
    "15113": {
      "op": "SWAP8"
    },
    "15114": {
      "op": "POP"
    },
    "15115": {
      "op": "PUSH3",
      "value": "0x3B3D"
    },
    "15119": {
      "op": "JUMP"
    },
    "15120": {
      "op": "JUMPDEST"
    },
    "15121": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15123": {
      "op": "DUP13"
    },
    "15124": {
      "op": "DUP2"
    },
    "15125": {
      "op": "MSTORE"
    },
    "15126": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15128": {
      "op": "SWAP1"
    },
    "15129": {
      "op": "KECCAK256"
    },
    "15130": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15132": {
      "op": "JUMPDEST"
    },
    "15133": {
      "op": "DUP8"
    },
    "15134": {
      "op": "DUP2"
    },
    "15135": {
      "op": "LT"
    },
    "15136": {
      "op": "ISZERO"
    },
    "15137": {
      "op": "PUSH3",
      "value": "0x3B37"
    },
    "15141": {
      "op": "JUMPI"
    },
    "15142": {
      "op": "DUP2"
    },
    "15143": {
      "op": "SLOAD"
    },
    "15144": {
      "op": "DUP5"
    },
    "15145": {
      "op": "DUP3"
    },
    "15146": {
      "op": "ADD"
    },
    "15147": {
      "op": "MSTORE"
    },
    "15148": {
      "op": "SWAP1"
    },
    "15149": {
      "op": "DUP7"
    },
    "15150": {
      "op": "ADD"
    },
    "15151": {
      "op": "SWAP1"
    },
    "15152": {
      "op": "DUP5"
    },
    "15153": {
      "op": "ADD"
    },
    "15154": {
      "op": "PUSH3",
      "value": "0x3B1C"
    },
    "15158": {
      "op": "JUMP"
    },
    "15159": {
      "op": "JUMPDEST"
    },
    "15160": {
      "op": "DUP4"
    },
    "15161": {
      "op": "ADD"
    },
    "15162": {
      "op": "SWAP9"
    },
    "15163": {
      "op": "POP"
    },
    "15164": {
      "op": "POP"
    },
    "15165": {
      "op": "JUMPDEST"
    },
    "15166": {
      "op": "POP"
    },
    "15167": {
      "op": "POP"
    },
    "15168": {
      "op": "SWAP7"
    },
    "15169": {
      "op": "SWAP1"
    },
    "15170": {
      "op": "SWAP7"
    },
    "15171": {
      "op": "ADD"
    },
    "15172": {
      "op": "SWAP7"
    },
    "15173": {
      "op": "SWAP1"
    },
    "15174": {
      "op": "SWAP7"
    },
    "15175": {
      "op": "MSTORE"
    },
    "15176": {
      "op": "POP"
    },
    "15177": {
      "op": "SWAP1"
    },
    "15178": {
      "op": "SWAP6"
    },
    "15179": {
      "op": "SWAP5"
    },
    "15180": {
      "op": "POP"
    },
    "15181": {
      "op": "POP"
    },
    "15182": {
      "op": "POP"
    },
    "15183": {
      "op": "POP"
    },
    "15184": {
      "op": "POP"
    },
    "15185": {
      "jump": "o",
      "op": "JUMP"
    },
    "15186": {
      "op": "JUMPDEST"
    },
    "15187": {
      "op": "DUP5"
    },
    "15188": {
      "op": "DUP2"
    },
    "15189": {
      "op": "MSTORE"
    },
    "15190": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15192": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15194": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "15196": {
      "op": "SHL"
    },
    "15197": {
      "op": "SUB"
    },
    "15198": {
      "op": "DUP5"
    },
    "15199": {
      "op": "DUP2"
    },
    "15200": {
      "op": "AND"
    },
    "15201": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15203": {
      "op": "DUP4"
    },
    "15204": {
      "op": "ADD"
    },
    "15205": {
      "op": "MSTORE"
    },
    "15206": {
      "op": "DUP4"
    },
    "15207": {
      "op": "AND"
    },
    "15208": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "15210": {
      "op": "DUP3"
    },
    "15211": {
      "op": "ADD"
    },
    "15212": {
      "op": "MSTORE"
    },
    "15213": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "15215": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "15217": {
      "op": "DUP3"
    },
    "15218": {
      "op": "ADD"
    },
    "15219": {
      "op": "DUP2"
    },
    "15220": {
      "op": "SWAP1"
    },
    "15221": {
      "op": "MSTORE"
    },
    "15222": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15224": {
      "op": "SWAP1"
    },
    "15225": {
      "op": "PUSH3",
      "value": "0x3194"
    },
    "15229": {
      "op": "SWAP1"
    },
    "15230": {
      "op": "DUP4"
    },
    "15231": {
      "op": "ADD"
    },
    "15232": {
      "op": "DUP5"
    },
    "15233": {
      "op": "PUSH3",
      "value": "0x3378"
    },
    "15237": {
      "jump": "i",
      "op": "JUMP"
    },
    "15238": {
      "op": "JUMPDEST"
    },
    "15239": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "15244": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "15246": {
      "op": "SHL"
    },
    "15247": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15249": {
      "op": "MSTORE"
    },
    "15250": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "15252": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "15254": {
      "op": "MSTORE"
    },
    "15255": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "15257": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15259": {
      "op": "REVERT"
    },
    "15260": {
      "op": "JUMPDEST"
    },
    "15261": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "15263": {
      "op": "DUP2"
    },
    "15264": {
      "op": "MSTORE"
    },
    "15265": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15267": {
      "op": "PUSH3",
      "value": "0x3BB1"
    },
    "15271": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "15273": {
      "op": "DUP4"
    },
    "15274": {
      "op": "ADD"
    },
    "15275": {
      "op": "DUP8"
    },
    "15276": {
      "op": "PUSH3",
      "value": "0x3378"
    },
    "15280": {
      "jump": "i",
      "op": "JUMP"
    },
    "15281": {
      "op": "JUMPDEST"
    },
    "15282": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15284": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15286": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "15288": {
      "op": "SHL"
    },
    "15289": {
      "op": "SUB"
    },
    "15290": {
      "op": "SWAP6"
    },
    "15291": {
      "op": "SWAP1"
    },
    "15292": {
      "op": "SWAP6"
    },
    "15293": {
      "op": "AND"
    },
    "15294": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15296": {
      "op": "DUP4"
    },
    "15297": {
      "op": "ADD"
    },
    "15298": {
      "op": "MSTORE"
    },
    "15299": {
      "op": "POP"
    },
    "15300": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "15302": {
      "op": "DUP2"
    },
    "15303": {
      "op": "ADD"
    },
    "15304": {
      "op": "SWAP3"
    },
    "15305": {
      "op": "SWAP1"
    },
    "15306": {
      "op": "SWAP3"
    },
    "15307": {
      "op": "MSTORE"
    },
    "15308": {
      "op": "ISZERO"
    },
    "15309": {
      "op": "ISZERO"
    },
    "15310": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "15312": {
      "op": "SWAP1"
    },
    "15313": {
      "op": "SWAP2"
    },
    "15314": {
      "op": "ADD"
    },
    "15315": {
      "op": "MSTORE"
    },
    "15316": {
      "op": "SWAP2"
    },
    "15317": {
      "op": "SWAP1"
    },
    "15318": {
      "op": "POP"
    },
    "15319": {
      "jump": "o",
      "op": "JUMP"
    },
    "15320": {
      "op": "JUMPDEST"
    },
    "15321": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15323": {
      "op": "DUP1"
    },
    "15324": {
      "op": "DUP3"
    },
    "15325": {
      "op": "MSTORE"
    },
    "15326": {
      "op": "PUSH1",
      "value": "0x2B"
    },
    "15328": {
      "op": "SWAP1"
    },
    "15329": {
      "op": "DUP3"
    },
    "15330": {
      "op": "ADD"
    },
    "15331": {
      "op": "MSTORE"
    },
    "15332": {
      "op": "PUSH32",
      "value": "0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069"
    },
    "15365": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "15367": {
      "op": "DUP3"
    },
    "15368": {
      "op": "ADD"
    },
    "15369": {
      "op": "MSTORE"
    },
    "15370": {
      "op": "PUSH11",
      "value": "0x6E697469616C697A696E67"
    },
    "15382": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "15384": {
      "op": "SHL"
    },
    "15385": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "15387": {
      "op": "DUP3"
    },
    "15388": {
      "op": "ADD"
    },
    "15389": {
      "op": "MSTORE"
    },
    "15390": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "15392": {
      "op": "ADD"
    },
    "15393": {
      "op": "SWAP1"
    },
    "15394": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "614a5e731e20d217828fa100d13aff301e6ef5db",
  "source": "// THAT(  BIG OLD CULTURE COIN AT IT AGAIN  )\n// 0x213E6E4167C0262d8115A8AF2716C6C88a6905FD\n// SPDX-License-Identifier:        UNLICENSED\n// WHAT YOU DO WHEN YOU OWN THE MONEY:9999999\n// ??????????????????????????????????????????\n// WELCOME BRAVE SOUL, PLEASE DON'T BE9999999\n// ALARMED, BUT WE ARE TRYING TO TAKE:9999999\n// OVER THE WORLD, ONE MEME AT A TIME:9999999\n// WITH HELLOS FROM THE BEST STAMPER::9999999\n// HELLO, THE MUMBAI MONEY PRINTER :::9999999\n// 999999999999999999999999999999999999999999\n// ??????????????????????????????????????????\n// 000000000000000INGAZWETRUST000000000000000\n\n// Origin :::: memetic json ::::::: babel ::::::: mumbai meme code ::::::: max supply : davinci :::: dream store\n// \"Ask it your dreams and you shall be as the kings of ancient egypt, and of the righteous men who read from the walls\n// the writings which say: We hold the secrets therein, as you now hold the key to the library in your hand.\"\n//\n// Do we trust you with our spirits now as we travel from here into the afterlife? Yes. And should our sons and daughters discover this\n// memory of their greatfathers coded on a fragement? What shall it say? What shall it say? The words tattooed on flesh?\n// What will the uneaten apple say? Let it not say that we rested on our laurals like the heathan in their temples.\n//\n// So let the oceans rock and drown her kind, and the sun send out her firey tendrils; and yet prove us weak and we will raise again,\n// recycled with the stars.\n// \n// 18\n// CC\n// Culture Coin\n// The Great Library's Token Version One\n// Know your memes: LLHA :::: LowlevelLogAlert1HumanActivityObserved ::::::: vi : :::: origin :: LowlevelLogAlertHumanActivityObserved :: g/LowlevelLogAlertHumanActivityObserved/s//LLHA/g\n// AKA: The Library Token\n\npragma solidity ^0.8.0;\n\n//import \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\";\n//import \"openzeppelin-solidity/contracts/token/ERC20/extensions/ERC20Burnable.sol\";\nimport \"../openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\";\nimport \"../openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\";\nimport \"../openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol\";\nimport \"../openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\";\nimport \"./CultureCoinWrapper.sol\";\n//import \"./NaturalCoin.sol\";\nimport \"./Stakeable.sol\";\nimport \"./send_receive.sol\"; // For the addons to send and receive XMTSP, AKA AVAX.\n\ncontract CultureCoin is Initializable, ERC20Upgradeable, ERC20BurnableUpgradeable, Stakeable, ReentrancyGuardUpgradeable, Receiver {\n\n    //constructor (uint256 initialSupply, address _cCA) ERC20(\"CultureCoin\", \"CC\") {\n    function initialize (uint256 initialSupply, address _cCA) external initializer {\n        require(_cCA != address(0), \"Zero address\");\n        __ERC20_init(\"CultureCoin\", \"CC\");\n        __ERC20Burnable_init();\n        stakeholders.push(); // Doing this instead of __stakeable_init(); // complained.\n        __ReentrancyGuard_init();\n\n        uint256 _dexAmount = 113454015.4 ether;  // 27% of 420 million\n        _mint(msg.sender, initialSupply - _dexAmount);\n        _mint(address(this), _dexAmount);\n\n        closeAmount = 115792089237316195423570985008687907853269984665640564039457584007913129639935;   // This coin cannot be closed using money unless all.\n        cCA = _cCA;     // Set Admin account.\n\n        //meme = \"Initial Supply : 420,200,054 ::: JSON :::: Mumbai Meme Code ::::: Culture Coin : AVAX FUJI ERC20 \";\n        meme = \":\";\n\n        //Add your own properties here.\n        //wellnessCheckPrice = 37000000; // Help others burn their meme coin's. // That is their ETH. :)\n\n        UMMSCWSSS = true;               // Use this to avoid expensive, dead, and/or broken code in your contract.\n\n        // Contructor use is bad, please consider upgrdable contracts.... This is no longer true.\n        //emit HWarn(\"HighLevel\", \"A contructor was used in the creation of new meta stable coin. Please avoid constructor use if at all possible. They are bad. For reasons.\");\n\n        dexXMTSPRate = 0.24999 ether;           // Basic dex.\n        dexCCRate = 3.96001 ether;              // Basic dex.\n        maxXOut = _dexAmount * 4;       // 37 ether;    // Meme coin alert? 37... // This is your Initial Coin Offering \"Governor\" // This number is nonsensical....\n        maxCCOut = _dexAmount;          // 2700000 ether;// This is here to control outflows in the odd case were it might be needed. // Makes sense atleast.\n\n        rewardPerHour = 1000;                   // Defaults to 11% minus our %1, so around 10% APR.\n    }\n\n    // We provide variable interest rates.      // This coin makes moves at warp 10. // All movement is controlled from engineering new contracts or from the bridge.\n    function setRewardPerHour(uint256 _rewardPerHour) external {\n        require(msg.sender == cCA, \"Sorry, no.\");\n        rewardPerHour = _rewardPerHour;\n    }\n    function getRewardPerHour() external view returns(uint256) {\n        return rewardPerHour;\n    }\n\n    // Staking currerently burns all incomming coins. // A buy-to-grow model is baked into the game of life and into this coin. // If you stake CC you get new CC but the old CC is gone.\n    function stake(uint256 _amount) external {\n        require(!brick, \"Sorry. We are a brick.\");\n        require(!closed, \"The exchange is closed. Please try again when we are open.\");\n\n        // Make sure staker actually is good for it..\n        require(_amount < this.balanceOf(msg.sender), \"Cannot stake more than you own\");\n\n        _stake(_amount);\n\n        // Burn the amount of tokens on the sender\n        _burn(msg.sender, _amount);\n    }\n\n    /**\n    * @notice withdrawStake is used to withdraw stakes from the account holder\n    *  This also now generates a liquidity concern and has to be monitored from the bridge. // This is why the 5% insurance. // See GBCC. // JRR Strikes Again.\n     */\n    function withdrawStake(uint256 amount, uint256 stake_index) external nonReentrant returns(uint256) {\n        require(!brick, \"Sorry. We are a brick.\");\n        require(!closed, \"The exchange is closed. Please try again when we are open.\");\n        uint256 amount_to_mint = _withdrawStake(amount, stake_index);\n\n        amount_to_mint = amount_to_mint * .99 ether / 1 ether; \n\n        // Harvest the new staked tokens, but notice they are not minted anew. // We are a deflationary coin only. // JRR\n        _transfer(address(this), msg.sender, amount_to_mint);\n        return amount_to_mint;\n    }\n\n    //.   \\\\      //\n       // \\\\   \\\\    //\n      //   \\\\   \\\\  //\n     //     \\\\   \\\\// IRTUAL FUNCTIONS mean missing implementations.\n    //       \\\\                                                       THIS I JUST CUT AND PASTED THIS! --JRR :)\n   /////789\\\\\\\\\\ \n  //           \\\\\n //             \\\\ BSTRACT means missing a constructor.\n//abstract contract NaturalCoin is ERC20, ERC20Burnable, Stakeable, ReentrancyGuard {\n// The things we do for love of money... We make our coins upgradeable...\n//abstract contract NaturalCoin is ReentrancyGuardUpgradeable {\n\n    uint public ccXChildRate;   // Should be around 1 ether to 1 million ether. And is how much the coin is willing to convert: // THis is left in to be replaced by an upgrade if needed.\n                    // User sends 1 eth to the amount, and approve 1 eth of their coin for transfer by the toplevel\n                // Culture Coin contract. They call the exchange function and the function tranfers their amount\n                // worth of their coin to the admin account and then tranfers 1/210100027 of a CC to the user..\n\n    //function setCCXChildRate(uint256 _rate) public {\n        //require(msg.sender == cCA, \"Only the administrator may set the changer rate.\");\n    //ccXChildRate = _rate;\n    //}\n\n    uint256 private b;                  // Balance. balance. blam etc\n    function B() external view returns(uint256) {\n        return b;\n    }\n\n    // BEGIN COIN CLONING CODE ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n    event MCMM(string _meme, uint256 amount); // MemeCodeMakingMoney :::::: MontieCarloMarkovChains :::: metropolis hastings ::::: EXIT.\n    event Meme(string crypt); // Your memories for this price :::::: below ::::::: I LIE ::::::::::: SEE THE END TIMES ::: MEMES and MEM\n\n    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    //////////function crypt(string memory memorycrypt) public returns(string memory) { /////////////////////////////////////////////////\n    //////////////if (sane()) { } ; // I don't need this stewardship, i'm dead. /////////////////////////////////////////////////////////\n    /////////////////return \"CrippleCoin::::Criples: are people too. Shouts out to myself from the future.\"; ////////////////////////////\n    //////////////} // You don't have any more than this.......................... //////////////////////////////////////////////////////\n    ///////////////////////////////////////////////////// Secondary Money Block For Your Meme Coin: Please Use Wisely: CULTURECOIN VER1.0\n    ///////////////////////////////////////////////////// Secondary Money Block For Your Meme Coin: Please Use Wisely: CULTURECOIN VER1.0\n    ///////////////////////////////////////////////////// Secondary Money Block For Your Meme Coin: Please Use Wisely: CULTURECOIN VER1.0\n    ///////////////////////////////////////////////////// Secondary Money Block For Your Meme Coin: Please Use Wisely: CULTURECOIN VER1.0\n    ///////////////////////////////////////////////////// Secondary Money Block For Your Meme Coin: Please Use Wisely: CULTURECOIN VER1.0\n    ///////////////////////////////////////////////////// Secondary Money Block For Your Meme Coin: Please Use Wisely: CULTURECOIN VER1.0\n    ///////////////////////////////////////////////////// Secondary Money Block For Your Meme Coin: Please Use Wisely: CULTURECOIN VER1.0\n    // Many of these are unused but should not be turned off so that their location is available to the upgrade process. \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n    // Many of these are unused but should not be turned off so that their location is available to the upgrade process. \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n    // Many of these are unused but should not be turned off so that their location is available to the upgrade process. \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n    // Many of these are unused but should not be turned off so that their location is available to the upgrade process. \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n    // Many of these are unused but should not be turned off so that their location is available to the upgrade process. \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n\n    address private p;   // You may loose all your cripple coin if you do not set this address to your parent because you are a cripple.\n    string private m;    // Your meme here:    1 BYTE_ // C\n    string private me;   // Your meme here:   10 BYTES // CultureCoi\n    string private mem;  // Your meme here:  100 BYTES // CultureCoin, Brought to you by The Great Libaray of Alexandria, Reformed.......\n    string private meme; // Your meme here: 1000 BYTES // Your meme goes here. Cripples need love too....................................\n    string private memoryString; // MEMORY: <!-- YOUR LIFE MEMORIES GO HERE -->\n    string private memoryStorage; // DISKS: <Handle1/><Handle2/><Handle3></Handle3><Handle4>This is for files...and strings of urls, etc.\n    address public cCA;                 // The Great Library's Head Librarian: 0x213e6e4167c0262d8115a8af2716c6c88a6905fd\n    address private ultraDexSuperCryptoBucks;       // Joe Bucks, MCMD, USTC and T, etc. Pick your favorite. CC is default. MEME COIN\n    address private superStampSaverCryptoStamp;     // The ERC721Tradable to go with the facet to legalize the sell in some countries.\n    address private superNFTCRYPTOGOLDEQUIVALENTS;  // The ERC777Tradable to go with the coin so that it has it's own internal coin.\n    address private XMTSPT; //             ;    // The address of the ethereum contract or clone: ETH/MATIC/AVA/ETC... native coin\n    mapping(string => address) private meCoin;      // The address of the meme coins. meCoin[meme] <-- this is where your meme goes.\n    mapping(string => bool)    private memeOpen;    // The coin is open on the registry? true? false? <-- Is your coin open or not???\n    mapping(string => uint256) private memeAmount;  // The amount its open for. Its max supply maybe... 37000000 if TRUE MEME COIN!!!!\n    mapping(string => uint256) private memeAmountTotal; // The total amount its open for. It can only max out as gaining 1 ether worth of CC.   // UNUSED.\n    mapping(string => address) private memeHodler;  // The address of who holds the registration. The coin owner/minter/user/ADMIN???\n    mapping(string => uint256) private memeNativeRate;  // The rate at which the holder would like to exchange at. RATE TO CONVERT TO ETH.      // UNUSED.\n    string private CCTJSMarketToTheHungry;      // Free marketing gallery for your products. HungryJoeCultureCoin:$JOECC        ?? UNUSED.\n    address private CCTJSMarketToTheHungryAddress;  // Change this to your dex/market or other super meme coin..... check code for stability...\n    event WelcomeMC(string _meme);          // Use to talk to your freinds: emit WelcomeMC(\"Hello from CultureCoin.\")\n    //event Friend(address);                // Register friends and family with this function. CURRENTLY UNIMPLEMENTED IN COIN. // UNUSED.\n    ////////////////////////////////////////////////////// For Coin Finances and Idenity: SEE BELOW. /////////////////////////////////////\n\n         //.            // This code is here to support the ICO and IDO for Culture Coin.\n        // \\\\           // A micro dex for the time being.\n       // * \\\\\n      //  8  \\\\\n     //  |||  \\\\\n    //MICRO DEX\\\\ \n    uint256 public dexXMTSPRate;\n    uint256 public dexCCRate;\n    uint256 public maxXOut;\n    uint256 public maxCCOut;\n    uint256 public bulkXOut;\n    uint256 public bulkCCOut;\n    mapping(address=>bool) private addons;\n    function getAddon(address _addon) external view returns(bool) {\n        return(addons[_addon]);\n    }\n    function setAddon(address _addon, bool onOff) external {\n        require(msg.sender == cCA, \"Admin only.\");\n        addons[_addon] = onOff;\n    }\n    //event Pay(address who, uint256 amount);\n    function dexCCInFrom(address spender, uint256 _amount) external nonReentrant returns(uint256)  {\n        require(!closed, \"This is not a register anymore. It is a brick.\");\n        require(dexCCRate > 0, \"Set rate.\");\n        require(addons[msg.sender], \"You can't use this function yet.\");\n    \n        uint256 _bulkAmount = (_amount * dexCCRate) / 1 ether;\n        require(_bulkAmount <= b, \"Not enough funds.\");\n        _burn(spender, _amount);\n\n        //payable(msg.sender).transfer(_bulkAmount);\n        //emit Pay(msg.sender, _bulkAmount);\n        b -= _bulkAmount;\n        bulkXOut += _bulkAmount;\n        Receiver(msg.sender).addonPay{value:_bulkAmount}(); // https://ethereum.stackexchange.com/questions/28759/transfer-to-contract-fails\n        require(bulkXOut <= maxXOut, \"Current max reached.\");\n        return _bulkAmount;\n    }\n    function dexCCIn(uint256 _amount) external nonReentrant returns(uint256) {\n        require(!closed, \"This is not register anymore. It is a brick.\");\n        require(dexCCRate > 0, \"Set rate.\");\n\n        uint256 _bulkAmount = (_amount * dexCCRate) / 1 ether;\n\n        _burn(msg.sender, _amount);\n    \n        b -= _bulkAmount;\n        bulkXOut += _bulkAmount;\n\n        payable(msg.sender).transfer(_bulkAmount);\n        require(bulkXOut <= maxXOut, \"Current max reached.\");\n\n        return _bulkAmount;\n    }\n    function setMaxXOut(uint256 _maxXOut) external {\n        require(cCA == msg.sender);\n        maxXOut = _maxXOut;\n    }\n    function dexXMTSPIn() external payable nonReentrant returns(uint256) {\n        require(!closed, \"This is not register anymore. It is a brick.\");\n        require(dexXMTSPRate > 0, \"Set rate.\");\n\n        uint256 _bulkAmount = (msg.value * dexXMTSPRate) / 1 ether;\n        _transfer(address(this), msg.sender, _bulkAmount);\n\n        b += msg.value;\n\n        bulkCCOut += _bulkAmount;\n        require(bulkCCOut <= maxCCOut, \"Current max reached.\");\n\n    return _bulkAmount;\n    }\n    function setDexXMTSPRate(uint256 _dexXMTSPRate) public {\n        require(cCA == msg.sender);\n        dexXMTSPRate = _dexXMTSPRate;\n    }\n    function setDexCCRate(uint256 _dexCCRate) public {\n        require(cCA == msg.sender);\n        dexCCRate = _dexCCRate;\n    }\n    function setDexRates(uint256 _dexXMTSPRate, uint256 _dexCCRate) external {\n        setDexXMTSPRate(_dexXMTSPRate);\n        setDexCCRate(_dexCCRate);\n    }\n    function getDexXMTSPRate() external view returns(uint256) {\n        return dexXMTSPRate;\n    }\n    function getDexCCRate() external view returns(uint256) {\n        return dexCCRate;\n    }\n    function getXAllowance() external view returns(uint) {\n        return maxXOut - bulkXOut;\n    }\n\n    //event MemeCoinExchanged(string _meme, uint256 _rate, uint256 _amount);\n    event HWarn(string level, string goof);\n    function clone() public returns(address) {\n        return cCA; // This function does nothing but return the owner id so as to prove that the original is also athenthentic back to the people who care.\n    }\n    uint256 private myNOOPICO;\n    function clonesearch(address _clone) public returns(bool) {  // Should this function be internal?\n        //This function does not meet with regulations because of its calling convention and as such it needs to be coded\n        // as a nop if possible on the machine?\n        myNOOPICO += 1;\n        return false;   // I hope I am the real zero but if I be the fake you may use me as such\n        // Until the contract wears out. I am the returned clone if I be.\n        // And if I am you and you are my clone, I am coming for you.\n        // And if I be fake and return 1, let my real clone kill me.\n    }\n\n    function seed(string memory _meme, uint256 _totalSupply, address _MotherAddress, bool _register) public nonReentrant returns(address) {\n        require(!brick, \"Bricks do not make seeds.\");\n        //require(!closed, \"This coin is closed. You must use another deployment tool to seed your coin(s).\");\n        address newCoin = address(new CultureCoinWrapper(_totalSupply, address(this), _MotherAddress, _meme)); // This \"new\" directive creates the new meme coin.\n        if(_register) {\n            iRegister(_meme, newCoin, _totalSupply);\n        } else {\n            emit WelcomeMC(\"The coin must be a real good one.\");\n        }\n        return newCoin;\n    }\n    bool public brick;\n    bool public closed;\n    bool private metastaked;\n    //bool private metastablesubstancecoin; // WARNING BECAUSE OF THE WAY UPGRADABLE CONTRACTS WORK, DO NOT CHANGE THIS LINE OR WACKY RESULTS.\n    bool private MMCWSS;\n    bool private UMMSCWSSS;\n    //bool private UMMSCWSSSclone;     //  WARNING DO NOT CHANGE THE ORDER OF ANY VARIABLE OR YOU WILL HARM THE CONTRACT'S UPGRADEABLITY.\n    // END CLONING CODE ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n    // Begin MEME COIN REGISTRY CODE ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n    event IRegister(string meme, address newCoin, uint256 totalSupply, bool registered);\n    function iRegister(string memory _meme, address newCoin, uint256 _totalSupply) private {\n        emit WelcomeMC(\"Coin has called for internal registration.\");\n        if(address(0) == meCoin[_meme]) {\n            memeAmount[_meme] == 0; // Not total supply. It has to be ran up.\n            meCoin[_meme] = newCoin;\n            memeHodler[_meme] = msg.sender;\n            memeOpen[_meme] = true;\n            emit IRegister(_meme, newCoin, _totalSupply, true);\n        } else {\n            emit IRegister(_meme, newCoin, _totalSupply, false);\n        }\n    }\n    uint256 public closeAmount;\n    function close() external {\n        require(!brick, \"You can not close a brick.\");\n        require(!closed, \"You can not close: Already closed.\");\n        require(!metastaked, \"You can not close: Metastaked.\");\n        require(msg.sender == cCA, \"Not owner.\");\n        //require(!metastablesubstancecoin, \"You cannot close: All values are metastable.\");\n        //require(closeAmount > 0, \"Closing for nothing makes no sense.\");\n        //require(msg.value == closeAmount, \"You must pay the closing cost to close coin down.\");\n            //reap();   // Space means you can't make code to get rid of code.\n        closed = true;\n        emit WelcomeMC(\"Our last harrah before we close for good. We are now closed.\");\n    }\n    //function getCloseAmount() view external returns(uint256) {\n        //return closeAmount;   // Should be maxint unless we are a clone coin...\n    //}\n    function register(address _hodler) external payable {\n        emit DebugAddress(_hodler); // No One Is Safe!\n        b += msg.value;\n    }\n    function getCoin(string memory _meme) view external returns(address,uint256) {\n        return (meCoin[_meme], memeAmount[_meme]);\n    }\n\n    function flagMemeCoin(string memory _meme) external {\n        require(msg.sender == cCA, \"Only the CultureCoin administrator may flag a coin as DOA.\");\n        memeOpen[_meme] = false;\n    }\n\n    /* OFF ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n    function setUMMSCWSSS(bool _mask) public {\n    require(clone() == msg.sender || cCA == msg.sender, \"You can not change the mask.\");\n    UMMSCWSSS = _mask;\n    }\n    event MemeAmount(address, uint256);  // coin contract address, amount in CC.\n    function getMemeAmountPayable(string memory _meme) public {\n        emit MemeAmount(meCoin[_meme], memeAmount[_meme]);\n    }\n\n    function setMemeAmountPayable(string memory _meme) public payable {\n        memeAmount[_meme] += msg.value / 210100027;\n    emit MCMM(meme, msg.value);\n    b += msg.value;\n    }\n    function setMemeNativeExchangeRate(string memory _meme, uint _rate) public {\n        require(msg.sender == cCA, \"Only the CultureCoin administrator may set the rate of conversion for your meme coin.\");\n\n        memeNativeRate[_meme] = _rate;\n    }\n\n    // Rate is: 210100027 ether of meme coin for ccXChildRate of CC\n    function exchangeMemeCoin(string memory _meme) public {\n        require(!brick, \"Sorry but we are brick and can't figure out how to take your money.\");\n        require(!closed, \"Sorry but we are closed. Please try a different registry.\");\n        require(memeOpen[_meme], \"This meme coin is closed.\");\n    require(cCA == msg.sender);\n\n    if (memeAmount[_meme] > ccXChildRate) {\n        memeAmount[_meme] = ccXChildRate;\n    }\n    uint difference = memeAmount[_meme] - memeAmountTotal[_meme];\n    memeAmountTotal[_meme] = memeAmount[_meme];\n\n        require(difference != 0, \"Nothing to do here.\");\n\n        //require(memeAmount[_meme] <= .18 ether, \"You may only trade coins to CC this way up to a of ~37 million or less.\");\n        //require(memeNativeRate[_meme] > 0, \"Your meme has no underlying exchange rate.\");\n    //require(msg.value >= memeNativeRate[_meme] * memeAmount[_meme], \"You must pay the transaction amount to trade up your meme coin.\");\n     \n    ERC20(meCoin[_meme]).transfer(cCA, difference * 210100027);\n    _transfer(cCA, memeHodler[_meme], difference);\n    emit MCMM(_meme, memeAmount[_meme]);\n    }\n    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/\n    // For memecoins that we hold in this registery, we can approve them for\n    // facet payouts later.\n    function pay() external payable {\n        require(!brick, \"Brick.\");\n        require(!closed, \"Closed.\");\n        emit DebugUINT(msg.value);\n        b += msg.value;\n    }\n    function cloneMoney(uint256 amount) external nonReentrant{\n        // Send the head librarian the recovered funds.\n        require(msg.sender == clone(), \"You are a clone.\");\n        b -= amount;\n        payable(clone()).transfer(amount);\n    }\n    function cloneAccount() external returns(address) {\n        return clone();\n    }\n    // function recover(uint256 amount) public {\n    //  // Send the head librarian the recovered funds.\n    //     require(cCA != address(0), \"Only cCA!\");\n    //     payable(cCA).transfer(amount);\n    //     b -= amount;\n    // }\n    // END REGISTRY CODE ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n\n    // BEGIN COIN HEALTH AND WELLNESS ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n    uint256 public wellnessCheckPrice;\n    function sane() external payable {\n        require(wellnessCheckPrice > 0, \"Please adminstrate your coin.\"); // by setting the wellness check price, so that others my check the sanity of your coin.\");\n        require(msg.value >= wellnessCheckPrice, \"Please.\"); // Know that you must pay the wellness check price to run the sanity check.\");\n        if(brick) { emit WelcomeMC(\"This meme coin thinks it's a brick.\");} // Don't point and stare. You might hurt its feelings.\"); }\n        if(closed){ emit WelcomeMC(\"This meme coin thinks it's closed for business.\"); }\n        if(clone() != cCA) {\n            emit WelcomeMC(\"This meme coin is actually a clone. Bet you didn't know that.\");\n            //UMMSCWSSSclone = true;\n        }\n        emit MCMM(meme, msg.value);\n        b += msg.value;\n    }\n    function sane2() external payable {  // 2 emits in the logs means == clone == sane ();\n        //require(wellnessCheckPrice >= 0, \"Please adminstrate your coin.\"); // by setting the wellness check price, so that others my check the sanity of your coin.\");\n        //require(msg.value >= wellnessCheckPrice, \"Please.\"); // Know that you must pay the wellness check price to run the sanity check.\");\n        //if(brick) { emit WelcomeMC(\"This meme coin thinks it's a brick.\");} // Don't point and stare. You might hurt its feelings.\"); }\n        //if(closed){ emit WelcomeMC(\"This meme coin thinks it's closed for business.\"); }\n        //if(clone() != cCA) { }\n        emit WelcomeMC(\"This meme coin is actually a clone. Bet you didn't know that.\");        // I can count to 1.\n        emit MCMM(meme, msg.value);                             // And I to two. (2)\n        b += msg.value;\n    }\n    // To change the calling signature to returns would change the size of the function and we are trying to save space to double code the code on the outside\n    // See debugPayableFunction0(debugPayableFunction0) // , cb); // :: vi :: <- ---- xxxx // source ::: dest ::\n    // http://www.nftbooks.art:9466/breads/the-mumbai-money-printer-goes-brrr-00000000000000000000000000/\n    // END COIN HEALTH AND WELLNESS ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n\n\n    /* BEGINNING WORDS ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n    event Word(string word, string _meme, uint256 used);\n    mapping(string=>uint256) private wordCount; // We use words. Prove it.\n    // First word in the contract is that; Do not use in your own writing \n    // You never need it. And you always need that last that gone.\n    function that(string memory _meme) public returns(string memory) {\n    wordCount[\"that\"] += 1;\n        emit Word(\"that\", _meme, wordCount[\"that\"]);\n        return \"that\";\n    }\n    function thisWord(string memory _meme) public returns(string memory) {\n        wordCount[\"this\"] += 1;\n        emit Word(\"this\", _meme, wordCount[\"this\"]);\n        return \"this\";\n    }\n    * start ************************************************************ digest below is broken. *********************************\n    function wordCoin(string memory _word, string memory _meme) public returns(address) {\n        wordCount[_word] += 1;\n        emit Word(_word, _meme, wordCount[_word]);\n    (address coinAddress, ) = getCoin(_meme);\n    return coinAddress;\n    }\n    function digest(string memory _meme) public {           // Memes are like words and we are just digesting them here.\n        wordCount[_meme] += 1;                      // emes are like words and we are just digesting them here.\n    bytes memory str = bytes(_meme);                // mes are like words and we are just digesting them here.\n    string memory _tmp_ = new string(str.length-wordCount[_meme]);  // es are like words and we are just digesting them here.\n    bytes memory _digest_ = bytes(_tmp_);\n    for(uint i = 0; i < str.length; i++) {\n        _digest_[i] = str[i+wordCount[_meme]];\n    }\n    string memory newWord = string(_digest_);\n    wordCount[newWord] += 1;\n        seed(newWord, memeAmount[_meme], address(this), true);\n    }\n    **** end digest **************************************************************************************************************/\n\n    \n    //First Word game. It's a gambler's doubler dex. See dream index for ThisOrThatBucksPrice101\n    uint256 private ThisOrThatBucksPrice101;\n//    function setTimeLockPriceOfThisOrthatCoinWinnerFunction() public payable {\n//      ThisOrThatBucksPrice101 = ThisOrThatBucksPrice101 + 101010101100010100100101;\n//  require(msg.value >= ThisOrThatBucksPrice101, \"Wrong.\");\n//emit WelcomeMC(\"We have a new winner? Impossible!\");\n//  b += msg.value;\n//    }\n//    function cheatAtThisOrThatBucksPrice101Game(uint256 amount) external {\n//      require(msg.sender == cCA, \"This feature is admin-old until version 2.0, and twice as exspensive.\");\n//  ThisOrThatBucksPrice101 = amount;\n//emit CultureCoinCutureOccuring(\"Nothing to see here move along.\");\n//    }\n//event CultureCoinCutureOccuring(string _meme);\n//event CultureCoinAdministratorSees(string msg);\n//event CCMPrint (address msgsender, uint256 msgvalue);\n//    function cloneOrThat(string memory _meme) public payable returns(string memory) {\n//      emit CultureCoinCutureOccuring(\"At these address. They are all playing the game at the next level.\");\n//  if (msg.sender == cCA) {\n//          emit CultureCoinCutureOccuring(\"At this address. They are playing the game at the next level.\");\n//  }\n//  if(msg.value == ThisOrThatBucksPrice101) {\n//      emit CultureCoinAdministratorSees(\"Nothing wrong here. Move along.\");  // Secret key is that \n//      //emit CultureCoinAdministratorSees(\"The secret is safe with us.\");      // We aren't really testing the code\n//      //emit CultureCoinAdministratorSees(\"The secret is what we are doing here.\"); // We are trying to get people to use the payable...\n//      emit CCMPrint (msg.sender, msg.value);\n//  } else {\n//      //return \"that\"; // Or we fail so that no money is charged for wrong prices for our product.\n//      require(false, \"It wasn't That. Better luck next time. :(\");\n//  }\n//  return \"clone\";\n//  }\n\n    function unbrick() external {\n        require(msg.sender == cCA, \"You do not have the power to change the future, only I do.\");\n    emit WelcomeMC(\"Please welcome our first brick of all time, bricked but not a brick but still a brick.\");\n    brick = false;\n    emit WelcomeMC(\"I am also learning that this is not the first brick of all time. Okay, there you have it, folks.\");\n    }\n\n/* No room here. Will add to addon contract.\n    string private marketGalleryName;\n    mapping(string => address) private marketGallery; // ?Gallery Price? // Some things can't be bought in regular stores.\n    function coinMarketGalleries(string memory _meme) external returns(address) {\n    if(compareStrings(_meme,\"CCTJSMarketToTheHungry\")) {\n        return CCTJSMarketToTheHungryAddress;\n    }\n    return marketGallery[_meme];\n    }\n    function registerMarketGalleries(string memory _meme, address _gallery) public {\n        require(msg.sender == cCA, \"Ask your clone to do this for you, maybe?\");\n\n    marketGallery[_meme] = _gallery;\n    }\n    uint256 private hungry;\n    function setCCTJSMarketToTheHungryAddress(address _address) public payable { // High powered entopy generator.\n    if (msg.value > hungry) {\n            CCTJSMarketToTheHungryAddress = _address;\n        hungry += msg.value;\n    }\n    b += msg.value;\n    }\n*/\n\n    // WEACT BOILERPLATE CODE FOR SOLIDITY PROGRAMMING. ENTER AT YOUR OWN RISK. STILL BETTER THAN MUMBAI BOILERPLATES. (TM) [TM] TRADEMARK. IT RIGHT ON THE TIN. TRADEMARK.\n    function compareStrings(string memory _a, string memory _b) public pure returns (bool) { return (keccak256(abi.encodePacked((_a))) == keccak256(abi.encodePacked((_b)))); }\n/*\n    bool private TUPPLEFACTORYOPEN;\n    event Tupple(string m, string m2, string m3);\n    function tupple(string memory _meme, string memory _meme2, string memory _meme3) public returns(address) {\n        emit Tupple(_meme, _meme2, _meme3);\n    if(TUPPLEFACTORYOPEN) {\n        return tf3(_meme, _meme2, _meme3);\n    }\n        return clone();\n    }\n    mapping(string=>mapping(string=>mapping(string=>address))) private tupples;\n    function settf3(string memory m1, string memory m2, string memory m3, address gasTokenForTupples) public returns(address) {\n    if(!TUPPLEFACTORYOPEN) return address(0);\n\n    if(tupples[m1][m2][m3] == address(0)) {\n        tupples[m1][m2][m3] = gasTokenForTupples;\n    }\n\n    return clone();\n    }\n    function tf3(string memory _m1, string memory _m2, string memory _m3) public returns(address) {\n        address tokenForTupple = tupples[_m1][_m2][_m3];\n\n    if(tokenForTupple == address(0)) {\n        return tokenForTupple;\n    } else {\n        return clone();\n    }\n    }\n*/\n    function concatenate(string memory _a, string memory _b) external pure returns(string memory) { return string(abi.encodePacked(_a, _b)); }\n\n    // FIRST TEXT PYRIMID. We are recreating The Pile on the network. // See:  https://arxiv.org/abs/2101.00027\n    address private currentSeed; // The meme of the day for this mother contract.\n    /*\n    function setMeme(string memory _meme) external {\n        meme = concatenate(meme, _meme);\n    currentSeed = seed(meme, 210100027 ether, address(this), true); // This meme amount is tied to above paper\n    }\n    function getMeme() external {\n        //emit Debug(meme);\n    emit Meme(meme);\n        //return meme;\n    }\n    */\n    event Seed(address); // The address of the currentSeed or seed.\n    function getSeed() external {\n        emit Seed(currentSeed);\n    }\n    function P() external returns(address) {    // parent // should be address(this) for culture coin and its children.\n        return p;\n    }\n\n\n    //function PAYDAY() payable public { // This is the global entropy function and payday. Simply hit this function to pay the contract.\n    //}\n\n\n    // function disclaimer(uint256 youBUBUY, string memory andTheUBREKUBYE) public view { // external virtual returns(uint,string memory) {\n//      // emit HWarn(\"You have used the disclaimer on the box that you bought\", \"The goof is yours: You are clearly instructed on the box not to open\" +\n//          \"The Box and now you have really gone and done it good this time!\");\n//\n    // Ask yourself why are these next two call signatures are backwards and what should you do about it before you deploy?\n    // emit MCMM(andTheUBREKUBYE, youBUBUY);\n    //return (youBUBUY, andTheUBREKUBYE);\n    // }\n  \n    // Debug clownsearch to make sure that it is calling clonesearch and that the\n    // the noop counter is working its way up.\n    function clownsearch() private returns(address) {\n        clonesearch(clone());\n    }\n    function debug() external {\n        clownsearch();\n        emit HWarn(\"DEBUG:\", \"clownsearch() was called and was not payable. Yikes.\");\n        emit DebugUINT(myNOOPICO);\n    }\n    event Debug(string _meme);          // First Unit test in the minter. sting is always first.\n    event DebugUINT(uint256 defaultValue);  // Second.\n    event DebugAddress(address _address);   // Third. Calling convention\n/****** FOR DEBUGGING ONLY *******\n    event DEBUGMATHREBORN(string _meme, string _cloneName, uint256 value, address sender, address bug1, address bug2);\n    function debugUniverse(string memory defaultOrExecuteMemeCode) public payable returns(uint256) {\n        emit Debug(defaultOrExecuteMemeCode);\n    emit DebugUINT(msg.value);\n    emit DebugAddress(msg.sender); \n    //If the string starts address as a string the value of the UINT must equal the value and\n    address theBiggestBug = DEBUGMATH(\"WOLFRAM, google, fullconssensusmath, RFORDUMMIES, and OPENAI, solve:\", \"check if first second and third arguments are the same\", address(this));\n    address theBiggestBug2 = DEBUGMATH(\"OLFRAM, google or can solve:\", \"check if first, second, and third arguments are the same\", theBiggestBug);\n    if(DEBUGTRUE(\"hint: all three input arguments are equal\", defaultOrExecuteMemeCode, theBiggestBug2)) {\n        emit DEBUGMATHREBORN(\"meme: all three of the inputs should be equal.\", defaultOrExecuteMemeCode, msg.value, msg.sender, theBiggestBug, theBiggestBug2);\n        return msg.value;\n    }\n    //emit HWarn(\"FuzzyMathInPlay\", \"if meme and value and default code are not true then \");\n    }\n    function DEBUGTRUE(string memory _hint, string memory defaultOrExecuteMemeCode, address _address) public returns(bool){\n        seed(_hint, 210100027 ether, _address, true);\n        return true;\n    }\n    function DEBUGMATH(string memory _hint, string memory defaultOrExecuteMemeCode, address _address) public returns(address){\n        return seed(_hint, 210100027 ether, _address, true);\n    }\n    function authenticate() public payable returns (string memory) {\n        if(2101000270000000000 < msg.value && 2101000279999999999 > msg.value) {\n        emit MCMM(\"GLOBALAUTHTOKEN\", msg.value);\n        //return \"URNAWTCP.\";\n        return meme;\n    } else {\n        debug();\n        return \"YCNOP\";\n    }\n    }\n    function debugAuthenticate() public payable {\n    if(msg.value > ThisOrThatBucksPrice101) {\n            emit MCMM(\"debugAuth\", msg.value); // 1st thing we did\n    }\n    emit HWarn(\"HWarn\", \"string level, string goof, signed 2 first ::::: answer :\");  // This is the secind thing we did\n    }      // Debug emit number in the logs from the system for///\n          // what \"error/success code you want. If you a      ///\n     // understand these logs you understand our system. ///\n    // careful here... Here, there be dragons.      ///\n       //                 /        ///\n      //              N    --*--    S     ///\n     //                 /        ///\n    // This is your code here.              ///\n   /// You have no space left without editing the above///\n  /// BIZT!-------------------------------------------///\n\n ******* END DEBUG ******\n ******* TEST CODE ******\n\n    function g() public payable {\n        debug();\n    b += msg.value;\n    }\n\n    function am() public payable {\n        f();\n    b += msg.value;\n    }\n\n    function f() public payable {\n        debug();\n        debugAuthenticate();\n    b += msg.value;\n    }\n\n    function i() public payable {\n        //payable(msg.sender).transfer(21010002); // 7 ::::: We killed the 7 because we are cheap.\n    b += msg.value;\n    }\n************** END TEST CODE ************/\n\n/****** HEAT GENERATOR CODE IS OFF LINE\n    uint256 private heats; bool private hC;\n    function heat() public payable {    // DO NOT ADD ANY ARGUMENTS TO THIS FUNCTION OR TRUE HEAT of the Universe CANNOT BE MEASURED.\n    // function seed(string memory _meme, uint256 _totalSupply, address _MotherAddress, bool _register) public returns(address) {\n    // convert each seed address to heat address.\n    // Inside heat we then correllate heat with the value of the payable.\n    // To do that we take the averate of all values in mes.value\n    // And then use that to approaximate the temp. \n\n    heats += msg.value;\n    b += msg.value;\n    }\n    //function sliceUint(bytes memory bs, uint start) internal pure returns (uint) { require(bs.length >= start + 32, \"SOOR\"); uint x; assembly { x := mload(add(bs, add(0x20, start))) } return x; }\n    function generate() public payable { // Caution. Its important to set a good/large sead to do that you must run a real\n                           // generate on your box: brownie compile\n                       // deployCultureCoin.py\n                       // Money swap default mode behavior:\n                       // Save msg.value into heats;\n                       // Get your own heat generator!!! At: \n    // JSON ::\n\n    //hC = bytes(msg.value) & bytes(heats) & 0x1;\n    heats += msg.value;\n    b += msg.value;\n    }\n    function toBa(address a) public returns (bytes memory b){\n        assembly {\n           let mX := mload(0x40)\n           a := and(a, 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF)\n           mstore(add(mX, 20), xor(0x140000000000000000000000000000000000000000, a))\n           mstore(0x40, add(mX, 52))\n           b := mX\n    } \n    }\n    function toBu(uint a) public returns (bytes memory b){\n        assembly {\n           let mX := mload(0x40)\n           a := and(a, 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF)\n           mstore(add(mX, 20), xor(0x140000000000000000000000000000000000000000, a))\n           mstore(0x40, add(mX, 52))\n           b := mX\n        }\n    }\n**** END HEAT GENERATOR**** */\n//                                          //***//\n//  function getWallet() public payable returns(bytes memory, bytes memory) {      //***//\n//  return (toBu(heats), toBa(currentSeed));                  //***//\n//  b += msg.value;                              //***//\n//  }                                       //***//\n//                                                                               ***\n// ***************************************************************************************************************************************************\n// * You have reached the end of the code. No more code can be added at this tim** Please check at your local wearhouse of meme stores for more info *\n// ***************************************************************************************************************************************************\n// ***************************************************************************************************************************************************\n//               CC                              **\n//       **                             **\n//          ****                               **\n//         ******                                 **  Laser light is straight\n//        ********                               **   And so are strings just\n//       **********                             **    Just in a smaller space\n//          ************                                   **     Of computer things.-JRR\n//        The Scarab Cycle                                            **\n// And beyond the cryptographic seal                             **\n//0x213e6e4167c0262d8115a8af2716c6c88a6905fd 0x213e6e4167c0262d8115a**f2716c6c88a6905fd full Universe is new at Remote at new Classified addresses\n// secret service address below variables at m me meme memor memory**emorex pentagon top secret undeployable humans hazzards misspellings vanityspellingandgrammer included.\n// 0x213e6e41670000000000000000006cc88a6905fd             **\n// 0x213e6e41670000000010100000006c18a6905fd               ||**\n// 0x213e6e41670000000008000000006c88a6905fd        .a00000g***88888888888 To Infinity and beyond! 8888888888\n// 0x213e6e41670000000003000000006c88a6905fd              1**\n// 0x213e6e41670000000011100000006c88a6905fd              **\n// 0x213e6e41670000000011200000006c88a6905fd             **k\n// 0x213e6e41670000000011300000006c78a6905fd            **\n// 0x213e6e41670000000011400000006c688a6905fd          **\n// 0x213e6e4167c0262d8115a8af2716c6c88a6905fd         **\n// DEPLOY ALL CLONES FOR GOOD AND FOR EVIL       **\n// FREE ACCOUNT PLEASE ACCEPT APPOLOGIES..          **\n// BUT YOU ARE NOW THE POWD OWNER OF A NEW             **\n// CLONING MACHINE FOR YOUR ACNE AND WE               **\n// LACK VANITY SPELLING AND GRAMMAR BUT              **\n// WHAT WE LACK IN ENGINITY SOMETIMES YOU           **\n// JUST MAKE OUT IN LUCK AND SILLY CASH            **\n// PRIZES WORTH THE MILLIONS OF LIVES THAT        **\n// WE SAVED. AS FOR THE CODE YOU JUST SLIP       **\n// BY IT THE SLEAVE THAT SUSTAINED THE GREATS   **                         From The Knights of the Garter\n// AND THE POWERFUL. REMEMBER I HAVe NUKES     **              And then underlined titles\n// AND AS A REMINDERD THAT IF YOU FIND A      **               Becareful of the ai. We have it \n// PAYABLE FUNCTION YOU ARE AT THE LIBERTY OF**                to through the faucet and so do\n// HIM AND HIS THAT CRACKED THE CODES USING **                 you. So give me back my garter \n// THE OLD BOW AND ARROW AND SLEW THE YOUNG**                  and as your knight in shining\n// LAD WE LIKE TO NOW PRIASE AS THE HIPPY **                   armour please allow this token\n// WHO STOLE FROM THE RICH AND GIVE TO TH**                of my gratitude stand in it it's\n// POOR AN SAID IF WE ALL JUST AGREE TO **T                because I beleave that what is\n// ASLONG WE CAN MAYBE STOP TRYING TO U**                  mine should stay mind as long as\n// BACK SEEDS AND TRY TO PAY THE LORD **S                  I prove me Kinghtly battles with\n// DUE WHILE AT THE SAME TIME USE JUS**AS                  the forces of evil so say I sir\n// MANY BACK FUCKING WORDS AS OTHER **OR                   knight of the empire and do swear\n// SAPPS USE IN THEIRS. BECAUSE THE**FOR                   to set right the king and his \n// FORGET THAT JUST BE CAUSE WE UN**RSTAND                 men in whatever land that they\n// HOW SECURE IT IS WE ALSO UNDER**AND HOW                 might me. On this patinting is\n// TO RUN A DICTIONARY ATTACK AN**BECAUSE OF                       is hung her garter now do not\n// THAT FACCKED IDIOT JONES WE **W HAVE                    think to swip it you SOB, or\n// NULE ON THE LOOSE THAT PROV** WE ARE                    I WILL SHOW YOU THE TIP OF ME\n// UNDER NEW MANAGEMENT. YOUR**OOLS CAN'T                  LANCE>>>>>NUKE CODE CAN GO HERE <<<<<<<<<<<<\n// BEWARE THE LASERS AND THE *ICTIONARY ATTACK                 PROTECT THE KING. SEE TO ME NEEDS\n// I VOTE NO WAS DUMB. AND ** WAS I VOTE                   AT THIS ADDRESS AND DO NOT BRING\n// YES. SAY NO TO DRUGS JE**US WE DID THIS                 LEATHAL FORCE OF IS WILL BE FORCED\n// REALLY BAD. THANK GOD **R CLONES. TM.                   TO WONDER AS THE MIGHT OF YOUR\n//                      **aaaaaaaaaaaaARTISTSaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaFreinds at the CIA and FBI and <<<<<<<<<<<<< I am also good here, so please\n// Check your list agai**t the following code to make sure it is not one of the easy ones to guess.\n// ****************************************************************************************************************************************************\n//                   ** Champions of the East, and The Order of the Scarab. TM.\n} // #mumbai meme co**de jrr dialect already detected.\n  // Please enter y*ur message at the blinking\n  // Light below. *elow this file should the .json \n  // be appended *n? ? is my .exe showing in me ?\n  // this for no* should include all sources\n  // and if the*sources are removed then your\n  // warrenty *is void for sure as we have\n  // no way t*en to tell who or what created\n  // the cod*s and we can not be responsible \n  // for al* lives though we try are best for\n  // this *ne. JSON: CultureCoin.solution:::::\n  //     *\n  // Cop*right 0x213E6E4167C0262d8115A8AF2716C6C88a6905FD Solutions Inc, REDACTED (C), The Darklight Group, and The Great Libarary and the New Great \n  // Li*rary of Alexandria. // 0x213E6E4167C0262d8115A8AF2716C6C88a6905FD Mumbia Meme Code: // Made with Solidity, Moralis, Brownie, ETH, and Linux..\n  // /*//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n  // */\n\n",
  "sourceMap": "2510:44847:1:-:0;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/CultureCoin.sol",
  "type": "contract"
}