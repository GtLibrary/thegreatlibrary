{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "28": "openzeppelin-solidity/contracts/token/ERC721/IERC721.sol",
    "37": "openzeppelin-solidity/contracts/utils/introspection/IERC165.sol"
  },
  "ast": {
    "absolutePath": "openzeppelin-solidity/contracts/token/ERC721/IERC721.sol",
    "exportedSymbols": {
      "IERC165": [
        9178
      ],
      "IERC721": [
        9021
      ]
    },
    "id": 9022,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 8907,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "35:23:28"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/utils/introspection/IERC165.sol",
        "file": "../../utils/introspection/IERC165.sol",
        "id": 8908,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 9022,
        "sourceUnit": 9179,
        "src": "62:47:28",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 8910,
              "name": "IERC165",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 9178,
              "src": "205:7:28"
            },
            "id": 8911,
            "nodeType": "InheritanceSpecifier",
            "src": "205:7:28"
          }
        ],
        "canonicalName": "IERC721",
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 8909,
          "nodeType": "StructuredDocumentation",
          "src": "113:69:28",
          "text": " @dev Required interface of an ERC721 compliant contract."
        },
        "fullyImplemented": false,
        "id": 9021,
        "linearizedBaseContracts": [
          9021,
          9178
        ],
        "name": "IERC721",
        "nameLocation": "194:7:28",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": {
              "id": 8912,
              "nodeType": "StructuredDocumentation",
              "src": "220:90:28",
              "text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
            },
            "id": 8920,
            "name": "Transfer",
            "nameLocation": "322:8:28",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 8919,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8914,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "347:4:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 8920,
                  "src": "331:20:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8913,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "331:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8916,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "369:2:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 8920,
                  "src": "353:18:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8915,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "353:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8918,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "389:7:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 8920,
                  "src": "373:23:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8917,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "373:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "330:67:28"
            },
            "src": "316:82:28"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 8921,
              "nodeType": "StructuredDocumentation",
              "src": "406:96:28",
              "text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
            },
            "id": 8929,
            "name": "Approval",
            "nameLocation": "514:8:28",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 8928,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8923,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "539:5:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 8929,
                  "src": "523:21:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8922,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "523:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8925,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "approved",
                  "nameLocation": "562:8:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 8929,
                  "src": "546:24:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8924,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "546:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8927,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "588:7:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 8929,
                  "src": "572:23:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8926,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "572:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "522:74:28"
            },
            "src": "508:89:28"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 8930,
              "nodeType": "StructuredDocumentation",
              "src": "605:119:28",
              "text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
            },
            "id": 8938,
            "name": "ApprovalForAll",
            "nameLocation": "736:14:28",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 8937,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8932,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "767:5:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 8938,
                  "src": "751:21:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8931,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "751:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8934,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "790:8:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 8938,
                  "src": "774:24:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8933,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "774:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8936,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "approved",
                  "nameLocation": "805:8:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 8938,
                  "src": "800:13:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 8935,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "800:4:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "750:64:28"
            },
            "src": "730:85:28"
          },
          {
            "documentation": {
              "id": 8939,
              "nodeType": "StructuredDocumentation",
              "src": "823:78:28",
              "text": " @dev Returns the number of tokens in ``owner``'s account."
            },
            "functionSelector": "70a08231",
            "id": 8946,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nameLocation": "916:9:28",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8942,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8941,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "934:5:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 8946,
                  "src": "926:13:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8940,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "926:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "925:15:28"
            },
            "returnParameters": {
              "id": 8945,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8944,
                  "mutability": "mutable",
                  "name": "balance",
                  "nameLocation": "972:7:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 8946,
                  "src": "964:15:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8943,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "964:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "963:17:28"
            },
            "scope": 9021,
            "src": "907:74:28",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 8947,
              "nodeType": "StructuredDocumentation",
              "src": "989:137:28",
              "text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
            },
            "functionSelector": "6352211e",
            "id": 8954,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "ownerOf",
            "nameLocation": "1141:7:28",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8950,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8949,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "1157:7:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 8954,
                  "src": "1149:15:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8948,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1149:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1148:17:28"
            },
            "returnParameters": {
              "id": 8953,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8952,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "1197:5:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 8954,
                  "src": "1189:13:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8951,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1189:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1188:15:28"
            },
            "scope": 9021,
            "src": "1132:72:28",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 8955,
              "nodeType": "StructuredDocumentation",
              "src": "1212:703:28",
              "text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
            },
            "functionSelector": "42842e0e",
            "id": 8964,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "safeTransferFrom",
            "nameLocation": "1930:16:28",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8962,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8957,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "1955:4:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 8964,
                  "src": "1947:12:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8956,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1947:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8959,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "1969:2:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 8964,
                  "src": "1961:10:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8958,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1961:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8961,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "1981:7:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 8964,
                  "src": "1973:15:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8960,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1973:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1946:43:28"
            },
            "returnParameters": {
              "id": 8963,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1998:0:28"
            },
            "scope": 9021,
            "src": "1921:78:28",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 8965,
              "nodeType": "StructuredDocumentation",
              "src": "2007:517:28",
              "text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
            },
            "functionSelector": "23b872dd",
            "id": 8974,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nameLocation": "2539:12:28",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8972,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8967,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "2560:4:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 8974,
                  "src": "2552:12:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8966,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2552:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8969,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "2574:2:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 8974,
                  "src": "2566:10:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8968,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2566:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8971,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "2586:7:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 8974,
                  "src": "2578:15:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8970,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2578:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2551:43:28"
            },
            "returnParameters": {
              "id": 8973,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2603:0:28"
            },
            "scope": 9021,
            "src": "2530:74:28",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 8975,
              "nodeType": "StructuredDocumentation",
              "src": "2612:464:28",
              "text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
            },
            "functionSelector": "095ea7b3",
            "id": 8982,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "approve",
            "nameLocation": "3091:7:28",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8980,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8977,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "3107:2:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 8982,
                  "src": "3099:10:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8976,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3099:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8979,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "3119:7:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 8982,
                  "src": "3111:15:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8978,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3111:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3098:29:28"
            },
            "returnParameters": {
              "id": 8981,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3136:0:28"
            },
            "scope": 9021,
            "src": "3082:55:28",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 8983,
              "nodeType": "StructuredDocumentation",
              "src": "3145:145:28",
              "text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
            },
            "functionSelector": "081812fc",
            "id": 8990,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getApproved",
            "nameLocation": "3305:11:28",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8986,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8985,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "3325:7:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 8990,
                  "src": "3317:15:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8984,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3317:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3316:17:28"
            },
            "returnParameters": {
              "id": 8989,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8988,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "3365:8:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 8990,
                  "src": "3357:16:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8987,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3357:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3356:18:28"
            },
            "scope": 9021,
            "src": "3296:79:28",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 8991,
              "nodeType": "StructuredDocumentation",
              "src": "3383:318:28",
              "text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."
            },
            "functionSelector": "a22cb465",
            "id": 8998,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setApprovalForAll",
            "nameLocation": "3716:17:28",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8996,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8993,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "3742:8:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 8998,
                  "src": "3734:16:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8992,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3734:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8995,
                  "mutability": "mutable",
                  "name": "_approved",
                  "nameLocation": "3757:9:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 8998,
                  "src": "3752:14:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 8994,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3752:4:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3733:34:28"
            },
            "returnParameters": {
              "id": 8997,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3776:0:28"
            },
            "scope": 9021,
            "src": "3707:70:28",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 8999,
              "nodeType": "StructuredDocumentation",
              "src": "3785:142:28",
              "text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
            },
            "functionSelector": "e985e9c5",
            "id": 9008,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "isApprovedForAll",
            "nameLocation": "3942:16:28",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9004,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9001,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "3967:5:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 9008,
                  "src": "3959:13:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9000,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3959:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9003,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "3982:8:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 9008,
                  "src": "3974:16:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9002,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3974:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3958:33:28"
            },
            "returnParameters": {
              "id": 9007,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9006,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 9008,
                  "src": "4015:4:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 9005,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4015:4:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4014:6:28"
            },
            "scope": 9021,
            "src": "3933:88:28",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 9009,
              "nodeType": "StructuredDocumentation",
              "src": "4029:580:28",
              "text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
            },
            "functionSelector": "b88d4fde",
            "id": 9020,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "safeTransferFrom",
            "nameLocation": "4624:16:28",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9018,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9011,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "4649:4:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 9020,
                  "src": "4641:12:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9010,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4641:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9013,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "4663:2:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 9020,
                  "src": "4655:10:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9012,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4655:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9015,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "4675:7:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 9020,
                  "src": "4667:15:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9014,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4667:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9017,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "4699:4:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 9020,
                  "src": "4684:19:28",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 9016,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4684:5:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4640:64:28"
            },
            "returnParameters": {
              "id": 9019,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4713:0:28"
            },
            "scope": 9021,
            "src": "4615:99:28",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 9022,
        "src": "184:4533:28",
        "usedErrors": []
      }
    ],
    "src": "35:4684:28"
  },
  "bytecode": "",
  "bytecodeSha1": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 100
    },
    "version": "0.8.9+commit.e5eed63a"
  },
  "contractName": "IERC721",
  "coverageMap": {
    "branches": {},
    "statements": {}
  },
  "dependencies": [
    "IERC165"
  ],
  "deployedBytecode": "",
  "deployedSourceMap": "",
  "language": "Solidity",
  "natspec": {
    "details": "Required interface of an ERC721 compliant contract.",
    "events": {
      "Approval(address,address,uint256)": {
        "details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
      },
      "ApprovalForAll(address,address,bool)": {
        "details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
      },
      "Transfer(address,address,uint256)": {
        "details": "Emitted when `tokenId` token is transferred from `from` to `to`."
      }
    },
    "kind": "dev",
    "methods": {
      "approve(address,uint256)": {
        "details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
      },
      "balanceOf(address)": {
        "details": "Returns the number of tokens in ``owner``'s account."
      },
      "getApproved(uint256)": {
        "details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
      },
      "isApprovedForAll(address,address)": {
        "details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
      },
      "ownerOf(uint256)": {
        "details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
      },
      "setApprovalForAll(address,bool)": {
        "details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
      },
      "supportsInterface(bytes4)": {
        "details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
      }
    },
    "version": 1
  },
  "offset": [
    184,
    4717
  ],
  "opcodes": "",
  "pcMap": {},
  "sha1": "877255d385fd13d078eeb591d820d1762c2f183f",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool _approved) external;\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n\n    /**\n      * @dev Safely transfers `tokenId` token from `from` to `to`.\n      *\n      * Requirements:\n      *\n      * - `from` cannot be the zero address.\n      * - `to` cannot be the zero address.\n      * - `tokenId` token must exist and be owned by `from`.\n      * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n      * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n      *\n      * Emits a {Transfer} event.\n      */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n}\n",
  "sourceMap": "",
  "sourcePath": "openzeppelin-solidity/contracts/token/ERC721/IERC721.sol",
  "type": "interface"
}