{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "12": "openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
    "14": "openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol",
    "15": "openzeppelin-contracts-upgradeable/contracts/token/ERC20/IERC20Upgradeable.sol",
    "17": "openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/IERC20MetadataUpgradeable.sol",
    "19": "openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol"
  },
  "ast": {
    "absolutePath": "openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol",
    "exportedSymbols": {
      "AddressUpgradeable": [
        8621
      ],
      "ContextUpgradeable": [
        8766
      ],
      "ERC20Upgradeable": [
        5429
      ],
      "IERC20MetadataUpgradeable": [
        8724
      ],
      "IERC20Upgradeable": [
        8699
      ],
      "Initializable": [
        4759
      ]
    },
    "id": 5430,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 4820,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "108:23:14"
      },
      {
        "absolutePath": "openzeppelin-contracts-upgradeable/contracts/token/ERC20/IERC20Upgradeable.sol",
        "file": "./IERC20Upgradeable.sol",
        "id": 4821,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 5430,
        "sourceUnit": 8700,
        "src": "135:33:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/IERC20MetadataUpgradeable.sol",
        "file": "./extensions/IERC20MetadataUpgradeable.sol",
        "id": 4822,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 5430,
        "sourceUnit": 8725,
        "src": "170:52:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol",
        "file": "../../utils/ContextUpgradeable.sol",
        "id": 4823,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 5430,
        "sourceUnit": 8767,
        "src": "224:44:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
        "file": "../../proxy/utils/Initializable.sol",
        "id": 4824,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 5430,
        "sourceUnit": 4760,
        "src": "270:45:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 4826,
              "name": "Initializable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4759,
              "src": "1546:13:14"
            },
            "id": 4827,
            "nodeType": "InheritanceSpecifier",
            "src": "1546:13:14"
          },
          {
            "baseName": {
              "id": 4828,
              "name": "ContextUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 8766,
              "src": "1561:18:14"
            },
            "id": 4829,
            "nodeType": "InheritanceSpecifier",
            "src": "1561:18:14"
          },
          {
            "baseName": {
              "id": 4830,
              "name": "IERC20Upgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 8699,
              "src": "1581:17:14"
            },
            "id": 4831,
            "nodeType": "InheritanceSpecifier",
            "src": "1581:17:14"
          },
          {
            "baseName": {
              "id": 4832,
              "name": "IERC20MetadataUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 8724,
              "src": "1600:25:14"
            },
            "id": 4833,
            "nodeType": "InheritanceSpecifier",
            "src": "1600:25:14"
          }
        ],
        "canonicalName": "ERC20Upgradeable",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 4825,
          "nodeType": "StructuredDocumentation",
          "src": "319:1196:14",
          "text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."
        },
        "fullyImplemented": true,
        "id": 5429,
        "linearizedBaseContracts": [
          5429,
          8724,
          8699,
          8766,
          4759
        ],
        "name": "ERC20Upgradeable",
        "nameLocation": "1526:16:14",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 4837,
            "mutability": "mutable",
            "name": "_balances",
            "nameLocation": "1669:9:14",
            "nodeType": "VariableDeclaration",
            "scope": 5429,
            "src": "1633:45:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 4836,
              "keyType": {
                "id": 4834,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1641:7:14",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1633:27:14",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 4835,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1652:7:14",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 4843,
            "mutability": "mutable",
            "name": "_allowances",
            "nameLocation": "1743:11:14",
            "nodeType": "VariableDeclaration",
            "scope": 5429,
            "src": "1687:67:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
              "typeString": "mapping(address => mapping(address => uint256))"
            },
            "typeName": {
              "id": 4842,
              "keyType": {
                "id": 4838,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1695:7:14",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1687:47:14",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                "typeString": "mapping(address => mapping(address => uint256))"
              },
              "valueType": {
                "id": 4841,
                "keyType": {
                  "id": 4839,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1714:7:14",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "1706:27:14",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                  "typeString": "mapping(address => uint256)"
                },
                "valueType": {
                  "id": 4840,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1725:7:14",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 4845,
            "mutability": "mutable",
            "name": "_totalSupply",
            "nameLocation": "1779:12:14",
            "nodeType": "VariableDeclaration",
            "scope": 5429,
            "src": "1763:28:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 4844,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1763:7:14",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 4847,
            "mutability": "mutable",
            "name": "_name",
            "nameLocation": "1815:5:14",
            "nodeType": "VariableDeclaration",
            "scope": 5429,
            "src": "1800:20:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 4846,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1800:6:14",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 4849,
            "mutability": "mutable",
            "name": "_symbol",
            "nameLocation": "1842:7:14",
            "nodeType": "VariableDeclaration",
            "scope": 5429,
            "src": "1827:22:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 4848,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1827:6:14",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 4864,
              "nodeType": "Block",
              "src": "2262:57:14",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4860,
                        "name": "name_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4852,
                        "src": "2296:5:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 4861,
                        "name": "symbol_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4854,
                        "src": "2303:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 4859,
                      "name": "__ERC20_init_unchained",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4883,
                      "src": "2273:22:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory)"
                      }
                    },
                    "id": 4862,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2273:38:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4863,
                  "nodeType": "ExpressionStatement",
                  "src": "2273:38:14"
                }
              ]
            },
            "documentation": {
              "id": 4850,
              "nodeType": "StructuredDocumentation",
              "src": "1858:306:14",
              "text": " @dev Sets the values for {name} and {symbol}.\n The default value of {decimals} is 18. To select a different value for\n {decimals} you should overload it.\n All two of these values are immutable: they can only be set once during\n construction."
            },
            "id": 4865,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 4857,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 4856,
                  "name": "onlyInitializing",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4743,
                  "src": "2245:16:14"
                },
                "nodeType": "ModifierInvocation",
                "src": "2245:16:14"
              }
            ],
            "name": "__ERC20_init",
            "nameLocation": "2179:12:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4855,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4852,
                  "mutability": "mutable",
                  "name": "name_",
                  "nameLocation": "2206:5:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 4865,
                  "src": "2192:19:14",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 4851,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2192:6:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4854,
                  "mutability": "mutable",
                  "name": "symbol_",
                  "nameLocation": "2227:7:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 4865,
                  "src": "2213:21:14",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 4853,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2213:6:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2191:44:14"
            },
            "returnParameters": {
              "id": 4858,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2262:0:14"
            },
            "scope": 5429,
            "src": "2170:149:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 4882,
              "nodeType": "Block",
              "src": "2429:60:14",
              "statements": [
                {
                  "expression": {
                    "id": 4876,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4874,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4847,
                      "src": "2440:5:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 4875,
                      "name": "name_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4867,
                      "src": "2448:5:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "2440:13:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 4877,
                  "nodeType": "ExpressionStatement",
                  "src": "2440:13:14"
                },
                {
                  "expression": {
                    "id": 4880,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4878,
                      "name": "_symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4849,
                      "src": "2464:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 4879,
                      "name": "symbol_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4869,
                      "src": "2474:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "2464:17:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 4881,
                  "nodeType": "ExpressionStatement",
                  "src": "2464:17:14"
                }
              ]
            },
            "id": 4883,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 4872,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 4871,
                  "name": "onlyInitializing",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4743,
                  "src": "2412:16:14"
                },
                "nodeType": "ModifierInvocation",
                "src": "2412:16:14"
              }
            ],
            "name": "__ERC20_init_unchained",
            "nameLocation": "2336:22:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4870,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4867,
                  "mutability": "mutable",
                  "name": "name_",
                  "nameLocation": "2373:5:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 4883,
                  "src": "2359:19:14",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 4866,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2359:6:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4869,
                  "mutability": "mutable",
                  "name": "symbol_",
                  "nameLocation": "2394:7:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 4883,
                  "src": "2380:21:14",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 4868,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2380:6:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2358:44:14"
            },
            "returnParameters": {
              "id": 4873,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2429:0:14"
            },
            "scope": 5429,
            "src": "2327:162:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              8711
            ],
            "body": {
              "id": 4892,
              "nodeType": "Block",
              "src": "2628:31:14",
              "statements": [
                {
                  "expression": {
                    "id": 4890,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4847,
                    "src": "2646:5:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 4889,
                  "id": 4891,
                  "nodeType": "Return",
                  "src": "2639:12:14"
                }
              ]
            },
            "documentation": {
              "id": 4884,
              "nodeType": "StructuredDocumentation",
              "src": "2497:56:14",
              "text": " @dev Returns the name of the token."
            },
            "functionSelector": "06fdde03",
            "id": 4893,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "name",
            "nameLocation": "2568:4:14",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 4886,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2595:8:14"
            },
            "parameters": {
              "id": 4885,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2572:2:14"
            },
            "returnParameters": {
              "id": 4889,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4888,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4893,
                  "src": "2613:13:14",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 4887,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2613:6:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2612:15:14"
            },
            "scope": 5429,
            "src": "2559:100:14",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              8717
            ],
            "body": {
              "id": 4902,
              "nodeType": "Block",
              "src": "2849:33:14",
              "statements": [
                {
                  "expression": {
                    "id": 4900,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4849,
                    "src": "2867:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 4899,
                  "id": 4901,
                  "nodeType": "Return",
                  "src": "2860:14:14"
                }
              ]
            },
            "documentation": {
              "id": 4894,
              "nodeType": "StructuredDocumentation",
              "src": "2667:105:14",
              "text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
            },
            "functionSelector": "95d89b41",
            "id": 4903,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "symbol",
            "nameLocation": "2787:6:14",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 4896,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2816:8:14"
            },
            "parameters": {
              "id": 4895,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2793:2:14"
            },
            "returnParameters": {
              "id": 4899,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4898,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4903,
                  "src": "2834:13:14",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 4897,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2834:6:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2833:15:14"
            },
            "scope": 5429,
            "src": "2778:104:14",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              8723
            ],
            "body": {
              "id": 4912,
              "nodeType": "Block",
              "src": "3586:28:14",
              "statements": [
                {
                  "expression": {
                    "hexValue": "3138",
                    "id": 4910,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3604:2:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_18_by_1",
                      "typeString": "int_const 18"
                    },
                    "value": "18"
                  },
                  "functionReturnParameters": 4909,
                  "id": 4911,
                  "nodeType": "Return",
                  "src": "3597:9:14"
                }
              ]
            },
            "documentation": {
              "id": 4904,
              "nodeType": "StructuredDocumentation",
              "src": "2890:625:14",
              "text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless this function is\n overridden;\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
            },
            "functionSelector": "313ce567",
            "id": 4913,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "decimals",
            "nameLocation": "3530:8:14",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 4906,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3561:8:14"
            },
            "parameters": {
              "id": 4905,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3538:2:14"
            },
            "returnParameters": {
              "id": 4909,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4908,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4913,
                  "src": "3579:5:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 4907,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "3579:5:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3578:7:14"
            },
            "scope": 5429,
            "src": "3521:93:14",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              8630
            ],
            "body": {
              "id": 4922,
              "nodeType": "Block",
              "src": "3749:38:14",
              "statements": [
                {
                  "expression": {
                    "id": 4920,
                    "name": "_totalSupply",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4845,
                    "src": "3767:12:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 4919,
                  "id": 4921,
                  "nodeType": "Return",
                  "src": "3760:19:14"
                }
              ]
            },
            "documentation": {
              "id": 4914,
              "nodeType": "StructuredDocumentation",
              "src": "3622:51:14",
              "text": " @dev See {IERC20-totalSupply}."
            },
            "functionSelector": "18160ddd",
            "id": 4923,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "totalSupply",
            "nameLocation": "3688:11:14",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 4916,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3722:8:14"
            },
            "parameters": {
              "id": 4915,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3699:2:14"
            },
            "returnParameters": {
              "id": 4919,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4918,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4923,
                  "src": "3740:7:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4917,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3740:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3739:9:14"
            },
            "scope": 5429,
            "src": "3679:108:14",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              8638
            ],
            "body": {
              "id": 4936,
              "nodeType": "Block",
              "src": "3933:44:14",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 4932,
                      "name": "_balances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4837,
                      "src": "3951:9:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 4934,
                    "indexExpression": {
                      "id": 4933,
                      "name": "account",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4926,
                      "src": "3961:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3951:18:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 4931,
                  "id": 4935,
                  "nodeType": "Return",
                  "src": "3944:25:14"
                }
              ]
            },
            "documentation": {
              "id": 4924,
              "nodeType": "StructuredDocumentation",
              "src": "3795:49:14",
              "text": " @dev See {IERC20-balanceOf}."
            },
            "functionSelector": "70a08231",
            "id": 4937,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nameLocation": "3859:9:14",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 4928,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3906:8:14"
            },
            "parameters": {
              "id": 4927,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4926,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "3877:7:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 4937,
                  "src": "3869:15:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4925,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3869:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3868:17:14"
            },
            "returnParameters": {
              "id": 4931,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4930,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4937,
                  "src": "3924:7:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4929,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3924:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3923:9:14"
            },
            "scope": 5429,
            "src": "3850:127:14",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              8648
            ],
            "body": {
              "id": 4961,
              "nodeType": "Block",
              "src": "4268:108:14",
              "statements": [
                {
                  "assignments": [
                    4949
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4949,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "4287:5:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 4961,
                      "src": "4279:13:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 4948,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4279:7:14",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4952,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 4950,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8751,
                      "src": "4295:10:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 4951,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4295:12:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4279:28:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4954,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4949,
                        "src": "4328:5:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4955,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4940,
                        "src": "4335:2:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4956,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4942,
                        "src": "4339:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4953,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5185,
                      "src": "4318:9:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 4957,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4318:28:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4958,
                  "nodeType": "ExpressionStatement",
                  "src": "4318:28:14"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 4959,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4364:4:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 4947,
                  "id": 4960,
                  "nodeType": "Return",
                  "src": "4357:11:14"
                }
              ]
            },
            "documentation": {
              "id": 4938,
              "nodeType": "StructuredDocumentation",
              "src": "3985:192:14",
              "text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
            },
            "functionSelector": "a9059cbb",
            "id": 4962,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transfer",
            "nameLocation": "4192:8:14",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 4944,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4244:8:14"
            },
            "parameters": {
              "id": 4943,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4940,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "4209:2:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 4962,
                  "src": "4201:10:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4939,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4201:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4942,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "4221:6:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 4962,
                  "src": "4213:14:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4941,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4213:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4200:28:14"
            },
            "returnParameters": {
              "id": 4947,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4946,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4962,
                  "src": "4262:4:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 4945,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4262:4:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4261:6:14"
            },
            "scope": 5429,
            "src": "4183:193:14",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              8658
            ],
            "body": {
              "id": 4979,
              "nodeType": "Block",
              "src": "4537:53:14",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 4973,
                        "name": "_allowances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4843,
                        "src": "4555:11:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                          "typeString": "mapping(address => mapping(address => uint256))"
                        }
                      },
                      "id": 4975,
                      "indexExpression": {
                        "id": 4974,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4965,
                        "src": "4567:5:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "4555:18:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 4977,
                    "indexExpression": {
                      "id": 4976,
                      "name": "spender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4967,
                      "src": "4574:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4555:27:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 4972,
                  "id": 4978,
                  "nodeType": "Return",
                  "src": "4548:34:14"
                }
              ]
            },
            "documentation": {
              "id": 4963,
              "nodeType": "StructuredDocumentation",
              "src": "4384:49:14",
              "text": " @dev See {IERC20-allowance}."
            },
            "functionSelector": "dd62ed3e",
            "id": 4980,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "allowance",
            "nameLocation": "4448:9:14",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 4969,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4510:8:14"
            },
            "parameters": {
              "id": 4968,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4965,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "4466:5:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 4980,
                  "src": "4458:13:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4964,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4458:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4967,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "4481:7:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 4980,
                  "src": "4473:15:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4966,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4473:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4457:32:14"
            },
            "returnParameters": {
              "id": 4972,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4971,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4980,
                  "src": "4528:7:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4970,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4528:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4527:9:14"
            },
            "scope": 5429,
            "src": "4439:151:14",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              8668
            ],
            "body": {
              "id": 5004,
              "nodeType": "Block",
              "src": "4999:112:14",
              "statements": [
                {
                  "assignments": [
                    4992
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4992,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "5018:5:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 5004,
                      "src": "5010:13:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 4991,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5010:7:14",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4995,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 4993,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8751,
                      "src": "5026:10:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 4994,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5026:12:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5010:28:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4997,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4992,
                        "src": "5058:5:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4998,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4983,
                        "src": "5065:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4999,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4985,
                        "src": "5074:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4996,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5358,
                      "src": "5049:8:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 5000,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5049:32:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5001,
                  "nodeType": "ExpressionStatement",
                  "src": "5049:32:14"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 5002,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5099:4:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 4990,
                  "id": 5003,
                  "nodeType": "Return",
                  "src": "5092:11:14"
                }
              ]
            },
            "documentation": {
              "id": 4981,
              "nodeType": "StructuredDocumentation",
              "src": "4598:306:14",
              "text": " @dev See {IERC20-approve}.\n NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
            },
            "functionSelector": "095ea7b3",
            "id": 5005,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "approve",
            "nameLocation": "4919:7:14",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 4987,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4975:8:14"
            },
            "parameters": {
              "id": 4986,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4983,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "4935:7:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 5005,
                  "src": "4927:15:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4982,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4927:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4985,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "4952:6:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 5005,
                  "src": "4944:14:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4984,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4944:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4926:33:14"
            },
            "returnParameters": {
              "id": 4990,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4989,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5005,
                  "src": "4993:4:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 4988,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4993:4:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4992:6:14"
            },
            "scope": 5429,
            "src": "4910:201:14",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              8680
            ],
            "body": {
              "id": 5037,
              "nodeType": "Block",
              "src": "5828:158:14",
              "statements": [
                {
                  "assignments": [
                    5019
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5019,
                      "mutability": "mutable",
                      "name": "spender",
                      "nameLocation": "5847:7:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 5037,
                      "src": "5839:15:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 5018,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5839:7:14",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5022,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 5020,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8751,
                      "src": "5857:10:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 5021,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5857:12:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5839:30:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 5024,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5008,
                        "src": "5896:4:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5025,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5019,
                        "src": "5902:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5026,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5012,
                        "src": "5911:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 5023,
                      "name": "_spendAllowance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5401,
                      "src": "5880:15:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 5027,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5880:38:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5028,
                  "nodeType": "ExpressionStatement",
                  "src": "5880:38:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 5030,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5008,
                        "src": "5939:4:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5031,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5010,
                        "src": "5945:2:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5032,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5012,
                        "src": "5949:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 5029,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5185,
                      "src": "5929:9:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 5033,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5929:27:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5034,
                  "nodeType": "ExpressionStatement",
                  "src": "5929:27:14"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 5035,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5974:4:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 5017,
                  "id": 5036,
                  "nodeType": "Return",
                  "src": "5967:11:14"
                }
              ]
            },
            "documentation": {
              "id": 5006,
              "nodeType": "StructuredDocumentation",
              "src": "5119:566:14",
              "text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`.\n - the caller must have allowance for ``from``'s tokens of at least\n `amount`."
            },
            "functionSelector": "23b872dd",
            "id": 5038,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nameLocation": "5700:12:14",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 5014,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5804:8:14"
            },
            "parameters": {
              "id": 5013,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5008,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "5731:4:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 5038,
                  "src": "5723:12:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5007,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5723:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5010,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "5754:2:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 5038,
                  "src": "5746:10:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5009,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5746:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5012,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "5775:6:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 5038,
                  "src": "5767:14:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5011,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5767:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5712:76:14"
            },
            "returnParameters": {
              "id": 5017,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5016,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5038,
                  "src": "5822:4:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 5015,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5822:4:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5821:6:14"
            },
            "scope": 5429,
            "src": "5691:295:14",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 5066,
              "nodeType": "Block",
              "src": "6489:144:14",
              "statements": [
                {
                  "assignments": [
                    5049
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5049,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "6508:5:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 5066,
                      "src": "6500:13:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 5048,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "6500:7:14",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5052,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 5050,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8751,
                      "src": "6516:10:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 5051,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6516:12:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6500:28:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 5054,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5049,
                        "src": "6548:5:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5055,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5041,
                        "src": "6555:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 5061,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 5057,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5049,
                              "src": "6574:5:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 5058,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5041,
                              "src": "6581:7:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 5056,
                            "name": "allowance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4980,
                            "src": "6564:9:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address,address) view returns (uint256)"
                            }
                          },
                          "id": 5059,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6564:25:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "id": 5060,
                          "name": "addedValue",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5043,
                          "src": "6592:10:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6564:38:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 5053,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5358,
                      "src": "6539:8:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 5062,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6539:64:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5063,
                  "nodeType": "ExpressionStatement",
                  "src": "6539:64:14"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 5064,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "6621:4:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 5047,
                  "id": 5065,
                  "nodeType": "Return",
                  "src": "6614:11:14"
                }
              ]
            },
            "documentation": {
              "id": 5039,
              "nodeType": "StructuredDocumentation",
              "src": "5994:395:14",
              "text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
            },
            "functionSelector": "39509351",
            "id": 5067,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "increaseAllowance",
            "nameLocation": "6404:17:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5044,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5041,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "6430:7:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 5067,
                  "src": "6422:15:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5040,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6422:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5043,
                  "mutability": "mutable",
                  "name": "addedValue",
                  "nameLocation": "6447:10:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 5067,
                  "src": "6439:18:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5042,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6439:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6421:37:14"
            },
            "returnParameters": {
              "id": 5047,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5046,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5067,
                  "src": "6483:4:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 5045,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6483:4:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6482:6:14"
            },
            "scope": 5429,
            "src": "6395:238:14",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 5107,
              "nodeType": "Block",
              "src": "7235:337:14",
              "statements": [
                {
                  "assignments": [
                    5078
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5078,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "7254:5:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 5107,
                      "src": "7246:13:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 5077,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "7246:7:14",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5081,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 5079,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8751,
                      "src": "7262:10:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 5080,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7262:12:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7246:28:14"
                },
                {
                  "assignments": [
                    5083
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5083,
                      "mutability": "mutable",
                      "name": "currentAllowance",
                      "nameLocation": "7293:16:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 5107,
                      "src": "7285:24:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 5082,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7285:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5088,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 5085,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5078,
                        "src": "7322:5:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5086,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5070,
                        "src": "7329:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 5084,
                      "name": "allowance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4980,
                      "src": "7312:9:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address,address) view returns (uint256)"
                      }
                    },
                    "id": 5087,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7312:25:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7285:52:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 5092,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 5090,
                          "name": "currentAllowance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5083,
                          "src": "7356:16:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 5091,
                          "name": "subtractedValue",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5072,
                          "src": "7376:15:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7356:35:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
                        "id": 5093,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7393:39:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
                          "typeString": "literal_string \"ERC20: decreased allowance below zero\""
                        },
                        "value": "ERC20: decreased allowance below zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
                          "typeString": "literal_string \"ERC20: decreased allowance below zero\""
                        }
                      ],
                      "id": 5089,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7348:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5094,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7348:85:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5095,
                  "nodeType": "ExpressionStatement",
                  "src": "7348:85:14"
                },
                {
                  "id": 5104,
                  "nodeType": "UncheckedBlock",
                  "src": "7444:97:14",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "id": 5097,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5078,
                            "src": "7478:5:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 5098,
                            "name": "spender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5070,
                            "src": "7485:7:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 5101,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 5099,
                              "name": "currentAllowance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5083,
                              "src": "7494:16:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "id": 5100,
                              "name": "subtractedValue",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5072,
                              "src": "7513:15:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "7494:34:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 5096,
                          "name": "_approve",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5358,
                          "src": "7469:8:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                            "typeString": "function (address,address,uint256)"
                          }
                        },
                        "id": 5102,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7469:60:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 5103,
                      "nodeType": "ExpressionStatement",
                      "src": "7469:60:14"
                    }
                  ]
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 5105,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "7560:4:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 5076,
                  "id": 5106,
                  "nodeType": "Return",
                  "src": "7553:11:14"
                }
              ]
            },
            "documentation": {
              "id": 5068,
              "nodeType": "StructuredDocumentation",
              "src": "6641:489:14",
              "text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
            },
            "functionSelector": "a457c2d7",
            "id": 5108,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "decreaseAllowance",
            "nameLocation": "7145:17:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5073,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5070,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "7171:7:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 5108,
                  "src": "7163:15:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5069,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7163:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5072,
                  "mutability": "mutable",
                  "name": "subtractedValue",
                  "nameLocation": "7188:15:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 5108,
                  "src": "7180:23:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5071,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7180:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7162:42:14"
            },
            "returnParameters": {
              "id": 5076,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5075,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5108,
                  "src": "7229:4:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 5074,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7229:4:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7228:6:14"
            },
            "scope": 5429,
            "src": "7136:436:14",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 5184,
              "nodeType": "Block",
              "src": "8163:559:14",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 5124,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 5119,
                          "name": "from",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5111,
                          "src": "8182:4:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 5122,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8198:1:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 5121,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "8190:7:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 5120,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "8190:7:14",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 5123,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8190:10:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "8182:18:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
                        "id": 5125,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8202:39:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
                          "typeString": "literal_string \"ERC20: transfer from the zero address\""
                        },
                        "value": "ERC20: transfer from the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
                          "typeString": "literal_string \"ERC20: transfer from the zero address\""
                        }
                      ],
                      "id": 5118,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8174:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5126,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8174:68:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5127,
                  "nodeType": "ExpressionStatement",
                  "src": "8174:68:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 5134,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 5129,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5113,
                          "src": "8261:2:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 5132,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8275:1:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 5131,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "8267:7:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 5130,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "8267:7:14",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 5133,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8267:10:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "8261:16:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
                        "id": 5135,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8279:37:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
                          "typeString": "literal_string \"ERC20: transfer to the zero address\""
                        },
                        "value": "ERC20: transfer to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
                          "typeString": "literal_string \"ERC20: transfer to the zero address\""
                        }
                      ],
                      "id": 5128,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8253:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5136,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8253:64:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5137,
                  "nodeType": "ExpressionStatement",
                  "src": "8253:64:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 5139,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5111,
                        "src": "8351:4:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5140,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5113,
                        "src": "8357:2:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5141,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5115,
                        "src": "8361:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 5138,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5412,
                      "src": "8330:20:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 5142,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8330:38:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5143,
                  "nodeType": "ExpressionStatement",
                  "src": "8330:38:14"
                },
                {
                  "assignments": [
                    5145
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5145,
                      "mutability": "mutable",
                      "name": "fromBalance",
                      "nameLocation": "8389:11:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 5184,
                      "src": "8381:19:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 5144,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8381:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5149,
                  "initialValue": {
                    "baseExpression": {
                      "id": 5146,
                      "name": "_balances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4837,
                      "src": "8403:9:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 5148,
                    "indexExpression": {
                      "id": 5147,
                      "name": "from",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5111,
                      "src": "8413:4:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "8403:15:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8381:37:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 5153,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 5151,
                          "name": "fromBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5145,
                          "src": "8437:11:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 5152,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5115,
                          "src": "8452:6:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "8437:21:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
                        "id": 5154,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8460:40:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
                          "typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
                        },
                        "value": "ERC20: transfer amount exceeds balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
                          "typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
                        }
                      ],
                      "id": 5150,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8429:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5155,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8429:72:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5156,
                  "nodeType": "ExpressionStatement",
                  "src": "8429:72:14"
                },
                {
                  "id": 5165,
                  "nodeType": "UncheckedBlock",
                  "src": "8512:75:14",
                  "statements": [
                    {
                      "expression": {
                        "id": 5163,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "baseExpression": {
                            "id": 5157,
                            "name": "_balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4837,
                            "src": "8537:9:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 5159,
                          "indexExpression": {
                            "id": 5158,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5111,
                            "src": "8547:4:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "8537:15:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 5162,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 5160,
                            "name": "fromBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5145,
                            "src": "8555:11:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 5161,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5115,
                            "src": "8569:6:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8555:20:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "8537:38:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 5164,
                      "nodeType": "ExpressionStatement",
                      "src": "8537:38:14"
                    }
                  ]
                },
                {
                  "expression": {
                    "id": 5170,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 5166,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4837,
                        "src": "8597:9:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 5168,
                      "indexExpression": {
                        "id": 5167,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5113,
                        "src": "8607:2:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "8597:13:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 5169,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5115,
                      "src": "8614:6:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8597:23:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 5171,
                  "nodeType": "ExpressionStatement",
                  "src": "8597:23:14"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 5173,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5111,
                        "src": "8647:4:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5174,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5113,
                        "src": "8653:2:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5175,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5115,
                        "src": "8657:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 5172,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8689,
                      "src": "8638:8:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 5176,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8638:26:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5177,
                  "nodeType": "EmitStatement",
                  "src": "8633:31:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 5179,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5111,
                        "src": "8697:4:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5180,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5113,
                        "src": "8703:2:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5181,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5115,
                        "src": "8707:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 5178,
                      "name": "_afterTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5423,
                      "src": "8677:19:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 5182,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8677:37:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5183,
                  "nodeType": "ExpressionStatement",
                  "src": "8677:37:14"
                }
              ]
            },
            "documentation": {
              "id": 5109,
              "nodeType": "StructuredDocumentation",
              "src": "7580:465:14",
              "text": " @dev Moves `amount` of tokens from `sender` to `recipient`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`."
            },
            "id": 5185,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_transfer",
            "nameLocation": "8060:9:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5116,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5111,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "8088:4:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 5185,
                  "src": "8080:12:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5110,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8080:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5113,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "8111:2:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 5185,
                  "src": "8103:10:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5112,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8103:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5115,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "8132:6:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 5185,
                  "src": "8124:14:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5114,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8124:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8069:76:14"
            },
            "returnParameters": {
              "id": 5117,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8163:0:14"
            },
            "scope": 5429,
            "src": "8051:671:14",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 5240,
              "nodeType": "Block",
              "src": "9074:334:14",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 5199,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 5194,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5188,
                          "src": "9093:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 5197,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9112:1:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 5196,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "9104:7:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 5195,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "9104:7:14",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 5198,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9104:10:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "9093:21:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
                        "id": 5200,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9116:33:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
                          "typeString": "literal_string \"ERC20: mint to the zero address\""
                        },
                        "value": "ERC20: mint to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
                          "typeString": "literal_string \"ERC20: mint to the zero address\""
                        }
                      ],
                      "id": 5193,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9085:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5201,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9085:65:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5202,
                  "nodeType": "ExpressionStatement",
                  "src": "9085:65:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 5206,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9192:1:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 5205,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9184:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 5204,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9184:7:14",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 5207,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9184:10:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5208,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5188,
                        "src": "9196:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5209,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5190,
                        "src": "9205:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 5203,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5412,
                      "src": "9163:20:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 5210,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9163:49:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5211,
                  "nodeType": "ExpressionStatement",
                  "src": "9163:49:14"
                },
                {
                  "expression": {
                    "id": 5214,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 5212,
                      "name": "_totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4845,
                      "src": "9225:12:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 5213,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5190,
                      "src": "9241:6:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9225:22:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 5215,
                  "nodeType": "ExpressionStatement",
                  "src": "9225:22:14"
                },
                {
                  "expression": {
                    "id": 5220,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 5216,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4837,
                        "src": "9258:9:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 5218,
                      "indexExpression": {
                        "id": 5217,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5188,
                        "src": "9268:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "9258:18:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 5219,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5190,
                      "src": "9280:6:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9258:28:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 5221,
                  "nodeType": "ExpressionStatement",
                  "src": "9258:28:14"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 5225,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9319:1:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 5224,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9311:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 5223,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9311:7:14",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 5226,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9311:10:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5227,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5188,
                        "src": "9323:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5228,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5190,
                        "src": "9332:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 5222,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8689,
                      "src": "9302:8:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 5229,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9302:37:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5230,
                  "nodeType": "EmitStatement",
                  "src": "9297:42:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 5234,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9380:1:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 5233,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9372:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 5232,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9372:7:14",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 5235,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9372:10:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5236,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5188,
                        "src": "9384:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5237,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5190,
                        "src": "9393:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 5231,
                      "name": "_afterTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5423,
                      "src": "9352:19:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 5238,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9352:48:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5239,
                  "nodeType": "ExpressionStatement",
                  "src": "9352:48:14"
                }
              ]
            },
            "documentation": {
              "id": 5186,
              "nodeType": "StructuredDocumentation",
              "src": "8730:273:14",
              "text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."
            },
            "id": 5241,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_mint",
            "nameLocation": "9018:5:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5191,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5188,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "9032:7:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 5241,
                  "src": "9024:15:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5187,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9024:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5190,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "9049:6:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 5241,
                  "src": "9041:14:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5189,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9041:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9023:33:14"
            },
            "returnParameters": {
              "id": 5192,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9074:0:14"
            },
            "scope": 5429,
            "src": "9009:399:14",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 5312,
              "nodeType": "Block",
              "src": "9806:526:14",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 5255,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 5250,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5244,
                          "src": "9825:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 5253,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9844:1:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 5252,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "9836:7:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 5251,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "9836:7:14",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 5254,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9836:10:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "9825:21:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
                        "id": 5256,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9848:35:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
                          "typeString": "literal_string \"ERC20: burn from the zero address\""
                        },
                        "value": "ERC20: burn from the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
                          "typeString": "literal_string \"ERC20: burn from the zero address\""
                        }
                      ],
                      "id": 5249,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9817:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5257,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9817:67:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5258,
                  "nodeType": "ExpressionStatement",
                  "src": "9817:67:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 5260,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5244,
                        "src": "9918:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 5263,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9935:1:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 5262,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9927:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 5261,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9927:7:14",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 5264,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9927:10:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5265,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5246,
                        "src": "9939:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 5259,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5412,
                      "src": "9897:20:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 5266,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9897:49:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5267,
                  "nodeType": "ExpressionStatement",
                  "src": "9897:49:14"
                },
                {
                  "assignments": [
                    5269
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5269,
                      "mutability": "mutable",
                      "name": "accountBalance",
                      "nameLocation": "9967:14:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 5312,
                      "src": "9959:22:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 5268,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9959:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5273,
                  "initialValue": {
                    "baseExpression": {
                      "id": 5270,
                      "name": "_balances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4837,
                      "src": "9984:9:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 5272,
                    "indexExpression": {
                      "id": 5271,
                      "name": "account",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5244,
                      "src": "9994:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "9984:18:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9959:43:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 5277,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 5275,
                          "name": "accountBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5269,
                          "src": "10021:14:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 5276,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5246,
                          "src": "10039:6:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "10021:24:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
                        "id": 5278,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10047:36:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
                          "typeString": "literal_string \"ERC20: burn amount exceeds balance\""
                        },
                        "value": "ERC20: burn amount exceeds balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
                          "typeString": "literal_string \"ERC20: burn amount exceeds balance\""
                        }
                      ],
                      "id": 5274,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10013:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5279,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10013:71:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5280,
                  "nodeType": "ExpressionStatement",
                  "src": "10013:71:14"
                },
                {
                  "id": 5289,
                  "nodeType": "UncheckedBlock",
                  "src": "10095:81:14",
                  "statements": [
                    {
                      "expression": {
                        "id": 5287,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "baseExpression": {
                            "id": 5281,
                            "name": "_balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4837,
                            "src": "10120:9:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 5283,
                          "indexExpression": {
                            "id": 5282,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5244,
                            "src": "10130:7:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "10120:18:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 5286,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 5284,
                            "name": "accountBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5269,
                            "src": "10141:14:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 5285,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5246,
                            "src": "10158:6:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10141:23:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "10120:44:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 5288,
                      "nodeType": "ExpressionStatement",
                      "src": "10120:44:14"
                    }
                  ]
                },
                {
                  "expression": {
                    "id": 5292,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 5290,
                      "name": "_totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4845,
                      "src": "10186:12:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 5291,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5246,
                      "src": "10202:6:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10186:22:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 5293,
                  "nodeType": "ExpressionStatement",
                  "src": "10186:22:14"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 5295,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5244,
                        "src": "10235:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 5298,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10252:1:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 5297,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10244:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 5296,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10244:7:14",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 5299,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10244:10:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5300,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5246,
                        "src": "10256:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 5294,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8689,
                      "src": "10226:8:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 5301,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10226:37:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5302,
                  "nodeType": "EmitStatement",
                  "src": "10221:42:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 5304,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5244,
                        "src": "10296:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 5307,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10313:1:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 5306,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10305:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 5305,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10305:7:14",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 5308,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10305:10:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5309,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5246,
                        "src": "10317:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 5303,
                      "name": "_afterTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5423,
                      "src": "10276:19:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 5310,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10276:48:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5311,
                  "nodeType": "ExpressionStatement",
                  "src": "10276:48:14"
                }
              ]
            },
            "documentation": {
              "id": 5242,
              "nodeType": "StructuredDocumentation",
              "src": "9416:319:14",
              "text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
            },
            "id": 5313,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_burn",
            "nameLocation": "9750:5:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5247,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5244,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "9764:7:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 5313,
                  "src": "9756:15:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5243,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9756:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5246,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "9781:6:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 5313,
                  "src": "9773:14:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5245,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9773:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9755:33:14"
            },
            "returnParameters": {
              "id": 5248,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9806:0:14"
            },
            "scope": 5429,
            "src": "9741:591:14",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 5357,
              "nodeType": "Block",
              "src": "10887:263:14",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 5329,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 5324,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5316,
                          "src": "10906:5:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 5327,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10923:1:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 5326,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "10915:7:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 5325,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "10915:7:14",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 5328,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10915:10:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "10906:19:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
                        "id": 5330,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10927:38:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
                          "typeString": "literal_string \"ERC20: approve from the zero address\""
                        },
                        "value": "ERC20: approve from the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
                          "typeString": "literal_string \"ERC20: approve from the zero address\""
                        }
                      ],
                      "id": 5323,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10898:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5331,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10898:68:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5332,
                  "nodeType": "ExpressionStatement",
                  "src": "10898:68:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 5339,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 5334,
                          "name": "spender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5318,
                          "src": "10985:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 5337,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11004:1:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 5336,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "10996:7:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 5335,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "10996:7:14",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 5338,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10996:10:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "10985:21:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
                        "id": 5340,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11008:36:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
                          "typeString": "literal_string \"ERC20: approve to the zero address\""
                        },
                        "value": "ERC20: approve to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
                          "typeString": "literal_string \"ERC20: approve to the zero address\""
                        }
                      ],
                      "id": 5333,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10977:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5341,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10977:68:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5342,
                  "nodeType": "ExpressionStatement",
                  "src": "10977:68:14"
                },
                {
                  "expression": {
                    "id": 5349,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 5343,
                          "name": "_allowances",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4843,
                          "src": "11058:11:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(address => uint256))"
                          }
                        },
                        "id": 5346,
                        "indexExpression": {
                          "id": 5344,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5316,
                          "src": "11070:5:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "11058:18:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 5347,
                      "indexExpression": {
                        "id": 5345,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5318,
                        "src": "11077:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "11058:27:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 5348,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5320,
                      "src": "11088:6:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11058:36:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 5350,
                  "nodeType": "ExpressionStatement",
                  "src": "11058:36:14"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 5352,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5316,
                        "src": "11119:5:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5353,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5318,
                        "src": "11126:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5354,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5320,
                        "src": "11135:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 5351,
                      "name": "Approval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8698,
                      "src": "11110:8:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 5355,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11110:32:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5356,
                  "nodeType": "EmitStatement",
                  "src": "11105:37:14"
                }
              ]
            },
            "documentation": {
              "id": 5314,
              "nodeType": "StructuredDocumentation",
              "src": "10340:424:14",
              "text": " @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
            },
            "id": 5358,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_approve",
            "nameLocation": "10779:8:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5321,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5316,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "10806:5:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 5358,
                  "src": "10798:13:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5315,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10798:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5318,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "10830:7:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 5358,
                  "src": "10822:15:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5317,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10822:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5320,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "10856:6:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 5358,
                  "src": "10848:14:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5319,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10848:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10787:82:14"
            },
            "returnParameters": {
              "id": 5322,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10887:0:14"
            },
            "scope": 5429,
            "src": "10770:380:14",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 5400,
              "nodeType": "Block",
              "src": "11565:329:14",
              "statements": [
                {
                  "assignments": [
                    5369
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5369,
                      "mutability": "mutable",
                      "name": "currentAllowance",
                      "nameLocation": "11584:16:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 5400,
                      "src": "11576:24:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 5368,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "11576:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5374,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 5371,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5361,
                        "src": "11613:5:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5372,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5363,
                        "src": "11620:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 5370,
                      "name": "allowance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4980,
                      "src": "11603:9:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address,address) view returns (uint256)"
                      }
                    },
                    "id": 5373,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11603:25:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11576:52:14"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 5381,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 5375,
                      "name": "currentAllowance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5369,
                      "src": "11643:16:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "expression": {
                        "arguments": [
                          {
                            "id": 5378,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "11668:7:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 5377,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "11668:7:14",
                              "typeDescriptions": {}
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            }
                          ],
                          "id": 5376,
                          "name": "type",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -27,
                          "src": "11663:4:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                            "typeString": "function () pure"
                          }
                        },
                        "id": 5379,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11663:13:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_meta_type_t_uint256",
                          "typeString": "type(uint256)"
                        }
                      },
                      "id": 5380,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "max",
                      "nodeType": "MemberAccess",
                      "src": "11663:17:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11643:37:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 5399,
                  "nodeType": "IfStatement",
                  "src": "11639:248:14",
                  "trueBody": {
                    "id": 5398,
                    "nodeType": "Block",
                    "src": "11682:205:14",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 5385,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 5383,
                                "name": "currentAllowance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5369,
                                "src": "11705:16:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "id": 5384,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5365,
                                "src": "11725:6:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "11705:26:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
                              "id": 5386,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11733:31:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
                                "typeString": "literal_string \"ERC20: insufficient allowance\""
                              },
                              "value": "ERC20: insufficient allowance"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
                                "typeString": "literal_string \"ERC20: insufficient allowance\""
                              }
                            ],
                            "id": 5382,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "11697:7:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 5387,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11697:68:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 5388,
                        "nodeType": "ExpressionStatement",
                        "src": "11697:68:14"
                      },
                      {
                        "id": 5397,
                        "nodeType": "UncheckedBlock",
                        "src": "11780:96:14",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 5390,
                                  "name": "owner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 5361,
                                  "src": "11818:5:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 5391,
                                  "name": "spender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 5363,
                                  "src": "11825:7:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 5394,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 5392,
                                    "name": "currentAllowance",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 5369,
                                    "src": "11834:16:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "id": 5393,
                                    "name": "amount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 5365,
                                    "src": "11853:6:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "11834:25:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 5389,
                                "name": "_approve",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5358,
                                "src": "11809:8:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                  "typeString": "function (address,address,uint256)"
                                }
                              },
                              "id": 5395,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11809:51:14",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 5396,
                            "nodeType": "ExpressionStatement",
                            "src": "11809:51:14"
                          }
                        ]
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 5359,
              "nodeType": "StructuredDocumentation",
              "src": "11158:277:14",
              "text": " @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n Does not update the allowance amount in case of infinite allowance.\n Revert if not enough allowance is available.\n Might emit an {Approval} event."
            },
            "id": 5401,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_spendAllowance",
            "nameLocation": "11450:15:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5366,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5361,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "11484:5:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 5401,
                  "src": "11476:13:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5360,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11476:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5363,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "11508:7:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 5401,
                  "src": "11500:15:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5362,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11500:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5365,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "11534:6:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 5401,
                  "src": "11526:14:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5364,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11526:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11465:82:14"
            },
            "returnParameters": {
              "id": 5367,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11565:0:14"
            },
            "scope": 5429,
            "src": "11441:453:14",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 5411,
              "nodeType": "Block",
              "src": "12617:2:14",
              "statements": []
            },
            "documentation": {
              "id": 5402,
              "nodeType": "StructuredDocumentation",
              "src": "11902:586:14",
              "text": " @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
            },
            "id": 5412,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeTokenTransfer",
            "nameLocation": "12503:20:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5409,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5404,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "12542:4:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 5412,
                  "src": "12534:12:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5403,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12534:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5406,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "12565:2:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 5412,
                  "src": "12557:10:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5405,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12557:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5408,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "12586:6:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 5412,
                  "src": "12578:14:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5407,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12578:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12523:76:14"
            },
            "returnParameters": {
              "id": 5410,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12617:0:14"
            },
            "scope": 5429,
            "src": "12494:125:14",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 5422,
              "nodeType": "Block",
              "src": "13345:2:14",
              "statements": []
            },
            "documentation": {
              "id": 5413,
              "nodeType": "StructuredDocumentation",
              "src": "12627:590:14",
              "text": " @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n has been transferred to `to`.\n - when `from` is zero, `amount` tokens have been minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
            },
            "id": 5423,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_afterTokenTransfer",
            "nameLocation": "13232:19:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5420,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5415,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "13270:4:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 5423,
                  "src": "13262:12:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5414,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13262:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5417,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "13293:2:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 5423,
                  "src": "13285:10:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5416,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13285:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5419,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "13314:6:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 5423,
                  "src": "13306:14:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5418,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13306:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13251:76:14"
            },
            "returnParameters": {
              "id": 5421,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13345:0:14"
            },
            "scope": 5429,
            "src": "13223:124:14",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "constant": false,
            "documentation": {
              "id": 5424,
              "nodeType": "StructuredDocumentation",
              "src": "13355:258:14",
              "text": " @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
            },
            "id": 5428,
            "mutability": "mutable",
            "name": "__gap",
            "nameLocation": "13639:5:14",
            "nodeType": "VariableDeclaration",
            "scope": 5429,
            "src": "13619:25:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$45_storage",
              "typeString": "uint256[45]"
            },
            "typeName": {
              "baseType": {
                "id": 5425,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "13619:7:14",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 5427,
              "length": {
                "hexValue": "3435",
                "id": 5426,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "13627:2:14",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_45_by_1",
                  "typeString": "int_const 45"
                },
                "value": "45"
              },
              "nodeType": "ArrayTypeName",
              "src": "13619:11:14",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$45_storage_ptr",
                "typeString": "uint256[45]"
              }
            },
            "visibility": "private"
          }
        ],
        "scope": 5430,
        "src": "1517:12131:14",
        "usedErrors": []
      }
    ],
    "src": "108:13542:14"
  },
  "bytecode": "608060405234801561001057600080fd5b50610887806100206000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461012357806370a082311461013657806395d89b411461015f578063a457c2d714610167578063a9059cbb1461017a578063dd62ed3e1461018d57600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101a0565b6040516100c391906106c4565b60405180910390f35b6100df6100da366004610735565b610232565b60405190151581526020016100c3565b6035545b6040519081526020016100c3565b6100df61010f36600461075f565b61024a565b604051601281526020016100c3565b6100df610131366004610735565b61026e565b6100f361014436600461079b565b6001600160a01b031660009081526033602052604090205490565b6100b6610290565b6100df610175366004610735565b61029f565b6100df610188366004610735565b61031f565b6100f361019b3660046107bd565b61032d565b6060603680546101af906107f0565b80601f01602080910402602001604051908101604052809291908181526020018280546101db906107f0565b80156102285780601f106101fd57610100808354040283529160200191610228565b820191906000526020600020905b81548152906001019060200180831161020b57829003601f168201915b5050505050905090565b600033610240818585610358565b5060019392505050565b60003361025885828561047c565b6102638585856104f6565b506001949350505050565b600033610240818585610281838361032d565b61028b919061082b565b610358565b6060603780546101af906107f0565b600033816102ad828661032d565b9050838110156103125760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6102638286868403610358565b6000336102408185856104f6565b6001600160a01b03918216600090815260346020908152604080832093909416825291909152205490565b6001600160a01b0383166103ba5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610309565b6001600160a01b03821661041b5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610309565b6001600160a01b0383811660008181526034602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000610488848461032d565b905060001981146104f057818110156104e35760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610309565b6104f08484848403610358565b50505050565b6001600160a01b03831661055a5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610309565b6001600160a01b0382166105bc5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610309565b6001600160a01b038316600090815260336020526040902054818110156106345760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610309565b6001600160a01b0380851660009081526033602052604080822085850390559185168152908120805484929061066b90849061082b565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516106b791815260200190565b60405180910390a36104f0565b600060208083528351808285015260005b818110156106f1578581018301518582016040015282016106d5565b81811115610703576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461073057600080fd5b919050565b6000806040838503121561074857600080fd5b61075183610719565b946020939093013593505050565b60008060006060848603121561077457600080fd5b61077d84610719565b925061078b60208501610719565b9150604084013590509250925092565b6000602082840312156107ad57600080fd5b6107b682610719565b9392505050565b600080604083850312156107d057600080fd5b6107d983610719565b91506107e760208401610719565b90509250929050565b600181811c9082168061080457607f821691505b6020821081141561082557634e487b7160e01b600052602260045260246000fd5b50919050565b6000821982111561084c57634e487b7160e01b600052601160045260246000fd5b50019056fea2646970667358221220c82ae72337142b1ffa5a858ff58f9d079450b8700561b7e014bc87c8621a8ed764736f6c63430008090033",
  "bytecodeSha1": "724e4a00a8c5956464d47e74049fc70a47652d28",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 100
    },
    "version": "0.8.9+commit.e5eed63a"
  },
  "contractName": "ERC20Upgradeable",
  "coverageMap": {
    "branches": {
      "12": {},
      "14": {
        "ERC20Upgradeable._approve": {
          "30": [
            10906,
            10925,
            true
          ],
          "31": [
            10985,
            11006,
            true
          ]
        },
        "ERC20Upgradeable._spendAllowance": {
          "32": [
            11643,
            11680,
            false
          ],
          "33": [
            11705,
            11731,
            true
          ]
        },
        "ERC20Upgradeable._transfer": {
          "34": [
            8182,
            8200,
            true
          ],
          "35": [
            8261,
            8277,
            true
          ],
          "36": [
            8437,
            8458,
            true
          ]
        },
        "ERC20Upgradeable.decreaseAllowance": {
          "29": [
            7356,
            7391,
            true
          ]
        }
      },
      "15": {},
      "17": {},
      "19": {}
    },
    "statements": {
      "12": {},
      "14": {
        "ERC20Upgradeable._approve": {
          "16": [
            10898,
            10966
          ],
          "17": [
            10977,
            11045
          ],
          "18": [
            11058,
            11094
          ],
          "19": [
            11105,
            11142
          ]
        },
        "ERC20Upgradeable._spendAllowance": {
          "20": [
            11697,
            11765
          ],
          "21": [
            11809,
            11860
          ]
        },
        "ERC20Upgradeable._transfer": {
          "22": [
            8174,
            8242
          ],
          "23": [
            8253,
            8317
          ],
          "24": [
            8429,
            8501
          ],
          "25": [
            8537,
            8575
          ],
          "26": [
            8597,
            8620
          ],
          "27": [
            8633,
            8664
          ],
          "28": [
            8677,
            8714
          ]
        },
        "ERC20Upgradeable.allowance": {
          "15": [
            4548,
            4582
          ]
        },
        "ERC20Upgradeable.approve": {
          "5": [
            5049,
            5081
          ],
          "6": [
            5092,
            5103
          ]
        },
        "ERC20Upgradeable.balanceOf": {
          "2": [
            3944,
            3969
          ]
        },
        "ERC20Upgradeable.decimals": {
          "1": [
            3597,
            3606
          ]
        },
        "ERC20Upgradeable.decreaseAllowance": {
          "12": [
            7348,
            7433
          ],
          "13": [
            7469,
            7529
          ]
        },
        "ERC20Upgradeable.increaseAllowance": {
          "10": [
            6539,
            6603
          ]
        },
        "ERC20Upgradeable.name": {
          "3": [
            2639,
            2651
          ]
        },
        "ERC20Upgradeable.symbol": {
          "11": [
            2860,
            2874
          ]
        },
        "ERC20Upgradeable.totalSupply": {
          "0": [
            3760,
            3779
          ]
        },
        "ERC20Upgradeable.transfer": {
          "14": [
            4318,
            4346
          ]
        },
        "ERC20Upgradeable.transferFrom": {
          "7": [
            5880,
            5918
          ],
          "8": [
            5929,
            5956
          ],
          "9": [
            5967,
            5978
          ]
        }
      },
      "15": {},
      "17": {},
      "19": {
        "ContextUpgradeable._msgSender": {
          "4": [
            945,
            962
          ]
        }
      }
    }
  },
  "dependencies": [
    "ContextUpgradeable",
    "IERC20MetadataUpgradeable",
    "IERC20Upgradeable",
    "Initializable"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461012357806370a082311461013657806395d89b411461015f578063a457c2d714610167578063a9059cbb1461017a578063dd62ed3e1461018d57600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101a0565b6040516100c391906106c4565b60405180910390f35b6100df6100da366004610735565b610232565b60405190151581526020016100c3565b6035545b6040519081526020016100c3565b6100df61010f36600461075f565b61024a565b604051601281526020016100c3565b6100df610131366004610735565b61026e565b6100f361014436600461079b565b6001600160a01b031660009081526033602052604090205490565b6100b6610290565b6100df610175366004610735565b61029f565b6100df610188366004610735565b61031f565b6100f361019b3660046107bd565b61032d565b6060603680546101af906107f0565b80601f01602080910402602001604051908101604052809291908181526020018280546101db906107f0565b80156102285780601f106101fd57610100808354040283529160200191610228565b820191906000526020600020905b81548152906001019060200180831161020b57829003601f168201915b5050505050905090565b600033610240818585610358565b5060019392505050565b60003361025885828561047c565b6102638585856104f6565b506001949350505050565b600033610240818585610281838361032d565b61028b919061082b565b610358565b6060603780546101af906107f0565b600033816102ad828661032d565b9050838110156103125760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6102638286868403610358565b6000336102408185856104f6565b6001600160a01b03918216600090815260346020908152604080832093909416825291909152205490565b6001600160a01b0383166103ba5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610309565b6001600160a01b03821661041b5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610309565b6001600160a01b0383811660008181526034602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000610488848461032d565b905060001981146104f057818110156104e35760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610309565b6104f08484848403610358565b50505050565b6001600160a01b03831661055a5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610309565b6001600160a01b0382166105bc5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610309565b6001600160a01b038316600090815260336020526040902054818110156106345760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610309565b6001600160a01b0380851660009081526033602052604080822085850390559185168152908120805484929061066b90849061082b565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516106b791815260200190565b60405180910390a36104f0565b600060208083528351808285015260005b818110156106f1578581018301518582016040015282016106d5565b81811115610703576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461073057600080fd5b919050565b6000806040838503121561074857600080fd5b61075183610719565b946020939093013593505050565b60008060006060848603121561077457600080fd5b61077d84610719565b925061078b60208501610719565b9150604084013590509250925092565b6000602082840312156107ad57600080fd5b6107b682610719565b9392505050565b600080604083850312156107d057600080fd5b6107d983610719565b91506107e760208401610719565b90509250929050565b600181811c9082168061080457607f821691505b6020821081141561082557634e487b7160e01b600052602260045260246000fd5b50919050565b6000821982111561084c57634e487b7160e01b600052601160045260246000fd5b50019056fea2646970667358221220c82ae72337142b1ffa5a858ff58f9d079450b8700561b7e014bc87c8621a8ed764736f6c63430008090033",
  "deployedSourceMap": "1517:12131:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2559:100;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4910:201;;;;;;:::i;:::-;;:::i;:::-;;;1218:14:39;;1211:22;1193:41;;1181:2;1166:18;4910:201:14;1053:187:39;3679:108:14;3767:12;;3679:108;;;1391:25:39;;;1379:2;1364:18;3679:108:14;1245:177:39;5691:295:14;;;;;;:::i;:::-;;:::i;3521:93::-;;;3604:2;1902:36:39;;1890:2;1875:18;3521:93:14;1760:184:39;6395:238:14;;;;;;:::i;:::-;;:::i;3850:127::-;;;;;;:::i;:::-;-1:-1:-1;;;;;3951:18:14;3924:7;3951:18;;;:9;:18;;;;;;;3850:127;2778:104;;;:::i;7136:436::-;;;;;;:::i;:::-;;:::i;4183:193::-;;;;;;:::i;:::-;;:::i;4439:151::-;;;;;;:::i;:::-;;:::i;2559:100::-;2613:13;2646:5;2639:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2559:100;:::o;4910:201::-;4993:4;952:10:19;5049:32:14;952:10:19;5065:7:14;5074:6;5049:8;:32::i;:::-;-1:-1:-1;5099:4:14;;4910:201;-1:-1:-1;;;4910:201:14:o;5691:295::-;5822:4;952:10:19;5880:38:14;5896:4;952:10:19;5911:6:14;5880:15;:38::i;:::-;5929:27;5939:4;5945:2;5949:6;5929:9;:27::i;:::-;-1:-1:-1;5974:4:14;;5691:295;-1:-1:-1;;;;5691:295:14:o;6395:238::-;6483:4;952:10:19;6539:64:14;952:10:19;6555:7:14;6592:10;6564:25;952:10:19;6555:7:14;6564:9;:25::i;:::-;:38;;;;:::i;:::-;6539:8;:64::i;2778:104::-;2834:13;2867:7;2860:14;;;;;:::i;7136:436::-;7229:4;952:10:19;7229:4:14;7312:25;952:10:19;7329:7:14;7312:9;:25::i;:::-;7285:52;;7376:15;7356:16;:35;;7348:85;;;;-1:-1:-1;;;7348:85:14;;3222:2:39;7348:85:14;;;3204:21:39;3261:2;3241:18;;;3234:30;3300:34;3280:18;;;3273:62;-1:-1:-1;;;3351:18:39;;;3344:35;3396:19;;7348:85:14;;;;;;;;;7469:60;7478:5;7485:7;7513:15;7494:16;:34;7469:8;:60::i;4183:193::-;4262:4;952:10:19;4318:28:14;952:10:19;4335:2:14;4339:6;4318:9;:28::i;4439:151::-;-1:-1:-1;;;;;4555:18:14;;;4528:7;4555:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;4439:151::o;10770:380::-;-1:-1:-1;;;;;10906:19:14;;10898:68;;;;-1:-1:-1;;;10898:68:14;;3628:2:39;10898:68:14;;;3610:21:39;3667:2;3647:18;;;3640:30;3706:34;3686:18;;;3679:62;-1:-1:-1;;;3757:18:39;;;3750:34;3801:19;;10898:68:14;3426:400:39;10898:68:14;-1:-1:-1;;;;;10985:21:14;;10977:68;;;;-1:-1:-1;;;10977:68:14;;4033:2:39;10977:68:14;;;4015:21:39;4072:2;4052:18;;;4045:30;4111:34;4091:18;;;4084:62;-1:-1:-1;;;4162:18:39;;;4155:32;4204:19;;10977:68:14;3831:398:39;10977:68:14;-1:-1:-1;;;;;11058:18:14;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;11110:32;;1391:25:39;;;11110:32:14;;1364:18:39;11110:32:14;;;;;;;10770:380;;;:::o;11441:453::-;11576:24;11603:25;11613:5;11620:7;11603:9;:25::i;:::-;11576:52;;-1:-1:-1;;11643:16:14;:37;11639:248;;11725:6;11705:16;:26;;11697:68;;;;-1:-1:-1;;;11697:68:14;;4436:2:39;11697:68:14;;;4418:21:39;4475:2;4455:18;;;4448:30;4514:31;4494:18;;;4487:59;4563:18;;11697:68:14;4234:353:39;11697:68:14;11809:51;11818:5;11825:7;11853:6;11834:16;:25;11809:8;:51::i;:::-;11565:329;11441:453;;;:::o;8051:671::-;-1:-1:-1;;;;;8182:18:14;;8174:68;;;;-1:-1:-1;;;8174:68:14;;4794:2:39;8174:68:14;;;4776:21:39;4833:2;4813:18;;;4806:30;4872:34;4852:18;;;4845:62;-1:-1:-1;;;4923:18:39;;;4916:35;4968:19;;8174:68:14;4592:401:39;8174:68:14;-1:-1:-1;;;;;8261:16:14;;8253:64;;;;-1:-1:-1;;;8253:64:14;;5200:2:39;8253:64:14;;;5182:21:39;5239:2;5219:18;;;5212:30;5278:34;5258:18;;;5251:62;-1:-1:-1;;;5329:18:39;;;5322:33;5372:19;;8253:64:14;4998:399:39;8253:64:14;-1:-1:-1;;;;;8403:15:14;;8381:19;8403:15;;;:9;:15;;;;;;8437:21;;;;8429:72;;;;-1:-1:-1;;;8429:72:14;;5604:2:39;8429:72:14;;;5586:21:39;5643:2;5623:18;;;5616:30;5682:34;5662:18;;;5655:62;-1:-1:-1;;;5733:18:39;;;5726:36;5779:19;;8429:72:14;5402:402:39;8429:72:14;-1:-1:-1;;;;;8537:15:14;;;;;;;:9;:15;;;;;;8555:20;;;8537:38;;8597:13;;;;;;;;:23;;8569:6;;8537:15;8597:23;;8569:6;;8597:23;:::i;:::-;;;;;;;;8653:2;-1:-1:-1;;;;;8638:26:14;8647:4;-1:-1:-1;;;;;8638:26:14;;8657:6;8638:26;;;;1391:25:39;;1379:2;1364:18;;1245:177;8638:26:14;;;;;;;;8677:37;12494:125;14:597:39;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;452:6;449:1;446:13;443:91;;;522:1;517:2;508:6;497:9;493:22;489:31;482:42;443:91;-1:-1:-1;595:2:39;574:15;-1:-1:-1;;570:29:39;555:45;;;;602:2;551:54;;14:597;-1:-1:-1;;;14:597:39:o;616:173::-;684:20;;-1:-1:-1;;;;;733:31:39;;723:42;;713:70;;779:1;776;769:12;713:70;616:173;;;:::o;794:254::-;862:6;870;923:2;911:9;902:7;898:23;894:32;891:52;;;939:1;936;929:12;891:52;962:29;981:9;962:29;:::i;:::-;952:39;1038:2;1023:18;;;;1010:32;;-1:-1:-1;;;794:254:39:o;1427:328::-;1504:6;1512;1520;1573:2;1561:9;1552:7;1548:23;1544:32;1541:52;;;1589:1;1586;1579:12;1541:52;1612:29;1631:9;1612:29;:::i;:::-;1602:39;;1660:38;1694:2;1683:9;1679:18;1660:38;:::i;:::-;1650:48;;1745:2;1734:9;1730:18;1717:32;1707:42;;1427:328;;;;;:::o;1949:186::-;2008:6;2061:2;2049:9;2040:7;2036:23;2032:32;2029:52;;;2077:1;2074;2067:12;2029:52;2100:29;2119:9;2100:29;:::i;:::-;2090:39;1949:186;-1:-1:-1;;;1949:186:39:o;2140:260::-;2208:6;2216;2269:2;2257:9;2248:7;2244:23;2240:32;2237:52;;;2285:1;2282;2275:12;2237:52;2308:29;2327:9;2308:29;:::i;:::-;2298:39;;2356:38;2390:2;2379:9;2375:18;2356:38;:::i;:::-;2346:48;;2140:260;;;;;:::o;2405:380::-;2484:1;2480:12;;;;2527;;;2548:61;;2602:4;2594:6;2590:17;2580:27;;2548:61;2655:2;2647:6;2644:14;2624:18;2621:38;2618:161;;;2701:10;2696:3;2692:20;2689:1;2682:31;2736:4;2733:1;2726:15;2764:4;2761:1;2754:15;2618:161;;2405:380;;;:::o;2790:225::-;2830:3;2861:1;2857:6;2854:1;2851:13;2848:136;;;2906:10;2901:3;2897:20;2894:1;2887:31;2941:4;2938:1;2931:15;2969:4;2966:1;2959:15;2848:136;-1:-1:-1;3000:9:39;;2790:225::o",
  "language": "Solidity",
  "natspec": {
    "details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.",
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
      }
    },
    "stateVariables": {
      "__gap": {
        "details": "This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
      }
    },
    "version": 1
  },
  "offset": [
    1517,
    13648
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x114 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x1A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x6C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH2 0xDA CALLDATASIZE PUSH1 0x4 PUSH2 0x735 JUMP JUMPDEST PUSH2 0x232 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH1 0x35 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x10F CALLDATASIZE PUSH1 0x4 PUSH2 0x75F JUMP JUMPDEST PUSH2 0x24A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x131 CALLDATASIZE PUSH1 0x4 PUSH2 0x735 JUMP JUMPDEST PUSH2 0x26E JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x144 CALLDATASIZE PUSH1 0x4 PUSH2 0x79B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x290 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x175 CALLDATASIZE PUSH1 0x4 PUSH2 0x735 JUMP JUMPDEST PUSH2 0x29F JUMP JUMPDEST PUSH2 0xDF PUSH2 0x188 CALLDATASIZE PUSH1 0x4 PUSH2 0x735 JUMP JUMPDEST PUSH2 0x31F JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x19B CALLDATASIZE PUSH1 0x4 PUSH2 0x7BD JUMP JUMPDEST PUSH2 0x32D JUMP JUMPDEST PUSH1 0x60 PUSH1 0x36 DUP1 SLOAD PUSH2 0x1AF SWAP1 PUSH2 0x7F0 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1DB SWAP1 PUSH2 0x7F0 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x228 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1FD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x228 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x20B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x358 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x258 DUP6 DUP3 DUP6 PUSH2 0x47C JUMP JUMPDEST PUSH2 0x263 DUP6 DUP6 DUP6 PUSH2 0x4F6 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x281 DUP4 DUP4 PUSH2 0x32D JUMP JUMPDEST PUSH2 0x28B SWAP2 SWAP1 PUSH2 0x82B JUMP JUMPDEST PUSH2 0x358 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x37 DUP1 SLOAD PUSH2 0x1AF SWAP1 PUSH2 0x7F0 JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0x2AD DUP3 DUP7 PUSH2 0x32D JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x312 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x263 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x358 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x4F6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x34 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3BA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x41B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x34 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x488 DUP5 DUP5 PUSH2 0x32D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x4F0 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x4E3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x309 JUMP JUMPDEST PUSH2 0x4F0 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x358 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x55A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x634 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x66B SWAP1 DUP5 SWAP1 PUSH2 0x82B JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x6B7 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x4F0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x6F1 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x6D5 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x703 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x730 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x748 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x751 DUP4 PUSH2 0x719 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x774 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x77D DUP5 PUSH2 0x719 JUMP JUMPDEST SWAP3 POP PUSH2 0x78B PUSH1 0x20 DUP6 ADD PUSH2 0x719 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7B6 DUP3 PUSH2 0x719 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7D9 DUP4 PUSH2 0x719 JUMP JUMPDEST SWAP2 POP PUSH2 0x7E7 PUSH1 0x20 DUP5 ADD PUSH2 0x719 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x804 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x825 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x84C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC8 0x2A 0xE7 0x23 CALLDATACOPY EQ 0x2B 0x1F STATICCALL GAS DUP6 DUP16 CREATE2 DUP16 SWAP14 SMOD SWAP5 POP 0xB8 PUSH17 0x561B7E014BC87C8621A8ED764736F6C63 NUMBER STOP ADDMOD MULMOD STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        1517,
        13648
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        1517,
        13648
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        1517,
        13648
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5": {
      "fn": null,
      "offset": [
        1517,
        13648
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "6": {
      "fn": null,
      "offset": [
        1517,
        13648
      ],
      "op": "DUP1",
      "path": "14"
    },
    "7": {
      "fn": null,
      "offset": [
        1517,
        13648
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "8": {
      "fn": null,
      "offset": [
        1517,
        13648
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        1517,
        13648
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "12": {
      "fn": null,
      "offset": [
        1517,
        13648
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        1517,
        13648
      ],
      "op": "DUP1",
      "path": "14"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        1517,
        13648
      ],
      "op": "REVERT",
      "path": "14"
    },
    "16": {
      "fn": null,
      "offset": [
        1517,
        13648
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "17": {
      "fn": null,
      "offset": [
        1517,
        13648
      ],
      "op": "POP",
      "path": "14"
    },
    "18": {
      "fn": null,
      "offset": [
        1517,
        13648
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        1517,
        13648
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "21": {
      "fn": null,
      "offset": [
        1517,
        13648
      ],
      "op": "LT",
      "path": "14"
    },
    "22": {
      "fn": null,
      "offset": [
        1517,
        13648
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xA9"
    },
    "25": {
      "fn": null,
      "offset": [
        1517,
        13648
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "26": {
      "fn": null,
      "offset": [
        1517,
        13648
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        1517,
        13648
      ],
      "op": "CALLDATALOAD",
      "path": "14"
    },
    "29": {
      "fn": null,
      "offset": [
        1517,
        13648
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        1517,
        13648
      ],
      "op": "SHR",
      "path": "14"
    },
    "32": {
      "fn": null,
      "offset": [
        1517,
        13648
      ],
      "op": "DUP1",
      "path": "14"
    },
    "33": {
      "fn": null,
      "offset": [
        1517,
        13648
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x39509351"
    },
    "38": {
      "fn": null,
      "offset": [
        1517,
        13648
      ],
      "op": "GT",
      "path": "14"
    },
    "39": {
      "fn": null,
      "offset": [
        1517,
        13648
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x71"
    },
    "42": {
      "fn": null,
      "offset": [
        1517,
        13648
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "43": {
      "fn": null,
      "offset": [
        1517,
        13648
      ],
      "op": "DUP1",
      "path": "14"
    },
    "44": {
      "fn": null,
      "offset": [
        1517,
        13648
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x39509351"
    },
    "49": {
      "fn": null,
      "offset": [
        1517,
        13648
      ],
      "op": "EQ",
      "path": "14"
    },
    "50": {
      "fn": null,
      "offset": [
        1517,
        13648
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x123"
    },
    "53": {
      "fn": null,
      "offset": [
        1517,
        13648
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "54": {
      "fn": null,
      "offset": [
        1517,
        13648
      ],
      "op": "DUP1",
      "path": "14"
    },
    "55": {
      "fn": null,
      "offset": [
        1517,
        13648
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x70A08231"
    },
    "60": {
      "fn": null,
      "offset": [
        1517,
        13648
      ],
      "op": "EQ",
      "path": "14"
    },
    "61": {
      "fn": null,
      "offset": [
        1517,
        13648
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x136"
    },
    "64": {
      "fn": null,
      "offset": [
        1517,
        13648
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "65": {
      "fn": null,
      "offset": [
        1517,
        13648
      ],
      "op": "DUP1",
      "path": "14"
    },
    "66": {
      "fn": null,
      "offset": [
        1517,
        13648
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x95D89B41"
    },
    "71": {
      "fn": null,
      "offset": [
        1517,
        13648
      ],
      "op": "EQ",
      "path": "14"
    },
    "72": {
      "fn": null,
      "offset": [
        1517,
        13648
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x15F"
    },
    "75": {
      "fn": null,
      "offset": [
        1517,
        13648
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "76": {
      "fn": null,
      "offset": [
        1517,
        13648
      ],
      "op": "DUP1",
      "path": "14"
    },
    "77": {
      "fn": null,
      "offset": [
        1517,
        13648
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0xA457C2D7"
    },
    "82": {
      "fn": null,
      "offset": [
        1517,
        13648
      ],
      "op": "EQ",
      "path": "14"
    },
    "83": {
      "fn": null,
      "offset": [
        1517,
        13648
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x167"
    },
    "86": {
      "fn": null,
      "offset": [
        1517,
        13648
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "87": {
      "fn": null,
      "offset": [
        1517,
        13648
      ],
      "op": "DUP1",
      "path": "14"
    },
    "88": {
      "fn": null,
      "offset": [
        1517,
        13648
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0xA9059CBB"
    },
    "93": {
      "fn": null,
      "offset": [
        1517,
        13648
      ],
      "op": "EQ",
      "path": "14"
    },
    "94": {
      "fn": null,
      "offset": [
        1517,
        13648
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x17A"
    },
    "97": {
      "fn": null,
      "offset": [
        1517,
        13648
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "98": {
      "fn": null,
      "offset": [
        1517,
        13648
      ],
      "op": "DUP1",
      "path": "14"
    },
    "99": {
      "fn": null,
      "offset": [
        1517,
        13648
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0xDD62ED3E"
    },
    "104": {
      "fn": null,
      "offset": [
        1517,
        13648
      ],
      "op": "EQ",
      "path": "14"
    },
    "105": {
      "fn": null,
      "offset": [
        1517,
        13648
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x18D"
    },
    "108": {
      "fn": null,
      "offset": [
        1517,
        13648
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "109": {
      "fn": null,
      "offset": [
        1517,
        13648
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "111": {
      "fn": null,
      "offset": [
        1517,
        13648
      ],
      "op": "DUP1",
      "path": "14"
    },
    "112": {
      "fn": null,
      "offset": [
        1517,
        13648
      ],
      "op": "REVERT",
      "path": "14"
    },
    "113": {
      "fn": null,
      "offset": [
        1517,
        13648
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "114": {
      "fn": null,
      "offset": [
        1517,
        13648
      ],
      "op": "DUP1",
      "path": "14"
    },
    "115": {
      "fn": null,
      "offset": [
        1517,
        13648
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x6FDDE03"
    },
    "120": {
      "fn": null,
      "offset": [
        1517,
        13648
      ],
      "op": "EQ",
      "path": "14"
    },
    "121": {
      "fn": null,
      "offset": [
        1517,
        13648
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xAE"
    },
    "124": {
      "fn": null,
      "offset": [
        1517,
        13648
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "125": {
      "fn": null,
      "offset": [
        1517,
        13648
      ],
      "op": "DUP1",
      "path": "14"
    },
    "126": {
      "fn": null,
      "offset": [
        1517,
        13648
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x95EA7B3"
    },
    "131": {
      "fn": null,
      "offset": [
        1517,
        13648
      ],
      "op": "EQ",
      "path": "14"
    },
    "132": {
      "fn": null,
      "offset": [
        1517,
        13648
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xCC"
    },
    "135": {
      "fn": null,
      "offset": [
        1517,
        13648
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "136": {
      "fn": null,
      "offset": [
        1517,
        13648
      ],
      "op": "DUP1",
      "path": "14"
    },
    "137": {
      "fn": null,
      "offset": [
        1517,
        13648
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x18160DDD"
    },
    "142": {
      "fn": null,
      "offset": [
        1517,
        13648
      ],
      "op": "EQ",
      "path": "14"
    },
    "143": {
      "fn": null,
      "offset": [
        1517,
        13648
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xEF"
    },
    "146": {
      "fn": null,
      "offset": [
        1517,
        13648
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "147": {
      "fn": null,
      "offset": [
        1517,
        13648
      ],
      "op": "DUP1",
      "path": "14"
    },
    "148": {
      "fn": null,
      "offset": [
        1517,
        13648
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x23B872DD"
    },
    "153": {
      "fn": null,
      "offset": [
        1517,
        13648
      ],
      "op": "EQ",
      "path": "14"
    },
    "154": {
      "fn": null,
      "offset": [
        1517,
        13648
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x101"
    },
    "157": {
      "fn": null,
      "offset": [
        1517,
        13648
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "158": {
      "fn": null,
      "offset": [
        1517,
        13648
      ],
      "op": "DUP1",
      "path": "14"
    },
    "159": {
      "fn": null,
      "offset": [
        1517,
        13648
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x313CE567"
    },
    "164": {
      "fn": null,
      "offset": [
        1517,
        13648
      ],
      "op": "EQ",
      "path": "14"
    },
    "165": {
      "fn": null,
      "offset": [
        1517,
        13648
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x114"
    },
    "168": {
      "fn": null,
      "offset": [
        1517,
        13648
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "169": {
      "fn": null,
      "offset": [
        1517,
        13648
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "170": {
      "fn": null,
      "offset": [
        1517,
        13648
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "172": {
      "fn": null,
      "offset": [
        1517,
        13648
      ],
      "op": "DUP1",
      "path": "14"
    },
    "173": {
      "first_revert": true,
      "fn": null,
      "offset": [
        1517,
        13648
      ],
      "op": "REVERT",
      "path": "14"
    },
    "174": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2559,
        2659
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "175": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2559,
        2659
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xB6"
    },
    "178": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2559,
        2659
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1A0"
    },
    "181": {
      "fn": "ERC20Upgradeable.name",
      "jump": "i",
      "offset": [
        2559,
        2659
      ],
      "op": "JUMP",
      "path": "14"
    },
    "182": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2559,
        2659
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "183": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2559,
        2659
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "185": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2559,
        2659
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "186": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2559,
        2659
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xC3"
    },
    "189": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2559,
        2659
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "190": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2559,
        2659
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "191": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2559,
        2659
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x6C4"
    },
    "194": {
      "fn": "ERC20Upgradeable.name",
      "jump": "i",
      "offset": [
        2559,
        2659
      ],
      "op": "JUMP",
      "path": "14"
    },
    "195": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2559,
        2659
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "196": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2559,
        2659
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "198": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2559,
        2659
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "199": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2559,
        2659
      ],
      "op": "DUP1",
      "path": "14"
    },
    "200": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2559,
        2659
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "201": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2559,
        2659
      ],
      "op": "SUB",
      "path": "14"
    },
    "202": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2559,
        2659
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "203": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2559,
        2659
      ],
      "op": "RETURN",
      "path": "14"
    },
    "204": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4910,
        5111
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "205": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4910,
        5111
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xDF"
    },
    "208": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4910,
        5111
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xDA"
    },
    "211": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4910,
        5111
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "212": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4910,
        5111
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "214": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4910,
        5111
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x735"
    },
    "217": {
      "fn": "ERC20Upgradeable.approve",
      "jump": "i",
      "offset": [
        4910,
        5111
      ],
      "op": "JUMP",
      "path": "14"
    },
    "218": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4910,
        5111
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "219": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4910,
        5111
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x232"
    },
    "222": {
      "fn": "ERC20Upgradeable.approve",
      "jump": "i",
      "offset": [
        4910,
        5111
      ],
      "op": "JUMP",
      "path": "14"
    },
    "223": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4910,
        5111
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "224": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4910,
        5111
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "226": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4910,
        5111
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "227": {
      "op": "SWAP1"
    },
    "228": {
      "op": "ISZERO"
    },
    "229": {
      "op": "ISZERO"
    },
    "230": {
      "op": "DUP2"
    },
    "231": {
      "op": "MSTORE"
    },
    "232": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "234": {
      "op": "ADD"
    },
    "235": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4910,
        5111
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xC3"
    },
    "238": {
      "op": "JUMP"
    },
    "239": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        3679,
        3787
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "240": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        3767,
        3779
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 0,
      "value": "0x35"
    },
    "242": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        3767,
        3779
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "243": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        3679,
        3787
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "244": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        3679,
        3787
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "246": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        3679,
        3787
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "247": {
      "op": "SWAP1"
    },
    "248": {
      "op": "DUP2"
    },
    "249": {
      "op": "MSTORE"
    },
    "250": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "252": {
      "op": "ADD"
    },
    "253": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        3679,
        3787
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xC3"
    },
    "256": {
      "op": "JUMP"
    },
    "257": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5691,
        5986
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "258": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5691,
        5986
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xDF"
    },
    "261": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5691,
        5986
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x10F"
    },
    "264": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5691,
        5986
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "265": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5691,
        5986
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "267": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5691,
        5986
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x75F"
    },
    "270": {
      "fn": "ERC20Upgradeable.transferFrom",
      "jump": "i",
      "offset": [
        5691,
        5986
      ],
      "op": "JUMP",
      "path": "14"
    },
    "271": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5691,
        5986
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "272": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5691,
        5986
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x24A"
    },
    "275": {
      "fn": "ERC20Upgradeable.transferFrom",
      "jump": "i",
      "offset": [
        5691,
        5986
      ],
      "op": "JUMP",
      "path": "14"
    },
    "276": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3521,
        3614
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "277": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3521,
        3614
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "279": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3521,
        3614
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "280": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3604,
        3606
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 1,
      "value": "0x12"
    },
    "282": {
      "op": "DUP2"
    },
    "283": {
      "op": "MSTORE"
    },
    "284": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "286": {
      "op": "ADD"
    },
    "287": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3521,
        3614
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xC3"
    },
    "290": {
      "op": "JUMP"
    },
    "291": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6395,
        6633
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "292": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6395,
        6633
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xDF"
    },
    "295": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6395,
        6633
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x131"
    },
    "298": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6395,
        6633
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "299": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6395,
        6633
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "301": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6395,
        6633
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x735"
    },
    "304": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "jump": "i",
      "offset": [
        6395,
        6633
      ],
      "op": "JUMP",
      "path": "14"
    },
    "305": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6395,
        6633
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "306": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6395,
        6633
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x26E"
    },
    "309": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "jump": "i",
      "offset": [
        6395,
        6633
      ],
      "op": "JUMP",
      "path": "14"
    },
    "310": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3850,
        3977
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "311": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3850,
        3977
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xF3"
    },
    "314": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3850,
        3977
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x144"
    },
    "317": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3850,
        3977
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "318": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3850,
        3977
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "320": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3850,
        3977
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x79B"
    },
    "323": {
      "fn": "ERC20Upgradeable.balanceOf",
      "jump": "i",
      "offset": [
        3850,
        3977
      ],
      "op": "JUMP",
      "path": "14"
    },
    "324": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3850,
        3977
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "325": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "327": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "329": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "331": {
      "op": "SHL"
    },
    "332": {
      "op": "SUB"
    },
    "333": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3951,
        3969
      ],
      "op": "AND",
      "path": "14",
      "statement": 2
    },
    "334": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3924,
        3931
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "336": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3951,
        3969
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "337": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3951,
        3969
      ],
      "op": "DUP2",
      "path": "14"
    },
    "338": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3951,
        3969
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "339": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3951,
        3960
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x33"
    },
    "341": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3951,
        3969
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "343": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3951,
        3969
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "344": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3951,
        3969
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "346": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3951,
        3969
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "347": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3951,
        3969
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "348": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3951,
        3969
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "349": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3951,
        3969
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "350": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3850,
        3977
      ],
      "op": "JUMP",
      "path": "14"
    },
    "351": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2778,
        2882
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "352": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2778,
        2882
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xB6"
    },
    "355": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2778,
        2882
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x290"
    },
    "358": {
      "fn": "ERC20Upgradeable.symbol",
      "jump": "i",
      "offset": [
        2778,
        2882
      ],
      "op": "JUMP",
      "path": "14"
    },
    "359": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7136,
        7572
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "360": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7136,
        7572
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xDF"
    },
    "363": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7136,
        7572
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x175"
    },
    "366": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7136,
        7572
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "367": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7136,
        7572
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "369": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7136,
        7572
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x735"
    },
    "372": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "jump": "i",
      "offset": [
        7136,
        7572
      ],
      "op": "JUMP",
      "path": "14"
    },
    "373": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7136,
        7572
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "374": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7136,
        7572
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x29F"
    },
    "377": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "jump": "i",
      "offset": [
        7136,
        7572
      ],
      "op": "JUMP",
      "path": "14"
    },
    "378": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4183,
        4376
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "379": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4183,
        4376
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xDF"
    },
    "382": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4183,
        4376
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x188"
    },
    "385": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4183,
        4376
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "386": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4183,
        4376
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "388": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4183,
        4376
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x735"
    },
    "391": {
      "fn": "ERC20Upgradeable.transfer",
      "jump": "i",
      "offset": [
        4183,
        4376
      ],
      "op": "JUMP",
      "path": "14"
    },
    "392": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4183,
        4376
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "393": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4183,
        4376
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x31F"
    },
    "396": {
      "fn": "ERC20Upgradeable.transfer",
      "jump": "i",
      "offset": [
        4183,
        4376
      ],
      "op": "JUMP",
      "path": "14"
    },
    "397": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4439,
        4590
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "398": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4439,
        4590
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xF3"
    },
    "401": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4439,
        4590
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x19B"
    },
    "404": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4439,
        4590
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "405": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4439,
        4590
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "407": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4439,
        4590
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x7BD"
    },
    "410": {
      "fn": "ERC20Upgradeable.allowance",
      "jump": "i",
      "offset": [
        4439,
        4590
      ],
      "op": "JUMP",
      "path": "14"
    },
    "411": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4439,
        4590
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "412": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4439,
        4590
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x32D"
    },
    "415": {
      "fn": "ERC20Upgradeable.allowance",
      "jump": "i",
      "offset": [
        4439,
        4590
      ],
      "op": "JUMP",
      "path": "14"
    },
    "416": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2559,
        2659
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "417": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2613,
        2626
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x60"
    },
    "419": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2646,
        2651
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 3,
      "value": "0x36"
    },
    "421": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2639,
        2651
      ],
      "op": "DUP1",
      "path": "14"
    },
    "422": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2639,
        2651
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "423": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2639,
        2651
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1AF"
    },
    "426": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2639,
        2651
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "427": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2639,
        2651
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x7F0"
    },
    "430": {
      "fn": "ERC20Upgradeable.name",
      "jump": "i",
      "offset": [
        2639,
        2651
      ],
      "op": "JUMP",
      "path": "14"
    },
    "431": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2639,
        2651
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "432": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2639,
        2651
      ],
      "op": "DUP1",
      "path": "14"
    },
    "433": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2639,
        2651
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1F"
    },
    "435": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2639,
        2651
      ],
      "op": "ADD",
      "path": "14"
    },
    "436": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2639,
        2651
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "438": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2639,
        2651
      ],
      "op": "DUP1",
      "path": "14"
    },
    "439": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2639,
        2651
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "440": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2639,
        2651
      ],
      "op": "DIV",
      "path": "14"
    },
    "441": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2639,
        2651
      ],
      "op": "MUL",
      "path": "14"
    },
    "442": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2639,
        2651
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "444": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2639,
        2651
      ],
      "op": "ADD",
      "path": "14"
    },
    "445": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2639,
        2651
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "447": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2639,
        2651
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "448": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2639,
        2651
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "449": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2639,
        2651
      ],
      "op": "DUP2",
      "path": "14"
    },
    "450": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2639,
        2651
      ],
      "op": "ADD",
      "path": "14"
    },
    "451": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2639,
        2651
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "453": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2639,
        2651
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "454": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2639,
        2651
      ],
      "op": "DUP1",
      "path": "14"
    },
    "455": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2639,
        2651
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "456": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2639,
        2651
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "457": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2639,
        2651
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "458": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2639,
        2651
      ],
      "op": "DUP2",
      "path": "14"
    },
    "459": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2639,
        2651
      ],
      "op": "DUP2",
      "path": "14"
    },
    "460": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2639,
        2651
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "461": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2639,
        2651
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "463": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2639,
        2651
      ],
      "op": "ADD",
      "path": "14"
    },
    "464": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2639,
        2651
      ],
      "op": "DUP3",
      "path": "14"
    },
    "465": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2639,
        2651
      ],
      "op": "DUP1",
      "path": "14"
    },
    "466": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2639,
        2651
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "467": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2639,
        2651
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1DB"
    },
    "470": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2639,
        2651
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "471": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2639,
        2651
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x7F0"
    },
    "474": {
      "fn": "ERC20Upgradeable.name",
      "jump": "i",
      "offset": [
        2639,
        2651
      ],
      "op": "JUMP",
      "path": "14"
    },
    "475": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2639,
        2651
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "476": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2639,
        2651
      ],
      "op": "DUP1",
      "path": "14"
    },
    "477": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2639,
        2651
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "478": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2639,
        2651
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x228"
    },
    "481": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2639,
        2651
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "482": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2639,
        2651
      ],
      "op": "DUP1",
      "path": "14"
    },
    "483": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2639,
        2651
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1F"
    },
    "485": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2639,
        2651
      ],
      "op": "LT",
      "path": "14"
    },
    "486": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2639,
        2651
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1FD"
    },
    "489": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2639,
        2651
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "490": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2639,
        2651
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x100"
    },
    "493": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2639,
        2651
      ],
      "op": "DUP1",
      "path": "14"
    },
    "494": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2639,
        2651
      ],
      "op": "DUP4",
      "path": "14"
    },
    "495": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2639,
        2651
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "496": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2639,
        2651
      ],
      "op": "DIV",
      "path": "14"
    },
    "497": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2639,
        2651
      ],
      "op": "MUL",
      "path": "14"
    },
    "498": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2639,
        2651
      ],
      "op": "DUP4",
      "path": "14"
    },
    "499": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2639,
        2651
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "500": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2639,
        2651
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "501": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2639,
        2651
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "503": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2639,
        2651
      ],
      "op": "ADD",
      "path": "14"
    },
    "504": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2639,
        2651
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "505": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2639,
        2651
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x228"
    },
    "508": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2639,
        2651
      ],
      "op": "JUMP",
      "path": "14"
    },
    "509": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2639,
        2651
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "510": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2639,
        2651
      ],
      "op": "DUP3",
      "path": "14"
    },
    "511": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2639,
        2651
      ],
      "op": "ADD",
      "path": "14"
    },
    "512": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2639,
        2651
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "513": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2639,
        2651
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "514": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2639,
        2651
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "516": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2639,
        2651
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "517": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2639,
        2651
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "519": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2639,
        2651
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "521": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2639,
        2651
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "522": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2639,
        2651
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "523": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2639,
        2651
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "524": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2639,
        2651
      ],
      "op": "DUP2",
      "path": "14"
    },
    "525": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2639,
        2651
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "526": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2639,
        2651
      ],
      "op": "DUP2",
      "path": "14"
    },
    "527": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2639,
        2651
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "528": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2639,
        2651
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "529": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2639,
        2651
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1"
    },
    "531": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2639,
        2651
      ],
      "op": "ADD",
      "path": "14"
    },
    "532": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2639,
        2651
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "533": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2639,
        2651
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "535": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2639,
        2651
      ],
      "op": "ADD",
      "path": "14"
    },
    "536": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2639,
        2651
      ],
      "op": "DUP1",
      "path": "14"
    },
    "537": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2639,
        2651
      ],
      "op": "DUP4",
      "path": "14"
    },
    "538": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2639,
        2651
      ],
      "op": "GT",
      "path": "14"
    },
    "539": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2639,
        2651
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x20B"
    },
    "542": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2639,
        2651
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "543": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2639,
        2651
      ],
      "op": "DUP3",
      "path": "14"
    },
    "544": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2639,
        2651
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "545": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2639,
        2651
      ],
      "op": "SUB",
      "path": "14"
    },
    "546": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2639,
        2651
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1F"
    },
    "548": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2639,
        2651
      ],
      "op": "AND",
      "path": "14"
    },
    "549": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2639,
        2651
      ],
      "op": "DUP3",
      "path": "14"
    },
    "550": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2639,
        2651
      ],
      "op": "ADD",
      "path": "14"
    },
    "551": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2639,
        2651
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "552": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2639,
        2651
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "553": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2639,
        2651
      ],
      "op": "POP",
      "path": "14"
    },
    "554": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2639,
        2651
      ],
      "op": "POP",
      "path": "14"
    },
    "555": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2639,
        2651
      ],
      "op": "POP",
      "path": "14"
    },
    "556": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2639,
        2651
      ],
      "op": "POP",
      "path": "14"
    },
    "557": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2639,
        2651
      ],
      "op": "POP",
      "path": "14"
    },
    "558": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2639,
        2651
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "559": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2639,
        2651
      ],
      "op": "POP",
      "path": "14"
    },
    "560": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2559,
        2659
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "561": {
      "fn": "ERC20Upgradeable.name",
      "jump": "o",
      "offset": [
        2559,
        2659
      ],
      "op": "JUMP",
      "path": "14"
    },
    "562": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4910,
        5111
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "563": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4993,
        4997
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "565": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        952,
        962
      ],
      "op": "CALLER",
      "path": "19",
      "statement": 4
    },
    "566": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        5049,
        5081
      ],
      "op": "PUSH2",
      "path": "14",
      "statement": 5,
      "value": "0x240"
    },
    "569": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        952,
        962
      ],
      "op": "DUP2",
      "path": "19"
    },
    "570": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        5065,
        5072
      ],
      "op": "DUP6",
      "path": "14"
    },
    "571": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        5074,
        5080
      ],
      "op": "DUP6",
      "path": "14"
    },
    "572": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        5049,
        5057
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x358"
    },
    "575": {
      "fn": "ERC20Upgradeable.approve",
      "jump": "i",
      "offset": [
        5049,
        5081
      ],
      "op": "JUMP",
      "path": "14"
    },
    "576": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        5049,
        5081
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "577": {
      "op": "POP"
    },
    "578": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        5099,
        5103
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 6,
      "value": "0x1"
    },
    "580": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        5099,
        5103
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "581": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4910,
        5111
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "582": {
      "op": "POP"
    },
    "583": {
      "op": "POP"
    },
    "584": {
      "op": "POP"
    },
    "585": {
      "fn": "ERC20Upgradeable.approve",
      "jump": "o",
      "offset": [
        4910,
        5111
      ],
      "op": "JUMP",
      "path": "14"
    },
    "586": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5691,
        5986
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "587": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5822,
        5826
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "589": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        952,
        962
      ],
      "op": "CALLER",
      "path": "19"
    },
    "590": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5880,
        5918
      ],
      "op": "PUSH2",
      "path": "14",
      "statement": 7,
      "value": "0x258"
    },
    "593": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5896,
        5900
      ],
      "op": "DUP6",
      "path": "14"
    },
    "594": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        952,
        962
      ],
      "op": "DUP3",
      "path": "19"
    },
    "595": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5911,
        5917
      ],
      "op": "DUP6",
      "path": "14"
    },
    "596": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5880,
        5895
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x47C"
    },
    "599": {
      "fn": "ERC20Upgradeable.transferFrom",
      "jump": "i",
      "offset": [
        5880,
        5918
      ],
      "op": "JUMP",
      "path": "14"
    },
    "600": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5880,
        5918
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "601": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5929,
        5956
      ],
      "op": "PUSH2",
      "path": "14",
      "statement": 8,
      "value": "0x263"
    },
    "604": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5939,
        5943
      ],
      "op": "DUP6",
      "path": "14"
    },
    "605": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5945,
        5947
      ],
      "op": "DUP6",
      "path": "14"
    },
    "606": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5949,
        5955
      ],
      "op": "DUP6",
      "path": "14"
    },
    "607": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5929,
        5938
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x4F6"
    },
    "610": {
      "fn": "ERC20Upgradeable.transferFrom",
      "jump": "i",
      "offset": [
        5929,
        5956
      ],
      "op": "JUMP",
      "path": "14"
    },
    "611": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5929,
        5956
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "612": {
      "op": "POP"
    },
    "613": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5974,
        5978
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 9,
      "value": "0x1"
    },
    "615": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5974,
        5978
      ],
      "op": "SWAP5",
      "path": "14"
    },
    "616": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5691,
        5986
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "617": {
      "op": "POP"
    },
    "618": {
      "op": "POP"
    },
    "619": {
      "op": "POP"
    },
    "620": {
      "op": "POP"
    },
    "621": {
      "fn": "ERC20Upgradeable.transferFrom",
      "jump": "o",
      "offset": [
        5691,
        5986
      ],
      "op": "JUMP",
      "path": "14"
    },
    "622": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6395,
        6633
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "623": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6483,
        6487
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "625": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        952,
        962
      ],
      "op": "CALLER",
      "path": "19"
    },
    "626": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6539,
        6603
      ],
      "op": "PUSH2",
      "path": "14",
      "statement": 10,
      "value": "0x240"
    },
    "629": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        952,
        962
      ],
      "op": "DUP2",
      "path": "19"
    },
    "630": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6555,
        6562
      ],
      "op": "DUP6",
      "path": "14"
    },
    "631": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6592,
        6602
      ],
      "op": "DUP6",
      "path": "14"
    },
    "632": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6564,
        6589
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x281"
    },
    "635": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        952,
        962
      ],
      "op": "DUP4",
      "path": "19"
    },
    "636": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6555,
        6562
      ],
      "op": "DUP4",
      "path": "14"
    },
    "637": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6564,
        6573
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x32D"
    },
    "640": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "jump": "i",
      "offset": [
        6564,
        6589
      ],
      "op": "JUMP",
      "path": "14"
    },
    "641": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6564,
        6589
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "642": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6564,
        6602
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x28B"
    },
    "645": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6564,
        6602
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "646": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6564,
        6602
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "647": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6564,
        6602
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x82B"
    },
    "650": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "jump": "i",
      "offset": [
        6564,
        6602
      ],
      "op": "JUMP",
      "path": "14"
    },
    "651": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6564,
        6602
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "652": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6539,
        6547
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x358"
    },
    "655": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "jump": "i",
      "offset": [
        6539,
        6603
      ],
      "op": "JUMP",
      "path": "14"
    },
    "656": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2778,
        2882
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "657": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2834,
        2847
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x60"
    },
    "659": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2867,
        2874
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 11,
      "value": "0x37"
    },
    "661": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2860,
        2874
      ],
      "op": "DUP1",
      "path": "14"
    },
    "662": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2860,
        2874
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "663": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2860,
        2874
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1AF"
    },
    "666": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2860,
        2874
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "667": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2860,
        2874
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x7F0"
    },
    "670": {
      "fn": "ERC20Upgradeable.symbol",
      "jump": "i",
      "offset": [
        2860,
        2874
      ],
      "op": "JUMP",
      "path": "14"
    },
    "671": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7136,
        7572
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "672": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7229,
        7233
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "674": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        952,
        962
      ],
      "op": "CALLER",
      "path": "19"
    },
    "675": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7229,
        7233
      ],
      "op": "DUP2",
      "path": "14"
    },
    "676": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7312,
        7337
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2AD"
    },
    "679": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        952,
        962
      ],
      "op": "DUP3",
      "path": "19"
    },
    "680": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7329,
        7336
      ],
      "op": "DUP7",
      "path": "14"
    },
    "681": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7312,
        7321
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x32D"
    },
    "684": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "jump": "i",
      "offset": [
        7312,
        7337
      ],
      "op": "JUMP",
      "path": "14"
    },
    "685": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7312,
        7337
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "686": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7285,
        7337
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "687": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7285,
        7337
      ],
      "op": "POP",
      "path": "14"
    },
    "688": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7376,
        7391
      ],
      "op": "DUP4",
      "path": "14",
      "statement": 12
    },
    "689": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7356,
        7372
      ],
      "op": "DUP2",
      "path": "14"
    },
    "690": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7356,
        7391
      ],
      "op": "LT",
      "path": "14"
    },
    "691": {
      "branch": 29,
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7356,
        7391
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "692": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7348,
        7433
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x312"
    },
    "695": {
      "branch": 29,
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7348,
        7433
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "696": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7348,
        7433
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "698": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7348,
        7433
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "699": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "703": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "705": {
      "op": "SHL"
    },
    "706": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7348,
        7433
      ],
      "op": "DUP2",
      "path": "14"
    },
    "707": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7348,
        7433
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "708": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "710": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7348,
        7433
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "712": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7348,
        7433
      ],
      "op": "DUP3",
      "path": "14"
    },
    "713": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7348,
        7433
      ],
      "op": "ADD",
      "path": "14"
    },
    "714": {
      "op": "MSTORE"
    },
    "715": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "717": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "719": {
      "op": "DUP3"
    },
    "720": {
      "op": "ADD"
    },
    "721": {
      "op": "MSTORE"
    },
    "722": {
      "op": "PUSH32",
      "value": "0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
    },
    "755": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "757": {
      "op": "DUP3"
    },
    "758": {
      "op": "ADD"
    },
    "759": {
      "op": "MSTORE"
    },
    "760": {
      "op": "PUSH5",
      "value": "0x207A65726F"
    },
    "766": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "768": {
      "op": "SHL"
    },
    "769": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "771": {
      "op": "DUP3"
    },
    "772": {
      "op": "ADD"
    },
    "773": {
      "op": "MSTORE"
    },
    "774": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "776": {
      "op": "ADD"
    },
    "777": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7348,
        7433
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "778": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7348,
        7433
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "780": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7348,
        7433
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "781": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7348,
        7433
      ],
      "op": "DUP1",
      "path": "14"
    },
    "782": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7348,
        7433
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "783": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7348,
        7433
      ],
      "op": "SUB",
      "path": "14"
    },
    "784": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7348,
        7433
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "785": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7348,
        7433
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "14"
    },
    "786": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7348,
        7433
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "787": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7469,
        7529
      ],
      "op": "PUSH2",
      "path": "14",
      "statement": 13,
      "value": "0x263"
    },
    "790": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7478,
        7483
      ],
      "op": "DUP3",
      "path": "14"
    },
    "791": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7485,
        7492
      ],
      "op": "DUP7",
      "path": "14"
    },
    "792": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7513,
        7528
      ],
      "op": "DUP7",
      "path": "14"
    },
    "793": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7494,
        7510
      ],
      "op": "DUP5",
      "path": "14"
    },
    "794": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7494,
        7528
      ],
      "op": "SUB",
      "path": "14"
    },
    "795": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7469,
        7477
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x358"
    },
    "798": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "jump": "i",
      "offset": [
        7469,
        7529
      ],
      "op": "JUMP",
      "path": "14"
    },
    "799": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4183,
        4376
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "800": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4262,
        4266
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "802": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        952,
        962
      ],
      "op": "CALLER",
      "path": "19"
    },
    "803": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4318,
        4346
      ],
      "op": "PUSH2",
      "path": "14",
      "statement": 14,
      "value": "0x240"
    },
    "806": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        952,
        962
      ],
      "op": "DUP2",
      "path": "19"
    },
    "807": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4335,
        4337
      ],
      "op": "DUP6",
      "path": "14"
    },
    "808": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4339,
        4345
      ],
      "op": "DUP6",
      "path": "14"
    },
    "809": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4318,
        4327
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x4F6"
    },
    "812": {
      "fn": "ERC20Upgradeable.transfer",
      "jump": "i",
      "offset": [
        4318,
        4346
      ],
      "op": "JUMP",
      "path": "14"
    },
    "813": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4439,
        4590
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "814": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "816": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "818": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "820": {
      "op": "SHL"
    },
    "821": {
      "op": "SUB"
    },
    "822": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4555,
        4573
      ],
      "op": "SWAP2",
      "path": "14",
      "statement": 15
    },
    "823": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4555,
        4573
      ],
      "op": "DUP3",
      "path": "14"
    },
    "824": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4555,
        4573
      ],
      "op": "AND",
      "path": "14"
    },
    "825": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4528,
        4535
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "827": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4555,
        4573
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "828": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4555,
        4573
      ],
      "op": "DUP2",
      "path": "14"
    },
    "829": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4555,
        4573
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "830": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4555,
        4566
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x34"
    },
    "832": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4555,
        4573
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "834": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4555,
        4573
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "835": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4555,
        4573
      ],
      "op": "DUP2",
      "path": "14"
    },
    "836": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4555,
        4573
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "837": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4555,
        4573
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "839": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4555,
        4573
      ],
      "op": "DUP1",
      "path": "14"
    },
    "840": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4555,
        4573
      ],
      "op": "DUP4",
      "path": "14"
    },
    "841": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4555,
        4573
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "842": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4555,
        4582
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "843": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4555,
        4582
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "844": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4555,
        4582
      ],
      "op": "SWAP5",
      "path": "14"
    },
    "845": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4555,
        4582
      ],
      "op": "AND",
      "path": "14"
    },
    "846": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4555,
        4582
      ],
      "op": "DUP3",
      "path": "14"
    },
    "847": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4555,
        4582
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "848": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4555,
        4582
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "849": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4555,
        4582
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "850": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4555,
        4582
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "851": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4555,
        4582
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "852": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4555,
        4582
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "853": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4555,
        4582
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "854": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4555,
        4582
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "855": {
      "fn": "ERC20Upgradeable.allowance",
      "jump": "o",
      "offset": [
        4439,
        4590
      ],
      "op": "JUMP",
      "path": "14"
    },
    "856": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10770,
        11150
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "857": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "859": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "861": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "863": {
      "op": "SHL"
    },
    "864": {
      "op": "SUB"
    },
    "865": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10906,
        10925
      ],
      "op": "DUP4",
      "path": "14",
      "statement": 16
    },
    "866": {
      "branch": 30,
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10906,
        10925
      ],
      "op": "AND",
      "path": "14"
    },
    "867": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10898,
        10966
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x3BA"
    },
    "870": {
      "branch": 30,
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10898,
        10966
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "871": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10898,
        10966
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "873": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10898,
        10966
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "874": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "878": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "880": {
      "op": "SHL"
    },
    "881": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10898,
        10966
      ],
      "op": "DUP2",
      "path": "14"
    },
    "882": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10898,
        10966
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "883": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "885": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10898,
        10966
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "887": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10898,
        10966
      ],
      "op": "DUP3",
      "path": "14"
    },
    "888": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10898,
        10966
      ],
      "op": "ADD",
      "path": "14"
    },
    "889": {
      "op": "MSTORE"
    },
    "890": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "892": {
      "op": "DUP1"
    },
    "893": {
      "op": "DUP3"
    },
    "894": {
      "op": "ADD"
    },
    "895": {
      "op": "MSTORE"
    },
    "896": {
      "op": "PUSH32",
      "value": "0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
    },
    "929": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "931": {
      "op": "DUP3"
    },
    "932": {
      "op": "ADD"
    },
    "933": {
      "op": "MSTORE"
    },
    "934": {
      "op": "PUSH4",
      "value": "0x72657373"
    },
    "939": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "941": {
      "op": "SHL"
    },
    "942": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "944": {
      "op": "DUP3"
    },
    "945": {
      "op": "ADD"
    },
    "946": {
      "op": "MSTORE"
    },
    "947": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "949": {
      "op": "ADD"
    },
    "950": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10898,
        10966
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x309"
    },
    "953": {
      "op": "JUMP"
    },
    "954": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10898,
        10966
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "955": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "957": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "959": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "961": {
      "op": "SHL"
    },
    "962": {
      "op": "SUB"
    },
    "963": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10985,
        11006
      ],
      "op": "DUP3",
      "path": "14",
      "statement": 17
    },
    "964": {
      "branch": 31,
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10985,
        11006
      ],
      "op": "AND",
      "path": "14"
    },
    "965": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10977,
        11045
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x41B"
    },
    "968": {
      "branch": 31,
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10977,
        11045
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "969": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10977,
        11045
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "971": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10977,
        11045
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "972": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "976": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "978": {
      "op": "SHL"
    },
    "979": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10977,
        11045
      ],
      "op": "DUP2",
      "path": "14"
    },
    "980": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10977,
        11045
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "981": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "983": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10977,
        11045
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "985": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10977,
        11045
      ],
      "op": "DUP3",
      "path": "14"
    },
    "986": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10977,
        11045
      ],
      "op": "ADD",
      "path": "14"
    },
    "987": {
      "op": "MSTORE"
    },
    "988": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "990": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "992": {
      "op": "DUP3"
    },
    "993": {
      "op": "ADD"
    },
    "994": {
      "op": "MSTORE"
    },
    "995": {
      "op": "PUSH32",
      "value": "0x45524332303A20617070726F766520746F20746865207A65726F206164647265"
    },
    "1028": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1030": {
      "op": "DUP3"
    },
    "1031": {
      "op": "ADD"
    },
    "1032": {
      "op": "MSTORE"
    },
    "1033": {
      "op": "PUSH2",
      "value": "0x7373"
    },
    "1036": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "1038": {
      "op": "SHL"
    },
    "1039": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1041": {
      "op": "DUP3"
    },
    "1042": {
      "op": "ADD"
    },
    "1043": {
      "op": "MSTORE"
    },
    "1044": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1046": {
      "op": "ADD"
    },
    "1047": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10977,
        11045
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x309"
    },
    "1050": {
      "op": "JUMP"
    },
    "1051": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10977,
        11045
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1052": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1054": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1056": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1058": {
      "op": "SHL"
    },
    "1059": {
      "op": "SUB"
    },
    "1060": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        11058,
        11076
      ],
      "op": "DUP4",
      "path": "14",
      "statement": 18
    },
    "1061": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        11058,
        11076
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1062": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        11058,
        11076
      ],
      "op": "AND",
      "path": "14"
    },
    "1063": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        11058,
        11076
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "1065": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        11058,
        11076
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1066": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        11058,
        11076
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1067": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        11058,
        11076
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1068": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        11058,
        11069
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x34"
    },
    "1070": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        11058,
        11076
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "1072": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        11058,
        11076
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1073": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        11058,
        11076
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1074": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        11058,
        11076
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1075": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        11058,
        11076
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "1077": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        11058,
        11076
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1078": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        11058,
        11076
      ],
      "op": "DUP4",
      "path": "14"
    },
    "1079": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        11058,
        11076
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "1080": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        11058,
        11085
      ],
      "op": "SWAP5",
      "path": "14"
    },
    "1081": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        11058,
        11085
      ],
      "op": "DUP8",
      "path": "14"
    },
    "1082": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        11058,
        11085
      ],
      "op": "AND",
      "path": "14"
    },
    "1083": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        11058,
        11085
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1084": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        11058,
        11085
      ],
      "op": "DUP5",
      "path": "14"
    },
    "1085": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        11058,
        11085
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1086": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        11058,
        11085
      ],
      "op": "SWAP5",
      "path": "14"
    },
    "1087": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        11058,
        11085
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1088": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        11058,
        11085
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1089": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        11058,
        11085
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1090": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        11058,
        11085
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1091": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        11058,
        11085
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1092": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        11058,
        11085
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "1093": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        11058,
        11094
      ],
      "op": "DUP6",
      "path": "14"
    },
    "1094": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        11058,
        11094
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1095": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        11058,
        11094
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "1096": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        11110,
        11142
      ],
      "op": "SWAP1",
      "path": "14",
      "statement": 19
    },
    "1097": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        11110,
        11142
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1098": {
      "op": "DUP5"
    },
    "1099": {
      "op": "DUP2"
    },
    "1100": {
      "op": "MSTORE"
    },
    "1101": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        11110,
        11142
      ],
      "op": "PUSH32",
      "path": "14",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "1134": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        11110,
        11142
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1135": {
      "op": "ADD"
    },
    "1136": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        11110,
        11142
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "1138": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        11110,
        11142
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1139": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        11110,
        11142
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1140": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        11110,
        11142
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1141": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        11110,
        11142
      ],
      "op": "SUB",
      "path": "14"
    },
    "1142": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        11110,
        11142
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1143": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        11110,
        11142
      ],
      "op": "LOG3",
      "path": "14"
    },
    "1144": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10770,
        11150
      ],
      "op": "POP",
      "path": "14"
    },
    "1145": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10770,
        11150
      ],
      "op": "POP",
      "path": "14"
    },
    "1146": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10770,
        11150
      ],
      "op": "POP",
      "path": "14"
    },
    "1147": {
      "fn": "ERC20Upgradeable._approve",
      "jump": "o",
      "offset": [
        10770,
        11150
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1148": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11441,
        11894
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1149": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11576,
        11600
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "1151": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11603,
        11628
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x488"
    },
    "1154": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11613,
        11618
      ],
      "op": "DUP5",
      "path": "14"
    },
    "1155": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11620,
        11627
      ],
      "op": "DUP5",
      "path": "14"
    },
    "1156": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11603,
        11612
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x32D"
    },
    "1159": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "jump": "i",
      "offset": [
        11603,
        11628
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1160": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11603,
        11628
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1161": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11576,
        11628
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1162": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11576,
        11628
      ],
      "op": "POP",
      "path": "14"
    },
    "1163": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1165": {
      "op": "NOT"
    },
    "1166": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11643,
        11659
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1167": {
      "branch": 32,
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11643,
        11680
      ],
      "op": "EQ",
      "path": "14"
    },
    "1168": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11639,
        11887
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x4F0"
    },
    "1171": {
      "branch": 32,
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11639,
        11887
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1172": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11725,
        11731
      ],
      "op": "DUP2",
      "path": "14",
      "statement": 20
    },
    "1173": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11705,
        11721
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1174": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11705,
        11731
      ],
      "op": "LT",
      "path": "14"
    },
    "1175": {
      "branch": 33,
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11705,
        11731
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "1176": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11697,
        11765
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x4E3"
    },
    "1179": {
      "branch": 33,
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11697,
        11765
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1180": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11697,
        11765
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "1182": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11697,
        11765
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1183": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1187": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1189": {
      "op": "SHL"
    },
    "1190": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11697,
        11765
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1191": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11697,
        11765
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1192": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1194": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11697,
        11765
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "1196": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11697,
        11765
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1197": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11697,
        11765
      ],
      "op": "ADD",
      "path": "14"
    },
    "1198": {
      "op": "MSTORE"
    },
    "1199": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "1201": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1203": {
      "op": "DUP3"
    },
    "1204": {
      "op": "ADD"
    },
    "1205": {
      "op": "MSTORE"
    },
    "1206": {
      "op": "PUSH32",
      "value": "0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000"
    },
    "1239": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1241": {
      "op": "DUP3"
    },
    "1242": {
      "op": "ADD"
    },
    "1243": {
      "op": "MSTORE"
    },
    "1244": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1246": {
      "op": "ADD"
    },
    "1247": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11697,
        11765
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x309"
    },
    "1250": {
      "op": "JUMP"
    },
    "1251": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11697,
        11765
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1252": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11809,
        11860
      ],
      "op": "PUSH2",
      "path": "14",
      "statement": 21,
      "value": "0x4F0"
    },
    "1255": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11818,
        11823
      ],
      "op": "DUP5",
      "path": "14"
    },
    "1256": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11825,
        11832
      ],
      "op": "DUP5",
      "path": "14"
    },
    "1257": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11853,
        11859
      ],
      "op": "DUP5",
      "path": "14"
    },
    "1258": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11834,
        11850
      ],
      "op": "DUP5",
      "path": "14"
    },
    "1259": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11834,
        11859
      ],
      "op": "SUB",
      "path": "14"
    },
    "1260": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11809,
        11817
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x358"
    },
    "1263": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "jump": "i",
      "offset": [
        11809,
        11860
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1264": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11809,
        11860
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1265": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11565,
        11894
      ],
      "op": "POP",
      "path": "14"
    },
    "1266": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11441,
        11894
      ],
      "op": "POP",
      "path": "14"
    },
    "1267": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11441,
        11894
      ],
      "op": "POP",
      "path": "14"
    },
    "1268": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "offset": [
        11441,
        11894
      ],
      "op": "POP",
      "path": "14"
    },
    "1269": {
      "fn": "ERC20Upgradeable._spendAllowance",
      "jump": "o",
      "offset": [
        11441,
        11894
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1270": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8051,
        8722
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1271": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1273": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1275": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1277": {
      "op": "SHL"
    },
    "1278": {
      "op": "SUB"
    },
    "1279": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8182,
        8200
      ],
      "op": "DUP4",
      "path": "14",
      "statement": 22
    },
    "1280": {
      "branch": 34,
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8182,
        8200
      ],
      "op": "AND",
      "path": "14"
    },
    "1281": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8174,
        8242
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x55A"
    },
    "1284": {
      "branch": 34,
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8174,
        8242
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1285": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8174,
        8242
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "1287": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8174,
        8242
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1288": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1292": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1294": {
      "op": "SHL"
    },
    "1295": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8174,
        8242
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1296": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8174,
        8242
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1297": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1299": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8174,
        8242
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "1301": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8174,
        8242
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1302": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8174,
        8242
      ],
      "op": "ADD",
      "path": "14"
    },
    "1303": {
      "op": "MSTORE"
    },
    "1304": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "1306": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1308": {
      "op": "DUP3"
    },
    "1309": {
      "op": "ADD"
    },
    "1310": {
      "op": "MSTORE"
    },
    "1311": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E736665722066726F6D20746865207A65726F206164"
    },
    "1344": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1346": {
      "op": "DUP3"
    },
    "1347": {
      "op": "ADD"
    },
    "1348": {
      "op": "MSTORE"
    },
    "1349": {
      "op": "PUSH5",
      "value": "0x6472657373"
    },
    "1355": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "1357": {
      "op": "SHL"
    },
    "1358": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1360": {
      "op": "DUP3"
    },
    "1361": {
      "op": "ADD"
    },
    "1362": {
      "op": "MSTORE"
    },
    "1363": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1365": {
      "op": "ADD"
    },
    "1366": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8174,
        8242
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x309"
    },
    "1369": {
      "op": "JUMP"
    },
    "1370": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8174,
        8242
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1371": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1373": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1375": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1377": {
      "op": "SHL"
    },
    "1378": {
      "op": "SUB"
    },
    "1379": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8261,
        8277
      ],
      "op": "DUP3",
      "path": "14",
      "statement": 23
    },
    "1380": {
      "branch": 35,
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8261,
        8277
      ],
      "op": "AND",
      "path": "14"
    },
    "1381": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8253,
        8317
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x5BC"
    },
    "1384": {
      "branch": 35,
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8253,
        8317
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1385": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8253,
        8317
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "1387": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8253,
        8317
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1388": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1392": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1394": {
      "op": "SHL"
    },
    "1395": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8253,
        8317
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1396": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8253,
        8317
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1397": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1399": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8253,
        8317
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "1401": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8253,
        8317
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1402": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8253,
        8317
      ],
      "op": "ADD",
      "path": "14"
    },
    "1403": {
      "op": "MSTORE"
    },
    "1404": {
      "op": "PUSH1",
      "value": "0x23"
    },
    "1406": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1408": {
      "op": "DUP3"
    },
    "1409": {
      "op": "ADD"
    },
    "1410": {
      "op": "MSTORE"
    },
    "1411": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E7366657220746F20746865207A65726F2061646472"
    },
    "1444": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1446": {
      "op": "DUP3"
    },
    "1447": {
      "op": "ADD"
    },
    "1448": {
      "op": "MSTORE"
    },
    "1449": {
      "op": "PUSH3",
      "value": "0x657373"
    },
    "1453": {
      "op": "PUSH1",
      "value": "0xE8"
    },
    "1455": {
      "op": "SHL"
    },
    "1456": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1458": {
      "op": "DUP3"
    },
    "1459": {
      "op": "ADD"
    },
    "1460": {
      "op": "MSTORE"
    },
    "1461": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1463": {
      "op": "ADD"
    },
    "1464": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8253,
        8317
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x309"
    },
    "1467": {
      "op": "JUMP"
    },
    "1468": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8253,
        8317
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1469": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1471": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1473": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1475": {
      "op": "SHL"
    },
    "1476": {
      "op": "SUB"
    },
    "1477": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8403,
        8418
      ],
      "op": "DUP4",
      "path": "14"
    },
    "1478": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8403,
        8418
      ],
      "op": "AND",
      "path": "14"
    },
    "1479": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8381,
        8400
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "1481": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8403,
        8418
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1482": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8403,
        8418
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1483": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8403,
        8418
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1484": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8403,
        8412
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x33"
    },
    "1486": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8403,
        8418
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "1488": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8403,
        8418
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1489": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8403,
        8418
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "1491": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8403,
        8418
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1492": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8403,
        8418
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "1493": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8403,
        8418
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "1494": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8437,
        8458
      ],
      "op": "DUP2",
      "path": "14",
      "statement": 24
    },
    "1495": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8437,
        8458
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1496": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8437,
        8458
      ],
      "op": "LT",
      "path": "14"
    },
    "1497": {
      "branch": 36,
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8437,
        8458
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "1498": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8429,
        8501
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x634"
    },
    "1501": {
      "branch": 36,
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8429,
        8501
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1502": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8429,
        8501
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "1504": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8429,
        8501
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1505": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1509": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1511": {
      "op": "SHL"
    },
    "1512": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8429,
        8501
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1513": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8429,
        8501
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1514": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1516": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8429,
        8501
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "1518": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8429,
        8501
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1519": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8429,
        8501
      ],
      "op": "ADD",
      "path": "14"
    },
    "1520": {
      "op": "MSTORE"
    },
    "1521": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "1523": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1525": {
      "op": "DUP3"
    },
    "1526": {
      "op": "ADD"
    },
    "1527": {
      "op": "MSTORE"
    },
    "1528": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E7366657220616D6F756E7420657863656564732062"
    },
    "1561": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1563": {
      "op": "DUP3"
    },
    "1564": {
      "op": "ADD"
    },
    "1565": {
      "op": "MSTORE"
    },
    "1566": {
      "op": "PUSH6",
      "value": "0x616C616E6365"
    },
    "1573": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "1575": {
      "op": "SHL"
    },
    "1576": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1578": {
      "op": "DUP3"
    },
    "1579": {
      "op": "ADD"
    },
    "1580": {
      "op": "MSTORE"
    },
    "1581": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1583": {
      "op": "ADD"
    },
    "1584": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8429,
        8501
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x309"
    },
    "1587": {
      "op": "JUMP"
    },
    "1588": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8429,
        8501
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1589": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1591": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1593": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1595": {
      "op": "SHL"
    },
    "1596": {
      "op": "SUB"
    },
    "1597": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8537,
        8552
      ],
      "op": "DUP1",
      "path": "14",
      "statement": 25
    },
    "1598": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8537,
        8552
      ],
      "op": "DUP6",
      "path": "14"
    },
    "1599": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8537,
        8552
      ],
      "op": "AND",
      "path": "14"
    },
    "1600": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8537,
        8552
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "1602": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8537,
        8552
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1603": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8537,
        8552
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1604": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8537,
        8552
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1605": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8537,
        8546
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x33"
    },
    "1607": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8537,
        8552
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "1609": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8537,
        8552
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1610": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8537,
        8552
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "1612": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8537,
        8552
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1613": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8537,
        8552
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1614": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8537,
        8552
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "1615": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8555,
        8575
      ],
      "op": "DUP6",
      "path": "14"
    },
    "1616": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8555,
        8575
      ],
      "op": "DUP6",
      "path": "14"
    },
    "1617": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8555,
        8575
      ],
      "op": "SUB",
      "path": "14"
    },
    "1618": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8537,
        8575
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1619": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8537,
        8575
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "1620": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8597,
        8610
      ],
      "op": "SWAP2",
      "path": "14",
      "statement": 26
    },
    "1621": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8597,
        8610
      ],
      "op": "DUP6",
      "path": "14"
    },
    "1622": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8597,
        8610
      ],
      "op": "AND",
      "path": "14"
    },
    "1623": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8597,
        8610
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1624": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8597,
        8610
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1625": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8597,
        8610
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1626": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8597,
        8610
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1627": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8597,
        8610
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "1628": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8597,
        8620
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1629": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8597,
        8620
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "1630": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8569,
        8575
      ],
      "op": "DUP5",
      "path": "14"
    },
    "1631": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8569,
        8575
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "1632": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8537,
        8552
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1633": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8597,
        8620
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x66B"
    },
    "1636": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8597,
        8620
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1637": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8569,
        8575
      ],
      "op": "DUP5",
      "path": "14"
    },
    "1638": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8569,
        8575
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1639": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8597,
        8620
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x82B"
    },
    "1642": {
      "fn": "ERC20Upgradeable._transfer",
      "jump": "i",
      "offset": [
        8597,
        8620
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1643": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8597,
        8620
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1644": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8597,
        8620
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "1645": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8597,
        8620
      ],
      "op": "POP",
      "path": "14"
    },
    "1646": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8597,
        8620
      ],
      "op": "POP",
      "path": "14"
    },
    "1647": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8597,
        8620
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1648": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8597,
        8620
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1649": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8597,
        8620
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "1650": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8597,
        8620
      ],
      "op": "POP",
      "path": "14"
    },
    "1651": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8653,
        8655
      ],
      "op": "DUP3",
      "path": "14",
      "statement": 27
    },
    "1652": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1654": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1656": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1658": {
      "op": "SHL"
    },
    "1659": {
      "op": "SUB"
    },
    "1660": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8638,
        8664
      ],
      "op": "AND",
      "path": "14"
    },
    "1661": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8647,
        8651
      ],
      "op": "DUP5",
      "path": "14"
    },
    "1662": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1664": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1666": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1668": {
      "op": "SHL"
    },
    "1669": {
      "op": "SUB"
    },
    "1670": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8638,
        8664
      ],
      "op": "AND",
      "path": "14"
    },
    "1671": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8638,
        8664
      ],
      "op": "PUSH32",
      "path": "14",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "1704": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8657,
        8663
      ],
      "op": "DUP5",
      "path": "14"
    },
    "1705": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8638,
        8664
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "1707": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8638,
        8664
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1708": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8638,
        8664
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x6B7"
    },
    "1711": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8638,
        8664
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1712": {
      "op": "DUP2"
    },
    "1713": {
      "op": "MSTORE"
    },
    "1714": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1716": {
      "op": "ADD"
    },
    "1717": {
      "op": "SWAP1"
    },
    "1718": {
      "op": "JUMP"
    },
    "1719": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8638,
        8664
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1720": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8638,
        8664
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "1722": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8638,
        8664
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1723": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8638,
        8664
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1724": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8638,
        8664
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1725": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8638,
        8664
      ],
      "op": "SUB",
      "path": "14"
    },
    "1726": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8638,
        8664
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1727": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8638,
        8664
      ],
      "op": "LOG3",
      "path": "14"
    },
    "1728": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8677,
        8714
      ],
      "op": "PUSH2",
      "path": "14",
      "statement": 28,
      "value": "0x4F0"
    },
    "1731": {
      "fn": "ERC20Upgradeable._beforeTokenTransfer",
      "offset": [
        12494,
        12619
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1732": {
      "op": "JUMPDEST"
    },
    "1733": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1735": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1737": {
      "op": "DUP1"
    },
    "1738": {
      "op": "DUP4"
    },
    "1739": {
      "op": "MSTORE"
    },
    "1740": {
      "op": "DUP4"
    },
    "1741": {
      "op": "MLOAD"
    },
    "1742": {
      "op": "DUP1"
    },
    "1743": {
      "op": "DUP3"
    },
    "1744": {
      "op": "DUP6"
    },
    "1745": {
      "op": "ADD"
    },
    "1746": {
      "op": "MSTORE"
    },
    "1747": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1749": {
      "op": "JUMPDEST"
    },
    "1750": {
      "op": "DUP2"
    },
    "1751": {
      "op": "DUP2"
    },
    "1752": {
      "op": "LT"
    },
    "1753": {
      "op": "ISZERO"
    },
    "1754": {
      "op": "PUSH2",
      "value": "0x6F1"
    },
    "1757": {
      "op": "JUMPI"
    },
    "1758": {
      "op": "DUP6"
    },
    "1759": {
      "op": "DUP2"
    },
    "1760": {
      "op": "ADD"
    },
    "1761": {
      "op": "DUP4"
    },
    "1762": {
      "op": "ADD"
    },
    "1763": {
      "op": "MLOAD"
    },
    "1764": {
      "op": "DUP6"
    },
    "1765": {
      "op": "DUP3"
    },
    "1766": {
      "op": "ADD"
    },
    "1767": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1769": {
      "op": "ADD"
    },
    "1770": {
      "op": "MSTORE"
    },
    "1771": {
      "op": "DUP3"
    },
    "1772": {
      "op": "ADD"
    },
    "1773": {
      "op": "PUSH2",
      "value": "0x6D5"
    },
    "1776": {
      "op": "JUMP"
    },
    "1777": {
      "op": "JUMPDEST"
    },
    "1778": {
      "op": "DUP2"
    },
    "1779": {
      "op": "DUP2"
    },
    "1780": {
      "op": "GT"
    },
    "1781": {
      "op": "ISZERO"
    },
    "1782": {
      "op": "PUSH2",
      "value": "0x703"
    },
    "1785": {
      "op": "JUMPI"
    },
    "1786": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1788": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1790": {
      "op": "DUP4"
    },
    "1791": {
      "op": "DUP8"
    },
    "1792": {
      "op": "ADD"
    },
    "1793": {
      "op": "ADD"
    },
    "1794": {
      "op": "MSTORE"
    },
    "1795": {
      "op": "JUMPDEST"
    },
    "1796": {
      "op": "POP"
    },
    "1797": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1799": {
      "op": "ADD"
    },
    "1800": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1802": {
      "op": "NOT"
    },
    "1803": {
      "op": "AND"
    },
    "1804": {
      "op": "SWAP3"
    },
    "1805": {
      "op": "SWAP1"
    },
    "1806": {
      "op": "SWAP3"
    },
    "1807": {
      "op": "ADD"
    },
    "1808": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1810": {
      "op": "ADD"
    },
    "1811": {
      "op": "SWAP4"
    },
    "1812": {
      "op": "SWAP3"
    },
    "1813": {
      "op": "POP"
    },
    "1814": {
      "op": "POP"
    },
    "1815": {
      "op": "POP"
    },
    "1816": {
      "jump": "o",
      "op": "JUMP"
    },
    "1817": {
      "op": "JUMPDEST"
    },
    "1818": {
      "op": "DUP1"
    },
    "1819": {
      "op": "CALLDATALOAD"
    },
    "1820": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1822": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1824": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1826": {
      "op": "SHL"
    },
    "1827": {
      "op": "SUB"
    },
    "1828": {
      "op": "DUP2"
    },
    "1829": {
      "op": "AND"
    },
    "1830": {
      "op": "DUP2"
    },
    "1831": {
      "op": "EQ"
    },
    "1832": {
      "op": "PUSH2",
      "value": "0x730"
    },
    "1835": {
      "op": "JUMPI"
    },
    "1836": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1838": {
      "op": "DUP1"
    },
    "1839": {
      "op": "REVERT"
    },
    "1840": {
      "op": "JUMPDEST"
    },
    "1841": {
      "op": "SWAP2"
    },
    "1842": {
      "op": "SWAP1"
    },
    "1843": {
      "op": "POP"
    },
    "1844": {
      "jump": "o",
      "op": "JUMP"
    },
    "1845": {
      "op": "JUMPDEST"
    },
    "1846": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1848": {
      "op": "DUP1"
    },
    "1849": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1851": {
      "op": "DUP4"
    },
    "1852": {
      "op": "DUP6"
    },
    "1853": {
      "op": "SUB"
    },
    "1854": {
      "op": "SLT"
    },
    "1855": {
      "op": "ISZERO"
    },
    "1856": {
      "op": "PUSH2",
      "value": "0x748"
    },
    "1859": {
      "op": "JUMPI"
    },
    "1860": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1862": {
      "op": "DUP1"
    },
    "1863": {
      "op": "REVERT"
    },
    "1864": {
      "op": "JUMPDEST"
    },
    "1865": {
      "op": "PUSH2",
      "value": "0x751"
    },
    "1868": {
      "op": "DUP4"
    },
    "1869": {
      "op": "PUSH2",
      "value": "0x719"
    },
    "1872": {
      "jump": "i",
      "op": "JUMP"
    },
    "1873": {
      "op": "JUMPDEST"
    },
    "1874": {
      "op": "SWAP5"
    },
    "1875": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1877": {
      "op": "SWAP4"
    },
    "1878": {
      "op": "SWAP1"
    },
    "1879": {
      "op": "SWAP4"
    },
    "1880": {
      "op": "ADD"
    },
    "1881": {
      "op": "CALLDATALOAD"
    },
    "1882": {
      "op": "SWAP4"
    },
    "1883": {
      "op": "POP"
    },
    "1884": {
      "op": "POP"
    },
    "1885": {
      "op": "POP"
    },
    "1886": {
      "jump": "o",
      "op": "JUMP"
    },
    "1887": {
      "op": "JUMPDEST"
    },
    "1888": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1890": {
      "op": "DUP1"
    },
    "1891": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1893": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1895": {
      "op": "DUP5"
    },
    "1896": {
      "op": "DUP7"
    },
    "1897": {
      "op": "SUB"
    },
    "1898": {
      "op": "SLT"
    },
    "1899": {
      "op": "ISZERO"
    },
    "1900": {
      "op": "PUSH2",
      "value": "0x774"
    },
    "1903": {
      "op": "JUMPI"
    },
    "1904": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1906": {
      "op": "DUP1"
    },
    "1907": {
      "op": "REVERT"
    },
    "1908": {
      "op": "JUMPDEST"
    },
    "1909": {
      "op": "PUSH2",
      "value": "0x77D"
    },
    "1912": {
      "op": "DUP5"
    },
    "1913": {
      "op": "PUSH2",
      "value": "0x719"
    },
    "1916": {
      "jump": "i",
      "op": "JUMP"
    },
    "1917": {
      "op": "JUMPDEST"
    },
    "1918": {
      "op": "SWAP3"
    },
    "1919": {
      "op": "POP"
    },
    "1920": {
      "op": "PUSH2",
      "value": "0x78B"
    },
    "1923": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1925": {
      "op": "DUP6"
    },
    "1926": {
      "op": "ADD"
    },
    "1927": {
      "op": "PUSH2",
      "value": "0x719"
    },
    "1930": {
      "jump": "i",
      "op": "JUMP"
    },
    "1931": {
      "op": "JUMPDEST"
    },
    "1932": {
      "op": "SWAP2"
    },
    "1933": {
      "op": "POP"
    },
    "1934": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1936": {
      "op": "DUP5"
    },
    "1937": {
      "op": "ADD"
    },
    "1938": {
      "op": "CALLDATALOAD"
    },
    "1939": {
      "op": "SWAP1"
    },
    "1940": {
      "op": "POP"
    },
    "1941": {
      "op": "SWAP3"
    },
    "1942": {
      "op": "POP"
    },
    "1943": {
      "op": "SWAP3"
    },
    "1944": {
      "op": "POP"
    },
    "1945": {
      "op": "SWAP3"
    },
    "1946": {
      "jump": "o",
      "op": "JUMP"
    },
    "1947": {
      "op": "JUMPDEST"
    },
    "1948": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1950": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1952": {
      "op": "DUP3"
    },
    "1953": {
      "op": "DUP5"
    },
    "1954": {
      "op": "SUB"
    },
    "1955": {
      "op": "SLT"
    },
    "1956": {
      "op": "ISZERO"
    },
    "1957": {
      "op": "PUSH2",
      "value": "0x7AD"
    },
    "1960": {
      "op": "JUMPI"
    },
    "1961": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1963": {
      "op": "DUP1"
    },
    "1964": {
      "op": "REVERT"
    },
    "1965": {
      "op": "JUMPDEST"
    },
    "1966": {
      "op": "PUSH2",
      "value": "0x7B6"
    },
    "1969": {
      "op": "DUP3"
    },
    "1970": {
      "op": "PUSH2",
      "value": "0x719"
    },
    "1973": {
      "jump": "i",
      "op": "JUMP"
    },
    "1974": {
      "op": "JUMPDEST"
    },
    "1975": {
      "op": "SWAP4"
    },
    "1976": {
      "op": "SWAP3"
    },
    "1977": {
      "op": "POP"
    },
    "1978": {
      "op": "POP"
    },
    "1979": {
      "op": "POP"
    },
    "1980": {
      "jump": "o",
      "op": "JUMP"
    },
    "1981": {
      "op": "JUMPDEST"
    },
    "1982": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1984": {
      "op": "DUP1"
    },
    "1985": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1987": {
      "op": "DUP4"
    },
    "1988": {
      "op": "DUP6"
    },
    "1989": {
      "op": "SUB"
    },
    "1990": {
      "op": "SLT"
    },
    "1991": {
      "op": "ISZERO"
    },
    "1992": {
      "op": "PUSH2",
      "value": "0x7D0"
    },
    "1995": {
      "op": "JUMPI"
    },
    "1996": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1998": {
      "op": "DUP1"
    },
    "1999": {
      "op": "REVERT"
    },
    "2000": {
      "op": "JUMPDEST"
    },
    "2001": {
      "op": "PUSH2",
      "value": "0x7D9"
    },
    "2004": {
      "op": "DUP4"
    },
    "2005": {
      "op": "PUSH2",
      "value": "0x719"
    },
    "2008": {
      "jump": "i",
      "op": "JUMP"
    },
    "2009": {
      "op": "JUMPDEST"
    },
    "2010": {
      "op": "SWAP2"
    },
    "2011": {
      "op": "POP"
    },
    "2012": {
      "op": "PUSH2",
      "value": "0x7E7"
    },
    "2015": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2017": {
      "op": "DUP5"
    },
    "2018": {
      "op": "ADD"
    },
    "2019": {
      "op": "PUSH2",
      "value": "0x719"
    },
    "2022": {
      "jump": "i",
      "op": "JUMP"
    },
    "2023": {
      "op": "JUMPDEST"
    },
    "2024": {
      "op": "SWAP1"
    },
    "2025": {
      "op": "POP"
    },
    "2026": {
      "op": "SWAP3"
    },
    "2027": {
      "op": "POP"
    },
    "2028": {
      "op": "SWAP3"
    },
    "2029": {
      "op": "SWAP1"
    },
    "2030": {
      "op": "POP"
    },
    "2031": {
      "jump": "o",
      "op": "JUMP"
    },
    "2032": {
      "op": "JUMPDEST"
    },
    "2033": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2035": {
      "op": "DUP2"
    },
    "2036": {
      "op": "DUP2"
    },
    "2037": {
      "op": "SHR"
    },
    "2038": {
      "op": "SWAP1"
    },
    "2039": {
      "op": "DUP3"
    },
    "2040": {
      "op": "AND"
    },
    "2041": {
      "op": "DUP1"
    },
    "2042": {
      "op": "PUSH2",
      "value": "0x804"
    },
    "2045": {
      "op": "JUMPI"
    },
    "2046": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "2048": {
      "op": "DUP3"
    },
    "2049": {
      "op": "AND"
    },
    "2050": {
      "op": "SWAP2"
    },
    "2051": {
      "op": "POP"
    },
    "2052": {
      "op": "JUMPDEST"
    },
    "2053": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2055": {
      "op": "DUP3"
    },
    "2056": {
      "op": "LT"
    },
    "2057": {
      "op": "DUP2"
    },
    "2058": {
      "op": "EQ"
    },
    "2059": {
      "op": "ISZERO"
    },
    "2060": {
      "op": "PUSH2",
      "value": "0x825"
    },
    "2063": {
      "op": "JUMPI"
    },
    "2064": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2069": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2071": {
      "op": "SHL"
    },
    "2072": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2074": {
      "op": "MSTORE"
    },
    "2075": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "2077": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2079": {
      "op": "MSTORE"
    },
    "2080": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2082": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2084": {
      "op": "REVERT"
    },
    "2085": {
      "op": "JUMPDEST"
    },
    "2086": {
      "op": "POP"
    },
    "2087": {
      "op": "SWAP2"
    },
    "2088": {
      "op": "SWAP1"
    },
    "2089": {
      "op": "POP"
    },
    "2090": {
      "jump": "o",
      "op": "JUMP"
    },
    "2091": {
      "op": "JUMPDEST"
    },
    "2092": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2094": {
      "op": "DUP3"
    },
    "2095": {
      "op": "NOT"
    },
    "2096": {
      "op": "DUP3"
    },
    "2097": {
      "op": "GT"
    },
    "2098": {
      "op": "ISZERO"
    },
    "2099": {
      "op": "PUSH2",
      "value": "0x84C"
    },
    "2102": {
      "op": "JUMPI"
    },
    "2103": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2108": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2110": {
      "op": "SHL"
    },
    "2111": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2113": {
      "op": "MSTORE"
    },
    "2114": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "2116": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2118": {
      "op": "MSTORE"
    },
    "2119": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2121": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2123": {
      "op": "REVERT"
    },
    "2124": {
      "op": "JUMPDEST"
    },
    "2125": {
      "op": "POP"
    },
    "2126": {
      "op": "ADD"
    },
    "2127": {
      "op": "SWAP1"
    },
    "2128": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "8fb1bdb075fa0d714aa4daea6622a1802353d820",
  "source": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC20Upgradeable.sol\";\nimport \"./extensions/IERC20MetadataUpgradeable.sol\";\nimport \"../../utils/ContextUpgradeable.sol\";\nimport \"../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20Upgradeable is Initializable, ContextUpgradeable, IERC20Upgradeable, IERC20MetadataUpgradeable {\n    mapping(address => uint256) private _balances;\n\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * The default value of {decimals} is 18. To select a different value for\n     * {decimals} you should overload it.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    function __ERC20_init(string memory name_, string memory symbol_) internal onlyInitializing {\n        __ERC20_init_unchained(name_, symbol_);\n    }\n\n    function __ERC20_init_unchained(string memory name_, string memory symbol_) internal onlyInitializing {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\n     * overridden;\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual override returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) public virtual override returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, amount);\n        _transfer(from, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        uint256 currentAllowance = allowance(owner, spender);\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\n        unchecked {\n            _approve(owner, spender, currentAllowance - subtractedValue);\n        }\n\n        return true;\n    }\n\n    /**\n     * @dev Moves `amount` of tokens from `sender` to `recipient`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     */\n    function _transfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {\n        require(from != address(0), \"ERC20: transfer from the zero address\");\n        require(to != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, amount);\n\n        uint256 fromBalance = _balances[from];\n        require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\");\n        unchecked {\n            _balances[from] = fromBalance - amount;\n        }\n        _balances[to] += amount;\n\n        emit Transfer(from, to, amount);\n\n        _afterTokenTransfer(from, to, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply += amount;\n        _balances[account] += amount;\n        emit Transfer(address(0), account, amount);\n\n        _afterTokenTransfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        uint256 accountBalance = _balances[account];\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\n        unchecked {\n            _balances[account] = accountBalance - amount;\n        }\n        _totalSupply -= amount;\n\n        emit Transfer(account, address(0), amount);\n\n        _afterTokenTransfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n     *\n     * Does not update the allowance amount in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Might emit an {Approval} event.\n     */\n    function _spendAllowance(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            require(currentAllowance >= amount, \"ERC20: insufficient allowance\");\n            unchecked {\n                _approve(owner, spender, currentAllowance - amount);\n            }\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * has been transferred to `to`.\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[45] private __gap;\n}\n",
  "sourceMap": "1517:12131:14:-:0;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol",
  "type": "contract"
}