{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name_",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol_",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "22": "openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
    "23": "openzeppelin-solidity/contracts/token/ERC20/IERC20.sol",
    "25": "openzeppelin-solidity/contracts/token/ERC20/extensions/IERC20Metadata.sol",
    "34": "openzeppelin-solidity/contracts/utils/Context.sol"
  },
  "ast": {
    "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
    "exportedSymbols": {
      "Context": [
        8905
      ],
      "ERC20": [
        8317
      ],
      "IERC20": [
        3759
      ],
      "IERC20Metadata": [
        9146
      ]
    },
    "id": 8318,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 7812,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "35:23:22"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/IERC20.sol",
        "file": "./IERC20.sol",
        "id": 7813,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8318,
        "sourceUnit": 3760,
        "src": "62:22:22",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/extensions/IERC20Metadata.sol",
        "file": "./extensions/IERC20Metadata.sol",
        "id": 7814,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8318,
        "sourceUnit": 9147,
        "src": "86:41:22",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/utils/Context.sol",
        "file": "../../utils/Context.sol",
        "id": 7815,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8318,
        "sourceUnit": 8906,
        "src": "129:33:22",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 7817,
              "name": "Context",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 8905,
              "src": "1371:7:22"
            },
            "id": 7818,
            "nodeType": "InheritanceSpecifier",
            "src": "1371:7:22"
          },
          {
            "baseName": {
              "id": 7819,
              "name": "IERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3759,
              "src": "1380:6:22"
            },
            "id": 7820,
            "nodeType": "InheritanceSpecifier",
            "src": "1380:6:22"
          },
          {
            "baseName": {
              "id": 7821,
              "name": "IERC20Metadata",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 9146,
              "src": "1388:14:22"
            },
            "id": 7822,
            "nodeType": "InheritanceSpecifier",
            "src": "1388:14:22"
          }
        ],
        "canonicalName": "ERC20",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 7816,
          "nodeType": "StructuredDocumentation",
          "src": "166:1185:22",
          "text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n We have followed general OpenZeppelin guidelines: functions revert instead\n of returning `false` on failure. This behavior is nonetheless conventional\n and does not conflict with the expectations of ERC20 applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."
        },
        "fullyImplemented": true,
        "id": 8317,
        "linearizedBaseContracts": [
          8317,
          9146,
          3759,
          8905
        ],
        "name": "ERC20",
        "nameLocation": "1362:5:22",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 7826,
            "mutability": "mutable",
            "name": "_balances",
            "nameLocation": "1447:9:22",
            "nodeType": "VariableDeclaration",
            "scope": 8317,
            "src": "1410:46:22",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 7825,
              "keyType": {
                "id": 7823,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1419:7:22",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1410:28:22",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 7824,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1430:7:22",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 7832,
            "mutability": "mutable",
            "name": "_allowances",
            "nameLocation": "1523:11:22",
            "nodeType": "VariableDeclaration",
            "scope": 8317,
            "src": "1465:69:22",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
              "typeString": "mapping(address => mapping(address => uint256))"
            },
            "typeName": {
              "id": 7831,
              "keyType": {
                "id": 7827,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1474:7:22",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1465:49:22",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                "typeString": "mapping(address => mapping(address => uint256))"
              },
              "valueType": {
                "id": 7830,
                "keyType": {
                  "id": 7828,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1494:7:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "1485:28:22",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                  "typeString": "mapping(address => uint256)"
                },
                "valueType": {
                  "id": 7829,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1505:7:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 7834,
            "mutability": "mutable",
            "name": "_totalSupply",
            "nameLocation": "1559:12:22",
            "nodeType": "VariableDeclaration",
            "scope": 8317,
            "src": "1543:28:22",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 7833,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1543:7:22",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 7836,
            "mutability": "mutable",
            "name": "_name",
            "nameLocation": "1595:5:22",
            "nodeType": "VariableDeclaration",
            "scope": 8317,
            "src": "1580:20:22",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 7835,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1580:6:22",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 7838,
            "mutability": "mutable",
            "name": "_symbol",
            "nameLocation": "1622:7:22",
            "nodeType": "VariableDeclaration",
            "scope": 8317,
            "src": "1607:22:22",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 7837,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1607:6:22",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 7854,
              "nodeType": "Block",
              "src": "2006:60:22",
              "statements": [
                {
                  "expression": {
                    "id": 7848,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 7846,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7836,
                      "src": "2017:5:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 7847,
                      "name": "name_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7841,
                      "src": "2025:5:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "2017:13:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 7849,
                  "nodeType": "ExpressionStatement",
                  "src": "2017:13:22"
                },
                {
                  "expression": {
                    "id": 7852,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 7850,
                      "name": "_symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7838,
                      "src": "2041:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 7851,
                      "name": "symbol_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7843,
                      "src": "2051:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "2041:17:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 7853,
                  "nodeType": "ExpressionStatement",
                  "src": "2041:17:22"
                }
              ]
            },
            "documentation": {
              "id": 7839,
              "nodeType": "StructuredDocumentation",
              "src": "1638:305:22",
              "text": " @dev Sets the values for {name} and {symbol}.\n The defaut value of {decimals} is 18. To select a different value for\n {decimals} you should overload it.\n All two of these values are immutable: they can only be set once during\n construction."
            },
            "id": 7855,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7844,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7841,
                  "mutability": "mutable",
                  "name": "name_",
                  "nameLocation": "1976:5:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 7855,
                  "src": "1962:19:22",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 7840,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1962:6:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7843,
                  "mutability": "mutable",
                  "name": "symbol_",
                  "nameLocation": "1997:7:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 7855,
                  "src": "1983:21:22",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 7842,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1983:6:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1961:44:22"
            },
            "returnParameters": {
              "id": 7845,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2006:0:22"
            },
            "scope": 8317,
            "src": "1949:117:22",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              9133
            ],
            "body": {
              "id": 7864,
              "nodeType": "Block",
              "src": "2205:31:22",
              "statements": [
                {
                  "expression": {
                    "id": 7862,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 7836,
                    "src": "2223:5:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 7861,
                  "id": 7863,
                  "nodeType": "Return",
                  "src": "2216:12:22"
                }
              ]
            },
            "documentation": {
              "id": 7856,
              "nodeType": "StructuredDocumentation",
              "src": "2074:56:22",
              "text": " @dev Returns the name of the token."
            },
            "functionSelector": "06fdde03",
            "id": 7865,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "name",
            "nameLocation": "2145:4:22",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 7858,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2172:8:22"
            },
            "parameters": {
              "id": 7857,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2149:2:22"
            },
            "returnParameters": {
              "id": 7861,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7860,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7865,
                  "src": "2190:13:22",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 7859,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2190:6:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2189:15:22"
            },
            "scope": 8317,
            "src": "2136:100:22",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              9139
            ],
            "body": {
              "id": 7874,
              "nodeType": "Block",
              "src": "2426:33:22",
              "statements": [
                {
                  "expression": {
                    "id": 7872,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 7838,
                    "src": "2444:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 7871,
                  "id": 7873,
                  "nodeType": "Return",
                  "src": "2437:14:22"
                }
              ]
            },
            "documentation": {
              "id": 7866,
              "nodeType": "StructuredDocumentation",
              "src": "2244:105:22",
              "text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
            },
            "functionSelector": "95d89b41",
            "id": 7875,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "symbol",
            "nameLocation": "2364:6:22",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 7868,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2393:8:22"
            },
            "parameters": {
              "id": 7867,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2370:2:22"
            },
            "returnParameters": {
              "id": 7871,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7870,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7875,
                  "src": "2411:13:22",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 7869,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2411:6:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2410:15:22"
            },
            "scope": 8317,
            "src": "2355:104:22",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              9145
            ],
            "body": {
              "id": 7884,
              "nodeType": "Block",
              "src": "3163:28:22",
              "statements": [
                {
                  "expression": {
                    "hexValue": "3138",
                    "id": 7882,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3181:2:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_18_by_1",
                      "typeString": "int_const 18"
                    },
                    "value": "18"
                  },
                  "functionReturnParameters": 7881,
                  "id": 7883,
                  "nodeType": "Return",
                  "src": "3174:9:22"
                }
              ]
            },
            "documentation": {
              "id": 7876,
              "nodeType": "StructuredDocumentation",
              "src": "2467:625:22",
              "text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5,05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless this function is\n overridden;\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
            },
            "functionSelector": "313ce567",
            "id": 7885,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "decimals",
            "nameLocation": "3107:8:22",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 7878,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3138:8:22"
            },
            "parameters": {
              "id": 7877,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3115:2:22"
            },
            "returnParameters": {
              "id": 7881,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7880,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7885,
                  "src": "3156:5:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 7879,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "3156:5:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3155:7:22"
            },
            "scope": 8317,
            "src": "3098:93:22",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              3690
            ],
            "body": {
              "id": 7894,
              "nodeType": "Block",
              "src": "3326:38:22",
              "statements": [
                {
                  "expression": {
                    "id": 7892,
                    "name": "_totalSupply",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 7834,
                    "src": "3344:12:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 7891,
                  "id": 7893,
                  "nodeType": "Return",
                  "src": "3337:19:22"
                }
              ]
            },
            "documentation": {
              "id": 7886,
              "nodeType": "StructuredDocumentation",
              "src": "3199:51:22",
              "text": " @dev See {IERC20-totalSupply}."
            },
            "functionSelector": "18160ddd",
            "id": 7895,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "totalSupply",
            "nameLocation": "3265:11:22",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 7888,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3299:8:22"
            },
            "parameters": {
              "id": 7887,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3276:2:22"
            },
            "returnParameters": {
              "id": 7891,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7890,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7895,
                  "src": "3317:7:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7889,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3317:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3316:9:22"
            },
            "scope": 8317,
            "src": "3256:108:22",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              3698
            ],
            "body": {
              "id": 7908,
              "nodeType": "Block",
              "src": "3510:44:22",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 7904,
                      "name": "_balances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7826,
                      "src": "3528:9:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 7906,
                    "indexExpression": {
                      "id": 7905,
                      "name": "account",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7898,
                      "src": "3538:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3528:18:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 7903,
                  "id": 7907,
                  "nodeType": "Return",
                  "src": "3521:25:22"
                }
              ]
            },
            "documentation": {
              "id": 7896,
              "nodeType": "StructuredDocumentation",
              "src": "3372:49:22",
              "text": " @dev See {IERC20-balanceOf}."
            },
            "functionSelector": "70a08231",
            "id": 7909,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nameLocation": "3436:9:22",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 7900,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3483:8:22"
            },
            "parameters": {
              "id": 7899,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7898,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "3454:7:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 7909,
                  "src": "3446:15:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7897,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3446:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3445:17:22"
            },
            "returnParameters": {
              "id": 7903,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7902,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7909,
                  "src": "3501:7:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7901,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3501:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3500:9:22"
            },
            "scope": 8317,
            "src": "3427:127:22",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              3708
            ],
            "body": {
              "id": 7929,
              "nodeType": "Block",
              "src": "3859:83:22",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 7921,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8893,
                          "src": "3880:10:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 7922,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3880:12:22",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 7923,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7912,
                        "src": "3894:9:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 7924,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7914,
                        "src": "3905:6:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 7920,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8151,
                      "src": "3870:9:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 7925,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3870:42:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7926,
                  "nodeType": "ExpressionStatement",
                  "src": "3870:42:22"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 7927,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3930:4:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 7919,
                  "id": 7928,
                  "nodeType": "Return",
                  "src": "3923:11:22"
                }
              ]
            },
            "documentation": {
              "id": 7910,
              "nodeType": "StructuredDocumentation",
              "src": "3562:199:22",
              "text": " @dev See {IERC20-transfer}.\n Requirements:\n - `recipient` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
            },
            "functionSelector": "a9059cbb",
            "id": 7930,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transfer",
            "nameLocation": "3776:8:22",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 7916,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3835:8:22"
            },
            "parameters": {
              "id": 7915,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7912,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "3793:9:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 7930,
                  "src": "3785:17:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7911,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3785:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7914,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "3812:6:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 7930,
                  "src": "3804:14:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7913,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3804:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3784:35:22"
            },
            "returnParameters": {
              "id": 7919,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7918,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7930,
                  "src": "3853:4:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 7917,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3853:4:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3852:6:22"
            },
            "scope": 8317,
            "src": "3767:175:22",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              3718
            ],
            "body": {
              "id": 7947,
              "nodeType": "Block",
              "src": "4103:53:22",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 7941,
                        "name": "_allowances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7832,
                        "src": "4121:11:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                          "typeString": "mapping(address => mapping(address => uint256))"
                        }
                      },
                      "id": 7943,
                      "indexExpression": {
                        "id": 7942,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7933,
                        "src": "4133:5:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "4121:18:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 7945,
                    "indexExpression": {
                      "id": 7944,
                      "name": "spender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7935,
                      "src": "4140:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4121:27:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 7940,
                  "id": 7946,
                  "nodeType": "Return",
                  "src": "4114:34:22"
                }
              ]
            },
            "documentation": {
              "id": 7931,
              "nodeType": "StructuredDocumentation",
              "src": "3950:49:22",
              "text": " @dev See {IERC20-allowance}."
            },
            "functionSelector": "dd62ed3e",
            "id": 7948,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "allowance",
            "nameLocation": "4014:9:22",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 7937,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4076:8:22"
            },
            "parameters": {
              "id": 7936,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7933,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "4032:5:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 7948,
                  "src": "4024:13:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7932,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4024:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7935,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "4047:7:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 7948,
                  "src": "4039:15:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7934,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4039:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4023:32:22"
            },
            "returnParameters": {
              "id": 7940,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7939,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7948,
                  "src": "4094:7:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7938,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4094:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4093:9:22"
            },
            "scope": 8317,
            "src": "4005:151:22",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              3728
            ],
            "body": {
              "id": 7968,
              "nodeType": "Block",
              "src": "4392:80:22",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 7960,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8893,
                          "src": "4412:10:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 7961,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4412:12:22",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 7962,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7951,
                        "src": "4426:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 7963,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7953,
                        "src": "4435:6:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 7959,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8305,
                      "src": "4403:8:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 7964,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4403:39:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7965,
                  "nodeType": "ExpressionStatement",
                  "src": "4403:39:22"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 7966,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4460:4:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 7958,
                  "id": 7967,
                  "nodeType": "Return",
                  "src": "4453:11:22"
                }
              ]
            },
            "documentation": {
              "id": 7949,
              "nodeType": "StructuredDocumentation",
              "src": "4164:133:22",
              "text": " @dev See {IERC20-approve}.\n Requirements:\n - `spender` cannot be the zero address."
            },
            "functionSelector": "095ea7b3",
            "id": 7969,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "approve",
            "nameLocation": "4312:7:22",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 7955,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4368:8:22"
            },
            "parameters": {
              "id": 7954,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7951,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "4328:7:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 7969,
                  "src": "4320:15:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7950,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4320:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7953,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "4345:6:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 7969,
                  "src": "4337:14:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7952,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4337:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4319:33:22"
            },
            "returnParameters": {
              "id": 7958,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7957,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7969,
                  "src": "4386:4:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 7956,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4386:4:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4385:6:22"
            },
            "scope": 8317,
            "src": "4303:169:22",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              3740
            ],
            "body": {
              "id": 8015,
              "nodeType": "Block",
              "src": "5066:310:22",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 7983,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7972,
                        "src": "5087:6:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 7984,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7974,
                        "src": "5095:9:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 7985,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7976,
                        "src": "5106:6:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 7982,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8151,
                      "src": "5077:9:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 7986,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5077:36:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7987,
                  "nodeType": "ExpressionStatement",
                  "src": "5077:36:22"
                },
                {
                  "assignments": [
                    7989
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7989,
                      "mutability": "mutable",
                      "name": "currentAllowance",
                      "nameLocation": "5134:16:22",
                      "nodeType": "VariableDeclaration",
                      "scope": 8015,
                      "src": "5126:24:22",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 7988,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5126:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7996,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 7990,
                        "name": "_allowances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7832,
                        "src": "5153:11:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                          "typeString": "mapping(address => mapping(address => uint256))"
                        }
                      },
                      "id": 7992,
                      "indexExpression": {
                        "id": 7991,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7972,
                        "src": "5165:6:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "5153:19:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 7995,
                    "indexExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 7993,
                        "name": "_msgSender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8893,
                        "src": "5173:10:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 7994,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5173:12:22",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5153:33:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5126:60:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 8000,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 7998,
                          "name": "currentAllowance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7989,
                          "src": "5205:16:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 7999,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7976,
                          "src": "5225:6:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5205:26:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
                        "id": 8001,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5233:42:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
                          "typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
                        },
                        "value": "ERC20: transfer amount exceeds allowance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
                          "typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
                        }
                      ],
                      "id": 7997,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5197:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8002,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5197:79:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8003,
                  "nodeType": "ExpressionStatement",
                  "src": "5197:79:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 8005,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7972,
                        "src": "5296:6:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 8006,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8893,
                          "src": "5304:10:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 8007,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5304:12:22",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 8010,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 8008,
                          "name": "currentAllowance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7989,
                          "src": "5318:16:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "id": 8009,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7976,
                          "src": "5337:6:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5318:25:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 8004,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8305,
                      "src": "5287:8:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 8011,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5287:57:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8012,
                  "nodeType": "ExpressionStatement",
                  "src": "5287:57:22"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 8013,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5364:4:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 7981,
                  "id": 8014,
                  "nodeType": "Return",
                  "src": "5357:11:22"
                }
              ]
            },
            "documentation": {
              "id": 7970,
              "nodeType": "StructuredDocumentation",
              "src": "4480:468:22",
              "text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n Requirements:\n - `sender` and `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`.\n - the caller must have allowance for ``sender``'s tokens of at least\n `amount`."
            },
            "functionSelector": "23b872dd",
            "id": 8016,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nameLocation": "4963:12:22",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 7978,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5042:8:22"
            },
            "parameters": {
              "id": 7977,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7972,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "4984:6:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 8016,
                  "src": "4976:14:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7971,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4976:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7974,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "5000:9:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 8016,
                  "src": "4992:17:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7973,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4992:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7976,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "5019:6:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 8016,
                  "src": "5011:14:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7975,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5011:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4975:51:22"
            },
            "returnParameters": {
              "id": 7981,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7980,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8016,
                  "src": "5060:4:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 7979,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5060:4:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5059:6:22"
            },
            "scope": 8317,
            "src": "4954:422:22",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 8042,
              "nodeType": "Block",
              "src": "5879:121:22",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 8027,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8893,
                          "src": "5899:10:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 8028,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5899:12:22",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8029,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8019,
                        "src": "5913:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 8037,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 8030,
                              "name": "_allowances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7832,
                              "src": "5922:11:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                "typeString": "mapping(address => mapping(address => uint256))"
                              }
                            },
                            "id": 8033,
                            "indexExpression": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 8031,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8893,
                                "src": "5934:10:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 8032,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5934:12:22",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5922:25:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 8035,
                          "indexExpression": {
                            "id": 8034,
                            "name": "spender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8019,
                            "src": "5948:7:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5922:34:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "id": 8036,
                          "name": "addedValue",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8021,
                          "src": "5959:10:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5922:47:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 8026,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8305,
                      "src": "5890:8:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 8038,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5890:80:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8039,
                  "nodeType": "ExpressionStatement",
                  "src": "5890:80:22"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 8040,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5988:4:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 8025,
                  "id": 8041,
                  "nodeType": "Return",
                  "src": "5981:11:22"
                }
              ]
            },
            "documentation": {
              "id": 8017,
              "nodeType": "StructuredDocumentation",
              "src": "5384:395:22",
              "text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
            },
            "functionSelector": "39509351",
            "id": 8043,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "increaseAllowance",
            "nameLocation": "5794:17:22",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8022,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8019,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "5820:7:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 8043,
                  "src": "5812:15:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8018,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5812:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8021,
                  "mutability": "mutable",
                  "name": "addedValue",
                  "nameLocation": "5837:10:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 8043,
                  "src": "5829:18:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8020,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5829:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5811:37:22"
            },
            "returnParameters": {
              "id": 8025,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8024,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8043,
                  "src": "5873:4:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 8023,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5873:4:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5872:6:22"
            },
            "scope": 8317,
            "src": "5785:215:22",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 8080,
              "nodeType": "Block",
              "src": "6602:278:22",
              "statements": [
                {
                  "assignments": [
                    8054
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8054,
                      "mutability": "mutable",
                      "name": "currentAllowance",
                      "nameLocation": "6621:16:22",
                      "nodeType": "VariableDeclaration",
                      "scope": 8080,
                      "src": "6613:24:22",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 8053,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6613:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 8061,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 8055,
                        "name": "_allowances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7832,
                        "src": "6640:11:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                          "typeString": "mapping(address => mapping(address => uint256))"
                        }
                      },
                      "id": 8058,
                      "indexExpression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 8056,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8893,
                          "src": "6652:10:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 8057,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6652:12:22",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "6640:25:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 8060,
                    "indexExpression": {
                      "id": 8059,
                      "name": "spender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8046,
                      "src": "6666:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6640:34:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6613:61:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 8065,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 8063,
                          "name": "currentAllowance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8054,
                          "src": "6693:16:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 8064,
                          "name": "subtractedValue",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8048,
                          "src": "6713:15:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6693:35:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
                        "id": 8066,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6730:39:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
                          "typeString": "literal_string \"ERC20: decreased allowance below zero\""
                        },
                        "value": "ERC20: decreased allowance below zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
                          "typeString": "literal_string \"ERC20: decreased allowance below zero\""
                        }
                      ],
                      "id": 8062,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6685:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8067,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6685:85:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8068,
                  "nodeType": "ExpressionStatement",
                  "src": "6685:85:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 8070,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8893,
                          "src": "6790:10:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 8071,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6790:12:22",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8072,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8046,
                        "src": "6804:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 8075,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 8073,
                          "name": "currentAllowance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8054,
                          "src": "6813:16:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "id": 8074,
                          "name": "subtractedValue",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8048,
                          "src": "6832:15:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6813:34:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 8069,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8305,
                      "src": "6781:8:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 8076,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6781:67:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8077,
                  "nodeType": "ExpressionStatement",
                  "src": "6781:67:22"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 8078,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "6868:4:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 8052,
                  "id": 8079,
                  "nodeType": "Return",
                  "src": "6861:11:22"
                }
              ]
            },
            "documentation": {
              "id": 8044,
              "nodeType": "StructuredDocumentation",
              "src": "6008:489:22",
              "text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
            },
            "functionSelector": "a457c2d7",
            "id": 8081,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "decreaseAllowance",
            "nameLocation": "6512:17:22",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8049,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8046,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "6538:7:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 8081,
                  "src": "6530:15:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8045,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6530:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8048,
                  "mutability": "mutable",
                  "name": "subtractedValue",
                  "nameLocation": "6555:15:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 8081,
                  "src": "6547:23:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8047,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6547:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6529:42:22"
            },
            "returnParameters": {
              "id": 8052,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8051,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8081,
                  "src": "6596:4:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 8050,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6596:4:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6595:6:22"
            },
            "scope": 8317,
            "src": "6503:377:22",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 8150,
              "nodeType": "Block",
              "src": "7457:517:22",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 8097,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 8092,
                          "name": "sender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8084,
                          "src": "7476:6:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 8095,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7494:1:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 8094,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7486:7:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 8093,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7486:7:22",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 8096,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7486:10:22",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "7476:20:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
                        "id": 8098,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7498:39:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
                          "typeString": "literal_string \"ERC20: transfer from the zero address\""
                        },
                        "value": "ERC20: transfer from the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
                          "typeString": "literal_string \"ERC20: transfer from the zero address\""
                        }
                      ],
                      "id": 8091,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7468:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8099,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7468:70:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8100,
                  "nodeType": "ExpressionStatement",
                  "src": "7468:70:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 8107,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 8102,
                          "name": "recipient",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8086,
                          "src": "7557:9:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 8105,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7578:1:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 8104,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7570:7:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 8103,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7570:7:22",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 8106,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7570:10:22",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "7557:23:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
                        "id": 8108,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7582:37:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
                          "typeString": "literal_string \"ERC20: transfer to the zero address\""
                        },
                        "value": "ERC20: transfer to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
                          "typeString": "literal_string \"ERC20: transfer to the zero address\""
                        }
                      ],
                      "id": 8101,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7549:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8109,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7549:71:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8110,
                  "nodeType": "ExpressionStatement",
                  "src": "7549:71:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 8112,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8084,
                        "src": "7654:6:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8113,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8086,
                        "src": "7662:9:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8114,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8088,
                        "src": "7673:6:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 8111,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8316,
                      "src": "7633:20:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 8115,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7633:47:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8116,
                  "nodeType": "ExpressionStatement",
                  "src": "7633:47:22"
                },
                {
                  "assignments": [
                    8118
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8118,
                      "mutability": "mutable",
                      "name": "senderBalance",
                      "nameLocation": "7701:13:22",
                      "nodeType": "VariableDeclaration",
                      "scope": 8150,
                      "src": "7693:21:22",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 8117,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7693:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 8122,
                  "initialValue": {
                    "baseExpression": {
                      "id": 8119,
                      "name": "_balances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7826,
                      "src": "7717:9:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 8121,
                    "indexExpression": {
                      "id": 8120,
                      "name": "sender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8084,
                      "src": "7727:6:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "7717:17:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7693:41:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 8126,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 8124,
                          "name": "senderBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8118,
                          "src": "7753:13:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 8125,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8088,
                          "src": "7770:6:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7753:23:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
                        "id": 8127,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7778:40:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
                          "typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
                        },
                        "value": "ERC20: transfer amount exceeds balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
                          "typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
                        }
                      ],
                      "id": 8123,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7745:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8128,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7745:74:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8129,
                  "nodeType": "ExpressionStatement",
                  "src": "7745:74:22"
                },
                {
                  "expression": {
                    "id": 8136,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 8130,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7826,
                        "src": "7830:9:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 8132,
                      "indexExpression": {
                        "id": 8131,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8084,
                        "src": "7840:6:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "7830:17:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 8135,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 8133,
                        "name": "senderBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8118,
                        "src": "7850:13:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "id": 8134,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8088,
                        "src": "7866:6:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "7850:22:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7830:42:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 8137,
                  "nodeType": "ExpressionStatement",
                  "src": "7830:42:22"
                },
                {
                  "expression": {
                    "id": 8142,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 8138,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7826,
                        "src": "7883:9:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 8140,
                      "indexExpression": {
                        "id": 8139,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8086,
                        "src": "7893:9:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "7883:20:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 8141,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8088,
                      "src": "7907:6:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7883:30:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 8143,
                  "nodeType": "ExpressionStatement",
                  "src": "7883:30:22"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 8145,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8084,
                        "src": "7940:6:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8146,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8086,
                        "src": "7948:9:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8147,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8088,
                        "src": "7959:6:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 8144,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3749,
                      "src": "7931:8:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 8148,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7931:35:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8149,
                  "nodeType": "EmitStatement",
                  "src": "7926:40:22"
                }
              ]
            },
            "documentation": {
              "id": 8082,
              "nodeType": "StructuredDocumentation",
              "src": "6888:476:22",
              "text": " @dev Moves tokens `amount` from `sender` to `recipient`.\n This is internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `sender` cannot be the zero address.\n - `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`."
            },
            "id": 8151,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_transfer",
            "nameLocation": "7379:9:22",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8089,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8084,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "7397:6:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 8151,
                  "src": "7389:14:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8083,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7389:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8086,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "7413:9:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 8151,
                  "src": "7405:17:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8085,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7405:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8088,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "7432:6:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 8151,
                  "src": "7424:14:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8087,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7424:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7388:51:22"
            },
            "returnParameters": {
              "id": 8090,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7457:0:22"
            },
            "scope": 8317,
            "src": "7370:604:22",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 8197,
              "nodeType": "Block",
              "src": "8321:273:22",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 8165,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 8160,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8154,
                          "src": "8340:7:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 8163,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8359:1:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 8162,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "8351:7:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 8161,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "8351:7:22",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 8164,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8351:10:22",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "8340:21:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
                        "id": 8166,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8363:33:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
                          "typeString": "literal_string \"ERC20: mint to the zero address\""
                        },
                        "value": "ERC20: mint to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
                          "typeString": "literal_string \"ERC20: mint to the zero address\""
                        }
                      ],
                      "id": 8159,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8332:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8167,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8332:65:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8168,
                  "nodeType": "ExpressionStatement",
                  "src": "8332:65:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 8172,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8439:1:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 8171,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8431:7:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 8170,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8431:7:22",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 8173,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8431:10:22",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8174,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8154,
                        "src": "8443:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8175,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8156,
                        "src": "8452:6:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 8169,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8316,
                      "src": "8410:20:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 8176,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8410:49:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8177,
                  "nodeType": "ExpressionStatement",
                  "src": "8410:49:22"
                },
                {
                  "expression": {
                    "id": 8180,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 8178,
                      "name": "_totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7834,
                      "src": "8472:12:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 8179,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8156,
                      "src": "8488:6:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8472:22:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 8181,
                  "nodeType": "ExpressionStatement",
                  "src": "8472:22:22"
                },
                {
                  "expression": {
                    "id": 8186,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 8182,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7826,
                        "src": "8505:9:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 8184,
                      "indexExpression": {
                        "id": 8183,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8154,
                        "src": "8515:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "8505:18:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 8185,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8156,
                      "src": "8527:6:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8505:28:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 8187,
                  "nodeType": "ExpressionStatement",
                  "src": "8505:28:22"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 8191,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8566:1:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 8190,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8558:7:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 8189,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8558:7:22",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 8192,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8558:10:22",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8193,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8154,
                        "src": "8570:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8194,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8156,
                        "src": "8579:6:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 8188,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3749,
                      "src": "8549:8:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 8195,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8549:37:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8196,
                  "nodeType": "EmitStatement",
                  "src": "8544:42:22"
                }
              ]
            },
            "documentation": {
              "id": 8152,
              "nodeType": "StructuredDocumentation",
              "src": "7982:268:22",
              "text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `to` cannot be the zero address."
            },
            "id": 8198,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_mint",
            "nameLocation": "8265:5:22",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8157,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8154,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "8279:7:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 8198,
                  "src": "8271:15:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8153,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8271:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8156,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "8296:6:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 8198,
                  "src": "8288:14:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8155,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8288:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8270:33:22"
            },
            "returnParameters": {
              "id": 8158,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8321:0:22"
            },
            "scope": 8317,
            "src": "8256:338:22",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 8259,
              "nodeType": "Block",
              "src": "8992:429:22",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 8212,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 8207,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8201,
                          "src": "9011:7:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 8210,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9030:1:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 8209,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "9022:7:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 8208,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "9022:7:22",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 8211,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9022:10:22",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "9011:21:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
                        "id": 8213,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9034:35:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
                          "typeString": "literal_string \"ERC20: burn from the zero address\""
                        },
                        "value": "ERC20: burn from the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
                          "typeString": "literal_string \"ERC20: burn from the zero address\""
                        }
                      ],
                      "id": 8206,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9003:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8214,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9003:67:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8215,
                  "nodeType": "ExpressionStatement",
                  "src": "9003:67:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 8217,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8201,
                        "src": "9104:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 8220,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9121:1:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 8219,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9113:7:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 8218,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9113:7:22",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 8221,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9113:10:22",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8222,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8203,
                        "src": "9125:6:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 8216,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8316,
                      "src": "9083:20:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 8223,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9083:49:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8224,
                  "nodeType": "ExpressionStatement",
                  "src": "9083:49:22"
                },
                {
                  "assignments": [
                    8226
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8226,
                      "mutability": "mutable",
                      "name": "accountBalance",
                      "nameLocation": "9153:14:22",
                      "nodeType": "VariableDeclaration",
                      "scope": 8259,
                      "src": "9145:22:22",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 8225,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9145:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 8230,
                  "initialValue": {
                    "baseExpression": {
                      "id": 8227,
                      "name": "_balances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7826,
                      "src": "9170:9:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 8229,
                    "indexExpression": {
                      "id": 8228,
                      "name": "account",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8201,
                      "src": "9180:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "9170:18:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9145:43:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 8234,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 8232,
                          "name": "accountBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8226,
                          "src": "9207:14:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 8233,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8203,
                          "src": "9225:6:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9207:24:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
                        "id": 8235,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9233:36:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
                          "typeString": "literal_string \"ERC20: burn amount exceeds balance\""
                        },
                        "value": "ERC20: burn amount exceeds balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
                          "typeString": "literal_string \"ERC20: burn amount exceeds balance\""
                        }
                      ],
                      "id": 8231,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9199:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8236,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9199:71:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8237,
                  "nodeType": "ExpressionStatement",
                  "src": "9199:71:22"
                },
                {
                  "expression": {
                    "id": 8244,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 8238,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7826,
                        "src": "9281:9:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 8240,
                      "indexExpression": {
                        "id": 8239,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8201,
                        "src": "9291:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "9281:18:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 8243,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 8241,
                        "name": "accountBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8226,
                        "src": "9302:14:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "id": 8242,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8203,
                        "src": "9319:6:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "9302:23:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9281:44:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 8245,
                  "nodeType": "ExpressionStatement",
                  "src": "9281:44:22"
                },
                {
                  "expression": {
                    "id": 8248,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 8246,
                      "name": "_totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7834,
                      "src": "9336:12:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 8247,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8203,
                      "src": "9352:6:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9336:22:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 8249,
                  "nodeType": "ExpressionStatement",
                  "src": "9336:22:22"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 8251,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8201,
                        "src": "9385:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 8254,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9402:1:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 8253,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9394:7:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 8252,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9394:7:22",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 8255,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9394:10:22",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8256,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8203,
                        "src": "9406:6:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 8250,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3749,
                      "src": "9376:8:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 8257,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9376:37:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8258,
                  "nodeType": "EmitStatement",
                  "src": "9371:42:22"
                }
              ]
            },
            "documentation": {
              "id": 8199,
              "nodeType": "StructuredDocumentation",
              "src": "8602:319:22",
              "text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
            },
            "id": 8260,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_burn",
            "nameLocation": "8936:5:22",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8204,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8201,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "8950:7:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 8260,
                  "src": "8942:15:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8200,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8942:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8203,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "8967:6:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 8260,
                  "src": "8959:14:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8202,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8959:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8941:33:22"
            },
            "returnParameters": {
              "id": 8205,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8992:0:22"
            },
            "scope": 8317,
            "src": "8927:494:22",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 8304,
              "nodeType": "Block",
              "src": "9942:263:22",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 8276,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 8271,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8263,
                          "src": "9961:5:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 8274,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9978:1:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 8273,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "9970:7:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 8272,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "9970:7:22",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 8275,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9970:10:22",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "9961:19:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
                        "id": 8277,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9982:38:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
                          "typeString": "literal_string \"ERC20: approve from the zero address\""
                        },
                        "value": "ERC20: approve from the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
                          "typeString": "literal_string \"ERC20: approve from the zero address\""
                        }
                      ],
                      "id": 8270,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9953:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8278,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9953:68:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8279,
                  "nodeType": "ExpressionStatement",
                  "src": "9953:68:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 8286,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 8281,
                          "name": "spender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8265,
                          "src": "10040:7:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 8284,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10059:1:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 8283,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "10051:7:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 8282,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "10051:7:22",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 8285,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10051:10:22",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "10040:21:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
                        "id": 8287,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10063:36:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
                          "typeString": "literal_string \"ERC20: approve to the zero address\""
                        },
                        "value": "ERC20: approve to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
                          "typeString": "literal_string \"ERC20: approve to the zero address\""
                        }
                      ],
                      "id": 8280,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10032:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8288,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10032:68:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8289,
                  "nodeType": "ExpressionStatement",
                  "src": "10032:68:22"
                },
                {
                  "expression": {
                    "id": 8296,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 8290,
                          "name": "_allowances",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7832,
                          "src": "10113:11:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(address => uint256))"
                          }
                        },
                        "id": 8293,
                        "indexExpression": {
                          "id": 8291,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8263,
                          "src": "10125:5:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "10113:18:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 8294,
                      "indexExpression": {
                        "id": 8292,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8265,
                        "src": "10132:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "10113:27:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 8295,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8267,
                      "src": "10143:6:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10113:36:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 8297,
                  "nodeType": "ExpressionStatement",
                  "src": "10113:36:22"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 8299,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8263,
                        "src": "10174:5:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8300,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8265,
                        "src": "10181:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8301,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8267,
                        "src": "10190:6:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 8298,
                      "name": "Approval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3758,
                      "src": "10165:8:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 8302,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10165:32:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8303,
                  "nodeType": "EmitStatement",
                  "src": "10160:37:22"
                }
              ]
            },
            "documentation": {
              "id": 8261,
              "nodeType": "StructuredDocumentation",
              "src": "9429:424:22",
              "text": " @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
            },
            "id": 8305,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_approve",
            "nameLocation": "9868:8:22",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8268,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8263,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "9885:5:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 8305,
                  "src": "9877:13:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8262,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9877:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8265,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "9900:7:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 8305,
                  "src": "9892:15:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8264,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9892:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8267,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "9917:6:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 8305,
                  "src": "9909:14:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8266,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9909:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9876:48:22"
            },
            "returnParameters": {
              "id": 8269,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9942:0:22"
            },
            "scope": 8317,
            "src": "9859:346:22",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 8315,
              "nodeType": "Block",
              "src": "10897:3:22",
              "statements": []
            },
            "documentation": {
              "id": 8306,
              "nodeType": "StructuredDocumentation",
              "src": "10213:589:22",
              "text": " @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be to transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
            },
            "id": 8316,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeTokenTransfer",
            "nameLocation": "10817:20:22",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8313,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8308,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "10846:4:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 8316,
                  "src": "10838:12:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8307,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10838:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8310,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "10860:2:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 8316,
                  "src": "10852:10:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8309,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10852:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8312,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "10872:6:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 8316,
                  "src": "10864:14:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8311,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10864:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10837:42:22"
            },
            "returnParameters": {
              "id": 8314,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10897:0:22"
            },
            "scope": 8317,
            "src": "10808:92:22",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "scope": 8318,
        "src": "1353:9550:22",
        "usedErrors": []
      }
    ],
    "src": "35:10870:22"
  },
  "bytecode": "60806040523480156200001157600080fd5b5060405162000b8238038062000b828339810160408190526200003491620001db565b81516200004990600390602085019062000068565b5080516200005f90600490602084019062000068565b50505062000282565b828054620000769062000245565b90600052602060002090601f0160209004810192826200009a5760008555620000e5565b82601f10620000b557805160ff1916838001178555620000e5565b82800160010185558215620000e5579182015b82811115620000e5578251825591602001919060010190620000c8565b50620000f3929150620000f7565b5090565b5b80821115620000f35760008155600101620000f8565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200013657600080fd5b81516001600160401b03808211156200015357620001536200010e565b604051601f8301601f19908116603f011681019082821181831017156200017e576200017e6200010e565b816040528381526020925086838588010111156200019b57600080fd5b600091505b83821015620001bf5785820183015181830184015290820190620001a0565b83821115620001d15760008385830101525b9695505050505050565b60008060408385031215620001ef57600080fd5b82516001600160401b03808211156200020757600080fd5b620002158683870162000124565b935060208501519150808211156200022c57600080fd5b506200023b8582860162000124565b9150509250929050565b600181811c908216806200025a57607f821691505b602082108114156200027c57634e487b7160e01b600052602260045260246000fd5b50919050565b6108f080620002926000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461012357806370a082311461013657806395d89b411461015f578063a457c2d714610167578063a9059cbb1461017a578063dd62ed3e1461018d57600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101c6565b6040516100c3919061070e565b60405180910390f35b6100df6100da36600461077f565b610258565b60405190151581526020016100c3565b6002545b6040519081526020016100c3565b6100df61010f3660046107a9565b61026e565b604051601281526020016100c3565b6100df61013136600461077f565b610324565b6100f36101443660046107e5565b6001600160a01b031660009081526020819052604090205490565b6100b661035b565b6100df61017536600461077f565b61036a565b6100df61018836600461077f565b610405565b6100f361019b366004610807565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6060600380546101d59061083a565b80601f01602080910402602001604051908101604052809291908181526020018280546102019061083a565b801561024e5780601f106102235761010080835404028352916020019161024e565b820191906000526020600020905b81548152906001019060200180831161023157829003601f168201915b5050505050905090565b6000610265338484610412565b50600192915050565b600061027b848484610536565b6001600160a01b0384166000908152600160209081526040808320338452909152902054828110156103055760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b6103198533610314868561088b565b610412565b506001949350505050565b3360008181526001602090815260408083206001600160a01b038716845290915281205490916102659185906103149086906108a2565b6060600480546101d59061083a565b3360009081526001602090815260408083206001600160a01b0386168452909152812054828110156103ec5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016102fc565b6103fb3385610314868561088b565b5060019392505050565b6000610265338484610536565b6001600160a01b0383166104745760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016102fc565b6001600160a01b0382166104d55760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016102fc565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b03831661059a5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016102fc565b6001600160a01b0382166105fc5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016102fc565b6001600160a01b038316600090815260208190526040902054818110156106745760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016102fc565b61067e828261088b565b6001600160a01b0380861660009081526020819052604080822093909355908516815290812080548492906106b49084906108a2565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161070091815260200190565b60405180910390a350505050565b600060208083528351808285015260005b8181101561073b5785810183015185820160400152820161071f565b8181111561074d576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461077a57600080fd5b919050565b6000806040838503121561079257600080fd5b61079b83610763565b946020939093013593505050565b6000806000606084860312156107be57600080fd5b6107c784610763565b92506107d560208501610763565b9150604084013590509250925092565b6000602082840312156107f757600080fd5b61080082610763565b9392505050565b6000806040838503121561081a57600080fd5b61082383610763565b915061083160208401610763565b90509250929050565b600181811c9082168061084e57607f821691505b6020821081141561086f57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b60008282101561089d5761089d610875565b500390565b600082198211156108b5576108b5610875565b50019056fea2646970667358221220afdb7960b4bf6eec1342f7b27fe602d3d8199750d73cd969aca7e3f9a792623464736f6c63430008090033",
  "bytecodeSha1": "232bd80ba89d0d5e45927ddcdb15ad97942b2df4",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 100
    },
    "version": "0.8.9+commit.e5eed63a"
  },
  "contractName": "ERC20",
  "coverageMap": {
    "branches": {
      "22": {
        "ERC20._approve": {
          "30": [
            9961,
            9980,
            true
          ],
          "31": [
            10040,
            10061,
            true
          ]
        },
        "ERC20._transfer": {
          "32": [
            7476,
            7496,
            true
          ],
          "33": [
            7557,
            7580,
            true
          ],
          "34": [
            7753,
            7776,
            true
          ]
        },
        "ERC20.decreaseAllowance": {
          "29": [
            6693,
            6728,
            true
          ]
        },
        "ERC20.transferFrom": {
          "28": [
            5205,
            5231,
            true
          ]
        }
      },
      "23": {},
      "25": {},
      "34": {}
    },
    "statements": {
      "22": {
        "ERC20._approve": {
          "18": [
            9953,
            10021
          ],
          "19": [
            10032,
            10100
          ],
          "20": [
            10113,
            10149
          ],
          "21": [
            10160,
            10197
          ]
        },
        "ERC20._transfer": {
          "22": [
            7468,
            7538
          ],
          "23": [
            7549,
            7620
          ],
          "24": [
            7745,
            7819
          ],
          "25": [
            7830,
            7872
          ],
          "26": [
            7883,
            7913
          ],
          "27": [
            7926,
            7966
          ]
        },
        "ERC20.allowance": {
          "3": [
            4114,
            4148
          ]
        },
        "ERC20.approve": {
          "5": [
            4403,
            4442
          ],
          "7": [
            4453,
            4464
          ]
        },
        "ERC20.balanceOf": {
          "2": [
            3521,
            3546
          ]
        },
        "ERC20.decimals": {
          "1": [
            3174,
            3183
          ]
        },
        "ERC20.decreaseAllowance": {
          "14": [
            6685,
            6770
          ],
          "15": [
            6781,
            6848
          ],
          "16": [
            6861,
            6872
          ]
        },
        "ERC20.increaseAllowance": {
          "12": [
            5890,
            5970
          ]
        },
        "ERC20.name": {
          "4": [
            2216,
            2228
          ]
        },
        "ERC20.symbol": {
          "13": [
            2437,
            2451
          ]
        },
        "ERC20.totalSupply": {
          "0": [
            3337,
            3356
          ]
        },
        "ERC20.transfer": {
          "17": [
            3870,
            3912
          ]
        },
        "ERC20.transferFrom": {
          "8": [
            5077,
            5113
          ],
          "9": [
            5197,
            5276
          ],
          "10": [
            5287,
            5344
          ],
          "11": [
            5357,
            5368
          ]
        }
      },
      "23": {},
      "25": {},
      "34": {
        "Context._msgSender": {
          "6": [
            674,
            691
          ]
        }
      }
    }
  },
  "dependencies": [
    "Context",
    "IERC20",
    "IERC20Metadata"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461012357806370a082311461013657806395d89b411461015f578063a457c2d714610167578063a9059cbb1461017a578063dd62ed3e1461018d57600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101c6565b6040516100c3919061070e565b60405180910390f35b6100df6100da36600461077f565b610258565b60405190151581526020016100c3565b6002545b6040519081526020016100c3565b6100df61010f3660046107a9565b61026e565b604051601281526020016100c3565b6100df61013136600461077f565b610324565b6100f36101443660046107e5565b6001600160a01b031660009081526020819052604090205490565b6100b661035b565b6100df61017536600461077f565b61036a565b6100df61018836600461077f565b610405565b6100f361019b366004610807565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6060600380546101d59061083a565b80601f01602080910402602001604051908101604052809291908181526020018280546102019061083a565b801561024e5780601f106102235761010080835404028352916020019161024e565b820191906000526020600020905b81548152906001019060200180831161023157829003601f168201915b5050505050905090565b6000610265338484610412565b50600192915050565b600061027b848484610536565b6001600160a01b0384166000908152600160209081526040808320338452909152902054828110156103055760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b6103198533610314868561088b565b610412565b506001949350505050565b3360008181526001602090815260408083206001600160a01b038716845290915281205490916102659185906103149086906108a2565b6060600480546101d59061083a565b3360009081526001602090815260408083206001600160a01b0386168452909152812054828110156103ec5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016102fc565b6103fb3385610314868561088b565b5060019392505050565b6000610265338484610536565b6001600160a01b0383166104745760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016102fc565b6001600160a01b0382166104d55760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016102fc565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b03831661059a5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016102fc565b6001600160a01b0382166105fc5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016102fc565b6001600160a01b038316600090815260208190526040902054818110156106745760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016102fc565b61067e828261088b565b6001600160a01b0380861660009081526020819052604080822093909355908516815290812080548492906106b49084906108a2565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161070091815260200190565b60405180910390a350505050565b600060208083528351808285015260005b8181101561073b5785810183015185820160400152820161071f565b8181111561074d576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461077a57600080fd5b919050565b6000806040838503121561079257600080fd5b61079b83610763565b946020939093013593505050565b6000806000606084860312156107be57600080fd5b6107c784610763565b92506107d560208501610763565b9150604084013590509250925092565b6000602082840312156107f757600080fd5b61080082610763565b9392505050565b6000806040838503121561081a57600080fd5b61082383610763565b915061083160208401610763565b90509250929050565b600181811c9082168061084e57607f821691505b6020821081141561086f57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b60008282101561089d5761089d610875565b500390565b600082198211156108b5576108b5610875565b50019056fea2646970667358221220afdb7960b4bf6eec1342f7b27fe602d3d8199750d73cd969aca7e3f9a792623464736f6c63430008090033",
  "deployedSourceMap": "1353:9550:22:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2136:100;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4303:169;;;;;;:::i;:::-;;:::i;:::-;;;1218:14:39;;1211:22;1193:41;;1181:2;1166:18;4303:169:22;1053:187:39;3256:108:22;3344:12;;3256:108;;;1391:25:39;;;1379:2;1364:18;3256:108:22;1245:177:39;4954:422:22;;;;;;:::i;:::-;;:::i;3098:93::-;;;3181:2;1902:36:39;;1890:2;1875:18;3098:93:22;1760:184:39;5785:215:22;;;;;;:::i;:::-;;:::i;3427:127::-;;;;;;:::i;:::-;-1:-1:-1;;;;;3528:18:22;3501:7;3528:18;;;;;;;;;;;;3427:127;2355:104;;;:::i;6503:377::-;;;;;;:::i;:::-;;:::i;3767:175::-;;;;;;:::i;:::-;;:::i;4005:151::-;;;;;;:::i;:::-;-1:-1:-1;;;;;4121:18:22;;;4094:7;4121:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;4005:151;2136:100;2190:13;2223:5;2216:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2136:100;:::o;4303:169::-;4386:4;4403:39;681:10:34;4426:7:22;4435:6;4403:8;:39::i;:::-;-1:-1:-1;4460:4:22;4303:169;;;;:::o;4954:422::-;5060:4;5077:36;5087:6;5095:9;5106:6;5077:9;:36::i;:::-;-1:-1:-1;;;;;5153:19:22;;5126:24;5153:19;;;:11;:19;;;;;;;;681:10:34;5153:33:22;;;;;;;;5205:26;;;;5197:79;;;;-1:-1:-1;;;5197:79:22;;2992:2:39;5197:79:22;;;2974:21:39;3031:2;3011:18;;;3004:30;3070:34;3050:18;;;3043:62;-1:-1:-1;;;3121:18:39;;;3114:38;3169:19;;5197:79:22;;;;;;;;;5287:57;5296:6;681:10:34;5318:25:22;5337:6;5318:16;:25;:::i;:::-;5287:8;:57::i;:::-;-1:-1:-1;5364:4:22;;4954:422;-1:-1:-1;;;;4954:422:22:o;5785:215::-;681:10:34;5873:4:22;5922:25;;;:11;:25;;;;;;;;-1:-1:-1;;;;;5922:34:22;;;;;;;;;;5873:4;;5890:80;;5913:7;;5922:47;;5959:10;;5922:47;:::i;2355:104::-;2411:13;2444:7;2437:14;;;;;:::i;6503:377::-;681:10:34;6596:4:22;6640:25;;;:11;:25;;;;;;;;-1:-1:-1;;;;;6640:34:22;;;;;;;;;;6693:35;;;;6685:85;;;;-1:-1:-1;;;6685:85:22;;3796:2:39;6685:85:22;;;3778:21:39;3835:2;3815:18;;;3808:30;3874:34;3854:18;;;3847:62;-1:-1:-1;;;3925:18:39;;;3918:35;3970:19;;6685:85:22;3594:401:39;6685:85:22;6781:67;681:10:34;6804:7:22;6813:34;6832:15;6813:16;:34;:::i;6781:67::-;-1:-1:-1;6868:4:22;;6503:377;-1:-1:-1;;;6503:377:22:o;3767:175::-;3853:4;3870:42;681:10:34;3894:9:22;3905:6;3870:9;:42::i;9859:346::-;-1:-1:-1;;;;;9961:19:22;;9953:68;;;;-1:-1:-1;;;9953:68:22;;4202:2:39;9953:68:22;;;4184:21:39;4241:2;4221:18;;;4214:30;4280:34;4260:18;;;4253:62;-1:-1:-1;;;4331:18:39;;;4324:34;4375:19;;9953:68:22;4000:400:39;9953:68:22;-1:-1:-1;;;;;10040:21:22;;10032:68;;;;-1:-1:-1;;;10032:68:22;;4607:2:39;10032:68:22;;;4589:21:39;4646:2;4626:18;;;4619:30;4685:34;4665:18;;;4658:62;-1:-1:-1;;;4736:18:39;;;4729:32;4778:19;;10032:68:22;4405:398:39;10032:68:22;-1:-1:-1;;;;;10113:18:22;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10165:32;;1391:25:39;;;10165:32:22;;1364:18:39;10165:32:22;;;;;;;9859:346;;;:::o;7370:604::-;-1:-1:-1;;;;;7476:20:22;;7468:70;;;;-1:-1:-1;;;7468:70:22;;5010:2:39;7468:70:22;;;4992:21:39;5049:2;5029:18;;;5022:30;5088:34;5068:18;;;5061:62;-1:-1:-1;;;5139:18:39;;;5132:35;5184:19;;7468:70:22;4808:401:39;7468:70:22;-1:-1:-1;;;;;7557:23:22;;7549:71;;;;-1:-1:-1;;;7549:71:22;;5416:2:39;7549:71:22;;;5398:21:39;5455:2;5435:18;;;5428:30;5494:34;5474:18;;;5467:62;-1:-1:-1;;;5545:18:39;;;5538:33;5588:19;;7549:71:22;5214:399:39;7549:71:22;-1:-1:-1;;;;;7717:17:22;;7693:21;7717:17;;;;;;;;;;;7753:23;;;;7745:74;;;;-1:-1:-1;;;7745:74:22;;5820:2:39;7745:74:22;;;5802:21:39;5859:2;5839:18;;;5832:30;5898:34;5878:18;;;5871:62;-1:-1:-1;;;5949:18:39;;;5942:36;5995:19;;7745:74:22;5618:402:39;7745:74:22;7850:22;7866:6;7850:13;:22;:::i;:::-;-1:-1:-1;;;;;7830:17:22;;;:9;:17;;;;;;;;;;;:42;;;;7883:20;;;;;;;;:30;;7907:6;;7830:9;7883:30;;7907:6;;7883:30;:::i;:::-;;;;;;;;7948:9;-1:-1:-1;;;;;7931:35:22;7940:6;-1:-1:-1;;;;;7931:35:22;;7959:6;7931:35;;;;1391:25:39;;1379:2;1364:18;;1245:177;7931:35:22;;;;;;;;7457:517;7370:604;;;:::o;14:597:39:-;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;452:6;449:1;446:13;443:91;;;522:1;517:2;508:6;497:9;493:22;489:31;482:42;443:91;-1:-1:-1;595:2:39;574:15;-1:-1:-1;;570:29:39;555:45;;;;602:2;551:54;;14:597;-1:-1:-1;;;14:597:39:o;616:173::-;684:20;;-1:-1:-1;;;;;733:31:39;;723:42;;713:70;;779:1;776;769:12;713:70;616:173;;;:::o;794:254::-;862:6;870;923:2;911:9;902:7;898:23;894:32;891:52;;;939:1;936;929:12;891:52;962:29;981:9;962:29;:::i;:::-;952:39;1038:2;1023:18;;;;1010:32;;-1:-1:-1;;;794:254:39:o;1427:328::-;1504:6;1512;1520;1573:2;1561:9;1552:7;1548:23;1544:32;1541:52;;;1589:1;1586;1579:12;1541:52;1612:29;1631:9;1612:29;:::i;:::-;1602:39;;1660:38;1694:2;1683:9;1679:18;1660:38;:::i;:::-;1650:48;;1745:2;1734:9;1730:18;1717:32;1707:42;;1427:328;;;;;:::o;1949:186::-;2008:6;2061:2;2049:9;2040:7;2036:23;2032:32;2029:52;;;2077:1;2074;2067:12;2029:52;2100:29;2119:9;2100:29;:::i;:::-;2090:39;1949:186;-1:-1:-1;;;1949:186:39:o;2140:260::-;2208:6;2216;2269:2;2257:9;2248:7;2244:23;2240:32;2237:52;;;2285:1;2282;2275:12;2237:52;2308:29;2327:9;2308:29;:::i;:::-;2298:39;;2356:38;2390:2;2379:9;2375:18;2356:38;:::i;:::-;2346:48;;2140:260;;;;;:::o;2405:380::-;2484:1;2480:12;;;;2527;;;2548:61;;2602:4;2594:6;2590:17;2580:27;;2548:61;2655:2;2647:6;2644:14;2624:18;2621:38;2618:161;;;2701:10;2696:3;2692:20;2689:1;2682:31;2736:4;2733:1;2726:15;2764:4;2761:1;2754:15;2618:161;;2405:380;;;:::o;3199:127::-;3260:10;3255:3;3251:20;3248:1;3241:31;3291:4;3288:1;3281:15;3315:4;3312:1;3305:15;3331:125;3371:4;3399:1;3396;3393:8;3390:34;;;3404:18;;:::i;:::-;-1:-1:-1;3441:9:39;;3331:125::o;3461:128::-;3501:3;3532:1;3528:6;3525:1;3522:13;3519:39;;;3538:18;;:::i;:::-;-1:-1:-1;3574:9:39;;3461:128::o",
  "language": "Solidity",
  "natspec": {
    "details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin guidelines: functions revert instead of returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.",
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "constructor": {
        "details": "Sets the values for {name} and {symbol}. The defaut value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
      }
    },
    "version": 1
  },
  "offset": [
    1353,
    10903
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x114 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x1C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x70E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH2 0xDA CALLDATASIZE PUSH1 0x4 PUSH2 0x77F JUMP JUMPDEST PUSH2 0x258 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x10F CALLDATASIZE PUSH1 0x4 PUSH2 0x7A9 JUMP JUMPDEST PUSH2 0x26E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x131 CALLDATASIZE PUSH1 0x4 PUSH2 0x77F JUMP JUMPDEST PUSH2 0x324 JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x144 CALLDATASIZE PUSH1 0x4 PUSH2 0x7E5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x35B JUMP JUMPDEST PUSH2 0xDF PUSH2 0x175 CALLDATASIZE PUSH1 0x4 PUSH2 0x77F JUMP JUMPDEST PUSH2 0x36A JUMP JUMPDEST PUSH2 0xDF PUSH2 0x188 CALLDATASIZE PUSH1 0x4 PUSH2 0x77F JUMP JUMPDEST PUSH2 0x405 JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x19B CALLDATASIZE PUSH1 0x4 PUSH2 0x807 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1D5 SWAP1 PUSH2 0x83A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x201 SWAP1 PUSH2 0x83A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x24E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x223 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x24E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x231 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x265 CALLER DUP5 DUP5 PUSH2 0x412 JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x27B DUP5 DUP5 DUP5 PUSH2 0x536 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x305 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732061 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x6C6C6F77616E6365 PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x319 DUP6 CALLER PUSH2 0x314 DUP7 DUP6 PUSH2 0x88B JUMP JUMPDEST PUSH2 0x412 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x265 SWAP2 DUP6 SWAP1 PUSH2 0x314 SWAP1 DUP7 SWAP1 PUSH2 0x8A2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1D5 SWAP1 PUSH2 0x83A JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x3EC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH2 0x3FB CALLER DUP6 PUSH2 0x314 DUP7 DUP6 PUSH2 0x88B JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x265 CALLER DUP5 DUP5 PUSH2 0x536 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x474 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x4D5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x59A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5FC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x674 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH2 0x67E DUP3 DUP3 PUSH2 0x88B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x6B4 SWAP1 DUP5 SWAP1 PUSH2 0x8A2 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x700 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x73B JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x71F JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x74D JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x77A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x792 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x79B DUP4 PUSH2 0x763 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x7BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7C7 DUP5 PUSH2 0x763 JUMP JUMPDEST SWAP3 POP PUSH2 0x7D5 PUSH1 0x20 DUP6 ADD PUSH2 0x763 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x800 DUP3 PUSH2 0x763 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x81A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x823 DUP4 PUSH2 0x763 JUMP JUMPDEST SWAP2 POP PUSH2 0x831 PUSH1 0x20 DUP5 ADD PUSH2 0x763 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x84E JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x86F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x89D JUMPI PUSH2 0x89D PUSH2 0x875 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x8B5 JUMPI PUSH2 0x8B5 PUSH2 0x875 JUMP JUMPDEST POP ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAF 0xDB PUSH26 0x60B4BF6EEC1342F7B27FE602D3D8199750D73CD969ACA7E3F9A7 SWAP3 PUSH3 0x346473 PUSH16 0x6C634300080900330000000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        1353,
        10903
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        1353,
        10903
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        1353,
        10903
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "5": {
      "fn": null,
      "offset": [
        1353,
        10903
      ],
      "op": "CALLVALUE",
      "path": "22"
    },
    "6": {
      "fn": null,
      "offset": [
        1353,
        10903
      ],
      "op": "DUP1",
      "path": "22"
    },
    "7": {
      "fn": null,
      "offset": [
        1353,
        10903
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "8": {
      "fn": null,
      "offset": [
        1353,
        10903
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        1353,
        10903
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "12": {
      "fn": null,
      "offset": [
        1353,
        10903
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        1353,
        10903
      ],
      "op": "DUP1",
      "path": "22"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        1353,
        10903
      ],
      "op": "REVERT",
      "path": "22"
    },
    "16": {
      "fn": null,
      "offset": [
        1353,
        10903
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "17": {
      "fn": null,
      "offset": [
        1353,
        10903
      ],
      "op": "POP",
      "path": "22"
    },
    "18": {
      "fn": null,
      "offset": [
        1353,
        10903
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        1353,
        10903
      ],
      "op": "CALLDATASIZE",
      "path": "22"
    },
    "21": {
      "fn": null,
      "offset": [
        1353,
        10903
      ],
      "op": "LT",
      "path": "22"
    },
    "22": {
      "fn": null,
      "offset": [
        1353,
        10903
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xA9"
    },
    "25": {
      "fn": null,
      "offset": [
        1353,
        10903
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "26": {
      "fn": null,
      "offset": [
        1353,
        10903
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        1353,
        10903
      ],
      "op": "CALLDATALOAD",
      "path": "22"
    },
    "29": {
      "fn": null,
      "offset": [
        1353,
        10903
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        1353,
        10903
      ],
      "op": "SHR",
      "path": "22"
    },
    "32": {
      "fn": null,
      "offset": [
        1353,
        10903
      ],
      "op": "DUP1",
      "path": "22"
    },
    "33": {
      "fn": null,
      "offset": [
        1353,
        10903
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x39509351"
    },
    "38": {
      "fn": null,
      "offset": [
        1353,
        10903
      ],
      "op": "GT",
      "path": "22"
    },
    "39": {
      "fn": null,
      "offset": [
        1353,
        10903
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x71"
    },
    "42": {
      "fn": null,
      "offset": [
        1353,
        10903
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "43": {
      "fn": null,
      "offset": [
        1353,
        10903
      ],
      "op": "DUP1",
      "path": "22"
    },
    "44": {
      "fn": null,
      "offset": [
        1353,
        10903
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x39509351"
    },
    "49": {
      "fn": null,
      "offset": [
        1353,
        10903
      ],
      "op": "EQ",
      "path": "22"
    },
    "50": {
      "fn": null,
      "offset": [
        1353,
        10903
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x123"
    },
    "53": {
      "fn": null,
      "offset": [
        1353,
        10903
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "54": {
      "fn": null,
      "offset": [
        1353,
        10903
      ],
      "op": "DUP1",
      "path": "22"
    },
    "55": {
      "fn": null,
      "offset": [
        1353,
        10903
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x70A08231"
    },
    "60": {
      "fn": null,
      "offset": [
        1353,
        10903
      ],
      "op": "EQ",
      "path": "22"
    },
    "61": {
      "fn": null,
      "offset": [
        1353,
        10903
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x136"
    },
    "64": {
      "fn": null,
      "offset": [
        1353,
        10903
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "65": {
      "fn": null,
      "offset": [
        1353,
        10903
      ],
      "op": "DUP1",
      "path": "22"
    },
    "66": {
      "fn": null,
      "offset": [
        1353,
        10903
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x95D89B41"
    },
    "71": {
      "fn": null,
      "offset": [
        1353,
        10903
      ],
      "op": "EQ",
      "path": "22"
    },
    "72": {
      "fn": null,
      "offset": [
        1353,
        10903
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x15F"
    },
    "75": {
      "fn": null,
      "offset": [
        1353,
        10903
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "76": {
      "fn": null,
      "offset": [
        1353,
        10903
      ],
      "op": "DUP1",
      "path": "22"
    },
    "77": {
      "fn": null,
      "offset": [
        1353,
        10903
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xA457C2D7"
    },
    "82": {
      "fn": null,
      "offset": [
        1353,
        10903
      ],
      "op": "EQ",
      "path": "22"
    },
    "83": {
      "fn": null,
      "offset": [
        1353,
        10903
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x167"
    },
    "86": {
      "fn": null,
      "offset": [
        1353,
        10903
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "87": {
      "fn": null,
      "offset": [
        1353,
        10903
      ],
      "op": "DUP1",
      "path": "22"
    },
    "88": {
      "fn": null,
      "offset": [
        1353,
        10903
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xA9059CBB"
    },
    "93": {
      "fn": null,
      "offset": [
        1353,
        10903
      ],
      "op": "EQ",
      "path": "22"
    },
    "94": {
      "fn": null,
      "offset": [
        1353,
        10903
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x17A"
    },
    "97": {
      "fn": null,
      "offset": [
        1353,
        10903
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "98": {
      "fn": null,
      "offset": [
        1353,
        10903
      ],
      "op": "DUP1",
      "path": "22"
    },
    "99": {
      "fn": null,
      "offset": [
        1353,
        10903
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xDD62ED3E"
    },
    "104": {
      "fn": null,
      "offset": [
        1353,
        10903
      ],
      "op": "EQ",
      "path": "22"
    },
    "105": {
      "fn": null,
      "offset": [
        1353,
        10903
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x18D"
    },
    "108": {
      "fn": null,
      "offset": [
        1353,
        10903
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "109": {
      "fn": null,
      "offset": [
        1353,
        10903
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "111": {
      "fn": null,
      "offset": [
        1353,
        10903
      ],
      "op": "DUP1",
      "path": "22"
    },
    "112": {
      "fn": null,
      "offset": [
        1353,
        10903
      ],
      "op": "REVERT",
      "path": "22"
    },
    "113": {
      "fn": null,
      "offset": [
        1353,
        10903
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "114": {
      "fn": null,
      "offset": [
        1353,
        10903
      ],
      "op": "DUP1",
      "path": "22"
    },
    "115": {
      "fn": null,
      "offset": [
        1353,
        10903
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x6FDDE03"
    },
    "120": {
      "fn": null,
      "offset": [
        1353,
        10903
      ],
      "op": "EQ",
      "path": "22"
    },
    "121": {
      "fn": null,
      "offset": [
        1353,
        10903
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xAE"
    },
    "124": {
      "fn": null,
      "offset": [
        1353,
        10903
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "125": {
      "fn": null,
      "offset": [
        1353,
        10903
      ],
      "op": "DUP1",
      "path": "22"
    },
    "126": {
      "fn": null,
      "offset": [
        1353,
        10903
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x95EA7B3"
    },
    "131": {
      "fn": null,
      "offset": [
        1353,
        10903
      ],
      "op": "EQ",
      "path": "22"
    },
    "132": {
      "fn": null,
      "offset": [
        1353,
        10903
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xCC"
    },
    "135": {
      "fn": null,
      "offset": [
        1353,
        10903
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "136": {
      "fn": null,
      "offset": [
        1353,
        10903
      ],
      "op": "DUP1",
      "path": "22"
    },
    "137": {
      "fn": null,
      "offset": [
        1353,
        10903
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x18160DDD"
    },
    "142": {
      "fn": null,
      "offset": [
        1353,
        10903
      ],
      "op": "EQ",
      "path": "22"
    },
    "143": {
      "fn": null,
      "offset": [
        1353,
        10903
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xEF"
    },
    "146": {
      "fn": null,
      "offset": [
        1353,
        10903
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "147": {
      "fn": null,
      "offset": [
        1353,
        10903
      ],
      "op": "DUP1",
      "path": "22"
    },
    "148": {
      "fn": null,
      "offset": [
        1353,
        10903
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x23B872DD"
    },
    "153": {
      "fn": null,
      "offset": [
        1353,
        10903
      ],
      "op": "EQ",
      "path": "22"
    },
    "154": {
      "fn": null,
      "offset": [
        1353,
        10903
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x101"
    },
    "157": {
      "fn": null,
      "offset": [
        1353,
        10903
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "158": {
      "fn": null,
      "offset": [
        1353,
        10903
      ],
      "op": "DUP1",
      "path": "22"
    },
    "159": {
      "fn": null,
      "offset": [
        1353,
        10903
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x313CE567"
    },
    "164": {
      "fn": null,
      "offset": [
        1353,
        10903
      ],
      "op": "EQ",
      "path": "22"
    },
    "165": {
      "fn": null,
      "offset": [
        1353,
        10903
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x114"
    },
    "168": {
      "fn": null,
      "offset": [
        1353,
        10903
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "169": {
      "fn": null,
      "offset": [
        1353,
        10903
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "170": {
      "fn": null,
      "offset": [
        1353,
        10903
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "172": {
      "fn": null,
      "offset": [
        1353,
        10903
      ],
      "op": "DUP1",
      "path": "22"
    },
    "173": {
      "first_revert": true,
      "fn": null,
      "offset": [
        1353,
        10903
      ],
      "op": "REVERT",
      "path": "22"
    },
    "174": {
      "fn": "ERC20.name",
      "offset": [
        2136,
        2236
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "175": {
      "fn": "ERC20.name",
      "offset": [
        2136,
        2236
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xB6"
    },
    "178": {
      "fn": "ERC20.name",
      "offset": [
        2136,
        2236
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1C6"
    },
    "181": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [
        2136,
        2236
      ],
      "op": "JUMP",
      "path": "22"
    },
    "182": {
      "fn": "ERC20.name",
      "offset": [
        2136,
        2236
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "183": {
      "fn": "ERC20.name",
      "offset": [
        2136,
        2236
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "185": {
      "fn": "ERC20.name",
      "offset": [
        2136,
        2236
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "186": {
      "fn": "ERC20.name",
      "offset": [
        2136,
        2236
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xC3"
    },
    "189": {
      "fn": "ERC20.name",
      "offset": [
        2136,
        2236
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "190": {
      "fn": "ERC20.name",
      "offset": [
        2136,
        2236
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "191": {
      "fn": "ERC20.name",
      "offset": [
        2136,
        2236
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x70E"
    },
    "194": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [
        2136,
        2236
      ],
      "op": "JUMP",
      "path": "22"
    },
    "195": {
      "fn": "ERC20.name",
      "offset": [
        2136,
        2236
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "196": {
      "fn": "ERC20.name",
      "offset": [
        2136,
        2236
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "198": {
      "fn": "ERC20.name",
      "offset": [
        2136,
        2236
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "199": {
      "fn": "ERC20.name",
      "offset": [
        2136,
        2236
      ],
      "op": "DUP1",
      "path": "22"
    },
    "200": {
      "fn": "ERC20.name",
      "offset": [
        2136,
        2236
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "201": {
      "fn": "ERC20.name",
      "offset": [
        2136,
        2236
      ],
      "op": "SUB",
      "path": "22"
    },
    "202": {
      "fn": "ERC20.name",
      "offset": [
        2136,
        2236
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "203": {
      "fn": "ERC20.name",
      "offset": [
        2136,
        2236
      ],
      "op": "RETURN",
      "path": "22"
    },
    "204": {
      "fn": "ERC20.approve",
      "offset": [
        4303,
        4472
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "205": {
      "fn": "ERC20.approve",
      "offset": [
        4303,
        4472
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xDF"
    },
    "208": {
      "fn": "ERC20.approve",
      "offset": [
        4303,
        4472
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xDA"
    },
    "211": {
      "fn": "ERC20.approve",
      "offset": [
        4303,
        4472
      ],
      "op": "CALLDATASIZE",
      "path": "22"
    },
    "212": {
      "fn": "ERC20.approve",
      "offset": [
        4303,
        4472
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "214": {
      "fn": "ERC20.approve",
      "offset": [
        4303,
        4472
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x77F"
    },
    "217": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        4303,
        4472
      ],
      "op": "JUMP",
      "path": "22"
    },
    "218": {
      "fn": "ERC20.approve",
      "offset": [
        4303,
        4472
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "219": {
      "fn": "ERC20.approve",
      "offset": [
        4303,
        4472
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x258"
    },
    "222": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        4303,
        4472
      ],
      "op": "JUMP",
      "path": "22"
    },
    "223": {
      "fn": "ERC20.approve",
      "offset": [
        4303,
        4472
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "224": {
      "fn": "ERC20.approve",
      "offset": [
        4303,
        4472
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "226": {
      "fn": "ERC20.approve",
      "offset": [
        4303,
        4472
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "227": {
      "op": "SWAP1"
    },
    "228": {
      "op": "ISZERO"
    },
    "229": {
      "op": "ISZERO"
    },
    "230": {
      "op": "DUP2"
    },
    "231": {
      "op": "MSTORE"
    },
    "232": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "234": {
      "op": "ADD"
    },
    "235": {
      "fn": "ERC20.approve",
      "offset": [
        4303,
        4472
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xC3"
    },
    "238": {
      "op": "JUMP"
    },
    "239": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3256,
        3364
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "240": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3344,
        3356
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 0,
      "value": "0x2"
    },
    "242": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3344,
        3356
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "243": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3256,
        3364
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "244": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3256,
        3364
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "246": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3256,
        3364
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "247": {
      "op": "SWAP1"
    },
    "248": {
      "op": "DUP2"
    },
    "249": {
      "op": "MSTORE"
    },
    "250": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "252": {
      "op": "ADD"
    },
    "253": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3256,
        3364
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xC3"
    },
    "256": {
      "op": "JUMP"
    },
    "257": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4954,
        5376
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "258": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4954,
        5376
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xDF"
    },
    "261": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4954,
        5376
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x10F"
    },
    "264": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4954,
        5376
      ],
      "op": "CALLDATASIZE",
      "path": "22"
    },
    "265": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4954,
        5376
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "267": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4954,
        5376
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x7A9"
    },
    "270": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        4954,
        5376
      ],
      "op": "JUMP",
      "path": "22"
    },
    "271": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4954,
        5376
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "272": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4954,
        5376
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x26E"
    },
    "275": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        4954,
        5376
      ],
      "op": "JUMP",
      "path": "22"
    },
    "276": {
      "fn": "ERC20.decimals",
      "offset": [
        3098,
        3191
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "277": {
      "fn": "ERC20.decimals",
      "offset": [
        3098,
        3191
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "279": {
      "fn": "ERC20.decimals",
      "offset": [
        3098,
        3191
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "280": {
      "fn": "ERC20.decimals",
      "offset": [
        3181,
        3183
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 1,
      "value": "0x12"
    },
    "282": {
      "op": "DUP2"
    },
    "283": {
      "op": "MSTORE"
    },
    "284": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "286": {
      "op": "ADD"
    },
    "287": {
      "fn": "ERC20.decimals",
      "offset": [
        3098,
        3191
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xC3"
    },
    "290": {
      "op": "JUMP"
    },
    "291": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5785,
        6000
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "292": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5785,
        6000
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xDF"
    },
    "295": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5785,
        6000
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x131"
    },
    "298": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5785,
        6000
      ],
      "op": "CALLDATASIZE",
      "path": "22"
    },
    "299": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5785,
        6000
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "301": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5785,
        6000
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x77F"
    },
    "304": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        5785,
        6000
      ],
      "op": "JUMP",
      "path": "22"
    },
    "305": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5785,
        6000
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "306": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5785,
        6000
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x324"
    },
    "309": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        5785,
        6000
      ],
      "op": "JUMP",
      "path": "22"
    },
    "310": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3427,
        3554
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "311": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3427,
        3554
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xF3"
    },
    "314": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3427,
        3554
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x144"
    },
    "317": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3427,
        3554
      ],
      "op": "CALLDATASIZE",
      "path": "22"
    },
    "318": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3427,
        3554
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "320": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3427,
        3554
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x7E5"
    },
    "323": {
      "fn": "ERC20.balanceOf",
      "jump": "i",
      "offset": [
        3427,
        3554
      ],
      "op": "JUMP",
      "path": "22"
    },
    "324": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3427,
        3554
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "325": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "327": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "329": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "331": {
      "op": "SHL"
    },
    "332": {
      "op": "SUB"
    },
    "333": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3528,
        3546
      ],
      "op": "AND",
      "path": "22",
      "statement": 2
    },
    "334": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3501,
        3508
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "336": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3528,
        3546
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "337": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3528,
        3546
      ],
      "op": "DUP2",
      "path": "22"
    },
    "338": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3528,
        3546
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "339": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3528,
        3546
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "341": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3528,
        3546
      ],
      "op": "DUP2",
      "path": "22"
    },
    "342": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3528,
        3546
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "343": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3528,
        3546
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "344": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3528,
        3546
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "346": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3528,
        3546
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "347": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3528,
        3546
      ],
      "op": "KECCAK256",
      "path": "22"
    },
    "348": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3528,
        3546
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "349": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3528,
        3546
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "350": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3427,
        3554
      ],
      "op": "JUMP",
      "path": "22"
    },
    "351": {
      "fn": "ERC20.symbol",
      "offset": [
        2355,
        2459
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "352": {
      "fn": "ERC20.symbol",
      "offset": [
        2355,
        2459
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xB6"
    },
    "355": {
      "fn": "ERC20.symbol",
      "offset": [
        2355,
        2459
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x35B"
    },
    "358": {
      "fn": "ERC20.symbol",
      "jump": "i",
      "offset": [
        2355,
        2459
      ],
      "op": "JUMP",
      "path": "22"
    },
    "359": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6503,
        6880
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "360": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6503,
        6880
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xDF"
    },
    "363": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6503,
        6880
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x175"
    },
    "366": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6503,
        6880
      ],
      "op": "CALLDATASIZE",
      "path": "22"
    },
    "367": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6503,
        6880
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "369": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6503,
        6880
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x77F"
    },
    "372": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        6503,
        6880
      ],
      "op": "JUMP",
      "path": "22"
    },
    "373": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6503,
        6880
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "374": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6503,
        6880
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x36A"
    },
    "377": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        6503,
        6880
      ],
      "op": "JUMP",
      "path": "22"
    },
    "378": {
      "fn": "ERC20.transfer",
      "offset": [
        3767,
        3942
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "379": {
      "fn": "ERC20.transfer",
      "offset": [
        3767,
        3942
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xDF"
    },
    "382": {
      "fn": "ERC20.transfer",
      "offset": [
        3767,
        3942
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x188"
    },
    "385": {
      "fn": "ERC20.transfer",
      "offset": [
        3767,
        3942
      ],
      "op": "CALLDATASIZE",
      "path": "22"
    },
    "386": {
      "fn": "ERC20.transfer",
      "offset": [
        3767,
        3942
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "388": {
      "fn": "ERC20.transfer",
      "offset": [
        3767,
        3942
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x77F"
    },
    "391": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        3767,
        3942
      ],
      "op": "JUMP",
      "path": "22"
    },
    "392": {
      "fn": "ERC20.transfer",
      "offset": [
        3767,
        3942
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "393": {
      "fn": "ERC20.transfer",
      "offset": [
        3767,
        3942
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x405"
    },
    "396": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        3767,
        3942
      ],
      "op": "JUMP",
      "path": "22"
    },
    "397": {
      "fn": "ERC20.allowance",
      "offset": [
        4005,
        4156
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "398": {
      "fn": "ERC20.allowance",
      "offset": [
        4005,
        4156
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xF3"
    },
    "401": {
      "fn": "ERC20.allowance",
      "offset": [
        4005,
        4156
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x19B"
    },
    "404": {
      "fn": "ERC20.allowance",
      "offset": [
        4005,
        4156
      ],
      "op": "CALLDATASIZE",
      "path": "22"
    },
    "405": {
      "fn": "ERC20.allowance",
      "offset": [
        4005,
        4156
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "407": {
      "fn": "ERC20.allowance",
      "offset": [
        4005,
        4156
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x807"
    },
    "410": {
      "fn": "ERC20.allowance",
      "jump": "i",
      "offset": [
        4005,
        4156
      ],
      "op": "JUMP",
      "path": "22"
    },
    "411": {
      "fn": "ERC20.allowance",
      "offset": [
        4005,
        4156
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "412": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "414": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "416": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "418": {
      "op": "SHL"
    },
    "419": {
      "op": "SUB"
    },
    "420": {
      "fn": "ERC20.allowance",
      "offset": [
        4121,
        4139
      ],
      "op": "SWAP2",
      "path": "22",
      "statement": 3
    },
    "421": {
      "fn": "ERC20.allowance",
      "offset": [
        4121,
        4139
      ],
      "op": "DUP3",
      "path": "22"
    },
    "422": {
      "fn": "ERC20.allowance",
      "offset": [
        4121,
        4139
      ],
      "op": "AND",
      "path": "22"
    },
    "423": {
      "fn": "ERC20.allowance",
      "offset": [
        4094,
        4101
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "425": {
      "fn": "ERC20.allowance",
      "offset": [
        4121,
        4139
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "426": {
      "fn": "ERC20.allowance",
      "offset": [
        4121,
        4139
      ],
      "op": "DUP2",
      "path": "22"
    },
    "427": {
      "fn": "ERC20.allowance",
      "offset": [
        4121,
        4139
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "428": {
      "fn": "ERC20.allowance",
      "offset": [
        4121,
        4132
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x1"
    },
    "430": {
      "fn": "ERC20.allowance",
      "offset": [
        4121,
        4139
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "432": {
      "fn": "ERC20.allowance",
      "offset": [
        4121,
        4139
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "433": {
      "fn": "ERC20.allowance",
      "offset": [
        4121,
        4139
      ],
      "op": "DUP2",
      "path": "22"
    },
    "434": {
      "fn": "ERC20.allowance",
      "offset": [
        4121,
        4139
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "435": {
      "fn": "ERC20.allowance",
      "offset": [
        4121,
        4139
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "437": {
      "fn": "ERC20.allowance",
      "offset": [
        4121,
        4139
      ],
      "op": "DUP1",
      "path": "22"
    },
    "438": {
      "fn": "ERC20.allowance",
      "offset": [
        4121,
        4139
      ],
      "op": "DUP4",
      "path": "22"
    },
    "439": {
      "fn": "ERC20.allowance",
      "offset": [
        4121,
        4139
      ],
      "op": "KECCAK256",
      "path": "22"
    },
    "440": {
      "fn": "ERC20.allowance",
      "offset": [
        4121,
        4148
      ],
      "op": "SWAP4",
      "path": "22"
    },
    "441": {
      "fn": "ERC20.allowance",
      "offset": [
        4121,
        4148
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "442": {
      "fn": "ERC20.allowance",
      "offset": [
        4121,
        4148
      ],
      "op": "SWAP5",
      "path": "22"
    },
    "443": {
      "fn": "ERC20.allowance",
      "offset": [
        4121,
        4148
      ],
      "op": "AND",
      "path": "22"
    },
    "444": {
      "fn": "ERC20.allowance",
      "offset": [
        4121,
        4148
      ],
      "op": "DUP3",
      "path": "22"
    },
    "445": {
      "fn": "ERC20.allowance",
      "offset": [
        4121,
        4148
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "446": {
      "fn": "ERC20.allowance",
      "offset": [
        4121,
        4148
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "447": {
      "fn": "ERC20.allowance",
      "offset": [
        4121,
        4148
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "448": {
      "fn": "ERC20.allowance",
      "offset": [
        4121,
        4148
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "449": {
      "fn": "ERC20.allowance",
      "offset": [
        4121,
        4148
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "450": {
      "fn": "ERC20.allowance",
      "offset": [
        4121,
        4148
      ],
      "op": "KECCAK256",
      "path": "22"
    },
    "451": {
      "fn": "ERC20.allowance",
      "offset": [
        4121,
        4148
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "452": {
      "fn": "ERC20.allowance",
      "offset": [
        4121,
        4148
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "453": {
      "fn": "ERC20.allowance",
      "offset": [
        4005,
        4156
      ],
      "op": "JUMP",
      "path": "22"
    },
    "454": {
      "fn": "ERC20.name",
      "offset": [
        2136,
        2236
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "455": {
      "fn": "ERC20.name",
      "offset": [
        2190,
        2203
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x60"
    },
    "457": {
      "fn": "ERC20.name",
      "offset": [
        2223,
        2228
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 4,
      "value": "0x3"
    },
    "459": {
      "fn": "ERC20.name",
      "offset": [
        2216,
        2228
      ],
      "op": "DUP1",
      "path": "22"
    },
    "460": {
      "fn": "ERC20.name",
      "offset": [
        2216,
        2228
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "461": {
      "fn": "ERC20.name",
      "offset": [
        2216,
        2228
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1D5"
    },
    "464": {
      "fn": "ERC20.name",
      "offset": [
        2216,
        2228
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "465": {
      "fn": "ERC20.name",
      "offset": [
        2216,
        2228
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x83A"
    },
    "468": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [
        2216,
        2228
      ],
      "op": "JUMP",
      "path": "22"
    },
    "469": {
      "fn": "ERC20.name",
      "offset": [
        2216,
        2228
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "470": {
      "fn": "ERC20.name",
      "offset": [
        2216,
        2228
      ],
      "op": "DUP1",
      "path": "22"
    },
    "471": {
      "fn": "ERC20.name",
      "offset": [
        2216,
        2228
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x1F"
    },
    "473": {
      "fn": "ERC20.name",
      "offset": [
        2216,
        2228
      ],
      "op": "ADD",
      "path": "22"
    },
    "474": {
      "fn": "ERC20.name",
      "offset": [
        2216,
        2228
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "476": {
      "fn": "ERC20.name",
      "offset": [
        2216,
        2228
      ],
      "op": "DUP1",
      "path": "22"
    },
    "477": {
      "fn": "ERC20.name",
      "offset": [
        2216,
        2228
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "478": {
      "fn": "ERC20.name",
      "offset": [
        2216,
        2228
      ],
      "op": "DIV",
      "path": "22"
    },
    "479": {
      "fn": "ERC20.name",
      "offset": [
        2216,
        2228
      ],
      "op": "MUL",
      "path": "22"
    },
    "480": {
      "fn": "ERC20.name",
      "offset": [
        2216,
        2228
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "482": {
      "fn": "ERC20.name",
      "offset": [
        2216,
        2228
      ],
      "op": "ADD",
      "path": "22"
    },
    "483": {
      "fn": "ERC20.name",
      "offset": [
        2216,
        2228
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "485": {
      "fn": "ERC20.name",
      "offset": [
        2216,
        2228
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "486": {
      "fn": "ERC20.name",
      "offset": [
        2216,
        2228
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "487": {
      "fn": "ERC20.name",
      "offset": [
        2216,
        2228
      ],
      "op": "DUP2",
      "path": "22"
    },
    "488": {
      "fn": "ERC20.name",
      "offset": [
        2216,
        2228
      ],
      "op": "ADD",
      "path": "22"
    },
    "489": {
      "fn": "ERC20.name",
      "offset": [
        2216,
        2228
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "491": {
      "fn": "ERC20.name",
      "offset": [
        2216,
        2228
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "492": {
      "fn": "ERC20.name",
      "offset": [
        2216,
        2228
      ],
      "op": "DUP1",
      "path": "22"
    },
    "493": {
      "fn": "ERC20.name",
      "offset": [
        2216,
        2228
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "494": {
      "fn": "ERC20.name",
      "offset": [
        2216,
        2228
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "495": {
      "fn": "ERC20.name",
      "offset": [
        2216,
        2228
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "496": {
      "fn": "ERC20.name",
      "offset": [
        2216,
        2228
      ],
      "op": "DUP2",
      "path": "22"
    },
    "497": {
      "fn": "ERC20.name",
      "offset": [
        2216,
        2228
      ],
      "op": "DUP2",
      "path": "22"
    },
    "498": {
      "fn": "ERC20.name",
      "offset": [
        2216,
        2228
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "499": {
      "fn": "ERC20.name",
      "offset": [
        2216,
        2228
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "501": {
      "fn": "ERC20.name",
      "offset": [
        2216,
        2228
      ],
      "op": "ADD",
      "path": "22"
    },
    "502": {
      "fn": "ERC20.name",
      "offset": [
        2216,
        2228
      ],
      "op": "DUP3",
      "path": "22"
    },
    "503": {
      "fn": "ERC20.name",
      "offset": [
        2216,
        2228
      ],
      "op": "DUP1",
      "path": "22"
    },
    "504": {
      "fn": "ERC20.name",
      "offset": [
        2216,
        2228
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "505": {
      "fn": "ERC20.name",
      "offset": [
        2216,
        2228
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x201"
    },
    "508": {
      "fn": "ERC20.name",
      "offset": [
        2216,
        2228
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "509": {
      "fn": "ERC20.name",
      "offset": [
        2216,
        2228
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x83A"
    },
    "512": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [
        2216,
        2228
      ],
      "op": "JUMP",
      "path": "22"
    },
    "513": {
      "fn": "ERC20.name",
      "offset": [
        2216,
        2228
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "514": {
      "fn": "ERC20.name",
      "offset": [
        2216,
        2228
      ],
      "op": "DUP1",
      "path": "22"
    },
    "515": {
      "fn": "ERC20.name",
      "offset": [
        2216,
        2228
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "516": {
      "fn": "ERC20.name",
      "offset": [
        2216,
        2228
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x24E"
    },
    "519": {
      "fn": "ERC20.name",
      "offset": [
        2216,
        2228
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "520": {
      "fn": "ERC20.name",
      "offset": [
        2216,
        2228
      ],
      "op": "DUP1",
      "path": "22"
    },
    "521": {
      "fn": "ERC20.name",
      "offset": [
        2216,
        2228
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x1F"
    },
    "523": {
      "fn": "ERC20.name",
      "offset": [
        2216,
        2228
      ],
      "op": "LT",
      "path": "22"
    },
    "524": {
      "fn": "ERC20.name",
      "offset": [
        2216,
        2228
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x223"
    },
    "527": {
      "fn": "ERC20.name",
      "offset": [
        2216,
        2228
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "528": {
      "fn": "ERC20.name",
      "offset": [
        2216,
        2228
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x100"
    },
    "531": {
      "fn": "ERC20.name",
      "offset": [
        2216,
        2228
      ],
      "op": "DUP1",
      "path": "22"
    },
    "532": {
      "fn": "ERC20.name",
      "offset": [
        2216,
        2228
      ],
      "op": "DUP4",
      "path": "22"
    },
    "533": {
      "fn": "ERC20.name",
      "offset": [
        2216,
        2228
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "534": {
      "fn": "ERC20.name",
      "offset": [
        2216,
        2228
      ],
      "op": "DIV",
      "path": "22"
    },
    "535": {
      "fn": "ERC20.name",
      "offset": [
        2216,
        2228
      ],
      "op": "MUL",
      "path": "22"
    },
    "536": {
      "fn": "ERC20.name",
      "offset": [
        2216,
        2228
      ],
      "op": "DUP4",
      "path": "22"
    },
    "537": {
      "fn": "ERC20.name",
      "offset": [
        2216,
        2228
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "538": {
      "fn": "ERC20.name",
      "offset": [
        2216,
        2228
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "539": {
      "fn": "ERC20.name",
      "offset": [
        2216,
        2228
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "541": {
      "fn": "ERC20.name",
      "offset": [
        2216,
        2228
      ],
      "op": "ADD",
      "path": "22"
    },
    "542": {
      "fn": "ERC20.name",
      "offset": [
        2216,
        2228
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "543": {
      "fn": "ERC20.name",
      "offset": [
        2216,
        2228
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x24E"
    },
    "546": {
      "fn": "ERC20.name",
      "offset": [
        2216,
        2228
      ],
      "op": "JUMP",
      "path": "22"
    },
    "547": {
      "fn": "ERC20.name",
      "offset": [
        2216,
        2228
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "548": {
      "fn": "ERC20.name",
      "offset": [
        2216,
        2228
      ],
      "op": "DUP3",
      "path": "22"
    },
    "549": {
      "fn": "ERC20.name",
      "offset": [
        2216,
        2228
      ],
      "op": "ADD",
      "path": "22"
    },
    "550": {
      "fn": "ERC20.name",
      "offset": [
        2216,
        2228
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "551": {
      "fn": "ERC20.name",
      "offset": [
        2216,
        2228
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "552": {
      "fn": "ERC20.name",
      "offset": [
        2216,
        2228
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "554": {
      "fn": "ERC20.name",
      "offset": [
        2216,
        2228
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "555": {
      "fn": "ERC20.name",
      "offset": [
        2216,
        2228
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "557": {
      "fn": "ERC20.name",
      "offset": [
        2216,
        2228
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "559": {
      "fn": "ERC20.name",
      "offset": [
        2216,
        2228
      ],
      "op": "KECCAK256",
      "path": "22"
    },
    "560": {
      "fn": "ERC20.name",
      "offset": [
        2216,
        2228
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "561": {
      "fn": "ERC20.name",
      "offset": [
        2216,
        2228
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "562": {
      "fn": "ERC20.name",
      "offset": [
        2216,
        2228
      ],
      "op": "DUP2",
      "path": "22"
    },
    "563": {
      "fn": "ERC20.name",
      "offset": [
        2216,
        2228
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "564": {
      "fn": "ERC20.name",
      "offset": [
        2216,
        2228
      ],
      "op": "DUP2",
      "path": "22"
    },
    "565": {
      "fn": "ERC20.name",
      "offset": [
        2216,
        2228
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "566": {
      "fn": "ERC20.name",
      "offset": [
        2216,
        2228
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "567": {
      "fn": "ERC20.name",
      "offset": [
        2216,
        2228
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x1"
    },
    "569": {
      "fn": "ERC20.name",
      "offset": [
        2216,
        2228
      ],
      "op": "ADD",
      "path": "22"
    },
    "570": {
      "fn": "ERC20.name",
      "offset": [
        2216,
        2228
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "571": {
      "fn": "ERC20.name",
      "offset": [
        2216,
        2228
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "573": {
      "fn": "ERC20.name",
      "offset": [
        2216,
        2228
      ],
      "op": "ADD",
      "path": "22"
    },
    "574": {
      "fn": "ERC20.name",
      "offset": [
        2216,
        2228
      ],
      "op": "DUP1",
      "path": "22"
    },
    "575": {
      "fn": "ERC20.name",
      "offset": [
        2216,
        2228
      ],
      "op": "DUP4",
      "path": "22"
    },
    "576": {
      "fn": "ERC20.name",
      "offset": [
        2216,
        2228
      ],
      "op": "GT",
      "path": "22"
    },
    "577": {
      "fn": "ERC20.name",
      "offset": [
        2216,
        2228
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x231"
    },
    "580": {
      "fn": "ERC20.name",
      "offset": [
        2216,
        2228
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "581": {
      "fn": "ERC20.name",
      "offset": [
        2216,
        2228
      ],
      "op": "DUP3",
      "path": "22"
    },
    "582": {
      "fn": "ERC20.name",
      "offset": [
        2216,
        2228
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "583": {
      "fn": "ERC20.name",
      "offset": [
        2216,
        2228
      ],
      "op": "SUB",
      "path": "22"
    },
    "584": {
      "fn": "ERC20.name",
      "offset": [
        2216,
        2228
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x1F"
    },
    "586": {
      "fn": "ERC20.name",
      "offset": [
        2216,
        2228
      ],
      "op": "AND",
      "path": "22"
    },
    "587": {
      "fn": "ERC20.name",
      "offset": [
        2216,
        2228
      ],
      "op": "DUP3",
      "path": "22"
    },
    "588": {
      "fn": "ERC20.name",
      "offset": [
        2216,
        2228
      ],
      "op": "ADD",
      "path": "22"
    },
    "589": {
      "fn": "ERC20.name",
      "offset": [
        2216,
        2228
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "590": {
      "fn": "ERC20.name",
      "offset": [
        2216,
        2228
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "591": {
      "fn": "ERC20.name",
      "offset": [
        2216,
        2228
      ],
      "op": "POP",
      "path": "22"
    },
    "592": {
      "fn": "ERC20.name",
      "offset": [
        2216,
        2228
      ],
      "op": "POP",
      "path": "22"
    },
    "593": {
      "fn": "ERC20.name",
      "offset": [
        2216,
        2228
      ],
      "op": "POP",
      "path": "22"
    },
    "594": {
      "fn": "ERC20.name",
      "offset": [
        2216,
        2228
      ],
      "op": "POP",
      "path": "22"
    },
    "595": {
      "fn": "ERC20.name",
      "offset": [
        2216,
        2228
      ],
      "op": "POP",
      "path": "22"
    },
    "596": {
      "fn": "ERC20.name",
      "offset": [
        2216,
        2228
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "597": {
      "fn": "ERC20.name",
      "offset": [
        2216,
        2228
      ],
      "op": "POP",
      "path": "22"
    },
    "598": {
      "fn": "ERC20.name",
      "offset": [
        2136,
        2236
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "599": {
      "fn": "ERC20.name",
      "jump": "o",
      "offset": [
        2136,
        2236
      ],
      "op": "JUMP",
      "path": "22"
    },
    "600": {
      "fn": "ERC20.approve",
      "offset": [
        4303,
        4472
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "601": {
      "fn": "ERC20.approve",
      "offset": [
        4386,
        4390
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "603": {
      "fn": "ERC20.approve",
      "offset": [
        4403,
        4442
      ],
      "op": "PUSH2",
      "path": "22",
      "statement": 5,
      "value": "0x265"
    },
    "606": {
      "fn": "Context._msgSender",
      "offset": [
        681,
        691
      ],
      "op": "CALLER",
      "path": "34",
      "statement": 6
    },
    "607": {
      "fn": "ERC20.approve",
      "offset": [
        4426,
        4433
      ],
      "op": "DUP5",
      "path": "22"
    },
    "608": {
      "fn": "ERC20.approve",
      "offset": [
        4435,
        4441
      ],
      "op": "DUP5",
      "path": "22"
    },
    "609": {
      "fn": "ERC20.approve",
      "offset": [
        4403,
        4411
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x412"
    },
    "612": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        4403,
        4442
      ],
      "op": "JUMP",
      "path": "22"
    },
    "613": {
      "fn": "ERC20.approve",
      "offset": [
        4403,
        4442
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "614": {
      "op": "POP"
    },
    "615": {
      "fn": "ERC20.approve",
      "offset": [
        4460,
        4464
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 7,
      "value": "0x1"
    },
    "617": {
      "fn": "ERC20.approve",
      "offset": [
        4303,
        4472
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "618": {
      "fn": "ERC20.approve",
      "offset": [
        4303,
        4472
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "619": {
      "fn": "ERC20.approve",
      "offset": [
        4303,
        4472
      ],
      "op": "POP",
      "path": "22"
    },
    "620": {
      "fn": "ERC20.approve",
      "offset": [
        4303,
        4472
      ],
      "op": "POP",
      "path": "22"
    },
    "621": {
      "fn": "ERC20.approve",
      "jump": "o",
      "offset": [
        4303,
        4472
      ],
      "op": "JUMP",
      "path": "22"
    },
    "622": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4954,
        5376
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "623": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5060,
        5064
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "625": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5077,
        5113
      ],
      "op": "PUSH2",
      "path": "22",
      "statement": 8,
      "value": "0x27B"
    },
    "628": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5087,
        5093
      ],
      "op": "DUP5",
      "path": "22"
    },
    "629": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5095,
        5104
      ],
      "op": "DUP5",
      "path": "22"
    },
    "630": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5106,
        5112
      ],
      "op": "DUP5",
      "path": "22"
    },
    "631": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5077,
        5086
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x536"
    },
    "634": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        5077,
        5113
      ],
      "op": "JUMP",
      "path": "22"
    },
    "635": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5077,
        5113
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "636": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "638": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "640": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "642": {
      "op": "SHL"
    },
    "643": {
      "op": "SUB"
    },
    "644": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5153,
        5172
      ],
      "op": "DUP5",
      "path": "22"
    },
    "645": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5153,
        5172
      ],
      "op": "AND",
      "path": "22"
    },
    "646": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5126,
        5150
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "648": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5153,
        5172
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "649": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5153,
        5172
      ],
      "op": "DUP2",
      "path": "22"
    },
    "650": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5153,
        5172
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "651": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5153,
        5164
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x1"
    },
    "653": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5153,
        5172
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "655": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5153,
        5172
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "656": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5153,
        5172
      ],
      "op": "DUP2",
      "path": "22"
    },
    "657": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5153,
        5172
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "658": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5153,
        5172
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "660": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5153,
        5172
      ],
      "op": "DUP1",
      "path": "22"
    },
    "661": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5153,
        5172
      ],
      "op": "DUP4",
      "path": "22"
    },
    "662": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5153,
        5172
      ],
      "op": "KECCAK256",
      "path": "22"
    },
    "663": {
      "fn": "Context._msgSender",
      "offset": [
        681,
        691
      ],
      "op": "CALLER",
      "path": "34"
    },
    "664": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5153,
        5186
      ],
      "op": "DUP5",
      "path": "22"
    },
    "665": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5153,
        5186
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "666": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5153,
        5186
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "667": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5153,
        5186
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "668": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5153,
        5186
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "669": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5153,
        5186
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "670": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5153,
        5186
      ],
      "op": "KECCAK256",
      "path": "22"
    },
    "671": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5153,
        5186
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "672": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5205,
        5231
      ],
      "op": "DUP3",
      "path": "22",
      "statement": 9
    },
    "673": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5205,
        5231
      ],
      "op": "DUP2",
      "path": "22"
    },
    "674": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5205,
        5231
      ],
      "op": "LT",
      "path": "22"
    },
    "675": {
      "branch": 28,
      "fn": "ERC20.transferFrom",
      "offset": [
        5205,
        5231
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "676": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5197,
        5276
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x305"
    },
    "679": {
      "branch": 28,
      "fn": "ERC20.transferFrom",
      "offset": [
        5197,
        5276
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "680": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5197,
        5276
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "682": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5197,
        5276
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "683": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "687": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "689": {
      "op": "SHL"
    },
    "690": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5197,
        5276
      ],
      "op": "DUP2",
      "path": "22"
    },
    "691": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5197,
        5276
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "692": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "694": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5197,
        5276
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "696": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5197,
        5276
      ],
      "op": "DUP3",
      "path": "22"
    },
    "697": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5197,
        5276
      ],
      "op": "ADD",
      "path": "22"
    },
    "698": {
      "op": "MSTORE"
    },
    "699": {
      "op": "PUSH1",
      "value": "0x28"
    },
    "701": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "703": {
      "op": "DUP3"
    },
    "704": {
      "op": "ADD"
    },
    "705": {
      "op": "MSTORE"
    },
    "706": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E7366657220616D6F756E7420657863656564732061"
    },
    "739": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "741": {
      "op": "DUP3"
    },
    "742": {
      "op": "ADD"
    },
    "743": {
      "op": "MSTORE"
    },
    "744": {
      "op": "PUSH8",
      "value": "0x6C6C6F77616E6365"
    },
    "753": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "755": {
      "op": "SHL"
    },
    "756": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "758": {
      "op": "DUP3"
    },
    "759": {
      "op": "ADD"
    },
    "760": {
      "op": "MSTORE"
    },
    "761": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "763": {
      "op": "ADD"
    },
    "764": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5197,
        5276
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "765": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5197,
        5276
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "767": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5197,
        5276
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "768": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5197,
        5276
      ],
      "op": "DUP1",
      "path": "22"
    },
    "769": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5197,
        5276
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "770": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5197,
        5276
      ],
      "op": "SUB",
      "path": "22"
    },
    "771": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5197,
        5276
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "772": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5197,
        5276
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "22"
    },
    "773": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5197,
        5276
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "774": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5287,
        5344
      ],
      "op": "PUSH2",
      "path": "22",
      "statement": 10,
      "value": "0x319"
    },
    "777": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5296,
        5302
      ],
      "op": "DUP6",
      "path": "22"
    },
    "778": {
      "fn": "Context._msgSender",
      "offset": [
        681,
        691
      ],
      "op": "CALLER",
      "path": "34"
    },
    "779": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5318,
        5343
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x314"
    },
    "782": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5337,
        5343
      ],
      "op": "DUP7",
      "path": "22"
    },
    "783": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5318,
        5334
      ],
      "op": "DUP6",
      "path": "22"
    },
    "784": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5318,
        5343
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x88B"
    },
    "787": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        5318,
        5343
      ],
      "op": "JUMP",
      "path": "22"
    },
    "788": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5318,
        5343
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "789": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5287,
        5295
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x412"
    },
    "792": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        5287,
        5344
      ],
      "op": "JUMP",
      "path": "22"
    },
    "793": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5287,
        5344
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "794": {
      "op": "POP"
    },
    "795": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5364,
        5368
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 11,
      "value": "0x1"
    },
    "797": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5364,
        5368
      ],
      "op": "SWAP5",
      "path": "22"
    },
    "798": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4954,
        5376
      ],
      "op": "SWAP4",
      "path": "22"
    },
    "799": {
      "op": "POP"
    },
    "800": {
      "op": "POP"
    },
    "801": {
      "op": "POP"
    },
    "802": {
      "op": "POP"
    },
    "803": {
      "fn": "ERC20.transferFrom",
      "jump": "o",
      "offset": [
        4954,
        5376
      ],
      "op": "JUMP",
      "path": "22"
    },
    "804": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5785,
        6000
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "805": {
      "fn": "Context._msgSender",
      "offset": [
        681,
        691
      ],
      "op": "CALLER",
      "path": "34"
    },
    "806": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5873,
        5877
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "808": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5922,
        5947
      ],
      "op": "DUP2",
      "path": "22",
      "statement": 12
    },
    "809": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5922,
        5947
      ],
      "op": "DUP2",
      "path": "22"
    },
    "810": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5922,
        5947
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "811": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5922,
        5933
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x1"
    },
    "813": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5922,
        5947
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "815": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5922,
        5947
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "816": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5922,
        5947
      ],
      "op": "DUP2",
      "path": "22"
    },
    "817": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5922,
        5947
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "818": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5922,
        5947
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "820": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5922,
        5947
      ],
      "op": "DUP1",
      "path": "22"
    },
    "821": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5922,
        5947
      ],
      "op": "DUP4",
      "path": "22"
    },
    "822": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5922,
        5947
      ],
      "op": "KECCAK256",
      "path": "22"
    },
    "823": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "825": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "827": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "829": {
      "op": "SHL"
    },
    "830": {
      "op": "SUB"
    },
    "831": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5922,
        5956
      ],
      "op": "DUP8",
      "path": "22"
    },
    "832": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5922,
        5956
      ],
      "op": "AND",
      "path": "22"
    },
    "833": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5922,
        5956
      ],
      "op": "DUP5",
      "path": "22"
    },
    "834": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5922,
        5956
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "835": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5922,
        5956
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "836": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5922,
        5956
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "837": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5922,
        5956
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "838": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5922,
        5956
      ],
      "op": "DUP2",
      "path": "22"
    },
    "839": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5922,
        5956
      ],
      "op": "KECCAK256",
      "path": "22"
    },
    "840": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5922,
        5956
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "841": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5873,
        5877
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "842": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5873,
        5877
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "843": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5890,
        5970
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x265"
    },
    "846": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5890,
        5970
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "847": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5913,
        5920
      ],
      "op": "DUP6",
      "path": "22"
    },
    "848": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5913,
        5920
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "849": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5922,
        5969
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x314"
    },
    "852": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5922,
        5969
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "853": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5959,
        5969
      ],
      "op": "DUP7",
      "path": "22"
    },
    "854": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5959,
        5969
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "855": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5922,
        5969
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x8A2"
    },
    "858": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        5922,
        5969
      ],
      "op": "JUMP",
      "path": "22"
    },
    "859": {
      "fn": "ERC20.symbol",
      "offset": [
        2355,
        2459
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "860": {
      "fn": "ERC20.symbol",
      "offset": [
        2411,
        2424
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x60"
    },
    "862": {
      "fn": "ERC20.symbol",
      "offset": [
        2444,
        2451
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 13,
      "value": "0x4"
    },
    "864": {
      "fn": "ERC20.symbol",
      "offset": [
        2437,
        2451
      ],
      "op": "DUP1",
      "path": "22"
    },
    "865": {
      "fn": "ERC20.symbol",
      "offset": [
        2437,
        2451
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "866": {
      "fn": "ERC20.symbol",
      "offset": [
        2437,
        2451
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1D5"
    },
    "869": {
      "fn": "ERC20.symbol",
      "offset": [
        2437,
        2451
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "870": {
      "fn": "ERC20.symbol",
      "offset": [
        2437,
        2451
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x83A"
    },
    "873": {
      "fn": "ERC20.symbol",
      "jump": "i",
      "offset": [
        2437,
        2451
      ],
      "op": "JUMP",
      "path": "22"
    },
    "874": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6503,
        6880
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "875": {
      "fn": "Context._msgSender",
      "offset": [
        681,
        691
      ],
      "op": "CALLER",
      "path": "34"
    },
    "876": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6596,
        6600
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "878": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6640,
        6665
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "879": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6640,
        6665
      ],
      "op": "DUP2",
      "path": "22"
    },
    "880": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6640,
        6665
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "881": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6640,
        6651
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x1"
    },
    "883": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6640,
        6665
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "885": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6640,
        6665
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "886": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6640,
        6665
      ],
      "op": "DUP2",
      "path": "22"
    },
    "887": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6640,
        6665
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "888": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6640,
        6665
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "890": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6640,
        6665
      ],
      "op": "DUP1",
      "path": "22"
    },
    "891": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6640,
        6665
      ],
      "op": "DUP4",
      "path": "22"
    },
    "892": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6640,
        6665
      ],
      "op": "KECCAK256",
      "path": "22"
    },
    "893": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "895": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "897": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "899": {
      "op": "SHL"
    },
    "900": {
      "op": "SUB"
    },
    "901": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6640,
        6674
      ],
      "op": "DUP7",
      "path": "22"
    },
    "902": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6640,
        6674
      ],
      "op": "AND",
      "path": "22"
    },
    "903": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6640,
        6674
      ],
      "op": "DUP5",
      "path": "22"
    },
    "904": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6640,
        6674
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "905": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6640,
        6674
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "906": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6640,
        6674
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "907": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6640,
        6674
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "908": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6640,
        6674
      ],
      "op": "DUP2",
      "path": "22"
    },
    "909": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6640,
        6674
      ],
      "op": "KECCAK256",
      "path": "22"
    },
    "910": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6640,
        6674
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "911": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6693,
        6728
      ],
      "op": "DUP3",
      "path": "22",
      "statement": 14
    },
    "912": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6693,
        6728
      ],
      "op": "DUP2",
      "path": "22"
    },
    "913": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6693,
        6728
      ],
      "op": "LT",
      "path": "22"
    },
    "914": {
      "branch": 29,
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6693,
        6728
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "915": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6685,
        6770
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x3EC"
    },
    "918": {
      "branch": 29,
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6685,
        6770
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "919": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6685,
        6770
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "921": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6685,
        6770
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "922": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "926": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "928": {
      "op": "SHL"
    },
    "929": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6685,
        6770
      ],
      "op": "DUP2",
      "path": "22"
    },
    "930": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6685,
        6770
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "931": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "933": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6685,
        6770
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "935": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6685,
        6770
      ],
      "op": "DUP3",
      "path": "22"
    },
    "936": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6685,
        6770
      ],
      "op": "ADD",
      "path": "22"
    },
    "937": {
      "op": "MSTORE"
    },
    "938": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "940": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "942": {
      "op": "DUP3"
    },
    "943": {
      "op": "ADD"
    },
    "944": {
      "op": "MSTORE"
    },
    "945": {
      "op": "PUSH32",
      "value": "0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
    },
    "978": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "980": {
      "op": "DUP3"
    },
    "981": {
      "op": "ADD"
    },
    "982": {
      "op": "MSTORE"
    },
    "983": {
      "op": "PUSH5",
      "value": "0x207A65726F"
    },
    "989": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "991": {
      "op": "SHL"
    },
    "992": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "994": {
      "op": "DUP3"
    },
    "995": {
      "op": "ADD"
    },
    "996": {
      "op": "MSTORE"
    },
    "997": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "999": {
      "op": "ADD"
    },
    "1000": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6685,
        6770
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2FC"
    },
    "1003": {
      "op": "JUMP"
    },
    "1004": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6685,
        6770
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1005": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6781,
        6848
      ],
      "op": "PUSH2",
      "path": "22",
      "statement": 15,
      "value": "0x3FB"
    },
    "1008": {
      "fn": "Context._msgSender",
      "offset": [
        681,
        691
      ],
      "op": "CALLER",
      "path": "34"
    },
    "1009": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6804,
        6811
      ],
      "op": "DUP6",
      "path": "22"
    },
    "1010": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6813,
        6847
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x314"
    },
    "1013": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6832,
        6847
      ],
      "op": "DUP7",
      "path": "22"
    },
    "1014": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6813,
        6829
      ],
      "op": "DUP6",
      "path": "22"
    },
    "1015": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6813,
        6847
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x88B"
    },
    "1018": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        6813,
        6847
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1019": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6781,
        6848
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1020": {
      "op": "POP"
    },
    "1021": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6868,
        6872
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 16,
      "value": "0x1"
    },
    "1023": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6868,
        6872
      ],
      "op": "SWAP4",
      "path": "22"
    },
    "1024": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6503,
        6880
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "1025": {
      "op": "POP"
    },
    "1026": {
      "op": "POP"
    },
    "1027": {
      "op": "POP"
    },
    "1028": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "o",
      "offset": [
        6503,
        6880
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1029": {
      "fn": "ERC20.transfer",
      "offset": [
        3767,
        3942
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1030": {
      "fn": "ERC20.transfer",
      "offset": [
        3853,
        3857
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "1032": {
      "fn": "ERC20.transfer",
      "offset": [
        3870,
        3912
      ],
      "op": "PUSH2",
      "path": "22",
      "statement": 17,
      "value": "0x265"
    },
    "1035": {
      "fn": "Context._msgSender",
      "offset": [
        681,
        691
      ],
      "op": "CALLER",
      "path": "34"
    },
    "1036": {
      "fn": "ERC20.transfer",
      "offset": [
        3894,
        3903
      ],
      "op": "DUP5",
      "path": "22"
    },
    "1037": {
      "fn": "ERC20.transfer",
      "offset": [
        3905,
        3911
      ],
      "op": "DUP5",
      "path": "22"
    },
    "1038": {
      "fn": "ERC20.transfer",
      "offset": [
        3870,
        3879
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x536"
    },
    "1041": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        3870,
        3912
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1042": {
      "fn": "ERC20._approve",
      "offset": [
        9859,
        10205
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1043": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1045": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1047": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1049": {
      "op": "SHL"
    },
    "1050": {
      "op": "SUB"
    },
    "1051": {
      "fn": "ERC20._approve",
      "offset": [
        9961,
        9980
      ],
      "op": "DUP4",
      "path": "22",
      "statement": 18
    },
    "1052": {
      "branch": 30,
      "fn": "ERC20._approve",
      "offset": [
        9961,
        9980
      ],
      "op": "AND",
      "path": "22"
    },
    "1053": {
      "fn": "ERC20._approve",
      "offset": [
        9953,
        10021
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x474"
    },
    "1056": {
      "branch": 30,
      "fn": "ERC20._approve",
      "offset": [
        9953,
        10021
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "1057": {
      "fn": "ERC20._approve",
      "offset": [
        9953,
        10021
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "1059": {
      "fn": "ERC20._approve",
      "offset": [
        9953,
        10021
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "1060": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1064": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1066": {
      "op": "SHL"
    },
    "1067": {
      "fn": "ERC20._approve",
      "offset": [
        9953,
        10021
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1068": {
      "fn": "ERC20._approve",
      "offset": [
        9953,
        10021
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1069": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1071": {
      "fn": "ERC20._approve",
      "offset": [
        9953,
        10021
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "1073": {
      "fn": "ERC20._approve",
      "offset": [
        9953,
        10021
      ],
      "op": "DUP3",
      "path": "22"
    },
    "1074": {
      "fn": "ERC20._approve",
      "offset": [
        9953,
        10021
      ],
      "op": "ADD",
      "path": "22"
    },
    "1075": {
      "op": "MSTORE"
    },
    "1076": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1078": {
      "op": "DUP1"
    },
    "1079": {
      "op": "DUP3"
    },
    "1080": {
      "op": "ADD"
    },
    "1081": {
      "op": "MSTORE"
    },
    "1082": {
      "op": "PUSH32",
      "value": "0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
    },
    "1115": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1117": {
      "op": "DUP3"
    },
    "1118": {
      "op": "ADD"
    },
    "1119": {
      "op": "MSTORE"
    },
    "1120": {
      "op": "PUSH4",
      "value": "0x72657373"
    },
    "1125": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1127": {
      "op": "SHL"
    },
    "1128": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1130": {
      "op": "DUP3"
    },
    "1131": {
      "op": "ADD"
    },
    "1132": {
      "op": "MSTORE"
    },
    "1133": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1135": {
      "op": "ADD"
    },
    "1136": {
      "fn": "ERC20._approve",
      "offset": [
        9953,
        10021
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2FC"
    },
    "1139": {
      "op": "JUMP"
    },
    "1140": {
      "fn": "ERC20._approve",
      "offset": [
        9953,
        10021
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1141": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1143": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1145": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1147": {
      "op": "SHL"
    },
    "1148": {
      "op": "SUB"
    },
    "1149": {
      "fn": "ERC20._approve",
      "offset": [
        10040,
        10061
      ],
      "op": "DUP3",
      "path": "22",
      "statement": 19
    },
    "1150": {
      "branch": 31,
      "fn": "ERC20._approve",
      "offset": [
        10040,
        10061
      ],
      "op": "AND",
      "path": "22"
    },
    "1151": {
      "fn": "ERC20._approve",
      "offset": [
        10032,
        10100
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x4D5"
    },
    "1154": {
      "branch": 31,
      "fn": "ERC20._approve",
      "offset": [
        10032,
        10100
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "1155": {
      "fn": "ERC20._approve",
      "offset": [
        10032,
        10100
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "1157": {
      "fn": "ERC20._approve",
      "offset": [
        10032,
        10100
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "1158": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1162": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1164": {
      "op": "SHL"
    },
    "1165": {
      "fn": "ERC20._approve",
      "offset": [
        10032,
        10100
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1166": {
      "fn": "ERC20._approve",
      "offset": [
        10032,
        10100
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1167": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1169": {
      "fn": "ERC20._approve",
      "offset": [
        10032,
        10100
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "1171": {
      "fn": "ERC20._approve",
      "offset": [
        10032,
        10100
      ],
      "op": "DUP3",
      "path": "22"
    },
    "1172": {
      "fn": "ERC20._approve",
      "offset": [
        10032,
        10100
      ],
      "op": "ADD",
      "path": "22"
    },
    "1173": {
      "op": "MSTORE"
    },
    "1174": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "1176": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1178": {
      "op": "DUP3"
    },
    "1179": {
      "op": "ADD"
    },
    "1180": {
      "op": "MSTORE"
    },
    "1181": {
      "op": "PUSH32",
      "value": "0x45524332303A20617070726F766520746F20746865207A65726F206164647265"
    },
    "1214": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1216": {
      "op": "DUP3"
    },
    "1217": {
      "op": "ADD"
    },
    "1218": {
      "op": "MSTORE"
    },
    "1219": {
      "op": "PUSH2",
      "value": "0x7373"
    },
    "1222": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "1224": {
      "op": "SHL"
    },
    "1225": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1227": {
      "op": "DUP3"
    },
    "1228": {
      "op": "ADD"
    },
    "1229": {
      "op": "MSTORE"
    },
    "1230": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1232": {
      "op": "ADD"
    },
    "1233": {
      "fn": "ERC20._approve",
      "offset": [
        10032,
        10100
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2FC"
    },
    "1236": {
      "op": "JUMP"
    },
    "1237": {
      "fn": "ERC20._approve",
      "offset": [
        10032,
        10100
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1238": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1240": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1242": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1244": {
      "op": "SHL"
    },
    "1245": {
      "op": "SUB"
    },
    "1246": {
      "fn": "ERC20._approve",
      "offset": [
        10113,
        10131
      ],
      "op": "DUP4",
      "path": "22",
      "statement": 20
    },
    "1247": {
      "fn": "ERC20._approve",
      "offset": [
        10113,
        10131
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1248": {
      "fn": "ERC20._approve",
      "offset": [
        10113,
        10131
      ],
      "op": "AND",
      "path": "22"
    },
    "1249": {
      "fn": "ERC20._approve",
      "offset": [
        10113,
        10131
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "1251": {
      "fn": "ERC20._approve",
      "offset": [
        10113,
        10131
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1252": {
      "fn": "ERC20._approve",
      "offset": [
        10113,
        10131
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1253": {
      "fn": "ERC20._approve",
      "offset": [
        10113,
        10131
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1254": {
      "fn": "ERC20._approve",
      "offset": [
        10113,
        10124
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x1"
    },
    "1256": {
      "fn": "ERC20._approve",
      "offset": [
        10113,
        10131
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "1258": {
      "fn": "ERC20._approve",
      "offset": [
        10113,
        10131
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1259": {
      "fn": "ERC20._approve",
      "offset": [
        10113,
        10131
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1260": {
      "fn": "ERC20._approve",
      "offset": [
        10113,
        10131
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1261": {
      "fn": "ERC20._approve",
      "offset": [
        10113,
        10131
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "1263": {
      "fn": "ERC20._approve",
      "offset": [
        10113,
        10131
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1264": {
      "fn": "ERC20._approve",
      "offset": [
        10113,
        10131
      ],
      "op": "DUP4",
      "path": "22"
    },
    "1265": {
      "fn": "ERC20._approve",
      "offset": [
        10113,
        10131
      ],
      "op": "KECCAK256",
      "path": "22"
    },
    "1266": {
      "fn": "ERC20._approve",
      "offset": [
        10113,
        10140
      ],
      "op": "SWAP5",
      "path": "22"
    },
    "1267": {
      "fn": "ERC20._approve",
      "offset": [
        10113,
        10140
      ],
      "op": "DUP8",
      "path": "22"
    },
    "1268": {
      "fn": "ERC20._approve",
      "offset": [
        10113,
        10140
      ],
      "op": "AND",
      "path": "22"
    },
    "1269": {
      "fn": "ERC20._approve",
      "offset": [
        10113,
        10140
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1270": {
      "fn": "ERC20._approve",
      "offset": [
        10113,
        10140
      ],
      "op": "DUP5",
      "path": "22"
    },
    "1271": {
      "fn": "ERC20._approve",
      "offset": [
        10113,
        10140
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1272": {
      "fn": "ERC20._approve",
      "offset": [
        10113,
        10140
      ],
      "op": "SWAP5",
      "path": "22"
    },
    "1273": {
      "fn": "ERC20._approve",
      "offset": [
        10113,
        10140
      ],
      "op": "DUP3",
      "path": "22"
    },
    "1274": {
      "fn": "ERC20._approve",
      "offset": [
        10113,
        10140
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1275": {
      "fn": "ERC20._approve",
      "offset": [
        10113,
        10140
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "1276": {
      "fn": "ERC20._approve",
      "offset": [
        10113,
        10140
      ],
      "op": "DUP3",
      "path": "22"
    },
    "1277": {
      "fn": "ERC20._approve",
      "offset": [
        10113,
        10140
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1278": {
      "fn": "ERC20._approve",
      "offset": [
        10113,
        10140
      ],
      "op": "KECCAK256",
      "path": "22"
    },
    "1279": {
      "fn": "ERC20._approve",
      "offset": [
        10113,
        10149
      ],
      "op": "DUP6",
      "path": "22"
    },
    "1280": {
      "fn": "ERC20._approve",
      "offset": [
        10113,
        10149
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1281": {
      "fn": "ERC20._approve",
      "offset": [
        10113,
        10149
      ],
      "op": "SSTORE",
      "path": "22"
    },
    "1282": {
      "fn": "ERC20._approve",
      "offset": [
        10165,
        10197
      ],
      "op": "SWAP1",
      "path": "22",
      "statement": 21
    },
    "1283": {
      "fn": "ERC20._approve",
      "offset": [
        10165,
        10197
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "1284": {
      "op": "DUP5"
    },
    "1285": {
      "op": "DUP2"
    },
    "1286": {
      "op": "MSTORE"
    },
    "1287": {
      "fn": "ERC20._approve",
      "offset": [
        10165,
        10197
      ],
      "op": "PUSH32",
      "path": "22",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "1320": {
      "fn": "ERC20._approve",
      "offset": [
        10165,
        10197
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "1321": {
      "op": "ADD"
    },
    "1322": {
      "fn": "ERC20._approve",
      "offset": [
        10165,
        10197
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "1324": {
      "fn": "ERC20._approve",
      "offset": [
        10165,
        10197
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "1325": {
      "fn": "ERC20._approve",
      "offset": [
        10165,
        10197
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1326": {
      "fn": "ERC20._approve",
      "offset": [
        10165,
        10197
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "1327": {
      "fn": "ERC20._approve",
      "offset": [
        10165,
        10197
      ],
      "op": "SUB",
      "path": "22"
    },
    "1328": {
      "fn": "ERC20._approve",
      "offset": [
        10165,
        10197
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1329": {
      "fn": "ERC20._approve",
      "offset": [
        10165,
        10197
      ],
      "op": "LOG3",
      "path": "22"
    },
    "1330": {
      "fn": "ERC20._approve",
      "offset": [
        9859,
        10205
      ],
      "op": "POP",
      "path": "22"
    },
    "1331": {
      "fn": "ERC20._approve",
      "offset": [
        9859,
        10205
      ],
      "op": "POP",
      "path": "22"
    },
    "1332": {
      "fn": "ERC20._approve",
      "offset": [
        9859,
        10205
      ],
      "op": "POP",
      "path": "22"
    },
    "1333": {
      "fn": "ERC20._approve",
      "jump": "o",
      "offset": [
        9859,
        10205
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1334": {
      "fn": "ERC20._transfer",
      "offset": [
        7370,
        7974
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1335": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1337": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1339": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1341": {
      "op": "SHL"
    },
    "1342": {
      "op": "SUB"
    },
    "1343": {
      "fn": "ERC20._transfer",
      "offset": [
        7476,
        7496
      ],
      "op": "DUP4",
      "path": "22",
      "statement": 22
    },
    "1344": {
      "branch": 32,
      "fn": "ERC20._transfer",
      "offset": [
        7476,
        7496
      ],
      "op": "AND",
      "path": "22"
    },
    "1345": {
      "fn": "ERC20._transfer",
      "offset": [
        7468,
        7538
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x59A"
    },
    "1348": {
      "branch": 32,
      "fn": "ERC20._transfer",
      "offset": [
        7468,
        7538
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "1349": {
      "fn": "ERC20._transfer",
      "offset": [
        7468,
        7538
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "1351": {
      "fn": "ERC20._transfer",
      "offset": [
        7468,
        7538
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "1352": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1356": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1358": {
      "op": "SHL"
    },
    "1359": {
      "fn": "ERC20._transfer",
      "offset": [
        7468,
        7538
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1360": {
      "fn": "ERC20._transfer",
      "offset": [
        7468,
        7538
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1361": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1363": {
      "fn": "ERC20._transfer",
      "offset": [
        7468,
        7538
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "1365": {
      "fn": "ERC20._transfer",
      "offset": [
        7468,
        7538
      ],
      "op": "DUP3",
      "path": "22"
    },
    "1366": {
      "fn": "ERC20._transfer",
      "offset": [
        7468,
        7538
      ],
      "op": "ADD",
      "path": "22"
    },
    "1367": {
      "op": "MSTORE"
    },
    "1368": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "1370": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1372": {
      "op": "DUP3"
    },
    "1373": {
      "op": "ADD"
    },
    "1374": {
      "op": "MSTORE"
    },
    "1375": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E736665722066726F6D20746865207A65726F206164"
    },
    "1408": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1410": {
      "op": "DUP3"
    },
    "1411": {
      "op": "ADD"
    },
    "1412": {
      "op": "MSTORE"
    },
    "1413": {
      "op": "PUSH5",
      "value": "0x6472657373"
    },
    "1419": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "1421": {
      "op": "SHL"
    },
    "1422": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1424": {
      "op": "DUP3"
    },
    "1425": {
      "op": "ADD"
    },
    "1426": {
      "op": "MSTORE"
    },
    "1427": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1429": {
      "op": "ADD"
    },
    "1430": {
      "fn": "ERC20._transfer",
      "offset": [
        7468,
        7538
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2FC"
    },
    "1433": {
      "op": "JUMP"
    },
    "1434": {
      "fn": "ERC20._transfer",
      "offset": [
        7468,
        7538
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1435": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1437": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1439": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1441": {
      "op": "SHL"
    },
    "1442": {
      "op": "SUB"
    },
    "1443": {
      "fn": "ERC20._transfer",
      "offset": [
        7557,
        7580
      ],
      "op": "DUP3",
      "path": "22",
      "statement": 23
    },
    "1444": {
      "branch": 33,
      "fn": "ERC20._transfer",
      "offset": [
        7557,
        7580
      ],
      "op": "AND",
      "path": "22"
    },
    "1445": {
      "fn": "ERC20._transfer",
      "offset": [
        7549,
        7620
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x5FC"
    },
    "1448": {
      "branch": 33,
      "fn": "ERC20._transfer",
      "offset": [
        7549,
        7620
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "1449": {
      "fn": "ERC20._transfer",
      "offset": [
        7549,
        7620
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "1451": {
      "fn": "ERC20._transfer",
      "offset": [
        7549,
        7620
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "1452": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1456": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1458": {
      "op": "SHL"
    },
    "1459": {
      "fn": "ERC20._transfer",
      "offset": [
        7549,
        7620
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1460": {
      "fn": "ERC20._transfer",
      "offset": [
        7549,
        7620
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1461": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1463": {
      "fn": "ERC20._transfer",
      "offset": [
        7549,
        7620
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "1465": {
      "fn": "ERC20._transfer",
      "offset": [
        7549,
        7620
      ],
      "op": "DUP3",
      "path": "22"
    },
    "1466": {
      "fn": "ERC20._transfer",
      "offset": [
        7549,
        7620
      ],
      "op": "ADD",
      "path": "22"
    },
    "1467": {
      "op": "MSTORE"
    },
    "1468": {
      "op": "PUSH1",
      "value": "0x23"
    },
    "1470": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1472": {
      "op": "DUP3"
    },
    "1473": {
      "op": "ADD"
    },
    "1474": {
      "op": "MSTORE"
    },
    "1475": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E7366657220746F20746865207A65726F2061646472"
    },
    "1508": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1510": {
      "op": "DUP3"
    },
    "1511": {
      "op": "ADD"
    },
    "1512": {
      "op": "MSTORE"
    },
    "1513": {
      "op": "PUSH3",
      "value": "0x657373"
    },
    "1517": {
      "op": "PUSH1",
      "value": "0xE8"
    },
    "1519": {
      "op": "SHL"
    },
    "1520": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1522": {
      "op": "DUP3"
    },
    "1523": {
      "op": "ADD"
    },
    "1524": {
      "op": "MSTORE"
    },
    "1525": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1527": {
      "op": "ADD"
    },
    "1528": {
      "fn": "ERC20._transfer",
      "offset": [
        7549,
        7620
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2FC"
    },
    "1531": {
      "op": "JUMP"
    },
    "1532": {
      "fn": "ERC20._transfer",
      "offset": [
        7549,
        7620
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1533": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1535": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1537": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1539": {
      "op": "SHL"
    },
    "1540": {
      "op": "SUB"
    },
    "1541": {
      "fn": "ERC20._transfer",
      "offset": [
        7717,
        7734
      ],
      "op": "DUP4",
      "path": "22"
    },
    "1542": {
      "fn": "ERC20._transfer",
      "offset": [
        7717,
        7734
      ],
      "op": "AND",
      "path": "22"
    },
    "1543": {
      "fn": "ERC20._transfer",
      "offset": [
        7693,
        7714
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "1545": {
      "fn": "ERC20._transfer",
      "offset": [
        7717,
        7734
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1546": {
      "fn": "ERC20._transfer",
      "offset": [
        7717,
        7734
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1547": {
      "fn": "ERC20._transfer",
      "offset": [
        7717,
        7734
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1548": {
      "fn": "ERC20._transfer",
      "offset": [
        7717,
        7734
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "1550": {
      "fn": "ERC20._transfer",
      "offset": [
        7717,
        7734
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1551": {
      "fn": "ERC20._transfer",
      "offset": [
        7717,
        7734
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1552": {
      "fn": "ERC20._transfer",
      "offset": [
        7717,
        7734
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1553": {
      "fn": "ERC20._transfer",
      "offset": [
        7717,
        7734
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "1555": {
      "fn": "ERC20._transfer",
      "offset": [
        7717,
        7734
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1556": {
      "fn": "ERC20._transfer",
      "offset": [
        7717,
        7734
      ],
      "op": "KECCAK256",
      "path": "22"
    },
    "1557": {
      "fn": "ERC20._transfer",
      "offset": [
        7717,
        7734
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "1558": {
      "fn": "ERC20._transfer",
      "offset": [
        7753,
        7776
      ],
      "op": "DUP2",
      "path": "22",
      "statement": 24
    },
    "1559": {
      "fn": "ERC20._transfer",
      "offset": [
        7753,
        7776
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1560": {
      "fn": "ERC20._transfer",
      "offset": [
        7753,
        7776
      ],
      "op": "LT",
      "path": "22"
    },
    "1561": {
      "branch": 34,
      "fn": "ERC20._transfer",
      "offset": [
        7753,
        7776
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "1562": {
      "fn": "ERC20._transfer",
      "offset": [
        7745,
        7819
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x674"
    },
    "1565": {
      "branch": 34,
      "fn": "ERC20._transfer",
      "offset": [
        7745,
        7819
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "1566": {
      "fn": "ERC20._transfer",
      "offset": [
        7745,
        7819
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "1568": {
      "fn": "ERC20._transfer",
      "offset": [
        7745,
        7819
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "1569": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1573": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1575": {
      "op": "SHL"
    },
    "1576": {
      "fn": "ERC20._transfer",
      "offset": [
        7745,
        7819
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1577": {
      "fn": "ERC20._transfer",
      "offset": [
        7745,
        7819
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1578": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1580": {
      "fn": "ERC20._transfer",
      "offset": [
        7745,
        7819
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "1582": {
      "fn": "ERC20._transfer",
      "offset": [
        7745,
        7819
      ],
      "op": "DUP3",
      "path": "22"
    },
    "1583": {
      "fn": "ERC20._transfer",
      "offset": [
        7745,
        7819
      ],
      "op": "ADD",
      "path": "22"
    },
    "1584": {
      "op": "MSTORE"
    },
    "1585": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "1587": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1589": {
      "op": "DUP3"
    },
    "1590": {
      "op": "ADD"
    },
    "1591": {
      "op": "MSTORE"
    },
    "1592": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E7366657220616D6F756E7420657863656564732062"
    },
    "1625": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1627": {
      "op": "DUP3"
    },
    "1628": {
      "op": "ADD"
    },
    "1629": {
      "op": "MSTORE"
    },
    "1630": {
      "op": "PUSH6",
      "value": "0x616C616E6365"
    },
    "1637": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "1639": {
      "op": "SHL"
    },
    "1640": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1642": {
      "op": "DUP3"
    },
    "1643": {
      "op": "ADD"
    },
    "1644": {
      "op": "MSTORE"
    },
    "1645": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1647": {
      "op": "ADD"
    },
    "1648": {
      "fn": "ERC20._transfer",
      "offset": [
        7745,
        7819
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2FC"
    },
    "1651": {
      "op": "JUMP"
    },
    "1652": {
      "fn": "ERC20._transfer",
      "offset": [
        7745,
        7819
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1653": {
      "fn": "ERC20._transfer",
      "offset": [
        7850,
        7872
      ],
      "op": "PUSH2",
      "path": "22",
      "statement": 25,
      "value": "0x67E"
    },
    "1656": {
      "fn": "ERC20._transfer",
      "offset": [
        7866,
        7872
      ],
      "op": "DUP3",
      "path": "22"
    },
    "1657": {
      "fn": "ERC20._transfer",
      "offset": [
        7850,
        7863
      ],
      "op": "DUP3",
      "path": "22"
    },
    "1658": {
      "fn": "ERC20._transfer",
      "offset": [
        7850,
        7872
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x88B"
    },
    "1661": {
      "fn": "ERC20._transfer",
      "jump": "i",
      "offset": [
        7850,
        7872
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1662": {
      "fn": "ERC20._transfer",
      "offset": [
        7850,
        7872
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1663": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1665": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1667": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1669": {
      "op": "SHL"
    },
    "1670": {
      "op": "SUB"
    },
    "1671": {
      "fn": "ERC20._transfer",
      "offset": [
        7830,
        7847
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1672": {
      "fn": "ERC20._transfer",
      "offset": [
        7830,
        7847
      ],
      "op": "DUP7",
      "path": "22"
    },
    "1673": {
      "fn": "ERC20._transfer",
      "offset": [
        7830,
        7847
      ],
      "op": "AND",
      "path": "22"
    },
    "1674": {
      "fn": "ERC20._transfer",
      "offset": [
        7830,
        7839
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "1676": {
      "fn": "ERC20._transfer",
      "offset": [
        7830,
        7847
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1677": {
      "fn": "ERC20._transfer",
      "offset": [
        7830,
        7847
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1678": {
      "fn": "ERC20._transfer",
      "offset": [
        7830,
        7847
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1679": {
      "fn": "ERC20._transfer",
      "offset": [
        7830,
        7847
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "1681": {
      "fn": "ERC20._transfer",
      "offset": [
        7830,
        7847
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1682": {
      "fn": "ERC20._transfer",
      "offset": [
        7830,
        7847
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1683": {
      "fn": "ERC20._transfer",
      "offset": [
        7830,
        7847
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1684": {
      "fn": "ERC20._transfer",
      "offset": [
        7830,
        7847
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "1686": {
      "fn": "ERC20._transfer",
      "offset": [
        7830,
        7847
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1687": {
      "fn": "ERC20._transfer",
      "offset": [
        7830,
        7847
      ],
      "op": "DUP3",
      "path": "22"
    },
    "1688": {
      "fn": "ERC20._transfer",
      "offset": [
        7830,
        7847
      ],
      "op": "KECCAK256",
      "path": "22"
    },
    "1689": {
      "fn": "ERC20._transfer",
      "offset": [
        7830,
        7872
      ],
      "op": "SWAP4",
      "path": "22"
    },
    "1690": {
      "fn": "ERC20._transfer",
      "offset": [
        7830,
        7872
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1691": {
      "fn": "ERC20._transfer",
      "offset": [
        7830,
        7872
      ],
      "op": "SWAP4",
      "path": "22"
    },
    "1692": {
      "fn": "ERC20._transfer",
      "offset": [
        7830,
        7872
      ],
      "op": "SSTORE",
      "path": "22"
    },
    "1693": {
      "fn": "ERC20._transfer",
      "offset": [
        7883,
        7903
      ],
      "op": "SWAP1",
      "path": "22",
      "statement": 26
    },
    "1694": {
      "fn": "ERC20._transfer",
      "offset": [
        7883,
        7903
      ],
      "op": "DUP6",
      "path": "22"
    },
    "1695": {
      "fn": "ERC20._transfer",
      "offset": [
        7883,
        7903
      ],
      "op": "AND",
      "path": "22"
    },
    "1696": {
      "fn": "ERC20._transfer",
      "offset": [
        7883,
        7903
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1697": {
      "fn": "ERC20._transfer",
      "offset": [
        7883,
        7903
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1698": {
      "fn": "ERC20._transfer",
      "offset": [
        7883,
        7903
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1699": {
      "fn": "ERC20._transfer",
      "offset": [
        7883,
        7903
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1700": {
      "fn": "ERC20._transfer",
      "offset": [
        7883,
        7903
      ],
      "op": "KECCAK256",
      "path": "22"
    },
    "1701": {
      "fn": "ERC20._transfer",
      "offset": [
        7883,
        7913
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1702": {
      "fn": "ERC20._transfer",
      "offset": [
        7883,
        7913
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "1703": {
      "fn": "ERC20._transfer",
      "offset": [
        7907,
        7913
      ],
      "op": "DUP5",
      "path": "22"
    },
    "1704": {
      "fn": "ERC20._transfer",
      "offset": [
        7907,
        7913
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "1705": {
      "fn": "ERC20._transfer",
      "offset": [
        7830,
        7839
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1706": {
      "fn": "ERC20._transfer",
      "offset": [
        7883,
        7913
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x6B4"
    },
    "1709": {
      "fn": "ERC20._transfer",
      "offset": [
        7883,
        7913
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1710": {
      "fn": "ERC20._transfer",
      "offset": [
        7907,
        7913
      ],
      "op": "DUP5",
      "path": "22"
    },
    "1711": {
      "fn": "ERC20._transfer",
      "offset": [
        7907,
        7913
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1712": {
      "fn": "ERC20._transfer",
      "offset": [
        7883,
        7913
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x8A2"
    },
    "1715": {
      "fn": "ERC20._transfer",
      "jump": "i",
      "offset": [
        7883,
        7913
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1716": {
      "fn": "ERC20._transfer",
      "offset": [
        7883,
        7913
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1717": {
      "fn": "ERC20._transfer",
      "offset": [
        7883,
        7913
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "1718": {
      "fn": "ERC20._transfer",
      "offset": [
        7883,
        7913
      ],
      "op": "POP",
      "path": "22"
    },
    "1719": {
      "fn": "ERC20._transfer",
      "offset": [
        7883,
        7913
      ],
      "op": "POP",
      "path": "22"
    },
    "1720": {
      "fn": "ERC20._transfer",
      "offset": [
        7883,
        7913
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1721": {
      "fn": "ERC20._transfer",
      "offset": [
        7883,
        7913
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1722": {
      "fn": "ERC20._transfer",
      "offset": [
        7883,
        7913
      ],
      "op": "SSTORE",
      "path": "22"
    },
    "1723": {
      "fn": "ERC20._transfer",
      "offset": [
        7883,
        7913
      ],
      "op": "POP",
      "path": "22"
    },
    "1724": {
      "fn": "ERC20._transfer",
      "offset": [
        7948,
        7957
      ],
      "op": "DUP3",
      "path": "22",
      "statement": 27
    },
    "1725": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1727": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1729": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1731": {
      "op": "SHL"
    },
    "1732": {
      "op": "SUB"
    },
    "1733": {
      "fn": "ERC20._transfer",
      "offset": [
        7931,
        7966
      ],
      "op": "AND",
      "path": "22"
    },
    "1734": {
      "fn": "ERC20._transfer",
      "offset": [
        7940,
        7946
      ],
      "op": "DUP5",
      "path": "22"
    },
    "1735": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1737": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1739": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1741": {
      "op": "SHL"
    },
    "1742": {
      "op": "SUB"
    },
    "1743": {
      "fn": "ERC20._transfer",
      "offset": [
        7931,
        7966
      ],
      "op": "AND",
      "path": "22"
    },
    "1744": {
      "fn": "ERC20._transfer",
      "offset": [
        7931,
        7966
      ],
      "op": "PUSH32",
      "path": "22",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "1777": {
      "fn": "ERC20._transfer",
      "offset": [
        7959,
        7965
      ],
      "op": "DUP5",
      "path": "22"
    },
    "1778": {
      "fn": "ERC20._transfer",
      "offset": [
        7931,
        7966
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "1780": {
      "fn": "ERC20._transfer",
      "offset": [
        7931,
        7966
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "1781": {
      "fn": "ERC20._transfer",
      "offset": [
        7931,
        7966
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x700"
    },
    "1784": {
      "fn": "ERC20._transfer",
      "offset": [
        7931,
        7966
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "1785": {
      "op": "DUP2"
    },
    "1786": {
      "op": "MSTORE"
    },
    "1787": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1789": {
      "op": "ADD"
    },
    "1790": {
      "op": "SWAP1"
    },
    "1791": {
      "op": "JUMP"
    },
    "1792": {
      "fn": "ERC20._transfer",
      "offset": [
        7931,
        7966
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1793": {
      "fn": "ERC20._transfer",
      "offset": [
        7931,
        7966
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "1795": {
      "fn": "ERC20._transfer",
      "offset": [
        7931,
        7966
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "1796": {
      "fn": "ERC20._transfer",
      "offset": [
        7931,
        7966
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1797": {
      "fn": "ERC20._transfer",
      "offset": [
        7931,
        7966
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "1798": {
      "fn": "ERC20._transfer",
      "offset": [
        7931,
        7966
      ],
      "op": "SUB",
      "path": "22"
    },
    "1799": {
      "fn": "ERC20._transfer",
      "offset": [
        7931,
        7966
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1800": {
      "fn": "ERC20._transfer",
      "offset": [
        7931,
        7966
      ],
      "op": "LOG3",
      "path": "22"
    },
    "1801": {
      "fn": "ERC20._transfer",
      "offset": [
        7457,
        7974
      ],
      "op": "POP",
      "path": "22"
    },
    "1802": {
      "fn": "ERC20._transfer",
      "offset": [
        7370,
        7974
      ],
      "op": "POP",
      "path": "22"
    },
    "1803": {
      "fn": "ERC20._transfer",
      "offset": [
        7370,
        7974
      ],
      "op": "POP",
      "path": "22"
    },
    "1804": {
      "fn": "ERC20._transfer",
      "offset": [
        7370,
        7974
      ],
      "op": "POP",
      "path": "22"
    },
    "1805": {
      "fn": "ERC20._transfer",
      "jump": "o",
      "offset": [
        7370,
        7974
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1806": {
      "op": "JUMPDEST"
    },
    "1807": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1809": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1811": {
      "op": "DUP1"
    },
    "1812": {
      "op": "DUP4"
    },
    "1813": {
      "op": "MSTORE"
    },
    "1814": {
      "op": "DUP4"
    },
    "1815": {
      "op": "MLOAD"
    },
    "1816": {
      "op": "DUP1"
    },
    "1817": {
      "op": "DUP3"
    },
    "1818": {
      "op": "DUP6"
    },
    "1819": {
      "op": "ADD"
    },
    "1820": {
      "op": "MSTORE"
    },
    "1821": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1823": {
      "op": "JUMPDEST"
    },
    "1824": {
      "op": "DUP2"
    },
    "1825": {
      "op": "DUP2"
    },
    "1826": {
      "op": "LT"
    },
    "1827": {
      "op": "ISZERO"
    },
    "1828": {
      "op": "PUSH2",
      "value": "0x73B"
    },
    "1831": {
      "op": "JUMPI"
    },
    "1832": {
      "op": "DUP6"
    },
    "1833": {
      "op": "DUP2"
    },
    "1834": {
      "op": "ADD"
    },
    "1835": {
      "op": "DUP4"
    },
    "1836": {
      "op": "ADD"
    },
    "1837": {
      "op": "MLOAD"
    },
    "1838": {
      "op": "DUP6"
    },
    "1839": {
      "op": "DUP3"
    },
    "1840": {
      "op": "ADD"
    },
    "1841": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1843": {
      "op": "ADD"
    },
    "1844": {
      "op": "MSTORE"
    },
    "1845": {
      "op": "DUP3"
    },
    "1846": {
      "op": "ADD"
    },
    "1847": {
      "op": "PUSH2",
      "value": "0x71F"
    },
    "1850": {
      "op": "JUMP"
    },
    "1851": {
      "op": "JUMPDEST"
    },
    "1852": {
      "op": "DUP2"
    },
    "1853": {
      "op": "DUP2"
    },
    "1854": {
      "op": "GT"
    },
    "1855": {
      "op": "ISZERO"
    },
    "1856": {
      "op": "PUSH2",
      "value": "0x74D"
    },
    "1859": {
      "op": "JUMPI"
    },
    "1860": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1862": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1864": {
      "op": "DUP4"
    },
    "1865": {
      "op": "DUP8"
    },
    "1866": {
      "op": "ADD"
    },
    "1867": {
      "op": "ADD"
    },
    "1868": {
      "op": "MSTORE"
    },
    "1869": {
      "op": "JUMPDEST"
    },
    "1870": {
      "op": "POP"
    },
    "1871": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1873": {
      "op": "ADD"
    },
    "1874": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1876": {
      "op": "NOT"
    },
    "1877": {
      "op": "AND"
    },
    "1878": {
      "op": "SWAP3"
    },
    "1879": {
      "op": "SWAP1"
    },
    "1880": {
      "op": "SWAP3"
    },
    "1881": {
      "op": "ADD"
    },
    "1882": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1884": {
      "op": "ADD"
    },
    "1885": {
      "op": "SWAP4"
    },
    "1886": {
      "op": "SWAP3"
    },
    "1887": {
      "op": "POP"
    },
    "1888": {
      "op": "POP"
    },
    "1889": {
      "op": "POP"
    },
    "1890": {
      "jump": "o",
      "op": "JUMP"
    },
    "1891": {
      "op": "JUMPDEST"
    },
    "1892": {
      "op": "DUP1"
    },
    "1893": {
      "op": "CALLDATALOAD"
    },
    "1894": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1896": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1898": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1900": {
      "op": "SHL"
    },
    "1901": {
      "op": "SUB"
    },
    "1902": {
      "op": "DUP2"
    },
    "1903": {
      "op": "AND"
    },
    "1904": {
      "op": "DUP2"
    },
    "1905": {
      "op": "EQ"
    },
    "1906": {
      "op": "PUSH2",
      "value": "0x77A"
    },
    "1909": {
      "op": "JUMPI"
    },
    "1910": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1912": {
      "op": "DUP1"
    },
    "1913": {
      "op": "REVERT"
    },
    "1914": {
      "op": "JUMPDEST"
    },
    "1915": {
      "op": "SWAP2"
    },
    "1916": {
      "op": "SWAP1"
    },
    "1917": {
      "op": "POP"
    },
    "1918": {
      "jump": "o",
      "op": "JUMP"
    },
    "1919": {
      "op": "JUMPDEST"
    },
    "1920": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1922": {
      "op": "DUP1"
    },
    "1923": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1925": {
      "op": "DUP4"
    },
    "1926": {
      "op": "DUP6"
    },
    "1927": {
      "op": "SUB"
    },
    "1928": {
      "op": "SLT"
    },
    "1929": {
      "op": "ISZERO"
    },
    "1930": {
      "op": "PUSH2",
      "value": "0x792"
    },
    "1933": {
      "op": "JUMPI"
    },
    "1934": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1936": {
      "op": "DUP1"
    },
    "1937": {
      "op": "REVERT"
    },
    "1938": {
      "op": "JUMPDEST"
    },
    "1939": {
      "op": "PUSH2",
      "value": "0x79B"
    },
    "1942": {
      "op": "DUP4"
    },
    "1943": {
      "op": "PUSH2",
      "value": "0x763"
    },
    "1946": {
      "jump": "i",
      "op": "JUMP"
    },
    "1947": {
      "op": "JUMPDEST"
    },
    "1948": {
      "op": "SWAP5"
    },
    "1949": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1951": {
      "op": "SWAP4"
    },
    "1952": {
      "op": "SWAP1"
    },
    "1953": {
      "op": "SWAP4"
    },
    "1954": {
      "op": "ADD"
    },
    "1955": {
      "op": "CALLDATALOAD"
    },
    "1956": {
      "op": "SWAP4"
    },
    "1957": {
      "op": "POP"
    },
    "1958": {
      "op": "POP"
    },
    "1959": {
      "op": "POP"
    },
    "1960": {
      "jump": "o",
      "op": "JUMP"
    },
    "1961": {
      "op": "JUMPDEST"
    },
    "1962": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1964": {
      "op": "DUP1"
    },
    "1965": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1967": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1969": {
      "op": "DUP5"
    },
    "1970": {
      "op": "DUP7"
    },
    "1971": {
      "op": "SUB"
    },
    "1972": {
      "op": "SLT"
    },
    "1973": {
      "op": "ISZERO"
    },
    "1974": {
      "op": "PUSH2",
      "value": "0x7BE"
    },
    "1977": {
      "op": "JUMPI"
    },
    "1978": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1980": {
      "op": "DUP1"
    },
    "1981": {
      "op": "REVERT"
    },
    "1982": {
      "op": "JUMPDEST"
    },
    "1983": {
      "op": "PUSH2",
      "value": "0x7C7"
    },
    "1986": {
      "op": "DUP5"
    },
    "1987": {
      "op": "PUSH2",
      "value": "0x763"
    },
    "1990": {
      "jump": "i",
      "op": "JUMP"
    },
    "1991": {
      "op": "JUMPDEST"
    },
    "1992": {
      "op": "SWAP3"
    },
    "1993": {
      "op": "POP"
    },
    "1994": {
      "op": "PUSH2",
      "value": "0x7D5"
    },
    "1997": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1999": {
      "op": "DUP6"
    },
    "2000": {
      "op": "ADD"
    },
    "2001": {
      "op": "PUSH2",
      "value": "0x763"
    },
    "2004": {
      "jump": "i",
      "op": "JUMP"
    },
    "2005": {
      "op": "JUMPDEST"
    },
    "2006": {
      "op": "SWAP2"
    },
    "2007": {
      "op": "POP"
    },
    "2008": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2010": {
      "op": "DUP5"
    },
    "2011": {
      "op": "ADD"
    },
    "2012": {
      "op": "CALLDATALOAD"
    },
    "2013": {
      "op": "SWAP1"
    },
    "2014": {
      "op": "POP"
    },
    "2015": {
      "op": "SWAP3"
    },
    "2016": {
      "op": "POP"
    },
    "2017": {
      "op": "SWAP3"
    },
    "2018": {
      "op": "POP"
    },
    "2019": {
      "op": "SWAP3"
    },
    "2020": {
      "jump": "o",
      "op": "JUMP"
    },
    "2021": {
      "op": "JUMPDEST"
    },
    "2022": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2024": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2026": {
      "op": "DUP3"
    },
    "2027": {
      "op": "DUP5"
    },
    "2028": {
      "op": "SUB"
    },
    "2029": {
      "op": "SLT"
    },
    "2030": {
      "op": "ISZERO"
    },
    "2031": {
      "op": "PUSH2",
      "value": "0x7F7"
    },
    "2034": {
      "op": "JUMPI"
    },
    "2035": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2037": {
      "op": "DUP1"
    },
    "2038": {
      "op": "REVERT"
    },
    "2039": {
      "op": "JUMPDEST"
    },
    "2040": {
      "op": "PUSH2",
      "value": "0x800"
    },
    "2043": {
      "op": "DUP3"
    },
    "2044": {
      "op": "PUSH2",
      "value": "0x763"
    },
    "2047": {
      "jump": "i",
      "op": "JUMP"
    },
    "2048": {
      "op": "JUMPDEST"
    },
    "2049": {
      "op": "SWAP4"
    },
    "2050": {
      "op": "SWAP3"
    },
    "2051": {
      "op": "POP"
    },
    "2052": {
      "op": "POP"
    },
    "2053": {
      "op": "POP"
    },
    "2054": {
      "jump": "o",
      "op": "JUMP"
    },
    "2055": {
      "op": "JUMPDEST"
    },
    "2056": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2058": {
      "op": "DUP1"
    },
    "2059": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2061": {
      "op": "DUP4"
    },
    "2062": {
      "op": "DUP6"
    },
    "2063": {
      "op": "SUB"
    },
    "2064": {
      "op": "SLT"
    },
    "2065": {
      "op": "ISZERO"
    },
    "2066": {
      "op": "PUSH2",
      "value": "0x81A"
    },
    "2069": {
      "op": "JUMPI"
    },
    "2070": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2072": {
      "op": "DUP1"
    },
    "2073": {
      "op": "REVERT"
    },
    "2074": {
      "op": "JUMPDEST"
    },
    "2075": {
      "op": "PUSH2",
      "value": "0x823"
    },
    "2078": {
      "op": "DUP4"
    },
    "2079": {
      "op": "PUSH2",
      "value": "0x763"
    },
    "2082": {
      "jump": "i",
      "op": "JUMP"
    },
    "2083": {
      "op": "JUMPDEST"
    },
    "2084": {
      "op": "SWAP2"
    },
    "2085": {
      "op": "POP"
    },
    "2086": {
      "op": "PUSH2",
      "value": "0x831"
    },
    "2089": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2091": {
      "op": "DUP5"
    },
    "2092": {
      "op": "ADD"
    },
    "2093": {
      "op": "PUSH2",
      "value": "0x763"
    },
    "2096": {
      "jump": "i",
      "op": "JUMP"
    },
    "2097": {
      "op": "JUMPDEST"
    },
    "2098": {
      "op": "SWAP1"
    },
    "2099": {
      "op": "POP"
    },
    "2100": {
      "op": "SWAP3"
    },
    "2101": {
      "op": "POP"
    },
    "2102": {
      "op": "SWAP3"
    },
    "2103": {
      "op": "SWAP1"
    },
    "2104": {
      "op": "POP"
    },
    "2105": {
      "jump": "o",
      "op": "JUMP"
    },
    "2106": {
      "op": "JUMPDEST"
    },
    "2107": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2109": {
      "op": "DUP2"
    },
    "2110": {
      "op": "DUP2"
    },
    "2111": {
      "op": "SHR"
    },
    "2112": {
      "op": "SWAP1"
    },
    "2113": {
      "op": "DUP3"
    },
    "2114": {
      "op": "AND"
    },
    "2115": {
      "op": "DUP1"
    },
    "2116": {
      "op": "PUSH2",
      "value": "0x84E"
    },
    "2119": {
      "op": "JUMPI"
    },
    "2120": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "2122": {
      "op": "DUP3"
    },
    "2123": {
      "op": "AND"
    },
    "2124": {
      "op": "SWAP2"
    },
    "2125": {
      "op": "POP"
    },
    "2126": {
      "op": "JUMPDEST"
    },
    "2127": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2129": {
      "op": "DUP3"
    },
    "2130": {
      "op": "LT"
    },
    "2131": {
      "op": "DUP2"
    },
    "2132": {
      "op": "EQ"
    },
    "2133": {
      "op": "ISZERO"
    },
    "2134": {
      "op": "PUSH2",
      "value": "0x86F"
    },
    "2137": {
      "op": "JUMPI"
    },
    "2138": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2143": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2145": {
      "op": "SHL"
    },
    "2146": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2148": {
      "op": "MSTORE"
    },
    "2149": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "2151": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2153": {
      "op": "MSTORE"
    },
    "2154": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2156": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2158": {
      "op": "REVERT"
    },
    "2159": {
      "op": "JUMPDEST"
    },
    "2160": {
      "op": "POP"
    },
    "2161": {
      "op": "SWAP2"
    },
    "2162": {
      "op": "SWAP1"
    },
    "2163": {
      "op": "POP"
    },
    "2164": {
      "jump": "o",
      "op": "JUMP"
    },
    "2165": {
      "op": "JUMPDEST"
    },
    "2166": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2171": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2173": {
      "op": "SHL"
    },
    "2174": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2176": {
      "op": "MSTORE"
    },
    "2177": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "2179": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2181": {
      "op": "MSTORE"
    },
    "2182": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2184": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2186": {
      "op": "REVERT"
    },
    "2187": {
      "op": "JUMPDEST"
    },
    "2188": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2190": {
      "op": "DUP3"
    },
    "2191": {
      "op": "DUP3"
    },
    "2192": {
      "op": "LT"
    },
    "2193": {
      "op": "ISZERO"
    },
    "2194": {
      "op": "PUSH2",
      "value": "0x89D"
    },
    "2197": {
      "op": "JUMPI"
    },
    "2198": {
      "op": "PUSH2",
      "value": "0x89D"
    },
    "2201": {
      "op": "PUSH2",
      "value": "0x875"
    },
    "2204": {
      "jump": "i",
      "op": "JUMP"
    },
    "2205": {
      "op": "JUMPDEST"
    },
    "2206": {
      "op": "POP"
    },
    "2207": {
      "op": "SUB"
    },
    "2208": {
      "op": "SWAP1"
    },
    "2209": {
      "jump": "o",
      "op": "JUMP"
    },
    "2210": {
      "op": "JUMPDEST"
    },
    "2211": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2213": {
      "op": "DUP3"
    },
    "2214": {
      "op": "NOT"
    },
    "2215": {
      "op": "DUP3"
    },
    "2216": {
      "op": "GT"
    },
    "2217": {
      "op": "ISZERO"
    },
    "2218": {
      "op": "PUSH2",
      "value": "0x8B5"
    },
    "2221": {
      "op": "JUMPI"
    },
    "2222": {
      "op": "PUSH2",
      "value": "0x8B5"
    },
    "2225": {
      "op": "PUSH2",
      "value": "0x875"
    },
    "2228": {
      "jump": "i",
      "op": "JUMP"
    },
    "2229": {
      "op": "JUMPDEST"
    },
    "2230": {
      "op": "POP"
    },
    "2231": {
      "op": "ADD"
    },
    "2232": {
      "op": "SWAP1"
    },
    "2233": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "7123e8ff81652a45b684870ffff7b08a3776de02",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"./IERC20.sol\";\nimport \"./extensions/IERC20Metadata.sol\";\nimport \"../../utils/Context.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * We have followed general OpenZeppelin guidelines: functions revert instead\n * of returning `false` on failure. This behavior is nonetheless conventional\n * and does not conflict with the expectations of ERC20 applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20 is Context, IERC20, IERC20Metadata {\n    mapping (address => uint256) private _balances;\n\n    mapping (address => mapping (address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * The defaut value of {decimals} is 18. To select a different value for\n     * {decimals} you should overload it.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor (string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5,05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\n     * overridden;\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual override returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `recipient` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\n        _transfer(_msgSender(), recipient, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        _approve(_msgSender(), spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * Requirements:\n     *\n     * - `sender` and `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``sender``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {\n        _transfer(sender, recipient, amount);\n\n        uint256 currentAllowance = _allowances[sender][_msgSender()];\n        require(currentAllowance >= amount, \"ERC20: transfer amount exceeds allowance\");\n        _approve(sender, _msgSender(), currentAllowance - amount);\n\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender] + addedValue);\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        uint256 currentAllowance = _allowances[_msgSender()][spender];\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\n        _approve(_msgSender(), spender, currentAllowance - subtractedValue);\n\n        return true;\n    }\n\n    /**\n     * @dev Moves tokens `amount` from `sender` to `recipient`.\n     *\n     * This is internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `sender` cannot be the zero address.\n     * - `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `amount`.\n     */\n    function _transfer(address sender, address recipient, uint256 amount) internal virtual {\n        require(sender != address(0), \"ERC20: transfer from the zero address\");\n        require(recipient != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(sender, recipient, amount);\n\n        uint256 senderBalance = _balances[sender];\n        require(senderBalance >= amount, \"ERC20: transfer amount exceeds balance\");\n        _balances[sender] = senderBalance - amount;\n        _balances[recipient] += amount;\n\n        emit Transfer(sender, recipient, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply += amount;\n        _balances[account] += amount;\n        emit Transfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        uint256 accountBalance = _balances[account];\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\n        _balances[account] = accountBalance - amount;\n        _totalSupply -= amount;\n\n        emit Transfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be to transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual { }\n}\n",
  "sourceMap": "1353:9550:22:-:0;;;1949:117;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2017:13;;;;:5;;:13;;;;;:::i;:::-;-1:-1:-1;2041:17:22;;;;:7;;:17;;;;;:::i;:::-;;1949:117;;1353:9550;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1353:9550:22;;;-1:-1:-1;1353:9550:22;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:127:39;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:885;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:39;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:39;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;930:2;927:1;924:9;921:80;;;989:1;984:2;979;971:6;967:15;963:24;956:35;921:80;1019:6;146:885;-1:-1:-1;;;;;;146:885:39:o;1036:562::-;1135:6;1143;1196:2;1184:9;1175:7;1171:23;1167:32;1164:52;;;1212:1;1209;1202:12;1164:52;1239:16;;-1:-1:-1;;;;;1304:14:39;;;1301:34;;;1331:1;1328;1321:12;1301:34;1354:61;1407:7;1398:6;1387:9;1383:22;1354:61;:::i;:::-;1344:71;;1461:2;1450:9;1446:18;1440:25;1424:41;;1490:2;1480:8;1477:16;1474:36;;;1506:1;1503;1496:12;1474:36;;1529:63;1584:7;1573:8;1562:9;1558:24;1529:63;:::i;:::-;1519:73;;;1036:562;;;;;:::o;1603:380::-;1682:1;1678:12;;;;1725;;;1746:61;;1800:4;1792:6;1788:17;1778:27;;1746:61;1853:2;1845:6;1842:14;1822:18;1819:38;1816:161;;;1899:10;1894:3;1890:20;1887:1;1880:31;1934:4;1931:1;1924:15;1962:4;1959:1;1952:15;1816:161;;1603:380;;;:::o;:::-;1353:9550:22;;;;;;",
  "sourcePath": "openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
  "type": "contract"
}