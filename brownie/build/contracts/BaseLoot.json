{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "values",
          "type": "uint256[]"
        }
      ],
      "name": "TransferBatch",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "TransferSingle",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "value",
          "type": "string"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "URI",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_hero",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_hId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_target",
          "type": "uint256"
        },
        {
          "internalType": "int256",
          "name": "_how",
          "type": "int256"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "activateAO",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "intel",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "agi",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "strn",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "effect",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "talent",
                  "type": "uint256"
                }
              ],
              "internalType": "struct HeroTalents",
              "name": "talent",
              "type": "tuple"
            },
            {
              "internalType": "uint256",
              "name": "fizzle",
              "type": "uint256"
            }
          ],
          "internalType": "struct Stats",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_hero",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_hId",
          "type": "uint256"
        }
      ],
      "name": "activateIS",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract Hero",
          "name": "hero",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_hId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_target",
          "type": "uint256"
        }
      ],
      "name": "addLoot",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "addonPay",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "accounts",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        }
      ],
      "name": "balanceOfBatch",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "values",
          "type": "uint256[]"
        }
      ],
      "name": "burnBatch",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_sender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_what",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "burnFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_hero",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_hId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_target",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_charm",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "ccAmount",
          "type": "uint256"
        }
      ],
      "name": "castCB",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_hero",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_hId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_target",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "castDF",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_hero",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_hId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "oldToken",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "ccAmount",
          "type": "uint256"
        }
      ],
      "name": "castGW",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_hero",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_hId",
          "type": "uint256"
        }
      ],
      "name": "castIS",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "castLS",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_hero",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_hId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_target",
          "type": "uint256"
        }
      ],
      "name": "castRES",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_addon",
          "type": "address"
        }
      ],
      "name": "getAddon",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_cCA",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_cultureCoin",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_baseSpells",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_uri",
          "type": "string"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isAddon",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_hero",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_hId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_target",
          "type": "uint256"
        }
      ],
      "name": "loot",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_hero",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_hId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_target",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "lootTo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "amounts",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeBatchTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_addon",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_onOff",
          "type": "bool"
        }
      ],
      "name": "setAddon",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_hero",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_hId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_target",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_flag",
          "type": "bool"
        }
      ],
      "name": "setLooted",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "uri",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "1": "contracts/Base.sol",
    "13": "contracts/Hero.sol",
    "15": "contracts/Legion.sol",
    "17": "contracts/MyItems.sol",
    "2": "contracts/BaseLoot.sol",
    "29": "contracts/send_receive.sol",
    "3": "contracts/BaseSpells.sol",
    "30": "openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
    "31": "openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol",
    "32": "openzeppelin-contracts-upgradeable/contracts/token/ERC1155/ERC1155Upgradeable.sol",
    "34": "openzeppelin-contracts-upgradeable/contracts/token/ERC1155/IERC1155Upgradeable.sol",
    "35": "openzeppelin-contracts-upgradeable/contracts/token/ERC1155/extensions/ERC1155BurnableUpgradeable.sol",
    "36": "openzeppelin-contracts-upgradeable/contracts/token/ERC1155/extensions/IERC1155MetadataURIUpgradeable.sol",
    "4": "contracts/BookTradable.sol",
    "42": "openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol",
    "43": "openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol",
    "44": "openzeppelin-contracts-upgradeable/contracts/utils/introspection/IERC165Upgradeable.sol",
    "5": "contracts/Constants.sol",
    "53": "openzeppelin-solidity/contracts/token/ERC20/IERC20.sol",
    "56": "openzeppelin-solidity/contracts/token/ERC20/utils/SafeERC20.sol",
    "6": "contracts/CultureCoin.sol",
    "63": "openzeppelin-solidity/contracts/utils/Address.sol",
    "7": "contracts/CultureCoinWrapper.sol"
  },
  "ast": {
    "absolutePath": "contracts/BaseLoot.sol",
    "exportedSymbols": {
      "ANCESTRAL_KNOWLEDGE": [
        16543
      ],
      "ANGUISH": [
        16507
      ],
      "ARCANE_CRYSTAL": [
        16435
      ],
      "ARCANE_ORB": [
        16423
      ],
      "ARCANE_POWER": [
        16429
      ],
      "ARCANIST": [
        16432
      ],
      "ARIFACT": [
        16438
      ],
      "Address": [
        22639
      ],
      "AddressUpgradeable": [
        23309
      ],
      "BLOODBEAST": [
        16516
      ],
      "BLOODLUST": [
        16549
      ],
      "Base": [
        16320
      ],
      "BaseLoot": [
        1761
      ],
      "BaseSpells": [
        4161
      ],
      "BookRegistry": [
        5689
      ],
      "BookTradable": [
        4961
      ],
      "CHARM_BEAST": [
        16465
      ],
      "CUBE_DUST": [
        16567
      ],
      "CUBE_TIME": [
        16570
      ],
      "Context": [
        22687
      ],
      "ContextMixin": [
        17925
      ],
      "ContextUpgradeable": [
        23454
      ],
      "CultureCoin": [
        16262
      ],
      "CultureCoinWrapper": [
        5322
      ],
      "DAEDALUS": [
        16546
      ],
      "DEATHKNIGHT": [
        16480
      ],
      "DEATHWISH": [
        16495
      ],
      "DEMONOLOGIST": [
        16504
      ],
      "DOT_SLOTS": [
        16624
      ],
      "DRUID": [
        16462
      ],
      "DRUID_FIRE": [
        16441
      ],
      "EIP712Base": [
        22803
      ],
      "EQUP_SLOTS": [
        16585
      ],
      "ERC1155BurnableUpgradeable": [
        22343
      ],
      "ERC1155Upgradeable": [
        22254
      ],
      "ERC165": [
        22970
      ],
      "ERC165Upgradeable": [
        23676
      ],
      "ERC20": [
        17823
      ],
      "ERC20Burnable": [
        17884
      ],
      "ERC20BurnableUpgradeable": [
        21009
      ],
      "ERC20Upgradeable": [
        20945
      ],
      "ERC721": [
        19052
      ],
      "ERC721BookTradable": [
        5873
      ],
      "ERC721Enumerable": [
        19390
      ],
      "FIRE": [
        16594
      ],
      "FIZZLE_DEAD": [
        16636
      ],
      "FIZZLE_FIRE_WORKS": [
        16642
      ],
      "FIZZLE_NOT_IN_RANGE": [
        16630
      ],
      "FIZZLE_NOT_OWNER": [
        16627
      ],
      "FIZZLE_NO_BUFF": [
        16645
      ],
      "FIZZLE_NO_LOS": [
        16633
      ],
      "FIZZLE_TAR_DEAD": [
        16639
      ],
      "FLAG_IS_ENEMY": [
        16579
      ],
      "FLAG_IS_NPC": [
        16573
      ],
      "FLAG_IS_SUMMONED": [
        16576
      ],
      "GHOST_WOLF": [
        16540
      ],
      "GUARDIAN": [
        16474
      ],
      "HEAL": [
        16561
      ],
      "HEAL_BY_PERCENT": [
        16618
      ],
      "HEAL_PET": [
        16528
      ],
      "HOT_SLOTS": [
        16621
      ],
      "HPSummary": [
        16400
      ],
      "HUNTER": [
        16531
      ],
      "Hero": [
        8208
      ],
      "HeroItem": [
        16387
      ],
      "HeroTalents": [
        16420
      ],
      "HeroXYZ": [
        16364
      ],
      "HotsNDots": [
        16665
      ],
      "ICE": [
        16600
      ],
      "IERC1155MetadataURIUpgradeable": [
        23632
      ],
      "IERC1155Receiver": [
        19968
      ],
      "IERC1155ReceiverUpgradeable": [
        23495
      ],
      "IERC1155Upgradeable": [
        23617
      ],
      "IERC165": [
        23013
      ],
      "IERC165Upgradeable": [
        24117
      ],
      "IERC20": [
        16751
      ],
      "IERC20Metadata": [
        22664
      ],
      "IERC20MetadataUpgradeable": [
        23412
      ],
      "IERC20Upgradeable": [
        23387
      ],
      "IERC721": [
        22919
      ],
      "IERC721Enumerable": [
        23001
      ],
      "IERC721Metadata": [
        22946
      ],
      "IERC721Receiver": [
        20037
      ],
      "IRON_IDOL": [
        16483
      ],
      "IRON_SKIN": [
        16489
      ],
      "Initializable": [
        20334
      ],
      "LEGION_LEGOS": [
        16654
      ],
      "LEGO_ACTIVATE": [
        16651
      ],
      "LEGO_CAST": [
        16648
      ],
      "LIFE_STEAL": [
        16513
      ],
      "L_IRON_SKIN_HEALS": [
        16671
      ],
      "Legion": [
        20019
      ],
      "LiveTradables": [
        19920
      ],
      "MANGLE": [
        16459
      ],
      "MAXUINT": [
        16582
      ],
      "MAX_CUBE_SLOTS": [
        16588
      ],
      "META": [
        16606
      ],
      "MORTUARY": [
        16486
      ],
      "MyItems": [
        9276
      ],
      "NativeMetaTransaction": [
        18124
      ],
      "Ownable": [
        18234
      ],
      "OwnableDelegateBook": [
        5683
      ],
      "PALADIN": [
        16564
      ],
      "PHYS": [
        16612
      ],
      "PRIEST": [
        16426
      ],
      "PRINCESS": [
        16468
      ],
      "PowSum": [
        16417
      ],
      "RANGER": [
        16537
      ],
      "REGENERATION": [
        16453
      ],
      "RESURECTION": [
        16555
      ],
      "ROGUE": [
        16498
      ],
      "Receiver": [
        19927
      ],
      "ReentrancyGuard": [
        16302
      ],
      "ReentrancyGuardUpgradeable": [
        20260
      ],
      "SEEDLING": [
        16450
      ],
      "SELF_RES": [
        16558
      ],
      "SHADOW_BOLT": [
        16525
      ],
      "SHADOW_PACT": [
        16501
      ],
      "SHAMAN": [
        16552
      ],
      "SHAPESHIFT": [
        16471
      ],
      "STANDARD_METRIC": [
        16510
      ],
      "SUMMON": [
        16519
      ],
      "SafeERC20": [
        16975
      ],
      "SafeMath": [
        19905
      ],
      "Screwdrivers": [
        16353
      ],
      "Stakeable": [
        17316
      ],
      "Stats": [
        16414
      ],
      "Strings": [
        19593
      ],
      "TAUNT": [
        16477
      ],
      "TOTEMIC_INSIGHT": [
        16534
      ],
      "TREE": [
        16456
      ],
      "WARLOCK": [
        16522
      ],
      "WARRIOR": [
        16492
      ],
      "WILD_FIRE": [
        16447
      ],
      "WILD_SPIRIT": [
        16444
      ]
    },
    "id": 1762,
    "license": "UNLICENSED",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 347,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "47:23:2"
      },
      {
        "absolutePath": "contracts/Constants.sol",
        "file": "./Constants.sol",
        "id": 348,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1762,
        "sourceUnit": 16672,
        "src": "72:25:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/Base.sol",
        "file": "./Base.sol",
        "id": 349,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1762,
        "sourceUnit": 16321,
        "src": "98:20:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/BaseSpells.sol",
        "file": "./BaseSpells.sol",
        "id": 350,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1762,
        "sourceUnit": 4162,
        "src": "119:26:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/Hero.sol",
        "file": "./Hero.sol",
        "id": 351,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1762,
        "sourceUnit": 8209,
        "src": "146:20:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/CultureCoin.sol",
        "file": "./CultureCoin.sol",
        "id": 352,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1762,
        "sourceUnit": 16263,
        "src": "167:27:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 353,
              "name": "Base",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 16320,
              "src": "217:4:2"
            },
            "id": 354,
            "nodeType": "InheritanceSpecifier",
            "src": "217:4:2"
          }
        ],
        "canonicalName": "BaseLoot",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1761,
        "linearizedBaseContracts": [
          1761,
          16320,
          19927,
          20260,
          22343,
          22254,
          23632,
          23617,
          23676,
          24117,
          23454,
          20334
        ],
        "name": "BaseLoot",
        "nameLocation": "205:8:2",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 356,
            "mutability": "mutable",
            "name": "cCA",
            "nameLocation": "249:3:2",
            "nodeType": "VariableDeclaration",
            "scope": 1761,
            "src": "233:19:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 355,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "233:7:2",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 358,
            "mutability": "mutable",
            "name": "baseSpells",
            "nameLocation": "278:10:2",
            "nodeType": "VariableDeclaration",
            "scope": 1761,
            "src": "262:26:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 357,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "262:7:2",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 361,
            "mutability": "mutable",
            "name": "CC",
            "nameLocation": "310:2:2",
            "nodeType": "VariableDeclaration",
            "scope": 1761,
            "src": "298:14:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_CultureCoin_$16262",
              "typeString": "contract CultureCoin"
            },
            "typeName": {
              "id": 360,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 359,
                "name": "CultureCoin",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 16262,
                "src": "298:11:2"
              },
              "referencedDeclaration": 16262,
              "src": "298:11:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CultureCoin_$16262",
                "typeString": "contract CultureCoin"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 364,
            "mutability": "mutable",
            "name": "spells",
            "nameLocation": "341:6:2",
            "nodeType": "VariableDeclaration",
            "scope": 1761,
            "src": "322:25:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_BaseSpells_$4161",
              "typeString": "contract BaseSpells"
            },
            "typeName": {
              "id": 363,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 362,
                "name": "BaseSpells",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 4161,
                "src": "322:10:2"
              },
              "referencedDeclaration": 4161,
              "src": "322:10:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BaseSpells_$4161",
                "typeString": "contract BaseSpells"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 370,
            "mutability": "mutable",
            "name": "isLooted",
            "nameLocation": "403:8:2",
            "nodeType": "VariableDeclaration",
            "scope": 1761,
            "src": "350:61:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_bool_$_$",
              "typeString": "mapping(uint256 => mapping(uint256 => bool))"
            },
            "typeName": {
              "id": 369,
              "keyType": {
                "id": 365,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "358:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "350:44:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_bool_$_$",
                "typeString": "mapping(uint256 => mapping(uint256 => bool))"
              },
              "valueType": {
                "id": 368,
                "keyType": {
                  "id": 366,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "377:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "nodeType": "Mapping",
                "src": "369:24:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                  "typeString": "mapping(uint256 => bool)"
                },
                "valueType": {
                  "id": 367,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "388:4:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "functionSelector": "596c6325",
            "id": 374,
            "mutability": "mutable",
            "name": "isAddon",
            "nameLocation": "447:7:2",
            "nodeType": "VariableDeclaration",
            "scope": 1761,
            "src": "415:39:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 373,
              "keyType": {
                "id": 371,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "423:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "415:24:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 372,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "434:4:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 376,
            "mutability": "mutable",
            "name": "_unused",
            "nameLocation": "474:7:2",
            "nodeType": "VariableDeclaration",
            "scope": 1761,
            "src": "458:23:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 375,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "458:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 419,
              "nodeType": "Block",
              "src": "611:301:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 390,
                        "name": "_uri",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 384,
                        "src": "644:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 389,
                      "name": "__ERC1155_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21059,
                      "src": "629:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 391,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "629:20:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 392,
                  "nodeType": "ExpressionStatement",
                  "src": "629:20:2"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 393,
                      "name": "__ERC1155Burnable_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22269,
                      "src": "667:22:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 394,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "667:24:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 395,
                  "nodeType": "ExpressionStatement",
                  "src": "667:24:2"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 396,
                      "name": "__ReentrancyGuard_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20224,
                      "src": "709:22:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 397,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "709:24:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 398,
                  "nodeType": "ExpressionStatement",
                  "src": "709:24:2"
                },
                {
                  "expression": {
                    "id": 401,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 399,
                      "name": "cCA",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 356,
                      "src": "752:3:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 400,
                      "name": "_cCA",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 378,
                      "src": "758:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "752:10:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 402,
                  "nodeType": "ExpressionStatement",
                  "src": "752:10:2"
                },
                {
                  "expression": {
                    "id": 407,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 403,
                      "name": "CC",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 361,
                      "src": "780:2:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_CultureCoin_$16262",
                        "typeString": "contract CultureCoin"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 405,
                          "name": "_cultureCoin",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 380,
                          "src": "797:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 404,
                        "name": "CultureCoin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16262,
                        "src": "785:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_CultureCoin_$16262_$",
                          "typeString": "type(contract CultureCoin)"
                        }
                      },
                      "id": 406,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "785:25:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_CultureCoin_$16262",
                        "typeString": "contract CultureCoin"
                      }
                    },
                    "src": "780:30:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_CultureCoin_$16262",
                      "typeString": "contract CultureCoin"
                    }
                  },
                  "id": 408,
                  "nodeType": "ExpressionStatement",
                  "src": "780:30:2"
                },
                {
                  "expression": {
                    "id": 411,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 409,
                      "name": "baseSpells",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 358,
                      "src": "828:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 410,
                      "name": "_baseSpells",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 382,
                      "src": "841:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "828:24:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 412,
                  "nodeType": "ExpressionStatement",
                  "src": "828:24:2"
                },
                {
                  "expression": {
                    "id": 417,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 413,
                      "name": "spells",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 364,
                      "src": "870:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_BaseSpells_$4161",
                        "typeString": "contract BaseSpells"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 415,
                          "name": "baseSpells",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 358,
                          "src": "890:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 414,
                        "name": "BaseSpells",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4161,
                        "src": "879:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_BaseSpells_$4161_$",
                          "typeString": "type(contract BaseSpells)"
                        }
                      },
                      "id": 416,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "879:22:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_BaseSpells_$4161",
                        "typeString": "contract BaseSpells"
                      }
                    },
                    "src": "870:31:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_BaseSpells_$4161",
                      "typeString": "contract BaseSpells"
                    }
                  },
                  "id": 418,
                  "nodeType": "ExpressionStatement",
                  "src": "870:31:2"
                }
              ]
            },
            "functionSelector": "65e8e4f4",
            "id": 420,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 387,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 386,
                  "name": "initializer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 20308,
                  "src": "599:11:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "599:11:2"
              }
            ],
            "name": "initialize",
            "nameLocation": "501:10:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 385,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 378,
                  "mutability": "mutable",
                  "name": "_cCA",
                  "nameLocation": "521:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 420,
                  "src": "513:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 377,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "513:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 380,
                  "mutability": "mutable",
                  "name": "_cultureCoin",
                  "nameLocation": "535:12:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 420,
                  "src": "527:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 379,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "527:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 382,
                  "mutability": "mutable",
                  "name": "_baseSpells",
                  "nameLocation": "557:11:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 420,
                  "src": "549:19:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 381,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "549:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 384,
                  "mutability": "mutable",
                  "name": "_uri",
                  "nameLocation": "584:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 420,
                  "src": "570:18:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 383,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "570:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "512:77:2"
            },
            "returnParameters": {
              "id": 388,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "611:0:2"
            },
            "scope": 1761,
            "src": "492:420:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 431,
              "nodeType": "Block",
              "src": "976:41:2",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 427,
                      "name": "isAddon",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 374,
                      "src": "994:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 429,
                    "indexExpression": {
                      "id": 428,
                      "name": "_addon",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 422,
                      "src": "1002:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "994:15:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 426,
                  "id": 430,
                  "nodeType": "Return",
                  "src": "987:22:2"
                }
              ]
            },
            "functionSelector": "8297f29f",
            "id": 432,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAddon",
            "nameLocation": "923:8:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 423,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 422,
                  "mutability": "mutable",
                  "name": "_addon",
                  "nameLocation": "940:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 432,
                  "src": "932:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 421,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "932:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "931:16:2"
            },
            "returnParameters": {
              "id": 426,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 425,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 432,
                  "src": "970:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 424,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "970:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "969:6:2"
            },
            "scope": 1761,
            "src": "914:103:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 453,
              "nodeType": "Block",
              "src": "1073:127:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 443,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 440,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1099:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 441,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1099:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 442,
                          "name": "cCA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 356,
                          "src": "1113:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1099:17:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c792061646d696e73206d617920736574206164646f6e2e",
                        "id": 444,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1118:28:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e4061282db7ead910febacb0df2b27556e11d6927752f2680f907d0c5642f93e",
                          "typeString": "literal_string \"Only admins may set addon.\""
                        },
                        "value": "Only admins may set addon."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e4061282db7ead910febacb0df2b27556e11d6927752f2680f907d0c5642f93e",
                          "typeString": "literal_string \"Only admins may set addon.\""
                        }
                      ],
                      "id": 439,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1091:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 445,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1091:56:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 446,
                  "nodeType": "ExpressionStatement",
                  "src": "1091:56:2"
                },
                {
                  "expression": {
                    "id": 451,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 447,
                        "name": "isAddon",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 374,
                        "src": "1165:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 449,
                      "indexExpression": {
                        "id": 448,
                        "name": "_addon",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 434,
                        "src": "1173:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1165:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 450,
                      "name": "_onOff",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 436,
                      "src": "1183:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "1165:24:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 452,
                  "nodeType": "ExpressionStatement",
                  "src": "1165:24:2"
                }
              ]
            },
            "functionSelector": "6d714b68",
            "id": 454,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setAddon",
            "nameLocation": "1028:8:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 437,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 434,
                  "mutability": "mutable",
                  "name": "_addon",
                  "nameLocation": "1045:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 454,
                  "src": "1037:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 433,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1037:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 436,
                  "mutability": "mutable",
                  "name": "_onOff",
                  "nameLocation": "1058:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 454,
                  "src": "1053:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 435,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1053:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1036:29:2"
            },
            "returnParameters": {
              "id": 438,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1073:0:2"
            },
            "scope": 1761,
            "src": "1019:181:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 485,
              "nodeType": "Block",
              "src": "1268:119:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 473,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 468,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 465,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "1280:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 466,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1280:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 467,
                            "name": "cCA",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 356,
                            "src": "1294:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1280:17:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "baseExpression": {
                            "id": 469,
                            "name": "isAddon",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 374,
                            "src": "1301:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 472,
                          "indexExpression": {
                            "expression": {
                              "id": 470,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "1309:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 471,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1309:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1301:19:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "1280:40:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f752063616e27742061646420746865206c6f6f742e",
                        "id": 474,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1322:25:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2a1dd3c5280b50651af52c1a26d9274f161f1328d8bd9bc1c5c491e9cbc393c7",
                          "typeString": "literal_string \"You can't add the loot.\""
                        },
                        "value": "You can't add the loot."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2a1dd3c5280b50651af52c1a26d9274f161f1328d8bd9bc1c5c491e9cbc393c7",
                          "typeString": "literal_string \"You can't add the loot.\""
                        }
                      ],
                      "id": 464,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1272:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 475,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1272:76:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 476,
                  "nodeType": "ExpressionStatement",
                  "src": "1272:76:2"
                },
                {
                  "expression": {
                    "id": 483,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 477,
                          "name": "isLooted",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 370,
                          "src": "1352:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_bool_$_$",
                            "typeString": "mapping(uint256 => mapping(uint256 => bool))"
                          }
                        },
                        "id": 480,
                        "indexExpression": {
                          "id": 478,
                          "name": "_hId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 459,
                          "src": "1361:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1352:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                          "typeString": "mapping(uint256 => bool)"
                        }
                      },
                      "id": 481,
                      "indexExpression": {
                        "id": 479,
                        "name": "_target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 461,
                        "src": "1367:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1352:23:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 482,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1378:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "1352:31:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 484,
                  "nodeType": "ExpressionStatement",
                  "src": "1352:31:2"
                }
              ]
            },
            "functionSelector": "1f0f92f1",
            "id": 486,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addLoot",
            "nameLocation": "1211:7:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 462,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 457,
                  "mutability": "mutable",
                  "name": "hero",
                  "nameLocation": "1224:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 486,
                  "src": "1219:9:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Hero_$8208",
                    "typeString": "contract Hero"
                  },
                  "typeName": {
                    "id": 456,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 455,
                      "name": "Hero",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 8208,
                      "src": "1219:4:2"
                    },
                    "referencedDeclaration": 8208,
                    "src": "1219:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Hero_$8208",
                      "typeString": "contract Hero"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 459,
                  "mutability": "mutable",
                  "name": "_hId",
                  "nameLocation": "1238:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 486,
                  "src": "1230:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 458,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1230:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 461,
                  "mutability": "mutable",
                  "name": "_target",
                  "nameLocation": "1252:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 486,
                  "src": "1244:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 460,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1244:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1218:42:2"
            },
            "returnParameters": {
              "id": 463,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1268:0:2"
            },
            "scope": 1761,
            "src": "1202:185:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 504,
              "nodeType": "Block",
              "src": "1475:38:2",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 498,
                        "name": "isLooted",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 370,
                        "src": "1486:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_bool_$_$",
                          "typeString": "mapping(uint256 => mapping(uint256 => bool))"
                        }
                      },
                      "id": 500,
                      "indexExpression": {
                        "id": 499,
                        "name": "_hId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 491,
                        "src": "1495:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1486:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                        "typeString": "mapping(uint256 => bool)"
                      }
                    },
                    "id": 502,
                    "indexExpression": {
                      "id": 501,
                      "name": "_target",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 493,
                      "src": "1501:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1486:23:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 497,
                  "id": 503,
                  "nodeType": "Return",
                  "src": "1479:30:2"
                }
              ]
            },
            "id": 505,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "looted",
            "nameLocation": "1398:6:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 494,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 489,
                  "mutability": "mutable",
                  "name": "hero",
                  "nameLocation": "1410:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 505,
                  "src": "1405:9:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Hero_$8208",
                    "typeString": "contract Hero"
                  },
                  "typeName": {
                    "id": 488,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 487,
                      "name": "Hero",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 8208,
                      "src": "1405:4:2"
                    },
                    "referencedDeclaration": 8208,
                    "src": "1405:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Hero_$8208",
                      "typeString": "contract Hero"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 491,
                  "mutability": "mutable",
                  "name": "_hId",
                  "nameLocation": "1424:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 505,
                  "src": "1416:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 490,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1416:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 493,
                  "mutability": "mutable",
                  "name": "_target",
                  "nameLocation": "1438:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 505,
                  "src": "1430:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 492,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1430:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1404:42:2"
            },
            "returnParameters": {
              "id": 497,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 496,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 505,
                  "src": "1469:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 495,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1469:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1468:6:2"
            },
            "scope": 1761,
            "src": "1389:124:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 537,
              "nodeType": "Block",
              "src": "1601:118:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 525,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 520,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 517,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "1613:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 518,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1613:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 519,
                            "name": "cCA",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 356,
                            "src": "1627:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1613:17:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "baseExpression": {
                            "id": 521,
                            "name": "isAddon",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 374,
                            "src": "1634:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 524,
                          "indexExpression": {
                            "expression": {
                              "id": 522,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "1642:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 523,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1642:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1634:19:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "1613:40:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f752063616e742073657420746865206c6f6f742e",
                        "id": 526,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1655:24:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fc67eca6cf2b427a9215427578e83e1eead3eefa3a304c3c7921a1763c543aa1",
                          "typeString": "literal_string \"You cant set the loot.\""
                        },
                        "value": "You cant set the loot."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fc67eca6cf2b427a9215427578e83e1eead3eefa3a304c3c7921a1763c543aa1",
                          "typeString": "literal_string \"You cant set the loot.\""
                        }
                      ],
                      "id": 516,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1605:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 527,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1605:75:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 528,
                  "nodeType": "ExpressionStatement",
                  "src": "1605:75:2"
                },
                {
                  "expression": {
                    "id": 535,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 529,
                          "name": "isLooted",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 370,
                          "src": "1684:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_bool_$_$",
                            "typeString": "mapping(uint256 => mapping(uint256 => bool))"
                          }
                        },
                        "id": 532,
                        "indexExpression": {
                          "id": 530,
                          "name": "_hId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 509,
                          "src": "1693:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1684:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                          "typeString": "mapping(uint256 => bool)"
                        }
                      },
                      "id": 533,
                      "indexExpression": {
                        "id": 531,
                        "name": "_target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 511,
                        "src": "1699:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1684:23:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 534,
                      "name": "_flag",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 513,
                      "src": "1710:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "1684:31:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 536,
                  "nodeType": "ExpressionStatement",
                  "src": "1684:31:2"
                }
              ]
            },
            "functionSelector": "b9c21cda",
            "id": 538,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setLooted",
            "nameLocation": "1524:9:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 514,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 507,
                  "mutability": "mutable",
                  "name": "_hero",
                  "nameLocation": "1542:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 538,
                  "src": "1534:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 506,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1534:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 509,
                  "mutability": "mutable",
                  "name": "_hId",
                  "nameLocation": "1557:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 538,
                  "src": "1549:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 508,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1549:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 511,
                  "mutability": "mutable",
                  "name": "_target",
                  "nameLocation": "1571:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 538,
                  "src": "1563:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 510,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1563:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 513,
                  "mutability": "mutable",
                  "name": "_flag",
                  "nameLocation": "1585:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 538,
                  "src": "1580:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 512,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1580:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1533:58:2"
            },
            "returnParameters": {
              "id": 515,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1601:0:2"
            },
            "scope": 1761,
            "src": "1515:204:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 558,
              "nodeType": "Block",
              "src": "1805:39:2",
              "statements": [
                {
                  "expression": {
                    "id": 556,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 550,
                          "name": "isLooted",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 370,
                          "src": "1809:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_bool_$_$",
                            "typeString": "mapping(uint256 => mapping(uint256 => bool))"
                          }
                        },
                        "id": 553,
                        "indexExpression": {
                          "id": 551,
                          "name": "_hId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 543,
                          "src": "1818:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1809:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                          "typeString": "mapping(uint256 => bool)"
                        }
                      },
                      "id": 554,
                      "indexExpression": {
                        "id": 552,
                        "name": "_target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 545,
                        "src": "1824:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1809:23:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 555,
                      "name": "_flag",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 547,
                      "src": "1835:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "1809:31:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 557,
                  "nodeType": "ExpressionStatement",
                  "src": "1809:31:2"
                }
              ]
            },
            "id": 559,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_setLooted",
            "nameLocation": "1730:10:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 548,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 541,
                  "mutability": "mutable",
                  "name": "hero",
                  "nameLocation": "1746:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 559,
                  "src": "1741:9:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Hero_$8208",
                    "typeString": "contract Hero"
                  },
                  "typeName": {
                    "id": 540,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 539,
                      "name": "Hero",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 8208,
                      "src": "1741:4:2"
                    },
                    "referencedDeclaration": 8208,
                    "src": "1741:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Hero_$8208",
                      "typeString": "contract Hero"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 543,
                  "mutability": "mutable",
                  "name": "_hId",
                  "nameLocation": "1761:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 559,
                  "src": "1753:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 542,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1753:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 545,
                  "mutability": "mutable",
                  "name": "_target",
                  "nameLocation": "1775:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 559,
                  "src": "1767:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 544,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1767:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 547,
                  "mutability": "mutable",
                  "name": "_flag",
                  "nameLocation": "1789:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 559,
                  "src": "1784:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 546,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1784:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1740:55:2"
            },
            "returnParameters": {
              "id": 549,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1805:0:2"
            },
            "scope": 1761,
            "src": "1721:123:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 590,
              "nodeType": "Block",
              "src": "1929:100:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 579,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 574,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 571,
                            "name": "cCA",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 356,
                            "src": "1941:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 572,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "1948:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 573,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1948:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1941:17:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "baseExpression": {
                            "id": 575,
                            "name": "isAddon",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 374,
                            "src": "1962:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 578,
                          "indexExpression": {
                            "expression": {
                              "id": 576,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "1970:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 577,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1970:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1962:19:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "1941:40:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6c6f6f74546f",
                        "id": 580,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1983:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ff97bc02b2eae5b13be37ecd6afc28737f43b99dd78b5252e5319360a0c347b1",
                          "typeString": "literal_string \"lootTo\""
                        },
                        "value": "lootTo"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ff97bc02b2eae5b13be37ecd6afc28737f43b99dd78b5252e5319360a0c347b1",
                          "typeString": "literal_string \"lootTo\""
                        }
                      ],
                      "id": 570,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1933:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 581,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1933:59:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 582,
                  "nodeType": "ExpressionStatement",
                  "src": "1933:59:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 584,
                        "name": "_hero",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 561,
                        "src": "2002:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 585,
                        "name": "_hId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 563,
                        "src": "2009:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 586,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2015:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "6c6f6f74",
                        "id": 587,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2018:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1e944daf1ff136f1e8fb944eaa23fdc7a17eadaa3e8f32bbb08735ea12afc899",
                          "typeString": "literal_string \"loot\""
                        },
                        "value": "loot"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1e944daf1ff136f1e8fb944eaa23fdc7a17eadaa3e8f32bbb08735ea12afc899",
                          "typeString": "literal_string \"loot\""
                        }
                      ],
                      "id": 583,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21683,
                      "src": "1996:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,uint256,bytes memory)"
                      }
                    },
                    "id": 588,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1996:29:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 589,
                  "nodeType": "ExpressionStatement",
                  "src": "1996:29:2"
                }
              ]
            },
            "functionSelector": "77cb0d6c",
            "id": 591,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "lootTo",
            "nameLocation": "1855:6:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 568,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 561,
                  "mutability": "mutable",
                  "name": "_hero",
                  "nameLocation": "1870:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 591,
                  "src": "1862:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 560,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1862:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 563,
                  "mutability": "mutable",
                  "name": "_hId",
                  "nameLocation": "1885:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 591,
                  "src": "1877:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 562,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1877:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 565,
                  "mutability": "mutable",
                  "name": "_target",
                  "nameLocation": "1899:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 591,
                  "src": "1891:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 564,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1891:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 567,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "1913:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 591,
                  "src": "1908:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 566,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1908:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1861:60:2"
            },
            "returnParameters": {
              "id": 569,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1929:0:2"
            },
            "scope": 1761,
            "src": "1846:183:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 619,
              "nodeType": "Block",
              "src": "2099:103:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 609,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 604,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 601,
                            "name": "cCA",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 356,
                            "src": "2111:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 602,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "2118:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 603,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2118:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2111:17:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "baseExpression": {
                            "id": 605,
                            "name": "isAddon",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 374,
                            "src": "2132:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 608,
                          "indexExpression": {
                            "expression": {
                              "id": 606,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "2140:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 607,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2140:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2132:19:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "2111:40:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6275726e46726f6d",
                        "id": 610,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2153:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1f5528e7a5a578129b17edda3b942aff94e6191011372bc35bf3d31dcbb2614b",
                          "typeString": "literal_string \"burnFrom\""
                        },
                        "value": "burnFrom"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1f5528e7a5a578129b17edda3b942aff94e6191011372bc35bf3d31dcbb2614b",
                          "typeString": "literal_string \"burnFrom\""
                        }
                      ],
                      "id": 600,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2103:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 611,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2103:61:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 612,
                  "nodeType": "ExpressionStatement",
                  "src": "2103:61:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 614,
                        "name": "_sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 593,
                        "src": "2174:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 615,
                        "name": "_what",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 595,
                        "src": "2183:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 616,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 597,
                        "src": "2190:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 613,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21899,
                      "src": "2168:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 617,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2168:30:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 618,
                  "nodeType": "ExpressionStatement",
                  "src": "2168:30:2"
                }
              ]
            },
            "functionSelector": "124d91e5",
            "id": 620,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burnFrom",
            "nameLocation": "2040:8:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 598,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 593,
                  "mutability": "mutable",
                  "name": "_sender",
                  "nameLocation": "2057:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 620,
                  "src": "2049:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 592,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2049:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 595,
                  "mutability": "mutable",
                  "name": "_what",
                  "nameLocation": "2071:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 620,
                  "src": "2066:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 594,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2066:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 597,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "2083:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 620,
                  "src": "2078:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 596,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2078:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2048:43:2"
            },
            "returnParameters": {
              "id": 599,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2099:0:2"
            },
            "scope": 1761,
            "src": "2031:171:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 777,
              "nodeType": "Block",
              "src": "2287:1140:2",
              "statements": [
                {
                  "assignments": [
                    633
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 633,
                      "mutability": "mutable",
                      "name": "hero",
                      "nameLocation": "2303:4:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 777,
                      "src": "2298:9:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Hero_$8208",
                        "typeString": "contract Hero"
                      },
                      "typeName": {
                        "id": 632,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 631,
                          "name": "Hero",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 8208,
                          "src": "2298:4:2"
                        },
                        "referencedDeclaration": 8208,
                        "src": "2298:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Hero_$8208",
                          "typeString": "contract Hero"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 637,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 635,
                        "name": "_hero",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 622,
                        "src": "2315:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 634,
                      "name": "Hero",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8208,
                      "src": "2310:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_Hero_$8208_$",
                        "typeString": "type(contract Hero)"
                      }
                    },
                    "id": 636,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2310:11:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Hero_$8208",
                      "typeString": "contract Hero"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2298:23:2"
                },
                {
                  "assignments": [
                    639,
                    641
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 639,
                      "mutability": "mutable",
                      "name": "heroHp",
                      "nameLocation": "2345:6:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 777,
                      "src": "2340:11:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 638,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2340:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 641,
                      "mutability": "mutable",
                      "name": "heroPower",
                      "nameLocation": "2358:9:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 777,
                      "src": "2353:14:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 640,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2353:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 646,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 644,
                        "name": "_hId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 624,
                        "src": "2382:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 642,
                        "name": "hero",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 633,
                        "src": "2371:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Hero_$8208",
                          "typeString": "contract Hero"
                        }
                      },
                      "id": 643,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getHP",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7144,
                      "src": "2371:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                        "typeString": "function (uint256) external returns (uint256,uint256)"
                      }
                    },
                    "id": 645,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2371:16:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2339:48:2"
                },
                {
                  "assignments": [
                    648,
                    650
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 648,
                      "mutability": "mutable",
                      "name": "tarHp",
                      "nameLocation": "2411:5:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 777,
                      "src": "2406:10:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 647,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2406:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 650,
                      "mutability": "mutable",
                      "name": "tarPow",
                      "nameLocation": "2423:6:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 777,
                      "src": "2418:11:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 649,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2418:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 655,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 653,
                        "name": "_target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 626,
                        "src": "2444:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 651,
                        "name": "hero",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 633,
                        "src": "2433:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Hero_$8208",
                          "typeString": "contract Hero"
                        }
                      },
                      "id": 652,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getHP",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7144,
                      "src": "2433:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                        "typeString": "function (uint256) external returns (uint256,uint256)"
                      }
                    },
                    "id": 654,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2433:19:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2405:47:2"
                },
                {
                  "assignments": [
                    657
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 657,
                      "mutability": "mutable",
                      "name": "heroAlive",
                      "nameLocation": "2475:9:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 777,
                      "src": "2470:14:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 656,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "2470:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 662,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 660,
                        "name": "heroHp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 639,
                        "src": "2498:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 658,
                        "name": "hero",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 633,
                        "src": "2487:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Hero_$8208",
                          "typeString": "contract Hero"
                        }
                      },
                      "id": 659,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "alive",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7737,
                      "src": "2487:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_pure$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (uint256) pure external returns (bool)"
                      }
                    },
                    "id": 661,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2487:18:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2470:35:2"
                },
                {
                  "assignments": [
                    664
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 664,
                      "mutability": "mutable",
                      "name": "tarAlive",
                      "nameLocation": "2528:8:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 777,
                      "src": "2523:13:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 663,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "2523:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 669,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 667,
                        "name": "tarHp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 648,
                        "src": "2550:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 665,
                        "name": "hero",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 633,
                        "src": "2539:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Hero_$8208",
                          "typeString": "contract Hero"
                        }
                      },
                      "id": 666,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "alive",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7737,
                      "src": "2539:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_pure$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (uint256) pure external returns (bool)"
                      }
                    },
                    "id": 668,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2539:17:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2523:33:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 672,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "2569:9:2",
                        "subExpression": {
                          "id": 671,
                          "name": "tarAlive",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 664,
                          "src": "2570:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54617267657420697320616c697665207374696c6c2e",
                        "id": 673,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2580:24:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8c426929f809e7ef2d5bd1678d803a747e8a699316e4aaa6de28c42e7e1fc59d",
                          "typeString": "literal_string \"Target is alive still.\""
                        },
                        "value": "Target is alive still."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8c426929f809e7ef2d5bd1678d803a747e8a699316e4aaa6de28c42e7e1fc59d",
                          "typeString": "literal_string \"Target is alive still.\""
                        }
                      ],
                      "id": 670,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2561:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 674,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2561:44:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 675,
                  "nodeType": "ExpressionStatement",
                  "src": "2561:44:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 677,
                        "name": "heroAlive",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 657,
                        "src": "2617:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f752061726520646561642e",
                        "id": 678,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2628:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1985926deecf40243c43a01debb7f51217ad1511777dde73484db1542946c106",
                          "typeString": "literal_string \"You are dead.\""
                        },
                        "value": "You are dead."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1985926deecf40243c43a01debb7f51217ad1511777dde73484db1542946c106",
                          "typeString": "literal_string \"You are dead.\""
                        }
                      ],
                      "id": 676,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2609:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 679,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2609:35:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 680,
                  "nodeType": "ExpressionStatement",
                  "src": "2609:35:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 693,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 688,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "id": 684,
                                "name": "_hId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 624,
                                "src": "2804:4:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 682,
                                "name": "hero",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 633,
                                "src": "2791:4:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Hero_$8208",
                                  "typeString": "contract Hero"
                                }
                              },
                              "id": 683,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "ownerOf",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 18380,
                              "src": "2791:12:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                                "typeString": "function (uint256) view external returns (address)"
                              }
                            },
                            "id": 685,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2791:18:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 686,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "2813:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 687,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2813:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2791:32:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 692,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 689,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "2827:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 690,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2827:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 691,
                            "name": "cCA",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 356,
                            "src": "2841:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2827:17:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "2791:53:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f752063616e277420646f20746861742e",
                        "id": 694,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2846:20:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d7d39cdd78289ffe407372d62069f4c46fc233b1c8958049d7c179069491ae94",
                          "typeString": "literal_string \"You can't do that.\""
                        },
                        "value": "You can't do that."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d7d39cdd78289ffe407372d62069f4c46fc233b1c8958049d7c179069491ae94",
                          "typeString": "literal_string \"You can't do that.\""
                        }
                      ],
                      "id": 681,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2783:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 695,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2783:84:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 696,
                  "nodeType": "ExpressionStatement",
                  "src": "2783:84:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 700,
                            "name": "_hero",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 622,
                            "src": "2911:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 701,
                            "name": "_hId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 624,
                            "src": "2918:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 702,
                            "name": "_target",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 626,
                            "src": "2924:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "hexValue": "31",
                            "id": 703,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2933:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            }
                          ],
                          "expression": {
                            "id": 698,
                            "name": "spells",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 364,
                            "src": "2893:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BaseSpells_$4161",
                              "typeString": "contract BaseSpells"
                            }
                          },
                          "id": 699,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "xyzInRange",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2336,
                          "src": "2893:17:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256,uint256,uint256) external returns (bool)"
                          }
                        },
                        "id": 704,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2893:42:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6c6f6f74206973204f4f52",
                        "id": 705,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2937:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_83ec8a20acca46217e22ab1a3d49e46d05d0b9a2e3ba63cc12a542133b44623b",
                          "typeString": "literal_string \"loot is OOR\""
                        },
                        "value": "loot is OOR"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_83ec8a20acca46217e22ab1a3d49e46d05d0b9a2e3ba63cc12a542133b44623b",
                          "typeString": "literal_string \"loot is OOR\""
                        }
                      ],
                      "id": 697,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2885:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 706,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2885:66:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 707,
                  "nodeType": "ExpressionStatement",
                  "src": "2885:66:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 711,
                            "name": "_hero",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 622,
                            "src": "2991:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 712,
                            "name": "_hId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 624,
                            "src": "2998:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 713,
                            "name": "_target",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 626,
                            "src": "3004:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 709,
                            "name": "spells",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 364,
                            "src": "2977:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BaseSpells_$4161",
                              "typeString": "contract BaseSpells"
                            }
                          },
                          "id": 710,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "hasLOS",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2374,
                          "src": "2977:13:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256,uint256) view external returns (bool)"
                          }
                        },
                        "id": 714,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2977:35:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6c6f6f74206c61636b73204c4f53",
                        "id": 715,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3014:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c32dbd96d17ab6c574c872baef47bb261da94d9676a6f6ebae6d77e1fb1ca714",
                          "typeString": "literal_string \"loot lacks LOS\""
                        },
                        "value": "loot lacks LOS"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c32dbd96d17ab6c574c872baef47bb261da94d9676a6f6ebae6d77e1fb1ca714",
                          "typeString": "literal_string \"loot lacks LOS\""
                        }
                      ],
                      "id": 708,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2969:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 716,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2969:62:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 717,
                  "nodeType": "ExpressionStatement",
                  "src": "2969:62:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 721,
                            "name": "_hero",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 622,
                            "src": "3059:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 722,
                            "name": "_target",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 626,
                            "src": "3066:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 723,
                            "name": "FLAG_IS_NPC",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 16573,
                            "src": "3075:11:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          ],
                          "expression": {
                            "id": 719,
                            "name": "spells",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 364,
                            "src": "3043:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BaseSpells_$4161",
                              "typeString": "contract BaseSpells"
                            }
                          },
                          "id": 720,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getState",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2148,
                          "src": "3043:15:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$_t_int256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256,int256) view external returns (bool)"
                          }
                        },
                        "id": 724,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3043:44:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43616e2774206c6f6f7420746861742e",
                        "id": 725,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3089:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2216d3a62ab19509e8b8625207a86e87af2e8a60ffcbaf032084fcea864e42cc",
                          "typeString": "literal_string \"Can't loot that.\""
                        },
                        "value": "Can't loot that."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2216d3a62ab19509e8b8625207a86e87af2e8a60ffcbaf032084fcea864e42cc",
                          "typeString": "literal_string \"Can't loot that.\""
                        }
                      ],
                      "id": 718,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3035:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 726,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3035:73:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 727,
                  "nodeType": "ExpressionStatement",
                  "src": "3035:73:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 734,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "3120:28:2",
                        "subExpression": {
                          "arguments": [
                            {
                              "id": 730,
                              "name": "hero",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 633,
                              "src": "3128:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Hero_$8208",
                                "typeString": "contract Hero"
                              }
                            },
                            {
                              "id": 731,
                              "name": "_hId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 624,
                              "src": "3134:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 732,
                              "name": "_target",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 626,
                              "src": "3140:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Hero_$8208",
                                "typeString": "contract Hero"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 729,
                            "name": "looted",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 505,
                            "src": "3121:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_contract$_Hero_$8208_$_t_uint256_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (contract Hero,uint256,uint256) view returns (bool)"
                            }
                          },
                          "id": 733,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3121:27:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416c7265616479206c6f6f7465642e",
                        "id": 735,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3150:17:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2af64d072c7d10b6ce3283099b9ccf2f8b8a8153503dc23e67a8f5d345c6e976",
                          "typeString": "literal_string \"Already looted.\""
                        },
                        "value": "Already looted."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2af64d072c7d10b6ce3283099b9ccf2f8b8a8153503dc23e67a8f5d345c6e976",
                          "typeString": "literal_string \"Already looted.\""
                        }
                      ],
                      "id": 728,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3112:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 736,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3112:56:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 737,
                  "nodeType": "ExpressionStatement",
                  "src": "3112:56:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 739,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3179:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 740,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3179:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 741,
                        "name": "_target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 626,
                        "src": "3191:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "39",
                        "id": 742,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3200:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_9_by_1",
                          "typeString": "int_const 9"
                        },
                        "value": "9"
                      },
                      {
                        "hexValue": "6c6f6f7439",
                        "id": 743,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3203:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2507bbd53ccac2a95466285debfadcd2ff5213ffeadd2c8dc7d65e1ee64fb453",
                          "typeString": "literal_string \"loot9\""
                        },
                        "value": "loot9"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_9_by_1",
                          "typeString": "int_const 9"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2507bbd53ccac2a95466285debfadcd2ff5213ffeadd2c8dc7d65e1ee64fb453",
                          "typeString": "literal_string \"loot9\""
                        }
                      ],
                      "id": 738,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21683,
                      "src": "3173:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,uint256,bytes memory)"
                      }
                    },
                    "id": 744,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3173:38:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 745,
                  "nodeType": "ExpressionStatement",
                  "src": "3173:38:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 755,
                                "name": "_hId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 624,
                                "src": "3299:4:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 753,
                                "name": "hero",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 633,
                                "src": "3285:4:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Hero_$8208",
                                  "typeString": "contract Hero"
                                }
                              },
                              "id": 754,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "getSpawn",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 6879,
                              "src": "3285:13:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$",
                                "typeString": "function (uint256) view external returns (uint256)"
                              }
                            },
                            "id": 756,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3285:19:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "expression": {
                                    "id": 748,
                                    "name": "hero",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 633,
                                    "src": "3262:4:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_Hero_$8208",
                                      "typeString": "contract Hero"
                                    }
                                  },
                                  "id": 749,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "getNBT",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 6867,
                                  "src": "3262:11:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                    "typeString": "function () view external returns (address)"
                                  }
                                },
                                "id": 750,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3262:13:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 747,
                              "name": "BookTradable",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4961,
                              "src": "3249:12:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_BookTradable_$4961_$",
                                "typeString": "type(contract BookTradable)"
                              }
                            },
                            "id": 751,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3249:27:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BookTradable_$4961",
                              "typeString": "contract BookTradable"
                            }
                          },
                          "id": 752,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "ownerOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 18380,
                          "src": "3249:35:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                            "typeString": "function (uint256) view external returns (address)"
                          }
                        },
                        "id": 757,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3249:56:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 758,
                        "name": "_target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 626,
                        "src": "3307:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 759,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3316:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "6c6f6f7431",
                        "id": 760,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3319:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_86d7b014cc7b8965679607861a5718e02fb96dbc763966c81429cc15e0d6ab65",
                          "typeString": "literal_string \"loot1\""
                        },
                        "value": "loot1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_86d7b014cc7b8965679607861a5718e02fb96dbc763966c81429cc15e0d6ab65",
                          "typeString": "literal_string \"loot1\""
                        }
                      ],
                      "id": 746,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21683,
                      "src": "3243:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,uint256,bytes memory)"
                      }
                    },
                    "id": 761,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3243:84:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 762,
                  "nodeType": "ExpressionStatement",
                  "src": "3243:84:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 764,
                        "name": "hero",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 633,
                        "src": "3343:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Hero_$8208",
                          "typeString": "contract Hero"
                        }
                      },
                      {
                        "id": 765,
                        "name": "_hId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 624,
                        "src": "3349:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 766,
                        "name": "_target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 626,
                        "src": "3355:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 767,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3364:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_Hero_$8208",
                          "typeString": "contract Hero"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 763,
                      "name": "_setLooted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 559,
                      "src": "3332:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_Hero_$8208_$_t_uint256_$_t_uint256_$_t_bool_$returns$__$",
                        "typeString": "function (contract Hero,uint256,uint256,bool)"
                      }
                    },
                    "id": 768,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3332:37:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 769,
                  "nodeType": "ExpressionStatement",
                  "src": "3332:37:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 772,
                        "name": "_hero",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 622,
                        "src": "3402:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 773,
                        "name": "_hId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 624,
                        "src": "3409:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 774,
                        "name": "_target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 626,
                        "src": "3415:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 770,
                        "name": "spells",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 364,
                        "src": "3381:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BaseSpells_$4161",
                          "typeString": "contract BaseSpells"
                        }
                      },
                      "id": 771,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "addExperience",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2804,
                      "src": "3381:20:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,uint256,uint256) external returns (uint256)"
                      }
                    },
                    "id": 775,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3381:42:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 630,
                  "id": 776,
                  "nodeType": "Return",
                  "src": "3374:49:2"
                }
              ]
            },
            "functionSelector": "6865aece",
            "id": 778,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "loot",
            "nameLocation": "2213:4:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 627,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 622,
                  "mutability": "mutable",
                  "name": "_hero",
                  "nameLocation": "2226:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 778,
                  "src": "2218:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 621,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2218:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 624,
                  "mutability": "mutable",
                  "name": "_hId",
                  "nameLocation": "2241:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 778,
                  "src": "2233:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 623,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2233:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 626,
                  "mutability": "mutable",
                  "name": "_target",
                  "nameLocation": "2255:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 778,
                  "src": "2247:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 625,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2247:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2217:46:2"
            },
            "returnParameters": {
              "id": 630,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 629,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 778,
                  "src": "2281:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 628,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2281:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2280:6:2"
            },
            "scope": 1761,
            "src": "2204:1223:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 957,
              "nodeType": "Block",
              "src": "3529:1296:2",
              "statements": [
                {
                  "assignments": [
                    791
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 791,
                      "mutability": "mutable",
                      "name": "hero",
                      "nameLocation": "3552:4:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 957,
                      "src": "3547:9:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Hero_$8208",
                        "typeString": "contract Hero"
                      },
                      "typeName": {
                        "id": 790,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 789,
                          "name": "Hero",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 8208,
                          "src": "3547:4:2"
                        },
                        "referencedDeclaration": 8208,
                        "src": "3547:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Hero_$8208",
                          "typeString": "contract Hero"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 795,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 793,
                        "name": "_hero",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 780,
                        "src": "3564:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 792,
                      "name": "Hero",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8208,
                      "src": "3559:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_Hero_$8208_$",
                        "typeString": "type(contract Hero)"
                      }
                    },
                    "id": 794,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3559:11:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Hero_$8208",
                      "typeString": "contract Hero"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3547:23:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 799,
                            "name": "_hId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 782,
                            "src": "3609:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 800,
                            "name": "DRUID_FIRE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 16441,
                            "src": "3615:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          ],
                          "expression": {
                            "id": 797,
                            "name": "hero",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 791,
                            "src": "3596:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Hero_$8208",
                              "typeString": "contract Hero"
                            }
                          },
                          "id": 798,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "canCast",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 8058,
                          "src": "3596:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_uint256_$_t_int256_$returns$_t_bool_$",
                            "typeString": "function (uint256,int256) view external returns (bool)"
                          }
                        },
                        "id": 801,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3596:30:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4865726f2063616e2774206361737420647275696420666972652e",
                        "id": 802,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3628:29:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4956eb3457cb522891f5e5c09117bf99d59f3c8020f77098ed3c0b9a90744943",
                          "typeString": "literal_string \"Hero can't cast druid fire.\""
                        },
                        "value": "Hero can't cast druid fire."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4956eb3457cb522891f5e5c09117bf99d59f3c8020f77098ed3c0b9a90744943",
                          "typeString": "literal_string \"Hero can't cast druid fire.\""
                        }
                      ],
                      "id": 796,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3588:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 803,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3588:70:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 804,
                  "nodeType": "ExpressionStatement",
                  "src": "3588:70:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 817,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 812,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "id": 808,
                                "name": "_hId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 782,
                                "src": "3697:4:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 806,
                                "name": "hero",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 791,
                                "src": "3684:4:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Hero_$8208",
                                  "typeString": "contract Hero"
                                }
                              },
                              "id": 807,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "ownerOf",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 18380,
                              "src": "3684:12:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                                "typeString": "function (uint256) view external returns (address)"
                              }
                            },
                            "id": 809,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3684:18:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 810,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "3706:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 811,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3706:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3684:32:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "baseExpression": {
                            "id": 813,
                            "name": "isAddon",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 374,
                            "src": "3720:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 816,
                          "indexExpression": {
                            "expression": {
                              "id": 814,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "3728:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 815,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3728:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3720:19:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "3684:55:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f752063616e277420646f20746861742e",
                        "id": 818,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3741:20:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d7d39cdd78289ffe407372d62069f4c46fc233b1c8958049d7c179069491ae94",
                          "typeString": "literal_string \"You can't do that.\""
                        },
                        "value": "You can't do that."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d7d39cdd78289ffe407372d62069f4c46fc233b1c8958049d7c179069491ae94",
                          "typeString": "literal_string \"You can't do that.\""
                        }
                      ],
                      "id": 805,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3676:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 819,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3676:86:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 820,
                  "nodeType": "ExpressionStatement",
                  "src": "3676:86:2"
                },
                {
                  "assignments": [
                    822,
                    824
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 822,
                      "mutability": "mutable",
                      "name": "heroHp",
                      "nameLocation": "3787:6:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 957,
                      "src": "3782:11:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 821,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3782:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 824,
                      "mutability": "mutable",
                      "name": "heroPower",
                      "nameLocation": "3800:9:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 957,
                      "src": "3795:14:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 823,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3795:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 829,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 827,
                        "name": "_hId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 782,
                        "src": "3824:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 825,
                        "name": "hero",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 791,
                        "src": "3813:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Hero_$8208",
                          "typeString": "contract Hero"
                        }
                      },
                      "id": 826,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getHP",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7144,
                      "src": "3813:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                        "typeString": "function (uint256) external returns (uint256,uint256)"
                      }
                    },
                    "id": 828,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3813:16:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3781:48:2"
                },
                {
                  "assignments": [
                    831
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 831,
                      "mutability": "mutable",
                      "name": "heroAlive",
                      "nameLocation": "3852:9:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 957,
                      "src": "3847:14:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 830,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "3847:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 836,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 834,
                        "name": "heroHp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 822,
                        "src": "3875:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 832,
                        "name": "hero",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 791,
                        "src": "3864:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Hero_$8208",
                          "typeString": "contract Hero"
                        }
                      },
                      "id": 833,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "alive",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7737,
                      "src": "3864:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_pure$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (uint256) pure external returns (bool)"
                      }
                    },
                    "id": 835,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3864:18:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3847:35:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 838,
                        "name": "heroAlive",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 831,
                        "src": "3908:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f752061726520646561642e",
                        "id": 839,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3919:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1985926deecf40243c43a01debb7f51217ad1511777dde73484db1542946c106",
                          "typeString": "literal_string \"You are dead.\""
                        },
                        "value": "You are dead."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1985926deecf40243c43a01debb7f51217ad1511777dde73484db1542946c106",
                          "typeString": "literal_string \"You are dead.\""
                        }
                      ],
                      "id": 837,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3900:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 840,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3900:35:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 841,
                  "nodeType": "ExpressionStatement",
                  "src": "3900:35:2"
                },
                {
                  "assignments": [
                    843
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 843,
                      "mutability": "mutable",
                      "name": "heroLevel",
                      "nameLocation": "3959:9:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 957,
                      "src": "3954:14:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 842,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3954:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 849,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 846,
                        "name": "_hero",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 780,
                        "src": "3987:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 847,
                        "name": "_hId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 782,
                        "src": "3994:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 844,
                        "name": "spells",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 364,
                        "src": "3971:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BaseSpells_$4161",
                          "typeString": "contract BaseSpells"
                        }
                      },
                      "id": 845,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getLevel",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2757,
                      "src": "3971:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,uint256) external returns (uint256)"
                      }
                    },
                    "id": 848,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3971:28:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3954:45:2"
                },
                {
                  "assignments": [
                    851
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 851,
                      "mutability": "mutable",
                      "name": "cost",
                      "nameLocation": "4022:4:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 957,
                      "src": "4017:9:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 850,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "4017:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 855,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 854,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 852,
                      "name": "heroLevel",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 843,
                      "src": "4029:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "hexValue": "302e31",
                      "id": 853,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4041:9:2",
                      "subdenomination": "ether",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100000000000000000_by_1",
                        "typeString": "int_const 100000000000000000"
                      },
                      "value": "0.1"
                    },
                    "src": "4029:21:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4017:33:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 859,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 857,
                          "name": "cost",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 851,
                          "src": "4076:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 858,
                          "name": "heroPower",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 824,
                          "src": "4084:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4076:17:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f75206c61636b2074686520706f77657220746f20646f20746861742e",
                        "id": 860,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4095:32:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0471cfdc6bc54a66a5e2f000c579d1fdc36bc04817ee60edfe4ef88c883fa597",
                          "typeString": "literal_string \"You lack the power to do that.\""
                        },
                        "value": "You lack the power to do that."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0471cfdc6bc54a66a5e2f000c579d1fdc36bc04817ee60edfe4ef88c883fa597",
                          "typeString": "literal_string \"You lack the power to do that.\""
                        }
                      ],
                      "id": 856,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4068:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 861,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4068:60:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 862,
                  "nodeType": "ExpressionStatement",
                  "src": "4068:60:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 866,
                        "name": "_hId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 782,
                        "src": "4161:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 867,
                        "name": "cost",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 851,
                        "src": "4167:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 863,
                        "name": "hero",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 791,
                        "src": "4146:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Hero_$8208",
                          "typeString": "contract Hero"
                        }
                      },
                      "id": 865,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "powerDown",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7972,
                      "src": "4146:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256) external returns (uint256)"
                      }
                    },
                    "id": 868,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4146:26:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 869,
                  "nodeType": "ExpressionStatement",
                  "src": "4146:26:2"
                },
                {
                  "assignments": [
                    871,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 871,
                      "mutability": "mutable",
                      "name": "tarHp",
                      "nameLocation": "4197:5:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 957,
                      "src": "4192:10:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 870,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "4192:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 876,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 874,
                        "name": "_target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 784,
                        "src": "4218:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 872,
                        "name": "hero",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 791,
                        "src": "4207:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Hero_$8208",
                          "typeString": "contract Hero"
                        }
                      },
                      "id": 873,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getHP",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7144,
                      "src": "4207:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                        "typeString": "function (uint256) external returns (uint256,uint256)"
                      }
                    },
                    "id": 875,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4207:19:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4191:35:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 880,
                            "name": "tarHp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 871,
                            "src": "4263:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 878,
                            "name": "hero",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 791,
                            "src": "4252:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Hero_$8208",
                              "typeString": "contract Hero"
                            }
                          },
                          "id": 879,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "alive",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7737,
                          "src": "4252:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_pure$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) pure external returns (bool)"
                          }
                        },
                        "id": 881,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4252:17:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54617267657420697320646561642e",
                        "id": 882,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4271:17:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_56857a95c84cc62616d1657143eb157e2503af4bc3849b29237d4b47bacb62f7",
                          "typeString": "literal_string \"Target is dead.\""
                        },
                        "value": "Target is dead."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_56857a95c84cc62616d1657143eb157e2503af4bc3849b29237d4b47bacb62f7",
                          "typeString": "literal_string \"Target is dead.\""
                        }
                      ],
                      "id": 877,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4244:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 883,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4244:45:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 884,
                  "nodeType": "ExpressionStatement",
                  "src": "4244:45:2"
                },
                {
                  "assignments": [
                    887
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 887,
                      "mutability": "mutable",
                      "name": "stats",
                      "nameLocation": "4321:5:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 957,
                      "src": "4308:18:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Stats_$16414_memory_ptr",
                        "typeString": "struct Stats"
                      },
                      "typeName": {
                        "id": 886,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 885,
                          "name": "Stats",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 16414,
                          "src": "4308:5:2"
                        },
                        "referencedDeclaration": 16414,
                        "src": "4308:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stats_$16414_storage_ptr",
                          "typeString": "struct Stats"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 892,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 890,
                        "name": "_hId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 782,
                        "src": "4343:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 888,
                        "name": "hero",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 791,
                        "src": "4329:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Hero_$8208",
                          "typeString": "contract Hero"
                        }
                      },
                      "id": 889,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getStats",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7685,
                      "src": "4329:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$_t_struct$_Stats_$16414_memory_ptr_$",
                        "typeString": "function (uint256) external returns (struct Stats memory)"
                      }
                    },
                    "id": 891,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4329:19:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Stats_$16414_memory_ptr",
                      "typeString": "struct Stats memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4308:40:2"
                },
                {
                  "assignments": [
                    894
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 894,
                      "mutability": "mutable",
                      "name": "amount",
                      "nameLocation": "4371:6:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 957,
                      "src": "4366:11:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 893,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "4366:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 899,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 898,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 895,
                        "name": "stats",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 887,
                        "src": "4380:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stats_$16414_memory_ptr",
                          "typeString": "struct Stats memory"
                        }
                      },
                      "id": 896,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "intel",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 16402,
                      "src": "4380:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "id": 897,
                      "name": "heroLevel",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 843,
                      "src": "4394:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4380:23:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4366:37:2"
                },
                {
                  "assignments": [
                    902
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 902,
                      "mutability": "mutable",
                      "name": "tarSum",
                      "nameLocation": "4439:6:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 957,
                      "src": "4422:23:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_HPSummary_$16400_memory_ptr",
                        "typeString": "struct HPSummary"
                      },
                      "typeName": {
                        "id": 901,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 900,
                          "name": "HPSummary",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 16400,
                          "src": "4422:9:2"
                        },
                        "referencedDeclaration": 16400,
                        "src": "4422:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_HPSummary_$16400_storage_ptr",
                          "typeString": "struct HPSummary"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 907,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 905,
                        "name": "_target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 784,
                        "src": "4465:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 903,
                        "name": "hero",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 791,
                        "src": "4448:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Hero_$8208",
                          "typeString": "contract Hero"
                        }
                      },
                      "id": 904,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getHPSumary",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7725,
                      "src": "4448:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$_t_struct$_HPSummary_$16400_memory_ptr_$",
                        "typeString": "function (uint256) external returns (struct HPSummary memory)"
                      }
                    },
                    "id": 906,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4448:25:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_HPSummary_$16400_memory_ptr",
                      "typeString": "struct HPSummary memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4422:51:2"
                },
                {
                  "expression": {
                    "id": 915,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 908,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 894,
                      "src": "4491:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 911,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 894,
                          "src": "4519:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "expression": {
                            "id": 912,
                            "name": "tarSum",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 902,
                            "src": "4527:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_HPSummary_$16400_memory_ptr",
                              "typeString": "struct HPSummary memory"
                            }
                          },
                          "id": 913,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "fire",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 16393,
                          "src": "4527:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        ],
                        "expression": {
                          "id": 909,
                          "name": "spells",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 364,
                          "src": "4500:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_BaseSpells_$4161",
                            "typeString": "contract BaseSpells"
                          }
                        },
                        "id": 910,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "damageFloor",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2735,
                        "src": "4500:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_pure$_t_uint256_$_t_int256_$returns$_t_uint256_$",
                          "typeString": "function (uint256,int256) pure external returns (uint256)"
                        }
                      },
                      "id": 914,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4500:39:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4491:48:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 916,
                  "nodeType": "ExpressionStatement",
                  "src": "4491:48:2"
                },
                {
                  "expression": {
                    "id": 923,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 917,
                      "name": "tarHp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 871,
                      "src": "4543:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 920,
                          "name": "_hero",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 780,
                          "src": "4566:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 921,
                          "name": "_target",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 784,
                          "src": "4573:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 918,
                          "name": "spells",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 364,
                          "src": "4551:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_BaseSpells_$4161",
                            "typeString": "contract BaseSpells"
                          }
                        },
                        "id": 919,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "getSkin",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2043,
                        "src": "4551:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (address,uint256) external returns (uint256)"
                        }
                      },
                      "id": 922,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4551:30:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4543:38:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 924,
                  "nodeType": "ExpressionStatement",
                  "src": "4543:38:2"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 927,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 925,
                      "name": "tarHp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 871,
                      "src": "4652:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "302e35",
                      "id": 926,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4660:9:2",
                      "subdenomination": "ether",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_500000000000000000_by_1",
                        "typeString": "int_const 500000000000000000"
                      },
                      "value": "0.5"
                    },
                    "src": "4652:17:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 935,
                  "nodeType": "IfStatement",
                  "src": "4649:51:2",
                  "trueBody": {
                    "id": 934,
                    "nodeType": "Block",
                    "src": "4671:29:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 932,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 928,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 894,
                            "src": "4676:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 931,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 929,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 894,
                              "src": "4685:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "hexValue": "32",
                              "id": 930,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4694:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            },
                            "src": "4685:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4676:19:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 933,
                        "nodeType": "ExpressionStatement",
                        "src": "4676:19:2"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 939,
                        "name": "_hero",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 780,
                        "src": "4718:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 940,
                        "name": "_target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 784,
                        "src": "4725:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 943,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 941,
                          "name": "tarHp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 871,
                          "src": "4734:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "hexValue": "32",
                          "id": 942,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4740:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "src": "4734:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 936,
                        "name": "spells",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 364,
                        "src": "4703:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BaseSpells_$4161",
                          "typeString": "contract BaseSpells"
                        }
                      },
                      "id": 938,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setSkin",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2074,
                      "src": "4703:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256) external"
                      }
                    },
                    "id": 944,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4703:39:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 945,
                  "nodeType": "ExpressionStatement",
                  "src": "4703:39:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 949,
                        "name": "_hId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 782,
                        "src": "4772:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 950,
                        "name": "_target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 784,
                        "src": "4778:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 951,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 894,
                        "src": "4787:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 952,
                        "name": "FIRE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16594,
                        "src": "4795:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      {
                        "expression": {
                          "id": 953,
                          "name": "stats",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 887,
                          "src": "4801:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Stats_$16414_memory_ptr",
                            "typeString": "struct Stats memory"
                          }
                        },
                        "id": 954,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "effect",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 16408,
                        "src": "4801:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 946,
                        "name": "hero",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 791,
                        "src": "4760:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Hero_$8208",
                          "typeString": "contract Hero"
                        }
                      },
                      "id": 948,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "hurtBy",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7667,
                      "src": "4760:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_int256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256,uint256,int256,uint256) external"
                      }
                    },
                    "id": 955,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4760:54:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 956,
                  "nodeType": "ExpressionStatement",
                  "src": "4760:54:2"
                }
              ]
            },
            "functionSelector": "83fb8db6",
            "id": 958,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "castDF",
            "nameLocation": "3459:6:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 787,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 780,
                  "mutability": "mutable",
                  "name": "_hero",
                  "nameLocation": "3474:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 958,
                  "src": "3466:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 779,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3466:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 782,
                  "mutability": "mutable",
                  "name": "_hId",
                  "nameLocation": "3489:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 958,
                  "src": "3481:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 781,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3481:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 784,
                  "mutability": "mutable",
                  "name": "_target",
                  "nameLocation": "3503:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 958,
                  "src": "3495:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 783,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3495:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 786,
                  "mutability": "mutable",
                  "name": "_id",
                  "nameLocation": "3517:3:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 958,
                  "src": "3512:8:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 785,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3512:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3465:56:2"
            },
            "returnParameters": {
              "id": 788,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3529:0:2"
            },
            "scope": 1761,
            "src": "3450:1375:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1053,
              "nodeType": "Block",
              "src": "4883:657:2",
              "statements": [
                {
                  "assignments": [
                    967
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 967,
                      "mutability": "mutable",
                      "name": "hero",
                      "nameLocation": "4892:4:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1053,
                      "src": "4887:9:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Hero_$8208",
                        "typeString": "contract Hero"
                      },
                      "typeName": {
                        "id": 966,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 965,
                          "name": "Hero",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 8208,
                          "src": "4887:4:2"
                        },
                        "referencedDeclaration": 8208,
                        "src": "4887:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Hero_$8208",
                          "typeString": "contract Hero"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 971,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 969,
                        "name": "_hero",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 960,
                        "src": "4904:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 968,
                      "name": "Hero",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8208,
                      "src": "4899:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_Hero_$8208_$",
                        "typeString": "type(contract Hero)"
                      }
                    },
                    "id": 970,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4899:11:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Hero_$8208",
                      "typeString": "contract Hero"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4887:23:2"
                },
                {
                  "assignments": [
                    973,
                    975
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 973,
                      "mutability": "mutable",
                      "name": "heroHp",
                      "nameLocation": "4934:6:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1053,
                      "src": "4929:11:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 972,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "4929:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 975,
                      "mutability": "mutable",
                      "name": "heroPower",
                      "nameLocation": "4947:9:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1053,
                      "src": "4942:14:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 974,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "4942:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 980,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 978,
                        "name": "_hId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 962,
                        "src": "4971:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 976,
                        "name": "hero",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 967,
                        "src": "4960:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Hero_$8208",
                          "typeString": "contract Hero"
                        }
                      },
                      "id": 977,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getHP",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7144,
                      "src": "4960:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                        "typeString": "function (uint256) external returns (uint256,uint256)"
                      }
                    },
                    "id": 979,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4960:16:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4928:48:2"
                },
                {
                  "assignments": [
                    982
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 982,
                      "mutability": "mutable",
                      "name": "heroAlive",
                      "nameLocation": "4999:9:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1053,
                      "src": "4994:14:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 981,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "4994:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 987,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 985,
                        "name": "heroHp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 973,
                        "src": "5022:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 983,
                        "name": "hero",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 967,
                        "src": "5011:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Hero_$8208",
                          "typeString": "contract Hero"
                        }
                      },
                      "id": 984,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "alive",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7737,
                      "src": "5011:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_pure$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (uint256) pure external returns (bool)"
                      }
                    },
                    "id": 986,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5011:18:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4994:35:2"
                },
                {
                  "condition": {
                    "id": 989,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "5051:10:2",
                    "subExpression": {
                      "id": 988,
                      "name": "heroAlive",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 982,
                      "src": "5052:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1002,
                  "nodeType": "IfStatement",
                  "src": "5048:142:2",
                  "trueBody": {
                    "id": 1001,
                    "nodeType": "Block",
                    "src": "5063:127:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 993,
                              "name": "_hId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 962,
                              "src": "5101:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 994,
                              "name": "_hId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 962,
                              "src": "5107:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 995,
                              "name": "IRON_SKIN",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 16489,
                              "src": "5113:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            },
                            {
                              "hexValue": "31",
                              "id": 996,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5124:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            {
                              "id": 997,
                              "name": "FIZZLE_DEAD",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 16636,
                              "src": "5127:11:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              },
                              {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 990,
                              "name": "hero",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 967,
                              "src": "5089:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Hero_$8208",
                                "typeString": "contract Hero"
                              }
                            },
                            "id": 992,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "fizzle",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7230,
                            "src": "5089:11:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_int256_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256,int256,uint256,uint256) external"
                            }
                          },
                          "id": 998,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5089:50:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 999,
                        "nodeType": "ExpressionStatement",
                        "src": "5089:50:2"
                      },
                      {
                        "functionReturnParameters": 964,
                        "id": 1000,
                        "nodeType": "Return",
                        "src": "5165:7:2"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 1014,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 1009,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "arguments": [
                          {
                            "id": 1005,
                            "name": "_hId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 962,
                            "src": "5224:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 1003,
                            "name": "hero",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 967,
                            "src": "5211:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Hero_$8208",
                              "typeString": "contract Hero"
                            }
                          },
                          "id": 1004,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "ownerOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 18380,
                          "src": "5211:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                            "typeString": "function (uint256) view external returns (address)"
                          }
                        },
                        "id": 1006,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5211:18:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "expression": {
                          "id": 1007,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5233:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1008,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5233:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "5211:32:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 1013,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 1010,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5247:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1011,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5247:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "id": 1012,
                        "name": "cCA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 356,
                        "src": "5261:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "5247:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "5211:53:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1027,
                  "nodeType": "IfStatement",
                  "src": "5208:190:2",
                  "trueBody": {
                    "id": 1026,
                    "nodeType": "Block",
                    "src": "5266:132:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1018,
                              "name": "_hId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 962,
                              "src": "5304:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1019,
                              "name": "_hId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 962,
                              "src": "5310:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1020,
                              "name": "IRON_SKIN",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 16489,
                              "src": "5316:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            },
                            {
                              "hexValue": "31",
                              "id": 1021,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5327:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            {
                              "id": 1022,
                              "name": "FIZZLE_NOT_OWNER",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 16627,
                              "src": "5330:16:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              },
                              {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 1015,
                              "name": "hero",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 967,
                              "src": "5292:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Hero_$8208",
                                "typeString": "contract Hero"
                              }
                            },
                            "id": 1017,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "fizzle",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7230,
                            "src": "5292:11:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_int256_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256,int256,uint256,uint256) external"
                            }
                          },
                          "id": 1023,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5292:55:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1024,
                        "nodeType": "ExpressionStatement",
                        "src": "5292:55:2"
                      },
                      {
                        "functionReturnParameters": 964,
                        "id": 1025,
                        "nodeType": "Return",
                        "src": "5373:7:2"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1031,
                        "name": "_hId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 962,
                        "src": "5428:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1032,
                        "name": "IRON_SKIN",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16489,
                        "src": "5434:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 1033,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5445:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "expression": {
                        "id": 1028,
                        "name": "hero",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 967,
                        "src": "5416:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Hero_$8208",
                          "typeString": "contract Hero"
                        }
                      },
                      "id": 1030,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "unCast",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7364,
                      "src": "5416:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_int256_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (uint256,int256,uint256) external returns (bool)"
                      }
                    },
                    "id": 1034,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5416:31:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1035,
                  "nodeType": "ExpressionStatement",
                  "src": "5416:31:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1039,
                        "name": "_hero",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 960,
                        "src": "5467:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1040,
                        "name": "_hId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 962,
                        "src": "5474:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1041,
                        "name": "IRON_SKIN",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16489,
                        "src": "5480:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 1042,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5491:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 1036,
                        "name": "spells",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 364,
                        "src": "5451:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BaseSpells_$4161",
                          "typeString": "contract BaseSpells"
                        }
                      },
                      "id": 1038,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setState",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2106,
                      "src": "5451:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_int256_$_t_bool_$returns$__$",
                        "typeString": "function (address,uint256,int256,bool) external"
                      }
                    },
                    "id": 1043,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5451:45:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1044,
                  "nodeType": "ExpressionStatement",
                  "src": "5451:45:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1048,
                        "name": "_hero",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 960,
                        "src": "5515:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1049,
                        "name": "_hId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 962,
                        "src": "5522:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 1050,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5528:7:2",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 1045,
                        "name": "spells",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 364,
                        "src": "5500:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BaseSpells_$4161",
                          "typeString": "contract BaseSpells"
                        }
                      },
                      "id": 1047,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setSkin",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2074,
                      "src": "5500:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256) external"
                      }
                    },
                    "id": 1051,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5500:36:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1052,
                  "nodeType": "ExpressionStatement",
                  "src": "5500:36:2"
                }
              ]
            },
            "functionSelector": "064bb15c",
            "id": 1054,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "activateIS",
            "nameLocation": "4836:10:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 963,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 960,
                  "mutability": "mutable",
                  "name": "_hero",
                  "nameLocation": "4855:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1054,
                  "src": "4847:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 959,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4847:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 962,
                  "mutability": "mutable",
                  "name": "_hId",
                  "nameLocation": "4870:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1054,
                  "src": "4862:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 961,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4862:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4846:29:2"
            },
            "returnParameters": {
              "id": 964,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4883:0:2"
            },
            "scope": 1761,
            "src": "4827:713:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1102,
              "nodeType": "Block",
              "src": "5615:301:2",
              "statements": [
                {
                  "assignments": [
                    1063
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1063,
                      "mutability": "mutable",
                      "name": "hero",
                      "nameLocation": "5638:4:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1102,
                      "src": "5633:9:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Hero_$8208",
                        "typeString": "contract Hero"
                      },
                      "typeName": {
                        "id": 1062,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1061,
                          "name": "Hero",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 8208,
                          "src": "5633:4:2"
                        },
                        "referencedDeclaration": 8208,
                        "src": "5633:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Hero_$8208",
                          "typeString": "contract Hero"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1067,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1065,
                        "name": "_hero",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1056,
                        "src": "5650:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1064,
                      "name": "Hero",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8208,
                      "src": "5645:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_Hero_$8208_$",
                        "typeString": "type(contract Hero)"
                      }
                    },
                    "id": 1066,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5645:11:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Hero_$8208",
                      "typeString": "contract Hero"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5633:23:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1080,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 1075,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "id": 1071,
                                "name": "_hId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1058,
                                "src": "5695:4:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 1069,
                                "name": "hero",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1063,
                                "src": "5682:4:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Hero_$8208",
                                  "typeString": "contract Hero"
                                }
                              },
                              "id": 1070,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "ownerOf",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 18380,
                              "src": "5682:12:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                                "typeString": "function (uint256) view external returns (address)"
                              }
                            },
                            "id": 1072,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5682:18:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 1073,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "5704:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1074,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "5704:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "5682:32:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "baseExpression": {
                            "id": 1076,
                            "name": "isAddon",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 374,
                            "src": "5718:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 1079,
                          "indexExpression": {
                            "expression": {
                              "id": 1077,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "5726:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1078,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "5726:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5718:19:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "5682:55:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f752063616e277420646f20746861742e",
                        "id": 1081,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5739:20:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d7d39cdd78289ffe407372d62069f4c46fc233b1c8958049d7c179069491ae94",
                          "typeString": "literal_string \"You can't do that.\""
                        },
                        "value": "You can't do that."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d7d39cdd78289ffe407372d62069f4c46fc233b1c8958049d7c179069491ae94",
                          "typeString": "literal_string \"You can't do that.\""
                        }
                      ],
                      "id": 1068,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5674:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1082,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5674:86:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1083,
                  "nodeType": "ExpressionStatement",
                  "src": "5674:86:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1087,
                            "name": "_hId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1058,
                            "src": "5799:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 1088,
                            "name": "IRON_SKIN",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 16489,
                            "src": "5805:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          ],
                          "expression": {
                            "id": 1085,
                            "name": "hero",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1063,
                            "src": "5786:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Hero_$8208",
                              "typeString": "contract Hero"
                            }
                          },
                          "id": 1086,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "canCast",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 8058,
                          "src": "5786:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_uint256_$_t_int256_$returns$_t_bool_$",
                            "typeString": "function (uint256,int256) view external returns (bool)"
                          }
                        },
                        "id": 1089,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5786:29:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4865726f2063616e277420636173742069726f6e20736b696e2e",
                        "id": 1090,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5817:28:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ac38032e633edf50858520c47f59d6dec74d754f6acae715f592824d357cdf11",
                          "typeString": "literal_string \"Hero can't cast iron skin.\""
                        },
                        "value": "Hero can't cast iron skin."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ac38032e633edf50858520c47f59d6dec74d754f6acae715f592824d357cdf11",
                          "typeString": "literal_string \"Hero can't cast iron skin.\""
                        }
                      ],
                      "id": 1084,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5778:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1091,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5778:68:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1092,
                  "nodeType": "ExpressionStatement",
                  "src": "5778:68:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1096,
                        "name": "_hero",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1056,
                        "src": "5879:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1097,
                        "name": "_hId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1058,
                        "src": "5886:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1098,
                        "name": "IRON_SKIN",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16489,
                        "src": "5892:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 1099,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5903:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "expression": {
                        "id": 1093,
                        "name": "spells",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 364,
                        "src": "5865:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BaseSpells_$4161",
                          "typeString": "contract BaseSpells"
                        }
                      },
                      "id": 1095,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "castTo",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2441,
                      "src": "5865:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_int256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,int256,uint256) external"
                      }
                    },
                    "id": 1100,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5865:40:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1101,
                  "nodeType": "ExpressionStatement",
                  "src": "5865:40:2"
                }
              ]
            },
            "functionSelector": "744fb3a6",
            "id": 1103,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "castIS",
            "nameLocation": "5572:6:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1059,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1056,
                  "mutability": "mutable",
                  "name": "_hero",
                  "nameLocation": "5587:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1103,
                  "src": "5579:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1055,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5579:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1058,
                  "mutability": "mutable",
                  "name": "_hId",
                  "nameLocation": "5602:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1103,
                  "src": "5594:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1057,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5594:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5578:29:2"
            },
            "returnParameters": {
              "id": 1060,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5615:0:2"
            },
            "scope": 1761,
            "src": "5563:353:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1161,
              "nodeType": "Block",
              "src": "6022:345:2",
              "statements": [
                {
                  "assignments": [
                    1116
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1116,
                      "mutability": "mutable",
                      "name": "hero",
                      "nameLocation": "6045:4:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1161,
                      "src": "6040:9:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Hero_$8208",
                        "typeString": "contract Hero"
                      },
                      "typeName": {
                        "id": 1115,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1114,
                          "name": "Hero",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 8208,
                          "src": "6040:4:2"
                        },
                        "referencedDeclaration": 8208,
                        "src": "6040:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Hero_$8208",
                          "typeString": "contract Hero"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1120,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1118,
                        "name": "_hero",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1105,
                        "src": "6057:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1117,
                      "name": "Hero",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8208,
                      "src": "6052:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_Hero_$8208_$",
                        "typeString": "type(contract Hero)"
                      }
                    },
                    "id": 1119,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6052:11:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Hero_$8208",
                      "typeString": "contract Hero"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6040:23:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1133,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 1128,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "id": 1124,
                                "name": "_hId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1107,
                                "src": "6102:4:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 1122,
                                "name": "hero",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1116,
                                "src": "6089:4:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Hero_$8208",
                                  "typeString": "contract Hero"
                                }
                              },
                              "id": 1123,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "ownerOf",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 18380,
                              "src": "6089:12:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                                "typeString": "function (uint256) view external returns (address)"
                              }
                            },
                            "id": 1125,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6089:18:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 1126,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "6111:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1127,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "6111:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "6089:32:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "baseExpression": {
                            "id": 1129,
                            "name": "isAddon",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 374,
                            "src": "6125:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 1132,
                          "indexExpression": {
                            "expression": {
                              "id": 1130,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "6133:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1131,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "6133:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6125:19:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "6089:55:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f752063616e277420646f20746861742e",
                        "id": 1134,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6146:20:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d7d39cdd78289ffe407372d62069f4c46fc233b1c8958049d7c179069491ae94",
                          "typeString": "literal_string \"You can't do that.\""
                        },
                        "value": "You can't do that."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d7d39cdd78289ffe407372d62069f4c46fc233b1c8958049d7c179069491ae94",
                          "typeString": "literal_string \"You can't do that.\""
                        }
                      ],
                      "id": 1121,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6081:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1135,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6081:86:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1136,
                  "nodeType": "ExpressionStatement",
                  "src": "6081:86:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1140,
                            "name": "_hId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1107,
                            "src": "6206:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 1141,
                            "name": "GHOST_WOLF",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 16540,
                            "src": "6212:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          ],
                          "expression": {
                            "id": 1138,
                            "name": "hero",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1116,
                            "src": "6193:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Hero_$8208",
                              "typeString": "contract Hero"
                            }
                          },
                          "id": 1139,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "canCast",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 8058,
                          "src": "6193:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_uint256_$_t_int256_$returns$_t_bool_$",
                            "typeString": "function (uint256,int256) view external returns (bool)"
                          }
                        },
                        "id": 1142,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6193:30:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4865726f2063616e277420636173742067686f737420776f6c662e",
                        "id": 1143,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6225:29:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_85c3b3d1e6b222eee1cd536b2c6f1cd40f1c079135527b4ee15ae2053d829ede",
                          "typeString": "literal_string \"Hero can't cast ghost wolf.\""
                        },
                        "value": "Hero can't cast ghost wolf."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_85c3b3d1e6b222eee1cd536b2c6f1cd40f1c079135527b4ee15ae2053d829ede",
                          "typeString": "literal_string \"Hero can't cast ghost wolf.\""
                        }
                      ],
                      "id": 1137,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6185:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1144,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6185:70:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1145,
                  "nodeType": "ExpressionStatement",
                  "src": "6185:70:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1149,
                        "name": "_hero",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1105,
                        "src": "6289:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1150,
                        "name": "_hId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1107,
                        "src": "6296:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1151,
                        "name": "GHOST_WOLF",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16540,
                        "src": "6302:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      {
                        "id": 1158,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "6314:41:2",
                        "subExpression": {
                          "arguments": [
                            {
                              "id": 1154,
                              "name": "_hero",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1105,
                              "src": "6331:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1155,
                              "name": "_hId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1107,
                              "src": "6338:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1156,
                              "name": "GHOST_WOLF",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 16540,
                              "src": "6344:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            ],
                            "expression": {
                              "id": 1152,
                              "name": "spells",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 364,
                              "src": "6315:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_BaseSpells_$4161",
                                "typeString": "contract BaseSpells"
                              }
                            },
                            "id": 1153,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "getState",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2148,
                            "src": "6315:15:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$_t_int256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256,int256) view external returns (bool)"
                            }
                          },
                          "id": 1157,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6315:40:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 1146,
                        "name": "spells",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 364,
                        "src": "6273:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BaseSpells_$4161",
                          "typeString": "contract BaseSpells"
                        }
                      },
                      "id": 1148,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setState",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2106,
                      "src": "6273:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_int256_$_t_bool_$returns$__$",
                        "typeString": "function (address,uint256,int256,bool) external"
                      }
                    },
                    "id": 1159,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6273:83:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1160,
                  "nodeType": "ExpressionStatement",
                  "src": "6273:83:2"
                }
              ]
            },
            "functionSelector": "07a369b6",
            "id": 1162,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "castGW",
            "nameLocation": "5949:6:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1112,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1105,
                  "mutability": "mutable",
                  "name": "_hero",
                  "nameLocation": "5964:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1162,
                  "src": "5956:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1104,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5956:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1107,
                  "mutability": "mutable",
                  "name": "_hId",
                  "nameLocation": "5979:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1162,
                  "src": "5971:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1106,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5971:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1109,
                  "mutability": "mutable",
                  "name": "oldToken",
                  "nameLocation": "5990:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1162,
                  "src": "5985:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1108,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5985:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1111,
                  "mutability": "mutable",
                  "name": "ccAmount",
                  "nameLocation": "6005:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1162,
                  "src": "6000:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1110,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "6000:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5955:59:2"
            },
            "returnParameters": {
              "id": 1113,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6022:0:2"
            },
            "scope": 1761,
            "src": "5940:427:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1527,
              "nodeType": "Block",
              "src": "6495:2713:2",
              "statements": [
                {
                  "assignments": [
                    1180
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1180,
                      "mutability": "mutable",
                      "name": "hero",
                      "nameLocation": "6504:4:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1527,
                      "src": "6499:9:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Hero_$8208",
                        "typeString": "contract Hero"
                      },
                      "typeName": {
                        "id": 1179,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1178,
                          "name": "Hero",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 8208,
                          "src": "6499:4:2"
                        },
                        "referencedDeclaration": 8208,
                        "src": "6499:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Hero_$8208",
                          "typeString": "contract Hero"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1184,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1182,
                        "name": "_hero",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1164,
                        "src": "6516:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1181,
                      "name": "Hero",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8208,
                      "src": "6511:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_Hero_$8208_$",
                        "typeString": "type(contract Hero)"
                      }
                    },
                    "id": 1183,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6511:11:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Hero_$8208",
                      "typeString": "contract Hero"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6499:23:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1197,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 1192,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "id": 1188,
                                "name": "_hId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1166,
                                "src": "6561:4:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 1186,
                                "name": "hero",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1180,
                                "src": "6548:4:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Hero_$8208",
                                  "typeString": "contract Hero"
                                }
                              },
                              "id": 1187,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "ownerOf",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 18380,
                              "src": "6548:12:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                                "typeString": "function (uint256) view external returns (address)"
                              }
                            },
                            "id": 1189,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6548:18:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 1190,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "6570:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1191,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "6570:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "6548:32:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "baseExpression": {
                            "id": 1193,
                            "name": "isAddon",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 374,
                            "src": "6584:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 1196,
                          "indexExpression": {
                            "expression": {
                              "id": 1194,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "6592:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1195,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "6592:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6584:19:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "6548:55:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f752063616e277420646f20746861742e",
                        "id": 1198,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6605:20:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d7d39cdd78289ffe407372d62069f4c46fc233b1c8958049d7c179069491ae94",
                          "typeString": "literal_string \"You can't do that.\""
                        },
                        "value": "You can't do that."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d7d39cdd78289ffe407372d62069f4c46fc233b1c8958049d7c179069491ae94",
                          "typeString": "literal_string \"You can't do that.\""
                        }
                      ],
                      "id": 1185,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6540:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1199,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6540:86:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1200,
                  "nodeType": "ExpressionStatement",
                  "src": "6540:86:2"
                },
                {
                  "assignments": [
                    1203
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1203,
                      "mutability": "mutable",
                      "name": "stats",
                      "nameLocation": "6643:5:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1527,
                      "src": "6630:18:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Stats_$16414_memory_ptr",
                        "typeString": "struct Stats"
                      },
                      "typeName": {
                        "id": 1202,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1201,
                          "name": "Stats",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 16414,
                          "src": "6630:5:2"
                        },
                        "referencedDeclaration": 16414,
                        "src": "6630:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stats_$16414_storage_ptr",
                          "typeString": "struct Stats"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1208,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1206,
                        "name": "_hId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1166,
                        "src": "6665:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1204,
                        "name": "hero",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1180,
                        "src": "6651:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Hero_$8208",
                          "typeString": "contract Hero"
                        }
                      },
                      "id": 1205,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getStats",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7685,
                      "src": "6651:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$_t_struct$_Stats_$16414_memory_ptr_$",
                        "typeString": "function (uint256) external returns (struct Stats memory)"
                      }
                    },
                    "id": 1207,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6651:19:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Stats_$16414_memory_ptr",
                      "typeString": "struct Stats memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6630:40:2"
                },
                {
                  "condition": {
                    "id": 1215,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "6678:39:2",
                    "subExpression": {
                      "arguments": [
                        {
                          "id": 1211,
                          "name": "_hId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1166,
                          "src": "6691:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 1212,
                          "name": "ARCANE_ORB",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16423,
                          "src": "6697:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        {
                          "id": 1213,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1172,
                          "src": "6709:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 1209,
                          "name": "hero",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1180,
                          "src": "6679:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Hero_$8208",
                            "typeString": "contract Hero"
                          }
                        },
                        "id": 1210,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "unCast",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7364,
                        "src": "6679:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_int256_$_t_uint256_$returns$_t_bool_$",
                          "typeString": "function (uint256,int256,uint256) external returns (bool)"
                        }
                      },
                      "id": 1214,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6679:38:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1235,
                  "nodeType": "IfStatement",
                  "src": "6675:163:2",
                  "trueBody": {
                    "id": 1234,
                    "nodeType": "Block",
                    "src": "6720:118:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1219,
                              "name": "_hId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1166,
                              "src": "6737:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1220,
                              "name": "_target",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1168,
                              "src": "6743:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1221,
                              "name": "_how",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1170,
                              "src": "6752:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            },
                            {
                              "id": 1222,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1172,
                              "src": "6758:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1223,
                              "name": "FIZZLE_NO_BUFF",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 16645,
                              "src": "6767:14:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 1216,
                              "name": "hero",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1180,
                              "src": "6725:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Hero_$8208",
                                "typeString": "contract Hero"
                              }
                            },
                            "id": 1218,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "fizzle",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7230,
                            "src": "6725:11:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_int256_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256,int256,uint256,uint256) external"
                            }
                          },
                          "id": 1224,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6725:57:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1225,
                        "nodeType": "ExpressionStatement",
                        "src": "6725:57:2"
                      },
                      {
                        "expression": {
                          "id": 1230,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 1226,
                              "name": "stats",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1203,
                              "src": "6787:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Stats_$16414_memory_ptr",
                                "typeString": "struct Stats memory"
                              }
                            },
                            "id": 1228,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "fizzle",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 16413,
                            "src": "6787:12:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1229,
                            "name": "FIZZLE_NO_BUFF",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 16645,
                            "src": "6802:14:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6787:29:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1231,
                        "nodeType": "ExpressionStatement",
                        "src": "6787:29:2"
                      },
                      {
                        "expression": {
                          "id": 1232,
                          "name": "stats",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1203,
                          "src": "6828:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Stats_$16414_memory_ptr",
                            "typeString": "struct Stats memory"
                          }
                        },
                        "functionReturnParameters": 1177,
                        "id": 1233,
                        "nodeType": "Return",
                        "src": "6821:12:2"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    1237,
                    1239
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1237,
                      "mutability": "mutable",
                      "name": "heroHp",
                      "nameLocation": "6862:6:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1527,
                      "src": "6857:11:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1236,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "6857:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1239,
                      "mutability": "mutable",
                      "name": "heroPower",
                      "nameLocation": "6875:9:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1527,
                      "src": "6870:14:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1238,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "6870:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1244,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1242,
                        "name": "_hId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1166,
                        "src": "6899:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1240,
                        "name": "hero",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1180,
                        "src": "6888:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Hero_$8208",
                          "typeString": "contract Hero"
                        }
                      },
                      "id": 1241,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getHP",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7144,
                      "src": "6888:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                        "typeString": "function (uint256) external returns (uint256,uint256)"
                      }
                    },
                    "id": 1243,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6888:16:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6856:48:2"
                },
                {
                  "assignments": [
                    1246,
                    1248
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1246,
                      "mutability": "mutable",
                      "name": "tarHp",
                      "nameLocation": "6928:5:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1527,
                      "src": "6923:10:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1245,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "6923:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1248,
                      "mutability": "mutable",
                      "name": "tarPow",
                      "nameLocation": "6940:6:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1527,
                      "src": "6935:11:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1247,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "6935:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1253,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1251,
                        "name": "_target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1168,
                        "src": "6961:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1249,
                        "name": "hero",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1180,
                        "src": "6950:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Hero_$8208",
                          "typeString": "contract Hero"
                        }
                      },
                      "id": 1250,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getHP",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7144,
                      "src": "6950:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                        "typeString": "function (uint256) external returns (uint256,uint256)"
                      }
                    },
                    "id": 1252,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6950:19:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6922:47:2"
                },
                {
                  "assignments": [
                    1255
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1255,
                      "mutability": "mutable",
                      "name": "heroAlive",
                      "nameLocation": "6992:9:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1527,
                      "src": "6987:14:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 1254,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "6987:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1260,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1258,
                        "name": "heroHp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1237,
                        "src": "7015:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1256,
                        "name": "hero",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1180,
                        "src": "7004:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Hero_$8208",
                          "typeString": "contract Hero"
                        }
                      },
                      "id": 1257,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "alive",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7737,
                      "src": "7004:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_pure$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (uint256) pure external returns (bool)"
                      }
                    },
                    "id": 1259,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7004:18:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6987:35:2"
                },
                {
                  "assignments": [
                    1262
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1262,
                      "mutability": "mutable",
                      "name": "tarAlive",
                      "nameLocation": "7045:8:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1527,
                      "src": "7040:13:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 1261,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "7040:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1267,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1265,
                        "name": "tarHp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1246,
                        "src": "7067:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1263,
                        "name": "hero",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1180,
                        "src": "7056:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Hero_$8208",
                          "typeString": "contract Hero"
                        }
                      },
                      "id": 1264,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "alive",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7737,
                      "src": "7056:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_pure$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (uint256) pure external returns (bool)"
                      }
                    },
                    "id": 1266,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7056:17:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7040:33:2"
                },
                {
                  "condition": {
                    "id": 1269,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "7081:10:2",
                    "subExpression": {
                      "id": 1268,
                      "name": "heroAlive",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1255,
                      "src": "7082:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1289,
                  "nodeType": "IfStatement",
                  "src": "7078:127:2",
                  "trueBody": {
                    "id": 1288,
                    "nodeType": "Block",
                    "src": "7093:112:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1273,
                              "name": "_hId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1166,
                              "src": "7110:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1274,
                              "name": "_target",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1168,
                              "src": "7116:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1275,
                              "name": "_how",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1170,
                              "src": "7125:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            },
                            {
                              "id": 1276,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1172,
                              "src": "7131:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1277,
                              "name": "FIZZLE_DEAD",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 16636,
                              "src": "7140:11:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 1270,
                              "name": "hero",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1180,
                              "src": "7098:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Hero_$8208",
                                "typeString": "contract Hero"
                              }
                            },
                            "id": 1272,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "fizzle",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7230,
                            "src": "7098:11:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_int256_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256,int256,uint256,uint256) external"
                            }
                          },
                          "id": 1278,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7098:54:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1279,
                        "nodeType": "ExpressionStatement",
                        "src": "7098:54:2"
                      },
                      {
                        "expression": {
                          "id": 1284,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 1280,
                              "name": "stats",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1203,
                              "src": "7157:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Stats_$16414_memory_ptr",
                                "typeString": "struct Stats memory"
                              }
                            },
                            "id": 1282,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "fizzle",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 16413,
                            "src": "7157:12:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1283,
                            "name": "FIZZLE_DEAD",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 16636,
                            "src": "7172:11:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7157:26:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1285,
                        "nodeType": "ExpressionStatement",
                        "src": "7157:26:2"
                      },
                      {
                        "expression": {
                          "id": 1286,
                          "name": "stats",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1203,
                          "src": "7195:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Stats_$16414_memory_ptr",
                            "typeString": "struct Stats memory"
                          }
                        },
                        "functionReturnParameters": 1177,
                        "id": 1287,
                        "nodeType": "Return",
                        "src": "7188:12:2"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "id": 1291,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "7212:9:2",
                    "subExpression": {
                      "id": 1290,
                      "name": "tarAlive",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1262,
                      "src": "7213:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1311,
                  "nodeType": "IfStatement",
                  "src": "7209:134:2",
                  "trueBody": {
                    "id": 1310,
                    "nodeType": "Block",
                    "src": "7223:120:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1295,
                              "name": "_hId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1166,
                              "src": "7240:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1296,
                              "name": "_target",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1168,
                              "src": "7246:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1297,
                              "name": "_how",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1170,
                              "src": "7255:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            },
                            {
                              "id": 1298,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1172,
                              "src": "7261:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1299,
                              "name": "FIZZLE_TAR_DEAD",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 16639,
                              "src": "7270:15:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 1292,
                              "name": "hero",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1180,
                              "src": "7228:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Hero_$8208",
                                "typeString": "contract Hero"
                              }
                            },
                            "id": 1294,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "fizzle",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7230,
                            "src": "7228:11:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_int256_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256,int256,uint256,uint256) external"
                            }
                          },
                          "id": 1300,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7228:58:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1301,
                        "nodeType": "ExpressionStatement",
                        "src": "7228:58:2"
                      },
                      {
                        "expression": {
                          "id": 1306,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 1302,
                              "name": "stats",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1203,
                              "src": "7291:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Stats_$16414_memory_ptr",
                                "typeString": "struct Stats memory"
                              }
                            },
                            "id": 1304,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "fizzle",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 16413,
                            "src": "7291:12:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1305,
                            "name": "FIZZLE_TAR_DEAD",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 16639,
                            "src": "7306:15:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7291:30:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1307,
                        "nodeType": "ExpressionStatement",
                        "src": "7291:30:2"
                      },
                      {
                        "expression": {
                          "id": 1308,
                          "name": "stats",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1203,
                          "src": "7333:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Stats_$16414_memory_ptr",
                            "typeString": "struct Stats memory"
                          }
                        },
                        "functionReturnParameters": 1177,
                        "id": 1309,
                        "nodeType": "Return",
                        "src": "7326:12:2"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "id": 1319,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "7364:43:2",
                    "subExpression": {
                      "arguments": [
                        {
                          "id": 1314,
                          "name": "_hero",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1164,
                          "src": "7383:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 1315,
                          "name": "_hId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1166,
                          "src": "7390:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 1316,
                          "name": "_target",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1168,
                          "src": "7396:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "hexValue": "31",
                          "id": 1317,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7405:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "expression": {
                          "id": 1312,
                          "name": "spells",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 364,
                          "src": "7365:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_BaseSpells_$4161",
                            "typeString": "contract BaseSpells"
                          }
                        },
                        "id": 1313,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "xyzInRange",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2336,
                        "src": "7365:17:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bool_$",
                          "typeString": "function (address,uint256,uint256,uint256) external returns (bool)"
                        }
                      },
                      "id": 1318,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7365:42:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1339,
                  "nodeType": "IfStatement",
                  "src": "7361:176:2",
                  "trueBody": {
                    "id": 1338,
                    "nodeType": "Block",
                    "src": "7409:128:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1323,
                              "name": "_hId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1166,
                              "src": "7426:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1324,
                              "name": "_target",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1168,
                              "src": "7432:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1325,
                              "name": "_how",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1170,
                              "src": "7441:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            },
                            {
                              "id": 1326,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1172,
                              "src": "7447:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1327,
                              "name": "FIZZLE_NOT_IN_RANGE",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 16630,
                              "src": "7456:19:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 1320,
                              "name": "hero",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1180,
                              "src": "7414:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Hero_$8208",
                                "typeString": "contract Hero"
                              }
                            },
                            "id": 1322,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "fizzle",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7230,
                            "src": "7414:11:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_int256_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256,int256,uint256,uint256) external"
                            }
                          },
                          "id": 1328,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7414:62:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1329,
                        "nodeType": "ExpressionStatement",
                        "src": "7414:62:2"
                      },
                      {
                        "expression": {
                          "id": 1334,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 1330,
                              "name": "stats",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1203,
                              "src": "7481:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Stats_$16414_memory_ptr",
                                "typeString": "struct Stats memory"
                              }
                            },
                            "id": 1332,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "fizzle",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 16413,
                            "src": "7481:12:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1333,
                            "name": "FIZZLE_NOT_IN_RANGE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 16630,
                            "src": "7496:19:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7481:34:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1335,
                        "nodeType": "ExpressionStatement",
                        "src": "7481:34:2"
                      },
                      {
                        "expression": {
                          "id": 1336,
                          "name": "stats",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1203,
                          "src": "7527:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Stats_$16414_memory_ptr",
                            "typeString": "struct Stats memory"
                          }
                        },
                        "functionReturnParameters": 1177,
                        "id": 1337,
                        "nodeType": "Return",
                        "src": "7520:12:2"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "id": 1346,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "7557:36:2",
                    "subExpression": {
                      "arguments": [
                        {
                          "id": 1342,
                          "name": "_hero",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1164,
                          "src": "7572:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 1343,
                          "name": "_hId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1166,
                          "src": "7579:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 1344,
                          "name": "_target",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1168,
                          "src": "7585:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 1340,
                          "name": "spells",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 364,
                          "src": "7558:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_BaseSpells_$4161",
                            "typeString": "contract BaseSpells"
                          }
                        },
                        "id": 1341,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "hasLOS",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2374,
                        "src": "7558:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$_t_uint256_$returns$_t_bool_$",
                          "typeString": "function (address,uint256,uint256) view external returns (bool)"
                        }
                      },
                      "id": 1345,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7558:35:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1366,
                  "nodeType": "IfStatement",
                  "src": "7554:157:2",
                  "trueBody": {
                    "id": 1365,
                    "nodeType": "Block",
                    "src": "7595:116:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1350,
                              "name": "_hId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1166,
                              "src": "7612:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1351,
                              "name": "_target",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1168,
                              "src": "7618:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1352,
                              "name": "_how",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1170,
                              "src": "7627:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            },
                            {
                              "id": 1353,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1172,
                              "src": "7633:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1354,
                              "name": "FIZZLE_NO_LOS",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 16633,
                              "src": "7642:13:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 1347,
                              "name": "hero",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1180,
                              "src": "7600:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Hero_$8208",
                                "typeString": "contract Hero"
                              }
                            },
                            "id": 1349,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "fizzle",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7230,
                            "src": "7600:11:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_int256_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256,int256,uint256,uint256) external"
                            }
                          },
                          "id": 1355,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7600:56:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1356,
                        "nodeType": "ExpressionStatement",
                        "src": "7600:56:2"
                      },
                      {
                        "expression": {
                          "id": 1361,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 1357,
                              "name": "stats",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1203,
                              "src": "7661:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Stats_$16414_memory_ptr",
                                "typeString": "struct Stats memory"
                              }
                            },
                            "id": 1359,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "fizzle",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 16413,
                            "src": "7661:12:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1360,
                            "name": "FIZZLE_NO_LOS",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 16633,
                            "src": "7676:13:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7661:28:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1362,
                        "nodeType": "ExpressionStatement",
                        "src": "7661:28:2"
                      },
                      {
                        "expression": {
                          "id": 1363,
                          "name": "stats",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1203,
                          "src": "7701:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Stats_$16414_memory_ptr",
                            "typeString": "struct Stats memory"
                          }
                        },
                        "functionReturnParameters": 1177,
                        "id": 1364,
                        "nodeType": "Return",
                        "src": "7694:12:2"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    },
                    "id": 1369,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1367,
                      "name": "_how",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1170,
                      "src": "7733:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 1368,
                      "name": "HEAL",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16561,
                      "src": "7741:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "src": "7733:12:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1403,
                  "nodeType": "IfStatement",
                  "src": "7730:304:2",
                  "trueBody": {
                    "id": 1402,
                    "nodeType": "Block",
                    "src": "7747:287:2",
                    "statements": [
                      {
                        "condition": {
                          "arguments": [
                            {
                              "id": 1372,
                              "name": "_hId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1166,
                              "src": "7789:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1373,
                              "name": "HEAL",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 16561,
                              "src": "7795:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            ],
                            "expression": {
                              "id": 1370,
                              "name": "hero",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1180,
                              "src": "7776:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Hero_$8208",
                                "typeString": "contract Hero"
                              }
                            },
                            "id": 1371,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "canCast",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 8058,
                            "src": "7776:12:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$_t_int256_$returns$_t_bool_$",
                              "typeString": "function (uint256,int256) view external returns (bool)"
                            }
                          },
                          "id": 1374,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7776:24:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 1400,
                          "nodeType": "Block",
                          "src": "7948:82:2",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 1392,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "7983:3:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 1393,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "7983:10:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 1394,
                                    "name": "_hId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1166,
                                    "src": "7995:4:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "id": 1395,
                                    "name": "_target",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1168,
                                    "src": "8001:7:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "id": 1396,
                                    "name": "_how",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1170,
                                    "src": "8010:4:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_int256",
                                      "typeString": "int256"
                                    }
                                  },
                                  {
                                    "id": 1397,
                                    "name": "_amount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1172,
                                    "src": "8016:7:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_int256",
                                      "typeString": "int256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 1389,
                                    "name": "hero",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1180,
                                    "src": "7974:4:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_Hero_$8208",
                                      "typeString": "contract Hero"
                                    }
                                  },
                                  "id": 1391,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "bug",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 8010,
                                  "src": "7974:8:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_int256_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,uint256,uint256,int256,uint256) external"
                                  }
                                },
                                "id": 1398,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7974:50:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1399,
                              "nodeType": "ExpressionStatement",
                              "src": "7974:50:2"
                            }
                          ]
                        },
                        "id": 1401,
                        "nodeType": "IfStatement",
                        "src": "7773:257:2",
                        "trueBody": {
                          "id": 1388,
                          "nodeType": "Block",
                          "src": "7802:140:2",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 1378,
                                    "name": "_hId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1166,
                                    "src": "7841:4:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "id": 1379,
                                    "name": "_target",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1168,
                                    "src": "7847:7:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 1382,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 1380,
                                      "name": "_amount",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1172,
                                      "src": "7856:7:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "*",
                                    "rightExpression": {
                                      "hexValue": "31",
                                      "id": 1381,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "7866:7:2",
                                      "subdenomination": "ether",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                        "typeString": "int_const 1000000000000000000"
                                      },
                                      "value": "1"
                                    },
                                    "src": "7856:17:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "id": 1383,
                                    "name": "META",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 16606,
                                    "src": "7875:4:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_int256",
                                      "typeString": "int256"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 1384,
                                      "name": "stats",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1203,
                                      "src": "7881:5:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Stats_$16414_memory_ptr",
                                        "typeString": "struct Stats memory"
                                      }
                                    },
                                    "id": 1385,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "effect",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 16408,
                                    "src": "7881:12:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_int256",
                                      "typeString": "int256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 1375,
                                    "name": "hero",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1180,
                                    "src": "7829:4:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_Hero_$8208",
                                      "typeString": "contract Hero"
                                    }
                                  },
                                  "id": 1377,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "healBy",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 7568,
                                  "src": "7829:11:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_int256_$_t_uint256_$returns$__$",
                                    "typeString": "function (uint256,uint256,uint256,int256,uint256) external"
                                  }
                                },
                                "id": 1386,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7829:65:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1387,
                              "nodeType": "ExpressionStatement",
                              "src": "7829:65:2"
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    },
                    "id": 1406,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1404,
                      "name": "_how",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1170,
                      "src": "8056:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 1405,
                      "name": "ARCANE_ORB",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16423,
                      "src": "8064:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "src": "8056:18:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "id": 1425,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 1423,
                        "name": "_how",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1170,
                        "src": "8344:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "id": 1424,
                        "name": "DRUID_FIRE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16441,
                        "src": "8352:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "src": "8344:18:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        "id": 1470,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1468,
                          "name": "_how",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1170,
                          "src": "8696:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 1469,
                          "name": "TAUNT",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16477,
                          "src": "8704:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "src": "8696:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseBody": {
                        "id": 1515,
                        "nodeType": "Block",
                        "src": "9058:95:2",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 1507,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "9093:3:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 1508,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "9093:10:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 1509,
                                  "name": "_hId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1166,
                                  "src": "9105:4:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "id": 1510,
                                  "name": "_target",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1168,
                                  "src": "9111:7:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "id": 1511,
                                  "name": "_how",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1170,
                                  "src": "9120:4:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int256",
                                    "typeString": "int256"
                                  }
                                },
                                {
                                  "id": 1512,
                                  "name": "_amount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1172,
                                  "src": "9126:7:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_int256",
                                    "typeString": "int256"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 1504,
                                  "name": "hero",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1180,
                                  "src": "9084:4:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Hero_$8208",
                                    "typeString": "contract Hero"
                                  }
                                },
                                "id": 1506,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "bug",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 8010,
                                "src": "9084:8:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_int256_$_t_uint256_$returns$__$",
                                  "typeString": "function (address,uint256,uint256,int256,uint256) external"
                                }
                              },
                              "id": 1513,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9084:50:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 1514,
                            "nodeType": "ExpressionStatement",
                            "src": "9084:50:2"
                          }
                        ]
                      },
                      "id": 1516,
                      "nodeType": "IfStatement",
                      "src": "8692:461:2",
                      "trueBody": {
                        "id": 1503,
                        "nodeType": "Block",
                        "src": "8711:341:2",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 1474,
                                      "name": "_hId",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1166,
                                      "src": "8758:4:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    {
                                      "id": 1475,
                                      "name": "TAUNT",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 16477,
                                      "src": "8764:5:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_int256",
                                        "typeString": "int256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      {
                                        "typeIdentifier": "t_int256",
                                        "typeString": "int256"
                                      }
                                    ],
                                    "expression": {
                                      "id": 1472,
                                      "name": "hero",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1180,
                                      "src": "8745:4:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_Hero_$8208",
                                        "typeString": "contract Hero"
                                      }
                                    },
                                    "id": 1473,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "canCast",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 8058,
                                    "src": "8745:12:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_view$_t_uint256_$_t_int256_$returns$_t_bool_$",
                                      "typeString": "function (uint256,int256) view external returns (bool)"
                                    }
                                  },
                                  "id": 1476,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "8745:25:2",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                {
                                  "hexValue": "517569657420796f752e",
                                  "id": 1477,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "8772:12:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_ab96d4ad212862a6707d39054b825b10485e14a6d900fa60ff647034fce9eaaa",
                                    "typeString": "literal_string \"Quiet you.\""
                                  },
                                  "value": "Quiet you."
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  {
                                    "typeIdentifier": "t_stringliteral_ab96d4ad212862a6707d39054b825b10485e14a6d900fa60ff647034fce9eaaa",
                                    "typeString": "literal_string \"Quiet you.\""
                                  }
                                ],
                                "id": 1471,
                                "name": "require",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  -18,
                                  -18
                                ],
                                "referencedDeclaration": -18,
                                "src": "8737:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                  "typeString": "function (bool,string memory) pure"
                                }
                              },
                              "id": 1478,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8737:48:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 1479,
                            "nodeType": "ExpressionStatement",
                            "src": "8737:48:2"
                          },
                          {
                            "condition": {
                              "arguments": [
                                {
                                  "id": 1482,
                                  "name": "_hero",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1164,
                                  "src": "8830:5:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 1483,
                                  "name": "_target",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1168,
                                  "src": "8837:7:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "id": 1484,
                                  "name": "FLAG_IS_NPC",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 16573,
                                  "src": "8846:11:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int256",
                                    "typeString": "int256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_int256",
                                    "typeString": "int256"
                                  }
                                ],
                                "expression": {
                                  "id": 1480,
                                  "name": "spells",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 364,
                                  "src": "8814:6:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_BaseSpells_$4161",
                                    "typeString": "contract BaseSpells"
                                  }
                                },
                                "id": 1481,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "getState",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2148,
                                "src": "8814:15:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$_t_int256_$returns$_t_bool_$",
                                  "typeString": "function (address,uint256,int256) view external returns (bool)"
                                }
                              },
                              "id": 1485,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8814:44:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "falseBody": {
                              "id": 1501,
                              "nodeType": "Block",
                              "src": "8941:93:2",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 1497,
                                        "name": "_target",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1168,
                                        "src": "8987:7:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      {
                                        "hexValue": "31",
                                        "id": 1498,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "8996:1:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_1_by_1",
                                          "typeString": "int_const 1"
                                        },
                                        "value": "1"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        {
                                          "typeIdentifier": "t_rational_1_by_1",
                                          "typeString": "int_const 1"
                                        }
                                      ],
                                      "expression": {
                                        "id": 1494,
                                        "name": "hero",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1180,
                                        "src": "8974:4:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_Hero_$8208",
                                          "typeString": "contract Hero"
                                        }
                                      },
                                      "id": 1496,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "powerUp",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 7907,
                                      "src": "8974:12:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                                        "typeString": "function (uint256,uint256) external"
                                      }
                                    },
                                    "id": 1499,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "8974:24:2",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_tuple$__$",
                                      "typeString": "tuple()"
                                    }
                                  },
                                  "id": 1500,
                                  "nodeType": "ExpressionStatement",
                                  "src": "8974:24:2"
                                }
                              ]
                            },
                            "id": 1502,
                            "nodeType": "IfStatement",
                            "src": "8811:223:2",
                            "trueBody": {
                              "id": 1493,
                              "nodeType": "Block",
                              "src": "8860:74:2",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 1489,
                                        "name": "_target",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1168,
                                        "src": "8908:7:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      {
                                        "hexValue": "31",
                                        "id": 1490,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "8917:1:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_1_by_1",
                                          "typeString": "int_const 1"
                                        },
                                        "value": "1"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        {
                                          "typeIdentifier": "t_rational_1_by_1",
                                          "typeString": "int_const 1"
                                        }
                                      ],
                                      "expression": {
                                        "id": 1486,
                                        "name": "hero",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1180,
                                        "src": "8893:4:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_Hero_$8208",
                                          "typeString": "contract Hero"
                                        }
                                      },
                                      "id": 1488,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "powerDown",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 7972,
                                      "src": "8893:14:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                        "typeString": "function (uint256,uint256) external returns (uint256)"
                                      }
                                    },
                                    "id": 1491,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "8893:26:2",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 1492,
                                  "nodeType": "ExpressionStatement",
                                  "src": "8893:26:2"
                                }
                              ]
                            }
                          }
                        ]
                      }
                    },
                    "id": 1517,
                    "nodeType": "IfStatement",
                    "src": "8340:813:2",
                    "trueBody": {
                      "id": 1467,
                      "nodeType": "Block",
                      "src": "8364:322:2",
                      "statements": [
                        {
                          "condition": {
                            "arguments": [
                              {
                                "id": 1428,
                                "name": "_hId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1166,
                                "src": "8406:4:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 1429,
                                "name": "DRUID_FIRE",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 16441,
                                "src": "8412:10:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              ],
                              "expression": {
                                "id": 1426,
                                "name": "hero",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1180,
                                "src": "8393:4:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Hero_$8208",
                                  "typeString": "contract Hero"
                                }
                              },
                              "id": 1427,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "canCast",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 8058,
                              "src": "8393:12:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_uint256_$_t_int256_$returns$_t_bool_$",
                                "typeString": "function (uint256,int256) view external returns (bool)"
                              }
                            },
                            "id": 1430,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8393:30:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseBody": {
                            "id": 1465,
                            "nodeType": "Block",
                            "src": "8606:62:2",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "expression": {
                                        "id": 1457,
                                        "name": "msg",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -15,
                                        "src": "8621:3:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_message",
                                          "typeString": "msg"
                                        }
                                      },
                                      "id": 1458,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "sender",
                                      "nodeType": "MemberAccess",
                                      "src": "8621:10:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    {
                                      "id": 1459,
                                      "name": "_hId",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1166,
                                      "src": "8633:4:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    {
                                      "id": 1460,
                                      "name": "_target",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1168,
                                      "src": "8639:7:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    {
                                      "id": 1461,
                                      "name": "_how",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1170,
                                      "src": "8648:4:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_int256",
                                        "typeString": "int256"
                                      }
                                    },
                                    {
                                      "id": 1462,
                                      "name": "_amount",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1172,
                                      "src": "8654:7:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      {
                                        "typeIdentifier": "t_int256",
                                        "typeString": "int256"
                                      },
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "id": 1454,
                                      "name": "hero",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1180,
                                      "src": "8612:4:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_Hero_$8208",
                                        "typeString": "contract Hero"
                                      }
                                    },
                                    "id": 1456,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "bug",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 8010,
                                    "src": "8612:8:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_int256_$_t_uint256_$returns$__$",
                                      "typeString": "function (address,uint256,uint256,int256,uint256) external"
                                    }
                                  },
                                  "id": 1463,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "8612:50:2",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_tuple$__$",
                                    "typeString": "tuple()"
                                  }
                                },
                                "id": 1464,
                                "nodeType": "ExpressionStatement",
                                "src": "8612:50:2"
                              }
                            ]
                          },
                          "id": 1466,
                          "nodeType": "IfStatement",
                          "src": "8390:278:2",
                          "trueBody": {
                            "id": 1453,
                            "nodeType": "Block",
                            "src": "8425:175:2",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 1434,
                                      "name": "_hId",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1166,
                                      "src": "8464:4:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    {
                                      "id": 1435,
                                      "name": "_target",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1168,
                                      "src": "8470:7:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 1440,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 1436,
                                        "name": "_amount",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1172,
                                        "src": "8479:7:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "*",
                                      "rightExpression": {
                                        "arguments": [
                                          {
                                            "id": 1438,
                                            "name": "stats",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1203,
                                            "src": "8505:5:2",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_Stats_$16414_memory_ptr",
                                              "typeString": "struct Stats memory"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_struct$_Stats_$16414_memory_ptr",
                                              "typeString": "struct Stats memory"
                                            }
                                          ],
                                          "id": 1437,
                                          "name": "_getSpellDamage",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1542,
                                          "src": "8489:15:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_internal_pure$_t_struct$_Stats_$16414_memory_ptr_$returns$_t_uint256_$",
                                            "typeString": "function (struct Stats memory) pure returns (uint256)"
                                          }
                                        },
                                        "id": 1439,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "8489:22:2",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "8479:32:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    {
                                      "id": 1441,
                                      "name": "FIRE",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 16594,
                                      "src": "8513:4:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_int256",
                                        "typeString": "int256"
                                      }
                                    },
                                    {
                                      "expression": {
                                        "id": 1442,
                                        "name": "stats",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1203,
                                        "src": "8519:5:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Stats_$16414_memory_ptr",
                                          "typeString": "struct Stats memory"
                                        }
                                      },
                                      "id": 1443,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "effect",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 16408,
                                      "src": "8519:12:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      {
                                        "typeIdentifier": "t_int256",
                                        "typeString": "int256"
                                      },
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "id": 1431,
                                      "name": "hero",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1180,
                                      "src": "8452:4:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_Hero_$8208",
                                        "typeString": "contract Hero"
                                      }
                                    },
                                    "id": 1433,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "hurtBy",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 7667,
                                    "src": "8452:11:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_int256_$_t_uint256_$returns$__$",
                                      "typeString": "function (uint256,uint256,uint256,int256,uint256) external"
                                    }
                                  },
                                  "id": 1444,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "8452:80:2",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_tuple$__$",
                                    "typeString": "tuple()"
                                  }
                                },
                                "id": 1445,
                                "nodeType": "ExpressionStatement",
                                "src": "8452:80:2"
                              },
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 1449,
                                      "name": "_target",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1168,
                                      "src": "8574:7:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    {
                                      "hexValue": "31",
                                      "id": 1450,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "8583:1:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1_by_1",
                                        "typeString": "int_const 1"
                                      },
                                      "value": "1"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      {
                                        "typeIdentifier": "t_rational_1_by_1",
                                        "typeString": "int_const 1"
                                      }
                                    ],
                                    "expression": {
                                      "id": 1446,
                                      "name": "hero",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1180,
                                      "src": "8559:4:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_Hero_$8208",
                                        "typeString": "contract Hero"
                                      }
                                    },
                                    "id": 1448,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "powerDown",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 7972,
                                    "src": "8559:14:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) external returns (uint256)"
                                    }
                                  },
                                  "id": 1451,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "8559:26:2",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 1452,
                                "nodeType": "ExpressionStatement",
                                "src": "8559:26:2"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  },
                  "id": 1518,
                  "nodeType": "IfStatement",
                  "src": "8052:1101:2",
                  "trueBody": {
                    "id": 1422,
                    "nodeType": "Block",
                    "src": "8076:258:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1410,
                              "name": "_hId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1166,
                              "src": "8212:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1411,
                              "name": "_target",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1168,
                              "src": "8218:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1416,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1412,
                                "name": "_amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1172,
                                "src": "8227:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "id": 1414,
                                    "name": "stats",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1203,
                                    "src": "8253:5:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Stats_$16414_memory_ptr",
                                      "typeString": "struct Stats memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_struct$_Stats_$16414_memory_ptr",
                                      "typeString": "struct Stats memory"
                                    }
                                  ],
                                  "id": 1413,
                                  "name": "_getSpellDamage",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1542,
                                  "src": "8237:15:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_struct$_Stats_$16414_memory_ptr_$returns$_t_uint256_$",
                                    "typeString": "function (struct Stats memory) pure returns (uint256)"
                                  }
                                },
                                "id": 1415,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8237:22:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "8227:32:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1417,
                              "name": "META",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 16606,
                              "src": "8261:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            },
                            {
                              "expression": {
                                "id": 1418,
                                "name": "stats",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1203,
                                "src": "8267:5:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Stats_$16414_memory_ptr",
                                  "typeString": "struct Stats memory"
                                }
                              },
                              "id": 1419,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "effect",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 16408,
                              "src": "8267:12:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 1407,
                              "name": "hero",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1180,
                              "src": "8200:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Hero_$8208",
                                "typeString": "contract Hero"
                              }
                            },
                            "id": 1409,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "hurtBy",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7667,
                            "src": "8200:11:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_int256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256,uint256,int256,uint256) external"
                            }
                          },
                          "id": 1420,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8200:80:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1421,
                        "nodeType": "ExpressionStatement",
                        "src": "8200:80:2"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 1523,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1519,
                        "name": "stats",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1203,
                        "src": "9156:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stats_$16414_memory_ptr",
                          "typeString": "struct Stats memory"
                        }
                      },
                      "id": 1521,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "fizzle",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 16413,
                      "src": "9156:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1522,
                      "name": "FIZZLE_FIRE_WORKS",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16642,
                      "src": "9171:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9156:32:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1524,
                  "nodeType": "ExpressionStatement",
                  "src": "9156:32:2"
                },
                {
                  "expression": {
                    "id": 1525,
                    "name": "stats",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1203,
                    "src": "9199:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Stats_$16414_memory_ptr",
                      "typeString": "struct Stats memory"
                    }
                  },
                  "functionReturnParameters": 1177,
                  "id": 1526,
                  "nodeType": "Return",
                  "src": "9192:12:2"
                }
              ]
            },
            "functionSelector": "c08d71eb",
            "id": 1528,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "activateAO",
            "nameLocation": "6385:10:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1173,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1164,
                  "mutability": "mutable",
                  "name": "_hero",
                  "nameLocation": "6404:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1528,
                  "src": "6396:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1163,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6396:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1166,
                  "mutability": "mutable",
                  "name": "_hId",
                  "nameLocation": "6419:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1528,
                  "src": "6411:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1165,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6411:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1168,
                  "mutability": "mutable",
                  "name": "_target",
                  "nameLocation": "6433:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1528,
                  "src": "6425:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1167,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6425:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1170,
                  "mutability": "mutable",
                  "name": "_how",
                  "nameLocation": "6446:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1528,
                  "src": "6442:8:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 1169,
                    "name": "int",
                    "nodeType": "ElementaryTypeName",
                    "src": "6442:3:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1172,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "6457:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1528,
                  "src": "6452:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1171,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "6452:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6395:70:2"
            },
            "returnParameters": {
              "id": 1177,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1176,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1528,
                  "src": "6481:12:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Stats_$16414_memory_ptr",
                    "typeString": "struct Stats"
                  },
                  "typeName": {
                    "id": 1175,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1174,
                      "name": "Stats",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 16414,
                      "src": "6481:5:2"
                    },
                    "referencedDeclaration": 16414,
                    "src": "6481:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Stats_$16414_storage_ptr",
                      "typeString": "struct Stats"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6480:14:2"
            },
            "scope": 1761,
            "src": "6376:2832:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1541,
              "nodeType": "Block",
              "src": "9283:30:2",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1539,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 1536,
                        "name": "stats",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1531,
                        "src": "9294:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stats_$16414_memory_ptr",
                          "typeString": "struct Stats memory"
                        }
                      },
                      "id": 1537,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "intel",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 16402,
                      "src": "9294:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 1538,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9308:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "9294:15:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1535,
                  "id": 1540,
                  "nodeType": "Return",
                  "src": "9287:22:2"
                }
              ]
            },
            "id": 1542,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_getSpellDamage",
            "nameLocation": "9219:15:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1532,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1531,
                  "mutability": "mutable",
                  "name": "stats",
                  "nameLocation": "9248:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1542,
                  "src": "9235:18:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Stats_$16414_memory_ptr",
                    "typeString": "struct Stats"
                  },
                  "typeName": {
                    "id": 1530,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1529,
                      "name": "Stats",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 16414,
                      "src": "9235:5:2"
                    },
                    "referencedDeclaration": 16414,
                    "src": "9235:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Stats_$16414_storage_ptr",
                      "typeString": "struct Stats"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9234:20:2"
            },
            "returnParameters": {
              "id": 1535,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1534,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1542,
                  "src": "9277:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1533,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "9277:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9276:6:2"
            },
            "scope": 1761,
            "src": "9210:103:2",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1545,
              "nodeType": "Block",
              "src": "9362:11:2",
              "statements": []
            },
            "functionSelector": "aa35e509",
            "id": 1546,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "castLS",
            "nameLocation": "9346:6:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1543,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9352:2:2"
            },
            "returnParameters": {
              "id": 1544,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9362:0:2"
            },
            "scope": 1761,
            "src": "9337:36:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1610,
              "nodeType": "Block",
              "src": "9495:406:2",
              "statements": [
                {
                  "assignments": [
                    1561
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1561,
                      "mutability": "mutable",
                      "name": "hero",
                      "nameLocation": "9518:4:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1610,
                      "src": "9513:9:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Hero_$8208",
                        "typeString": "contract Hero"
                      },
                      "typeName": {
                        "id": 1560,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1559,
                          "name": "Hero",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 8208,
                          "src": "9513:4:2"
                        },
                        "referencedDeclaration": 8208,
                        "src": "9513:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Hero_$8208",
                          "typeString": "contract Hero"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1565,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1563,
                        "name": "_hero",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1548,
                        "src": "9530:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1562,
                      "name": "Hero",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8208,
                      "src": "9525:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_Hero_$8208_$",
                        "typeString": "type(contract Hero)"
                      }
                    },
                    "id": 1564,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9525:11:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Hero_$8208",
                      "typeString": "contract Hero"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9513:23:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1578,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 1573,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "id": 1569,
                                "name": "_hId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1550,
                                "src": "9575:4:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 1567,
                                "name": "hero",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1561,
                                "src": "9562:4:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Hero_$8208",
                                  "typeString": "contract Hero"
                                }
                              },
                              "id": 1568,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "ownerOf",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 18380,
                              "src": "9562:12:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                                "typeString": "function (uint256) view external returns (address)"
                              }
                            },
                            "id": 1570,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9562:18:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 1571,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "9584:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1572,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "9584:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "9562:32:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "baseExpression": {
                            "id": 1574,
                            "name": "isAddon",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 374,
                            "src": "9598:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 1577,
                          "indexExpression": {
                            "expression": {
                              "id": 1575,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "9606:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1576,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "9606:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "9598:19:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "9562:55:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f752063616e277420646f20746861742e",
                        "id": 1579,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9619:20:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d7d39cdd78289ffe407372d62069f4c46fc233b1c8958049d7c179069491ae94",
                          "typeString": "literal_string \"You can't do that.\""
                        },
                        "value": "You can't do that."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d7d39cdd78289ffe407372d62069f4c46fc233b1c8958049d7c179069491ae94",
                          "typeString": "literal_string \"You can't do that.\""
                        }
                      ],
                      "id": 1566,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9554:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1580,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9554:86:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1581,
                  "nodeType": "ExpressionStatement",
                  "src": "9554:86:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1585,
                            "name": "_hId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1550,
                            "src": "9679:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 1586,
                            "name": "CHARM_BEAST",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 16465,
                            "src": "9685:11:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          ],
                          "expression": {
                            "id": 1583,
                            "name": "hero",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1561,
                            "src": "9666:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Hero_$8208",
                              "typeString": "contract Hero"
                            }
                          },
                          "id": 1584,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "canCast",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 8058,
                          "src": "9666:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_uint256_$_t_int256_$returns$_t_bool_$",
                            "typeString": "function (uint256,int256) view external returns (bool)"
                          }
                        },
                        "id": 1587,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9666:31:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4865726f2063616e2774206361737420636861726d2062656173742e",
                        "id": 1588,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9699:30:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_61224ae372b09460e9eec76a27f42ef00bc331ebd06e5fe4c7f2a4987e94794c",
                          "typeString": "literal_string \"Hero can't cast charm beast.\""
                        },
                        "value": "Hero can't cast charm beast."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_61224ae372b09460e9eec76a27f42ef00bc331ebd06e5fe4c7f2a4987e94794c",
                          "typeString": "literal_string \"Hero can't cast charm beast.\""
                        }
                      ],
                      "id": 1582,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9658:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1589,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9658:72:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1590,
                  "nodeType": "ExpressionStatement",
                  "src": "9658:72:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1594,
                            "name": "_hero",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1548,
                            "src": "9772:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 1595,
                            "name": "_hId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1550,
                            "src": "9779:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 1596,
                            "name": "FLAG_IS_NPC",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 16573,
                            "src": "9785:11:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          ],
                          "expression": {
                            "id": 1592,
                            "name": "spells",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 364,
                            "src": "9756:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BaseSpells_$4161",
                              "typeString": "contract BaseSpells"
                            }
                          },
                          "id": 1593,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getState",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2148,
                          "src": "9756:15:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$_t_int256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256,int256) view external returns (bool)"
                          }
                        },
                        "id": 1597,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9756:41:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43616e277420636861726d20746861742e",
                        "id": 1598,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9799:19:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f6e89889914b43897c9228202cea160bb41dd58c45cd6ca23fda318a604ba8d7",
                          "typeString": "literal_string \"Can't charm that.\""
                        },
                        "value": "Can't charm that."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f6e89889914b43897c9228202cea160bb41dd58c45cd6ca23fda318a604ba8d7",
                          "typeString": "literal_string \"Can't charm that.\""
                        }
                      ],
                      "id": 1591,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9748:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1599,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9748:71:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1600,
                  "nodeType": "ExpressionStatement",
                  "src": "9748:71:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1604,
                        "name": "_hero",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1548,
                        "src": "9854:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1605,
                        "name": "_target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1552,
                        "src": "9861:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1606,
                        "name": "CHARM_BEAST",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16465,
                        "src": "9870:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      {
                        "id": 1607,
                        "name": "_charm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1554,
                        "src": "9883:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 1601,
                        "name": "spells",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 364,
                        "src": "9838:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BaseSpells_$4161",
                          "typeString": "contract BaseSpells"
                        }
                      },
                      "id": 1603,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setState",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2106,
                      "src": "9838:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_int256_$_t_bool_$returns$__$",
                        "typeString": "function (address,uint256,int256,bool) external"
                      }
                    },
                    "id": 1608,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9838:52:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1609,
                  "nodeType": "ExpressionStatement",
                  "src": "9838:52:2"
                }
              ]
            },
            "functionSelector": "2f49bcd1",
            "id": 1611,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "castCB",
            "nameLocation": "9407:6:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1557,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1548,
                  "mutability": "mutable",
                  "name": "_hero",
                  "nameLocation": "9422:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1611,
                  "src": "9414:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1547,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9414:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1550,
                  "mutability": "mutable",
                  "name": "_hId",
                  "nameLocation": "9437:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1611,
                  "src": "9429:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1549,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9429:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1552,
                  "mutability": "mutable",
                  "name": "_target",
                  "nameLocation": "9451:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1611,
                  "src": "9443:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1551,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9443:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1554,
                  "mutability": "mutable",
                  "name": "_charm",
                  "nameLocation": "9465:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1611,
                  "src": "9460:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1553,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "9460:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1556,
                  "mutability": "mutable",
                  "name": "ccAmount",
                  "nameLocation": "9478:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1611,
                  "src": "9473:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1555,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "9473:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9413:74:2"
            },
            "returnParameters": {
              "id": 1558,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9495:0:2"
            },
            "scope": 1761,
            "src": "9398:503:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1759,
              "nodeType": "Block",
              "src": "9987:1264:2",
              "statements": [
                {
                  "assignments": [
                    1624
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1624,
                      "mutability": "mutable",
                      "name": "hero",
                      "nameLocation": "10010:4:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1759,
                      "src": "10005:9:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Hero_$8208",
                        "typeString": "contract Hero"
                      },
                      "typeName": {
                        "id": 1623,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1622,
                          "name": "Hero",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 8208,
                          "src": "10005:4:2"
                        },
                        "referencedDeclaration": 8208,
                        "src": "10005:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Hero_$8208",
                          "typeString": "contract Hero"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1628,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1626,
                        "name": "_hero",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1613,
                        "src": "10022:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1625,
                      "name": "Hero",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8208,
                      "src": "10017:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_Hero_$8208_$",
                        "typeString": "type(contract Hero)"
                      }
                    },
                    "id": 1627,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10017:11:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Hero_$8208",
                      "typeString": "contract Hero"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10005:23:2"
                },
                {
                  "assignments": [
                    1631
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1631,
                      "mutability": "mutable",
                      "name": "stats",
                      "nameLocation": "10059:5:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1759,
                      "src": "10046:18:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Stats_$16414_memory_ptr",
                        "typeString": "struct Stats"
                      },
                      "typeName": {
                        "id": 1630,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1629,
                          "name": "Stats",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 16414,
                          "src": "10046:5:2"
                        },
                        "referencedDeclaration": 16414,
                        "src": "10046:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stats_$16414_storage_ptr",
                          "typeString": "struct Stats"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1636,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1634,
                        "name": "_hId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1615,
                        "src": "10081:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1632,
                        "name": "hero",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1624,
                        "src": "10067:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Hero_$8208",
                          "typeString": "contract Hero"
                        }
                      },
                      "id": 1633,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getStats",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7685,
                      "src": "10067:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$_t_struct$_Stats_$16414_memory_ptr_$",
                        "typeString": "function (uint256) external returns (struct Stats memory)"
                      }
                    },
                    "id": 1635,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10067:19:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Stats_$16414_memory_ptr",
                      "typeString": "struct Stats memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10046:40:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1640,
                            "name": "_hId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1615,
                            "src": "10125:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 1641,
                            "name": "RESURECTION",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 16555,
                            "src": "10131:11:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          ],
                          "expression": {
                            "id": 1638,
                            "name": "hero",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1624,
                            "src": "10112:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Hero_$8208",
                              "typeString": "contract Hero"
                            }
                          },
                          "id": 1639,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "canCast",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 8058,
                          "src": "10112:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_uint256_$_t_int256_$returns$_t_bool_$",
                            "typeString": "function (uint256,int256) view external returns (bool)"
                          }
                        },
                        "id": 1642,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10112:31:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4865726f2063616e27742063617374207265732e",
                        "id": 1643,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10145:22:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_29d6f82e62b3f3847e8c63474d4807c08ec68ab5ae5cb808dc99438fc952c076",
                          "typeString": "literal_string \"Hero can't cast res.\""
                        },
                        "value": "Hero can't cast res."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_29d6f82e62b3f3847e8c63474d4807c08ec68ab5ae5cb808dc99438fc952c076",
                          "typeString": "literal_string \"Hero can't cast res.\""
                        }
                      ],
                      "id": 1637,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10104:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1644,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10104:64:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1645,
                  "nodeType": "ExpressionStatement",
                  "src": "10104:64:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1658,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 1653,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "id": 1649,
                                "name": "_hId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1615,
                                "src": "10207:4:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 1647,
                                "name": "hero",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1624,
                                "src": "10194:4:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Hero_$8208",
                                  "typeString": "contract Hero"
                                }
                              },
                              "id": 1648,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "ownerOf",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 18380,
                              "src": "10194:12:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                                "typeString": "function (uint256) view external returns (address)"
                              }
                            },
                            "id": 1650,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10194:18:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 1651,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "10216:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1652,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "10216:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "10194:32:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "baseExpression": {
                            "id": 1654,
                            "name": "isAddon",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 374,
                            "src": "10230:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 1657,
                          "indexExpression": {
                            "expression": {
                              "id": 1655,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "10238:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1656,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "10238:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "10230:19:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "10194:55:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f752063616e277420646f20746861742e",
                        "id": 1659,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10251:20:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d7d39cdd78289ffe407372d62069f4c46fc233b1c8958049d7c179069491ae94",
                          "typeString": "literal_string \"You can't do that.\""
                        },
                        "value": "You can't do that."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d7d39cdd78289ffe407372d62069f4c46fc233b1c8958049d7c179069491ae94",
                          "typeString": "literal_string \"You can't do that.\""
                        }
                      ],
                      "id": 1646,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10186:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1660,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10186:86:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1661,
                  "nodeType": "ExpressionStatement",
                  "src": "10186:86:2"
                },
                {
                  "assignments": [
                    1663,
                    1665
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1663,
                      "mutability": "mutable",
                      "name": "heroHp",
                      "nameLocation": "10297:6:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1759,
                      "src": "10292:11:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1662,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "10292:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1665,
                      "mutability": "mutable",
                      "name": "heroPower",
                      "nameLocation": "10310:9:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1759,
                      "src": "10305:14:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1664,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "10305:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1670,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1668,
                        "name": "_hId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1615,
                        "src": "10334:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1666,
                        "name": "hero",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1624,
                        "src": "10323:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Hero_$8208",
                          "typeString": "contract Hero"
                        }
                      },
                      "id": 1667,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getHP",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7144,
                      "src": "10323:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                        "typeString": "function (uint256) external returns (uint256,uint256)"
                      }
                    },
                    "id": 1669,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10323:16:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10291:48:2"
                },
                {
                  "assignments": [
                    1672
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1672,
                      "mutability": "mutable",
                      "name": "heroAlive",
                      "nameLocation": "10362:9:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1759,
                      "src": "10357:14:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 1671,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "10357:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1677,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1675,
                        "name": "heroHp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1663,
                        "src": "10385:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1673,
                        "name": "hero",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1624,
                        "src": "10374:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Hero_$8208",
                          "typeString": "contract Hero"
                        }
                      },
                      "id": 1674,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "alive",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7737,
                      "src": "10374:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_pure$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (uint256) pure external returns (bool)"
                      }
                    },
                    "id": 1676,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10374:18:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10357:35:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1693,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1679,
                          "name": "heroAlive",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1672,
                          "src": "10418:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1692,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1690,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "expression": {
                                  "id": 1680,
                                  "name": "stats",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1631,
                                  "src": "10431:5:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Stats_$16414_memory_ptr",
                                    "typeString": "struct Stats memory"
                                  }
                                },
                                "id": 1681,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "talent",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 16411,
                                "src": "10431:12:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_HeroTalents_$16420_memory_ptr",
                                  "typeString": "struct HeroTalents memory"
                                }
                              },
                              "id": 1682,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "talent",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 16419,
                              "src": "10431:19:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "&",
                            "rightExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1688,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "hexValue": "31",
                                    "id": 1683,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "10454:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    },
                                    "value": "1"
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "<<",
                                  "rightExpression": {
                                    "arguments": [
                                      {
                                        "id": 1686,
                                        "name": "SELF_RES",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 16558,
                                        "src": "10464:8:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_int256",
                                          "typeString": "int256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_int256",
                                          "typeString": "int256"
                                        }
                                      ],
                                      "id": 1685,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "10459:4:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_uint256_$",
                                        "typeString": "type(uint256)"
                                      },
                                      "typeName": {
                                        "id": 1684,
                                        "name": "uint",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "10459:4:2",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 1687,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "10459:14:2",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "10454:19:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 1689,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "10453:21:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "10431:43:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 1691,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10477:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "10431:47:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "10418:60:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f752061726520646561642e",
                        "id": 1694,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10480:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1985926deecf40243c43a01debb7f51217ad1511777dde73484db1542946c106",
                          "typeString": "literal_string \"You are dead.\""
                        },
                        "value": "You are dead."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1985926deecf40243c43a01debb7f51217ad1511777dde73484db1542946c106",
                          "typeString": "literal_string \"You are dead.\""
                        }
                      ],
                      "id": 1678,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10410:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1695,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10410:86:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1696,
                  "nodeType": "ExpressionStatement",
                  "src": "10410:86:2"
                },
                {
                  "assignments": [
                    1698
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1698,
                      "mutability": "mutable",
                      "name": "heroLevel",
                      "nameLocation": "10519:9:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1759,
                      "src": "10514:14:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1697,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "10514:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1700,
                  "initialValue": {
                    "hexValue": "31",
                    "id": 1699,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "10531:1:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1_by_1",
                      "typeString": "int_const 1"
                    },
                    "value": "1"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10514:18:2"
                },
                {
                  "assignments": [
                    1702
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1702,
                      "mutability": "mutable",
                      "name": "cost",
                      "nameLocation": "10582:4:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1759,
                      "src": "10577:9:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1701,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "10577:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1706,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1705,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1703,
                      "name": "heroLevel",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1698,
                      "src": "10589:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "hexValue": "302e31",
                      "id": 1704,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10601:9:2",
                      "subdenomination": "ether",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100000000000000000_by_1",
                        "typeString": "int_const 100000000000000000"
                      },
                      "value": "0.1"
                    },
                    "src": "10589:21:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10577:33:2"
                },
                {
                  "condition": {
                    "id": 1712,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "10754:40:2",
                    "subExpression": {
                      "arguments": [
                        {
                          "id": 1709,
                          "name": "_hId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1615,
                          "src": "10768:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 1710,
                          "name": "ANCESTRAL_KNOWLEDGE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16543,
                          "src": "10774:19:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        ],
                        "expression": {
                          "id": 1707,
                          "name": "hero",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1624,
                          "src": "10755:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Hero_$8208",
                            "typeString": "contract Hero"
                          }
                        },
                        "id": 1708,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "canCast",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 8058,
                        "src": "10755:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_uint256_$_t_int256_$returns$_t_bool_$",
                          "typeString": "function (uint256,int256) view external returns (bool)"
                        }
                      },
                      "id": 1711,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10755:39:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1714,
                  "nodeType": "IfStatement",
                  "src": "10751:118:2",
                  "trueBody": {
                    "id": 1713,
                    "nodeType": "Block",
                    "src": "10796:73:2",
                    "statements": []
                  }
                },
                {
                  "assignments": [
                    1716,
                    1718
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1716,
                      "mutability": "mutable",
                      "name": "tarHp",
                      "nameLocation": "10893:5:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1759,
                      "src": "10888:10:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1715,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "10888:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1718,
                      "mutability": "mutable",
                      "name": "tarPow",
                      "nameLocation": "10905:6:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1759,
                      "src": "10900:11:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1717,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "10900:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1723,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1721,
                        "name": "_target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1617,
                        "src": "10926:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1719,
                        "name": "hero",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1624,
                        "src": "10915:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Hero_$8208",
                          "typeString": "contract Hero"
                        }
                      },
                      "id": 1720,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getHP",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7144,
                      "src": "10915:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                        "typeString": "function (uint256) external returns (uint256,uint256)"
                      }
                    },
                    "id": 1722,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10915:19:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10887:47:2"
                },
                {
                  "condition": {
                    "arguments": [
                      {
                        "id": 1726,
                        "name": "tarHp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1716,
                        "src": "10966:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1724,
                        "name": "hero",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1624,
                        "src": "10955:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Hero_$8208",
                          "typeString": "contract Hero"
                        }
                      },
                      "id": 1725,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "alive",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7737,
                      "src": "10955:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_pure$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (uint256) pure external returns (bool)"
                      }
                    },
                    "id": 1727,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10955:17:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 1740,
                    "nodeType": "Block",
                    "src": "10999:109:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1732,
                              "name": "_hId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1615,
                              "src": "11044:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1733,
                              "name": "_target",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1617,
                              "src": "11050:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "302e35",
                              "id": 1734,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11059:9:2",
                              "subdenomination": "ether",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_500000000000000000_by_1",
                                "typeString": "int_const 500000000000000000"
                              },
                              "value": "0.5"
                            },
                            {
                              "id": 1735,
                              "name": "META",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 16606,
                              "src": "11070:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            },
                            {
                              "expression": {
                                "id": 1736,
                                "name": "stats",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1631,
                                "src": "11076:5:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Stats_$16414_memory_ptr",
                                  "typeString": "struct Stats memory"
                                }
                              },
                              "id": 1737,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "effect",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 16408,
                              "src": "11076:12:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_rational_500000000000000000_by_1",
                                "typeString": "int_const 500000000000000000"
                              },
                              {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 1729,
                              "name": "hero",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1624,
                              "src": "11025:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Hero_$8208",
                                "typeString": "contract Hero"
                              }
                            },
                            "id": 1731,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "healByPercent",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7471,
                            "src": "11025:18:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_int256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256,uint256,int256,uint256) external"
                            }
                          },
                          "id": 1738,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11025:64:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1739,
                        "nodeType": "ExpressionStatement",
                        "src": "11025:64:2"
                      }
                    ]
                  },
                  "id": 1741,
                  "nodeType": "IfStatement",
                  "src": "10952:156:2",
                  "trueBody": {
                    "id": 1728,
                    "nodeType": "Block",
                    "src": "10974:19:2",
                    "statements": []
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1755,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 1745,
                              "name": "_hero",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1613,
                              "src": "11149:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1746,
                              "name": "_target",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1617,
                              "src": "11156:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1747,
                              "name": "FLAG_IS_ENEMY",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 16579,
                              "src": "11165:13:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            ],
                            "expression": {
                              "id": 1743,
                              "name": "spells",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 364,
                              "src": "11133:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_BaseSpells_$4161",
                                "typeString": "contract BaseSpells"
                              }
                            },
                            "id": 1744,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "getState",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2148,
                            "src": "11133:15:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$_t_int256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256,int256) view external returns (bool)"
                            }
                          },
                          "id": 1748,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11133:46:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 1751,
                              "name": "_hero",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1613,
                              "src": "11199:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1752,
                              "name": "_hId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1615,
                              "src": "11206:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1753,
                              "name": "FLAG_IS_ENEMY",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 16579,
                              "src": "11212:13:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            ],
                            "expression": {
                              "id": 1749,
                              "name": "spells",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 364,
                              "src": "11183:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_BaseSpells_$4161",
                                "typeString": "contract BaseSpells"
                              }
                            },
                            "id": 1750,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "getState",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2148,
                            "src": "11183:15:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$_t_int256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256,int256) view external returns (bool)"
                            }
                          },
                          "id": 1754,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11183:43:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "11133:93:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f742070616c732e",
                        "id": 1756,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11228:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5f7704a57ae360e169bf653902c5728a09abd2702e3595ce52e80907c13cf9cf",
                          "typeString": "literal_string \"Not pals.\""
                        },
                        "value": "Not pals."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5f7704a57ae360e169bf653902c5728a09abd2702e3595ce52e80907c13cf9cf",
                          "typeString": "literal_string \"Not pals.\""
                        }
                      ],
                      "id": 1742,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11125:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1757,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11125:115:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1758,
                  "nodeType": "ExpressionStatement",
                  "src": "11125:115:2"
                }
              ]
            },
            "functionSelector": "490caf2c",
            "id": 1760,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "castRES",
            "nameLocation": "9912:7:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1618,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1613,
                  "mutability": "mutable",
                  "name": "_hero",
                  "nameLocation": "9928:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1760,
                  "src": "9920:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1612,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9920:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1615,
                  "mutability": "mutable",
                  "name": "_hId",
                  "nameLocation": "9943:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1760,
                  "src": "9935:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1614,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9935:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1617,
                  "mutability": "mutable",
                  "name": "_target",
                  "nameLocation": "9957:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1760,
                  "src": "9949:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1616,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9949:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9919:46:2"
            },
            "returnParameters": {
              "id": 1621,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1620,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1760,
                  "src": "9981:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1619,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "9981:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9980:6:2"
            },
            "scope": 1761,
            "src": "9903:1348:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 1762,
        "src": "196:11057:2",
        "usedErrors": []
      }
    ],
    "src": "47:11208:2"
  },
  "bytecode": "",
  "bytecodeSha1": "b791654489f742bde1ec3f84442f66a336cc3aa0",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 100
    },
    "version": "0.8.15+commit.e14f2714"
  },
  "contractName": "BaseLoot",
  "coverageMap": {
    "branches": {
      "1": {},
      "13": {},
      "15": {},
      "17": {},
      "2": {
        "BaseLoot.activateAO": {
          "202": [
            6548,
            6580,
            true
          ],
          "203": [
            6584,
            6603,
            true
          ],
          "204": [
            6679,
            6717,
            false
          ],
          "205": [
            7082,
            7091,
            false
          ],
          "206": [
            7213,
            7221,
            false
          ],
          "207": [
            7365,
            7407,
            false
          ],
          "208": [
            7558,
            7593,
            false
          ],
          "209": [
            7733,
            7745,
            false
          ],
          "210": [
            7776,
            7800,
            false
          ],
          "211": [
            8056,
            8074,
            false
          ],
          "212": [
            8344,
            8362,
            false
          ],
          "213": [
            8393,
            8423,
            false
          ],
          "214": [
            8696,
            8709,
            false
          ],
          "215": [
            8745,
            8770,
            true
          ],
          "216": [
            8814,
            8858,
            false
          ]
        },
        "BaseLoot.activateIS": {
          "157": [
            5052,
            5061,
            false
          ],
          "158": [
            5211,
            5243,
            false
          ],
          "159": [
            5247,
            5264,
            false
          ]
        },
        "BaseLoot.addLoot": {
          "165": [
            1280,
            1297,
            true
          ],
          "166": [
            1301,
            1320,
            true
          ]
        },
        "BaseLoot.burnFrom": {
          "163": [
            2111,
            2128,
            true
          ],
          "164": [
            2132,
            2151,
            true
          ]
        },
        "BaseLoot.castCB": {
          "167": [
            9562,
            9594,
            true
          ],
          "168": [
            9598,
            9617,
            true
          ],
          "169": [
            9666,
            9697,
            true
          ],
          "170": [
            9756,
            9797,
            true
          ]
        },
        "BaseLoot.castDF": {
          "193": [
            3596,
            3626,
            true
          ],
          "194": [
            3684,
            3716,
            true
          ],
          "195": [
            3720,
            3739,
            true
          ],
          "196": [
            3908,
            3917,
            true
          ],
          "197": [
            4076,
            4093,
            true
          ],
          "198": [
            4252,
            4269,
            true
          ],
          "199": [
            4652,
            4669,
            false
          ]
        },
        "BaseLoot.castGW": {
          "160": [
            6089,
            6121,
            true
          ],
          "161": [
            6125,
            6144,
            true
          ],
          "162": [
            6193,
            6223,
            true
          ]
        },
        "BaseLoot.castIS": {
          "188": [
            5682,
            5714,
            true
          ],
          "189": [
            5718,
            5737,
            true
          ],
          "190": [
            5786,
            5815,
            true
          ]
        },
        "BaseLoot.castRES": {
          "171": [
            10112,
            10143,
            true
          ],
          "172": [
            10194,
            10226,
            true
          ],
          "173": [
            10230,
            10249,
            true
          ],
          "174": [
            10418,
            10427,
            true
          ],
          "175": [
            10431,
            10478,
            true
          ],
          "176": [
            10755,
            10794,
            false
          ],
          "177": [
            10955,
            10972,
            false
          ],
          "178": [
            11133,
            11226,
            true
          ]
        },
        "BaseLoot.loot": {
          "179": [
            2569,
            2578,
            true
          ],
          "180": [
            2617,
            2626,
            true
          ],
          "181": [
            2791,
            2823,
            true
          ],
          "182": [
            2827,
            2844,
            true
          ],
          "183": [
            2893,
            2935,
            true
          ],
          "184": [
            2977,
            3012,
            true
          ],
          "185": [
            3043,
            3087,
            true
          ],
          "186": [
            3120,
            3148,
            true
          ]
        },
        "BaseLoot.lootTo": {
          "191": [
            1941,
            1958,
            true
          ],
          "192": [
            1962,
            1981,
            true
          ]
        },
        "BaseLoot.setAddon": {
          "187": [
            1099,
            1116,
            true
          ]
        },
        "BaseLoot.setLooted": {
          "200": [
            1613,
            1630,
            true
          ],
          "201": [
            1634,
            1653,
            true
          ]
        }
      },
      "29": {},
      "3": {},
      "30": {
        "BaseLoot.initialize": {
          "241": [
            2421,
            2434,
            true
          ],
          "242": [
            2421,
            2469,
            true
          ]
        },
        "ReentrancyGuardUpgradeable.__ReentrancyGuard_init_unchained": {
          "243": [
            3024,
            3037,
            true
          ]
        }
      },
      "31": {},
      "32": {
        "ERC1155Upgradeable._burn": {
          "227": [
            11568,
            11586,
            true
          ],
          "228": [
            11940,
            11961,
            true
          ]
        },
        "ERC1155Upgradeable._burnBatch": {
          "233": [
            12604,
            12622,
            true
          ],
          "234": [
            12681,
            12709,
            true
          ],
          "235": [
            13088,
            13109,
            true
          ]
        },
        "ERC1155Upgradeable._doSafeBatchTransferAcceptanceCheck": {
          "239": [
            17476,
            17547,
            false
          ]
        },
        "ERC1155Upgradeable._doSafeTransferAcceptanceCheck": {
          "240": [
            16638,
            16704,
            false
          ]
        },
        "ERC1155Upgradeable._mint": {
          "232": [
            9446,
            9462,
            true
          ]
        },
        "ERC1155Upgradeable._safeBatchTransferFrom": {
          "229": [
            7042,
            7070,
            true
          ],
          "230": [
            7134,
            7150,
            true
          ],
          "231": [
            7520,
            7541,
            true
          ]
        },
        "ERC1155Upgradeable._safeTransferFrom": {
          "237": [
            5685,
            5701,
            true
          ],
          "238": [
            6051,
            6072,
            true
          ]
        },
        "ERC1155Upgradeable._setApprovalForAll": {
          "236": [
            13709,
            13726,
            true
          ]
        },
        "ERC1155Upgradeable.balanceOf": {
          "221": [
            2766,
            2787,
            true
          ]
        },
        "ERC1155Upgradeable.balanceOfBatch": {
          "224": [
            3247,
            3276,
            true
          ]
        },
        "ERC1155Upgradeable.safeBatchTransferFrom": {
          "222": [
            4824,
            4844,
            true
          ],
          "223": [
            4848,
            4884,
            true
          ]
        },
        "ERC1155Upgradeable.safeTransferFrom": {
          "225": [
            4321,
            4341,
            true
          ],
          "226": [
            4345,
            4381,
            true
          ]
        }
      },
      "34": {},
      "35": {
        "ERC1155BurnableUpgradeable.burn": {
          "219": [
            805,
            828,
            true
          ],
          "220": [
            832,
            871,
            true
          ]
        },
        "ERC1155BurnableUpgradeable.burnBatch": {
          "217": [
            1159,
            1182,
            true
          ],
          "218": [
            1186,
            1225,
            true
          ]
        }
      },
      "36": {},
      "4": {},
      "42": {},
      "43": {},
      "44": {},
      "5": {},
      "53": {},
      "56": {},
      "6": {},
      "63": {},
      "7": {}
    },
    "statements": {
      "1": {},
      "13": {},
      "15": {},
      "17": {},
      "2": {
        "BaseLoot._getSpellDamage": {
          "141": [
            9287,
            9309
          ]
        },
        "BaseLoot.activateAO": {
          "80": [
            6540,
            6626
          ],
          "81": [
            6725,
            6782
          ],
          "82": [
            6787,
            6816
          ],
          "83": [
            6821,
            6833
          ],
          "84": [
            7098,
            7152
          ],
          "85": [
            7157,
            7183
          ],
          "86": [
            7188,
            7200
          ],
          "87": [
            7228,
            7286
          ],
          "88": [
            7291,
            7321
          ],
          "89": [
            7326,
            7338
          ],
          "90": [
            7414,
            7476
          ],
          "91": [
            7481,
            7515
          ],
          "92": [
            7520,
            7532
          ],
          "93": [
            7600,
            7656
          ],
          "94": [
            7661,
            7689
          ],
          "95": [
            7694,
            7706
          ],
          "96": [
            7829,
            7894
          ],
          "97": [
            7974,
            8024
          ],
          "98": [
            8200,
            8280
          ],
          "99": [
            8452,
            8532
          ],
          "100": [
            8559,
            8585
          ],
          "101": [
            8612,
            8662
          ],
          "102": [
            8737,
            8785
          ],
          "103": [
            8893,
            8919
          ],
          "104": [
            8974,
            8998
          ],
          "105": [
            9084,
            9134
          ],
          "106": [
            9156,
            9188
          ]
        },
        "BaseLoot.activateIS": {
          "6": [
            5089,
            5139
          ],
          "7": [
            5165,
            5172
          ],
          "8": [
            5292,
            5347
          ],
          "9": [
            5416,
            5447
          ],
          "10": [
            5451,
            5496
          ],
          "11": [
            5500,
            5536
          ]
        },
        "BaseLoot.addLoot": {
          "18": [
            1272,
            1348
          ],
          "19": [
            1352,
            1383
          ]
        },
        "BaseLoot.burnFrom": {
          "16": [
            2103,
            2164
          ],
          "17": [
            2168,
            2198
          ]
        },
        "BaseLoot.castCB": {
          "23": [
            9554,
            9640
          ],
          "24": [
            9658,
            9730
          ],
          "25": [
            9748,
            9819
          ],
          "26": [
            9838,
            9890
          ]
        },
        "BaseLoot.castDF": {
          "66": [
            3588,
            3658
          ],
          "67": [
            3676,
            3762
          ],
          "68": [
            3900,
            3935
          ],
          "69": [
            4068,
            4128
          ],
          "70": [
            4146,
            4172
          ],
          "71": [
            4244,
            4289
          ],
          "72": [
            4491,
            4539
          ],
          "73": [
            4543,
            4581
          ],
          "74": [
            4676,
            4695
          ],
          "75": [
            4703,
            4742
          ],
          "76": [
            4760,
            4814
          ]
        },
        "BaseLoot.castGW": {
          "12": [
            6081,
            6167
          ],
          "13": [
            6185,
            6255
          ],
          "14": [
            6273,
            6356
          ]
        },
        "BaseLoot.castIS": {
          "61": [
            5674,
            5760
          ],
          "62": [
            5778,
            5846
          ],
          "63": [
            5865,
            5905
          ]
        },
        "BaseLoot.castRES": {
          "27": [
            10104,
            10168
          ],
          "28": [
            10186,
            10272
          ],
          "29": [
            10410,
            10496
          ],
          "30": [
            10751,
            10869
          ],
          "31": [
            11025,
            11089
          ],
          "32": [
            11125,
            11240
          ]
        },
        "BaseLoot.getAddon": {
          "0": [
            987,
            1009
          ]
        },
        "BaseLoot.initialize": {
          "38": [
            629,
            649
          ],
          "39": [
            667,
            691
          ],
          "40": [
            709,
            733
          ],
          "41": [
            752,
            762
          ],
          "42": [
            780,
            810
          ],
          "43": [
            828,
            852
          ],
          "44": [
            870,
            901
          ]
        },
        "BaseLoot.loot": {
          "45": [
            2561,
            2605
          ],
          "46": [
            2609,
            2644
          ],
          "47": [
            2783,
            2867
          ],
          "48": [
            2885,
            2951
          ],
          "49": [
            2969,
            3031
          ],
          "50": [
            3035,
            3108
          ],
          "52": [
            3112,
            3168
          ],
          "53": [
            3173,
            3211
          ],
          "54": [
            3243,
            3327
          ],
          "55": [
            3332,
            3369
          ],
          "56": [
            3374,
            3423
          ]
        },
        "BaseLoot.lootTo": {
          "64": [
            1933,
            1992
          ],
          "65": [
            1996,
            2025
          ]
        },
        "BaseLoot.looted": {
          "51": [
            1479,
            1509
          ]
        },
        "BaseLoot.setAddon": {
          "59": [
            1091,
            1147
          ],
          "60": [
            1165,
            1189
          ]
        },
        "BaseLoot.setLooted": {
          "78": [
            1605,
            1680
          ],
          "79": [
            1684,
            1715
          ]
        }
      },
      "29": {},
      "3": {},
      "30": {
        "Initializable._isConstructor": {
          "37": [
            3178,
            3230
          ]
        }
      },
      "31": {
        "ReentrancyGuardUpgradeable.__ReentrancyGuard_init": {
          "125": [
            1963,
            1997
          ]
        },
        "ReentrancyGuardUpgradeable.__ReentrancyGuard_init_unchained": {
          "154": [
            2094,
            2116
          ]
        }
      },
      "32": {
        "ERC1155Upgradeable.__ERC1155_init": {
          "124": [
            1401,
            1431
          ]
        },
        "ERC1155Upgradeable.__ERC1155_init_unchained": {
          "153": [
            1538,
            1551
          ]
        },
        "ERC1155Upgradeable._asSingletonArray": {
          "148": [
            18018,
            18036
          ],
          "149": [
            18049,
            18061
          ]
        },
        "ERC1155Upgradeable._burn": {
          "110": [
            11560,
            11626
          ],
          "111": [
            11801,
            11867
          ],
          "112": [
            11932,
            12002
          ],
          "113": [
            12038,
            12080
          ],
          "114": [
            12104,
            12163
          ],
          "115": [
            12176,
            12241
          ]
        },
        "ERC1155Upgradeable._burnBatch": {
          "130": [
            12596,
            12662
          ],
          "131": [
            12673,
            12754
          ],
          "132": [
            12811,
            12877
          ],
          "133": [
            13080,
            13150
          ],
          "134": [
            13194,
            13236
          ],
          "135": [
            12926,
            12929
          ],
          "136": [
            13275,
            13335
          ],
          "137": [
            13348,
            13413
          ]
        },
        "ERC1155Upgradeable._doSafeBatchTransferAcceptanceCheck": {
          "150": [
            17711,
            17725
          ],
          "151": [
            17767,
            17829
          ],
          "152": [
            17572,
            17622
          ]
        },
        "ERC1155Upgradeable._doSafeTransferAcceptanceCheck": {
          "155": [
            16729,
            16779
          ]
        },
        "ERC1155Upgradeable._mint": {
          "126": [
            9438,
            9500
          ],
          "127": [
            9754,
            9781
          ],
          "128": [
            9792,
            9849
          ],
          "129": [
            9940,
            10014
          ]
        },
        "ERC1155Upgradeable._safeBatchTransferFrom": {
          "116": [
            7034,
            7115
          ],
          "117": [
            7126,
            7192
          ],
          "118": [
            7512,
            7588
          ],
          "119": [
            7632,
            7674
          ],
          "120": [
            7704,
            7731
          ],
          "121": [
            7358,
            7361
          ],
          "122": [
            7755,
            7807
          ],
          "123": [
            7892,
            7967
          ]
        },
        "ERC1155Upgradeable._safeTransferFrom": {
          "142": [
            5677,
            5743
          ],
          "143": [
            6043,
            6119
          ],
          "144": [
            6155,
            6197
          ],
          "145": [
            6219,
            6246
          ],
          "146": [
            6259,
            6310
          ],
          "147": [
            6395,
            6463
          ]
        },
        "ERC1155Upgradeable._setApprovalForAll": {
          "138": [
            13701,
            13772
          ],
          "139": [
            13783,
            13829
          ],
          "140": [
            13840,
            13886
          ]
        },
        "ERC1155Upgradeable._setURI": {
          "156": [
            8886,
            8899
          ]
        },
        "ERC1155Upgradeable.balanceOf": {
          "2": [
            2758,
            2835
          ],
          "3": [
            2846,
            2875
          ]
        },
        "ERC1155Upgradeable.balanceOfBatch": {
          "33": [
            3239,
            3322
          ],
          "34": [
            3472,
            3521
          ],
          "35": [
            3452,
            3455
          ],
          "36": [
            3545,
            3565
          ]
        },
        "ERC1155Upgradeable.isApprovedForAll": {
          "1": [
            3989,
            4033
          ]
        },
        "ERC1155Upgradeable.safeBatchTransferFrom": {
          "20": [
            4802,
            4962
          ],
          "22": [
            4973,
            5025
          ]
        },
        "ERC1155Upgradeable.safeTransferFrom": {
          "107": [
            4299,
            4450
          ],
          "108": [
            4461,
            4506
          ]
        },
        "ERC1155Upgradeable.setApprovalForAll": {
          "77": [
            3741,
            3793
          ]
        },
        "ERC1155Upgradeable.supportsInterface": {
          "4": [
            1772,
            1977
          ]
        },
        "ERC1155Upgradeable.uri": {
          "15": [
            2482,
            2493
          ]
        }
      },
      "34": {},
      "35": {
        "ERC1155BurnableUpgradeable.burn": {
          "109": [
            783,
            940
          ]
        },
        "ERC1155BurnableUpgradeable.burnBatch": {
          "57": [
            1137,
            1294
          ],
          "58": [
            1307,
            1339
          ]
        }
      },
      "36": {},
      "4": {},
      "42": {
        "ContextUpgradeable._msgSender": {
          "21": [
            945,
            962
          ]
        }
      },
      "43": {
        "ERC165Upgradeable.supportsInterface": {
          "5": [
            1193,
            1251
          ]
        }
      },
      "44": {},
      "5": {},
      "53": {},
      "56": {},
      "6": {},
      "63": {},
      "7": {}
    }
  },
  "dependencies": [
    "Address",
    "Base",
    "BaseSpells",
    "BookTradable",
    "ContextUpgradeable",
    "CultureCoin",
    "CultureCoinWrapper",
    "ERC1155BurnableUpgradeable",
    "ERC1155Upgradeable",
    "ERC165Upgradeable",
    "Hero",
    "IERC1155MetadataURIUpgradeable",
    "IERC1155Upgradeable",
    "IERC165Upgradeable",
    "IERC20",
    "Initializable",
    "Legion",
    "MyItems",
    "Receiver",
    "ReentrancyGuardUpgradeable",
    "SafeERC20"
  ],
  "deployedBytecode": "6080604052600436106101765760003560e01c80636865aece116100cc578063a22cb4651161007a578063a22cb46514610465578063aa35e50914610485578063b9c21cda14610491578063c08d71eb146104b1578063e985e9c51461051e578063f242432a14610567578063f5298aca1461058757600080fd5b80636865aece1461036b5780636b20c4541461038b5780636d714b68146103ab578063744fb3a6146103cb57806377cb0d6c146103eb5780638297f29f1461040b57806383fb8db61461044557600080fd5b80632eb2c2d6116101295780632eb2c2d61461028d5780632f49bcd1146102ad578063490caf2c146102cd578063495057be146101fe5780634e1273f4146102ed578063596c63251461031a57806365e8e4f41461034b57600080fd5b8062fdd58e1461017b57806301ffc9a7146101ae578063064bb15c146101de57806307a369b6146102005780630e89341c14610220578063124d91e51461024d5780631f0f92f11461026d575b600080fd5b34801561018757600080fd5b5061019b610196366004614443565b6105a7565b6040519081526020015b60405180910390f35b3480156101ba57600080fd5b506101ce6101c9366004614485565b610640565b60405190151581526020016101a5565b3480156101ea57600080fd5b506101fe6101f9366004614443565b610692565b005b34801561020c57600080fd5b506101fe61021b3660046144a9565b6109d3565b34801561022c57600080fd5b5061024061023b3660046144e4565b610c1a565b6040516101a5919061454a565b34801561025957600080fd5b506101fe61026836600461455d565b610cae565b34801561027957600080fd5b506101fe61028836600461455d565b610d1e565b34801561029957600080fd5b506101fe6102a836600461470a565b610db1565b3480156102b957600080fd5b506101fe6102c83660046147c5565b610e48565b3480156102d957600080fd5b5061019b6102e836600461455d565b6110a0565b3480156102f957600080fd5b5061030d610308366004614817565b6116c6565b6040516101a5919061491e565b34801561032657600080fd5b506101ce610335366004614931565b6101006020526000908152604090205460ff1681565b34801561035757600080fd5b506101fe61036636600461494e565b6117ef565b34801561037757600080fd5b5061019b61038636600461455d565b61190a565b34801561039757600080fd5b506101fe6103a63660046149d6565b61207b565b3480156103b757600080fd5b506101fe6103c6366004614a4b565b6120be565b3480156103d757600080fd5b506101fe6103e6366004614443565b612144565b3480156103f757600080fd5b506101fe6104063660046144a9565b61231d565b34801561041757600080fd5b506101ce610426366004614931565b6001600160a01b03166000908152610100602052604090205460ff1690565b34801561045157600080fd5b506101fe6104603660046144a9565b6123aa565b34801561047157600080fd5b506101fe610480366004614a4b565b612b91565b3480156101fe57600080fd5b34801561049d57600080fd5b506101fe6104ac366004614a84565b612ba0565b3480156104bd57600080fd5b506104d16104cc366004614ace565b612c39565b6040516101a59190600060c08201905082518252602083015160208301526040830151604083015260608301516060830152608083015151608083015260a083015160a083015292915050565b34801561052a57600080fd5b506101ce610539366004614b12565b6001600160a01b03918216600090815260666020908152604080832093909416825291909152205460ff1690565b34801561057357600080fd5b506101fe610582366004614b40565b6138f6565b34801561059357600080fd5b506101fe6105a236600461455d565b61393b565b60006001600160a01b0383166106185760405162461bcd60e51b815260206004820152602b60248201527f455243313135353a2062616c616e636520717565727920666f7220746865207a60448201526a65726f206164647265737360a81b60648201526084015b60405180910390fd5b5060009081526065602090815260408083206001600160a01b03949094168352929052205490565b60006001600160e01b03198216636cdb3d1360e11b148061067157506001600160e01b031982166303a24d0760e21b145b8061068c57506301ffc9a760e01b6001600160e01b03198316145b92915050565b6040516343e8c3f760e11b815260048101829052829060009081906001600160a01b038416906387d187ee9060240160408051808303816000875af11580156106df573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107039190614ba8565b604051636573c78760e01b81526004810183905291935091506000906001600160a01b03851690636573c78790602401602060405180830381865afa158015610750573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107749190614bcc565b9050806107eb576040516325b5e89760e11b81526001600160a01b03851690634b6bd12e906107b19088908190604b906001906004908101614be9565b600060405180830381600087803b1580156107cb57600080fd5b505af11580156107df573d6000803e3d6000fd5b50505050505050505050565b6040516331a9108f60e11b81526004810186905233906001600160a01b03861690636352211e90602401602060405180830381865afa158015610832573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108569190614c0c565b6001600160a01b031614158015610878575060fb546001600160a01b03163314155b156108b3576040516325b5e89760e11b81526001600160a01b03851690634b6bd12e906107b19088908190604b906001908190600401614be9565b604051631554ee0760e21b815260048101869052604b6024820152600160448201526001600160a01b03851690635553b81c906064016020604051808303816000875af1158015610908573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061092c9190614bcc565b5060fe546040516316b980f160e11b81526001600160a01b0390911690632d7301e2906109659089908990604b90600190600401614c29565b600060405180830381600087803b15801561097f57600080fd5b505af1158015610993573d6000803e3d6000fd5b505060fe546040516309dfe84160e01b81526001600160a01b0390911692506309dfe84191506107b19089908990670de0b6b3a764000090600401614c51565b6040516331a9108f60e11b815260048101849052849033906001600160a01b03831690636352211e90602401602060405180830381865afa158015610a1c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a409190614c0c565b6001600160a01b03161480610a655750336000908152610100602052604090205460ff165b610a815760405162461bcd60e51b815260040161060f90614c72565b604051636bfc324f60e01b815260048101859052608560248201526001600160a01b03821690636bfc324f90604401602060405180830381865afa158015610acd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610af19190614bcc565b610b3d5760405162461bcd60e51b815260206004820152601b60248201527f4865726f2063616e277420636173742067686f737420776f6c662e0000000000604482015260640161060f565b60fe5460405163156a0bf160e21b81526001600160a01b0390911690632d7301e2908790879060859085906355a82fc490610b8090869086908690600401614c51565b602060405180830381865afa158015610b9d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bc19190614bcc565b156040518563ffffffff1660e01b8152600401610be19493929190614c29565b600060405180830381600087803b158015610bfb57600080fd5b505af1158015610c0f573d6000803e3d6000fd5b505050505050505050565b606060678054610c2990614c9e565b80601f0160208091040260200160405190810160405280929190818152602001828054610c5590614c9e565b8015610ca25780601f10610c7757610100808354040283529160200191610ca2565b820191906000526020600020905b815481529060010190602001808311610c8557829003601f168201915b50505050509050919050565b60fb546001600160a01b0316331480610cd75750336000908152610100602052604090205460ff165b610d0e5760405162461bcd60e51b81526020600482015260086024820152676275726e46726f6d60c01b604482015260640161060f565b610d19838383613973565b505050565b60fb546001600160a01b0316331480610d475750336000908152610100602052604090205460ff165b610d8d5760405162461bcd60e51b81526020600482015260176024820152762cb7ba9031b0b713ba1030b232103a3432903637b7ba1760491b604482015260640161060f565b600091825260ff602090815260408084209284529190529020805460ff1916905550565b6001600160a01b038516331480610dcd5750610dcd8533610539565b610e345760405162461bcd60e51b815260206004820152603260248201527f455243313135353a207472616e736665722063616c6c6572206973206e6f74206044820152711bdddb995c881b9bdc88185c1c1c9bdd995960721b606482015260840161060f565b610e418585858585613a68565b5050505050565b6040516331a9108f60e11b815260048101859052859033906001600160a01b03831690636352211e90602401602060405180830381865afa158015610e91573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610eb59190614c0c565b6001600160a01b03161480610eda5750336000908152610100602052604090205460ff165b610ef65760405162461bcd60e51b815260040161060f90614c72565b604051636bfc324f60e01b815260048101869052602e60248201526001600160a01b03821690636bfc324f90604401602060405180830381865afa158015610f42573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f669190614bcc565b610fb25760405162461bcd60e51b815260206004820152601c60248201527f4865726f2063616e2774206361737420636861726d2062656173742e00000000604482015260640161060f565b60fe5460405163156a0bf160e21b81526001600160a01b03909116906355a82fc490610fe8908990899061271090600401614c51565b602060405180830381865afa158015611005573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110299190614bcc565b6110695760405162461bcd60e51b815260206004820152601160248201527021b0b713ba1031b430b936903a3430ba1760791b604482015260640161060f565b60fe546040516316b980f160e11b81526001600160a01b0390911690632d7301e2906107b19089908890602e908990600401614c29565b604051637b30396560e01b815260048101839052600090849082906001600160a01b03831690637b3039659060240160c0604051808303816000875af11580156110ee573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111129190614cd8565b604051636bfc324f60e01b815260048101879052608860248201529091506001600160a01b03831690636bfc324f90604401602060405180830381865afa158015611161573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111859190614bcc565b6111c85760405162461bcd60e51b81526020600482015260146024820152732432b9379031b0b713ba1031b0b9ba103932b99760611b604482015260640161060f565b6040516331a9108f60e11b81526004810186905233906001600160a01b03841690636352211e90602401602060405180830381865afa15801561120f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112339190614c0c565b6001600160a01b031614806112585750336000908152610100602052604090205460ff165b6112745760405162461bcd60e51b815260040161060f90614c72565b6040516343e8c3f760e11b81526004810186905260009081906001600160a01b038516906387d187ee9060240160408051808303816000875af11580156112bf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112e39190614ba8565b604051636573c78760e01b81526004810183905291935091506000906001600160a01b03861690636573c78790602401602060405180830381865afa158015611330573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113549190614bcc565b9050808061136c5750608084015151600160891b1615155b6113885760405162461bcd60e51b815260040161060f90614d73565b6001600061139e8267016345785d8a0000614db0565b604051636bfc324f60e01b8152600481018c9052608660248201529091506001600160a01b03881690636bfc324f90604401602060405180830381865afa1580156113ed573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114119190614bcc565b506040516343e8c3f760e11b8152600481018a905260009081906001600160a01b038a16906387d187ee9060240160408051808303816000875af115801561145d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114819190614ba8565b604051636573c78760e01b81526004810183905291935091506001600160a01b038a1690636573c78790602401602060405180830381865afa1580156114cb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114ef9190614bcc565b61156757886001600160a01b0316638fc567678d8d6706f05b59d3b2000060048d606001516040518663ffffffff1660e01b8152600401611534959493929190614be9565b600060405180830381600087803b15801561154e57600080fd5b505af1158015611562573d6000803e3d6000fd5b505050505b60fe60009054906101000a90046001600160a01b03166001600160a01b03166355a82fc48e8e6127126040518463ffffffff1660e01b81526004016115ae93929190614c51565b602060405180830381865afa1580156115cb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115ef9190614bcc565b151560fe60009054906101000a90046001600160a01b03166001600160a01b03166355a82fc48f8e6127126040518463ffffffff1660e01b815260040161163893929190614c51565b602060405180830381865afa158015611655573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116799190614bcc565b1515146116b45760405162461bcd60e51b81526020600482015260096024820152682737ba103830b6399760b91b604482015260640161060f565b5050505050505050509392505050565b565b6060815183511461172b5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e677468604482015268040dad2e6dac2e8c6d60bb1b606482015260840161060f565b600083516001600160401b0381111561174657611746614592565b60405190808252806020026020018201604052801561176f578160200160208202803683370190505b50905060005b84518110156117e7576117ba85828151811061179357611793614dcf565b60200260200101518583815181106117ad576117ad614dcf565b60200260200101516105a7565b8282815181106117cc576117cc614dcf565b60209081029190910101526117e081614de5565b9050611775565b509392505050565b600054610100900460ff1661180a5760005460ff161561180e565b303b155b6118715760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840161060f565b600054610100900460ff16158015611893576000805461ffff19166101011790555b61189c82613c07565b6118a4613c3a565b6118ac613c61565b60fb80546001600160a01b038088166001600160a01b03199283161790925560fd805487841690831617905560fc80549286169282168317905560fe805490911690911790558015610e41576000805461ff00191690555050505050565b6040516343e8c3f760e11b8152600481018390526000908490829081906001600160a01b038416906387d187ee9060240160408051808303816000875af1158015611959573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061197d9190614ba8565b91509150600080846001600160a01b03166387d187ee886040518263ffffffff1660e01b81526004016119b291815260200190565b60408051808303816000875af11580156119d0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119f49190614ba8565b604051636573c78760e01b81526004810187905291935091506000906001600160a01b03871690636573c78790602401602060405180830381865afa158015611a41573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a659190614bcc565b604051636573c78760e01b8152600481018590529091506000906001600160a01b03881690636573c78790602401602060405180830381865afa158015611ab0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ad49190614bcc565b90508015611b1d5760405162461bcd60e51b81526020600482015260166024820152752a30b933b2ba1034b99030b634bb329039ba34b6361760511b604482015260640161060f565b81611b3a5760405162461bcd60e51b815260040161060f90614d73565b6040516331a9108f60e11b8152600481018b905233906001600160a01b03891690636352211e90602401602060405180830381865afa158015611b81573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ba59190614c0c565b6001600160a01b03161480611bc4575060fb546001600160a01b031633145b611be05760405162461bcd60e51b815260040161060f90614c72565b60fe5460405163562530df60e11b81526001600160a01b039091169063ac4a61be90611c17908e908e908e90600190600401614dfe565b6020604051808303816000875af1158015611c36573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c5a9190614bcc565b611c945760405162461bcd60e51b815260206004820152600b60248201526a3637b7ba1034b99027a7a960a91b604482015260640161060f565b60fe5460405163214ac01b60e11b81526001600160a01b0390911690634295803690611cc8908e908e908e90600401614c51565b602060405180830381865afa158015611ce5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d099190614bcc565b611d465760405162461bcd60e51b815260206004820152600e60248201526d6c6f6f74206c61636b73204c4f5360901b604482015260640161060f565b60fe5460405163156a0bf160e21b81526001600160a01b03909116906355a82fc490611d7c908e908d9061271090600401614c51565b602060405180830381865afa158015611d99573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611dbd9190614bcc565b611dfc5760405162461bcd60e51b815260206004820152601060248201526f21b0b713ba103637b7ba103a3430ba1760811b604482015260640161060f565b60008a815260ff602081815260408084208d8552909152909120541615611e575760405162461bcd60e51b815260206004820152600f60248201526e20b63932b0b23c903637b7ba32b21760891b604482015260640161060f565b611e81338a6009604051806040016040528060058152602001646c6f6f743960d81b815250613c90565b611fe8876001600160a01b03166351f41ee36040518163ffffffff1660e01b8152600401602060405180830381865afa158015611ec2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ee69190614c0c565b6001600160a01b0316636352211e896001600160a01b03166333d119eb8e6040518263ffffffff1660e01b8152600401611f2291815260200190565b602060405180830381865afa158015611f3f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f639190614e24565b6040518263ffffffff1660e01b8152600401611f8191815260200190565b602060405180830381865afa158015611f9e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611fc29190614c0c565b8a6001604051806040016040528060058152602001646c6f6f743160d81b815250613c90565b611ff5878b8b6001612c0e565b60fe546040516330e327ef60e21b81526001600160a01b039091169063c38c9fbc90612029908e908e908e90600401614c51565b6020604051808303816000875af1158015612048573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061206c9190614e24565b9b9a5050505050505050505050565b6001600160a01b03831633148061209757506120978333610539565b6120b35760405162461bcd60e51b815260040161060f90614e3d565b610d19838383613d8b565b60fb546001600160a01b031633146121185760405162461bcd60e51b815260206004820152601a60248201527f4f6e6c792061646d696e73206d617920736574206164646f6e2e000000000000604482015260640161060f565b6001600160a01b0391909116600090815261010060205260409020805460ff1916911515919091179055565b6040516331a9108f60e11b815260048101829052829033906001600160a01b03831690636352211e90602401602060405180830381865afa15801561218d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121b19190614c0c565b6001600160a01b031614806121d65750336000908152610100602052604090205460ff165b6121f25760405162461bcd60e51b815260040161060f90614c72565b604051636bfc324f60e01b815260048101839052604b60248201526001600160a01b03821690636bfc324f90604401602060405180830381865afa15801561223e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122629190614bcc565b6122ae5760405162461bcd60e51b815260206004820152601a60248201527f4865726f2063616e277420636173742069726f6e20736b696e2e000000000000604482015260640161060f565b60fe54604051630422f68360e21b81526001600160a01b039091169063108bda0c906122e69086908690604b90600190600401614dfe565b600060405180830381600087803b15801561230057600080fd5b505af1158015612314573d6000803e3d6000fd5b50505050505050565b60fb546001600160a01b03163314806123465750336000908152610100602052604090205460ff165b61237b5760405162461bcd60e51b81526020600482015260066024820152656c6f6f74546f60d01b604482015260640161060f565b6123a484846001604051806040016040528060048152602001631b1bdbdd60e21b815250613c90565b50505050565b604051636bfc324f60e01b815260048101849052601f602482015284906001600160a01b03821690636bfc324f90604401602060405180830381865afa1580156123f8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061241c9190614bcc565b6124685760405162461bcd60e51b815260206004820152601b60248201527f4865726f2063616e2774206361737420647275696420666972652e0000000000604482015260640161060f565b6040516331a9108f60e11b81526004810185905233906001600160a01b03831690636352211e90602401602060405180830381865afa1580156124af573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124d39190614c0c565b6001600160a01b031614806124f85750336000908152610100602052604090205460ff165b6125145760405162461bcd60e51b815260040161060f90614c72565b6040516343e8c3f760e11b81526004810185905260009081906001600160a01b038416906387d187ee9060240160408051808303816000875af115801561255f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906125839190614ba8565b604051636573c78760e01b81526004810183905291935091506000906001600160a01b03851690636573c78790602401602060405180830381865afa1580156125d0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906125f49190614bcc565b9050806126135760405162461bcd60e51b815260040161060f90614d73565b60fe54604051632c487cab60e21b81526001600160a01b038a81166004830152602482018a9052600092169063b121f2ac906044016020604051808303816000875af1158015612667573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061268b9190614e24565b905060006126a18267016345785d8a0000614db0565b9050838111156126f35760405162461bcd60e51b815260206004820152601e60248201527f596f75206c61636b2074686520706f77657220746f20646f20746861742e0000604482015260640161060f565b6040516317c57edf60e31b8152600481018a9052602481018290526001600160a01b0387169063be2bf6f8906044016020604051808303816000875af1158015612741573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906127659190614e24565b506040516343e8c3f760e11b8152600481018990526000906001600160a01b038816906387d187ee9060240160408051808303816000875af11580156127af573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906127d39190614ba8565b50604051636573c78760e01b8152600481018290529091506001600160a01b03881690636573c78790602401602060405180830381865afa15801561281c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906128409190614bcc565b61287e5760405162461bcd60e51b815260206004820152600f60248201526e2a30b933b2ba1034b9903232b0b21760891b604482015260640161060f565b604051637b30396560e01b8152600481018b90526000906001600160a01b03891690637b3039659060240160c0604051808303816000875af11580156128c8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906128ec9190614cd8565b905060008482600001516129009190614db0565b60405163f7bdfed360e01b8152600481018d90529091506000906001600160a01b038b169063f7bdfed39060240160c0604051808303816000875af115801561294d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906129719190614e86565b60fe546040828101519051634371793160e01b81526004810186905260248101919091529192506001600160a01b031690634371793190604401602060405180830381865afa1580156129c8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906129ec9190614e24565b915060fe60009054906101000a90046001600160a01b03166001600160a01b0316637df554988f8e6040518363ffffffff1660e01b8152600401612a459291906001600160a01b03929092168252602082015260400190565b6020604051808303816000875af1158015612a64573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612a889190614e24565b93506706f05b59d3b20000841115612aa857612aa5600283614ee4565b91505b60fe546001600160a01b03166309dfe8418f8e612ac6600289614ee4565b6040518463ffffffff1660e01b8152600401612ae493929190614c51565b600060405180830381600087803b158015612afe57600080fd5b505af1158015612b12573d6000803e3d6000fd5b50505050896001600160a01b031663995b08fc8e8e85600188606001516040518663ffffffff1660e01b8152600401612b4f959493929190614be9565b600060405180830381600087803b158015612b6957600080fd5b505af1158015612b7d573d6000803e3d6000fd5b505050505050505050505050505050505050565b612b9c338383613f18565b5050565b60fb546001600160a01b0316331480612bc95750336000908152610100602052604090205460ff165b612c0e5760405162461bcd60e51b81526020600482015260166024820152752cb7ba9031b0b73a1039b2ba103a3432903637b7ba1760511b604482015260640161060f565b600092835260ff602090815260408085209385529290529120805460ff191691151591909117905550565b612c416143e4565b6040516331a9108f60e11b815260048101869052869033906001600160a01b03831690636352211e90602401602060405180830381865afa158015612c8a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612cae9190614c0c565b6001600160a01b03161480612cd35750336000908152610100602052604090205460ff165b612cef5760405162461bcd60e51b815260040161060f90614c72565b604051637b30396560e01b8152600481018790526000906001600160a01b03831690637b3039659060240160c0604051808303816000875af1158015612d39573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612d5d9190614cd8565b604051631554ee0760e21b81526004810189905260016024820152604481018690529091506001600160a01b03831690635553b81c906064016020604051808303816000875af1158015612db5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612dd99190614bcc565b612e55576040516325b5e89760e11b81526001600160a01b03831690634b6bd12e90612e12908a908a908a908a90600790600401614be9565b600060405180830381600087803b158015612e2c57600080fd5b505af1158015612e40573d6000803e3d6000fd5b5050600760a0840152509092506138ed915050565b6040516343e8c3f760e11b81526004810188905260009081906001600160a01b038516906387d187ee9060240160408051808303816000875af1158015612ea0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612ec49190614ba8565b91509150600080856001600160a01b03166387d187ee8b6040518263ffffffff1660e01b8152600401612ef991815260200190565b60408051808303816000875af1158015612f17573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612f3b9190614ba8565b604051636573c78760e01b81526004810187905291935091506000906001600160a01b03881690636573c78790602401602060405180830381865afa158015612f88573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612fac9190614bcc565b604051636573c78760e01b8152600481018590529091506000906001600160a01b03891690636573c78790602401602060405180830381865afa158015612ff7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061301b9190614bcc565b9050816130a057876001600160a01b0316634b6bd12e8e8e8e8e60046040518663ffffffff1660e01b8152600401613057959493929190614be9565b600060405180830381600087803b15801561307157600080fd5b505af1158015613085573d6000803e3d6000fd5b5050600460a08a0152509698506138ed975050505050505050565b8061312357876001600160a01b0316634b6bd12e8e8e8e8e60056040518663ffffffff1660e01b81526004016130da959493929190614be9565b600060405180830381600087803b1580156130f457600080fd5b505af1158015613108573d6000803e3d6000fd5b5050600560a08a0152509698506138ed975050505050505050565b60fe60009054906101000a90046001600160a01b03166001600160a01b031663ac4a61be8f8f8f60016040518563ffffffff1660e01b815260040161316b9493929190614dfe565b6020604051808303816000875af115801561318a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906131ae9190614bcc565b61323057876001600160a01b0316634b6bd12e8e8e8e8e60026040518663ffffffff1660e01b81526004016131e7959493929190614be9565b600060405180830381600087803b15801561320157600080fd5b505af1158015613215573d6000803e3d6000fd5b5050600260a08a0152509698506138ed975050505050505050565b60fe60009054906101000a90046001600160a01b03166001600160a01b031663429580368f8f8f6040518463ffffffff1660e01b815260040161327593929190614c51565b602060405180830381865afa158015613292573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906132b69190614bcc565b61333857876001600160a01b0316634b6bd12e8e8e8e8e60036040518663ffffffff1660e01b81526004016132ef959493929190614be9565b600060405180830381600087803b15801561330957600080fd5b505af115801561331d573d6000803e3d6000fd5b5050600360a08a0152509698506138ed975050505050505050565b60968b0361349d57604051636bfc324f60e01b8152600481018e9052609660248201526001600160a01b03891690636bfc324f90604401602060405180830381865afa15801561338c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906133b09190614bcc565b15613436576001600160a01b03881663bc186c6e8e8e6133d88e670de0b6b3a7640000614db0565b60048c606001516040518663ffffffff1660e01b81526004016133ff959493929190614be9565b600060405180830381600087803b15801561341957600080fd5b505af115801561342d573d6000803e3d6000fd5b5050505061349d565b876001600160a01b031663480a962b338f8f8f8f6040518663ffffffff1660e01b815260040161346a959493929190614f06565b600060405180830381600087803b15801561348457600080fd5b505af1158015613498573d6000803e3d6000fd5b505050505b60018b0361352757876001600160a01b031663995b08fc8e8e6134bf8b613ff8565b6134c9908f614db0565b60048c606001516040518663ffffffff1660e01b81526004016134f0959493929190614be9565b600060405180830381600087803b15801561350a57600080fd5b505af115801561351e573d6000803e3d6000fd5b505050506138db565b601f8b036136ce57604051636bfc324f60e01b8152600481018e9052601f60248201526001600160a01b03891690636bfc324f90604401602060405180830381865afa15801561357b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061359f9190614bcc565b1561369a57876001600160a01b031663995b08fc8e8e6135be8b613ff8565b6135c8908f614db0565b60018c606001516040518663ffffffff1660e01b81526004016135ef959493929190614be9565b600060405180830381600087803b15801561360957600080fd5b505af115801561361d573d6000803e3d6000fd5b50506040516317c57edf60e31b8152600481018f9052600160248201526001600160a01b038b16925063be2bf6f891506044015b6020604051808303816000875af1158015613670573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906136949190614e24565b506138db565b876001600160a01b031663480a962b338f8f8f8f6040518663ffffffff1660e01b81526004016134f0959493929190614f06565b603d8b0361387457604051636bfc324f60e01b8152600481018e9052603d60248201526001600160a01b03891690636bfc324f90604401602060405180830381865afa158015613722573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906137469190614bcc565b61377f5760405162461bcd60e51b815260206004820152600a60248201526928bab4b2ba103cb7ba9760b11b604482015260640161060f565b60fe60009054906101000a90046001600160a01b03166001600160a01b03166355a82fc48f8e6127106040518463ffffffff1660e01b81526004016137c693929190614c51565b602060405180830381865afa1580156137e3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906138079190614bcc565b15613840576040516317c57edf60e31b8152600481018d9052600160248201526001600160a01b0389169063be2bf6f890604401613651565b6040516333667db760e11b8152600481018d9052600160248201526001600160a01b038916906366ccfb6e906044016134f0565b876001600160a01b031663480a962b338f8f8f8f6040518663ffffffff1660e01b81526004016138a8959493929190614f06565b600060405180830381600087803b1580156138c257600080fd5b505af11580156138d6573d6000803e3d6000fd5b505050505b5050600660a086015250929450505050505b95945050505050565b6001600160a01b03851633148061391257506139128533610539565b61392e5760405162461bcd60e51b815260040161060f90614e3d565b610e418585858585614008565b6001600160a01b03831633148061395757506139578333610539565b610d0e5760405162461bcd60e51b815260040161060f90614e3d565b6001600160a01b0383166139995760405162461bcd60e51b815260040161060f90614f34565b3360006139a584614119565b905060006139b284614119565b6040805160208082018352600091829052888252606581528282206001600160a01b038b1683529052205490915084811015613a005760405162461bcd60e51b815260040161060f90614f77565b60008681526065602090815260408083206001600160a01b038b81168086529184528285208a8703905582518b81529384018a90529092908816916000805160206153cd833981519152910160405180910390a4604080516020810190915260009052612314565b8151835114613a895760405162461bcd60e51b815260040161060f90614fbb565b6001600160a01b038416613aaf5760405162461bcd60e51b815260040161060f90615003565b3360005b8451811015613b99576000858281518110613ad057613ad0614dcf565b602002602001015190506000858381518110613aee57613aee614dcf565b60209081029190910181015160008481526065835260408082206001600160a01b038e168352909352919091205490915081811015613b3f5760405162461bcd60e51b815260040161060f90615048565b60008381526065602090815260408083206001600160a01b038e8116855292528083208585039055908b16825281208054849290613b7e908490615092565b9250508190555050505080613b9290614de5565b9050613ab3565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051613be99291906150aa565b60405180910390a4613bff818787878787614164565b505050505050565b600054610100900460ff16613c2e5760405162461bcd60e51b815260040161060f906150cf565b613c37816142bf565b50565b600054610100900460ff166116c45760405162461bcd60e51b815260040161060f906150cf565b600054610100900460ff16613c885760405162461bcd60e51b815260040161060f906150cf565b6116c46142ef565b6001600160a01b038416613cf05760405162461bcd60e51b815260206004820152602160248201527f455243313135353a206d696e7420746f20746865207a65726f206164647265736044820152607360f81b606482015260840161060f565b336000613cfc85614119565b90506000613d0985614119565b905060008681526065602090815260408083206001600160a01b038b16845290915281208054879290613d3d908490615092565b909155505060408051878152602081018790526001600160a01b03808a1692600092918716916000805160206153cd833981519152910160405180910390a46123148360008989898961431d565b6001600160a01b038316613db15760405162461bcd60e51b815260040161060f90614f34565b8051825114613dd25760405162461bcd60e51b815260040161060f90614fbb565b604080516020810190915260009081905233905b8351811015613eab576000848281518110613e0357613e03614dcf565b602002602001015190506000848381518110613e2157613e21614dcf565b60209081029190910181015160008481526065835260408082206001600160a01b038c168352909352919091205490915081811015613e725760405162461bcd60e51b815260040161060f90614f77565b60009283526065602090815260408085206001600160a01b038b1686529091529092209103905580613ea381614de5565b915050613de6565b5060006001600160a01b0316846001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8686604051613efc9291906150aa565b60405180910390a46040805160208101909152600090526123a4565b816001600160a01b0316836001600160a01b031603613f8b5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c20737461747573604482015268103337b91039b2b63360b91b606482015260840161060f565b6001600160a01b03838116600081815260666020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b805160009061068c906001615092565b6001600160a01b03841661402e5760405162461bcd60e51b815260040161060f90615003565b33600061403a85614119565b9050600061404785614119565b905060008681526065602090815260408083206001600160a01b038c1684529091529020548581101561408c5760405162461bcd60e51b815260040161060f90615048565b60008781526065602090815260408083206001600160a01b038d8116855292528083208985039055908a168252812080548892906140cb908490615092565b909155505060408051888152602081018890526001600160a01b03808b16928c821692918816916000805160206153cd833981519152910160405180910390a4610c0f848a8a8a8a8a61431d565b6040805160018082528183019092526060916000919060208083019080368337019050509050828160008151811061415357614153614dcf565b602090810291909101015292915050565b6001600160a01b0384163b15613bff5760405163bc197c8160e01b81526001600160a01b0385169063bc197c81906141a8908990899088908890889060040161511a565b6020604051808303816000875af19250505080156141e3575060408051601f3d908101601f191682019092526141e091810190615178565b60015b61428f576141ef615195565b806308c379a00361422857506142036151b1565b8061420e575061422a565b8060405162461bcd60e51b815260040161060f919061454a565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e20455243313135356044820152732932b1b2b4bb32b91034b6b83632b6b2b73a32b960611b606482015260840161060f565b6001600160e01b0319811663bc197c8160e01b146123145760405162461bcd60e51b815260040161060f9061523a565b600054610100900460ff166142e65760405162461bcd60e51b815260040161060f906150cf565b613c37816143d8565b600054610100900460ff166143165760405162461bcd60e51b815260040161060f906150cf565b600160c955565b6001600160a01b0384163b15613bff5760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e61906143619089908990889088908890600401615282565b6020604051808303816000875af192505050801561439c575060408051601f3d908101601f1916820190925261439991810190615178565b60015b6143a8576141ef615195565b6001600160e01b0319811663f23a6e6160e01b146123145760405162461bcd60e51b815260040161060f9061523a565b6067612b9c828261530d565b6040518060c00160405280600081526020016000815260200160008152602001600081526020016144216040518060200160405280600081525090565b8152602001600081525090565b6001600160a01b0381168114613c3757600080fd5b6000806040838503121561445657600080fd5b82356144618161442e565b946020939093013593505050565b6001600160e01b031981168114613c3757600080fd5b60006020828403121561449757600080fd5b81356144a28161446f565b9392505050565b600080600080608085870312156144bf57600080fd5b84356144ca8161442e565b966020860135965060408601359560600135945092505050565b6000602082840312156144f657600080fd5b5035919050565b6000815180845260005b8181101561452357602081850181015186830182015201614507565b81811115614535576000602083870101525b50601f01601f19169290920160200192915050565b6020815260006144a260208301846144fd565b60008060006060848603121561457257600080fd5b833561457d8161442e565b95602085013595506040909401359392505050565b634e487b7160e01b600052604160045260246000fd5b60c081018181106001600160401b03821117156145c7576145c7614592565b60405250565b601f8201601f191681016001600160401b03811182821017156145f2576145f2614592565b6040525050565b60006001600160401b0382111561461257614612614592565b5060051b60200190565b600082601f83011261462d57600080fd5b8135602061463a826145f9565b60405161464782826145cd565b83815260059390931b850182019282810191508684111561466757600080fd5b8286015b84811015614682578035835291830191830161466b565b509695505050505050565b60006001600160401b038311156146a6576146a6614592565b6040516146bd601f8501601f1916602001826145cd565b8091508381528484840111156146d257600080fd5b83836020830137600060208583010152509392505050565b600082601f8301126146fb57600080fd5b6144a28383356020850161468d565b600080600080600060a0868803121561472257600080fd5b853561472d8161442e565b9450602086013561473d8161442e565b935060408601356001600160401b038082111561475957600080fd5b61476589838a0161461c565b9450606088013591508082111561477b57600080fd5b61478789838a0161461c565b9350608088013591508082111561479d57600080fd5b506147aa888289016146ea565b9150509295509295909350565b8015158114613c3757600080fd5b600080600080600060a086880312156147dd57600080fd5b85356147e88161442e565b945060208601359350604086013592506060860135614806816147b7565b949793965091946080013592915050565b6000806040838503121561482a57600080fd5b82356001600160401b038082111561484157600080fd5b818501915085601f83011261485557600080fd5b81356020614862826145f9565b60405161486f82826145cd565b83815260059390931b850182019282810191508984111561488f57600080fd5b948201945b838610156148b65785356148a78161442e565b82529482019490820190614894565b965050860135925050808211156148cc57600080fd5b506148d98582860161461c565b9150509250929050565b600081518084526020808501945080840160005b83811015614913578151875295820195908201906001016148f7565b509495945050505050565b6020815260006144a260208301846148e3565b60006020828403121561494357600080fd5b81356144a28161442e565b6000806000806080858703121561496457600080fd5b843561496f8161442e565b9350602085013561497f8161442e565b9250604085013561498f8161442e565b915060608501356001600160401b038111156149aa57600080fd5b8501601f810187136149bb57600080fd5b6149ca8782356020840161468d565b91505092959194509250565b6000806000606084860312156149eb57600080fd5b83356149f68161442e565b925060208401356001600160401b0380821115614a1257600080fd5b614a1e8783880161461c565b93506040860135915080821115614a3457600080fd5b50614a418682870161461c565b9150509250925092565b60008060408385031215614a5e57600080fd5b8235614a698161442e565b91506020830135614a79816147b7565b809150509250929050565b60008060008060808587031215614a9a57600080fd5b8435614aa58161442e565b935060208501359250604085013591506060850135614ac3816147b7565b939692955090935050565b600080600080600060a08688031215614ae657600080fd5b8535614af18161442e565b97602087013597506040870135966060810135965060800135945092505050565b60008060408385031215614b2557600080fd5b8235614b308161442e565b91506020830135614a798161442e565b600080600080600060a08688031215614b5857600080fd5b8535614b638161442e565b94506020860135614b738161442e565b9350604086013592506060860135915060808601356001600160401b03811115614b9c57600080fd5b6147aa888289016146ea565b60008060408385031215614bbb57600080fd5b505080516020909101519092909150565b600060208284031215614bde57600080fd5b81516144a2816147b7565b948552602085019390935260408401919091526060830152608082015260a00190565b600060208284031215614c1e57600080fd5b81516144a28161442e565b6001600160a01b03949094168452602084019290925260408301521515606082015260800190565b6001600160a01b039390931683526020830191909152604082015260600190565b6020808252601290820152712cb7ba9031b0b713ba103237903a3430ba1760711b604082015260600190565b600181811c90821680614cb257607f821691505b602082108103614cd257634e487b7160e01b600052602260045260246000fd5b50919050565b600081830360c0811215614ceb57600080fd5b604051614cf7816145a8565b835181526020840151602082015260408401516040820152606084015160608201526020607f1983011215614d2b57600080fd5b6040519150602082018281106001600160401b0382111715614d4f57614d4f614592565b604052608084810151835281019190915260a0928301519281019290925250919050565b6020808252600d908201526c2cb7ba9030b932903232b0b21760991b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b6000816000190483118215151615614dca57614dca614d9a565b500290565b634e487b7160e01b600052603260045260246000fd5b600060018201614df757614df7614d9a565b5060010190565b6001600160a01b0394909416845260208401929092526040830152606082015260800190565b600060208284031215614e3657600080fd5b5051919050565b60208082526029908201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260408201526808185c1c1c9bdd995960ba1b606082015260800190565b600060c08284031215614e9857600080fd5b604051614ea4816145a8565b825181526020830151602082015260408301516040820152606083015160608201526080830151608082015260a083015160a08201528091505092915050565b600082614f0157634e487b7160e01b600052601260045260246000fd5b500490565b6001600160a01b03959095168552602085019390935260408401919091526060830152608082015260a00190565b60208082526023908201527f455243313135353a206275726e2066726f6d20746865207a65726f206164647260408201526265737360e81b606082015260800190565b60208082526024908201527f455243313135353a206275726e20616d6f756e7420657863656564732062616c604082015263616e636560e01b606082015260800190565b60208082526028908201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206040820152670dad2e6dac2e8c6d60c31b606082015260800190565b60208082526025908201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604082015264647265737360d81b606082015260800190565b6020808252602a908201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60408201526939103a3930b739b332b960b11b606082015260800190565b600082198211156150a5576150a5614d9a565b500190565b6040815260006150bd60408301856148e3565b82810360208401526138ed81856148e3565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b6001600160a01b0386811682528516602082015260a060408201819052600090615146908301866148e3565b828103606084015261515881866148e3565b9050828103608084015261516c81856144fd565b98975050505050505050565b60006020828403121561518a57600080fd5b81516144a28161446f565b600060033d11156151ae5760046000803e5060005160e01c5b90565b600060443d10156151bf5790565b6040516003193d81016004833e81513d6001600160401b0381602484011181841117156151ee57505050505090565b82850191508151818111156152065750505050505090565b843d87010160208285010111156152205750505050505090565b61522f602082860101876145cd565b509095945050505050565b60208082526028908201527f455243313135353a204552433131353552656365697665722072656a656374656040820152676420746f6b656e7360c01b606082015260800190565b6001600160a01b03868116825285166020820152604081018490526060810183905260a0608082018190526000906152bc908301846144fd565b979650505050505050565b601f821115610d1957600081815260208120601f850160051c810160208610156152ee5750805b601f850160051c820191505b81811015613bff578281556001016152fa565b81516001600160401b0381111561532657615326614592565b61533a816153348454614c9e565b846152c7565b602080601f83116001811461536f57600084156153575750858301515b600019600386901b1c1916600185901b178555613bff565b600085815260208120601f198616915b8281101561539e5788860151825594840194600190910190840161537f565b50858210156153bc5787850151600019600388901b60f8161c191681555b5050505050600190811b0190555056fec3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62a2646970667358221220256016946f31a30c83e84ac4b2903c9eec87b5d477b73a1a884ed46988e4b96864736f6c634300080f0033",
  "deployedSourceMap": "196:11057:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2652:231:32;;;;;;;;;;-1:-1:-1;2652:231:32;;;;;:::i;:::-;;:::i;:::-;;;616:25:70;;;604:2;589:18;2652:231:32;;;;;;;;1631:354;;;;;;;;;;-1:-1:-1;1631:354:32;;;;;:::i;:::-;;:::i;:::-;;;1203:14:70;;1196:22;1178:41;;1166:2;1151:18;1631:354:32;1038:187:70;4827:713:2;;;;;;;;;;-1:-1:-1;4827:713:2;;;;;:::i;:::-;;:::i;:::-;;5940:427;;;;;;;;;;-1:-1:-1;5940:427:2;;;;;:::i;:::-;;:::i;2396:105:32:-;;;;;;;;;;-1:-1:-1;2396:105:32;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2031:171:2:-;;;;;;;;;;-1:-1:-1;2031:171:2;;;;;:::i;:::-;;:::i;1202:185::-;;;;;;;;;;-1:-1:-1;1202:185:2;;;;;:::i;:::-;;:::i;4591:442:32:-;;;;;;;;;;-1:-1:-1;4591:442:32;;;;;:::i;:::-;;:::i;9398:503:2:-;;;;;;;;;;-1:-1:-1;9398:503:2;;;;;:::i;:::-;;:::i;9903:1348::-;;;;;;;;;;-1:-1:-1;9903:1348:2;;;;;:::i;:::-;;:::i;3049:524:32:-;;;;;;;;;;-1:-1:-1;3049:524:32;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;415:39:2:-;;;;;;;;;;-1:-1:-1;415:39:2;;;;;:::i;:::-;;;;;;;;;;;;;;;;492:420;;;;;;;;;;-1:-1:-1;492:420:2;;;;;:::i;:::-;;:::i;2204:1223::-;;;;;;;;;;-1:-1:-1;2204:1223:2;;;;;:::i;:::-;;:::i;994:353:35:-;;;;;;;;;;-1:-1:-1;994:353:35;;;;;:::i;:::-;;:::i;1019:181:2:-;;;;;;;;;;-1:-1:-1;1019:181:2;;;;;:::i;:::-;;:::i;5563:353::-;;;;;;;;;;-1:-1:-1;5563:353:2;;;;;:::i;:::-;;:::i;1846:183::-;;;;;;;;;;-1:-1:-1;1846:183:2;;;;;:::i;:::-;;:::i;914:103::-;;;;;;;;;;-1:-1:-1;914:103:2;;;;;:::i;:::-;-1:-1:-1;;;;;994:15:2;970:4;994:15;;;:7;:15;;;;;;;;;914:103;3450:1375;;;;;;;;;;-1:-1:-1;3450:1375:2;;;;;:::i;:::-;;:::i;3646:155:32:-;;;;;;;;;;-1:-1:-1;3646:155:32;;;;;:::i;:::-;;:::i;9337:36:2:-;;;;;;;;;1515:204;;;;;;;;;;-1:-1:-1;1515:204:2;;;;;:::i;:::-;;:::i;6376:2832::-;;;;;;;;;;-1:-1:-1;6376:2832:2;;;;;:::i;:::-;;:::i;:::-;;;;;;12809:4:70;12851:3;12840:9;12836:19;12828:27;;12888:6;12882:13;12871:9;12864:32;12952:4;12944:6;12940:17;12934:24;12927:4;12916:9;12912:20;12905:54;13015:4;13007:6;13003:17;12997:24;12990:4;12979:9;12975:20;12968:54;13078:4;13070:6;13066:17;13060:24;13053:4;13042:9;13038:20;13031:54;13147:4;13139:6;13135:17;13129:24;13123:31;13116:4;13105:9;13101:20;13094:61;13211:4;13203:6;13199:17;13193:24;13186:4;13175:9;13171:20;13164:54;12669:555;;;;;3873:168:32;;;;;;;;;;-1:-1:-1;3873:168:32;;;;;:::i;:::-;-1:-1:-1;;;;;3996:27:32;;;3972:4;3996:27;;;:18;:27;;;;;;;;:37;;;;;;;;;;;;;;;3873:168;4113:401;;;;;;;;;;-1:-1:-1;4113:401:32;;;;;:::i;:::-;;:::i;665:321:35:-;;;;;;;;;;-1:-1:-1;665:321:35;;;;;:::i;:::-;;:::i;2652:231:32:-;2738:7;-1:-1:-1;;;;;2766:21:32;;2758:77;;;;-1:-1:-1;;;2758:77:32;;14563:2:70;2758:77:32;;;14545:21:70;14602:2;14582:18;;;14575:30;14641:34;14621:18;;;14614:62;-1:-1:-1;;;14692:18:70;;;14685:41;14743:19;;2758:77:32;;;;;;;;;-1:-1:-1;2853:13:32;;;;:9;:13;;;;;;;;-1:-1:-1;;;;;2853:22:32;;;;;;;;;;;;2652:231::o;1631:354::-;1755:4;-1:-1:-1;;;;;;1792:52:32;;-1:-1:-1;;;1792:52:32;;:132;;-1:-1:-1;;;;;;;1861:63:32;;-1:-1:-1;;;1861:63:32;1792:132;:185;;;-1:-1:-1;;;;;;;;;;1200:51:43;;;1941:36:32;1772:205;1631:354;-1:-1:-1;;1631:354:32:o;4827:713:2:-;4960:16;;-1:-1:-1;;;4960:16:2;;;;;616:25:70;;;4904:5:2;;4887:9;;;;-1:-1:-1;;;;;4960:10:2;;;;;589:18:70;;4960:16:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5011:18;;-1:-1:-1;;;5011:18:2;;;;;616:25:70;;;4928:48:2;;-1:-1:-1;4928:48:2;-1:-1:-1;4994:14:2;;-1:-1:-1;;;;;5011:10:2;;;;;589:18:70;;5011::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4994:35;;5052:9;5048:142;;5089:50;;-1:-1:-1;;;5089:50:2;;-1:-1:-1;;;;;5089:11:2;;;;;:50;;5101:4;;;;2354:2:5;;5124:1:2;;4272::5;;5089:50:2;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5165:7;;;;4827:713;;:::o;5048:142::-;5211:18;;-1:-1:-1;;;5211:18:2;;;;;616:25:70;;;5233:10:2;;-1:-1:-1;;;;;5211:12:2;;;;;589:18:70;;5211::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;5211:32:2;;;:53;;;;-1:-1:-1;5261:3:2;;-1:-1:-1;;;;;5261:3:2;5247:10;:17;;5211:53;5208:190;;;5292:55;;-1:-1:-1;;;5292:55:2;;-1:-1:-1;;;;;5292:11:2;;;;;:55;;5304:4;;;;2354:2:5;;5327:1:2;;;;5292:55;;;:::i;5208:190::-;5416:31;;-1:-1:-1;;;5416:31:2;;;;;16211:25:70;;;2354:2:5;16252:18:70;;;16245:34;5445:1:2;16295:18:70;;;16288:34;-1:-1:-1;;;;;5416:11:2;;;;;16184:18:70;;5416:31:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;5451:6:2;;:45;;-1:-1:-1;;;5451:45:2;;-1:-1:-1;;;;;5451:6:2;;;;:15;;:45;;5467:5;;5474:4;;2354:2:5;;5451:6:2;;:45;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5500:6:2;;:36;;-1:-1:-1;;;5500:36:2;;-1:-1:-1;;;;;5500:6:2;;;;-1:-1:-1;5500:14:2;;-1:-1:-1;5500:36:2;;5515:5;;5522:4;;5528:7;;5500:36;;;:::i;5940:427::-;6089:18;;-1:-1:-1;;;6089:18:2;;;;;616:25:70;;;6057:5:2;;6111:10;;-1:-1:-1;;;;;6089:12:2;;;;;589:18:70;;6089::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;6089:32:2;;:55;;;-1:-1:-1;6133:10:2;6125:19;;;;:7;:19;;;;;;;;6089:55;6081:86;;;;-1:-1:-1;;;6081:86:2;;;;;;;:::i;:::-;6193:30;;-1:-1:-1;;;6193:30:2;;;;;17658:25:70;;;3019:3:5;17699:18:70;;;17692:34;-1:-1:-1;;;;;6193:12:2;;;;;17631:18:70;;6193:30:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6185:70;;;;-1:-1:-1;;;6185:70:2;;17939:2:70;6185:70:2;;;17921:21:70;17978:2;17958:18;;;17951:30;18017:29;17997:18;;;17990:57;18064:18;;6185:70:2;17737:351:70;6185:70:2;6273:6;;6315:40;;-1:-1:-1;;;6315:40:2;;-1:-1:-1;;;;;6273:6:2;;;;:15;;6289:5;;6296:4;;3019:3:5;;6273:6:2;;6315:15;;:40;;6289:5;;6296:4;;3019:3:5;;6315:40:2;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6314:41;6273:83;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6022:345;5940:427;;;;:::o;2396:105:32:-;2456:13;2489:4;2482:11;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2396:105;;;:::o;2031:171:2:-;2111:3;;-1:-1:-1;;;;;2111:3:2;2118:10;2111:17;;:40;;-1:-1:-1;2140:10:2;2132:19;;;;:7;:19;;;;;;;;2111:40;2103:61;;;;-1:-1:-1;;;2103:61:2;;19028:2:70;2103:61:2;;;19010:21:70;19067:1;19047:18;;;19040:29;-1:-1:-1;;;19085:18:70;;;19078:38;19133:18;;2103:61:2;18826:331:70;2103:61:2;2168:30;2174:7;2183:5;2190:7;2168:5;:30::i;:::-;2031:171;;;:::o;1202:185::-;1294:3;;-1:-1:-1;;;;;1294:3:2;1280:10;:17;;:40;;-1:-1:-1;1309:10:2;1301:19;;;;:7;:19;;;;;;;;1280:40;1272:76;;;;-1:-1:-1;;;1272:76:2;;19364:2:70;1272:76:2;;;19346:21:70;19403:2;19383:18;;;19376:30;-1:-1:-1;;;19422:18:70;;;19415:53;19485:18;;1272:76:2;19162:347:70;1272:76:2;1378:5;1352:14;;;:8;:14;;;;;;;;:23;;;;;;;;:31;;-1:-1:-1;;1352:31:2;;;-1:-1:-1;1202:185:2:o;4591:442:32:-;-1:-1:-1;;;;;4824:20:32;;952:10:42;4824:20:32;;:60;;-1:-1:-1;4848:36:32;4865:4;952:10:42;3873:168:32;:::i;4848:36::-;4802:160;;;;-1:-1:-1;;;4802:160:32;;19716:2:70;4802:160:32;;;19698:21:70;19755:2;19735:18;;;19728:30;19794:34;19774:18;;;19767:62;-1:-1:-1;;;19845:18:70;;;19838:48;19903:19;;4802:160:32;19514:414:70;4802:160:32;4973:52;4996:4;5002:2;5006:3;5011:7;5020:4;4973:22;:52::i;:::-;4591:442;;;;;:::o;9398:503:2:-;9562:18;;-1:-1:-1;;;9562:18:2;;;;;616:25:70;;;9530:5:2;;9584:10;;-1:-1:-1;;;;;9562:12:2;;;;;589:18:70;;9562::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;9562:32:2;;:55;;;-1:-1:-1;9606:10:2;9598:19;;;;:7;:19;;;;;;;;9562:55;9554:86;;;;-1:-1:-1;;;9554:86:2;;;;;;;:::i;:::-;9666:31;;-1:-1:-1;;;9666:31:2;;;;;17658:25:70;;;2045:2:5;17699:18:70;;;17692:34;-1:-1:-1;;;;;9666:12:2;;;;;17631:18:70;;9666:31:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9658:72;;;;-1:-1:-1;;;9658:72:2;;20135:2:70;9658:72:2;;;20117:21:70;20174:2;20154:18;;;20147:30;20213;20193:18;;;20186:58;20261:18;;9658:72:2;19933:352:70;9658:72:2;9756:6;;:41;;-1:-1:-1;;;9756:41:2;;-1:-1:-1;;;;;9756:6:2;;;;:15;;:41;;9772:5;;9779:4;;3476:5:5;;9756:41:2;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9748:71;;;;-1:-1:-1;;;9748:71:2;;20492:2:70;9748:71:2;;;20474:21:70;20531:2;20511:18;;;20504:30;-1:-1:-1;;;20550:18:70;;;20543:47;20607:18;;9748:71:2;20290:341:70;9748:71:2;9838:6;;:52;;-1:-1:-1;;;9838:52:2;;-1:-1:-1;;;;;9838:6:2;;;;:15;;:52;;9854:5;;9861:7;;2045:2:5;;9883:6:2;;9838:52;;;:::i;9903:1348::-;10067:19;;-1:-1:-1;;;10067:19:2;;;;;616:25:70;;;9981:4:2;;10022:5;;9981:4;;-1:-1:-1;;;;;10067:13:2;;;;;589:18:70;;10067:19:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10112:31;;-1:-1:-1;;;10112:31:2;;;;;17658:25:70;;;3193:3:5;17699:18:70;;;17692:34;10046:40:2;;-1:-1:-1;;;;;;10112:12:2;;;;;17631:18:70;;10112:31:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10104:64;;;;-1:-1:-1;;;10104:64:2;;21774:2:70;10104:64:2;;;21756:21:70;21813:2;21793:18;;;21786:30;-1:-1:-1;;;21832:18:70;;;21825:50;21892:18;;10104:64:2;21572:344:70;10104:64:2;10194:18;;-1:-1:-1;;;10194:18:2;;;;;616:25:70;;;10216:10:2;;-1:-1:-1;;;;;10194:12:2;;;;;589:18:70;;10194::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;10194:32:2;;:55;;;-1:-1:-1;10238:10:2;10230:19;;;;:7;:19;;;;;;;;10194:55;10186:86;;;;-1:-1:-1;;;10186:86:2;;;;;;;:::i;:::-;10323:16;;-1:-1:-1;;;10323:16:2;;;;;616:25:70;;;10292:11:2;;;;-1:-1:-1;;;;;10323:10:2;;;;;589:18:70;;10323:16:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10374:18;;-1:-1:-1;;;10374:18:2;;;;;616:25:70;;;10291:48:2;;-1:-1:-1;10291:48:2;-1:-1:-1;10357:14:2;;-1:-1:-1;;;;;10374:10:2;;;;;589:18:70;;10374::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10357:35;;10418:9;:60;;;-1:-1:-1;10431:12:2;;;;:19;-1:-1:-1;;;10431:43:2;:47;;10418:60;10410:86;;;;-1:-1:-1;;;10410:86:2;;;;;;;:::i;:::-;10531:1;10514:14;10589:21;10531:1;10601:9;10589:21;:::i;:::-;10755:39;;-1:-1:-1;;;10755:39:2;;;;;17658:25:70;;;3059:3:5;17699:18:70;;;17692:34;10577:33:2;;-1:-1:-1;;;;;;10755:12:2;;;;;17631:18:70;;10755:39:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;10915:19:2;;-1:-1:-1;;;10915:19:2;;;;;616:25:70;;;10888:10:2;;;;-1:-1:-1;;;;;10915:10:2;;;;;589:18:70;;10915:19:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10955:17;;-1:-1:-1;;;10955:17:2;;;;;616:25:70;;;10887:47:2;;-1:-1:-1;10887:47:2;-1:-1:-1;;;;;;10955:10:2;;;;;589:18:70;;10955:17:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10952:156;;11025:4;-1:-1:-1;;;;;11025:18:2;;11044:4;11050:7;11059:9;3980:6:5;11076:5:2;:12;;;11025:64;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10952:156;11183:6;;;;;;;;;-1:-1:-1;;;;;11183:6:2;-1:-1:-1;;;;;11183:15:2;;11199:5;11206:4;3554:5:5;11183:43:2;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11133:93;;:6;;;;;;;;;-1:-1:-1;;;;;11133:6:2;-1:-1:-1;;;;;11133:15:2;;11149:5;11156:7;3554:5:5;11133:46:2;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:93;;;11125:115;;;;-1:-1:-1;;;11125:115:2;;23261:2:70;11125:115:2;;;23243:21:70;23300:1;23280:18;;;23273:29;-1:-1:-1;;;23318:18:70;;;23311:39;23367:18;;11125:115:2;23059:332:70;11125:115:2;9987:1264;;;;;;;;;9903:1348;;;;;:::o;108:43:29:-;:::o;3049:524:32:-;3205:16;3266:3;:10;3247:8;:15;:29;3239:83;;;;-1:-1:-1;;;3239:83:32;;23598:2:70;3239:83:32;;;23580:21:70;23637:2;23617:18;;;23610:30;23676:34;23656:18;;;23649:62;-1:-1:-1;;;23727:18:70;;;23720:39;23776:19;;3239:83:32;23396:405:70;3239:83:32;3335:30;3382:8;:15;-1:-1:-1;;;;;3368:30:32;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3368:30:32;;3335:63;;3416:9;3411:122;3435:8;:15;3431:1;:19;3411:122;;;3491:30;3501:8;3510:1;3501:11;;;;;;;;:::i;:::-;;;;;;;3514:3;3518:1;3514:6;;;;;;;;:::i;:::-;;;;;;;3491:9;:30::i;:::-;3472:13;3486:1;3472:16;;;;;;;;:::i;:::-;;;;;;;;;;:49;3452:3;;;:::i;:::-;;;3411:122;;;-1:-1:-1;3552:13:32;3049:524;-1:-1:-1;;;3049:524:32:o;492:420:2:-;2421:13:30;;;;;;;:48;;2457:12;;;;2456:13;2421:48;;;3224:4;1516:19:41;:23;2437:16:30;2413:107;;;;-1:-1:-1;;;2413:107:30;;24280:2:70;2413:107:30;;;24262:21:70;24319:2;24299:18;;;24292:30;24358:34;24338:18;;;24331:62;-1:-1:-1;;;24409:18:70;;;24402:44;24463:19;;2413:107:30;24078:410:70;2413:107:30;2533:19;2556:13;;;;;;2555:14;2580:101;;;;2615:13;:20;;-1:-1:-1;;2650:19:30;;;;;2580:101;629:20:2::1;644:4;629:14;:20::i;:::-;667:24;:22;:24::i;:::-;709;:22;:24::i;:::-;752:3;:10:::0;;-1:-1:-1;;;;;752:10:2;;::::1;-1:-1:-1::0;;;;;;752:10:2;;::::1;;::::0;;;780:2:::1;:30:::0;;;;::::1;::::0;;::::1;;::::0;;828:10:::1;:24:::0;;;;::::1;::::0;;::::1;::::0;::::1;::::0;;870:6:::1;:31:::0;;;;::::1;::::0;;::::1;::::0;;2707:68:30;;;;2758:5;2742:21;;-1:-1:-1;;2742:21:30;;;2128:654;492:420:2;;;;:::o;2204:1223::-;2371:16;;-1:-1:-1;;;2371:16:2;;;;;616:25:70;;;2281:4:2;;2315:5;;2281:4;;;;-1:-1:-1;;;;;2371:10:2;;;;;589:18:70;;2371:16:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2339:48;;;;2406:10;2418:11;2433:4;-1:-1:-1;;;;;2433:10:2;;2444:7;2433:19;;;;;;;;;;;;;616:25:70;;604:2;589:18;;470:177;2433:19:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2487:18;;-1:-1:-1;;;2487:18:2;;;;;616:25:70;;;2405:47:2;;-1:-1:-1;2405:47:2;-1:-1:-1;2470:14:2;;-1:-1:-1;;;;;2487:10:2;;;;;589:18:70;;2487::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2539:17;;-1:-1:-1;;;2539:17:2;;;;;616:25:70;;;2470:35:2;;-1:-1:-1;2523:13:2;;-1:-1:-1;;;;;2539:10:2;;;;;589:18:70;;2539:17:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2523:33;;2570:8;2569:9;2561:44;;;;-1:-1:-1;;;2561:44:2;;24695:2:70;2561:44:2;;;24677:21:70;24734:2;24714:18;;;24707:30;-1:-1:-1;;;24753:18:70;;;24746:52;24815:18;;2561:44:2;24493:346:70;2561:44:2;2617:9;2609:35;;;;-1:-1:-1;;;2609:35:2;;;;;;;:::i;:::-;2791:18;;-1:-1:-1;;;2791:18:2;;;;;616:25:70;;;2813:10:2;;-1:-1:-1;;;;;2791:12:2;;;;;589:18:70;;2791::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;2791:32:2;;:53;;;-1:-1:-1;2841:3:2;;-1:-1:-1;;;;;2841:3:2;2827:10;:17;2791:53;2783:84;;;;-1:-1:-1;;;2783:84:2;;;;;;;:::i;:::-;2893:6;;:42;;-1:-1:-1;;;2893:42:2;;-1:-1:-1;;;;;2893:6:2;;;;:17;;:42;;2911:5;;2918:4;;2924:7;;2893:6;;:42;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2885:66;;;;-1:-1:-1;;;2885:66:2;;25476:2:70;2885:66:2;;;25458:21:70;25515:2;25495:18;;;25488:30;-1:-1:-1;;;25534:18:70;;;25527:41;25585:18;;2885:66:2;25274:335:70;2885:66:2;2977:6;;:35;;-1:-1:-1;;;2977:35:2;;-1:-1:-1;;;;;2977:6:2;;;;:13;;:35;;2991:5;;2998:4;;3004:7;;2977:35;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2969:62;;;;-1:-1:-1;;;2969:62:2;;26166:2:70;2969:62:2;;;26148:21:70;26205:2;26185:18;;;26178:30;-1:-1:-1;;;26224:18:70;;;26217:44;26278:18;;2969:62:2;25964:338:70;2969:62:2;3043:6;;:44;;-1:-1:-1;;;3043:44:2;;-1:-1:-1;;;;;3043:6:2;;;;:15;;:44;;3059:5;;3066:7;;3476:5:5;;3043:44:2;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3035:73;;;;-1:-1:-1;;;3035:73:2;;26509:2:70;3035:73:2;;;26491:21:70;26548:2;26528:18;;;26521:30;-1:-1:-1;;;26567:18:70;;;26560:46;26623:18;;3035:73:2;26307:340:70;3035:73:2;1469:4;1486:14;;;:8;:14;;;;;;;;:23;;;;;;;;;;;3120:28;3112:56;;;;-1:-1:-1;;;3112:56:2;;26854:2:70;3112:56:2;;;26836:21:70;26893:2;26873:18;;;26866:30;-1:-1:-1;;;26912:18:70;;;26905:45;26967:18;;3112:56:2;26652:339:70;3112:56:2;3173:38;3179:10;3191:7;3200:1;3173:38;;;;;;;;;;;;;-1:-1:-1;;;3173:38:2;;;:5;:38::i;:::-;3243:84;3262:4;-1:-1:-1;;;;;3262:11:2;;:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;3249:35:2;;3285:4;-1:-1:-1;;;;;3285:13:2;;3299:4;3285:19;;;;;;;;;;;;;616:25:70;;604:2;589:18;;470:177;3285:19:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3249:56;;;;;;;;;;;;;616:25:70;;604:2;589:18;;470:177;3249:56:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3307:7;3316:1;3243:84;;;;;;;;;;;;;-1:-1:-1;;;3243:84:2;;;:5;:84::i;:::-;3332:37;3343:4;3349;3355:7;3364:4;3332:10;:37::i;:::-;3381:6;;:42;;-1:-1:-1;;;3381:42:2;;-1:-1:-1;;;;;3381:6:2;;;;:20;;:42;;3402:5;;3409:4;;3415:7;;3381:42;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3374:49;2204:1223;-1:-1:-1;;;;;;;;;;;2204:1223:2:o;994:353:35:-;-1:-1:-1;;;;;1159:23:35;;952:10:42;1159:23:35;;:66;;-1:-1:-1;1186:39:35;1203:7;952:10:42;3873:168:32;:::i;1186:39:35:-;1137:157;;;;-1:-1:-1;;;1137:157:35;;;;;;;:::i;:::-;1307:32;1318:7;1327:3;1332:6;1307:10;:32::i;1019:181:2:-;1113:3;;-1:-1:-1;;;;;1113:3:2;1099:10;:17;1091:56;;;;-1:-1:-1;;;1091:56:2;;27797:2:70;1091:56:2;;;27779:21:70;27836:2;27816:18;;;27809:30;27875:28;27855:18;;;27848:56;27921:18;;1091:56:2;27595:350:70;1091:56:2;-1:-1:-1;;;;;1165:15:2;;;;;;;;:7;:15;;;;;:24;;-1:-1:-1;;1165:24:2;;;;;;;;;;1019:181::o;5563:353::-;5682:18;;-1:-1:-1;;;5682:18:2;;;;;616:25:70;;;5650:5:2;;5704:10;;-1:-1:-1;;;;;5682:12:2;;;;;589:18:70;;5682::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;5682:32:2;;:55;;;-1:-1:-1;5726:10:2;5718:19;;;;:7;:19;;;;;;;;5682:55;5674:86;;;;-1:-1:-1;;;5674:86:2;;;;;;;:::i;:::-;5786:29;;-1:-1:-1;;;5786:29:2;;;;;17658:25:70;;;2354:2:5;17699:18:70;;;17692:34;-1:-1:-1;;;;;5786:12:2;;;;;17631:18:70;;5786:29:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5778:68;;;;-1:-1:-1;;;5778:68:2;;28152:2:70;5778:68:2;;;28134:21:70;28191:2;28171:18;;;28164:30;28230:28;28210:18;;;28203:56;28276:18;;5778:68:2;27950:350:70;5778:68:2;5865:6;;:40;;-1:-1:-1;;;5865:40:2;;-1:-1:-1;;;;;5865:6:2;;;;:13;;:40;;5879:5;;5886:4;;2354:2:5;;5865:6:2;;:40;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5615:301;5563:353;;:::o;1846:183::-;1941:3;;-1:-1:-1;;;;;1941:3:2;1948:10;1941:17;;:40;;-1:-1:-1;1970:10:2;1962:19;;;;:7;:19;;;;;;;;1941:40;1933:59;;;;-1:-1:-1;;;1933:59:2;;28935:2:70;1933:59:2;;;28917:21:70;28974:1;28954:18;;;28947:29;-1:-1:-1;;;28992:18:70;;;28985:36;29038:18;;1933:59:2;28733:329:70;1933:59:2;1996:29;2002:5;2009:4;2015:1;1996:29;;;;;;;;;;;;;-1:-1:-1;;;1996:29:2;;;:5;:29::i;:::-;1846:183;;;;:::o;3450:1375::-;3596:30;;-1:-1:-1;;;3596:30:2;;;;;17658:25:70;;;1788:2:5;17699:18:70;;;17692:34;3564:5:2;;-1:-1:-1;;;;;3596:12:2;;;;;17631:18:70;;3596:30:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3588:70;;;;-1:-1:-1;;;3588:70:2;;29269:2:70;3588:70:2;;;29251:21:70;29308:2;29288:18;;;29281:30;29347:29;29327:18;;;29320:57;29394:18;;3588:70:2;29067:351:70;3588:70:2;3684:18;;-1:-1:-1;;;3684:18:2;;;;;616:25:70;;;3706:10:2;;-1:-1:-1;;;;;3684:12:2;;;;;589:18:70;;3684::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;3684:32:2;;:55;;;-1:-1:-1;3728:10:2;3720:19;;;;:7;:19;;;;;;;;3684:55;3676:86;;;;-1:-1:-1;;;3676:86:2;;;;;;;:::i;:::-;3813:16;;-1:-1:-1;;;3813:16:2;;;;;616:25:70;;;3782:11:2;;;;-1:-1:-1;;;;;3813:10:2;;;;;589:18:70;;3813:16:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3864:18;;-1:-1:-1;;;3864:18:2;;;;;616:25:70;;;3781:48:2;;-1:-1:-1;3781:48:2;-1:-1:-1;3847:14:2;;-1:-1:-1;;;;;3864:10:2;;;;;589:18:70;;3864::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3847:35;;3908:9;3900:35;;;;-1:-1:-1;;;3900:35:2;;;;;;;:::i;:::-;3971:6;;:28;;-1:-1:-1;;;3971:28:2;;-1:-1:-1;;;;;29615:32:70;;;3971:28:2;;;29597:51:70;29664:18;;;29657:34;;;3954:14:2;;3971:6;;:15;;29570:18:70;;3971:28:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3954:45;-1:-1:-1;4017:9:2;4029:21;3954:45;4041:9;4029:21;:::i;:::-;4017:33;;4084:9;4076:4;:17;;4068:60;;;;-1:-1:-1;;;4068:60:2;;29904:2:70;4068:60:2;;;29886:21:70;29943:2;29923:18;;;29916:30;29982:32;29962:18;;;29955:60;30032:18;;4068:60:2;29702:354:70;4068:60:2;4146:26;;-1:-1:-1;;;4146:26:2;;;;;17658:25:70;;;17699:18;;;17692:34;;;-1:-1:-1;;;;;4146:14:2;;;;;17631:18:70;;4146:26:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;4207:19:2;;-1:-1:-1;;;4207:19:2;;;;;616:25:70;;;4192:10:2;;-1:-1:-1;;;;;4207:10:2;;;;;589:18:70;;4207:19:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;4252:17:2;;-1:-1:-1;;;4252:17:2;;;;;616:25:70;;;4191:35:2;;-1:-1:-1;;;;;;4252:10:2;;;;;589:18:70;;4252:17:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4244:45;;;;-1:-1:-1;;;4244:45:2;;30516:2:70;4244:45:2;;;30498:21:70;30555:2;30535:18;;;30528:30;-1:-1:-1;;;30574:18:70;;;30567:45;30629:18;;4244:45:2;30314:339:70;4244:45:2;4329:19;;-1:-1:-1;;;4329:19:2;;;;;616:25:70;;;4308:18:2;;-1:-1:-1;;;;;4329:13:2;;;;;589:18:70;;4329:19:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4308:40;;4366:11;4394:9;4380:5;:11;;;:23;;;;:::i;:::-;4448:25;;-1:-1:-1;;;4448:25:2;;;;;616::70;;;4366:37:2;;-1:-1:-1;4422:23:2;;-1:-1:-1;;;;;4448:16:2;;;;;589:18:70;;4448:25:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4500:6;;4527:11;;;;;4500:39;;-1:-1:-1;;;4500:39:2;;;;;17658:25:70;;;17699:18;;;17692:34;;;;4527:11:2;;-1:-1:-1;;;;;;4500:6:2;;:18;;17631::70;;4500:39:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4491:48;;4551:6;;;;;;;;;-1:-1:-1;;;;;4551:6:2;-1:-1:-1;;;;;4551:14:2;;4566:5;4573:7;4551:30;;;;;;;;;;;;;;;-1:-1:-1;;;;;29615:32:70;;;;29597:51;;29679:2;29664:18;;29657:34;29585:2;29570:18;;29423:274;4551:30:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4543:38;;4660:9;4652:5;:17;4649:51;;;4685:10;4694:1;4685:6;:10;:::i;:::-;4676:19;;4649:51;4703:6;;-1:-1:-1;;;;;4703:6:2;:14;4718:5;4725:7;4734;4740:1;4734:5;:7;:::i;:::-;4703:39;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4760:4;-1:-1:-1;;;;;4760:11:2;;4772:4;4778:7;4787:6;3917::5;4801:5:2;:12;;;4760:54;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3529:1296;;;;;;;;;;3450:1375;;;;:::o;3646:155:32:-;3741:52;952:10:42;3774:8:32;3784;3741:18;:52::i;:::-;3646:155;;:::o;1515:204:2:-;1627:3;;-1:-1:-1;;;;;1627:3:2;1613:10;:17;;:40;;-1:-1:-1;1642:10:2;1634:19;;;;:7;:19;;;;;;;;1613:40;1605:75;;;;-1:-1:-1;;;1605:75:2;;32169:2:70;1605:75:2;;;32151:21:70;32208:2;32188:18;;;32181:30;-1:-1:-1;;;32227:18:70;;;32220:52;32289:18;;1605:75:2;31967:346:70;1605:75:2;1684:14;;;;:8;:14;;;;;;;;:23;;;;;;;;:31;;-1:-1:-1;;1684:31:2;;;;;;;;;;-1:-1:-1;1515:204:2:o;6376:2832::-;6481:12;;:::i;:::-;6548:18;;-1:-1:-1;;;6548:18:2;;;;;616:25:70;;;6516:5:2;;6570:10;;-1:-1:-1;;;;;6548:12:2;;;;;589:18:70;;6548::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;6548:32:2;;:55;;;-1:-1:-1;6592:10:2;6584:19;;;;:7;:19;;;;;;;;6548:55;6540:86;;;;-1:-1:-1;;;6540:86:2;;;;;;;:::i;:::-;6651:19;;-1:-1:-1;;;6651:19:2;;;;;616:25:70;;;6630:18:2;;-1:-1:-1;;;;;6651:13:2;;;;;589:18:70;;6651:19:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6679:38;;-1:-1:-1;;;6679:38:2;;;;;16211:25:70;;;1547:1:5;16252:18:70;;;16245:34;16295:18;;;16288:34;;;6630:40:2;;-1:-1:-1;;;;;;6679:11:2;;;;;16184:18:70;;6679:38:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6675:163;;6725:57;;-1:-1:-1;;;6725:57:2;;-1:-1:-1;;;;;6725:11:2;;;;;:57;;6737:4;;6743:7;;6752:4;;6758:7;;4438:1:5;;6725:57:2;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4438:1:5;6787:12:2;;;:29;-1:-1:-1;6787:5:2;;-1:-1:-1;6821:12:2;;-1:-1:-1;;6821:12:2;6675:163;6888:16;;-1:-1:-1;;;6888:16:2;;;;;616:25:70;;;6857:11:2;;;;-1:-1:-1;;;;;6888:10:2;;;;;589:18:70;;6888:16:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6856:48;;;;6923:10;6935:11;6950:4;-1:-1:-1;;;;;6950:10:2;;6961:7;6950:19;;;;;;;;;;;;;616:25:70;;604:2;589:18;;470:177;6950:19:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7004:18;;-1:-1:-1;;;7004:18:2;;;;;616:25:70;;;6922:47:2;;-1:-1:-1;6922:47:2;-1:-1:-1;6987:14:2;;-1:-1:-1;;;;;7004:10:2;;;;;589:18:70;;7004::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7056:17;;-1:-1:-1;;;7056:17:2;;;;;616:25:70;;;6987:35:2;;-1:-1:-1;7040:13:2;;-1:-1:-1;;;;;7056:10:2;;;;;589:18:70;;7056:17:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7040:33;;7082:9;7078:127;;7098:4;-1:-1:-1;;;;;7098:11:2;;7110:4;7116:7;7125:4;7131:7;4272:1:5;7098:54:2;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4272:1:5;7157:12:2;;;:26;-1:-1:-1;7157:5:2;;-1:-1:-1;7188:12:2;;-1:-1:-1;;;;;;;;7188:12:2;7078:127;7213:8;7209:134;;7228:4;-1:-1:-1;;;;;7228:11:2;;7240:4;7246:7;7255:4;7261:7;4308:1:5;7228:58:2;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4308:1:5;7291:12:2;;;:30;-1:-1:-1;7291:5:2;;-1:-1:-1;7326:12:2;;-1:-1:-1;;;;;;;;7326:12:2;7209:134;7365:6;;;;;;;;;-1:-1:-1;;;;;7365:6:2;-1:-1:-1;;;;;7365:17:2;;7383:5;7390:4;7396:7;7405:1;7365:42;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7361:176;;7414:4;-1:-1:-1;;;;;7414:11:2;;7426:4;7432:7;7441:4;7447:7;4206:1:5;7414:62:2;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4206:1:5;7481:12:2;;;:34;-1:-1:-1;7481:5:2;;-1:-1:-1;7520:12:2;;-1:-1:-1;;;;;;;;7520:12:2;7361:176;7558:6;;;;;;;;;-1:-1:-1;;;;;7558:6:2;-1:-1:-1;;;;;7558:13:2;;7572:5;7579:4;7585:7;7558:35;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7554:157;;7600:4;-1:-1:-1;;;;;7600:11:2;;7612:4;7618:7;7627:4;7633:7;4240:1:5;7600:56:2;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4240:1:5;7661:12:2;;;:28;-1:-1:-1;7661:5:2;;-1:-1:-1;7694:12:2;;-1:-1:-1;;;;;;;;7694:12:2;7554:157;3266:3:5;7733:4:2;:12;7730:304;;7776:24;;-1:-1:-1;;;7776:24:2;;;;;17658:25:70;;;3266:3:5;17699:18:70;;;17692:34;-1:-1:-1;;;;;7776:12:2;;;;;17631:18:70;;7776:24:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7773:257;;;-1:-1:-1;;;;;7829:11:2;;;7841:4;7847:7;7856:17;:7;7866;7856:17;:::i;:::-;3980:6:5;7881:5:2;:12;;;7829:65;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7773:257;;;7974:4;-1:-1:-1;;;;;7974:8:2;;7983:10;7995:4;8001:7;8010:4;8016:7;7974:50;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7773:257;1547:1:5;8056:4:2;:18;8052:1101;;8200:4;-1:-1:-1;;;;;8200:11:2;;8212:4;8218:7;8237:22;8253:5;8237:15;:22::i;:::-;8227:32;;:7;:32;:::i;:::-;3980:6:5;8267:5:2;:12;;;8200:80;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8052:1101;;;1788:2:5;8344:4:2;:18;8340:813;;8393:30;;-1:-1:-1;;;8393:30:2;;;;;17658:25:70;;;1788:2:5;17699:18:70;;;17692:34;-1:-1:-1;;;;;8393:12:2;;;;;17631:18:70;;8393:30:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8390:278;;;8452:4;-1:-1:-1;;;;;8452:11:2;;8464:4;8470:7;8489:22;8505:5;8489:15;:22::i;:::-;8479:32;;:7;:32;:::i;:::-;3917:6:5;8519:5:2;:12;;;8452:80;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8559:26:2;;-1:-1:-1;;;8559:26:2;;;;;17658:25:70;;;8583:1:2;17699:18:70;;;17692:34;-1:-1:-1;;;;;8559:14:2;;;-1:-1:-1;8559:14:2;;-1:-1:-1;17631:18:70;;8559:26:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;8340:813;;8390:278;8612:4;-1:-1:-1;;;;;8612:8:2;;8621:10;8633:4;8639:7;8648:4;8654:7;8612:50;;;;;;;;;;;;;;;;;;;:::i;8340:813::-;2222:2:5;8696:4:2;:13;8692:461;;8745:25;;-1:-1:-1;;;8745:25:2;;;;;17658::70;;;2222:2:5;17699:18:70;;;17692:34;-1:-1:-1;;;;;8745:12:2;;;;;17631:18:70;;8745:25:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8737:48;;;;-1:-1:-1;;;8737:48:2;;34061:2:70;8737:48:2;;;34043:21:70;34100:2;34080:18;;;34073:30;-1:-1:-1;;;34119:18:70;;;34112:40;34169:18;;8737:48:2;33859:334:70;8737:48:2;8814:6;;;;;;;;;-1:-1:-1;;;;;8814:6:2;-1:-1:-1;;;;;8814:15:2;;8830:5;8837:7;3476:5:5;8814:44:2;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8811:223;;;8893:26;;-1:-1:-1;;;8893:26:2;;;;;17658:25:70;;;8917:1:2;17699:18:70;;;17692:34;-1:-1:-1;;;;;8893:14:2;;;;;17631:18:70;;8893:26:2;17486:246:70;8811:223:2;8974:24;;-1:-1:-1;;;8974:24:2;;;;;17658:25:70;;;8996:1:2;17699:18:70;;;17692:34;-1:-1:-1;;;;;8974:12:2;;;;;17631:18:70;;8974:24:2;17486:246:70;8692:461:2;9084:4;-1:-1:-1;;;;;9084:8:2;;9093:10;9105:4;9111:7;9120:4;9126:7;9084:50;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8692:461;-1:-1:-1;;4346:1:5;9156:12:2;;;:32;-1:-1:-1;9156:5:2;;-1:-1:-1;;;;;6376:2832:2;;;;;;;;:::o;4113:401:32:-;-1:-1:-1;;;;;4321:20:32;;952:10:42;4321:20:32;;:60;;-1:-1:-1;4345:36:32;4362:4;952:10:42;3873:168:32;:::i;4345:36::-;4299:151;;;;-1:-1:-1;;;4299:151:32;;;;;;;:::i;:::-;4461:45;4479:4;4485:2;4489;4493:6;4501:4;4461:17;:45::i;665:321:35:-;-1:-1:-1;;;;;805:23:35;;952:10:42;805:23:35;;:66;;-1:-1:-1;832:39:35;849:7;952:10:42;3873:168:32;:::i;832:39:35:-;783:157;;;;-1:-1:-1;;;783:157:35;;;;;;;:::i;11441:808:32:-;-1:-1:-1;;;;;11568:18:32;;11560:66;;;;-1:-1:-1;;;11560:66:32;;;;;;;:::i;:::-;952:10:42;11639:16:32;11704:21;11722:2;11704:17;:21::i;:::-;11681:44;;11736:24;11763:25;11781:6;11763:17;:25::i;:::-;11801:66;;;;;;;;;-1:-1:-1;11801:66:32;;;;11902:13;;;:9;:13;;;;;-1:-1:-1;;;;;11902:19:32;;;;;;;;11736:52;;-1:-1:-1;11940:21:32;;;;11932:70;;;;-1:-1:-1;;;11932:70:32;;;;;;;:::i;:::-;12038:13;;;;:9;:13;;;;;;;;-1:-1:-1;;;;;12038:19:32;;;;;;;;;;;;12060:20;;;12038:42;;12109:54;;17658:25:70;;;17699:18;;;17692:34;;;12038:19:32;;12109:54;;;;-1:-1:-1;;;;;;;;;;;12109:54:32;17631:18:70;12109:54:32;;;;;;;12176:65;;;;;;;;;12220:1;12176:65;;;6829:1146;;7056:7;:14;7042:3;:10;:28;7034:81;;;;-1:-1:-1;;;7034:81:32;;;;;;;:::i;:::-;-1:-1:-1;;;;;7134:16:32;;7126:66;;;;-1:-1:-1;;;7126:66:32;;;;;;;:::i;:::-;952:10:42;7205:16:32;7322:421;7346:3;:10;7342:1;:14;7322:421;;;7378:10;7391:3;7395:1;7391:6;;;;;;;;:::i;:::-;;;;;;;7378:19;;7412:14;7429:7;7437:1;7429:10;;;;;;;;:::i;:::-;;;;;;;;;;;;7456:19;7478:13;;;:9;:13;;;;;;-1:-1:-1;;;;;7478:19:32;;;;;;;;;;;;7429:10;;-1:-1:-1;7520:21:32;;;;7512:76;;;;-1:-1:-1;;;7512:76:32;;;;;;;:::i;:::-;7632:13;;;;:9;:13;;;;;;;;-1:-1:-1;;;;;7632:19:32;;;;;;;;;;7654:20;;;7632:42;;7704:17;;;;;;;:27;;7654:20;;7632:13;7704:27;;7654:20;;7704:27;:::i;:::-;;;;;;;;7363:380;;;7358:3;;;;:::i;:::-;;;7322:421;;;;7790:2;-1:-1:-1;;;;;7760:47:32;7784:4;-1:-1:-1;;;;;7760:47:32;7774:8;-1:-1:-1;;;;;7760:47:32;;7794:3;7799:7;7760:47;;;;;;;:::i;:::-;;;;;;;;7892:75;7928:8;7938:4;7944:2;7948:3;7953:7;7962:4;7892:35;:75::i;:::-;7023:952;6829:1146;;;;;:::o;1320:119::-;3024:13:30;;;;;;;3016:69;;;;-1:-1:-1;;;3016:69:30;;;;;;;:::i;:::-;1401:30:32::1;1426:4;1401:24;:30::i;:::-;1320:119:::0;:::o;505:68:35:-;3024:13:30;;;;;;;3016:69;;;;-1:-1:-1;;;3016:69:30;;;;;;;:::i;1892:113:31:-;3024:13:30;;;;;;;3016:69;;;;-1:-1:-1;;;3016:69:30;;;;;;;:::i;:::-;1963:34:31::1;:32;:34::i;9293:729:32:-:0;-1:-1:-1;;;;;9446:16:32;;9438:62;;;;-1:-1:-1;;;9438:62:32;;37450:2:70;9438:62:32;;;37432:21:70;37489:2;37469:18;;;37462:30;37528:34;37508:18;;;37501:62;-1:-1:-1;;;37579:18:70;;;37572:31;37620:19;;9438:62:32;37248:397:70;9438:62:32;952:10:42;9513:16:32;9578:21;9596:2;9578:17;:21::i;:::-;9555:44;;9610:24;9637:25;9655:6;9637:17;:25::i;:::-;9610:52;;9754:13;;;;:9;:13;;;;;;;;-1:-1:-1;;;;;9754:17:32;;;;;;;;;:27;;9775:6;;9754:13;:27;;9775:6;;9754:27;:::i;:::-;;;;-1:-1:-1;;9797:52:32;;;17658:25:70;;;17714:2;17699:18;;17692:34;;;-1:-1:-1;;;;;9797:52:32;;;;9830:1;;9797:52;;;;-1:-1:-1;;;;;;;;;;;9797:52:32;17631:18:70;9797:52:32;;;;;;;9940:74;9971:8;9989:1;9993:2;9997;10001:6;10009:4;9940:30;:74::i;12452:969::-;-1:-1:-1;;;;;12604:18:32;;12596:66;;;;-1:-1:-1;;;12596:66:32;;;;;;;:::i;:::-;12695:7;:14;12681:3;:10;:28;12673:81;;;;-1:-1:-1;;;12673:81:32;;;;;;;:::i;:::-;12811:66;;;;;;;;;12767:16;12811:66;;;;952:10:42;;12890:373:32;12914:3;:10;12910:1;:14;12890:373;;;12946:10;12959:3;12963:1;12959:6;;;;;;;;:::i;:::-;;;;;;;12946:19;;12980:14;12997:7;13005:1;12997:10;;;;;;;;:::i;:::-;;;;;;;;;;;;13024:19;13046:13;;;:9;:13;;;;;;-1:-1:-1;;;;;13046:19:32;;;;;;;;;;;;12997:10;;-1:-1:-1;13088:21:32;;;;13080:70;;;;-1:-1:-1;;;13080:70:32;;;;;;;:::i;:::-;13194:13;;;;:9;:13;;;;;;;;-1:-1:-1;;;;;13194:19:32;;;;;;;;;;13216:20;;13194:42;;12926:3;;;;:::i;:::-;;;;12890:373;;;;13318:1;-1:-1:-1;;;;;13280:55:32;13304:4;-1:-1:-1;;;;;13280:55:32;13294:8;-1:-1:-1;;;;;13280:55:32;;13322:3;13327:7;13280:55;;;;;;;:::i;:::-;;;;;;;;13348:65;;;;;;;;;13392:1;13348:65;;;6829:1146;13563:331;13718:8;-1:-1:-1;;;;;13709:17:32;:5;-1:-1:-1;;;;;13709:17:32;;13701:71;;;;-1:-1:-1;;;13701:71:32;;37852:2:70;13701:71:32;;;37834:21:70;37891:2;37871:18;;;37864:30;37930:34;37910:18;;;37903:62;-1:-1:-1;;;37981:18:70;;;37974:39;38030:19;;13701:71:32;37650:405:70;13701:71:32;-1:-1:-1;;;;;13783:25:32;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;13783:46:32;;;;;;;;;;13845:41;;1178::70;;;13845::32;;1151:18:70;13845:41:32;;;;;;;13563:331;;;:::o;9210:103:2:-;9294:11;;9277:4;;9294:15;;9308:1;9294:15;:::i;5497:974:32:-;-1:-1:-1;;;;;5685:16:32;;5677:66;;;;-1:-1:-1;;;5677:66:32;;;;;;;:::i;:::-;952:10:42;5756:16:32;5821:21;5839:2;5821:17;:21::i;:::-;5798:44;;5853:24;5880:25;5898:6;5880:17;:25::i;:::-;5853:52;;5991:19;6013:13;;;:9;:13;;;;;;;;-1:-1:-1;;;;;6013:19:32;;;;;;;;;;6051:21;;;;6043:76;;;;-1:-1:-1;;;6043:76:32;;;;;;;:::i;:::-;6155:13;;;;:9;:13;;;;;;;;-1:-1:-1;;;;;6155:19:32;;;;;;;;;;6177:20;;;6155:42;;6219:17;;;;;;;:27;;6177:20;;6155:13;6219:27;;6177:20;;6219:27;:::i;:::-;;;;-1:-1:-1;;6264:46:32;;;17658:25:70;;;17714:2;17699:18;;17692:34;;;-1:-1:-1;;;;;6264:46:32;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;6264:46:32;17631:18:70;6264:46:32;;;;;;;6395:68;6426:8;6436:4;6442:2;6446;6450:6;6458:4;6395:30;:68::i;17871:198::-;17991:16;;;18005:1;17991:16;;;;;;;;;17937;;17966:22;;17991:16;;;;;;;;;;;;-1:-1:-1;17991:16:32;17966:41;;18029:7;18018:5;18024:1;18018:8;;;;;;;;:::i;:::-;;;;;;;;;;:18;18056:5;17871:198;-1:-1:-1;;17871:198:32:o;17028:835::-;-1:-1:-1;;;;;17268:13:32;;1516:19:41;:23;17264:592:32;;17304:90;;-1:-1:-1;;;17304:90:32;;-1:-1:-1;;;;;17304:54:32;;;;;:90;;17359:8;;17369:4;;17375:3;;17380:7;;17389:4;;17304:90;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;17304:90:32;;;;;;;;-1:-1:-1;;17304:90:32;;;;;;;;;;;;:::i;:::-;;;17300:545;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;17718:6;17711:14;;-1:-1:-1;;;17711:14:32;;;;;;;;:::i;17300:545::-;;;17767:62;;-1:-1:-1;;;17767:62:32;;40208:2:70;17767:62:32;;;40190:21:70;40247:2;40227:18;;;40220:30;40286:34;40266:18;;;40259:62;-1:-1:-1;;;40337:18:70;;;40330:50;40397:19;;17767:62:32;40006:416:70;17300:545:32;-1:-1:-1;;;;;;17476:71:32;;-1:-1:-1;;;17476:71:32;17472:170;;17572:50;;-1:-1:-1;;;17572:50:32;;;;;;;:::i;1447:112::-;3024:13:30;;;;;;;3016:69;;;;-1:-1:-1;;;3016:69:30;;;;;;;:::i;:::-;1538:13:32::1;1546:4;1538:7;:13::i;2013:111:31:-:0;3024:13:30;;;;;;;3016:69;;;;-1:-1:-1;;;3016:69:30;;;;;;;:::i;:::-;1806:1:31::1;2094:7;:22:::0;2013:111::o;16254:766:32:-;-1:-1:-1;;;;;16469:13:32;;1516:19:41;:23;16465:548:32;;16505:83;;-1:-1:-1;;;16505:83:32;;-1:-1:-1;;;;;16505:49:32;;;;;:83;;16555:8;;16565:4;;16571:2;;16575:6;;16583:4;;16505:83;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;16505:83:32;;;;;;;;-1:-1:-1;;16505:83:32;;;;;;;;;;;;:::i;:::-;;;16501:501;;;;:::i;:::-;-1:-1:-1;;;;;;16638:66:32;;-1:-1:-1;;;16638:66:32;16634:165;;16729:50;;-1:-1:-1;;;16729:50:32;;;;;;;:::i;8819:88::-;8886:4;:13;8893:6;8886:4;:13;:::i;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:131:70:-;-1:-1:-1;;;;;89:31:70;;79:42;;69:70;;135:1;132;125:12;150:315;218:6;226;279:2;267:9;258:7;254:23;250:32;247:52;;;295:1;292;285:12;247:52;334:9;321:23;353:31;378:5;353:31;:::i;:::-;403:5;455:2;440:18;;;;427:32;;-1:-1:-1;;;150:315:70:o;652:131::-;-1:-1:-1;;;;;;726:32:70;;716:43;;706:71;;773:1;770;763:12;788:245;846:6;899:2;887:9;878:7;874:23;870:32;867:52;;;915:1;912;905:12;867:52;954:9;941:23;973:30;997:5;973:30;:::i;:::-;1022:5;788:245;-1:-1:-1;;;788:245:70:o;1230:452::-;1316:6;1324;1332;1340;1393:3;1381:9;1372:7;1368:23;1364:33;1361:53;;;1410:1;1407;1400:12;1361:53;1449:9;1436:23;1468:31;1493:5;1468:31;:::i;:::-;1518:5;1570:2;1555:18;;1542:32;;-1:-1:-1;1621:2:70;1606:18;;1593:32;;1672:2;1657:18;1644:32;;-1:-1:-1;1230:452:70;-1:-1:-1;;;1230:452:70:o;1687:180::-;1746:6;1799:2;1787:9;1778:7;1774:23;1770:32;1767:52;;;1815:1;1812;1805:12;1767:52;-1:-1:-1;1838:23:70;;1687:180;-1:-1:-1;1687:180:70:o;1872:472::-;1914:3;1952:5;1946:12;1979:6;1974:3;1967:19;2004:1;2014:162;2028:6;2025:1;2022:13;2014:162;;;2090:4;2146:13;;;2142:22;;2136:29;2118:11;;;2114:20;;2107:59;2043:12;2014:162;;;2194:6;2191:1;2188:13;2185:87;;;2260:1;2253:4;2244:6;2239:3;2235:16;2231:27;2224:38;2185:87;-1:-1:-1;2326:2:70;2305:15;-1:-1:-1;;2301:29:70;2292:39;;;;2333:4;2288:50;;1872:472;-1:-1:-1;;1872:472:70:o;2349:220::-;2498:2;2487:9;2480:21;2461:4;2518:45;2559:2;2548:9;2544:18;2536:6;2518:45;:::i;2574:383::-;2651:6;2659;2667;2720:2;2708:9;2699:7;2695:23;2691:32;2688:52;;;2736:1;2733;2726:12;2688:52;2775:9;2762:23;2794:31;2819:5;2794:31;:::i;:::-;2844:5;2896:2;2881:18;;2868:32;;-1:-1:-1;2947:2:70;2932:18;;;2919:32;;2574:383;-1:-1:-1;;;2574:383:70:o;3363:127::-;3424:10;3419:3;3415:20;3412:1;3405:31;3455:4;3452:1;3445:15;3479:4;3476:1;3469:15;3495:224;3581:3;3573:6;3569:16;3651:6;3639:10;3636:22;-1:-1:-1;;;;;3603:10:70;3600:34;3597:62;3594:88;;;3662:18;;:::i;:::-;3698:2;3691:22;-1:-1:-1;3495:224:70:o;3724:249::-;3834:2;3815:13;;-1:-1:-1;;3811:27:70;3799:40;;-1:-1:-1;;;;;3854:34:70;;3890:22;;;3851:62;3848:88;;;3916:18;;:::i;:::-;3952:2;3945:22;-1:-1:-1;;3724:249:70:o;3978:183::-;4038:4;-1:-1:-1;;;;;4063:6:70;4060:30;4057:56;;;4093:18;;:::i;:::-;-1:-1:-1;4138:1:70;4134:14;4150:4;4130:25;;3978:183::o;4166:724::-;4220:5;4273:3;4266:4;4258:6;4254:17;4250:27;4240:55;;4291:1;4288;4281:12;4240:55;4327:6;4314:20;4353:4;4376:43;4416:2;4376:43;:::i;:::-;4448:2;4442:9;4460:31;4488:2;4480:6;4460:31;:::i;:::-;4526:18;;;4618:1;4614:10;;;;4602:23;;4598:32;;;4560:15;;;;-1:-1:-1;4642:15:70;;;4639:35;;;4670:1;4667;4660:12;4639:35;4706:2;4698:6;4694:15;4718:142;4734:6;4729:3;4726:15;4718:142;;;4800:17;;4788:30;;4838:12;;;;4751;;4718:142;;;-1:-1:-1;4878:6:70;4166:724;-1:-1:-1;;;;;;4166:724:70:o;4895:468::-;4959:5;-1:-1:-1;;;;;4985:6:70;4982:30;4979:56;;;5015:18;;:::i;:::-;5064:2;5058:9;5076:69;5133:2;5112:15;;-1:-1:-1;;5108:29:70;5139:4;5104:40;5058:9;5076:69;:::i;:::-;5163:6;5154:15;;5193:6;5185;5178:22;5233:3;5224:6;5219:3;5215:16;5212:25;5209:45;;;5250:1;5247;5240:12;5209:45;5300:6;5295:3;5288:4;5280:6;5276:17;5263:44;5355:1;5348:4;5339:6;5331;5327:19;5323:30;5316:41;;4895:468;;;;;:::o;5368:220::-;5410:5;5463:3;5456:4;5448:6;5444:17;5440:27;5430:55;;5481:1;5478;5471:12;5430:55;5503:79;5578:3;5569:6;5556:20;5549:4;5541:6;5537:17;5503:79;:::i;5593:1071::-;5747:6;5755;5763;5771;5779;5832:3;5820:9;5811:7;5807:23;5803:33;5800:53;;;5849:1;5846;5839:12;5800:53;5888:9;5875:23;5907:31;5932:5;5907:31;:::i;:::-;5957:5;-1:-1:-1;6014:2:70;5999:18;;5986:32;6027:33;5986:32;6027:33;:::i;:::-;6079:7;-1:-1:-1;6137:2:70;6122:18;;6109:32;-1:-1:-1;;;;;6190:14:70;;;6187:34;;;6217:1;6214;6207:12;6187:34;6240:61;6293:7;6284:6;6273:9;6269:22;6240:61;:::i;:::-;6230:71;;6354:2;6343:9;6339:18;6326:32;6310:48;;6383:2;6373:8;6370:16;6367:36;;;6399:1;6396;6389:12;6367:36;6422:63;6477:7;6466:8;6455:9;6451:24;6422:63;:::i;:::-;6412:73;;6538:3;6527:9;6523:19;6510:33;6494:49;;6568:2;6558:8;6555:16;6552:36;;;6584:1;6581;6574:12;6552:36;;6607:51;6650:7;6639:8;6628:9;6624:24;6607:51;:::i;:::-;6597:61;;;5593:1071;;;;;;;;:::o;6669:118::-;6755:5;6748:13;6741:21;6734:5;6731:32;6721:60;;6777:1;6774;6767:12;6792:588;6884:6;6892;6900;6908;6916;6969:3;6957:9;6948:7;6944:23;6940:33;6937:53;;;6986:1;6983;6976:12;6937:53;7025:9;7012:23;7044:31;7069:5;7044:31;:::i;:::-;7094:5;-1:-1:-1;7146:2:70;7131:18;;7118:32;;-1:-1:-1;7197:2:70;7182:18;;7169:32;;-1:-1:-1;7253:2:70;7238:18;;7225:32;7266:30;7225:32;7266:30;:::i;:::-;6792:588;;;;-1:-1:-1;6792:588:70;;7369:3;7354:19;7341:33;;6792:588;-1:-1:-1;;6792:588:70:o;7385:1277::-;7503:6;7511;7564:2;7552:9;7543:7;7539:23;7535:32;7532:52;;;7580:1;7577;7570:12;7532:52;7620:9;7607:23;-1:-1:-1;;;;;7690:2:70;7682:6;7679:14;7676:34;;;7706:1;7703;7696:12;7676:34;7744:6;7733:9;7729:22;7719:32;;7789:7;7782:4;7778:2;7774:13;7770:27;7760:55;;7811:1;7808;7801:12;7760:55;7847:2;7834:16;7869:4;7892:43;7932:2;7892:43;:::i;:::-;7964:2;7958:9;7976:31;8004:2;7996:6;7976:31;:::i;:::-;8042:18;;;8130:1;8126:10;;;;8118:19;;8114:28;;;8076:15;;;;-1:-1:-1;8154:19:70;;;8151:39;;;8186:1;8183;8176:12;8151:39;8210:11;;;;8230:217;8246:6;8241:3;8238:15;8230:217;;;8326:3;8313:17;8343:31;8368:5;8343:31;:::i;:::-;8387:18;;8263:12;;;;8425;;;;8230:217;;;8466:6;-1:-1:-1;;8510:18:70;;8497:32;;-1:-1:-1;;8541:16:70;;;8538:36;;;8570:1;8567;8560:12;8538:36;;8593:63;8648:7;8637:8;8626:9;8622:24;8593:63;:::i;:::-;8583:73;;;7385:1277;;;;;:::o;8667:435::-;8720:3;8758:5;8752:12;8785:6;8780:3;8773:19;8811:4;8840:2;8835:3;8831:12;8824:19;;8877:2;8870:5;8866:14;8898:1;8908:169;8922:6;8919:1;8916:13;8908:169;;;8983:13;;8971:26;;9017:12;;;;9052:15;;;;8944:1;8937:9;8908:169;;;-1:-1:-1;9093:3:70;;8667:435;-1:-1:-1;;;;;8667:435:70:o;9107:261::-;9286:2;9275:9;9268:21;9249:4;9306:56;9358:2;9347:9;9343:18;9335:6;9306:56;:::i;9373:247::-;9432:6;9485:2;9473:9;9464:7;9460:23;9456:32;9453:52;;;9501:1;9498;9491:12;9453:52;9540:9;9527:23;9559:31;9584:5;9559:31;:::i;9625:868::-;9721:6;9729;9737;9745;9798:3;9786:9;9777:7;9773:23;9769:33;9766:53;;;9815:1;9812;9805:12;9766:53;9854:9;9841:23;9873:31;9898:5;9873:31;:::i;:::-;9923:5;-1:-1:-1;9980:2:70;9965:18;;9952:32;9993:33;9952:32;9993:33;:::i;:::-;10045:7;-1:-1:-1;10104:2:70;10089:18;;10076:32;10117:33;10076:32;10117:33;:::i;:::-;10169:7;-1:-1:-1;10227:2:70;10212:18;;10199:32;-1:-1:-1;;;;;10243:30:70;;10240:50;;;10286:1;10283;10276:12;10240:50;10309:22;;10362:4;10354:13;;10350:27;-1:-1:-1;10340:55:70;;10391:1;10388;10381:12;10340:55;10414:73;10479:7;10474:2;10461:16;10456:2;10452;10448:11;10414:73;:::i;:::-;10404:83;;;9625:868;;;;;;;:::o;10498:730::-;10625:6;10633;10641;10694:2;10682:9;10673:7;10669:23;10665:32;10662:52;;;10710:1;10707;10700:12;10662:52;10749:9;10736:23;10768:31;10793:5;10768:31;:::i;:::-;10818:5;-1:-1:-1;10874:2:70;10859:18;;10846:32;-1:-1:-1;;;;;10927:14:70;;;10924:34;;;10954:1;10951;10944:12;10924:34;10977:61;11030:7;11021:6;11010:9;11006:22;10977:61;:::i;:::-;10967:71;;11091:2;11080:9;11076:18;11063:32;11047:48;;11120:2;11110:8;11107:16;11104:36;;;11136:1;11133;11126:12;11104:36;;11159:63;11214:7;11203:8;11192:9;11188:24;11159:63;:::i;:::-;11149:73;;;10498:730;;;;;:::o;11233:382::-;11298:6;11306;11359:2;11347:9;11338:7;11334:23;11330:32;11327:52;;;11375:1;11372;11365:12;11327:52;11414:9;11401:23;11433:31;11458:5;11433:31;:::i;:::-;11483:5;-1:-1:-1;11540:2:70;11525:18;;11512:32;11553:30;11512:32;11553:30;:::i;:::-;11602:7;11592:17;;;11233:382;;;;;:::o;11620:519::-;11703:6;11711;11719;11727;11780:3;11768:9;11759:7;11755:23;11751:33;11748:53;;;11797:1;11794;11787:12;11748:53;11836:9;11823:23;11855:31;11880:5;11855:31;:::i;:::-;11905:5;-1:-1:-1;11957:2:70;11942:18;;11929:32;;-1:-1:-1;12008:2:70;11993:18;;11980:32;;-1:-1:-1;12064:2:70;12049:18;;12036:32;12077:30;12036:32;12077:30;:::i;:::-;11620:519;;;;-1:-1:-1;11620:519:70;;-1:-1:-1;;11620:519:70:o;12144:520::-;12238:6;12246;12254;12262;12270;12323:3;12311:9;12302:7;12298:23;12294:33;12291:53;;;12340:1;12337;12330:12;12291:53;12379:9;12366:23;12398:31;12423:5;12398:31;:::i;:::-;12448:5;12500:2;12485:18;;12472:32;;-1:-1:-1;12551:2:70;12536:18;;12523:32;;12602:2;12587:18;;12574:32;;-1:-1:-1;12653:3:70;12638:19;12625:33;;-1:-1:-1;12144:520:70;-1:-1:-1;;;12144:520:70:o;13229:388::-;13297:6;13305;13358:2;13346:9;13337:7;13333:23;13329:32;13326:52;;;13374:1;13371;13364:12;13326:52;13413:9;13400:23;13432:31;13457:5;13432:31;:::i;:::-;13482:5;-1:-1:-1;13539:2:70;13524:18;;13511:32;13552:33;13511:32;13552:33;:::i;13622:734::-;13726:6;13734;13742;13750;13758;13811:3;13799:9;13790:7;13786:23;13782:33;13779:53;;;13828:1;13825;13818:12;13779:53;13867:9;13854:23;13886:31;13911:5;13886:31;:::i;:::-;13936:5;-1:-1:-1;13993:2:70;13978:18;;13965:32;14006:33;13965:32;14006:33;:::i;:::-;14058:7;-1:-1:-1;14112:2:70;14097:18;;14084:32;;-1:-1:-1;14163:2:70;14148:18;;14135:32;;-1:-1:-1;14218:3:70;14203:19;;14190:33;-1:-1:-1;;;;;14235:30:70;;14232:50;;;14278:1;14275;14268:12;14232:50;14301:49;14342:7;14333:6;14322:9;14318:22;14301:49;:::i;14773:245::-;14852:6;14860;14913:2;14901:9;14892:7;14888:23;14884:32;14881:52;;;14929:1;14926;14919:12;14881:52;-1:-1:-1;;14952:16:70;;15008:2;14993:18;;;14987:25;14952:16;;14987:25;;-1:-1:-1;14773:245:70:o;15023:::-;15090:6;15143:2;15131:9;15122:7;15118:23;15114:32;15111:52;;;15159:1;15156;15149:12;15111:52;15191:9;15185:16;15210:28;15232:5;15210:28;:::i;15273:469::-;15538:25;;;15594:2;15579:18;;15572:34;;;;15637:2;15622:18;;15615:34;;;;15680:2;15665:18;;15658:34;15723:3;15708:19;;15701:35;15525:3;15510:19;;15273:469::o;15747:251::-;15817:6;15870:2;15858:9;15849:7;15845:23;15841:32;15838:52;;;15886:1;15883;15876:12;15838:52;15918:9;15912:16;15937:31;15962:5;15937:31;:::i;16333:425::-;-1:-1:-1;;;;;16574:32:70;;;;16556:51;;16638:2;16623:18;;16616:34;;;;16681:2;16666:18;;16659:34;16736:14;16729:22;16724:2;16709:18;;16702:50;16543:3;16528:19;;16333:425::o;16763:371::-;-1:-1:-1;;;;;17009:32:70;;;;16991:51;;17073:2;17058:18;;17051:34;;;;17116:2;17101:18;;17094:34;16979:2;16964:18;;16763:371::o;17139:342::-;17341:2;17323:21;;;17380:2;17360:18;;;17353:30;-1:-1:-1;;;17414:2:70;17399:18;;17392:48;17472:2;17457:18;;17139:342::o;18441:380::-;18520:1;18516:12;;;;18563;;;18584:61;;18638:4;18630:6;18626:17;18616:27;;18584:61;18691:2;18683:6;18680:14;18660:18;18657:38;18654:161;;18737:10;18732:3;18728:20;18725:1;18718:31;18772:4;18769:1;18762:15;18800:4;18797:1;18790:15;18654:161;;18441:380;;;:::o;20636:931::-;20730:6;20774:9;20765:7;20761:23;20804:3;20800:2;20796:12;20793:32;;;20821:1;20818;20811:12;20793:32;20854:2;20848:9;20866:32;20891:6;20866:32;:::i;:::-;20928:9;20922:16;20914:6;20907:32;20993:2;20982:9;20978:18;20972:25;20967:2;20959:6;20955:15;20948:50;21052:2;21041:9;21037:18;21031:25;21026:2;21018:6;21014:15;21007:50;21111:2;21100:9;21096:18;21090:25;21085:2;21077:6;21073:15;21066:50;21151:2;21144:3;21140:8;21136:2;21132:17;21128:26;21125:46;;;21167:1;21164;21157:12;21125:46;21202:2;21196:9;21180:25;;21246:2;21236:8;21232:17;21315:8;21303:10;21300:24;-1:-1:-1;;;;;21267:10:70;21264:34;21261:64;21258:90;;;21328:18;;:::i;:::-;21364:2;21357:22;21426:3;21411:19;;;21405:26;21388:44;;21448:16;;21441:34;;;;21530:3;21515:19;;;21509:26;21491:16;;;21484:52;;;;-1:-1:-1;21452:6:70;20636:931;-1:-1:-1;20636:931:70:o;21921:337::-;22123:2;22105:21;;;22162:2;22142:18;;;22135:30;-1:-1:-1;;;22196:2:70;22181:18;;22174:43;22249:2;22234:18;;21921:337::o;22263:127::-;22324:10;22319:3;22315:20;22312:1;22305:31;22355:4;22352:1;22345:15;22379:4;22376:1;22369:15;22395:168;22435:7;22501:1;22497;22493:6;22489:14;22486:1;22483:21;22478:1;22471:9;22464:17;22460:45;22457:71;;;22508:18;;:::i;:::-;-1:-1:-1;22548:9:70;;22395:168::o;23806:127::-;23867:10;23862:3;23858:20;23855:1;23848:31;23898:4;23895:1;23888:15;23922:4;23919:1;23912:15;23938:135;23977:3;23998:17;;;23995:43;;24018:18;;:::i;:::-;-1:-1:-1;24065:1:70;24054:13;;23938:135::o;24844:425::-;-1:-1:-1;;;;;25101:32:70;;;;25083:51;;25165:2;25150:18;;25143:34;;;;25208:2;25193:18;;25186:34;25251:2;25236:18;;25229:34;25070:3;25055:19;;24844:425::o;26996:184::-;27066:6;27119:2;27107:9;27098:7;27094:23;27090:32;27087:52;;;27135:1;27132;27125:12;27087:52;-1:-1:-1;27158:16:70;;26996:184;-1:-1:-1;26996:184:70:o;27185:405::-;27387:2;27369:21;;;27426:2;27406:18;;;27399:30;27465:34;27460:2;27445:18;;27438:62;-1:-1:-1;;;27531:2:70;27516:18;;27509:39;27580:3;27565:19;;27185:405::o;30658:616::-;30756:6;30809:3;30797:9;30788:7;30784:23;30780:33;30777:53;;;30826:1;30823;30816:12;30777:53;30859:2;30853:9;30871:32;30896:6;30871:32;:::i;:::-;30933:9;30927:16;30919:6;30912:32;30998:2;30987:9;30983:18;30977:25;30972:2;30964:6;30960:15;30953:50;31057:2;31046:9;31042:18;31036:25;31031:2;31023:6;31019:15;31012:50;31116:2;31105:9;31101:18;31095:25;31090:2;31082:6;31078:15;31071:50;31176:3;31165:9;31161:19;31155:26;31149:3;31141:6;31137:16;31130:52;31237:3;31226:9;31222:19;31216:26;31210:3;31202:6;31198:16;31191:52;31262:6;31252:16;;;30658:616;;;;:::o;31279:217::-;31319:1;31345;31335:132;;31389:10;31384:3;31380:20;31377:1;31370:31;31424:4;31421:1;31414:15;31452:4;31449:1;31442:15;31335:132;-1:-1:-1;31481:9:70;;31279:217::o;33106:487::-;-1:-1:-1;;;;;33381:32:70;;;;33363:51;;33445:2;33430:18;;33423:34;;;;33488:2;33473:18;;33466:34;;;;33531:2;33516:18;;33509:34;33574:3;33559:19;;33552:35;33350:3;33335:19;;33106:487::o;34198:399::-;34400:2;34382:21;;;34439:2;34419:18;;;34412:30;34478:34;34473:2;34458:18;;34451:62;-1:-1:-1;;;34544:2:70;34529:18;;34522:33;34587:3;34572:19;;34198:399::o;34602:400::-;34804:2;34786:21;;;34843:2;34823:18;;;34816:30;34882:34;34877:2;34862:18;;34855:62;-1:-1:-1;;;34948:2:70;34933:18;;34926:34;34992:3;34977:19;;34602:400::o;35007:404::-;35209:2;35191:21;;;35248:2;35228:18;;;35221:30;35287:34;35282:2;35267:18;;35260:62;-1:-1:-1;;;35353:2:70;35338:18;;35331:38;35401:3;35386:19;;35007:404::o;35416:401::-;35618:2;35600:21;;;35657:2;35637:18;;;35630:30;35696:34;35691:2;35676:18;;35669:62;-1:-1:-1;;;35762:2:70;35747:18;;35740:35;35807:3;35792:19;;35416:401::o;35822:406::-;36024:2;36006:21;;;36063:2;36043:18;;;36036:30;36102:34;36097:2;36082:18;;36075:62;-1:-1:-1;;;36168:2:70;36153:18;;36146:40;36218:3;36203:19;;35822:406::o;36233:128::-;36273:3;36304:1;36300:6;36297:1;36294:13;36291:39;;;36310:18;;:::i;:::-;-1:-1:-1;36346:9:70;;36233:128::o;36366:465::-;36623:2;36612:9;36605:21;36586:4;36649:56;36701:2;36690:9;36686:18;36678:6;36649:56;:::i;:::-;36753:9;36745:6;36741:22;36736:2;36725:9;36721:18;36714:50;36781:44;36818:6;36810;36781:44;:::i;36836:407::-;37038:2;37020:21;;;37077:2;37057:18;;;37050:30;37116:34;37111:2;37096:18;;37089:62;-1:-1:-1;;;37182:2:70;37167:18;;37160:41;37233:3;37218:19;;36836:407::o;38060:827::-;-1:-1:-1;;;;;38457:15:70;;;38439:34;;38509:15;;38504:2;38489:18;;38482:43;38419:3;38556:2;38541:18;;38534:31;;;38382:4;;38588:57;;38625:19;;38617:6;38588:57;:::i;:::-;38693:9;38685:6;38681:22;38676:2;38665:9;38661:18;38654:50;38727:44;38764:6;38756;38727:44;:::i;:::-;38713:58;;38820:9;38812:6;38808:22;38802:3;38791:9;38787:19;38780:51;38848:33;38874:6;38866;38848:33;:::i;:::-;38840:41;38060:827;-1:-1:-1;;;;;;;;38060:827:70:o;38892:249::-;38961:6;39014:2;39002:9;38993:7;38989:23;38985:32;38982:52;;;39030:1;39027;39020:12;38982:52;39062:9;39056:16;39081:30;39105:5;39081:30;:::i;39146:179::-;39181:3;39223:1;39205:16;39202:23;39199:120;;;39269:1;39266;39263;39248:23;-1:-1:-1;39306:1:70;39300:8;39295:3;39291:18;39199:120;39146:179;:::o;39330:671::-;39369:3;39411:4;39393:16;39390:26;39387:39;;;39330:671;:::o;39387:39::-;39453:2;39447:9;-1:-1:-1;;39518:16:70;39514:25;;39511:1;39447:9;39490:50;39569:4;39563:11;39593:16;-1:-1:-1;;;;;39699:2:70;39692:4;39684:6;39680:17;39677:25;39672:2;39664:6;39661:14;39658:45;39655:58;;;39706:5;;;;;39330:671;:::o;39655:58::-;39743:6;39737:4;39733:17;39722:28;;39779:3;39773:10;39806:2;39798:6;39795:14;39792:27;;;39812:5;;;;;;39330:671;:::o;39792:27::-;39896:2;39877:16;39871:4;39867:27;39863:36;39856:4;39847:6;39842:3;39838:16;39834:27;39831:69;39828:82;;;39903:5;;;;;;39330:671;:::o;39828:82::-;39919:57;39970:4;39961:6;39953;39949:19;39945:30;39939:4;39919:57;:::i;:::-;-1:-1:-1;39992:3:70;;39330:671;-1:-1:-1;;;;;39330:671:70:o;40427:404::-;40629:2;40611:21;;;40668:2;40648:18;;;40641:30;40707:34;40702:2;40687:18;;40680:62;-1:-1:-1;;;40773:2:70;40758:18;;40751:38;40821:3;40806:19;;40427:404::o;40836:561::-;-1:-1:-1;;;;;41133:15:70;;;41115:34;;41185:15;;41180:2;41165:18;;41158:43;41232:2;41217:18;;41210:34;;;41275:2;41260:18;;41253:34;;;41095:3;41318;41303:19;;41296:32;;;41058:4;;41345:46;;41371:19;;41363:6;41345:46;:::i;:::-;41337:54;40836:561;-1:-1:-1;;;;;;;40836:561:70:o;41528:545::-;41630:2;41625:3;41622:11;41619:448;;;41666:1;41691:5;41687:2;41680:17;41736:4;41732:2;41722:19;41806:2;41794:10;41790:19;41787:1;41783:27;41777:4;41773:38;41842:4;41830:10;41827:20;41824:47;;;-1:-1:-1;41865:4:70;41824:47;41920:2;41915:3;41911:12;41908:1;41904:20;41898:4;41894:31;41884:41;;41975:82;41993:2;41986:5;41983:13;41975:82;;;42038:17;;;42019:1;42008:13;41975:82;;42249:1352;42375:3;42369:10;-1:-1:-1;;;;;42394:6:70;42391:30;42388:56;;;42424:18;;:::i;:::-;42453:97;42543:6;42503:38;42535:4;42529:11;42503:38;:::i;:::-;42497:4;42453:97;:::i;:::-;42605:4;;42669:2;42658:14;;42686:1;42681:663;;;;43388:1;43405:6;43402:89;;;-1:-1:-1;43457:19:70;;;43451:26;43402:89;-1:-1:-1;;42206:1:70;42202:11;;;42198:24;42194:29;42184:40;42230:1;42226:11;;;42181:57;43504:81;;42651:944;;42681:663;41475:1;41468:14;;;41512:4;41499:18;;-1:-1:-1;;42717:20:70;;;42835:236;42849:7;42846:1;42843:14;42835:236;;;42938:19;;;42932:26;42917:42;;43030:27;;;;42998:1;42986:14;;;;42865:19;;42835:236;;;42839:3;43099:6;43090:7;43087:19;43084:201;;;43160:19;;;43154:26;-1:-1:-1;;43243:1:70;43239:14;;;43255:3;43235:24;43231:37;43227:42;43212:58;43197:74;;43084:201;-1:-1:-1;;;;;43331:1:70;43315:14;;;43311:22;43298:36;;-1:-1:-1;42249:1352:70:o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "balanceOf(address,uint256)": {
        "details": "See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address."
      },
      "balanceOfBatch(address[],uint256[])": {
        "details": "See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length."
      },
      "isApprovedForAll(address,address)": {
        "details": "See {IERC1155-isApprovedForAll}."
      },
      "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
        "details": "See {IERC1155-safeBatchTransferFrom}."
      },
      "safeTransferFrom(address,address,uint256,uint256,bytes)": {
        "details": "See {IERC1155-safeTransferFrom}."
      },
      "setApprovalForAll(address,bool)": {
        "details": "See {IERC1155-setApprovalForAll}."
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}."
      },
      "uri(uint256)": {
        "details": "See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\{id\\}` substring with the actual token type ID."
      }
    },
    "version": 1
  },
  "offset": [
    196,
    11253
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x176 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6865AECE GT PUSH2 0xCC JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x7A JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x465 JUMPI DUP1 PUSH4 0xAA35E509 EQ PUSH2 0x485 JUMPI DUP1 PUSH4 0xB9C21CDA EQ PUSH2 0x491 JUMPI DUP1 PUSH4 0xC08D71EB EQ PUSH2 0x4B1 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x51E JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x567 JUMPI DUP1 PUSH4 0xF5298ACA EQ PUSH2 0x587 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6865AECE EQ PUSH2 0x36B JUMPI DUP1 PUSH4 0x6B20C454 EQ PUSH2 0x38B JUMPI DUP1 PUSH4 0x6D714B68 EQ PUSH2 0x3AB JUMPI DUP1 PUSH4 0x744FB3A6 EQ PUSH2 0x3CB JUMPI DUP1 PUSH4 0x77CB0D6C EQ PUSH2 0x3EB JUMPI DUP1 PUSH4 0x8297F29F EQ PUSH2 0x40B JUMPI DUP1 PUSH4 0x83FB8DB6 EQ PUSH2 0x445 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2EB2C2D6 GT PUSH2 0x129 JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x28D JUMPI DUP1 PUSH4 0x2F49BCD1 EQ PUSH2 0x2AD JUMPI DUP1 PUSH4 0x490CAF2C EQ PUSH2 0x2CD JUMPI DUP1 PUSH4 0x495057BE EQ PUSH2 0x1FE JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x2ED JUMPI DUP1 PUSH4 0x596C6325 EQ PUSH2 0x31A JUMPI DUP1 PUSH4 0x65E8E4F4 EQ PUSH2 0x34B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0x17B JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x1AE JUMPI DUP1 PUSH4 0x64BB15C EQ PUSH2 0x1DE JUMPI DUP1 PUSH4 0x7A369B6 EQ PUSH2 0x200 JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0x220 JUMPI DUP1 PUSH4 0x124D91E5 EQ PUSH2 0x24D JUMPI DUP1 PUSH4 0x1F0F92F1 EQ PUSH2 0x26D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x187 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19B PUSH2 0x196 CALLDATASIZE PUSH1 0x4 PUSH2 0x4443 JUMP JUMPDEST PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1CE PUSH2 0x1C9 CALLDATASIZE PUSH1 0x4 PUSH2 0x4485 JUMP JUMPDEST PUSH2 0x640 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1A5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FE PUSH2 0x1F9 CALLDATASIZE PUSH1 0x4 PUSH2 0x4443 JUMP JUMPDEST PUSH2 0x692 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x20C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FE PUSH2 0x21B CALLDATASIZE PUSH1 0x4 PUSH2 0x44A9 JUMP JUMPDEST PUSH2 0x9D3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x22C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x240 PUSH2 0x23B CALLDATASIZE PUSH1 0x4 PUSH2 0x44E4 JUMP JUMPDEST PUSH2 0xC1A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A5 SWAP2 SWAP1 PUSH2 0x454A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x259 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FE PUSH2 0x268 CALLDATASIZE PUSH1 0x4 PUSH2 0x455D JUMP JUMPDEST PUSH2 0xCAE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x279 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FE PUSH2 0x288 CALLDATASIZE PUSH1 0x4 PUSH2 0x455D JUMP JUMPDEST PUSH2 0xD1E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x299 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FE PUSH2 0x2A8 CALLDATASIZE PUSH1 0x4 PUSH2 0x470A JUMP JUMPDEST PUSH2 0xDB1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FE PUSH2 0x2C8 CALLDATASIZE PUSH1 0x4 PUSH2 0x47C5 JUMP JUMPDEST PUSH2 0xE48 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19B PUSH2 0x2E8 CALLDATASIZE PUSH1 0x4 PUSH2 0x455D JUMP JUMPDEST PUSH2 0x10A0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x30D PUSH2 0x308 CALLDATASIZE PUSH1 0x4 PUSH2 0x4817 JUMP JUMPDEST PUSH2 0x16C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A5 SWAP2 SWAP1 PUSH2 0x491E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x326 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1CE PUSH2 0x335 CALLDATASIZE PUSH1 0x4 PUSH2 0x4931 JUMP JUMPDEST PUSH2 0x100 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x357 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FE PUSH2 0x366 CALLDATASIZE PUSH1 0x4 PUSH2 0x494E JUMP JUMPDEST PUSH2 0x17EF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x377 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19B PUSH2 0x386 CALLDATASIZE PUSH1 0x4 PUSH2 0x455D JUMP JUMPDEST PUSH2 0x190A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x397 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FE PUSH2 0x3A6 CALLDATASIZE PUSH1 0x4 PUSH2 0x49D6 JUMP JUMPDEST PUSH2 0x207B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FE PUSH2 0x3C6 CALLDATASIZE PUSH1 0x4 PUSH2 0x4A4B JUMP JUMPDEST PUSH2 0x20BE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FE PUSH2 0x3E6 CALLDATASIZE PUSH1 0x4 PUSH2 0x4443 JUMP JUMPDEST PUSH2 0x2144 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FE PUSH2 0x406 CALLDATASIZE PUSH1 0x4 PUSH2 0x44A9 JUMP JUMPDEST PUSH2 0x231D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x417 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1CE PUSH2 0x426 CALLDATASIZE PUSH1 0x4 PUSH2 0x4931 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH2 0x100 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x451 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FE PUSH2 0x460 CALLDATASIZE PUSH1 0x4 PUSH2 0x44A9 JUMP JUMPDEST PUSH2 0x23AA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x471 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FE PUSH2 0x480 CALLDATASIZE PUSH1 0x4 PUSH2 0x4A4B JUMP JUMPDEST PUSH2 0x2B91 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x49D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FE PUSH2 0x4AC CALLDATASIZE PUSH1 0x4 PUSH2 0x4A84 JUMP JUMPDEST PUSH2 0x2BA0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4D1 PUSH2 0x4CC CALLDATASIZE PUSH1 0x4 PUSH2 0x4ACE JUMP JUMPDEST PUSH2 0x2C39 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A5 SWAP2 SWAP1 PUSH1 0x0 PUSH1 0xC0 DUP3 ADD SWAP1 POP DUP3 MLOAD DUP3 MSTORE PUSH1 0x20 DUP4 ADD MLOAD PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP4 ADD MLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP4 ADD MLOAD MLOAD PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP4 ADD MLOAD PUSH1 0xA0 DUP4 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x52A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1CE PUSH2 0x539 CALLDATASIZE PUSH1 0x4 PUSH2 0x4B12 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x66 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x573 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FE PUSH2 0x582 CALLDATASIZE PUSH1 0x4 PUSH2 0x4B40 JUMP JUMPDEST PUSH2 0x38F6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x593 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FE PUSH2 0x5A2 CALLDATASIZE PUSH1 0x4 PUSH2 0x455D JUMP JUMPDEST PUSH2 0x393B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x618 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2062616C616E636520717565727920666F7220746865207A PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x65726F2061646472657373 PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x65 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 SWAP5 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x6CDB3D13 PUSH1 0xE1 SHL EQ DUP1 PUSH2 0x671 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x3A24D07 PUSH1 0xE2 SHL EQ JUMPDEST DUP1 PUSH2 0x68C JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x43E8C3F7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE DUP3 SWAP1 PUSH1 0x0 SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x87D187EE SWAP1 PUSH1 0x24 ADD PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6DF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x703 SWAP2 SWAP1 PUSH2 0x4BA8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x6573C787 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE SWAP2 SWAP4 POP SWAP2 POP PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x6573C787 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x750 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x774 SWAP2 SWAP1 PUSH2 0x4BCC JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x7EB JUMPI PUSH1 0x40 MLOAD PUSH4 0x25B5E897 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x4B6BD12E SWAP1 PUSH2 0x7B1 SWAP1 DUP9 SWAP1 DUP2 SWAP1 PUSH1 0x4B SWAP1 PUSH1 0x1 SWAP1 PUSH1 0x4 SWAP1 DUP2 ADD PUSH2 0x4BE9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x7CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x7DF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x31A9108F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP7 SWAP1 MSTORE CALLER SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 PUSH4 0x6352211E SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x832 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x856 SWAP2 SWAP1 PUSH2 0x4C0C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO DUP1 ISZERO PUSH2 0x878 JUMPI POP PUSH1 0xFB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ ISZERO JUMPDEST ISZERO PUSH2 0x8B3 JUMPI PUSH1 0x40 MLOAD PUSH4 0x25B5E897 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x4B6BD12E SWAP1 PUSH2 0x7B1 SWAP1 DUP9 SWAP1 DUP2 SWAP1 PUSH1 0x4B SWAP1 PUSH1 0x1 SWAP1 DUP2 SWAP1 PUSH1 0x4 ADD PUSH2 0x4BE9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1554EE07 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x4B PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x5553B81C SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x908 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x92C SWAP2 SWAP1 PUSH2 0x4BCC JUMP JUMPDEST POP PUSH1 0xFE SLOAD PUSH1 0x40 MLOAD PUSH4 0x16B980F1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x2D7301E2 SWAP1 PUSH2 0x965 SWAP1 DUP10 SWAP1 DUP10 SWAP1 PUSH1 0x4B SWAP1 PUSH1 0x1 SWAP1 PUSH1 0x4 ADD PUSH2 0x4C29 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x97F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x993 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0xFE SLOAD PUSH1 0x40 MLOAD PUSH4 0x9DFE841 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP3 POP PUSH4 0x9DFE841 SWAP2 POP PUSH2 0x7B1 SWAP1 DUP10 SWAP1 DUP10 SWAP1 PUSH8 0xDE0B6B3A7640000 SWAP1 PUSH1 0x4 ADD PUSH2 0x4C51 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x31A9108F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE DUP5 SWAP1 CALLER SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0x6352211E SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA1C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA40 SWAP2 SWAP1 PUSH2 0x4C0C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0xA65 JUMPI POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH2 0x100 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST PUSH2 0xA81 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x60F SWAP1 PUSH2 0x4C72 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x6BFC324F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x85 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0x6BFC324F SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xACD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xAF1 SWAP2 SWAP1 PUSH2 0x4BCC JUMP JUMPDEST PUSH2 0xB3D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4865726F2063616E277420636173742067686F737420776F6C662E0000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x60F JUMP JUMPDEST PUSH1 0xFE SLOAD PUSH1 0x40 MLOAD PUSH4 0x156A0BF1 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x2D7301E2 SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH1 0x85 SWAP1 DUP6 SWAP1 PUSH4 0x55A82FC4 SWAP1 PUSH2 0xB80 SWAP1 DUP7 SWAP1 DUP7 SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x4C51 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB9D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBC1 SWAP2 SWAP1 PUSH2 0x4BCC JUMP JUMPDEST ISZERO PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBE1 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4C29 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xBFB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC0F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x67 DUP1 SLOAD PUSH2 0xC29 SWAP1 PUSH2 0x4C9E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xC55 SWAP1 PUSH2 0x4C9E JUMP JUMPDEST DUP1 ISZERO PUSH2 0xCA2 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xC77 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xCA2 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xC85 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xFB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 PUSH2 0xCD7 JUMPI POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH2 0x100 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST PUSH2 0xD0E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x8 PUSH1 0x24 DUP3 ADD MSTORE PUSH8 0x6275726E46726F6D PUSH1 0xC0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x60F JUMP JUMPDEST PUSH2 0xD19 DUP4 DUP4 DUP4 PUSH2 0x3973 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0xFB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 PUSH2 0xD47 JUMPI POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH2 0x100 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST PUSH2 0xD8D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH23 0x2CB7BA9031B0B713BA1030B232103A3432903637B7BA17 PUSH1 0x49 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x60F JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0xFF PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP3 DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER EQ DUP1 PUSH2 0xDCD JUMPI POP PUSH2 0xDCD DUP6 CALLER PUSH2 0x539 JUMP JUMPDEST PUSH2 0xE34 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x32 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E736665722063616C6C6572206973206E6F7420 PUSH1 0x44 DUP3 ADD MSTORE PUSH18 0x1BDDDB995C881B9BDC88185C1C1C9BDD9959 PUSH1 0x72 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x60F JUMP JUMPDEST PUSH2 0xE41 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x3A68 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x31A9108F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE DUP6 SWAP1 CALLER SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0x6352211E SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE91 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xEB5 SWAP2 SWAP1 PUSH2 0x4C0C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0xEDA JUMPI POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH2 0x100 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST PUSH2 0xEF6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x60F SWAP1 PUSH2 0x4C72 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x6BFC324F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0x6BFC324F SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xF42 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF66 SWAP2 SWAP1 PUSH2 0x4BCC JUMP JUMPDEST PUSH2 0xFB2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4865726F2063616E2774206361737420636861726D2062656173742E00000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x60F JUMP JUMPDEST PUSH1 0xFE SLOAD PUSH1 0x40 MLOAD PUSH4 0x156A0BF1 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x55A82FC4 SWAP1 PUSH2 0xFE8 SWAP1 DUP10 SWAP1 DUP10 SWAP1 PUSH2 0x2710 SWAP1 PUSH1 0x4 ADD PUSH2 0x4C51 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1005 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1029 SWAP2 SWAP1 PUSH2 0x4BCC JUMP JUMPDEST PUSH2 0x1069 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x21B0B713BA1031B430B936903A3430BA17 PUSH1 0x79 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x60F JUMP JUMPDEST PUSH1 0xFE SLOAD PUSH1 0x40 MLOAD PUSH4 0x16B980F1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x2D7301E2 SWAP1 PUSH2 0x7B1 SWAP1 DUP10 SWAP1 DUP9 SWAP1 PUSH1 0x2E SWAP1 DUP10 SWAP1 PUSH1 0x4 ADD PUSH2 0x4C29 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x7B303965 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x0 SWAP1 DUP5 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0x7B303965 SWAP1 PUSH1 0x24 ADD PUSH1 0xC0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x10EE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1112 SWAP2 SWAP1 PUSH2 0x4CD8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x6BFC324F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x88 PUSH1 0x24 DUP3 ADD MSTORE SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0x6BFC324F SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1161 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1185 SWAP2 SWAP1 PUSH2 0x4BCC JUMP JUMPDEST PUSH2 0x11C8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x2432B9379031B0B713BA1031B0B9BA103932B997 PUSH1 0x61 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x60F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x31A9108F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP7 SWAP1 MSTORE CALLER SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x6352211E SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x120F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1233 SWAP2 SWAP1 PUSH2 0x4C0C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x1258 JUMPI POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH2 0x100 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST PUSH2 0x1274 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x60F SWAP1 PUSH2 0x4C72 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x43E8C3F7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x0 SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x87D187EE SWAP1 PUSH1 0x24 ADD PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x12BF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x12E3 SWAP2 SWAP1 PUSH2 0x4BA8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x6573C787 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE SWAP2 SWAP4 POP SWAP2 POP PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 PUSH4 0x6573C787 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1330 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1354 SWAP2 SWAP1 PUSH2 0x4BCC JUMP JUMPDEST SWAP1 POP DUP1 DUP1 PUSH2 0x136C JUMPI POP PUSH1 0x80 DUP5 ADD MLOAD MLOAD PUSH1 0x1 PUSH1 0x89 SHL AND ISZERO ISZERO JUMPDEST PUSH2 0x1388 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x60F SWAP1 PUSH2 0x4D73 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 PUSH2 0x139E DUP3 PUSH8 0x16345785D8A0000 PUSH2 0x4DB0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x6BFC324F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP13 SWAP1 MSTORE PUSH1 0x86 PUSH1 0x24 DUP3 ADD MSTORE SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP1 PUSH4 0x6BFC324F SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x13ED JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1411 SWAP2 SWAP1 PUSH2 0x4BCC JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0x43E8C3F7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP11 SWAP1 MSTORE PUSH1 0x0 SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND SWAP1 PUSH4 0x87D187EE SWAP1 PUSH1 0x24 ADD PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x145D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1481 SWAP2 SWAP1 PUSH2 0x4BA8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x6573C787 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE SWAP2 SWAP4 POP SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND SWAP1 PUSH4 0x6573C787 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x14CB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x14EF SWAP2 SWAP1 PUSH2 0x4BCC JUMP JUMPDEST PUSH2 0x1567 JUMPI DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x8FC56767 DUP14 DUP14 PUSH8 0x6F05B59D3B20000 PUSH1 0x4 DUP14 PUSH1 0x60 ADD MLOAD PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1534 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4BE9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x154E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1562 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST PUSH1 0xFE PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x55A82FC4 DUP15 DUP15 PUSH2 0x2712 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15AE SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4C51 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x15CB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x15EF SWAP2 SWAP1 PUSH2 0x4BCC JUMP JUMPDEST ISZERO ISZERO PUSH1 0xFE PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x55A82FC4 DUP16 DUP15 PUSH2 0x2712 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1638 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4C51 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1655 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1679 SWAP2 SWAP1 PUSH2 0x4BCC JUMP JUMPDEST ISZERO ISZERO EQ PUSH2 0x16B4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH9 0x2737BA103830B63997 PUSH1 0xB9 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x60F JUMP JUMPDEST POP POP POP POP POP POP POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x172B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A206163636F756E747320616E6420696473206C656E677468 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x40DAD2E6DAC2E8C6D PUSH1 0xBB SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x60F JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1746 JUMPI PUSH2 0x1746 PUSH2 0x4592 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x176F JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x17E7 JUMPI PUSH2 0x17BA DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1793 JUMPI PUSH2 0x1793 PUSH2 0x4DCF JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x17AD JUMPI PUSH2 0x17AD PUSH2 0x4DCF JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x5A7 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x17CC JUMPI PUSH2 0x17CC PUSH2 0x4DCF JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH2 0x17E0 DUP2 PUSH2 0x4DE5 JUMP JUMPDEST SWAP1 POP PUSH2 0x1775 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x180A JUMPI PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x180E JUMP JUMPDEST ADDRESS EXTCODESIZE ISZERO JUMPDEST PUSH2 0x1871 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x60F JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x1893 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFFFF NOT AND PUSH2 0x101 OR SWAP1 SSTORE JUMPDEST PUSH2 0x189C DUP3 PUSH2 0x3C07 JUMP JUMPDEST PUSH2 0x18A4 PUSH2 0x3C3A JUMP JUMPDEST PUSH2 0x18AC PUSH2 0x3C61 JUMP JUMPDEST PUSH1 0xFB DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP9 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP3 DUP4 AND OR SWAP1 SWAP3 SSTORE PUSH1 0xFD DUP1 SLOAD DUP8 DUP5 AND SWAP1 DUP4 AND OR SWAP1 SSTORE PUSH1 0xFC DUP1 SLOAD SWAP3 DUP7 AND SWAP3 DUP3 AND DUP4 OR SWAP1 SSTORE PUSH1 0xFE DUP1 SLOAD SWAP1 SWAP2 AND SWAP1 SWAP2 OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0xE41 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x43E8C3F7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x0 SWAP1 DUP5 SWAP1 DUP3 SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x87D187EE SWAP1 PUSH1 0x24 ADD PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1959 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x197D SWAP2 SWAP1 PUSH2 0x4BA8 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x0 DUP1 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x87D187EE DUP9 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19B2 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x19D0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x19F4 SWAP2 SWAP1 PUSH2 0x4BA8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x6573C787 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP8 SWAP1 MSTORE SWAP2 SWAP4 POP SWAP2 POP PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP1 PUSH4 0x6573C787 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1A41 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1A65 SWAP2 SWAP1 PUSH2 0x4BCC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x6573C787 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP1 PUSH4 0x6573C787 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1AB0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1AD4 SWAP2 SWAP1 PUSH2 0x4BCC JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x1B1D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x2A30B933B2BA1034B99030B634BB329039BA34B63617 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x60F JUMP JUMPDEST DUP2 PUSH2 0x1B3A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x60F SWAP1 PUSH2 0x4D73 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x31A9108F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP12 SWAP1 MSTORE CALLER SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND SWAP1 PUSH4 0x6352211E SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1B81 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1BA5 SWAP2 SWAP1 PUSH2 0x4C0C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x1BC4 JUMPI POP PUSH1 0xFB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST PUSH2 0x1BE0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x60F SWAP1 PUSH2 0x4C72 JUMP JUMPDEST PUSH1 0xFE SLOAD PUSH1 0x40 MLOAD PUSH4 0x562530DF PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xAC4A61BE SWAP1 PUSH2 0x1C17 SWAP1 DUP15 SWAP1 DUP15 SWAP1 DUP15 SWAP1 PUSH1 0x1 SWAP1 PUSH1 0x4 ADD PUSH2 0x4DFE JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1C36 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1C5A SWAP2 SWAP1 PUSH2 0x4BCC JUMP JUMPDEST PUSH2 0x1C94 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x3637B7BA1034B99027A7A9 PUSH1 0xA9 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x60F JUMP JUMPDEST PUSH1 0xFE SLOAD PUSH1 0x40 MLOAD PUSH4 0x214AC01B PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x42958036 SWAP1 PUSH2 0x1CC8 SWAP1 DUP15 SWAP1 DUP15 SWAP1 DUP15 SWAP1 PUSH1 0x4 ADD PUSH2 0x4C51 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1CE5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1D09 SWAP2 SWAP1 PUSH2 0x4BCC JUMP JUMPDEST PUSH2 0x1D46 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x6C6F6F74206C61636B73204C4F53 PUSH1 0x90 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x60F JUMP JUMPDEST PUSH1 0xFE SLOAD PUSH1 0x40 MLOAD PUSH4 0x156A0BF1 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x55A82FC4 SWAP1 PUSH2 0x1D7C SWAP1 DUP15 SWAP1 DUP14 SWAP1 PUSH2 0x2710 SWAP1 PUSH1 0x4 ADD PUSH2 0x4C51 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1D99 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1DBD SWAP2 SWAP1 PUSH2 0x4BCC JUMP JUMPDEST PUSH2 0x1DFC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x21B0B713BA103637B7BA103A3430BA17 PUSH1 0x81 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x60F JUMP JUMPDEST PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0xFF PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP14 DUP6 MSTORE SWAP1 SWAP2 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD AND ISZERO PUSH2 0x1E57 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x20B63932B0B23C903637B7BA32B217 PUSH1 0x89 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x60F JUMP JUMPDEST PUSH2 0x1E81 CALLER DUP11 PUSH1 0x9 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH5 0x6C6F6F7439 PUSH1 0xD8 SHL DUP2 MSTORE POP PUSH2 0x3C90 JUMP JUMPDEST PUSH2 0x1FE8 DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x51F41EE3 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1EC2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1EE6 SWAP2 SWAP1 PUSH2 0x4C0C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x6352211E DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x33D119EB DUP15 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F22 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1F3F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1F63 SWAP2 SWAP1 PUSH2 0x4E24 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F81 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1F9E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1FC2 SWAP2 SWAP1 PUSH2 0x4C0C JUMP JUMPDEST DUP11 PUSH1 0x1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH5 0x6C6F6F7431 PUSH1 0xD8 SHL DUP2 MSTORE POP PUSH2 0x3C90 JUMP JUMPDEST PUSH2 0x1FF5 DUP8 DUP12 DUP12 PUSH1 0x1 PUSH2 0x2C0E JUMP JUMPDEST PUSH1 0xFE SLOAD PUSH1 0x40 MLOAD PUSH4 0x30E327EF PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xC38C9FBC SWAP1 PUSH2 0x2029 SWAP1 DUP15 SWAP1 DUP15 SWAP1 DUP15 SWAP1 PUSH1 0x4 ADD PUSH2 0x4C51 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2048 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x206C SWAP2 SWAP1 PUSH2 0x4E24 JUMP JUMPDEST SWAP12 SWAP11 POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND CALLER EQ DUP1 PUSH2 0x2097 JUMPI POP PUSH2 0x2097 DUP4 CALLER PUSH2 0x539 JUMP JUMPDEST PUSH2 0x20B3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x60F SWAP1 PUSH2 0x4E3D JUMP JUMPDEST PUSH2 0xD19 DUP4 DUP4 DUP4 PUSH2 0x3D8B JUMP JUMPDEST PUSH1 0xFB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x2118 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C792061646D696E73206D617920736574206164646F6E2E000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x60F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH2 0x100 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x31A9108F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE DUP3 SWAP1 CALLER SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0x6352211E SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x218D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x21B1 SWAP2 SWAP1 PUSH2 0x4C0C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x21D6 JUMPI POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH2 0x100 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST PUSH2 0x21F2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x60F SWAP1 PUSH2 0x4C72 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x6BFC324F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x4B PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0x6BFC324F SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x223E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2262 SWAP2 SWAP1 PUSH2 0x4BCC JUMP JUMPDEST PUSH2 0x22AE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4865726F2063616E277420636173742069726F6E20736B696E2E000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x60F JUMP JUMPDEST PUSH1 0xFE SLOAD PUSH1 0x40 MLOAD PUSH4 0x422F683 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x108BDA0C SWAP1 PUSH2 0x22E6 SWAP1 DUP7 SWAP1 DUP7 SWAP1 PUSH1 0x4B SWAP1 PUSH1 0x1 SWAP1 PUSH1 0x4 ADD PUSH2 0x4DFE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2300 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2314 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0xFB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 PUSH2 0x2346 JUMPI POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH2 0x100 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST PUSH2 0x237B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x6 PUSH1 0x24 DUP3 ADD MSTORE PUSH6 0x6C6F6F74546F PUSH1 0xD0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x60F JUMP JUMPDEST PUSH2 0x23A4 DUP5 DUP5 PUSH1 0x1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH4 0x1B1BDBDD PUSH1 0xE2 SHL DUP2 MSTORE POP PUSH2 0x3C90 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x6BFC324F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE DUP5 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0x6BFC324F SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x23F8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x241C SWAP2 SWAP1 PUSH2 0x4BCC JUMP JUMPDEST PUSH2 0x2468 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4865726F2063616E2774206361737420647275696420666972652E0000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x60F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x31A9108F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE CALLER SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0x6352211E SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x24AF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x24D3 SWAP2 SWAP1 PUSH2 0x4C0C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x24F8 JUMPI POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH2 0x100 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST PUSH2 0x2514 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x60F SWAP1 PUSH2 0x4C72 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x43E8C3F7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x0 SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x87D187EE SWAP1 PUSH1 0x24 ADD PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x255F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2583 SWAP2 SWAP1 PUSH2 0x4BA8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x6573C787 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE SWAP2 SWAP4 POP SWAP2 POP PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x6573C787 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x25D0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x25F4 SWAP2 SWAP1 PUSH2 0x4BCC JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x2613 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x60F SWAP1 PUSH2 0x4D73 JUMP JUMPDEST PUSH1 0xFE SLOAD PUSH1 0x40 MLOAD PUSH4 0x2C487CAB PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP11 SWAP1 MSTORE PUSH1 0x0 SWAP3 AND SWAP1 PUSH4 0xB121F2AC SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2667 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x268B SWAP2 SWAP1 PUSH2 0x4E24 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x26A1 DUP3 PUSH8 0x16345785D8A0000 PUSH2 0x4DB0 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0x26F3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F75206C61636B2074686520706F77657220746F20646F20746861742E0000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x60F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x17C57EDF PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP11 SWAP1 MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP1 PUSH4 0xBE2BF6F8 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2741 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2765 SWAP2 SWAP1 PUSH2 0x4E24 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0x43E8C3F7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP10 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP1 PUSH4 0x87D187EE SWAP1 PUSH1 0x24 ADD PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x27AF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x27D3 SWAP2 SWAP1 PUSH2 0x4BA8 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0x6573C787 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP1 PUSH4 0x6573C787 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x281C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2840 SWAP2 SWAP1 PUSH2 0x4BCC JUMP JUMPDEST PUSH2 0x287E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x2A30B933B2BA1034B9903232B0B217 PUSH1 0x89 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x60F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x7B303965 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP12 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND SWAP1 PUSH4 0x7B303965 SWAP1 PUSH1 0x24 ADD PUSH1 0xC0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x28C8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x28EC SWAP2 SWAP1 PUSH2 0x4CD8 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP5 DUP3 PUSH1 0x0 ADD MLOAD PUSH2 0x2900 SWAP2 SWAP1 PUSH2 0x4DB0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xF7BDFED3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP14 SWAP1 MSTORE SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND SWAP1 PUSH4 0xF7BDFED3 SWAP1 PUSH1 0x24 ADD PUSH1 0xC0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x294D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2971 SWAP2 SWAP1 PUSH2 0x4E86 JUMP JUMPDEST PUSH1 0xFE SLOAD PUSH1 0x40 DUP3 DUP2 ADD MLOAD SWAP1 MLOAD PUSH4 0x43717931 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP2 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x43717931 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x29C8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x29EC SWAP2 SWAP1 PUSH2 0x4E24 JUMP JUMPDEST SWAP2 POP PUSH1 0xFE PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x7DF55498 DUP16 DUP15 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2A45 SWAP3 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2A64 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2A88 SWAP2 SWAP1 PUSH2 0x4E24 JUMP JUMPDEST SWAP4 POP PUSH8 0x6F05B59D3B20000 DUP5 GT ISZERO PUSH2 0x2AA8 JUMPI PUSH2 0x2AA5 PUSH1 0x2 DUP4 PUSH2 0x4EE4 JUMP JUMPDEST SWAP2 POP JUMPDEST PUSH1 0xFE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x9DFE841 DUP16 DUP15 PUSH2 0x2AC6 PUSH1 0x2 DUP10 PUSH2 0x4EE4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2AE4 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4C51 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2AFE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2B12 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x995B08FC DUP15 DUP15 DUP6 PUSH1 0x1 DUP9 PUSH1 0x60 ADD MLOAD PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B4F SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4BE9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2B69 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2B7D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x2B9C CALLER DUP4 DUP4 PUSH2 0x3F18 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0xFB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 PUSH2 0x2BC9 JUMPI POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH2 0x100 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST PUSH2 0x2C0E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x2CB7BA9031B0B73A1039B2BA103A3432903637B7BA17 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x60F JUMP JUMPDEST PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0xFF PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 SWAP4 DUP6 MSTORE SWAP3 SWAP1 MSTORE SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x2C41 PUSH2 0x43E4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x31A9108F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP7 SWAP1 MSTORE DUP7 SWAP1 CALLER SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0x6352211E SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2C8A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2CAE SWAP2 SWAP1 PUSH2 0x4C0C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x2CD3 JUMPI POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH2 0x100 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST PUSH2 0x2CEF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x60F SWAP1 PUSH2 0x4C72 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x7B303965 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0x7B303965 SWAP1 PUSH1 0x24 ADD PUSH1 0xC0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2D39 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2D5D SWAP2 SWAP1 PUSH2 0x4CD8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1554EE07 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP10 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP7 SWAP1 MSTORE SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0x5553B81C SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2DB5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2DD9 SWAP2 SWAP1 PUSH2 0x4BCC JUMP JUMPDEST PUSH2 0x2E55 JUMPI PUSH1 0x40 MLOAD PUSH4 0x25B5E897 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0x4B6BD12E SWAP1 PUSH2 0x2E12 SWAP1 DUP11 SWAP1 DUP11 SWAP1 DUP11 SWAP1 DUP11 SWAP1 PUSH1 0x7 SWAP1 PUSH1 0x4 ADD PUSH2 0x4BE9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2E2C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2E40 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x7 PUSH1 0xA0 DUP5 ADD MSTORE POP SWAP1 SWAP3 POP PUSH2 0x38ED SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x43E8C3F7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP9 SWAP1 MSTORE PUSH1 0x0 SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x87D187EE SWAP1 PUSH1 0x24 ADD PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2EA0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2EC4 SWAP2 SWAP1 PUSH2 0x4BA8 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x0 DUP1 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x87D187EE DUP12 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2EF9 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2F17 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2F3B SWAP2 SWAP1 PUSH2 0x4BA8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x6573C787 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP8 SWAP1 MSTORE SWAP2 SWAP4 POP SWAP2 POP PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP1 PUSH4 0x6573C787 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2F88 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2FAC SWAP2 SWAP1 PUSH2 0x4BCC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x6573C787 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND SWAP1 PUSH4 0x6573C787 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2FF7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x301B SWAP2 SWAP1 PUSH2 0x4BCC JUMP JUMPDEST SWAP1 POP DUP2 PUSH2 0x30A0 JUMPI DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x4B6BD12E DUP15 DUP15 DUP15 DUP15 PUSH1 0x4 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3057 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4BE9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3071 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3085 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x4 PUSH1 0xA0 DUP11 ADD MSTORE POP SWAP7 SWAP9 POP PUSH2 0x38ED SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST DUP1 PUSH2 0x3123 JUMPI DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x4B6BD12E DUP15 DUP15 DUP15 DUP15 PUSH1 0x5 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x30DA SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4BE9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x30F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3108 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x5 PUSH1 0xA0 DUP11 ADD MSTORE POP SWAP7 SWAP9 POP PUSH2 0x38ED SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0xFE PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xAC4A61BE DUP16 DUP16 DUP16 PUSH1 0x1 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x316B SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4DFE JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x318A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x31AE SWAP2 SWAP1 PUSH2 0x4BCC JUMP JUMPDEST PUSH2 0x3230 JUMPI DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x4B6BD12E DUP15 DUP15 DUP15 DUP15 PUSH1 0x2 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x31E7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4BE9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3201 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3215 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x2 PUSH1 0xA0 DUP11 ADD MSTORE POP SWAP7 SWAP9 POP PUSH2 0x38ED SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0xFE PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x42958036 DUP16 DUP16 DUP16 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3275 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4C51 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3292 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x32B6 SWAP2 SWAP1 PUSH2 0x4BCC JUMP JUMPDEST PUSH2 0x3338 JUMPI DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x4B6BD12E DUP15 DUP15 DUP15 DUP15 PUSH1 0x3 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x32EF SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4BE9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3309 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x331D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x3 PUSH1 0xA0 DUP11 ADD MSTORE POP SWAP7 SWAP9 POP PUSH2 0x38ED SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x96 DUP12 SUB PUSH2 0x349D JUMPI PUSH1 0x40 MLOAD PUSH4 0x6BFC324F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP15 SWAP1 MSTORE PUSH1 0x96 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND SWAP1 PUSH4 0x6BFC324F SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x338C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x33B0 SWAP2 SWAP1 PUSH2 0x4BCC JUMP JUMPDEST ISZERO PUSH2 0x3436 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH4 0xBC186C6E DUP15 DUP15 PUSH2 0x33D8 DUP15 PUSH8 0xDE0B6B3A7640000 PUSH2 0x4DB0 JUMP JUMPDEST PUSH1 0x4 DUP13 PUSH1 0x60 ADD MLOAD PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x33FF SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4BE9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3419 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x342D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x349D JUMP JUMPDEST DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x480A962B CALLER DUP16 DUP16 DUP16 DUP16 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x346A SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4F06 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3484 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3498 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST PUSH1 0x1 DUP12 SUB PUSH2 0x3527 JUMPI DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x995B08FC DUP15 DUP15 PUSH2 0x34BF DUP12 PUSH2 0x3FF8 JUMP JUMPDEST PUSH2 0x34C9 SWAP1 DUP16 PUSH2 0x4DB0 JUMP JUMPDEST PUSH1 0x4 DUP13 PUSH1 0x60 ADD MLOAD PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x34F0 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4BE9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x350A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x351E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x38DB JUMP JUMPDEST PUSH1 0x1F DUP12 SUB PUSH2 0x36CE JUMPI PUSH1 0x40 MLOAD PUSH4 0x6BFC324F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP15 SWAP1 MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND SWAP1 PUSH4 0x6BFC324F SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x357B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x359F SWAP2 SWAP1 PUSH2 0x4BCC JUMP JUMPDEST ISZERO PUSH2 0x369A JUMPI DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x995B08FC DUP15 DUP15 PUSH2 0x35BE DUP12 PUSH2 0x3FF8 JUMP JUMPDEST PUSH2 0x35C8 SWAP1 DUP16 PUSH2 0x4DB0 JUMP JUMPDEST PUSH1 0x1 DUP13 PUSH1 0x60 ADD MLOAD PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x35EF SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4BE9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3609 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x361D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH4 0x17C57EDF PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP16 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND SWAP3 POP PUSH4 0xBE2BF6F8 SWAP2 POP PUSH1 0x44 ADD JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3670 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3694 SWAP2 SWAP1 PUSH2 0x4E24 JUMP JUMPDEST POP PUSH2 0x38DB JUMP JUMPDEST DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x480A962B CALLER DUP16 DUP16 DUP16 DUP16 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x34F0 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4F06 JUMP JUMPDEST PUSH1 0x3D DUP12 SUB PUSH2 0x3874 JUMPI PUSH1 0x40 MLOAD PUSH4 0x6BFC324F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP15 SWAP1 MSTORE PUSH1 0x3D PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND SWAP1 PUSH4 0x6BFC324F SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3722 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3746 SWAP2 SWAP1 PUSH2 0x4BCC JUMP JUMPDEST PUSH2 0x377F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x28BAB4B2BA103CB7BA97 PUSH1 0xB1 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x60F JUMP JUMPDEST PUSH1 0xFE PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x55A82FC4 DUP16 DUP15 PUSH2 0x2710 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x37C6 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4C51 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x37E3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3807 SWAP2 SWAP1 PUSH2 0x4BCC JUMP JUMPDEST ISZERO PUSH2 0x3840 JUMPI PUSH1 0x40 MLOAD PUSH4 0x17C57EDF PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP14 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND SWAP1 PUSH4 0xBE2BF6F8 SWAP1 PUSH1 0x44 ADD PUSH2 0x3651 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x33667DB7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP14 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND SWAP1 PUSH4 0x66CCFB6E SWAP1 PUSH1 0x44 ADD PUSH2 0x34F0 JUMP JUMPDEST DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x480A962B CALLER DUP16 DUP16 DUP16 DUP16 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x38A8 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4F06 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x38C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x38D6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST POP POP PUSH1 0x6 PUSH1 0xA0 DUP7 ADD MSTORE POP SWAP3 SWAP5 POP POP POP POP POP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER EQ DUP1 PUSH2 0x3912 JUMPI POP PUSH2 0x3912 DUP6 CALLER PUSH2 0x539 JUMP JUMPDEST PUSH2 0x392E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x60F SWAP1 PUSH2 0x4E3D JUMP JUMPDEST PUSH2 0xE41 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x4008 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND CALLER EQ DUP1 PUSH2 0x3957 JUMPI POP PUSH2 0x3957 DUP4 CALLER PUSH2 0x539 JUMP JUMPDEST PUSH2 0xD0E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x60F SWAP1 PUSH2 0x4E3D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3999 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x60F SWAP1 PUSH2 0x4F34 JUMP JUMPDEST CALLER PUSH1 0x0 PUSH2 0x39A5 DUP5 PUSH2 0x4119 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x39B2 DUP5 PUSH2 0x4119 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 ADD DUP4 MSTORE PUSH1 0x0 SWAP2 DUP3 SWAP1 MSTORE DUP9 DUP3 MSTORE PUSH1 0x65 DUP2 MSTORE DUP3 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND DUP4 MSTORE SWAP1 MSTORE KECCAK256 SLOAD SWAP1 SWAP2 POP DUP5 DUP2 LT ISZERO PUSH2 0x3A00 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x60F SWAP1 PUSH2 0x4F77 JUMP JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x65 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 DUP2 AND DUP1 DUP7 MSTORE SWAP2 DUP5 MSTORE DUP3 DUP6 KECCAK256 DUP11 DUP8 SUB SWAP1 SSTORE DUP3 MLOAD DUP12 DUP2 MSTORE SWAP4 DUP5 ADD DUP11 SWAP1 MSTORE SWAP1 SWAP3 SWAP1 DUP9 AND SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x53CD DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 SWAP1 MSTORE PUSH2 0x2314 JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x3A89 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x60F SWAP1 PUSH2 0x4FBB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x3AAF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x60F SWAP1 PUSH2 0x5003 JUMP JUMPDEST CALLER PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x3B99 JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x3AD0 JUMPI PUSH2 0x3AD0 PUSH2 0x4DCF JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x3AEE JUMPI PUSH2 0x3AEE PUSH2 0x4DCF JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x65 DUP4 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 AND DUP4 MSTORE SWAP1 SWAP4 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP2 DUP2 LT ISZERO PUSH2 0x3B3F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x60F SWAP1 PUSH2 0x5048 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x65 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP1 DUP12 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x3B7E SWAP1 DUP5 SWAP1 PUSH2 0x5092 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP DUP1 PUSH2 0x3B92 SWAP1 PUSH2 0x4DE5 JUMP JUMPDEST SWAP1 POP PUSH2 0x3AB3 JUMP JUMPDEST POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0x3BE9 SWAP3 SWAP2 SWAP1 PUSH2 0x50AA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x3BFF DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x4164 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x3C2E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x60F SWAP1 PUSH2 0x50CF JUMP JUMPDEST PUSH2 0x3C37 DUP2 PUSH2 0x42BF JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x16C4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x60F SWAP1 PUSH2 0x50CF JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x3C88 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x60F SWAP1 PUSH2 0x50CF JUMP JUMPDEST PUSH2 0x16C4 PUSH2 0x42EF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x3CF0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A206D696E7420746F20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x60F JUMP JUMPDEST CALLER PUSH1 0x0 PUSH2 0x3CFC DUP6 PUSH2 0x4119 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x3D09 DUP6 PUSH2 0x4119 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x65 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP8 SWAP3 SWAP1 PUSH2 0x3D3D SWAP1 DUP5 SWAP1 PUSH2 0x5092 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP8 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP11 AND SWAP3 PUSH1 0x0 SWAP3 SWAP2 DUP8 AND SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x53CD DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x2314 DUP4 PUSH1 0x0 DUP10 DUP10 DUP10 DUP10 PUSH2 0x431D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3DB1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x60F SWAP1 PUSH2 0x4F34 JUMP JUMPDEST DUP1 MLOAD DUP3 MLOAD EQ PUSH2 0x3DD2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x60F SWAP1 PUSH2 0x4FBB JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 SWAP1 DUP2 SWAP1 MSTORE CALLER SWAP1 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x3EAB JUMPI PUSH1 0x0 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x3E03 JUMPI PUSH2 0x3E03 PUSH2 0x4DCF JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x3E21 JUMPI PUSH2 0x3E21 PUSH2 0x4DCF JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x65 DUP4 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND DUP4 MSTORE SWAP1 SWAP4 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP2 DUP2 LT ISZERO PUSH2 0x3E72 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x60F SWAP1 PUSH2 0x4F77 JUMP JUMPDEST PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x65 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND DUP7 MSTORE SWAP1 SWAP2 MSTORE SWAP1 SWAP3 KECCAK256 SWAP2 SUB SWAP1 SSTORE DUP1 PUSH2 0x3EA3 DUP2 PUSH2 0x4DE5 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x3DE6 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0x3EFC SWAP3 SWAP2 SWAP1 PUSH2 0x50AA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 SWAP1 MSTORE PUSH2 0x23A4 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x3F8B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2073657474696E6720617070726F76616C20737461747573 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x103337B91039B2B633 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x60F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x66 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x0 SWAP1 PUSH2 0x68C SWAP1 PUSH1 0x1 PUSH2 0x5092 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x402E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x60F SWAP1 PUSH2 0x5003 JUMP JUMPDEST CALLER PUSH1 0x0 PUSH2 0x403A DUP6 PUSH2 0x4119 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x4047 DUP6 PUSH2 0x4119 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x65 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP6 DUP2 LT ISZERO PUSH2 0x408C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x60F SWAP1 PUSH2 0x5048 JUMP JUMPDEST PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x65 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP10 DUP6 SUB SWAP1 SSTORE SWAP1 DUP11 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP9 SWAP3 SWAP1 PUSH2 0x40CB SWAP1 DUP5 SWAP1 PUSH2 0x5092 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP9 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP9 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP12 AND SWAP3 DUP13 DUP3 AND SWAP3 SWAP2 DUP9 AND SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x53CD DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xC0F DUP5 DUP11 DUP11 DUP11 DUP11 DUP11 PUSH2 0x431D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x60 SWAP2 PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x20 DUP1 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x4153 JUMPI PUSH2 0x4153 PUSH2 0x4DCF JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x3BFF JUMPI PUSH1 0x40 MLOAD PUSH4 0xBC197C81 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xBC197C81 SWAP1 PUSH2 0x41A8 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x511A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x41E3 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x41E0 SWAP2 DUP2 ADD SWAP1 PUSH2 0x5178 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x428F JUMPI PUSH2 0x41EF PUSH2 0x5195 JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 SUB PUSH2 0x4228 JUMPI POP PUSH2 0x4203 PUSH2 0x51B1 JUMP JUMPDEST DUP1 PUSH2 0x420E JUMPI POP PUSH2 0x422A JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x60F SWAP2 SWAP1 PUSH2 0x454A JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x34 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F206E6F6E2045524331313535 PUSH1 0x44 DUP3 ADD MSTORE PUSH20 0x2932B1B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x61 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x60F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xBC197C81 PUSH1 0xE0 SHL EQ PUSH2 0x2314 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x60F SWAP1 PUSH2 0x523A JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x42E6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x60F SWAP1 PUSH2 0x50CF JUMP JUMPDEST PUSH2 0x3C37 DUP2 PUSH2 0x43D8 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x4316 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x60F SWAP1 PUSH2 0x50CF JUMP JUMPDEST PUSH1 0x1 PUSH1 0xC9 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x3BFF JUMPI PUSH1 0x40 MLOAD PUSH4 0xF23A6E61 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xF23A6E61 SWAP1 PUSH2 0x4361 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x5282 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x439C JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x4399 SWAP2 DUP2 ADD SWAP1 PUSH2 0x5178 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x43A8 JUMPI PUSH2 0x41EF PUSH2 0x5195 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xF23A6E61 PUSH1 0xE0 SHL EQ PUSH2 0x2314 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x60F SWAP1 PUSH2 0x523A JUMP JUMPDEST PUSH1 0x67 PUSH2 0x2B9C DUP3 DUP3 PUSH2 0x530D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x4421 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x3C37 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4456 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x4461 DUP2 PUSH2 0x442E JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x3C37 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4497 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x44A2 DUP2 PUSH2 0x446F JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x44BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH2 0x44CA DUP2 PUSH2 0x442E JUMP JUMPDEST SWAP7 PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP7 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP6 PUSH1 0x60 ADD CALLDATALOAD SWAP5 POP SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x44F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x4523 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x4507 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x4535 JUMPI PUSH1 0x0 PUSH1 0x20 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x44A2 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x44FD JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x4572 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x457D DUP2 PUSH2 0x442E JUMP JUMPDEST SWAP6 PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 SWAP1 SWAP5 ADD CALLDATALOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0xC0 DUP2 ADD DUP2 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR ISZERO PUSH2 0x45C7 JUMPI PUSH2 0x45C7 PUSH2 0x4592 JUMP JUMPDEST PUSH1 0x40 MSTORE POP JUMP JUMPDEST PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x45F2 JUMPI PUSH2 0x45F2 PUSH2 0x4592 JUMP JUMPDEST PUSH1 0x40 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT ISZERO PUSH2 0x4612 JUMPI PUSH2 0x4612 PUSH2 0x4592 JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x462D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x463A DUP3 PUSH2 0x45F9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4647 DUP3 DUP3 PUSH2 0x45CD JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x5 SWAP4 SWAP1 SWAP4 SHL DUP6 ADD DUP3 ADD SWAP3 DUP3 DUP2 ADD SWAP2 POP DUP7 DUP5 GT ISZERO PUSH2 0x4667 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x4682 JUMPI DUP1 CALLDATALOAD DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x466B JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT ISZERO PUSH2 0x46A6 JUMPI PUSH2 0x46A6 PUSH2 0x4592 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x46BD PUSH1 0x1F DUP6 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 PUSH2 0x45CD JUMP JUMPDEST DUP1 SWAP2 POP DUP4 DUP2 MSTORE DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x46D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP4 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x46FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x44A2 DUP4 DUP4 CALLDATALOAD PUSH1 0x20 DUP6 ADD PUSH2 0x468D JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x4722 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH2 0x472D DUP2 PUSH2 0x442E JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH2 0x473D DUP2 PUSH2 0x442E JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x4759 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4765 DUP10 DUP4 DUP11 ADD PUSH2 0x461C JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x477B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4787 DUP10 DUP4 DUP11 ADD PUSH2 0x461C JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x479D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x47AA DUP9 DUP3 DUP10 ADD PUSH2 0x46EA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x3C37 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x47DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH2 0x47E8 DUP2 PUSH2 0x442E JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH2 0x4806 DUP2 PUSH2 0x47B7 JUMP JUMPDEST SWAP5 SWAP8 SWAP4 SWAP7 POP SWAP2 SWAP5 PUSH1 0x80 ADD CALLDATALOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x482A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x4841 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x4855 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x4862 DUP3 PUSH2 0x45F9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x486F DUP3 DUP3 PUSH2 0x45CD JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x5 SWAP4 SWAP1 SWAP4 SHL DUP6 ADD DUP3 ADD SWAP3 DUP3 DUP2 ADD SWAP2 POP DUP10 DUP5 GT ISZERO PUSH2 0x488F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP5 DUP3 ADD SWAP5 JUMPDEST DUP4 DUP7 LT ISZERO PUSH2 0x48B6 JUMPI DUP6 CALLDATALOAD PUSH2 0x48A7 DUP2 PUSH2 0x442E JUMP JUMPDEST DUP3 MSTORE SWAP5 DUP3 ADD SWAP5 SWAP1 DUP3 ADD SWAP1 PUSH2 0x4894 JUMP JUMPDEST SWAP7 POP POP DUP7 ADD CALLDATALOAD SWAP3 POP POP DUP1 DUP3 GT ISZERO PUSH2 0x48CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x48D9 DUP6 DUP3 DUP7 ADD PUSH2 0x461C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x4913 JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x48F7 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x44A2 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x48E3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4943 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x44A2 DUP2 PUSH2 0x442E JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x4964 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH2 0x496F DUP2 PUSH2 0x442E JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH2 0x497F DUP2 PUSH2 0x442E JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH2 0x498F DUP2 PUSH2 0x442E JUMP JUMPDEST SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x49AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 ADD PUSH1 0x1F DUP2 ADD DUP8 SGT PUSH2 0x49BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x49CA DUP8 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x468D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x49EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x49F6 DUP2 PUSH2 0x442E JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x4A12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4A1E DUP8 DUP4 DUP9 ADD PUSH2 0x461C JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x4A34 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4A41 DUP7 DUP3 DUP8 ADD PUSH2 0x461C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4A5E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x4A69 DUP2 PUSH2 0x442E JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x4A79 DUP2 PUSH2 0x47B7 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x4A9A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH2 0x4AA5 DUP2 PUSH2 0x442E JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH2 0x4AC3 DUP2 PUSH2 0x47B7 JUMP JUMPDEST SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP1 SWAP4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x4AE6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH2 0x4AF1 DUP2 PUSH2 0x442E JUMP JUMPDEST SWAP8 PUSH1 0x20 DUP8 ADD CALLDATALOAD SWAP8 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP7 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP7 POP PUSH1 0x80 ADD CALLDATALOAD SWAP5 POP SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4B25 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x4B30 DUP2 PUSH2 0x442E JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x4A79 DUP2 PUSH2 0x442E JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x4B58 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH2 0x4B63 DUP2 PUSH2 0x442E JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH2 0x4B73 DUP2 PUSH2 0x442E JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x4B9C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x47AA DUP9 DUP3 DUP10 ADD PUSH2 0x46EA JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4BBB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD MLOAD SWAP1 SWAP3 SWAP1 SWAP2 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4BDE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x44A2 DUP2 PUSH2 0x47B7 JUMP JUMPDEST SWAP5 DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4C1E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x44A2 DUP2 PUSH2 0x442E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 SWAP5 AND DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x12 SWAP1 DUP3 ADD MSTORE PUSH18 0x2CB7BA9031B0B713BA103237903A3430BA17 PUSH1 0x71 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x4CB2 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x4CD2 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 SUB PUSH1 0xC0 DUP2 SLT ISZERO PUSH2 0x4CEB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4CF7 DUP2 PUSH2 0x45A8 JUMP JUMPDEST DUP4 MLOAD DUP2 MSTORE PUSH1 0x20 DUP5 ADD MLOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP5 ADD MLOAD PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP5 ADD MLOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x7F NOT DUP4 ADD SLT ISZERO PUSH2 0x4D2B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x20 DUP3 ADD DUP3 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR ISZERO PUSH2 0x4D4F JUMPI PUSH2 0x4D4F PUSH2 0x4592 JUMP JUMPDEST PUSH1 0x40 MSTORE PUSH1 0x80 DUP5 DUP2 ADD MLOAD DUP4 MSTORE DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xA0 SWAP3 DUP4 ADD MLOAD SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xD SWAP1 DUP3 ADD MSTORE PUSH13 0x2CB7BA9030B932903232B0B217 PUSH1 0x99 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x4DCA JUMPI PUSH2 0x4DCA PUSH2 0x4D9A JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x4DF7 JUMPI PUSH2 0x4DF7 PUSH2 0x4D9A JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 SWAP5 AND DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4E36 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x29 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A2063616C6C6572206973206E6F74206F776E6572206E6F72 PUSH1 0x40 DUP3 ADD MSTORE PUSH9 0x8185C1C1C9BDD9959 PUSH1 0xBA SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4E98 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4EA4 DUP2 PUSH2 0x45A8 JUMP JUMPDEST DUP3 MLOAD DUP2 MSTORE PUSH1 0x20 DUP4 ADD MLOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP4 ADD MLOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 DUP4 ADD MLOAD PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 DUP4 ADD MLOAD PUSH1 0xA0 DUP3 ADD MSTORE DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x4F01 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 SWAP1 SWAP6 AND DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x23 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A206275726E2066726F6D20746865207A65726F2061646472 PUSH1 0x40 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x24 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A206275726E20616D6F756E7420657863656564732062616C PUSH1 0x40 DUP3 ADD MSTORE PUSH4 0x616E6365 PUSH1 0xE0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x28 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A2069647320616E6420616D6F756E7473206C656E67746820 PUSH1 0x40 DUP3 ADD MSTORE PUSH8 0xDAD2E6DAC2E8C6D PUSH1 0xC3 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F20746865207A65726F206164 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2A SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A20696E73756666696369656E742062616C616E636520666F PUSH1 0x40 DUP3 ADD MSTORE PUSH10 0x39103A3930B739B332B9 PUSH1 0xB1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x50A5 JUMPI PUSH2 0x50A5 PUSH2 0x4D9A JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x50BD PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x48E3 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x38ED DUP2 DUP6 PUSH2 0x48E3 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2B SWAP1 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x40 DUP3 ADD MSTORE PUSH11 0x6E697469616C697A696E67 PUSH1 0xA8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x5146 SWAP1 DUP4 ADD DUP7 PUSH2 0x48E3 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x5158 DUP2 DUP7 PUSH2 0x48E3 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x516C DUP2 DUP6 PUSH2 0x44FD JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x518A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x44A2 DUP2 PUSH2 0x446F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 RETURNDATASIZE GT ISZERO PUSH2 0x51AE JUMPI PUSH1 0x4 PUSH1 0x0 DUP1 RETURNDATACOPY POP PUSH1 0x0 MLOAD PUSH1 0xE0 SHR JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 RETURNDATASIZE LT ISZERO PUSH2 0x51BF JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x3 NOT RETURNDATASIZE DUP2 ADD PUSH1 0x4 DUP4 RETURNDATACOPY DUP2 MLOAD RETURNDATASIZE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 PUSH1 0x24 DUP5 ADD GT DUP2 DUP5 GT OR ISZERO PUSH2 0x51EE JUMPI POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP3 DUP6 ADD SWAP2 POP DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x5206 JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP5 RETURNDATASIZE DUP8 ADD ADD PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x5220 JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0x522F PUSH1 0x20 DUP3 DUP7 ADD ADD DUP8 PUSH2 0x45CD JUMP JUMPDEST POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x28 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A204552433131353552656365697665722072656A65637465 PUSH1 0x40 DUP3 ADD MSTORE PUSH8 0x6420746F6B656E73 PUSH1 0xC0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0xA0 PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x52BC SWAP1 DUP4 ADD DUP5 PUSH2 0x44FD JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0xD19 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0x52EE JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3BFF JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x52FA JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x5326 JUMPI PUSH2 0x5326 PUSH2 0x4592 JUMP JUMPDEST PUSH2 0x533A DUP2 PUSH2 0x5334 DUP5 SLOAD PUSH2 0x4C9E JUMP JUMPDEST DUP5 PUSH2 0x52C7 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x536F JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x5357 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x3BFF JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x539E JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x537F JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x53BC JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP INVALID 0xC3 0xD5 DUP2 PUSH9 0xC5AE7397731D063D5B 0xBF RETURNDATASIZE PUSH6 0x7854427343F4 0xC0 DUP4 0x24 0xF PUSH27 0xACAA2D0F62A2646970667358221220256016946F31A30C83E84AC4 0xB2 SWAP1 EXTCODECOPY SWAP15 0xEC DUP8 0xB5 0xD4 PUSH24 0xB73A1A884ED46988E4B96864736F6C634300080F00330000 ",
  "pcMap": {
    "0": {
      "offset": [
        196,
        11253
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        196,
        11253
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        196,
        11253
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5": {
      "fn": null,
      "offset": [
        196,
        11253
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        196,
        11253
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "8": {
      "fn": null,
      "offset": [
        196,
        11253
      ],
      "op": "LT",
      "path": "2"
    },
    "9": {
      "fn": null,
      "offset": [
        196,
        11253
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x176"
    },
    "12": {
      "fn": null,
      "offset": [
        196,
        11253
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "13": {
      "fn": null,
      "offset": [
        196,
        11253
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        196,
        11253
      ],
      "op": "CALLDATALOAD",
      "path": "2"
    },
    "16": {
      "fn": null,
      "offset": [
        196,
        11253
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        196,
        11253
      ],
      "op": "SHR",
      "path": "2"
    },
    "19": {
      "fn": null,
      "offset": [
        196,
        11253
      ],
      "op": "DUP1",
      "path": "2"
    },
    "20": {
      "fn": null,
      "offset": [
        196,
        11253
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x6865AECE"
    },
    "25": {
      "fn": null,
      "offset": [
        196,
        11253
      ],
      "op": "GT",
      "path": "2"
    },
    "26": {
      "fn": null,
      "offset": [
        196,
        11253
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xCC"
    },
    "29": {
      "fn": null,
      "offset": [
        196,
        11253
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "30": {
      "fn": null,
      "offset": [
        196,
        11253
      ],
      "op": "DUP1",
      "path": "2"
    },
    "31": {
      "fn": null,
      "offset": [
        196,
        11253
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xA22CB465"
    },
    "36": {
      "fn": null,
      "offset": [
        196,
        11253
      ],
      "op": "GT",
      "path": "2"
    },
    "37": {
      "fn": null,
      "offset": [
        196,
        11253
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7A"
    },
    "40": {
      "fn": null,
      "offset": [
        196,
        11253
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "41": {
      "fn": null,
      "offset": [
        196,
        11253
      ],
      "op": "DUP1",
      "path": "2"
    },
    "42": {
      "fn": null,
      "offset": [
        196,
        11253
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xA22CB465"
    },
    "47": {
      "fn": null,
      "offset": [
        196,
        11253
      ],
      "op": "EQ",
      "path": "2"
    },
    "48": {
      "fn": null,
      "offset": [
        196,
        11253
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x465"
    },
    "51": {
      "fn": null,
      "offset": [
        196,
        11253
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "52": {
      "fn": null,
      "offset": [
        196,
        11253
      ],
      "op": "DUP1",
      "path": "2"
    },
    "53": {
      "fn": null,
      "offset": [
        196,
        11253
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xAA35E509"
    },
    "58": {
      "fn": null,
      "offset": [
        196,
        11253
      ],
      "op": "EQ",
      "path": "2"
    },
    "59": {
      "fn": null,
      "offset": [
        196,
        11253
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x485"
    },
    "62": {
      "fn": null,
      "offset": [
        196,
        11253
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "63": {
      "fn": null,
      "offset": [
        196,
        11253
      ],
      "op": "DUP1",
      "path": "2"
    },
    "64": {
      "fn": null,
      "offset": [
        196,
        11253
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xB9C21CDA"
    },
    "69": {
      "fn": null,
      "offset": [
        196,
        11253
      ],
      "op": "EQ",
      "path": "2"
    },
    "70": {
      "fn": null,
      "offset": [
        196,
        11253
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x491"
    },
    "73": {
      "fn": null,
      "offset": [
        196,
        11253
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "74": {
      "fn": null,
      "offset": [
        196,
        11253
      ],
      "op": "DUP1",
      "path": "2"
    },
    "75": {
      "fn": null,
      "offset": [
        196,
        11253
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xC08D71EB"
    },
    "80": {
      "fn": null,
      "offset": [
        196,
        11253
      ],
      "op": "EQ",
      "path": "2"
    },
    "81": {
      "fn": null,
      "offset": [
        196,
        11253
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4B1"
    },
    "84": {
      "fn": null,
      "offset": [
        196,
        11253
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "85": {
      "fn": null,
      "offset": [
        196,
        11253
      ],
      "op": "DUP1",
      "path": "2"
    },
    "86": {
      "fn": null,
      "offset": [
        196,
        11253
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xE985E9C5"
    },
    "91": {
      "fn": null,
      "offset": [
        196,
        11253
      ],
      "op": "EQ",
      "path": "2"
    },
    "92": {
      "fn": null,
      "offset": [
        196,
        11253
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x51E"
    },
    "95": {
      "fn": null,
      "offset": [
        196,
        11253
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "96": {
      "fn": null,
      "offset": [
        196,
        11253
      ],
      "op": "DUP1",
      "path": "2"
    },
    "97": {
      "fn": null,
      "offset": [
        196,
        11253
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xF242432A"
    },
    "102": {
      "fn": null,
      "offset": [
        196,
        11253
      ],
      "op": "EQ",
      "path": "2"
    },
    "103": {
      "fn": null,
      "offset": [
        196,
        11253
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x567"
    },
    "106": {
      "fn": null,
      "offset": [
        196,
        11253
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "107": {
      "fn": null,
      "offset": [
        196,
        11253
      ],
      "op": "DUP1",
      "path": "2"
    },
    "108": {
      "fn": null,
      "offset": [
        196,
        11253
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xF5298ACA"
    },
    "113": {
      "fn": null,
      "offset": [
        196,
        11253
      ],
      "op": "EQ",
      "path": "2"
    },
    "114": {
      "fn": null,
      "offset": [
        196,
        11253
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x587"
    },
    "117": {
      "fn": null,
      "offset": [
        196,
        11253
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "118": {
      "fn": null,
      "offset": [
        196,
        11253
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "120": {
      "fn": null,
      "offset": [
        196,
        11253
      ],
      "op": "DUP1",
      "path": "2"
    },
    "121": {
      "fn": null,
      "offset": [
        196,
        11253
      ],
      "op": "REVERT",
      "path": "2"
    },
    "122": {
      "fn": null,
      "offset": [
        196,
        11253
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "123": {
      "fn": null,
      "offset": [
        196,
        11253
      ],
      "op": "DUP1",
      "path": "2"
    },
    "124": {
      "fn": null,
      "offset": [
        196,
        11253
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x6865AECE"
    },
    "129": {
      "fn": null,
      "offset": [
        196,
        11253
      ],
      "op": "EQ",
      "path": "2"
    },
    "130": {
      "fn": null,
      "offset": [
        196,
        11253
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x36B"
    },
    "133": {
      "fn": null,
      "offset": [
        196,
        11253
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "134": {
      "fn": null,
      "offset": [
        196,
        11253
      ],
      "op": "DUP1",
      "path": "2"
    },
    "135": {
      "fn": null,
      "offset": [
        196,
        11253
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x6B20C454"
    },
    "140": {
      "fn": null,
      "offset": [
        196,
        11253
      ],
      "op": "EQ",
      "path": "2"
    },
    "141": {
      "fn": null,
      "offset": [
        196,
        11253
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x38B"
    },
    "144": {
      "fn": null,
      "offset": [
        196,
        11253
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "145": {
      "fn": null,
      "offset": [
        196,
        11253
      ],
      "op": "DUP1",
      "path": "2"
    },
    "146": {
      "fn": null,
      "offset": [
        196,
        11253
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x6D714B68"
    },
    "151": {
      "fn": null,
      "offset": [
        196,
        11253
      ],
      "op": "EQ",
      "path": "2"
    },
    "152": {
      "fn": null,
      "offset": [
        196,
        11253
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3AB"
    },
    "155": {
      "fn": null,
      "offset": [
        196,
        11253
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "156": {
      "fn": null,
      "offset": [
        196,
        11253
      ],
      "op": "DUP1",
      "path": "2"
    },
    "157": {
      "fn": null,
      "offset": [
        196,
        11253
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x744FB3A6"
    },
    "162": {
      "fn": null,
      "offset": [
        196,
        11253
      ],
      "op": "EQ",
      "path": "2"
    },
    "163": {
      "fn": null,
      "offset": [
        196,
        11253
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3CB"
    },
    "166": {
      "fn": null,
      "offset": [
        196,
        11253
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "167": {
      "fn": null,
      "offset": [
        196,
        11253
      ],
      "op": "DUP1",
      "path": "2"
    },
    "168": {
      "fn": null,
      "offset": [
        196,
        11253
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x77CB0D6C"
    },
    "173": {
      "fn": null,
      "offset": [
        196,
        11253
      ],
      "op": "EQ",
      "path": "2"
    },
    "174": {
      "fn": null,
      "offset": [
        196,
        11253
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3EB"
    },
    "177": {
      "fn": null,
      "offset": [
        196,
        11253
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "178": {
      "fn": null,
      "offset": [
        196,
        11253
      ],
      "op": "DUP1",
      "path": "2"
    },
    "179": {
      "fn": null,
      "offset": [
        196,
        11253
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x8297F29F"
    },
    "184": {
      "fn": null,
      "offset": [
        196,
        11253
      ],
      "op": "EQ",
      "path": "2"
    },
    "185": {
      "fn": null,
      "offset": [
        196,
        11253
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x40B"
    },
    "188": {
      "fn": null,
      "offset": [
        196,
        11253
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "189": {
      "fn": null,
      "offset": [
        196,
        11253
      ],
      "op": "DUP1",
      "path": "2"
    },
    "190": {
      "fn": null,
      "offset": [
        196,
        11253
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x83FB8DB6"
    },
    "195": {
      "fn": null,
      "offset": [
        196,
        11253
      ],
      "op": "EQ",
      "path": "2"
    },
    "196": {
      "fn": null,
      "offset": [
        196,
        11253
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x445"
    },
    "199": {
      "fn": null,
      "offset": [
        196,
        11253
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "200": {
      "fn": null,
      "offset": [
        196,
        11253
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "202": {
      "fn": null,
      "offset": [
        196,
        11253
      ],
      "op": "DUP1",
      "path": "2"
    },
    "203": {
      "fn": null,
      "offset": [
        196,
        11253
      ],
      "op": "REVERT",
      "path": "2"
    },
    "204": {
      "fn": null,
      "offset": [
        196,
        11253
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "205": {
      "fn": null,
      "offset": [
        196,
        11253
      ],
      "op": "DUP1",
      "path": "2"
    },
    "206": {
      "fn": null,
      "offset": [
        196,
        11253
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x2EB2C2D6"
    },
    "211": {
      "fn": null,
      "offset": [
        196,
        11253
      ],
      "op": "GT",
      "path": "2"
    },
    "212": {
      "fn": null,
      "offset": [
        196,
        11253
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x129"
    },
    "215": {
      "fn": null,
      "offset": [
        196,
        11253
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "216": {
      "fn": null,
      "offset": [
        196,
        11253
      ],
      "op": "DUP1",
      "path": "2"
    },
    "217": {
      "fn": null,
      "offset": [
        196,
        11253
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x2EB2C2D6"
    },
    "222": {
      "fn": null,
      "offset": [
        196,
        11253
      ],
      "op": "EQ",
      "path": "2"
    },
    "223": {
      "fn": null,
      "offset": [
        196,
        11253
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x28D"
    },
    "226": {
      "fn": null,
      "offset": [
        196,
        11253
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "227": {
      "fn": null,
      "offset": [
        196,
        11253
      ],
      "op": "DUP1",
      "path": "2"
    },
    "228": {
      "fn": null,
      "offset": [
        196,
        11253
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x2F49BCD1"
    },
    "233": {
      "fn": null,
      "offset": [
        196,
        11253
      ],
      "op": "EQ",
      "path": "2"
    },
    "234": {
      "fn": null,
      "offset": [
        196,
        11253
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2AD"
    },
    "237": {
      "fn": null,
      "offset": [
        196,
        11253
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "238": {
      "fn": null,
      "offset": [
        196,
        11253
      ],
      "op": "DUP1",
      "path": "2"
    },
    "239": {
      "fn": null,
      "offset": [
        196,
        11253
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x490CAF2C"
    },
    "244": {
      "fn": null,
      "offset": [
        196,
        11253
      ],
      "op": "EQ",
      "path": "2"
    },
    "245": {
      "fn": null,
      "offset": [
        196,
        11253
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2CD"
    },
    "248": {
      "fn": null,
      "offset": [
        196,
        11253
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "249": {
      "fn": null,
      "offset": [
        196,
        11253
      ],
      "op": "DUP1",
      "path": "2"
    },
    "250": {
      "fn": null,
      "offset": [
        196,
        11253
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x495057BE"
    },
    "255": {
      "fn": null,
      "offset": [
        196,
        11253
      ],
      "op": "EQ",
      "path": "2"
    },
    "256": {
      "fn": null,
      "offset": [
        196,
        11253
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1FE"
    },
    "259": {
      "fn": null,
      "offset": [
        196,
        11253
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "260": {
      "fn": null,
      "offset": [
        196,
        11253
      ],
      "op": "DUP1",
      "path": "2"
    },
    "261": {
      "fn": null,
      "offset": [
        196,
        11253
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x4E1273F4"
    },
    "266": {
      "fn": null,
      "offset": [
        196,
        11253
      ],
      "op": "EQ",
      "path": "2"
    },
    "267": {
      "fn": null,
      "offset": [
        196,
        11253
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2ED"
    },
    "270": {
      "fn": null,
      "offset": [
        196,
        11253
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "271": {
      "fn": null,
      "offset": [
        196,
        11253
      ],
      "op": "DUP1",
      "path": "2"
    },
    "272": {
      "fn": null,
      "offset": [
        196,
        11253
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x596C6325"
    },
    "277": {
      "fn": null,
      "offset": [
        196,
        11253
      ],
      "op": "EQ",
      "path": "2"
    },
    "278": {
      "fn": null,
      "offset": [
        196,
        11253
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x31A"
    },
    "281": {
      "fn": null,
      "offset": [
        196,
        11253
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "282": {
      "fn": null,
      "offset": [
        196,
        11253
      ],
      "op": "DUP1",
      "path": "2"
    },
    "283": {
      "fn": null,
      "offset": [
        196,
        11253
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x65E8E4F4"
    },
    "288": {
      "fn": null,
      "offset": [
        196,
        11253
      ],
      "op": "EQ",
      "path": "2"
    },
    "289": {
      "fn": null,
      "offset": [
        196,
        11253
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x34B"
    },
    "292": {
      "fn": null,
      "offset": [
        196,
        11253
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "293": {
      "fn": null,
      "offset": [
        196,
        11253
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "295": {
      "fn": null,
      "offset": [
        196,
        11253
      ],
      "op": "DUP1",
      "path": "2"
    },
    "296": {
      "fn": null,
      "offset": [
        196,
        11253
      ],
      "op": "REVERT",
      "path": "2"
    },
    "297": {
      "fn": null,
      "offset": [
        196,
        11253
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "298": {
      "fn": null,
      "offset": [
        196,
        11253
      ],
      "op": "DUP1",
      "path": "2"
    },
    "299": {
      "fn": null,
      "offset": [
        196,
        11253
      ],
      "op": "PUSH3",
      "path": "2",
      "value": "0xFDD58E"
    },
    "303": {
      "fn": null,
      "offset": [
        196,
        11253
      ],
      "op": "EQ",
      "path": "2"
    },
    "304": {
      "fn": null,
      "offset": [
        196,
        11253
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x17B"
    },
    "307": {
      "fn": null,
      "offset": [
        196,
        11253
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "308": {
      "fn": null,
      "offset": [
        196,
        11253
      ],
      "op": "DUP1",
      "path": "2"
    },
    "309": {
      "fn": null,
      "offset": [
        196,
        11253
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x1FFC9A7"
    },
    "314": {
      "fn": null,
      "offset": [
        196,
        11253
      ],
      "op": "EQ",
      "path": "2"
    },
    "315": {
      "fn": null,
      "offset": [
        196,
        11253
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1AE"
    },
    "318": {
      "fn": null,
      "offset": [
        196,
        11253
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "319": {
      "fn": null,
      "offset": [
        196,
        11253
      ],
      "op": "DUP1",
      "path": "2"
    },
    "320": {
      "fn": null,
      "offset": [
        196,
        11253
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x64BB15C"
    },
    "325": {
      "fn": null,
      "offset": [
        196,
        11253
      ],
      "op": "EQ",
      "path": "2"
    },
    "326": {
      "fn": null,
      "offset": [
        196,
        11253
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1DE"
    },
    "329": {
      "fn": null,
      "offset": [
        196,
        11253
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "330": {
      "fn": null,
      "offset": [
        196,
        11253
      ],
      "op": "DUP1",
      "path": "2"
    },
    "331": {
      "fn": null,
      "offset": [
        196,
        11253
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x7A369B6"
    },
    "336": {
      "fn": null,
      "offset": [
        196,
        11253
      ],
      "op": "EQ",
      "path": "2"
    },
    "337": {
      "fn": null,
      "offset": [
        196,
        11253
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x200"
    },
    "340": {
      "fn": null,
      "offset": [
        196,
        11253
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "341": {
      "fn": null,
      "offset": [
        196,
        11253
      ],
      "op": "DUP1",
      "path": "2"
    },
    "342": {
      "fn": null,
      "offset": [
        196,
        11253
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xE89341C"
    },
    "347": {
      "fn": null,
      "offset": [
        196,
        11253
      ],
      "op": "EQ",
      "path": "2"
    },
    "348": {
      "fn": null,
      "offset": [
        196,
        11253
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x220"
    },
    "351": {
      "fn": null,
      "offset": [
        196,
        11253
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "352": {
      "fn": null,
      "offset": [
        196,
        11253
      ],
      "op": "DUP1",
      "path": "2"
    },
    "353": {
      "fn": null,
      "offset": [
        196,
        11253
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x124D91E5"
    },
    "358": {
      "fn": null,
      "offset": [
        196,
        11253
      ],
      "op": "EQ",
      "path": "2"
    },
    "359": {
      "fn": null,
      "offset": [
        196,
        11253
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x24D"
    },
    "362": {
      "fn": null,
      "offset": [
        196,
        11253
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "363": {
      "fn": null,
      "offset": [
        196,
        11253
      ],
      "op": "DUP1",
      "path": "2"
    },
    "364": {
      "fn": null,
      "offset": [
        196,
        11253
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x1F0F92F1"
    },
    "369": {
      "fn": null,
      "offset": [
        196,
        11253
      ],
      "op": "EQ",
      "path": "2"
    },
    "370": {
      "fn": null,
      "offset": [
        196,
        11253
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x26D"
    },
    "373": {
      "fn": null,
      "offset": [
        196,
        11253
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "374": {
      "fn": null,
      "offset": [
        196,
        11253
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "375": {
      "fn": null,
      "offset": [
        196,
        11253
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "377": {
      "fn": null,
      "offset": [
        196,
        11253
      ],
      "op": "DUP1",
      "path": "2"
    },
    "378": {
      "first_revert": true,
      "fn": null,
      "offset": [
        196,
        11253
      ],
      "op": "REVERT",
      "path": "2"
    },
    "379": {
      "fn": "ERC1155Upgradeable.balanceOf",
      "offset": [
        2652,
        2883
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "380": {
      "fn": "ERC1155Upgradeable.balanceOf",
      "offset": [
        2652,
        2883
      ],
      "op": "CALLVALUE",
      "path": "32"
    },
    "381": {
      "fn": "ERC1155Upgradeable.balanceOf",
      "offset": [
        2652,
        2883
      ],
      "op": "DUP1",
      "path": "32"
    },
    "382": {
      "fn": "ERC1155Upgradeable.balanceOf",
      "offset": [
        2652,
        2883
      ],
      "op": "ISZERO",
      "path": "32"
    },
    "383": {
      "fn": "ERC1155Upgradeable.balanceOf",
      "offset": [
        2652,
        2883
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x187"
    },
    "386": {
      "fn": "ERC1155Upgradeable.balanceOf",
      "offset": [
        2652,
        2883
      ],
      "op": "JUMPI",
      "path": "32"
    },
    "387": {
      "fn": "ERC1155Upgradeable.balanceOf",
      "offset": [
        2652,
        2883
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x0"
    },
    "389": {
      "fn": "ERC1155Upgradeable.balanceOf",
      "offset": [
        2652,
        2883
      ],
      "op": "DUP1",
      "path": "32"
    },
    "390": {
      "fn": "ERC1155Upgradeable.balanceOf",
      "offset": [
        2652,
        2883
      ],
      "op": "REVERT",
      "path": "32"
    },
    "391": {
      "fn": "ERC1155Upgradeable.balanceOf",
      "offset": [
        2652,
        2883
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "392": {
      "op": "POP"
    },
    "393": {
      "fn": "ERC1155Upgradeable.balanceOf",
      "offset": [
        2652,
        2883
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x19B"
    },
    "396": {
      "fn": "ERC1155Upgradeable.balanceOf",
      "offset": [
        2652,
        2883
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x196"
    },
    "399": {
      "fn": "ERC1155Upgradeable.balanceOf",
      "offset": [
        2652,
        2883
      ],
      "op": "CALLDATASIZE",
      "path": "32"
    },
    "400": {
      "fn": "ERC1155Upgradeable.balanceOf",
      "offset": [
        2652,
        2883
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x4"
    },
    "402": {
      "fn": "ERC1155Upgradeable.balanceOf",
      "offset": [
        2652,
        2883
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x4443"
    },
    "405": {
      "fn": "ERC1155Upgradeable.balanceOf",
      "jump": "i",
      "offset": [
        2652,
        2883
      ],
      "op": "JUMP",
      "path": "32"
    },
    "406": {
      "fn": "ERC1155Upgradeable.balanceOf",
      "offset": [
        2652,
        2883
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "407": {
      "fn": "ERC1155Upgradeable.balanceOf",
      "offset": [
        2652,
        2883
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x5A7"
    },
    "410": {
      "fn": "ERC1155Upgradeable.balanceOf",
      "jump": "i",
      "offset": [
        2652,
        2883
      ],
      "op": "JUMP",
      "path": "32"
    },
    "411": {
      "fn": "ERC1155Upgradeable.balanceOf",
      "offset": [
        2652,
        2883
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "412": {
      "fn": "ERC1155Upgradeable.balanceOf",
      "offset": [
        2652,
        2883
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x40"
    },
    "414": {
      "fn": "ERC1155Upgradeable.balanceOf",
      "offset": [
        2652,
        2883
      ],
      "op": "MLOAD",
      "path": "32"
    },
    "415": {
      "op": "SWAP1"
    },
    "416": {
      "op": "DUP2"
    },
    "417": {
      "op": "MSTORE"
    },
    "418": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "420": {
      "op": "ADD"
    },
    "421": {
      "fn": "ERC1155Upgradeable.balanceOf",
      "offset": [
        2652,
        2883
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "422": {
      "fn": "ERC1155Upgradeable.balanceOf",
      "offset": [
        2652,
        2883
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x40"
    },
    "424": {
      "fn": "ERC1155Upgradeable.balanceOf",
      "offset": [
        2652,
        2883
      ],
      "op": "MLOAD",
      "path": "32"
    },
    "425": {
      "fn": "ERC1155Upgradeable.balanceOf",
      "offset": [
        2652,
        2883
      ],
      "op": "DUP1",
      "path": "32"
    },
    "426": {
      "fn": "ERC1155Upgradeable.balanceOf",
      "offset": [
        2652,
        2883
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "427": {
      "fn": "ERC1155Upgradeable.balanceOf",
      "offset": [
        2652,
        2883
      ],
      "op": "SUB",
      "path": "32"
    },
    "428": {
      "fn": "ERC1155Upgradeable.balanceOf",
      "offset": [
        2652,
        2883
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "429": {
      "fn": "ERC1155Upgradeable.balanceOf",
      "offset": [
        2652,
        2883
      ],
      "op": "RETURN",
      "path": "32"
    },
    "430": {
      "fn": "ERC1155Upgradeable.supportsInterface",
      "offset": [
        1631,
        1985
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "431": {
      "fn": "ERC1155Upgradeable.supportsInterface",
      "offset": [
        1631,
        1985
      ],
      "op": "CALLVALUE",
      "path": "32"
    },
    "432": {
      "fn": "ERC1155Upgradeable.supportsInterface",
      "offset": [
        1631,
        1985
      ],
      "op": "DUP1",
      "path": "32"
    },
    "433": {
      "fn": "ERC1155Upgradeable.supportsInterface",
      "offset": [
        1631,
        1985
      ],
      "op": "ISZERO",
      "path": "32"
    },
    "434": {
      "fn": "ERC1155Upgradeable.supportsInterface",
      "offset": [
        1631,
        1985
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x1BA"
    },
    "437": {
      "fn": "ERC1155Upgradeable.supportsInterface",
      "offset": [
        1631,
        1985
      ],
      "op": "JUMPI",
      "path": "32"
    },
    "438": {
      "fn": "ERC1155Upgradeable.supportsInterface",
      "offset": [
        1631,
        1985
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x0"
    },
    "440": {
      "fn": "ERC1155Upgradeable.supportsInterface",
      "offset": [
        1631,
        1985
      ],
      "op": "DUP1",
      "path": "32"
    },
    "441": {
      "fn": "ERC1155Upgradeable.supportsInterface",
      "offset": [
        1631,
        1985
      ],
      "op": "REVERT",
      "path": "32"
    },
    "442": {
      "fn": "ERC1155Upgradeable.supportsInterface",
      "offset": [
        1631,
        1985
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "443": {
      "op": "POP"
    },
    "444": {
      "fn": "ERC1155Upgradeable.supportsInterface",
      "offset": [
        1631,
        1985
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x1CE"
    },
    "447": {
      "fn": "ERC1155Upgradeable.supportsInterface",
      "offset": [
        1631,
        1985
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x1C9"
    },
    "450": {
      "fn": "ERC1155Upgradeable.supportsInterface",
      "offset": [
        1631,
        1985
      ],
      "op": "CALLDATASIZE",
      "path": "32"
    },
    "451": {
      "fn": "ERC1155Upgradeable.supportsInterface",
      "offset": [
        1631,
        1985
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x4"
    },
    "453": {
      "fn": "ERC1155Upgradeable.supportsInterface",
      "offset": [
        1631,
        1985
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x4485"
    },
    "456": {
      "fn": "ERC1155Upgradeable.supportsInterface",
      "jump": "i",
      "offset": [
        1631,
        1985
      ],
      "op": "JUMP",
      "path": "32"
    },
    "457": {
      "fn": "ERC1155Upgradeable.supportsInterface",
      "offset": [
        1631,
        1985
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "458": {
      "fn": "ERC1155Upgradeable.supportsInterface",
      "offset": [
        1631,
        1985
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x640"
    },
    "461": {
      "fn": "ERC1155Upgradeable.supportsInterface",
      "jump": "i",
      "offset": [
        1631,
        1985
      ],
      "op": "JUMP",
      "path": "32"
    },
    "462": {
      "fn": "ERC1155Upgradeable.supportsInterface",
      "offset": [
        1631,
        1985
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "463": {
      "fn": "ERC1155Upgradeable.supportsInterface",
      "offset": [
        1631,
        1985
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x40"
    },
    "465": {
      "fn": "ERC1155Upgradeable.supportsInterface",
      "offset": [
        1631,
        1985
      ],
      "op": "MLOAD",
      "path": "32"
    },
    "466": {
      "op": "SWAP1"
    },
    "467": {
      "op": "ISZERO"
    },
    "468": {
      "op": "ISZERO"
    },
    "469": {
      "op": "DUP2"
    },
    "470": {
      "op": "MSTORE"
    },
    "471": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "473": {
      "op": "ADD"
    },
    "474": {
      "fn": "ERC1155Upgradeable.supportsInterface",
      "offset": [
        1631,
        1985
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x1A5"
    },
    "477": {
      "op": "JUMP"
    },
    "478": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        4827,
        5540
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "479": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        4827,
        5540
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "480": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        4827,
        5540
      ],
      "op": "DUP1",
      "path": "2"
    },
    "481": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        4827,
        5540
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "482": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        4827,
        5540
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1EA"
    },
    "485": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        4827,
        5540
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "486": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        4827,
        5540
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "488": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        4827,
        5540
      ],
      "op": "DUP1",
      "path": "2"
    },
    "489": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        4827,
        5540
      ],
      "op": "REVERT",
      "path": "2"
    },
    "490": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        4827,
        5540
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "491": {
      "op": "POP"
    },
    "492": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        4827,
        5540
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1FE"
    },
    "495": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        4827,
        5540
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1F9"
    },
    "498": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        4827,
        5540
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "499": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        4827,
        5540
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "501": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        4827,
        5540
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4443"
    },
    "504": {
      "fn": "BaseLoot.activateIS",
      "jump": "i",
      "offset": [
        4827,
        5540
      ],
      "op": "JUMP",
      "path": "2"
    },
    "505": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        4827,
        5540
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "506": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        4827,
        5540
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x692"
    },
    "509": {
      "fn": "BaseLoot.activateIS",
      "jump": "i",
      "offset": [
        4827,
        5540
      ],
      "op": "JUMP",
      "path": "2"
    },
    "510": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        4827,
        5540
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "511": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        4827,
        5540
      ],
      "op": "STOP",
      "path": "2"
    },
    "512": {
      "fn": "BaseLoot.castGW",
      "offset": [
        5940,
        6367
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "513": {
      "fn": "BaseLoot.castGW",
      "offset": [
        5940,
        6367
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "514": {
      "fn": "BaseLoot.castGW",
      "offset": [
        5940,
        6367
      ],
      "op": "DUP1",
      "path": "2"
    },
    "515": {
      "fn": "BaseLoot.castGW",
      "offset": [
        5940,
        6367
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "516": {
      "fn": "BaseLoot.castGW",
      "offset": [
        5940,
        6367
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x20C"
    },
    "519": {
      "fn": "BaseLoot.castGW",
      "offset": [
        5940,
        6367
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "520": {
      "fn": "BaseLoot.castGW",
      "offset": [
        5940,
        6367
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "522": {
      "fn": "BaseLoot.castGW",
      "offset": [
        5940,
        6367
      ],
      "op": "DUP1",
      "path": "2"
    },
    "523": {
      "fn": "BaseLoot.castGW",
      "offset": [
        5940,
        6367
      ],
      "op": "REVERT",
      "path": "2"
    },
    "524": {
      "fn": "BaseLoot.castGW",
      "offset": [
        5940,
        6367
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "525": {
      "op": "POP"
    },
    "526": {
      "fn": "BaseLoot.castGW",
      "offset": [
        5940,
        6367
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1FE"
    },
    "529": {
      "fn": "BaseLoot.castGW",
      "offset": [
        5940,
        6367
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x21B"
    },
    "532": {
      "fn": "BaseLoot.castGW",
      "offset": [
        5940,
        6367
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "533": {
      "fn": "BaseLoot.castGW",
      "offset": [
        5940,
        6367
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "535": {
      "fn": "BaseLoot.castGW",
      "offset": [
        5940,
        6367
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x44A9"
    },
    "538": {
      "fn": "BaseLoot.castGW",
      "jump": "i",
      "offset": [
        5940,
        6367
      ],
      "op": "JUMP",
      "path": "2"
    },
    "539": {
      "fn": "BaseLoot.castGW",
      "offset": [
        5940,
        6367
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "540": {
      "fn": "BaseLoot.castGW",
      "offset": [
        5940,
        6367
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x9D3"
    },
    "543": {
      "fn": "BaseLoot.castGW",
      "jump": "i",
      "offset": [
        5940,
        6367
      ],
      "op": "JUMP",
      "path": "2"
    },
    "544": {
      "fn": "ERC1155Upgradeable.uri",
      "offset": [
        2396,
        2501
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "545": {
      "fn": "ERC1155Upgradeable.uri",
      "offset": [
        2396,
        2501
      ],
      "op": "CALLVALUE",
      "path": "32"
    },
    "546": {
      "fn": "ERC1155Upgradeable.uri",
      "offset": [
        2396,
        2501
      ],
      "op": "DUP1",
      "path": "32"
    },
    "547": {
      "fn": "ERC1155Upgradeable.uri",
      "offset": [
        2396,
        2501
      ],
      "op": "ISZERO",
      "path": "32"
    },
    "548": {
      "fn": "ERC1155Upgradeable.uri",
      "offset": [
        2396,
        2501
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x22C"
    },
    "551": {
      "fn": "ERC1155Upgradeable.uri",
      "offset": [
        2396,
        2501
      ],
      "op": "JUMPI",
      "path": "32"
    },
    "552": {
      "fn": "ERC1155Upgradeable.uri",
      "offset": [
        2396,
        2501
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x0"
    },
    "554": {
      "fn": "ERC1155Upgradeable.uri",
      "offset": [
        2396,
        2501
      ],
      "op": "DUP1",
      "path": "32"
    },
    "555": {
      "fn": "ERC1155Upgradeable.uri",
      "offset": [
        2396,
        2501
      ],
      "op": "REVERT",
      "path": "32"
    },
    "556": {
      "fn": "ERC1155Upgradeable.uri",
      "offset": [
        2396,
        2501
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "557": {
      "op": "POP"
    },
    "558": {
      "fn": "ERC1155Upgradeable.uri",
      "offset": [
        2396,
        2501
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x240"
    },
    "561": {
      "fn": "ERC1155Upgradeable.uri",
      "offset": [
        2396,
        2501
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x23B"
    },
    "564": {
      "fn": "ERC1155Upgradeable.uri",
      "offset": [
        2396,
        2501
      ],
      "op": "CALLDATASIZE",
      "path": "32"
    },
    "565": {
      "fn": "ERC1155Upgradeable.uri",
      "offset": [
        2396,
        2501
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x4"
    },
    "567": {
      "fn": "ERC1155Upgradeable.uri",
      "offset": [
        2396,
        2501
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x44E4"
    },
    "570": {
      "fn": "ERC1155Upgradeable.uri",
      "jump": "i",
      "offset": [
        2396,
        2501
      ],
      "op": "JUMP",
      "path": "32"
    },
    "571": {
      "fn": "ERC1155Upgradeable.uri",
      "offset": [
        2396,
        2501
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "572": {
      "fn": "ERC1155Upgradeable.uri",
      "offset": [
        2396,
        2501
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0xC1A"
    },
    "575": {
      "fn": "ERC1155Upgradeable.uri",
      "jump": "i",
      "offset": [
        2396,
        2501
      ],
      "op": "JUMP",
      "path": "32"
    },
    "576": {
      "fn": "ERC1155Upgradeable.uri",
      "offset": [
        2396,
        2501
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "577": {
      "fn": "ERC1155Upgradeable.uri",
      "offset": [
        2396,
        2501
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x40"
    },
    "579": {
      "fn": "ERC1155Upgradeable.uri",
      "offset": [
        2396,
        2501
      ],
      "op": "MLOAD",
      "path": "32"
    },
    "580": {
      "fn": "ERC1155Upgradeable.uri",
      "offset": [
        2396,
        2501
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x1A5"
    },
    "583": {
      "fn": "ERC1155Upgradeable.uri",
      "offset": [
        2396,
        2501
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "584": {
      "fn": "ERC1155Upgradeable.uri",
      "offset": [
        2396,
        2501
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "585": {
      "fn": "ERC1155Upgradeable.uri",
      "offset": [
        2396,
        2501
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x454A"
    },
    "588": {
      "fn": "ERC1155Upgradeable.uri",
      "jump": "i",
      "offset": [
        2396,
        2501
      ],
      "op": "JUMP",
      "path": "32"
    },
    "589": {
      "fn": "BaseLoot.burnFrom",
      "offset": [
        2031,
        2202
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "590": {
      "fn": "BaseLoot.burnFrom",
      "offset": [
        2031,
        2202
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "591": {
      "fn": "BaseLoot.burnFrom",
      "offset": [
        2031,
        2202
      ],
      "op": "DUP1",
      "path": "2"
    },
    "592": {
      "fn": "BaseLoot.burnFrom",
      "offset": [
        2031,
        2202
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "593": {
      "fn": "BaseLoot.burnFrom",
      "offset": [
        2031,
        2202
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x259"
    },
    "596": {
      "fn": "BaseLoot.burnFrom",
      "offset": [
        2031,
        2202
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "597": {
      "fn": "BaseLoot.burnFrom",
      "offset": [
        2031,
        2202
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "599": {
      "fn": "BaseLoot.burnFrom",
      "offset": [
        2031,
        2202
      ],
      "op": "DUP1",
      "path": "2"
    },
    "600": {
      "fn": "BaseLoot.burnFrom",
      "offset": [
        2031,
        2202
      ],
      "op": "REVERT",
      "path": "2"
    },
    "601": {
      "fn": "BaseLoot.burnFrom",
      "offset": [
        2031,
        2202
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "602": {
      "op": "POP"
    },
    "603": {
      "fn": "BaseLoot.burnFrom",
      "offset": [
        2031,
        2202
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1FE"
    },
    "606": {
      "fn": "BaseLoot.burnFrom",
      "offset": [
        2031,
        2202
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x268"
    },
    "609": {
      "fn": "BaseLoot.burnFrom",
      "offset": [
        2031,
        2202
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "610": {
      "fn": "BaseLoot.burnFrom",
      "offset": [
        2031,
        2202
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "612": {
      "fn": "BaseLoot.burnFrom",
      "offset": [
        2031,
        2202
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x455D"
    },
    "615": {
      "fn": "BaseLoot.burnFrom",
      "jump": "i",
      "offset": [
        2031,
        2202
      ],
      "op": "JUMP",
      "path": "2"
    },
    "616": {
      "fn": "BaseLoot.burnFrom",
      "offset": [
        2031,
        2202
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "617": {
      "fn": "BaseLoot.burnFrom",
      "offset": [
        2031,
        2202
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xCAE"
    },
    "620": {
      "fn": "BaseLoot.burnFrom",
      "jump": "i",
      "offset": [
        2031,
        2202
      ],
      "op": "JUMP",
      "path": "2"
    },
    "621": {
      "fn": "BaseLoot.addLoot",
      "offset": [
        1202,
        1387
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "622": {
      "fn": "BaseLoot.addLoot",
      "offset": [
        1202,
        1387
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "623": {
      "fn": "BaseLoot.addLoot",
      "offset": [
        1202,
        1387
      ],
      "op": "DUP1",
      "path": "2"
    },
    "624": {
      "fn": "BaseLoot.addLoot",
      "offset": [
        1202,
        1387
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "625": {
      "fn": "BaseLoot.addLoot",
      "offset": [
        1202,
        1387
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x279"
    },
    "628": {
      "fn": "BaseLoot.addLoot",
      "offset": [
        1202,
        1387
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "629": {
      "fn": "BaseLoot.addLoot",
      "offset": [
        1202,
        1387
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "631": {
      "fn": "BaseLoot.addLoot",
      "offset": [
        1202,
        1387
      ],
      "op": "DUP1",
      "path": "2"
    },
    "632": {
      "fn": "BaseLoot.addLoot",
      "offset": [
        1202,
        1387
      ],
      "op": "REVERT",
      "path": "2"
    },
    "633": {
      "fn": "BaseLoot.addLoot",
      "offset": [
        1202,
        1387
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "634": {
      "op": "POP"
    },
    "635": {
      "fn": "BaseLoot.addLoot",
      "offset": [
        1202,
        1387
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1FE"
    },
    "638": {
      "fn": "BaseLoot.addLoot",
      "offset": [
        1202,
        1387
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x288"
    },
    "641": {
      "fn": "BaseLoot.addLoot",
      "offset": [
        1202,
        1387
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "642": {
      "fn": "BaseLoot.addLoot",
      "offset": [
        1202,
        1387
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "644": {
      "fn": "BaseLoot.addLoot",
      "offset": [
        1202,
        1387
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x455D"
    },
    "647": {
      "fn": "BaseLoot.addLoot",
      "jump": "i",
      "offset": [
        1202,
        1387
      ],
      "op": "JUMP",
      "path": "2"
    },
    "648": {
      "fn": "BaseLoot.addLoot",
      "offset": [
        1202,
        1387
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "649": {
      "fn": "BaseLoot.addLoot",
      "offset": [
        1202,
        1387
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xD1E"
    },
    "652": {
      "fn": "BaseLoot.addLoot",
      "jump": "i",
      "offset": [
        1202,
        1387
      ],
      "op": "JUMP",
      "path": "2"
    },
    "653": {
      "fn": "ERC1155Upgradeable.safeBatchTransferFrom",
      "offset": [
        4591,
        5033
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "654": {
      "fn": "ERC1155Upgradeable.safeBatchTransferFrom",
      "offset": [
        4591,
        5033
      ],
      "op": "CALLVALUE",
      "path": "32"
    },
    "655": {
      "fn": "ERC1155Upgradeable.safeBatchTransferFrom",
      "offset": [
        4591,
        5033
      ],
      "op": "DUP1",
      "path": "32"
    },
    "656": {
      "fn": "ERC1155Upgradeable.safeBatchTransferFrom",
      "offset": [
        4591,
        5033
      ],
      "op": "ISZERO",
      "path": "32"
    },
    "657": {
      "fn": "ERC1155Upgradeable.safeBatchTransferFrom",
      "offset": [
        4591,
        5033
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x299"
    },
    "660": {
      "fn": "ERC1155Upgradeable.safeBatchTransferFrom",
      "offset": [
        4591,
        5033
      ],
      "op": "JUMPI",
      "path": "32"
    },
    "661": {
      "fn": "ERC1155Upgradeable.safeBatchTransferFrom",
      "offset": [
        4591,
        5033
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x0"
    },
    "663": {
      "fn": "ERC1155Upgradeable.safeBatchTransferFrom",
      "offset": [
        4591,
        5033
      ],
      "op": "DUP1",
      "path": "32"
    },
    "664": {
      "fn": "ERC1155Upgradeable.safeBatchTransferFrom",
      "offset": [
        4591,
        5033
      ],
      "op": "REVERT",
      "path": "32"
    },
    "665": {
      "fn": "ERC1155Upgradeable.safeBatchTransferFrom",
      "offset": [
        4591,
        5033
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "666": {
      "op": "POP"
    },
    "667": {
      "fn": "ERC1155Upgradeable.safeBatchTransferFrom",
      "offset": [
        4591,
        5033
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x1FE"
    },
    "670": {
      "fn": "ERC1155Upgradeable.safeBatchTransferFrom",
      "offset": [
        4591,
        5033
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x2A8"
    },
    "673": {
      "fn": "ERC1155Upgradeable.safeBatchTransferFrom",
      "offset": [
        4591,
        5033
      ],
      "op": "CALLDATASIZE",
      "path": "32"
    },
    "674": {
      "fn": "ERC1155Upgradeable.safeBatchTransferFrom",
      "offset": [
        4591,
        5033
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x4"
    },
    "676": {
      "fn": "ERC1155Upgradeable.safeBatchTransferFrom",
      "offset": [
        4591,
        5033
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x470A"
    },
    "679": {
      "fn": "ERC1155Upgradeable.safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        4591,
        5033
      ],
      "op": "JUMP",
      "path": "32"
    },
    "680": {
      "fn": "ERC1155Upgradeable.safeBatchTransferFrom",
      "offset": [
        4591,
        5033
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "681": {
      "fn": "ERC1155Upgradeable.safeBatchTransferFrom",
      "offset": [
        4591,
        5033
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0xDB1"
    },
    "684": {
      "fn": "ERC1155Upgradeable.safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        4591,
        5033
      ],
      "op": "JUMP",
      "path": "32"
    },
    "685": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9398,
        9901
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "686": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9398,
        9901
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "687": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9398,
        9901
      ],
      "op": "DUP1",
      "path": "2"
    },
    "688": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9398,
        9901
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "689": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9398,
        9901
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2B9"
    },
    "692": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9398,
        9901
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "693": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9398,
        9901
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "695": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9398,
        9901
      ],
      "op": "DUP1",
      "path": "2"
    },
    "696": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9398,
        9901
      ],
      "op": "REVERT",
      "path": "2"
    },
    "697": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9398,
        9901
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "698": {
      "op": "POP"
    },
    "699": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9398,
        9901
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1FE"
    },
    "702": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9398,
        9901
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2C8"
    },
    "705": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9398,
        9901
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "706": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9398,
        9901
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "708": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9398,
        9901
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x47C5"
    },
    "711": {
      "fn": "BaseLoot.castCB",
      "jump": "i",
      "offset": [
        9398,
        9901
      ],
      "op": "JUMP",
      "path": "2"
    },
    "712": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9398,
        9901
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "713": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9398,
        9901
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE48"
    },
    "716": {
      "fn": "BaseLoot.castCB",
      "jump": "i",
      "offset": [
        9398,
        9901
      ],
      "op": "JUMP",
      "path": "2"
    },
    "717": {
      "fn": "BaseLoot.castRES",
      "offset": [
        9903,
        11251
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "718": {
      "fn": "BaseLoot.castRES",
      "offset": [
        9903,
        11251
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "719": {
      "fn": "BaseLoot.castRES",
      "offset": [
        9903,
        11251
      ],
      "op": "DUP1",
      "path": "2"
    },
    "720": {
      "fn": "BaseLoot.castRES",
      "offset": [
        9903,
        11251
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "721": {
      "fn": "BaseLoot.castRES",
      "offset": [
        9903,
        11251
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2D9"
    },
    "724": {
      "fn": "BaseLoot.castRES",
      "offset": [
        9903,
        11251
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "725": {
      "fn": "BaseLoot.castRES",
      "offset": [
        9903,
        11251
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "727": {
      "fn": "BaseLoot.castRES",
      "offset": [
        9903,
        11251
      ],
      "op": "DUP1",
      "path": "2"
    },
    "728": {
      "fn": "BaseLoot.castRES",
      "offset": [
        9903,
        11251
      ],
      "op": "REVERT",
      "path": "2"
    },
    "729": {
      "fn": "BaseLoot.castRES",
      "offset": [
        9903,
        11251
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "730": {
      "op": "POP"
    },
    "731": {
      "fn": "BaseLoot.castRES",
      "offset": [
        9903,
        11251
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x19B"
    },
    "734": {
      "fn": "BaseLoot.castRES",
      "offset": [
        9903,
        11251
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2E8"
    },
    "737": {
      "fn": "BaseLoot.castRES",
      "offset": [
        9903,
        11251
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "738": {
      "fn": "BaseLoot.castRES",
      "offset": [
        9903,
        11251
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "740": {
      "fn": "BaseLoot.castRES",
      "offset": [
        9903,
        11251
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x455D"
    },
    "743": {
      "fn": "BaseLoot.castRES",
      "jump": "i",
      "offset": [
        9903,
        11251
      ],
      "op": "JUMP",
      "path": "2"
    },
    "744": {
      "fn": "BaseLoot.castRES",
      "offset": [
        9903,
        11251
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "745": {
      "fn": "BaseLoot.castRES",
      "offset": [
        9903,
        11251
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x10A0"
    },
    "748": {
      "fn": "BaseLoot.castRES",
      "jump": "i",
      "offset": [
        9903,
        11251
      ],
      "op": "JUMP",
      "path": "2"
    },
    "749": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "offset": [
        3049,
        3573
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "750": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "offset": [
        3049,
        3573
      ],
      "op": "CALLVALUE",
      "path": "32"
    },
    "751": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "offset": [
        3049,
        3573
      ],
      "op": "DUP1",
      "path": "32"
    },
    "752": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "offset": [
        3049,
        3573
      ],
      "op": "ISZERO",
      "path": "32"
    },
    "753": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "offset": [
        3049,
        3573
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x2F9"
    },
    "756": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "offset": [
        3049,
        3573
      ],
      "op": "JUMPI",
      "path": "32"
    },
    "757": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "offset": [
        3049,
        3573
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x0"
    },
    "759": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "offset": [
        3049,
        3573
      ],
      "op": "DUP1",
      "path": "32"
    },
    "760": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "offset": [
        3049,
        3573
      ],
      "op": "REVERT",
      "path": "32"
    },
    "761": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "offset": [
        3049,
        3573
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "762": {
      "op": "POP"
    },
    "763": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "offset": [
        3049,
        3573
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x30D"
    },
    "766": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "offset": [
        3049,
        3573
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x308"
    },
    "769": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "offset": [
        3049,
        3573
      ],
      "op": "CALLDATASIZE",
      "path": "32"
    },
    "770": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "offset": [
        3049,
        3573
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x4"
    },
    "772": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "offset": [
        3049,
        3573
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x4817"
    },
    "775": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "jump": "i",
      "offset": [
        3049,
        3573
      ],
      "op": "JUMP",
      "path": "32"
    },
    "776": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "offset": [
        3049,
        3573
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "777": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "offset": [
        3049,
        3573
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x16C6"
    },
    "780": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "jump": "i",
      "offset": [
        3049,
        3573
      ],
      "op": "JUMP",
      "path": "32"
    },
    "781": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "offset": [
        3049,
        3573
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "782": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "offset": [
        3049,
        3573
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x40"
    },
    "784": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "offset": [
        3049,
        3573
      ],
      "op": "MLOAD",
      "path": "32"
    },
    "785": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "offset": [
        3049,
        3573
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x1A5"
    },
    "788": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "offset": [
        3049,
        3573
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "789": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "offset": [
        3049,
        3573
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "790": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "offset": [
        3049,
        3573
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x491E"
    },
    "793": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "jump": "i",
      "offset": [
        3049,
        3573
      ],
      "op": "JUMP",
      "path": "32"
    },
    "794": {
      "offset": [
        415,
        454
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "795": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "offset": [
        415,
        454
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "796": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "offset": [
        415,
        454
      ],
      "op": "DUP1",
      "path": "2"
    },
    "797": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "offset": [
        415,
        454
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "798": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "offset": [
        415,
        454
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x326"
    },
    "801": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "offset": [
        415,
        454
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "802": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "offset": [
        415,
        454
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "804": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "offset": [
        415,
        454
      ],
      "op": "DUP1",
      "path": "2"
    },
    "805": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "offset": [
        415,
        454
      ],
      "op": "REVERT",
      "path": "2"
    },
    "806": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "offset": [
        415,
        454
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "807": {
      "op": "POP"
    },
    "808": {
      "offset": [
        415,
        454
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1CE"
    },
    "811": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "offset": [
        415,
        454
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x335"
    },
    "814": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "offset": [
        415,
        454
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "815": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "offset": [
        415,
        454
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "817": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "offset": [
        415,
        454
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4931"
    },
    "820": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "jump": "i",
      "offset": [
        415,
        454
      ],
      "op": "JUMP",
      "path": "2"
    },
    "821": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "offset": [
        415,
        454
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "822": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "offset": [
        415,
        454
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "825": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "offset": [
        415,
        454
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "827": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "offset": [
        415,
        454
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "828": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "offset": [
        415,
        454
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "830": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "offset": [
        415,
        454
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "831": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "offset": [
        415,
        454
      ],
      "op": "DUP2",
      "path": "2"
    },
    "832": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "offset": [
        415,
        454
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "833": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "offset": [
        415,
        454
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "835": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "offset": [
        415,
        454
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "836": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "offset": [
        415,
        454
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "837": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "offset": [
        415,
        454
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "838": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "offset": [
        415,
        454
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "840": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "offset": [
        415,
        454
      ],
      "op": "AND",
      "path": "2"
    },
    "841": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "offset": [
        415,
        454
      ],
      "op": "DUP2",
      "path": "2"
    },
    "842": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "offset": [
        415,
        454
      ],
      "op": "JUMP",
      "path": "2"
    },
    "843": {
      "fn": "BaseLoot.initialize",
      "offset": [
        492,
        912
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "844": {
      "fn": "BaseLoot.initialize",
      "offset": [
        492,
        912
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "845": {
      "fn": "BaseLoot.initialize",
      "offset": [
        492,
        912
      ],
      "op": "DUP1",
      "path": "2"
    },
    "846": {
      "fn": "BaseLoot.initialize",
      "offset": [
        492,
        912
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "847": {
      "fn": "BaseLoot.initialize",
      "offset": [
        492,
        912
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x357"
    },
    "850": {
      "fn": "BaseLoot.initialize",
      "offset": [
        492,
        912
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "851": {
      "fn": "BaseLoot.initialize",
      "offset": [
        492,
        912
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "853": {
      "fn": "BaseLoot.initialize",
      "offset": [
        492,
        912
      ],
      "op": "DUP1",
      "path": "2"
    },
    "854": {
      "fn": "BaseLoot.initialize",
      "offset": [
        492,
        912
      ],
      "op": "REVERT",
      "path": "2"
    },
    "855": {
      "fn": "BaseLoot.initialize",
      "offset": [
        492,
        912
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "856": {
      "op": "POP"
    },
    "857": {
      "fn": "BaseLoot.initialize",
      "offset": [
        492,
        912
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1FE"
    },
    "860": {
      "fn": "BaseLoot.initialize",
      "offset": [
        492,
        912
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x366"
    },
    "863": {
      "fn": "BaseLoot.initialize",
      "offset": [
        492,
        912
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "864": {
      "fn": "BaseLoot.initialize",
      "offset": [
        492,
        912
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "866": {
      "fn": "BaseLoot.initialize",
      "offset": [
        492,
        912
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x494E"
    },
    "869": {
      "fn": "BaseLoot.initialize",
      "jump": "i",
      "offset": [
        492,
        912
      ],
      "op": "JUMP",
      "path": "2"
    },
    "870": {
      "fn": "BaseLoot.initialize",
      "offset": [
        492,
        912
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "871": {
      "fn": "BaseLoot.initialize",
      "offset": [
        492,
        912
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x17EF"
    },
    "874": {
      "fn": "BaseLoot.initialize",
      "jump": "i",
      "offset": [
        492,
        912
      ],
      "op": "JUMP",
      "path": "2"
    },
    "875": {
      "fn": "BaseLoot.loot",
      "offset": [
        2204,
        3427
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "876": {
      "fn": "BaseLoot.loot",
      "offset": [
        2204,
        3427
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "877": {
      "fn": "BaseLoot.loot",
      "offset": [
        2204,
        3427
      ],
      "op": "DUP1",
      "path": "2"
    },
    "878": {
      "fn": "BaseLoot.loot",
      "offset": [
        2204,
        3427
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "879": {
      "fn": "BaseLoot.loot",
      "offset": [
        2204,
        3427
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x377"
    },
    "882": {
      "fn": "BaseLoot.loot",
      "offset": [
        2204,
        3427
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "883": {
      "fn": "BaseLoot.loot",
      "offset": [
        2204,
        3427
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "885": {
      "fn": "BaseLoot.loot",
      "offset": [
        2204,
        3427
      ],
      "op": "DUP1",
      "path": "2"
    },
    "886": {
      "fn": "BaseLoot.loot",
      "offset": [
        2204,
        3427
      ],
      "op": "REVERT",
      "path": "2"
    },
    "887": {
      "fn": "BaseLoot.loot",
      "offset": [
        2204,
        3427
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "888": {
      "op": "POP"
    },
    "889": {
      "fn": "BaseLoot.loot",
      "offset": [
        2204,
        3427
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x19B"
    },
    "892": {
      "fn": "BaseLoot.loot",
      "offset": [
        2204,
        3427
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x386"
    },
    "895": {
      "fn": "BaseLoot.loot",
      "offset": [
        2204,
        3427
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "896": {
      "fn": "BaseLoot.loot",
      "offset": [
        2204,
        3427
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "898": {
      "fn": "BaseLoot.loot",
      "offset": [
        2204,
        3427
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x455D"
    },
    "901": {
      "fn": "BaseLoot.loot",
      "jump": "i",
      "offset": [
        2204,
        3427
      ],
      "op": "JUMP",
      "path": "2"
    },
    "902": {
      "fn": "BaseLoot.loot",
      "offset": [
        2204,
        3427
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "903": {
      "fn": "BaseLoot.loot",
      "offset": [
        2204,
        3427
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x190A"
    },
    "906": {
      "fn": "BaseLoot.loot",
      "jump": "i",
      "offset": [
        2204,
        3427
      ],
      "op": "JUMP",
      "path": "2"
    },
    "907": {
      "fn": "ERC1155BurnableUpgradeable.burnBatch",
      "offset": [
        994,
        1347
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "908": {
      "fn": "ERC1155BurnableUpgradeable.burnBatch",
      "offset": [
        994,
        1347
      ],
      "op": "CALLVALUE",
      "path": "35"
    },
    "909": {
      "fn": "ERC1155BurnableUpgradeable.burnBatch",
      "offset": [
        994,
        1347
      ],
      "op": "DUP1",
      "path": "35"
    },
    "910": {
      "fn": "ERC1155BurnableUpgradeable.burnBatch",
      "offset": [
        994,
        1347
      ],
      "op": "ISZERO",
      "path": "35"
    },
    "911": {
      "fn": "ERC1155BurnableUpgradeable.burnBatch",
      "offset": [
        994,
        1347
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x397"
    },
    "914": {
      "fn": "ERC1155BurnableUpgradeable.burnBatch",
      "offset": [
        994,
        1347
      ],
      "op": "JUMPI",
      "path": "35"
    },
    "915": {
      "fn": "ERC1155BurnableUpgradeable.burnBatch",
      "offset": [
        994,
        1347
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x0"
    },
    "917": {
      "fn": "ERC1155BurnableUpgradeable.burnBatch",
      "offset": [
        994,
        1347
      ],
      "op": "DUP1",
      "path": "35"
    },
    "918": {
      "fn": "ERC1155BurnableUpgradeable.burnBatch",
      "offset": [
        994,
        1347
      ],
      "op": "REVERT",
      "path": "35"
    },
    "919": {
      "fn": "ERC1155BurnableUpgradeable.burnBatch",
      "offset": [
        994,
        1347
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "920": {
      "op": "POP"
    },
    "921": {
      "fn": "ERC1155BurnableUpgradeable.burnBatch",
      "offset": [
        994,
        1347
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x1FE"
    },
    "924": {
      "fn": "ERC1155BurnableUpgradeable.burnBatch",
      "offset": [
        994,
        1347
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x3A6"
    },
    "927": {
      "fn": "ERC1155BurnableUpgradeable.burnBatch",
      "offset": [
        994,
        1347
      ],
      "op": "CALLDATASIZE",
      "path": "35"
    },
    "928": {
      "fn": "ERC1155BurnableUpgradeable.burnBatch",
      "offset": [
        994,
        1347
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x4"
    },
    "930": {
      "fn": "ERC1155BurnableUpgradeable.burnBatch",
      "offset": [
        994,
        1347
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x49D6"
    },
    "933": {
      "fn": "ERC1155BurnableUpgradeable.burnBatch",
      "jump": "i",
      "offset": [
        994,
        1347
      ],
      "op": "JUMP",
      "path": "35"
    },
    "934": {
      "fn": "ERC1155BurnableUpgradeable.burnBatch",
      "offset": [
        994,
        1347
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "935": {
      "fn": "ERC1155BurnableUpgradeable.burnBatch",
      "offset": [
        994,
        1347
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x207B"
    },
    "938": {
      "fn": "ERC1155BurnableUpgradeable.burnBatch",
      "jump": "i",
      "offset": [
        994,
        1347
      ],
      "op": "JUMP",
      "path": "35"
    },
    "939": {
      "fn": "BaseLoot.setAddon",
      "offset": [
        1019,
        1200
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "940": {
      "fn": "BaseLoot.setAddon",
      "offset": [
        1019,
        1200
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "941": {
      "fn": "BaseLoot.setAddon",
      "offset": [
        1019,
        1200
      ],
      "op": "DUP1",
      "path": "2"
    },
    "942": {
      "fn": "BaseLoot.setAddon",
      "offset": [
        1019,
        1200
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "943": {
      "fn": "BaseLoot.setAddon",
      "offset": [
        1019,
        1200
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3B7"
    },
    "946": {
      "fn": "BaseLoot.setAddon",
      "offset": [
        1019,
        1200
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "947": {
      "fn": "BaseLoot.setAddon",
      "offset": [
        1019,
        1200
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "949": {
      "fn": "BaseLoot.setAddon",
      "offset": [
        1019,
        1200
      ],
      "op": "DUP1",
      "path": "2"
    },
    "950": {
      "fn": "BaseLoot.setAddon",
      "offset": [
        1019,
        1200
      ],
      "op": "REVERT",
      "path": "2"
    },
    "951": {
      "fn": "BaseLoot.setAddon",
      "offset": [
        1019,
        1200
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "952": {
      "op": "POP"
    },
    "953": {
      "fn": "BaseLoot.setAddon",
      "offset": [
        1019,
        1200
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1FE"
    },
    "956": {
      "fn": "BaseLoot.setAddon",
      "offset": [
        1019,
        1200
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3C6"
    },
    "959": {
      "fn": "BaseLoot.setAddon",
      "offset": [
        1019,
        1200
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "960": {
      "fn": "BaseLoot.setAddon",
      "offset": [
        1019,
        1200
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "962": {
      "fn": "BaseLoot.setAddon",
      "offset": [
        1019,
        1200
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4A4B"
    },
    "965": {
      "fn": "BaseLoot.setAddon",
      "jump": "i",
      "offset": [
        1019,
        1200
      ],
      "op": "JUMP",
      "path": "2"
    },
    "966": {
      "fn": "BaseLoot.setAddon",
      "offset": [
        1019,
        1200
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "967": {
      "fn": "BaseLoot.setAddon",
      "offset": [
        1019,
        1200
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x20BE"
    },
    "970": {
      "fn": "BaseLoot.setAddon",
      "jump": "i",
      "offset": [
        1019,
        1200
      ],
      "op": "JUMP",
      "path": "2"
    },
    "971": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5563,
        5916
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "972": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5563,
        5916
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "973": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5563,
        5916
      ],
      "op": "DUP1",
      "path": "2"
    },
    "974": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5563,
        5916
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "975": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5563,
        5916
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3D7"
    },
    "978": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5563,
        5916
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "979": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5563,
        5916
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "981": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5563,
        5916
      ],
      "op": "DUP1",
      "path": "2"
    },
    "982": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5563,
        5916
      ],
      "op": "REVERT",
      "path": "2"
    },
    "983": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5563,
        5916
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "984": {
      "op": "POP"
    },
    "985": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5563,
        5916
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1FE"
    },
    "988": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5563,
        5916
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3E6"
    },
    "991": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5563,
        5916
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "992": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5563,
        5916
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "994": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5563,
        5916
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4443"
    },
    "997": {
      "fn": "BaseLoot.castIS",
      "jump": "i",
      "offset": [
        5563,
        5916
      ],
      "op": "JUMP",
      "path": "2"
    },
    "998": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5563,
        5916
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "999": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5563,
        5916
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2144"
    },
    "1002": {
      "fn": "BaseLoot.castIS",
      "jump": "i",
      "offset": [
        5563,
        5916
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1003": {
      "fn": "BaseLoot.lootTo",
      "offset": [
        1846,
        2029
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1004": {
      "fn": "BaseLoot.lootTo",
      "offset": [
        1846,
        2029
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "1005": {
      "fn": "BaseLoot.lootTo",
      "offset": [
        1846,
        2029
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1006": {
      "fn": "BaseLoot.lootTo",
      "offset": [
        1846,
        2029
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1007": {
      "fn": "BaseLoot.lootTo",
      "offset": [
        1846,
        2029
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3F7"
    },
    "1010": {
      "fn": "BaseLoot.lootTo",
      "offset": [
        1846,
        2029
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1011": {
      "fn": "BaseLoot.lootTo",
      "offset": [
        1846,
        2029
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1013": {
      "fn": "BaseLoot.lootTo",
      "offset": [
        1846,
        2029
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1014": {
      "fn": "BaseLoot.lootTo",
      "offset": [
        1846,
        2029
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1015": {
      "fn": "BaseLoot.lootTo",
      "offset": [
        1846,
        2029
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1016": {
      "op": "POP"
    },
    "1017": {
      "fn": "BaseLoot.lootTo",
      "offset": [
        1846,
        2029
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1FE"
    },
    "1020": {
      "fn": "BaseLoot.lootTo",
      "offset": [
        1846,
        2029
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x406"
    },
    "1023": {
      "fn": "BaseLoot.lootTo",
      "offset": [
        1846,
        2029
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1024": {
      "fn": "BaseLoot.lootTo",
      "offset": [
        1846,
        2029
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1026": {
      "fn": "BaseLoot.lootTo",
      "offset": [
        1846,
        2029
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x44A9"
    },
    "1029": {
      "fn": "BaseLoot.lootTo",
      "jump": "i",
      "offset": [
        1846,
        2029
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1030": {
      "fn": "BaseLoot.lootTo",
      "offset": [
        1846,
        2029
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1031": {
      "fn": "BaseLoot.lootTo",
      "offset": [
        1846,
        2029
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x231D"
    },
    "1034": {
      "fn": "BaseLoot.lootTo",
      "jump": "i",
      "offset": [
        1846,
        2029
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1035": {
      "fn": "BaseLoot.getAddon",
      "offset": [
        914,
        1017
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1036": {
      "fn": "BaseLoot.getAddon",
      "offset": [
        914,
        1017
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "1037": {
      "fn": "BaseLoot.getAddon",
      "offset": [
        914,
        1017
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1038": {
      "fn": "BaseLoot.getAddon",
      "offset": [
        914,
        1017
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1039": {
      "fn": "BaseLoot.getAddon",
      "offset": [
        914,
        1017
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x417"
    },
    "1042": {
      "fn": "BaseLoot.getAddon",
      "offset": [
        914,
        1017
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1043": {
      "fn": "BaseLoot.getAddon",
      "offset": [
        914,
        1017
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1045": {
      "fn": "BaseLoot.getAddon",
      "offset": [
        914,
        1017
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1046": {
      "fn": "BaseLoot.getAddon",
      "offset": [
        914,
        1017
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1047": {
      "fn": "BaseLoot.getAddon",
      "offset": [
        914,
        1017
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1048": {
      "op": "POP"
    },
    "1049": {
      "fn": "BaseLoot.getAddon",
      "offset": [
        914,
        1017
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1CE"
    },
    "1052": {
      "fn": "BaseLoot.getAddon",
      "offset": [
        914,
        1017
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x426"
    },
    "1055": {
      "fn": "BaseLoot.getAddon",
      "offset": [
        914,
        1017
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1056": {
      "fn": "BaseLoot.getAddon",
      "offset": [
        914,
        1017
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1058": {
      "fn": "BaseLoot.getAddon",
      "offset": [
        914,
        1017
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4931"
    },
    "1061": {
      "fn": "BaseLoot.getAddon",
      "jump": "i",
      "offset": [
        914,
        1017
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1062": {
      "fn": "BaseLoot.getAddon",
      "offset": [
        914,
        1017
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1063": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1065": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1067": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1069": {
      "op": "SHL"
    },
    "1070": {
      "op": "SUB"
    },
    "1071": {
      "fn": "BaseLoot.getAddon",
      "offset": [
        994,
        1009
      ],
      "op": "AND",
      "path": "2",
      "statement": 0
    },
    "1072": {
      "fn": "BaseLoot.getAddon",
      "offset": [
        970,
        974
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1074": {
      "fn": "BaseLoot.getAddon",
      "offset": [
        994,
        1009
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1075": {
      "fn": "BaseLoot.getAddon",
      "offset": [
        994,
        1009
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1076": {
      "fn": "BaseLoot.getAddon",
      "offset": [
        994,
        1009
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1077": {
      "fn": "BaseLoot.getAddon",
      "offset": [
        994,
        1001
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "1080": {
      "fn": "BaseLoot.getAddon",
      "offset": [
        994,
        1009
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1082": {
      "fn": "BaseLoot.getAddon",
      "offset": [
        994,
        1009
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1083": {
      "fn": "BaseLoot.getAddon",
      "offset": [
        994,
        1009
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1085": {
      "fn": "BaseLoot.getAddon",
      "offset": [
        994,
        1009
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1086": {
      "fn": "BaseLoot.getAddon",
      "offset": [
        994,
        1009
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1087": {
      "fn": "BaseLoot.getAddon",
      "offset": [
        994,
        1009
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1088": {
      "fn": "BaseLoot.getAddon",
      "offset": [
        994,
        1009
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "1090": {
      "fn": "BaseLoot.getAddon",
      "offset": [
        994,
        1009
      ],
      "op": "AND",
      "path": "2"
    },
    "1091": {
      "fn": "BaseLoot.getAddon",
      "offset": [
        994,
        1009
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1092": {
      "fn": "BaseLoot.getAddon",
      "offset": [
        914,
        1017
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1093": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3450,
        4825
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1094": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3450,
        4825
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "1095": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3450,
        4825
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1096": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3450,
        4825
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1097": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3450,
        4825
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x451"
    },
    "1100": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3450,
        4825
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1101": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3450,
        4825
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1103": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3450,
        4825
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1104": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3450,
        4825
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1105": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3450,
        4825
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1106": {
      "op": "POP"
    },
    "1107": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3450,
        4825
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1FE"
    },
    "1110": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3450,
        4825
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x460"
    },
    "1113": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3450,
        4825
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1114": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3450,
        4825
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1116": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3450,
        4825
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x44A9"
    },
    "1119": {
      "fn": "BaseLoot.castDF",
      "jump": "i",
      "offset": [
        3450,
        4825
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1120": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3450,
        4825
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1121": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3450,
        4825
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x23AA"
    },
    "1124": {
      "fn": "BaseLoot.castDF",
      "jump": "i",
      "offset": [
        3450,
        4825
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1125": {
      "fn": "ERC1155Upgradeable.setApprovalForAll",
      "offset": [
        3646,
        3801
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "1126": {
      "fn": "ERC1155Upgradeable.setApprovalForAll",
      "offset": [
        3646,
        3801
      ],
      "op": "CALLVALUE",
      "path": "32"
    },
    "1127": {
      "fn": "ERC1155Upgradeable.setApprovalForAll",
      "offset": [
        3646,
        3801
      ],
      "op": "DUP1",
      "path": "32"
    },
    "1128": {
      "fn": "ERC1155Upgradeable.setApprovalForAll",
      "offset": [
        3646,
        3801
      ],
      "op": "ISZERO",
      "path": "32"
    },
    "1129": {
      "fn": "ERC1155Upgradeable.setApprovalForAll",
      "offset": [
        3646,
        3801
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x471"
    },
    "1132": {
      "fn": "ERC1155Upgradeable.setApprovalForAll",
      "offset": [
        3646,
        3801
      ],
      "op": "JUMPI",
      "path": "32"
    },
    "1133": {
      "fn": "ERC1155Upgradeable.setApprovalForAll",
      "offset": [
        3646,
        3801
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x0"
    },
    "1135": {
      "fn": "ERC1155Upgradeable.setApprovalForAll",
      "offset": [
        3646,
        3801
      ],
      "op": "DUP1",
      "path": "32"
    },
    "1136": {
      "fn": "ERC1155Upgradeable.setApprovalForAll",
      "offset": [
        3646,
        3801
      ],
      "op": "REVERT",
      "path": "32"
    },
    "1137": {
      "fn": "ERC1155Upgradeable.setApprovalForAll",
      "offset": [
        3646,
        3801
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "1138": {
      "op": "POP"
    },
    "1139": {
      "fn": "ERC1155Upgradeable.setApprovalForAll",
      "offset": [
        3646,
        3801
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x1FE"
    },
    "1142": {
      "fn": "ERC1155Upgradeable.setApprovalForAll",
      "offset": [
        3646,
        3801
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x480"
    },
    "1145": {
      "fn": "ERC1155Upgradeable.setApprovalForAll",
      "offset": [
        3646,
        3801
      ],
      "op": "CALLDATASIZE",
      "path": "32"
    },
    "1146": {
      "fn": "ERC1155Upgradeable.setApprovalForAll",
      "offset": [
        3646,
        3801
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x4"
    },
    "1148": {
      "fn": "ERC1155Upgradeable.setApprovalForAll",
      "offset": [
        3646,
        3801
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x4A4B"
    },
    "1151": {
      "fn": "ERC1155Upgradeable.setApprovalForAll",
      "jump": "i",
      "offset": [
        3646,
        3801
      ],
      "op": "JUMP",
      "path": "32"
    },
    "1152": {
      "fn": "ERC1155Upgradeable.setApprovalForAll",
      "offset": [
        3646,
        3801
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "1153": {
      "fn": "ERC1155Upgradeable.setApprovalForAll",
      "offset": [
        3646,
        3801
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x2B91"
    },
    "1156": {
      "fn": "ERC1155Upgradeable.setApprovalForAll",
      "jump": "i",
      "offset": [
        3646,
        3801
      ],
      "op": "JUMP",
      "path": "32"
    },
    "1157": {
      "fn": "BaseLoot.castLS",
      "offset": [
        9337,
        9373
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1158": {
      "fn": "BaseLoot.castLS",
      "offset": [
        9337,
        9373
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "1159": {
      "fn": "BaseLoot.castLS",
      "offset": [
        9337,
        9373
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1160": {
      "fn": "BaseLoot.castLS",
      "offset": [
        9337,
        9373
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1161": {
      "fn": "BaseLoot.castLS",
      "offset": [
        9337,
        9373
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1FE"
    },
    "1164": {
      "fn": "BaseLoot.castLS",
      "offset": [
        9337,
        9373
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1165": {
      "fn": "BaseLoot.castLS",
      "offset": [
        9337,
        9373
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1167": {
      "fn": "BaseLoot.castLS",
      "offset": [
        9337,
        9373
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1168": {
      "fn": "BaseLoot.castLS",
      "offset": [
        9337,
        9373
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1169": {
      "fn": "BaseLoot.setLooted",
      "offset": [
        1515,
        1719
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1170": {
      "fn": "BaseLoot.setLooted",
      "offset": [
        1515,
        1719
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "1171": {
      "fn": "BaseLoot.setLooted",
      "offset": [
        1515,
        1719
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1172": {
      "fn": "BaseLoot.setLooted",
      "offset": [
        1515,
        1719
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1173": {
      "fn": "BaseLoot.setLooted",
      "offset": [
        1515,
        1719
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x49D"
    },
    "1176": {
      "fn": "BaseLoot.setLooted",
      "offset": [
        1515,
        1719
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1177": {
      "fn": "BaseLoot.setLooted",
      "offset": [
        1515,
        1719
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1179": {
      "fn": "BaseLoot.setLooted",
      "offset": [
        1515,
        1719
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1180": {
      "fn": "BaseLoot.setLooted",
      "offset": [
        1515,
        1719
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1181": {
      "fn": "BaseLoot.setLooted",
      "offset": [
        1515,
        1719
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1182": {
      "op": "POP"
    },
    "1183": {
      "fn": "BaseLoot.setLooted",
      "offset": [
        1515,
        1719
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1FE"
    },
    "1186": {
      "fn": "BaseLoot.setLooted",
      "offset": [
        1515,
        1719
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4AC"
    },
    "1189": {
      "fn": "BaseLoot.setLooted",
      "offset": [
        1515,
        1719
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1190": {
      "fn": "BaseLoot.setLooted",
      "offset": [
        1515,
        1719
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1192": {
      "fn": "BaseLoot.setLooted",
      "offset": [
        1515,
        1719
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4A84"
    },
    "1195": {
      "fn": "BaseLoot.setLooted",
      "jump": "i",
      "offset": [
        1515,
        1719
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1196": {
      "fn": "BaseLoot.setLooted",
      "offset": [
        1515,
        1719
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1197": {
      "fn": "BaseLoot.setLooted",
      "offset": [
        1515,
        1719
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2BA0"
    },
    "1200": {
      "fn": "BaseLoot.setLooted",
      "jump": "i",
      "offset": [
        1515,
        1719
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1201": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6376,
        9208
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1202": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6376,
        9208
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "1203": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6376,
        9208
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1204": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6376,
        9208
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1205": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6376,
        9208
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4BD"
    },
    "1208": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6376,
        9208
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1209": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6376,
        9208
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1211": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6376,
        9208
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1212": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6376,
        9208
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1213": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6376,
        9208
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1214": {
      "op": "POP"
    },
    "1215": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6376,
        9208
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4D1"
    },
    "1218": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6376,
        9208
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4CC"
    },
    "1221": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6376,
        9208
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1222": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6376,
        9208
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1224": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6376,
        9208
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4ACE"
    },
    "1227": {
      "fn": "BaseLoot.activateAO",
      "jump": "i",
      "offset": [
        6376,
        9208
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1228": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6376,
        9208
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1229": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6376,
        9208
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2C39"
    },
    "1232": {
      "fn": "BaseLoot.activateAO",
      "jump": "i",
      "offset": [
        6376,
        9208
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1233": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6376,
        9208
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1234": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6376,
        9208
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1236": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6376,
        9208
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1237": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6376,
        9208
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1A5"
    },
    "1240": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6376,
        9208
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1241": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6376,
        9208
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1242": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1244": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "1246": {
      "op": "DUP3"
    },
    "1247": {
      "op": "ADD"
    },
    "1248": {
      "op": "SWAP1"
    },
    "1249": {
      "op": "POP"
    },
    "1250": {
      "op": "DUP3"
    },
    "1251": {
      "op": "MLOAD"
    },
    "1252": {
      "op": "DUP3"
    },
    "1253": {
      "op": "MSTORE"
    },
    "1254": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1256": {
      "op": "DUP4"
    },
    "1257": {
      "op": "ADD"
    },
    "1258": {
      "op": "MLOAD"
    },
    "1259": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1261": {
      "op": "DUP4"
    },
    "1262": {
      "op": "ADD"
    },
    "1263": {
      "op": "MSTORE"
    },
    "1264": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1266": {
      "op": "DUP4"
    },
    "1267": {
      "op": "ADD"
    },
    "1268": {
      "op": "MLOAD"
    },
    "1269": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1271": {
      "op": "DUP4"
    },
    "1272": {
      "op": "ADD"
    },
    "1273": {
      "op": "MSTORE"
    },
    "1274": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1276": {
      "op": "DUP4"
    },
    "1277": {
      "op": "ADD"
    },
    "1278": {
      "op": "MLOAD"
    },
    "1279": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1281": {
      "op": "DUP4"
    },
    "1282": {
      "op": "ADD"
    },
    "1283": {
      "op": "MSTORE"
    },
    "1284": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1286": {
      "op": "DUP4"
    },
    "1287": {
      "op": "ADD"
    },
    "1288": {
      "op": "MLOAD"
    },
    "1289": {
      "op": "MLOAD"
    },
    "1290": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1292": {
      "op": "DUP4"
    },
    "1293": {
      "op": "ADD"
    },
    "1294": {
      "op": "MSTORE"
    },
    "1295": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1297": {
      "op": "DUP4"
    },
    "1298": {
      "op": "ADD"
    },
    "1299": {
      "op": "MLOAD"
    },
    "1300": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1302": {
      "op": "DUP4"
    },
    "1303": {
      "op": "ADD"
    },
    "1304": {
      "op": "MSTORE"
    },
    "1305": {
      "op": "SWAP3"
    },
    "1306": {
      "op": "SWAP2"
    },
    "1307": {
      "op": "POP"
    },
    "1308": {
      "op": "POP"
    },
    "1309": {
      "op": "JUMP"
    },
    "1310": {
      "fn": "ERC1155Upgradeable.isApprovedForAll",
      "offset": [
        3873,
        4041
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "1311": {
      "fn": "ERC1155Upgradeable.isApprovedForAll",
      "offset": [
        3873,
        4041
      ],
      "op": "CALLVALUE",
      "path": "32"
    },
    "1312": {
      "fn": "ERC1155Upgradeable.isApprovedForAll",
      "offset": [
        3873,
        4041
      ],
      "op": "DUP1",
      "path": "32"
    },
    "1313": {
      "fn": "ERC1155Upgradeable.isApprovedForAll",
      "offset": [
        3873,
        4041
      ],
      "op": "ISZERO",
      "path": "32"
    },
    "1314": {
      "fn": "ERC1155Upgradeable.isApprovedForAll",
      "offset": [
        3873,
        4041
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x52A"
    },
    "1317": {
      "fn": "ERC1155Upgradeable.isApprovedForAll",
      "offset": [
        3873,
        4041
      ],
      "op": "JUMPI",
      "path": "32"
    },
    "1318": {
      "fn": "ERC1155Upgradeable.isApprovedForAll",
      "offset": [
        3873,
        4041
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x0"
    },
    "1320": {
      "fn": "ERC1155Upgradeable.isApprovedForAll",
      "offset": [
        3873,
        4041
      ],
      "op": "DUP1",
      "path": "32"
    },
    "1321": {
      "fn": "ERC1155Upgradeable.isApprovedForAll",
      "offset": [
        3873,
        4041
      ],
      "op": "REVERT",
      "path": "32"
    },
    "1322": {
      "fn": "ERC1155Upgradeable.isApprovedForAll",
      "offset": [
        3873,
        4041
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "1323": {
      "op": "POP"
    },
    "1324": {
      "fn": "ERC1155Upgradeable.isApprovedForAll",
      "offset": [
        3873,
        4041
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x1CE"
    },
    "1327": {
      "fn": "ERC1155Upgradeable.isApprovedForAll",
      "offset": [
        3873,
        4041
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x539"
    },
    "1330": {
      "fn": "ERC1155Upgradeable.isApprovedForAll",
      "offset": [
        3873,
        4041
      ],
      "op": "CALLDATASIZE",
      "path": "32"
    },
    "1331": {
      "fn": "ERC1155Upgradeable.isApprovedForAll",
      "offset": [
        3873,
        4041
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x4"
    },
    "1333": {
      "fn": "ERC1155Upgradeable.isApprovedForAll",
      "offset": [
        3873,
        4041
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x4B12"
    },
    "1336": {
      "fn": "ERC1155Upgradeable.isApprovedForAll",
      "jump": "i",
      "offset": [
        3873,
        4041
      ],
      "op": "JUMP",
      "path": "32"
    },
    "1337": {
      "fn": "ERC1155Upgradeable.isApprovedForAll",
      "offset": [
        3873,
        4041
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "1338": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1340": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1342": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1344": {
      "op": "SHL"
    },
    "1345": {
      "op": "SUB"
    },
    "1346": {
      "fn": "ERC1155Upgradeable.isApprovedForAll",
      "offset": [
        3996,
        4023
      ],
      "op": "SWAP2",
      "path": "32",
      "statement": 1
    },
    "1347": {
      "fn": "ERC1155Upgradeable.isApprovedForAll",
      "offset": [
        3996,
        4023
      ],
      "op": "DUP3",
      "path": "32"
    },
    "1348": {
      "fn": "ERC1155Upgradeable.isApprovedForAll",
      "offset": [
        3996,
        4023
      ],
      "op": "AND",
      "path": "32"
    },
    "1349": {
      "fn": "ERC1155Upgradeable.isApprovedForAll",
      "offset": [
        3972,
        3976
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x0"
    },
    "1351": {
      "fn": "ERC1155Upgradeable.isApprovedForAll",
      "offset": [
        3996,
        4023
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "1352": {
      "fn": "ERC1155Upgradeable.isApprovedForAll",
      "offset": [
        3996,
        4023
      ],
      "op": "DUP2",
      "path": "32"
    },
    "1353": {
      "fn": "ERC1155Upgradeable.isApprovedForAll",
      "offset": [
        3996,
        4023
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "1354": {
      "fn": "ERC1155Upgradeable.isApprovedForAll",
      "offset": [
        3996,
        4014
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x66"
    },
    "1356": {
      "fn": "ERC1155Upgradeable.isApprovedForAll",
      "offset": [
        3996,
        4023
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x20"
    },
    "1358": {
      "fn": "ERC1155Upgradeable.isApprovedForAll",
      "offset": [
        3996,
        4023
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "1359": {
      "fn": "ERC1155Upgradeable.isApprovedForAll",
      "offset": [
        3996,
        4023
      ],
      "op": "DUP2",
      "path": "32"
    },
    "1360": {
      "fn": "ERC1155Upgradeable.isApprovedForAll",
      "offset": [
        3996,
        4023
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "1361": {
      "fn": "ERC1155Upgradeable.isApprovedForAll",
      "offset": [
        3996,
        4023
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x40"
    },
    "1363": {
      "fn": "ERC1155Upgradeable.isApprovedForAll",
      "offset": [
        3996,
        4023
      ],
      "op": "DUP1",
      "path": "32"
    },
    "1364": {
      "fn": "ERC1155Upgradeable.isApprovedForAll",
      "offset": [
        3996,
        4023
      ],
      "op": "DUP4",
      "path": "32"
    },
    "1365": {
      "fn": "ERC1155Upgradeable.isApprovedForAll",
      "offset": [
        3996,
        4023
      ],
      "op": "KECCAK256",
      "path": "32"
    },
    "1366": {
      "fn": "ERC1155Upgradeable.isApprovedForAll",
      "offset": [
        3996,
        4033
      ],
      "op": "SWAP4",
      "path": "32"
    },
    "1367": {
      "fn": "ERC1155Upgradeable.isApprovedForAll",
      "offset": [
        3996,
        4033
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "1368": {
      "fn": "ERC1155Upgradeable.isApprovedForAll",
      "offset": [
        3996,
        4033
      ],
      "op": "SWAP5",
      "path": "32"
    },
    "1369": {
      "fn": "ERC1155Upgradeable.isApprovedForAll",
      "offset": [
        3996,
        4033
      ],
      "op": "AND",
      "path": "32"
    },
    "1370": {
      "fn": "ERC1155Upgradeable.isApprovedForAll",
      "offset": [
        3996,
        4033
      ],
      "op": "DUP3",
      "path": "32"
    },
    "1371": {
      "fn": "ERC1155Upgradeable.isApprovedForAll",
      "offset": [
        3996,
        4033
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "1372": {
      "fn": "ERC1155Upgradeable.isApprovedForAll",
      "offset": [
        3996,
        4033
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "1373": {
      "fn": "ERC1155Upgradeable.isApprovedForAll",
      "offset": [
        3996,
        4033
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "1374": {
      "fn": "ERC1155Upgradeable.isApprovedForAll",
      "offset": [
        3996,
        4033
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "1375": {
      "fn": "ERC1155Upgradeable.isApprovedForAll",
      "offset": [
        3996,
        4033
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "1376": {
      "fn": "ERC1155Upgradeable.isApprovedForAll",
      "offset": [
        3996,
        4033
      ],
      "op": "KECCAK256",
      "path": "32"
    },
    "1377": {
      "fn": "ERC1155Upgradeable.isApprovedForAll",
      "offset": [
        3996,
        4033
      ],
      "op": "SLOAD",
      "path": "32"
    },
    "1378": {
      "fn": "ERC1155Upgradeable.isApprovedForAll",
      "offset": [
        3996,
        4033
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0xFF"
    },
    "1380": {
      "fn": "ERC1155Upgradeable.isApprovedForAll",
      "offset": [
        3996,
        4033
      ],
      "op": "AND",
      "path": "32"
    },
    "1381": {
      "fn": "ERC1155Upgradeable.isApprovedForAll",
      "offset": [
        3996,
        4033
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "1382": {
      "fn": "ERC1155Upgradeable.isApprovedForAll",
      "offset": [
        3873,
        4041
      ],
      "op": "JUMP",
      "path": "32"
    },
    "1383": {
      "fn": "ERC1155Upgradeable.safeTransferFrom",
      "offset": [
        4113,
        4514
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "1384": {
      "fn": "ERC1155Upgradeable.safeTransferFrom",
      "offset": [
        4113,
        4514
      ],
      "op": "CALLVALUE",
      "path": "32"
    },
    "1385": {
      "fn": "ERC1155Upgradeable.safeTransferFrom",
      "offset": [
        4113,
        4514
      ],
      "op": "DUP1",
      "path": "32"
    },
    "1386": {
      "fn": "ERC1155Upgradeable.safeTransferFrom",
      "offset": [
        4113,
        4514
      ],
      "op": "ISZERO",
      "path": "32"
    },
    "1387": {
      "fn": "ERC1155Upgradeable.safeTransferFrom",
      "offset": [
        4113,
        4514
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x573"
    },
    "1390": {
      "fn": "ERC1155Upgradeable.safeTransferFrom",
      "offset": [
        4113,
        4514
      ],
      "op": "JUMPI",
      "path": "32"
    },
    "1391": {
      "fn": "ERC1155Upgradeable.safeTransferFrom",
      "offset": [
        4113,
        4514
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x0"
    },
    "1393": {
      "fn": "ERC1155Upgradeable.safeTransferFrom",
      "offset": [
        4113,
        4514
      ],
      "op": "DUP1",
      "path": "32"
    },
    "1394": {
      "fn": "ERC1155Upgradeable.safeTransferFrom",
      "offset": [
        4113,
        4514
      ],
      "op": "REVERT",
      "path": "32"
    },
    "1395": {
      "fn": "ERC1155Upgradeable.safeTransferFrom",
      "offset": [
        4113,
        4514
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "1396": {
      "op": "POP"
    },
    "1397": {
      "fn": "ERC1155Upgradeable.safeTransferFrom",
      "offset": [
        4113,
        4514
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x1FE"
    },
    "1400": {
      "fn": "ERC1155Upgradeable.safeTransferFrom",
      "offset": [
        4113,
        4514
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x582"
    },
    "1403": {
      "fn": "ERC1155Upgradeable.safeTransferFrom",
      "offset": [
        4113,
        4514
      ],
      "op": "CALLDATASIZE",
      "path": "32"
    },
    "1404": {
      "fn": "ERC1155Upgradeable.safeTransferFrom",
      "offset": [
        4113,
        4514
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x4"
    },
    "1406": {
      "fn": "ERC1155Upgradeable.safeTransferFrom",
      "offset": [
        4113,
        4514
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x4B40"
    },
    "1409": {
      "fn": "ERC1155Upgradeable.safeTransferFrom",
      "jump": "i",
      "offset": [
        4113,
        4514
      ],
      "op": "JUMP",
      "path": "32"
    },
    "1410": {
      "fn": "ERC1155Upgradeable.safeTransferFrom",
      "offset": [
        4113,
        4514
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "1411": {
      "fn": "ERC1155Upgradeable.safeTransferFrom",
      "offset": [
        4113,
        4514
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x38F6"
    },
    "1414": {
      "fn": "ERC1155Upgradeable.safeTransferFrom",
      "jump": "i",
      "offset": [
        4113,
        4514
      ],
      "op": "JUMP",
      "path": "32"
    },
    "1415": {
      "fn": "ERC1155BurnableUpgradeable.burn",
      "offset": [
        665,
        986
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "1416": {
      "fn": "ERC1155BurnableUpgradeable.burn",
      "offset": [
        665,
        986
      ],
      "op": "CALLVALUE",
      "path": "35"
    },
    "1417": {
      "fn": "ERC1155BurnableUpgradeable.burn",
      "offset": [
        665,
        986
      ],
      "op": "DUP1",
      "path": "35"
    },
    "1418": {
      "fn": "ERC1155BurnableUpgradeable.burn",
      "offset": [
        665,
        986
      ],
      "op": "ISZERO",
      "path": "35"
    },
    "1419": {
      "fn": "ERC1155BurnableUpgradeable.burn",
      "offset": [
        665,
        986
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x593"
    },
    "1422": {
      "fn": "ERC1155BurnableUpgradeable.burn",
      "offset": [
        665,
        986
      ],
      "op": "JUMPI",
      "path": "35"
    },
    "1423": {
      "fn": "ERC1155BurnableUpgradeable.burn",
      "offset": [
        665,
        986
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x0"
    },
    "1425": {
      "fn": "ERC1155BurnableUpgradeable.burn",
      "offset": [
        665,
        986
      ],
      "op": "DUP1",
      "path": "35"
    },
    "1426": {
      "fn": "ERC1155BurnableUpgradeable.burn",
      "offset": [
        665,
        986
      ],
      "op": "REVERT",
      "path": "35"
    },
    "1427": {
      "fn": "ERC1155BurnableUpgradeable.burn",
      "offset": [
        665,
        986
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "1428": {
      "op": "POP"
    },
    "1429": {
      "fn": "ERC1155BurnableUpgradeable.burn",
      "offset": [
        665,
        986
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x1FE"
    },
    "1432": {
      "fn": "ERC1155BurnableUpgradeable.burn",
      "offset": [
        665,
        986
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x5A2"
    },
    "1435": {
      "fn": "ERC1155BurnableUpgradeable.burn",
      "offset": [
        665,
        986
      ],
      "op": "CALLDATASIZE",
      "path": "35"
    },
    "1436": {
      "fn": "ERC1155BurnableUpgradeable.burn",
      "offset": [
        665,
        986
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x4"
    },
    "1438": {
      "fn": "ERC1155BurnableUpgradeable.burn",
      "offset": [
        665,
        986
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x455D"
    },
    "1441": {
      "fn": "ERC1155BurnableUpgradeable.burn",
      "jump": "i",
      "offset": [
        665,
        986
      ],
      "op": "JUMP",
      "path": "35"
    },
    "1442": {
      "fn": "ERC1155BurnableUpgradeable.burn",
      "offset": [
        665,
        986
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "1443": {
      "fn": "ERC1155BurnableUpgradeable.burn",
      "offset": [
        665,
        986
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x393B"
    },
    "1446": {
      "fn": "ERC1155BurnableUpgradeable.burn",
      "jump": "i",
      "offset": [
        665,
        986
      ],
      "op": "JUMP",
      "path": "35"
    },
    "1447": {
      "fn": "ERC1155Upgradeable.balanceOf",
      "offset": [
        2652,
        2883
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "1448": {
      "fn": "ERC1155Upgradeable.balanceOf",
      "offset": [
        2738,
        2745
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x0"
    },
    "1450": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1452": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1454": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1456": {
      "op": "SHL"
    },
    "1457": {
      "op": "SUB"
    },
    "1458": {
      "fn": "ERC1155Upgradeable.balanceOf",
      "offset": [
        2766,
        2787
      ],
      "op": "DUP4",
      "path": "32",
      "statement": 2
    },
    "1459": {
      "branch": 221,
      "fn": "ERC1155Upgradeable.balanceOf",
      "offset": [
        2766,
        2787
      ],
      "op": "AND",
      "path": "32"
    },
    "1460": {
      "fn": "ERC1155Upgradeable.balanceOf",
      "offset": [
        2758,
        2835
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x618"
    },
    "1463": {
      "branch": 221,
      "fn": "ERC1155Upgradeable.balanceOf",
      "offset": [
        2758,
        2835
      ],
      "op": "JUMPI",
      "path": "32"
    },
    "1464": {
      "fn": "ERC1155Upgradeable.balanceOf",
      "offset": [
        2758,
        2835
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x40"
    },
    "1466": {
      "fn": "ERC1155Upgradeable.balanceOf",
      "offset": [
        2758,
        2835
      ],
      "op": "MLOAD",
      "path": "32"
    },
    "1467": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1471": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1473": {
      "op": "SHL"
    },
    "1474": {
      "fn": "ERC1155Upgradeable.balanceOf",
      "offset": [
        2758,
        2835
      ],
      "op": "DUP2",
      "path": "32"
    },
    "1475": {
      "fn": "ERC1155Upgradeable.balanceOf",
      "offset": [
        2758,
        2835
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "1476": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1478": {
      "fn": "ERC1155Upgradeable.balanceOf",
      "offset": [
        2758,
        2835
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x4"
    },
    "1480": {
      "fn": "ERC1155Upgradeable.balanceOf",
      "offset": [
        2758,
        2835
      ],
      "op": "DUP3",
      "path": "32"
    },
    "1481": {
      "fn": "ERC1155Upgradeable.balanceOf",
      "offset": [
        2758,
        2835
      ],
      "op": "ADD",
      "path": "32"
    },
    "1482": {
      "op": "MSTORE"
    },
    "1483": {
      "op": "PUSH1",
      "value": "0x2B"
    },
    "1485": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1487": {
      "op": "DUP3"
    },
    "1488": {
      "op": "ADD"
    },
    "1489": {
      "op": "MSTORE"
    },
    "1490": {
      "op": "PUSH32",
      "value": "0x455243313135353A2062616C616E636520717565727920666F7220746865207A"
    },
    "1523": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1525": {
      "op": "DUP3"
    },
    "1526": {
      "op": "ADD"
    },
    "1527": {
      "op": "MSTORE"
    },
    "1528": {
      "op": "PUSH11",
      "value": "0x65726F2061646472657373"
    },
    "1540": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "1542": {
      "op": "SHL"
    },
    "1543": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1545": {
      "op": "DUP3"
    },
    "1546": {
      "op": "ADD"
    },
    "1547": {
      "op": "MSTORE"
    },
    "1548": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1550": {
      "op": "ADD"
    },
    "1551": {
      "fn": "ERC1155Upgradeable.balanceOf",
      "offset": [
        2758,
        2835
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "1552": {
      "fn": "ERC1155Upgradeable.balanceOf",
      "offset": [
        2758,
        2835
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x40"
    },
    "1554": {
      "fn": "ERC1155Upgradeable.balanceOf",
      "offset": [
        2758,
        2835
      ],
      "op": "MLOAD",
      "path": "32"
    },
    "1555": {
      "fn": "ERC1155Upgradeable.balanceOf",
      "offset": [
        2758,
        2835
      ],
      "op": "DUP1",
      "path": "32"
    },
    "1556": {
      "fn": "ERC1155Upgradeable.balanceOf",
      "offset": [
        2758,
        2835
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "1557": {
      "fn": "ERC1155Upgradeable.balanceOf",
      "offset": [
        2758,
        2835
      ],
      "op": "SUB",
      "path": "32"
    },
    "1558": {
      "fn": "ERC1155Upgradeable.balanceOf",
      "offset": [
        2758,
        2835
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "1559": {
      "fn": "ERC1155Upgradeable.balanceOf",
      "offset": [
        2758,
        2835
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "32"
    },
    "1560": {
      "fn": "ERC1155Upgradeable.balanceOf",
      "offset": [
        2758,
        2835
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "1561": {
      "op": "POP"
    },
    "1562": {
      "fn": "ERC1155Upgradeable.balanceOf",
      "offset": [
        2853,
        2866
      ],
      "op": "PUSH1",
      "path": "32",
      "statement": 3,
      "value": "0x0"
    },
    "1564": {
      "fn": "ERC1155Upgradeable.balanceOf",
      "offset": [
        2853,
        2866
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "1565": {
      "fn": "ERC1155Upgradeable.balanceOf",
      "offset": [
        2853,
        2866
      ],
      "op": "DUP2",
      "path": "32"
    },
    "1566": {
      "fn": "ERC1155Upgradeable.balanceOf",
      "offset": [
        2853,
        2866
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "1567": {
      "fn": "ERC1155Upgradeable.balanceOf",
      "offset": [
        2853,
        2862
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x65"
    },
    "1569": {
      "fn": "ERC1155Upgradeable.balanceOf",
      "offset": [
        2853,
        2866
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x20"
    },
    "1571": {
      "fn": "ERC1155Upgradeable.balanceOf",
      "offset": [
        2853,
        2866
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "1572": {
      "fn": "ERC1155Upgradeable.balanceOf",
      "offset": [
        2853,
        2866
      ],
      "op": "DUP2",
      "path": "32"
    },
    "1573": {
      "fn": "ERC1155Upgradeable.balanceOf",
      "offset": [
        2853,
        2866
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "1574": {
      "fn": "ERC1155Upgradeable.balanceOf",
      "offset": [
        2853,
        2866
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x40"
    },
    "1576": {
      "fn": "ERC1155Upgradeable.balanceOf",
      "offset": [
        2853,
        2866
      ],
      "op": "DUP1",
      "path": "32"
    },
    "1577": {
      "fn": "ERC1155Upgradeable.balanceOf",
      "offset": [
        2853,
        2866
      ],
      "op": "DUP4",
      "path": "32"
    },
    "1578": {
      "fn": "ERC1155Upgradeable.balanceOf",
      "offset": [
        2853,
        2866
      ],
      "op": "KECCAK256",
      "path": "32"
    },
    "1579": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1581": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1583": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1585": {
      "op": "SHL"
    },
    "1586": {
      "op": "SUB"
    },
    "1587": {
      "fn": "ERC1155Upgradeable.balanceOf",
      "offset": [
        2853,
        2875
      ],
      "op": "SWAP5",
      "path": "32"
    },
    "1588": {
      "fn": "ERC1155Upgradeable.balanceOf",
      "offset": [
        2853,
        2875
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "1589": {
      "fn": "ERC1155Upgradeable.balanceOf",
      "offset": [
        2853,
        2875
      ],
      "op": "SWAP5",
      "path": "32"
    },
    "1590": {
      "fn": "ERC1155Upgradeable.balanceOf",
      "offset": [
        2853,
        2875
      ],
      "op": "AND",
      "path": "32"
    },
    "1591": {
      "fn": "ERC1155Upgradeable.balanceOf",
      "offset": [
        2853,
        2875
      ],
      "op": "DUP4",
      "path": "32"
    },
    "1592": {
      "fn": "ERC1155Upgradeable.balanceOf",
      "offset": [
        2853,
        2875
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "1593": {
      "fn": "ERC1155Upgradeable.balanceOf",
      "offset": [
        2853,
        2875
      ],
      "op": "SWAP3",
      "path": "32"
    },
    "1594": {
      "fn": "ERC1155Upgradeable.balanceOf",
      "offset": [
        2853,
        2875
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "1595": {
      "fn": "ERC1155Upgradeable.balanceOf",
      "offset": [
        2853,
        2875
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "1596": {
      "fn": "ERC1155Upgradeable.balanceOf",
      "offset": [
        2853,
        2875
      ],
      "op": "KECCAK256",
      "path": "32"
    },
    "1597": {
      "fn": "ERC1155Upgradeable.balanceOf",
      "offset": [
        2853,
        2875
      ],
      "op": "SLOAD",
      "path": "32"
    },
    "1598": {
      "fn": "ERC1155Upgradeable.balanceOf",
      "offset": [
        2853,
        2875
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "1599": {
      "fn": "ERC1155Upgradeable.balanceOf",
      "jump": "o",
      "offset": [
        2652,
        2883
      ],
      "op": "JUMP",
      "path": "32"
    },
    "1600": {
      "fn": "ERC1155Upgradeable.supportsInterface",
      "offset": [
        1631,
        1985
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "1601": {
      "fn": "ERC1155Upgradeable.supportsInterface",
      "offset": [
        1755,
        1759
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x0"
    },
    "1603": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1605": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1607": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1609": {
      "op": "SHL"
    },
    "1610": {
      "op": "SUB"
    },
    "1611": {
      "op": "NOT"
    },
    "1612": {
      "fn": "ERC1155Upgradeable.supportsInterface",
      "offset": [
        1792,
        1844
      ],
      "op": "DUP3",
      "path": "32",
      "statement": 4
    },
    "1613": {
      "fn": "ERC1155Upgradeable.supportsInterface",
      "offset": [
        1792,
        1844
      ],
      "op": "AND",
      "path": "32"
    },
    "1614": {
      "op": "PUSH4",
      "value": "0x6CDB3D13"
    },
    "1619": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "1621": {
      "op": "SHL"
    },
    "1622": {
      "fn": "ERC1155Upgradeable.supportsInterface",
      "offset": [
        1792,
        1844
      ],
      "op": "EQ",
      "path": "32"
    },
    "1623": {
      "fn": "ERC1155Upgradeable.supportsInterface",
      "offset": [
        1792,
        1844
      ],
      "op": "DUP1",
      "path": "32"
    },
    "1624": {
      "fn": "ERC1155Upgradeable.supportsInterface",
      "offset": [
        1792,
        1924
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x671"
    },
    "1627": {
      "fn": "ERC1155Upgradeable.supportsInterface",
      "offset": [
        1792,
        1924
      ],
      "op": "JUMPI",
      "path": "32"
    },
    "1628": {
      "op": "POP"
    },
    "1629": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1631": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1633": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1635": {
      "op": "SHL"
    },
    "1636": {
      "op": "SUB"
    },
    "1637": {
      "op": "NOT"
    },
    "1638": {
      "fn": "ERC1155Upgradeable.supportsInterface",
      "offset": [
        1861,
        1924
      ],
      "op": "DUP3",
      "path": "32"
    },
    "1639": {
      "fn": "ERC1155Upgradeable.supportsInterface",
      "offset": [
        1861,
        1924
      ],
      "op": "AND",
      "path": "32"
    },
    "1640": {
      "op": "PUSH4",
      "value": "0x3A24D07"
    },
    "1645": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "1647": {
      "op": "SHL"
    },
    "1648": {
      "fn": "ERC1155Upgradeable.supportsInterface",
      "offset": [
        1861,
        1924
      ],
      "op": "EQ",
      "path": "32"
    },
    "1649": {
      "fn": "ERC1155Upgradeable.supportsInterface",
      "offset": [
        1792,
        1924
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "1650": {
      "fn": "ERC1155Upgradeable.supportsInterface",
      "offset": [
        1792,
        1977
      ],
      "op": "DUP1",
      "path": "32"
    },
    "1651": {
      "fn": "ERC1155Upgradeable.supportsInterface",
      "offset": [
        1792,
        1977
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x68C"
    },
    "1654": {
      "fn": "ERC1155Upgradeable.supportsInterface",
      "offset": [
        1792,
        1977
      ],
      "op": "JUMPI",
      "path": "32"
    },
    "1655": {
      "op": "POP"
    },
    "1656": {
      "op": "PUSH4",
      "value": "0x1FFC9A7"
    },
    "1661": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1663": {
      "op": "SHL"
    },
    "1664": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1666": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1668": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1670": {
      "op": "SHL"
    },
    "1671": {
      "op": "SUB"
    },
    "1672": {
      "op": "NOT"
    },
    "1673": {
      "fn": "ERC165Upgradeable.supportsInterface",
      "offset": [
        1200,
        1251
      ],
      "op": "DUP4",
      "path": "43",
      "statement": 5
    },
    "1674": {
      "fn": "ERC165Upgradeable.supportsInterface",
      "offset": [
        1200,
        1251
      ],
      "op": "AND",
      "path": "43"
    },
    "1675": {
      "fn": "ERC165Upgradeable.supportsInterface",
      "offset": [
        1200,
        1251
      ],
      "op": "EQ",
      "path": "43"
    },
    "1676": {
      "fn": "ERC1155Upgradeable.supportsInterface",
      "offset": [
        1941,
        1977
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "1677": {
      "fn": "ERC1155Upgradeable.supportsInterface",
      "offset": [
        1772,
        1977
      ],
      "op": "SWAP3",
      "path": "32"
    },
    "1678": {
      "fn": "ERC1155Upgradeable.supportsInterface",
      "offset": [
        1631,
        1985
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "1679": {
      "op": "POP"
    },
    "1680": {
      "op": "POP"
    },
    "1681": {
      "fn": "ERC1155Upgradeable.supportsInterface",
      "jump": "o",
      "offset": [
        1631,
        1985
      ],
      "op": "JUMP",
      "path": "32"
    },
    "1682": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        4827,
        5540
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1683": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        4960,
        4976
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1685": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        4960,
        4976
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1686": {
      "op": "PUSH4",
      "value": "0x43E8C3F7"
    },
    "1691": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "1693": {
      "op": "SHL"
    },
    "1694": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        4960,
        4976
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1695": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        4960,
        4976
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1696": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        4960,
        4976
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1698": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        4960,
        4976
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1699": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        4960,
        4976
      ],
      "op": "ADD",
      "path": "2"
    },
    "1700": {
      "op": "DUP3"
    },
    "1701": {
      "op": "SWAP1"
    },
    "1702": {
      "op": "MSTORE"
    },
    "1703": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        4904,
        4909
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1704": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        4904,
        4909
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1705": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        4887,
        4896
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1707": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        4887,
        4896
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1708": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        4887,
        4896
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1709": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        4887,
        4896
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1710": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1712": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1714": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1716": {
      "op": "SHL"
    },
    "1717": {
      "op": "SUB"
    },
    "1718": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        4960,
        4970
      ],
      "op": "DUP5",
      "path": "2"
    },
    "1719": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        4960,
        4970
      ],
      "op": "AND",
      "path": "2"
    },
    "1720": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        4960,
        4970
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1721": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        4960,
        4970
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x87D187EE"
    },
    "1726": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        4960,
        4970
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1727": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1729": {
      "op": "ADD"
    },
    "1730": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        4960,
        4976
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1732": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        4960,
        4976
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1733": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        4960,
        4976
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1734": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        4960,
        4976
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1735": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        4960,
        4976
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1736": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        4960,
        4976
      ],
      "op": "SUB",
      "path": "2"
    },
    "1737": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        4960,
        4976
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1738": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        4960,
        4976
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1740": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        4960,
        4976
      ],
      "op": "DUP8",
      "path": "2"
    },
    "1741": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        4960,
        4976
      ],
      "op": "GAS",
      "path": "2"
    },
    "1742": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        4960,
        4976
      ],
      "op": "CALL",
      "path": "2"
    },
    "1743": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        4960,
        4976
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1744": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        4960,
        4976
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1745": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        4960,
        4976
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1746": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        4960,
        4976
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6DF"
    },
    "1749": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        4960,
        4976
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1750": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        4960,
        4976
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "1751": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        4960,
        4976
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1753": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        4960,
        4976
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1754": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        4960,
        4976
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "1755": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        4960,
        4976
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "1756": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        4960,
        4976
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1758": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        4960,
        4976
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1759": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        4960,
        4976
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1760": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        4960,
        4976
      ],
      "op": "POP",
      "path": "2"
    },
    "1761": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        4960,
        4976
      ],
      "op": "POP",
      "path": "2"
    },
    "1762": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        4960,
        4976
      ],
      "op": "POP",
      "path": "2"
    },
    "1763": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        4960,
        4976
      ],
      "op": "POP",
      "path": "2"
    },
    "1764": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        4960,
        4976
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1766": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        4960,
        4976
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1767": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        4960,
        4976
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "1768": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        4960,
        4976
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "1770": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        4960,
        4976
      ],
      "op": "NOT",
      "path": "2"
    },
    "1771": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        4960,
        4976
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "1773": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        4960,
        4976
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1774": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        4960,
        4976
      ],
      "op": "ADD",
      "path": "2"
    },
    "1775": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        4960,
        4976
      ],
      "op": "AND",
      "path": "2"
    },
    "1776": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        4960,
        4976
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1777": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        4960,
        4976
      ],
      "op": "ADD",
      "path": "2"
    },
    "1778": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        4960,
        4976
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1779": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        4960,
        4976
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1781": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        4960,
        4976
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1782": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        4960,
        4976
      ],
      "op": "POP",
      "path": "2"
    },
    "1783": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        4960,
        4976
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1784": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        4960,
        4976
      ],
      "op": "ADD",
      "path": "2"
    },
    "1785": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        4960,
        4976
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1786": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        4960,
        4976
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x703"
    },
    "1789": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        4960,
        4976
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1790": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        4960,
        4976
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1791": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        4960,
        4976
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4BA8"
    },
    "1794": {
      "fn": "BaseLoot.activateIS",
      "jump": "i",
      "offset": [
        4960,
        4976
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1795": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        4960,
        4976
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1796": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5011,
        5029
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1798": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5011,
        5029
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1799": {
      "op": "PUSH4",
      "value": "0x6573C787"
    },
    "1804": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1806": {
      "op": "SHL"
    },
    "1807": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5011,
        5029
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1808": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5011,
        5029
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1809": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5011,
        5029
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1811": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5011,
        5029
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1812": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5011,
        5029
      ],
      "op": "ADD",
      "path": "2"
    },
    "1813": {
      "op": "DUP4"
    },
    "1814": {
      "op": "SWAP1"
    },
    "1815": {
      "op": "MSTORE"
    },
    "1816": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        4928,
        4976
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1817": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        4928,
        4976
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "1818": {
      "op": "POP"
    },
    "1819": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        4928,
        4976
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1820": {
      "op": "POP"
    },
    "1821": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        4994,
        5008
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1823": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        4994,
        5008
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1824": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1826": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1828": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1830": {
      "op": "SHL"
    },
    "1831": {
      "op": "SUB"
    },
    "1832": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5011,
        5021
      ],
      "op": "DUP6",
      "path": "2"
    },
    "1833": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5011,
        5021
      ],
      "op": "AND",
      "path": "2"
    },
    "1834": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5011,
        5021
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1835": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5011,
        5021
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x6573C787"
    },
    "1840": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5011,
        5021
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1841": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1843": {
      "op": "ADD"
    },
    "1844": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5011,
        5029
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1846": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5011,
        5029
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1848": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5011,
        5029
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1849": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5011,
        5029
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1850": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5011,
        5029
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1851": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5011,
        5029
      ],
      "op": "SUB",
      "path": "2"
    },
    "1852": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5011,
        5029
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1853": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5011,
        5029
      ],
      "op": "DUP7",
      "path": "2"
    },
    "1854": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5011,
        5029
      ],
      "op": "GAS",
      "path": "2"
    },
    "1855": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5011,
        5029
      ],
      "op": "STATICCALL",
      "path": "2"
    },
    "1856": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5011,
        5029
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1857": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5011,
        5029
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1858": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5011,
        5029
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1859": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5011,
        5029
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x750"
    },
    "1862": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5011,
        5029
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1863": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5011,
        5029
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "1864": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5011,
        5029
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1866": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5011,
        5029
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1867": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5011,
        5029
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "1868": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5011,
        5029
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "1869": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5011,
        5029
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1871": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5011,
        5029
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1872": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5011,
        5029
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1873": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5011,
        5029
      ],
      "op": "POP",
      "path": "2"
    },
    "1874": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5011,
        5029
      ],
      "op": "POP",
      "path": "2"
    },
    "1875": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5011,
        5029
      ],
      "op": "POP",
      "path": "2"
    },
    "1876": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5011,
        5029
      ],
      "op": "POP",
      "path": "2"
    },
    "1877": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5011,
        5029
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1879": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5011,
        5029
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1880": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5011,
        5029
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "1881": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5011,
        5029
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "1883": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5011,
        5029
      ],
      "op": "NOT",
      "path": "2"
    },
    "1884": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5011,
        5029
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "1886": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5011,
        5029
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1887": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5011,
        5029
      ],
      "op": "ADD",
      "path": "2"
    },
    "1888": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5011,
        5029
      ],
      "op": "AND",
      "path": "2"
    },
    "1889": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5011,
        5029
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1890": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5011,
        5029
      ],
      "op": "ADD",
      "path": "2"
    },
    "1891": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5011,
        5029
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1892": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5011,
        5029
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1894": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5011,
        5029
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1895": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5011,
        5029
      ],
      "op": "POP",
      "path": "2"
    },
    "1896": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5011,
        5029
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1897": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5011,
        5029
      ],
      "op": "ADD",
      "path": "2"
    },
    "1898": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5011,
        5029
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1899": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5011,
        5029
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x774"
    },
    "1902": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5011,
        5029
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1903": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5011,
        5029
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1904": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5011,
        5029
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4BCC"
    },
    "1907": {
      "fn": "BaseLoot.activateIS",
      "jump": "i",
      "offset": [
        5011,
        5029
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1908": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5011,
        5029
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1909": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        4994,
        5029
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1910": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        4994,
        5029
      ],
      "op": "POP",
      "path": "2"
    },
    "1911": {
      "branch": 157,
      "fn": "BaseLoot.activateIS",
      "offset": [
        5052,
        5061
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1912": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5048,
        5190
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7EB"
    },
    "1915": {
      "branch": 157,
      "fn": "BaseLoot.activateIS",
      "offset": [
        5048,
        5190
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1916": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5089,
        5139
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 6,
      "value": "0x40"
    },
    "1918": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5089,
        5139
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1919": {
      "op": "PUSH4",
      "value": "0x25B5E897"
    },
    "1924": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "1926": {
      "op": "SHL"
    },
    "1927": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5089,
        5139
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1928": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5089,
        5139
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1929": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1931": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1933": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1935": {
      "op": "SHL"
    },
    "1936": {
      "op": "SUB"
    },
    "1937": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5089,
        5100
      ],
      "op": "DUP6",
      "path": "2"
    },
    "1938": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5089,
        5100
      ],
      "op": "AND",
      "path": "2"
    },
    "1939": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5089,
        5100
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1940": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5089,
        5100
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x4B6BD12E"
    },
    "1945": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5089,
        5100
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1946": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5089,
        5139
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7B1"
    },
    "1949": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5089,
        5139
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1950": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5101,
        5105
      ],
      "op": "DUP9",
      "path": "2"
    },
    "1951": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5101,
        5105
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1952": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5101,
        5105
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1953": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5101,
        5105
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1954": {
      "offset": [
        2354,
        2356
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4B"
    },
    "1956": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        2354,
        2356
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1957": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5124,
        5125
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "1959": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5124,
        5125
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1960": {
      "offset": [
        4272,
        4273
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1962": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        4272,
        4273
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1963": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5089,
        5139
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1964": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5089,
        5139
      ],
      "op": "ADD",
      "path": "2"
    },
    "1965": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5089,
        5139
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4BE9"
    },
    "1968": {
      "fn": "BaseLoot.activateIS",
      "jump": "i",
      "offset": [
        5089,
        5139
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1969": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5089,
        5139
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1970": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5089,
        5139
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1972": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5089,
        5139
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1974": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5089,
        5139
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1975": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5089,
        5139
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1976": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5089,
        5139
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1977": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5089,
        5139
      ],
      "op": "SUB",
      "path": "2"
    },
    "1978": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5089,
        5139
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1979": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5089,
        5139
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1981": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5089,
        5139
      ],
      "op": "DUP8",
      "path": "2"
    },
    "1982": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5089,
        5139
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1983": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5089,
        5139
      ],
      "op": "EXTCODESIZE",
      "path": "2"
    },
    "1984": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5089,
        5139
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1985": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5089,
        5139
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1986": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5089,
        5139
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1987": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5089,
        5139
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7CB"
    },
    "1990": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5089,
        5139
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1991": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5089,
        5139
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1993": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5089,
        5139
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1994": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5089,
        5139
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1995": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5089,
        5139
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1996": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5089,
        5139
      ],
      "op": "POP",
      "path": "2"
    },
    "1997": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5089,
        5139
      ],
      "op": "GAS",
      "path": "2"
    },
    "1998": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5089,
        5139
      ],
      "op": "CALL",
      "path": "2"
    },
    "1999": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5089,
        5139
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2000": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5089,
        5139
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2001": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5089,
        5139
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2002": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5089,
        5139
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7DF"
    },
    "2005": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5089,
        5139
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2006": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5089,
        5139
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "2007": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5089,
        5139
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2009": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5089,
        5139
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2010": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5089,
        5139
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "2011": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5089,
        5139
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "2012": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5089,
        5139
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2014": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5089,
        5139
      ],
      "op": "REVERT",
      "path": "2"
    },
    "2015": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5089,
        5139
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2016": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5089,
        5139
      ],
      "op": "POP",
      "path": "2"
    },
    "2017": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5089,
        5139
      ],
      "op": "POP",
      "path": "2"
    },
    "2018": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5089,
        5139
      ],
      "op": "POP",
      "path": "2"
    },
    "2019": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5089,
        5139
      ],
      "op": "POP",
      "path": "2"
    },
    "2020": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5165,
        5172
      ],
      "op": "POP",
      "path": "2",
      "statement": 7
    },
    "2021": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5165,
        5172
      ],
      "op": "POP",
      "path": "2"
    },
    "2022": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5165,
        5172
      ],
      "op": "POP",
      "path": "2"
    },
    "2023": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5165,
        5172
      ],
      "op": "POP",
      "path": "2"
    },
    "2024": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        4827,
        5540
      ],
      "op": "POP",
      "path": "2"
    },
    "2025": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        4827,
        5540
      ],
      "op": "POP",
      "path": "2"
    },
    "2026": {
      "fn": "BaseLoot.activateIS",
      "jump": "o",
      "offset": [
        4827,
        5540
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2027": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5048,
        5190
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2028": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5211,
        5229
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2030": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5211,
        5229
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2031": {
      "op": "PUSH4",
      "value": "0x31A9108F"
    },
    "2036": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "2038": {
      "op": "SHL"
    },
    "2039": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5211,
        5229
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2040": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5211,
        5229
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2041": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5211,
        5229
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2043": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5211,
        5229
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2044": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5211,
        5229
      ],
      "op": "ADD",
      "path": "2"
    },
    "2045": {
      "op": "DUP7"
    },
    "2046": {
      "op": "SWAP1"
    },
    "2047": {
      "op": "MSTORE"
    },
    "2048": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5233,
        5243
      ],
      "op": "CALLER",
      "path": "2"
    },
    "2049": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5233,
        5243
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2050": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2052": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2054": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2056": {
      "op": "SHL"
    },
    "2057": {
      "op": "SUB"
    },
    "2058": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5211,
        5223
      ],
      "op": "DUP7",
      "path": "2"
    },
    "2059": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5211,
        5223
      ],
      "op": "AND",
      "path": "2"
    },
    "2060": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5211,
        5223
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2061": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5211,
        5223
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x6352211E"
    },
    "2066": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5211,
        5223
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2067": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2069": {
      "op": "ADD"
    },
    "2070": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5211,
        5229
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2072": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5211,
        5229
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2074": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5211,
        5229
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2075": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5211,
        5229
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2076": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5211,
        5229
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2077": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5211,
        5229
      ],
      "op": "SUB",
      "path": "2"
    },
    "2078": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5211,
        5229
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2079": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5211,
        5229
      ],
      "op": "DUP7",
      "path": "2"
    },
    "2080": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5211,
        5229
      ],
      "op": "GAS",
      "path": "2"
    },
    "2081": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5211,
        5229
      ],
      "op": "STATICCALL",
      "path": "2"
    },
    "2082": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5211,
        5229
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2083": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5211,
        5229
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2084": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5211,
        5229
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2085": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5211,
        5229
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x832"
    },
    "2088": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5211,
        5229
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2089": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5211,
        5229
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "2090": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5211,
        5229
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2092": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5211,
        5229
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2093": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5211,
        5229
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "2094": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5211,
        5229
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "2095": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5211,
        5229
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2097": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5211,
        5229
      ],
      "op": "REVERT",
      "path": "2"
    },
    "2098": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5211,
        5229
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2099": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5211,
        5229
      ],
      "op": "POP",
      "path": "2"
    },
    "2100": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5211,
        5229
      ],
      "op": "POP",
      "path": "2"
    },
    "2101": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5211,
        5229
      ],
      "op": "POP",
      "path": "2"
    },
    "2102": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5211,
        5229
      ],
      "op": "POP",
      "path": "2"
    },
    "2103": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5211,
        5229
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2105": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5211,
        5229
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2106": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5211,
        5229
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "2107": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5211,
        5229
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "2109": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5211,
        5229
      ],
      "op": "NOT",
      "path": "2"
    },
    "2110": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5211,
        5229
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "2112": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5211,
        5229
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2113": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5211,
        5229
      ],
      "op": "ADD",
      "path": "2"
    },
    "2114": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5211,
        5229
      ],
      "op": "AND",
      "path": "2"
    },
    "2115": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5211,
        5229
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2116": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5211,
        5229
      ],
      "op": "ADD",
      "path": "2"
    },
    "2117": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5211,
        5229
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2118": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5211,
        5229
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2120": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5211,
        5229
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2121": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5211,
        5229
      ],
      "op": "POP",
      "path": "2"
    },
    "2122": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5211,
        5229
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2123": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5211,
        5229
      ],
      "op": "ADD",
      "path": "2"
    },
    "2124": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5211,
        5229
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2125": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5211,
        5229
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x856"
    },
    "2128": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5211,
        5229
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2129": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5211,
        5229
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2130": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5211,
        5229
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4C0C"
    },
    "2133": {
      "fn": "BaseLoot.activateIS",
      "jump": "i",
      "offset": [
        5211,
        5229
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2134": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5211,
        5229
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2135": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2137": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2139": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2141": {
      "op": "SHL"
    },
    "2142": {
      "op": "SUB"
    },
    "2143": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5211,
        5243
      ],
      "op": "AND",
      "path": "2"
    },
    "2144": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5211,
        5243
      ],
      "op": "EQ",
      "path": "2"
    },
    "2145": {
      "branch": 158,
      "fn": "BaseLoot.activateIS",
      "offset": [
        5211,
        5243
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2146": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5211,
        5264
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2147": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5211,
        5264
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2148": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5211,
        5264
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x878"
    },
    "2151": {
      "branch": 158,
      "fn": "BaseLoot.activateIS",
      "offset": [
        5211,
        5264
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2152": {
      "op": "POP"
    },
    "2153": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5261,
        5264
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFB"
    },
    "2155": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5261,
        5264
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2156": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2158": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2160": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2162": {
      "op": "SHL"
    },
    "2163": {
      "op": "SUB"
    },
    "2164": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5261,
        5264
      ],
      "op": "AND",
      "path": "2"
    },
    "2165": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5247,
        5257
      ],
      "op": "CALLER",
      "path": "2"
    },
    "2166": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5247,
        5264
      ],
      "op": "EQ",
      "path": "2"
    },
    "2167": {
      "branch": 159,
      "fn": "BaseLoot.activateIS",
      "offset": [
        5247,
        5264
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2168": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5211,
        5264
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2169": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5208,
        5398
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2170": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5208,
        5398
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x8B3"
    },
    "2173": {
      "branch": 159,
      "fn": "BaseLoot.activateIS",
      "offset": [
        5208,
        5398
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2174": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5292,
        5347
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 8,
      "value": "0x40"
    },
    "2176": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5292,
        5347
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2177": {
      "op": "PUSH4",
      "value": "0x25B5E897"
    },
    "2182": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "2184": {
      "op": "SHL"
    },
    "2185": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5292,
        5347
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2186": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5292,
        5347
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2187": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2189": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2191": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2193": {
      "op": "SHL"
    },
    "2194": {
      "op": "SUB"
    },
    "2195": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5292,
        5303
      ],
      "op": "DUP6",
      "path": "2"
    },
    "2196": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5292,
        5303
      ],
      "op": "AND",
      "path": "2"
    },
    "2197": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5292,
        5303
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2198": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5292,
        5303
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x4B6BD12E"
    },
    "2203": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5292,
        5303
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2204": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5292,
        5347
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7B1"
    },
    "2207": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5292,
        5347
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2208": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5304,
        5308
      ],
      "op": "DUP9",
      "path": "2"
    },
    "2209": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5304,
        5308
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2210": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5304,
        5308
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2211": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5304,
        5308
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2212": {
      "offset": [
        2354,
        2356
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4B"
    },
    "2214": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        2354,
        2356
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2215": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5327,
        5328
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "2217": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5327,
        5328
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2218": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5327,
        5328
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2219": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5327,
        5328
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2220": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5292,
        5347
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2222": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5292,
        5347
      ],
      "op": "ADD",
      "path": "2"
    },
    "2223": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5292,
        5347
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4BE9"
    },
    "2226": {
      "fn": "BaseLoot.activateIS",
      "jump": "i",
      "offset": [
        5292,
        5347
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2227": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5208,
        5398
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2228": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5416,
        5447
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 9,
      "value": "0x40"
    },
    "2230": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5416,
        5447
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2231": {
      "op": "PUSH4",
      "value": "0x1554EE07"
    },
    "2236": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "2238": {
      "op": "SHL"
    },
    "2239": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5416,
        5447
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2240": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5416,
        5447
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2241": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5416,
        5447
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2243": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5416,
        5447
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2244": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5416,
        5447
      ],
      "op": "ADD",
      "path": "2"
    },
    "2245": {
      "op": "DUP7"
    },
    "2246": {
      "op": "SWAP1"
    },
    "2247": {
      "op": "MSTORE"
    },
    "2248": {
      "offset": [
        2354,
        2356
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4B"
    },
    "2250": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2252": {
      "op": "DUP3"
    },
    "2253": {
      "op": "ADD"
    },
    "2254": {
      "op": "MSTORE"
    },
    "2255": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5445,
        5446
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "2257": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2259": {
      "op": "DUP3"
    },
    "2260": {
      "op": "ADD"
    },
    "2261": {
      "op": "MSTORE"
    },
    "2262": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2264": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2266": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2268": {
      "op": "SHL"
    },
    "2269": {
      "op": "SUB"
    },
    "2270": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5416,
        5427
      ],
      "op": "DUP6",
      "path": "2"
    },
    "2271": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5416,
        5427
      ],
      "op": "AND",
      "path": "2"
    },
    "2272": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5416,
        5427
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2273": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5416,
        5427
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x5553B81C"
    },
    "2278": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5416,
        5427
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2279": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2281": {
      "op": "ADD"
    },
    "2282": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5416,
        5447
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2284": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5416,
        5447
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2286": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5416,
        5447
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2287": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5416,
        5447
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2288": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5416,
        5447
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2289": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5416,
        5447
      ],
      "op": "SUB",
      "path": "2"
    },
    "2290": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5416,
        5447
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2291": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5416,
        5447
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2293": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5416,
        5447
      ],
      "op": "DUP8",
      "path": "2"
    },
    "2294": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5416,
        5447
      ],
      "op": "GAS",
      "path": "2"
    },
    "2295": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5416,
        5447
      ],
      "op": "CALL",
      "path": "2"
    },
    "2296": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5416,
        5447
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2297": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5416,
        5447
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2298": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5416,
        5447
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2299": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5416,
        5447
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x908"
    },
    "2302": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5416,
        5447
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2303": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5416,
        5447
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "2304": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5416,
        5447
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2306": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5416,
        5447
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2307": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5416,
        5447
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "2308": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5416,
        5447
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "2309": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5416,
        5447
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2311": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5416,
        5447
      ],
      "op": "REVERT",
      "path": "2"
    },
    "2312": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5416,
        5447
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2313": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5416,
        5447
      ],
      "op": "POP",
      "path": "2"
    },
    "2314": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5416,
        5447
      ],
      "op": "POP",
      "path": "2"
    },
    "2315": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5416,
        5447
      ],
      "op": "POP",
      "path": "2"
    },
    "2316": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5416,
        5447
      ],
      "op": "POP",
      "path": "2"
    },
    "2317": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5416,
        5447
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2319": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5416,
        5447
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2320": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5416,
        5447
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "2321": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5416,
        5447
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "2323": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5416,
        5447
      ],
      "op": "NOT",
      "path": "2"
    },
    "2324": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5416,
        5447
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "2326": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5416,
        5447
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2327": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5416,
        5447
      ],
      "op": "ADD",
      "path": "2"
    },
    "2328": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5416,
        5447
      ],
      "op": "AND",
      "path": "2"
    },
    "2329": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5416,
        5447
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2330": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5416,
        5447
      ],
      "op": "ADD",
      "path": "2"
    },
    "2331": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5416,
        5447
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2332": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5416,
        5447
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2334": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5416,
        5447
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2335": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5416,
        5447
      ],
      "op": "POP",
      "path": "2"
    },
    "2336": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5416,
        5447
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2337": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5416,
        5447
      ],
      "op": "ADD",
      "path": "2"
    },
    "2338": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5416,
        5447
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2339": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5416,
        5447
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x92C"
    },
    "2342": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5416,
        5447
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2343": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5416,
        5447
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2344": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5416,
        5447
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4BCC"
    },
    "2347": {
      "fn": "BaseLoot.activateIS",
      "jump": "i",
      "offset": [
        5416,
        5447
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2348": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5416,
        5447
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2349": {
      "op": "POP"
    },
    "2350": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5451,
        5457
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 10,
      "value": "0xFE"
    },
    "2352": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5451,
        5457
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2353": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5451,
        5496
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2355": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5451,
        5496
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2356": {
      "op": "PUSH4",
      "value": "0x16B980F1"
    },
    "2361": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "2363": {
      "op": "SHL"
    },
    "2364": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5451,
        5496
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2365": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5451,
        5496
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2366": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2368": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2370": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2372": {
      "op": "SHL"
    },
    "2373": {
      "op": "SUB"
    },
    "2374": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5451,
        5457
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2375": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5451,
        5457
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2376": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5451,
        5457
      ],
      "op": "AND",
      "path": "2"
    },
    "2377": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5451,
        5457
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2378": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5451,
        5466
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x2D7301E2"
    },
    "2383": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5451,
        5466
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2384": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5451,
        5496
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x965"
    },
    "2387": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5451,
        5496
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2388": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5467,
        5472
      ],
      "op": "DUP10",
      "path": "2"
    },
    "2389": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5467,
        5472
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2390": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5474,
        5478
      ],
      "op": "DUP10",
      "path": "2"
    },
    "2391": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5474,
        5478
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2392": {
      "offset": [
        2354,
        2356
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4B"
    },
    "2394": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        2354,
        2356
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2395": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5451,
        5457
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "2397": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5451,
        5457
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2398": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5451,
        5496
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2400": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5451,
        5496
      ],
      "op": "ADD",
      "path": "2"
    },
    "2401": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5451,
        5496
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4C29"
    },
    "2404": {
      "fn": "BaseLoot.activateIS",
      "jump": "i",
      "offset": [
        5451,
        5496
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2405": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5451,
        5496
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2406": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5451,
        5496
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2408": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5451,
        5496
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2410": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5451,
        5496
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2411": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5451,
        5496
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2412": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5451,
        5496
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2413": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5451,
        5496
      ],
      "op": "SUB",
      "path": "2"
    },
    "2414": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5451,
        5496
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2415": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5451,
        5496
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2417": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5451,
        5496
      ],
      "op": "DUP8",
      "path": "2"
    },
    "2418": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5451,
        5496
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2419": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5451,
        5496
      ],
      "op": "EXTCODESIZE",
      "path": "2"
    },
    "2420": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5451,
        5496
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2421": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5451,
        5496
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2422": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5451,
        5496
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2423": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5451,
        5496
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x97F"
    },
    "2426": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5451,
        5496
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2427": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5451,
        5496
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2429": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5451,
        5496
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2430": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5451,
        5496
      ],
      "op": "REVERT",
      "path": "2"
    },
    "2431": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5451,
        5496
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2432": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5451,
        5496
      ],
      "op": "POP",
      "path": "2"
    },
    "2433": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5451,
        5496
      ],
      "op": "GAS",
      "path": "2"
    },
    "2434": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5451,
        5496
      ],
      "op": "CALL",
      "path": "2"
    },
    "2435": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5451,
        5496
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2436": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5451,
        5496
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2437": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5451,
        5496
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2438": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5451,
        5496
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x993"
    },
    "2441": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5451,
        5496
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2442": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5451,
        5496
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "2443": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5451,
        5496
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2445": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5451,
        5496
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2446": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5451,
        5496
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "2447": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5451,
        5496
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "2448": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5451,
        5496
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2450": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5451,
        5496
      ],
      "op": "REVERT",
      "path": "2"
    },
    "2451": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5451,
        5496
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2452": {
      "op": "POP"
    },
    "2453": {
      "op": "POP"
    },
    "2454": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5500,
        5506
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 11,
      "value": "0xFE"
    },
    "2456": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5500,
        5506
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2457": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5500,
        5536
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2459": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5500,
        5536
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2460": {
      "op": "PUSH4",
      "value": "0x9DFE841"
    },
    "2465": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2467": {
      "op": "SHL"
    },
    "2468": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5500,
        5536
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2469": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5500,
        5536
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2470": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2472": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2474": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2476": {
      "op": "SHL"
    },
    "2477": {
      "op": "SUB"
    },
    "2478": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5500,
        5506
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2479": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5500,
        5506
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2480": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5500,
        5506
      ],
      "op": "AND",
      "path": "2"
    },
    "2481": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5500,
        5506
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2482": {
      "op": "POP"
    },
    "2483": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5500,
        5514
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x9DFE841"
    },
    "2488": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5500,
        5514
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2489": {
      "op": "POP"
    },
    "2490": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5500,
        5536
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7B1"
    },
    "2493": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5500,
        5536
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2494": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5515,
        5520
      ],
      "op": "DUP10",
      "path": "2"
    },
    "2495": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5515,
        5520
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2496": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5522,
        5526
      ],
      "op": "DUP10",
      "path": "2"
    },
    "2497": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5522,
        5526
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2498": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5528,
        5535
      ],
      "op": "PUSH8",
      "path": "2",
      "value": "0xDE0B6B3A7640000"
    },
    "2507": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5528,
        5535
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2508": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5500,
        5536
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2510": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5500,
        5536
      ],
      "op": "ADD",
      "path": "2"
    },
    "2511": {
      "fn": "BaseLoot.activateIS",
      "offset": [
        5500,
        5536
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4C51"
    },
    "2514": {
      "fn": "BaseLoot.activateIS",
      "jump": "i",
      "offset": [
        5500,
        5536
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2515": {
      "fn": "BaseLoot.castGW",
      "offset": [
        5940,
        6367
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2516": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6089,
        6107
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 12,
      "value": "0x40"
    },
    "2518": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6089,
        6107
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2519": {
      "op": "PUSH4",
      "value": "0x31A9108F"
    },
    "2524": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "2526": {
      "op": "SHL"
    },
    "2527": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6089,
        6107
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2528": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6089,
        6107
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2529": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6089,
        6107
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2531": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6089,
        6107
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2532": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6089,
        6107
      ],
      "op": "ADD",
      "path": "2"
    },
    "2533": {
      "op": "DUP5"
    },
    "2534": {
      "op": "SWAP1"
    },
    "2535": {
      "op": "MSTORE"
    },
    "2536": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6057,
        6062
      ],
      "op": "DUP5",
      "path": "2"
    },
    "2537": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6057,
        6062
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2538": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6111,
        6121
      ],
      "op": "CALLER",
      "path": "2"
    },
    "2539": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6111,
        6121
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2540": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2542": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2544": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2546": {
      "op": "SHL"
    },
    "2547": {
      "op": "SUB"
    },
    "2548": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6089,
        6101
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2549": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6089,
        6101
      ],
      "op": "AND",
      "path": "2"
    },
    "2550": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6089,
        6101
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2551": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6089,
        6101
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x6352211E"
    },
    "2556": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6089,
        6101
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2557": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2559": {
      "op": "ADD"
    },
    "2560": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6089,
        6107
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2562": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6089,
        6107
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2564": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6089,
        6107
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2565": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6089,
        6107
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2566": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6089,
        6107
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2567": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6089,
        6107
      ],
      "op": "SUB",
      "path": "2"
    },
    "2568": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6089,
        6107
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2569": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6089,
        6107
      ],
      "op": "DUP7",
      "path": "2"
    },
    "2570": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6089,
        6107
      ],
      "op": "GAS",
      "path": "2"
    },
    "2571": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6089,
        6107
      ],
      "op": "STATICCALL",
      "path": "2"
    },
    "2572": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6089,
        6107
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2573": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6089,
        6107
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2574": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6089,
        6107
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2575": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6089,
        6107
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA1C"
    },
    "2578": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6089,
        6107
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2579": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6089,
        6107
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "2580": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6089,
        6107
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2582": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6089,
        6107
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2583": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6089,
        6107
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "2584": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6089,
        6107
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "2585": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6089,
        6107
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2587": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6089,
        6107
      ],
      "op": "REVERT",
      "path": "2"
    },
    "2588": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6089,
        6107
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2589": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6089,
        6107
      ],
      "op": "POP",
      "path": "2"
    },
    "2590": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6089,
        6107
      ],
      "op": "POP",
      "path": "2"
    },
    "2591": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6089,
        6107
      ],
      "op": "POP",
      "path": "2"
    },
    "2592": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6089,
        6107
      ],
      "op": "POP",
      "path": "2"
    },
    "2593": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6089,
        6107
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2595": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6089,
        6107
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2596": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6089,
        6107
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "2597": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6089,
        6107
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "2599": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6089,
        6107
      ],
      "op": "NOT",
      "path": "2"
    },
    "2600": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6089,
        6107
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "2602": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6089,
        6107
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2603": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6089,
        6107
      ],
      "op": "ADD",
      "path": "2"
    },
    "2604": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6089,
        6107
      ],
      "op": "AND",
      "path": "2"
    },
    "2605": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6089,
        6107
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2606": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6089,
        6107
      ],
      "op": "ADD",
      "path": "2"
    },
    "2607": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6089,
        6107
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2608": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6089,
        6107
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2610": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6089,
        6107
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2611": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6089,
        6107
      ],
      "op": "POP",
      "path": "2"
    },
    "2612": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6089,
        6107
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2613": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6089,
        6107
      ],
      "op": "ADD",
      "path": "2"
    },
    "2614": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6089,
        6107
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2615": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6089,
        6107
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA40"
    },
    "2618": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6089,
        6107
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2619": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6089,
        6107
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2620": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6089,
        6107
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4C0C"
    },
    "2623": {
      "fn": "BaseLoot.castGW",
      "jump": "i",
      "offset": [
        6089,
        6107
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2624": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6089,
        6107
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2625": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2627": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2629": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2631": {
      "op": "SHL"
    },
    "2632": {
      "op": "SUB"
    },
    "2633": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6089,
        6121
      ],
      "op": "AND",
      "path": "2"
    },
    "2634": {
      "branch": 160,
      "fn": "BaseLoot.castGW",
      "offset": [
        6089,
        6121
      ],
      "op": "EQ",
      "path": "2"
    },
    "2635": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6089,
        6144
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2636": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6089,
        6144
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA65"
    },
    "2639": {
      "branch": 160,
      "fn": "BaseLoot.castGW",
      "offset": [
        6089,
        6144
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2640": {
      "op": "POP"
    },
    "2641": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6133,
        6143
      ],
      "op": "CALLER",
      "path": "2"
    },
    "2642": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6125,
        6144
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2644": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6125,
        6144
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2645": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6125,
        6144
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2646": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6125,
        6144
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2647": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6125,
        6132
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "2650": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6125,
        6144
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2652": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6125,
        6144
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2653": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6125,
        6144
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2655": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6125,
        6144
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2656": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6125,
        6144
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "2657": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6125,
        6144
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2658": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6125,
        6144
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "2660": {
      "branch": 161,
      "fn": "BaseLoot.castGW",
      "offset": [
        6125,
        6144
      ],
      "op": "AND",
      "path": "2"
    },
    "2661": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6089,
        6144
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2662": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6081,
        6167
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA81"
    },
    "2665": {
      "branch": 161,
      "fn": "BaseLoot.castGW",
      "offset": [
        6081,
        6167
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2666": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6081,
        6167
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2668": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6081,
        6167
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2669": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2673": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2675": {
      "op": "SHL"
    },
    "2676": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6081,
        6167
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2677": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6081,
        6167
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2678": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6081,
        6167
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2680": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6081,
        6167
      ],
      "op": "ADD",
      "path": "2"
    },
    "2681": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6081,
        6167
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x60F"
    },
    "2684": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6081,
        6167
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2685": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6081,
        6167
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4C72"
    },
    "2688": {
      "fn": "BaseLoot.castGW",
      "jump": "i",
      "offset": [
        6081,
        6167
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2689": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6081,
        6167
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2690": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6193,
        6223
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 13,
      "value": "0x40"
    },
    "2692": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6193,
        6223
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2693": {
      "op": "PUSH4",
      "value": "0x6BFC324F"
    },
    "2698": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2700": {
      "op": "SHL"
    },
    "2701": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6193,
        6223
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2702": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6193,
        6223
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2703": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6193,
        6223
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2705": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6193,
        6223
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2706": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6193,
        6223
      ],
      "op": "ADD",
      "path": "2"
    },
    "2707": {
      "op": "DUP6"
    },
    "2708": {
      "op": "SWAP1"
    },
    "2709": {
      "op": "MSTORE"
    },
    "2710": {
      "offset": [
        3019,
        3022
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x85"
    },
    "2712": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2714": {
      "op": "DUP3"
    },
    "2715": {
      "op": "ADD"
    },
    "2716": {
      "op": "MSTORE"
    },
    "2717": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2719": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2721": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2723": {
      "op": "SHL"
    },
    "2724": {
      "op": "SUB"
    },
    "2725": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6193,
        6205
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2726": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6193,
        6205
      ],
      "op": "AND",
      "path": "2"
    },
    "2727": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6193,
        6205
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2728": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6193,
        6205
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x6BFC324F"
    },
    "2733": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6193,
        6205
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2734": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2736": {
      "op": "ADD"
    },
    "2737": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6193,
        6223
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2739": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6193,
        6223
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2741": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6193,
        6223
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2742": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6193,
        6223
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2743": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6193,
        6223
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2744": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6193,
        6223
      ],
      "op": "SUB",
      "path": "2"
    },
    "2745": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6193,
        6223
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2746": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6193,
        6223
      ],
      "op": "DUP7",
      "path": "2"
    },
    "2747": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6193,
        6223
      ],
      "op": "GAS",
      "path": "2"
    },
    "2748": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6193,
        6223
      ],
      "op": "STATICCALL",
      "path": "2"
    },
    "2749": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6193,
        6223
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2750": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6193,
        6223
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2751": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6193,
        6223
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2752": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6193,
        6223
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xACD"
    },
    "2755": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6193,
        6223
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2756": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6193,
        6223
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "2757": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6193,
        6223
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2759": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6193,
        6223
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2760": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6193,
        6223
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "2761": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6193,
        6223
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "2762": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6193,
        6223
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2764": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6193,
        6223
      ],
      "op": "REVERT",
      "path": "2"
    },
    "2765": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6193,
        6223
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2766": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6193,
        6223
      ],
      "op": "POP",
      "path": "2"
    },
    "2767": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6193,
        6223
      ],
      "op": "POP",
      "path": "2"
    },
    "2768": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6193,
        6223
      ],
      "op": "POP",
      "path": "2"
    },
    "2769": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6193,
        6223
      ],
      "op": "POP",
      "path": "2"
    },
    "2770": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6193,
        6223
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2772": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6193,
        6223
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2773": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6193,
        6223
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "2774": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6193,
        6223
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "2776": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6193,
        6223
      ],
      "op": "NOT",
      "path": "2"
    },
    "2777": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6193,
        6223
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "2779": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6193,
        6223
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2780": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6193,
        6223
      ],
      "op": "ADD",
      "path": "2"
    },
    "2781": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6193,
        6223
      ],
      "op": "AND",
      "path": "2"
    },
    "2782": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6193,
        6223
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2783": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6193,
        6223
      ],
      "op": "ADD",
      "path": "2"
    },
    "2784": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6193,
        6223
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2785": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6193,
        6223
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2787": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6193,
        6223
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2788": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6193,
        6223
      ],
      "op": "POP",
      "path": "2"
    },
    "2789": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6193,
        6223
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2790": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6193,
        6223
      ],
      "op": "ADD",
      "path": "2"
    },
    "2791": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6193,
        6223
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2792": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6193,
        6223
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xAF1"
    },
    "2795": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6193,
        6223
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2796": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6193,
        6223
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2797": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6193,
        6223
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4BCC"
    },
    "2800": {
      "fn": "BaseLoot.castGW",
      "jump": "i",
      "offset": [
        6193,
        6223
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2801": {
      "branch": 162,
      "fn": "BaseLoot.castGW",
      "offset": [
        6193,
        6223
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2802": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6185,
        6255
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB3D"
    },
    "2805": {
      "branch": 162,
      "fn": "BaseLoot.castGW",
      "offset": [
        6185,
        6255
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2806": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6185,
        6255
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2808": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6185,
        6255
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2809": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2813": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2815": {
      "op": "SHL"
    },
    "2816": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6185,
        6255
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2817": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6185,
        6255
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2818": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2820": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6185,
        6255
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2822": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6185,
        6255
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2823": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6185,
        6255
      ],
      "op": "ADD",
      "path": "2"
    },
    "2824": {
      "op": "MSTORE"
    },
    "2825": {
      "op": "PUSH1",
      "value": "0x1B"
    },
    "2827": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2829": {
      "op": "DUP3"
    },
    "2830": {
      "op": "ADD"
    },
    "2831": {
      "op": "MSTORE"
    },
    "2832": {
      "op": "PUSH32",
      "value": "0x4865726F2063616E277420636173742067686F737420776F6C662E0000000000"
    },
    "2865": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2867": {
      "op": "DUP3"
    },
    "2868": {
      "op": "ADD"
    },
    "2869": {
      "op": "MSTORE"
    },
    "2870": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2872": {
      "op": "ADD"
    },
    "2873": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6185,
        6255
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x60F"
    },
    "2876": {
      "op": "JUMP"
    },
    "2877": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6185,
        6255
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2878": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6273,
        6279
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 14,
      "value": "0xFE"
    },
    "2880": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6273,
        6279
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2881": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6315,
        6355
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2883": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6315,
        6355
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2884": {
      "op": "PUSH4",
      "value": "0x156A0BF1"
    },
    "2889": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "2891": {
      "op": "SHL"
    },
    "2892": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6315,
        6355
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2893": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6315,
        6355
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2894": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2896": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2898": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2900": {
      "op": "SHL"
    },
    "2901": {
      "op": "SUB"
    },
    "2902": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6273,
        6279
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2903": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6273,
        6279
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2904": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6273,
        6279
      ],
      "op": "AND",
      "path": "2"
    },
    "2905": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6273,
        6279
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2906": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6273,
        6288
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x2D7301E2"
    },
    "2911": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6273,
        6288
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2912": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6289,
        6294
      ],
      "op": "DUP8",
      "path": "2"
    },
    "2913": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6289,
        6294
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2914": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6296,
        6300
      ],
      "op": "DUP8",
      "path": "2"
    },
    "2915": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6296,
        6300
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2916": {
      "offset": [
        3019,
        3022
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x85"
    },
    "2918": {
      "fn": "BaseLoot.castGW",
      "offset": [
        3019,
        3022
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2919": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6273,
        6279
      ],
      "op": "DUP6",
      "path": "2"
    },
    "2920": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6273,
        6279
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2921": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6315,
        6330
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x55A82FC4"
    },
    "2926": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6315,
        6330
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2927": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6315,
        6355
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB80"
    },
    "2930": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6315,
        6355
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2931": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6289,
        6294
      ],
      "op": "DUP7",
      "path": "2"
    },
    "2932": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6289,
        6294
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2933": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6296,
        6300
      ],
      "op": "DUP7",
      "path": "2"
    },
    "2934": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6296,
        6300
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2935": {
      "offset": [
        3019,
        3022
      ],
      "op": "DUP7",
      "path": "5"
    },
    "2936": {
      "fn": "BaseLoot.castGW",
      "offset": [
        3019,
        3022
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2937": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6315,
        6355
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2939": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6315,
        6355
      ],
      "op": "ADD",
      "path": "2"
    },
    "2940": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6315,
        6355
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4C51"
    },
    "2943": {
      "fn": "BaseLoot.castGW",
      "jump": "i",
      "offset": [
        6315,
        6355
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2944": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6315,
        6355
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2945": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6315,
        6355
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2947": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6315,
        6355
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2949": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6315,
        6355
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2950": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6315,
        6355
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2951": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6315,
        6355
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2952": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6315,
        6355
      ],
      "op": "SUB",
      "path": "2"
    },
    "2953": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6315,
        6355
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2954": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6315,
        6355
      ],
      "op": "DUP7",
      "path": "2"
    },
    "2955": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6315,
        6355
      ],
      "op": "GAS",
      "path": "2"
    },
    "2956": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6315,
        6355
      ],
      "op": "STATICCALL",
      "path": "2"
    },
    "2957": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6315,
        6355
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2958": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6315,
        6355
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2959": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6315,
        6355
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2960": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6315,
        6355
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB9D"
    },
    "2963": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6315,
        6355
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2964": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6315,
        6355
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "2965": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6315,
        6355
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2967": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6315,
        6355
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2968": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6315,
        6355
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "2969": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6315,
        6355
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "2970": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6315,
        6355
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2972": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6315,
        6355
      ],
      "op": "REVERT",
      "path": "2"
    },
    "2973": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6315,
        6355
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2974": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6315,
        6355
      ],
      "op": "POP",
      "path": "2"
    },
    "2975": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6315,
        6355
      ],
      "op": "POP",
      "path": "2"
    },
    "2976": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6315,
        6355
      ],
      "op": "POP",
      "path": "2"
    },
    "2977": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6315,
        6355
      ],
      "op": "POP",
      "path": "2"
    },
    "2978": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6315,
        6355
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2980": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6315,
        6355
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2981": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6315,
        6355
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "2982": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6315,
        6355
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "2984": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6315,
        6355
      ],
      "op": "NOT",
      "path": "2"
    },
    "2985": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6315,
        6355
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "2987": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6315,
        6355
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2988": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6315,
        6355
      ],
      "op": "ADD",
      "path": "2"
    },
    "2989": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6315,
        6355
      ],
      "op": "AND",
      "path": "2"
    },
    "2990": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6315,
        6355
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2991": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6315,
        6355
      ],
      "op": "ADD",
      "path": "2"
    },
    "2992": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6315,
        6355
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2993": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6315,
        6355
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2995": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6315,
        6355
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2996": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6315,
        6355
      ],
      "op": "POP",
      "path": "2"
    },
    "2997": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6315,
        6355
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2998": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6315,
        6355
      ],
      "op": "ADD",
      "path": "2"
    },
    "2999": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6315,
        6355
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3000": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6315,
        6355
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xBC1"
    },
    "3003": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6315,
        6355
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3004": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6315,
        6355
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3005": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6315,
        6355
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4BCC"
    },
    "3008": {
      "fn": "BaseLoot.castGW",
      "jump": "i",
      "offset": [
        6315,
        6355
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3009": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6315,
        6355
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3010": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6314,
        6355
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3011": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6273,
        6356
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3013": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6273,
        6356
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3014": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6273,
        6356
      ],
      "op": "DUP6",
      "path": "2"
    },
    "3015": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6273,
        6356
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xFFFFFFFF"
    },
    "3020": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6273,
        6356
      ],
      "op": "AND",
      "path": "2"
    },
    "3021": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6273,
        6356
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE0"
    },
    "3023": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6273,
        6356
      ],
      "op": "SHL",
      "path": "2"
    },
    "3024": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6273,
        6356
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3025": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6273,
        6356
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3026": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6273,
        6356
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3028": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6273,
        6356
      ],
      "op": "ADD",
      "path": "2"
    },
    "3029": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6273,
        6356
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xBE1"
    },
    "3032": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6273,
        6356
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "3033": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6273,
        6356
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "3034": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6273,
        6356
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "3035": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6273,
        6356
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3036": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6273,
        6356
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3037": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6273,
        6356
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4C29"
    },
    "3040": {
      "fn": "BaseLoot.castGW",
      "jump": "i",
      "offset": [
        6273,
        6356
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3041": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6273,
        6356
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3042": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6273,
        6356
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3044": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6273,
        6356
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3046": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6273,
        6356
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3047": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6273,
        6356
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3048": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6273,
        6356
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3049": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6273,
        6356
      ],
      "op": "SUB",
      "path": "2"
    },
    "3050": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6273,
        6356
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3051": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6273,
        6356
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3053": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6273,
        6356
      ],
      "op": "DUP8",
      "path": "2"
    },
    "3054": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6273,
        6356
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3055": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6273,
        6356
      ],
      "op": "EXTCODESIZE",
      "path": "2"
    },
    "3056": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6273,
        6356
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3057": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6273,
        6356
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3058": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6273,
        6356
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3059": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6273,
        6356
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xBFB"
    },
    "3062": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6273,
        6356
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3063": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6273,
        6356
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3065": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6273,
        6356
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3066": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6273,
        6356
      ],
      "op": "REVERT",
      "path": "2"
    },
    "3067": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6273,
        6356
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3068": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6273,
        6356
      ],
      "op": "POP",
      "path": "2"
    },
    "3069": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6273,
        6356
      ],
      "op": "GAS",
      "path": "2"
    },
    "3070": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6273,
        6356
      ],
      "op": "CALL",
      "path": "2"
    },
    "3071": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6273,
        6356
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3072": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6273,
        6356
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3073": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6273,
        6356
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3074": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6273,
        6356
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC0F"
    },
    "3077": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6273,
        6356
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3078": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6273,
        6356
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "3079": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6273,
        6356
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3081": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6273,
        6356
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3082": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6273,
        6356
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "3083": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6273,
        6356
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "3084": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6273,
        6356
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3086": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6273,
        6356
      ],
      "op": "REVERT",
      "path": "2"
    },
    "3087": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6273,
        6356
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3088": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6273,
        6356
      ],
      "op": "POP",
      "path": "2"
    },
    "3089": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6273,
        6356
      ],
      "op": "POP",
      "path": "2"
    },
    "3090": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6273,
        6356
      ],
      "op": "POP",
      "path": "2"
    },
    "3091": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6273,
        6356
      ],
      "op": "POP",
      "path": "2"
    },
    "3092": {
      "fn": "BaseLoot.castGW",
      "offset": [
        6022,
        6367
      ],
      "op": "POP",
      "path": "2"
    },
    "3093": {
      "fn": "BaseLoot.castGW",
      "offset": [
        5940,
        6367
      ],
      "op": "POP",
      "path": "2"
    },
    "3094": {
      "fn": "BaseLoot.castGW",
      "offset": [
        5940,
        6367
      ],
      "op": "POP",
      "path": "2"
    },
    "3095": {
      "fn": "BaseLoot.castGW",
      "offset": [
        5940,
        6367
      ],
      "op": "POP",
      "path": "2"
    },
    "3096": {
      "fn": "BaseLoot.castGW",
      "offset": [
        5940,
        6367
      ],
      "op": "POP",
      "path": "2"
    },
    "3097": {
      "fn": "BaseLoot.castGW",
      "jump": "o",
      "offset": [
        5940,
        6367
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3098": {
      "fn": "ERC1155Upgradeable.uri",
      "offset": [
        2396,
        2501
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "3099": {
      "fn": "ERC1155Upgradeable.uri",
      "offset": [
        2456,
        2469
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x60"
    },
    "3101": {
      "fn": "ERC1155Upgradeable.uri",
      "offset": [
        2489,
        2493
      ],
      "op": "PUSH1",
      "path": "32",
      "statement": 15,
      "value": "0x67"
    },
    "3103": {
      "fn": "ERC1155Upgradeable.uri",
      "offset": [
        2482,
        2493
      ],
      "op": "DUP1",
      "path": "32"
    },
    "3104": {
      "fn": "ERC1155Upgradeable.uri",
      "offset": [
        2482,
        2493
      ],
      "op": "SLOAD",
      "path": "32"
    },
    "3105": {
      "fn": "ERC1155Upgradeable.uri",
      "offset": [
        2482,
        2493
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0xC29"
    },
    "3108": {
      "fn": "ERC1155Upgradeable.uri",
      "offset": [
        2482,
        2493
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "3109": {
      "fn": "ERC1155Upgradeable.uri",
      "offset": [
        2482,
        2493
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x4C9E"
    },
    "3112": {
      "fn": "ERC1155Upgradeable.uri",
      "jump": "i",
      "offset": [
        2482,
        2493
      ],
      "op": "JUMP",
      "path": "32"
    },
    "3113": {
      "fn": "ERC1155Upgradeable.uri",
      "offset": [
        2482,
        2493
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "3114": {
      "fn": "ERC1155Upgradeable.uri",
      "offset": [
        2482,
        2493
      ],
      "op": "DUP1",
      "path": "32"
    },
    "3115": {
      "fn": "ERC1155Upgradeable.uri",
      "offset": [
        2482,
        2493
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x1F"
    },
    "3117": {
      "fn": "ERC1155Upgradeable.uri",
      "offset": [
        2482,
        2493
      ],
      "op": "ADD",
      "path": "32"
    },
    "3118": {
      "fn": "ERC1155Upgradeable.uri",
      "offset": [
        2482,
        2493
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x20"
    },
    "3120": {
      "fn": "ERC1155Upgradeable.uri",
      "offset": [
        2482,
        2493
      ],
      "op": "DUP1",
      "path": "32"
    },
    "3121": {
      "fn": "ERC1155Upgradeable.uri",
      "offset": [
        2482,
        2493
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "3122": {
      "fn": "ERC1155Upgradeable.uri",
      "offset": [
        2482,
        2493
      ],
      "op": "DIV",
      "path": "32"
    },
    "3123": {
      "fn": "ERC1155Upgradeable.uri",
      "offset": [
        2482,
        2493
      ],
      "op": "MUL",
      "path": "32"
    },
    "3124": {
      "fn": "ERC1155Upgradeable.uri",
      "offset": [
        2482,
        2493
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x20"
    },
    "3126": {
      "fn": "ERC1155Upgradeable.uri",
      "offset": [
        2482,
        2493
      ],
      "op": "ADD",
      "path": "32"
    },
    "3127": {
      "fn": "ERC1155Upgradeable.uri",
      "offset": [
        2482,
        2493
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x40"
    },
    "3129": {
      "fn": "ERC1155Upgradeable.uri",
      "offset": [
        2482,
        2493
      ],
      "op": "MLOAD",
      "path": "32"
    },
    "3130": {
      "fn": "ERC1155Upgradeable.uri",
      "offset": [
        2482,
        2493
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "3131": {
      "fn": "ERC1155Upgradeable.uri",
      "offset": [
        2482,
        2493
      ],
      "op": "DUP2",
      "path": "32"
    },
    "3132": {
      "fn": "ERC1155Upgradeable.uri",
      "offset": [
        2482,
        2493
      ],
      "op": "ADD",
      "path": "32"
    },
    "3133": {
      "fn": "ERC1155Upgradeable.uri",
      "offset": [
        2482,
        2493
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x40"
    },
    "3135": {
      "fn": "ERC1155Upgradeable.uri",
      "offset": [
        2482,
        2493
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "3136": {
      "fn": "ERC1155Upgradeable.uri",
      "offset": [
        2482,
        2493
      ],
      "op": "DUP1",
      "path": "32"
    },
    "3137": {
      "fn": "ERC1155Upgradeable.uri",
      "offset": [
        2482,
        2493
      ],
      "op": "SWAP3",
      "path": "32"
    },
    "3138": {
      "fn": "ERC1155Upgradeable.uri",
      "offset": [
        2482,
        2493
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "3139": {
      "fn": "ERC1155Upgradeable.uri",
      "offset": [
        2482,
        2493
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "3140": {
      "fn": "ERC1155Upgradeable.uri",
      "offset": [
        2482,
        2493
      ],
      "op": "DUP2",
      "path": "32"
    },
    "3141": {
      "fn": "ERC1155Upgradeable.uri",
      "offset": [
        2482,
        2493
      ],
      "op": "DUP2",
      "path": "32"
    },
    "3142": {
      "fn": "ERC1155Upgradeable.uri",
      "offset": [
        2482,
        2493
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "3143": {
      "fn": "ERC1155Upgradeable.uri",
      "offset": [
        2482,
        2493
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x20"
    },
    "3145": {
      "fn": "ERC1155Upgradeable.uri",
      "offset": [
        2482,
        2493
      ],
      "op": "ADD",
      "path": "32"
    },
    "3146": {
      "fn": "ERC1155Upgradeable.uri",
      "offset": [
        2482,
        2493
      ],
      "op": "DUP3",
      "path": "32"
    },
    "3147": {
      "fn": "ERC1155Upgradeable.uri",
      "offset": [
        2482,
        2493
      ],
      "op": "DUP1",
      "path": "32"
    },
    "3148": {
      "fn": "ERC1155Upgradeable.uri",
      "offset": [
        2482,
        2493
      ],
      "op": "SLOAD",
      "path": "32"
    },
    "3149": {
      "fn": "ERC1155Upgradeable.uri",
      "offset": [
        2482,
        2493
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0xC55"
    },
    "3152": {
      "fn": "ERC1155Upgradeable.uri",
      "offset": [
        2482,
        2493
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "3153": {
      "fn": "ERC1155Upgradeable.uri",
      "offset": [
        2482,
        2493
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x4C9E"
    },
    "3156": {
      "fn": "ERC1155Upgradeable.uri",
      "jump": "i",
      "offset": [
        2482,
        2493
      ],
      "op": "JUMP",
      "path": "32"
    },
    "3157": {
      "fn": "ERC1155Upgradeable.uri",
      "offset": [
        2482,
        2493
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "3158": {
      "fn": "ERC1155Upgradeable.uri",
      "offset": [
        2482,
        2493
      ],
      "op": "DUP1",
      "path": "32"
    },
    "3159": {
      "fn": "ERC1155Upgradeable.uri",
      "offset": [
        2482,
        2493
      ],
      "op": "ISZERO",
      "path": "32"
    },
    "3160": {
      "fn": "ERC1155Upgradeable.uri",
      "offset": [
        2482,
        2493
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0xCA2"
    },
    "3163": {
      "fn": "ERC1155Upgradeable.uri",
      "offset": [
        2482,
        2493
      ],
      "op": "JUMPI",
      "path": "32"
    },
    "3164": {
      "fn": "ERC1155Upgradeable.uri",
      "offset": [
        2482,
        2493
      ],
      "op": "DUP1",
      "path": "32"
    },
    "3165": {
      "fn": "ERC1155Upgradeable.uri",
      "offset": [
        2482,
        2493
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x1F"
    },
    "3167": {
      "fn": "ERC1155Upgradeable.uri",
      "offset": [
        2482,
        2493
      ],
      "op": "LT",
      "path": "32"
    },
    "3168": {
      "fn": "ERC1155Upgradeable.uri",
      "offset": [
        2482,
        2493
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0xC77"
    },
    "3171": {
      "fn": "ERC1155Upgradeable.uri",
      "offset": [
        2482,
        2493
      ],
      "op": "JUMPI",
      "path": "32"
    },
    "3172": {
      "fn": "ERC1155Upgradeable.uri",
      "offset": [
        2482,
        2493
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x100"
    },
    "3175": {
      "fn": "ERC1155Upgradeable.uri",
      "offset": [
        2482,
        2493
      ],
      "op": "DUP1",
      "path": "32"
    },
    "3176": {
      "fn": "ERC1155Upgradeable.uri",
      "offset": [
        2482,
        2493
      ],
      "op": "DUP4",
      "path": "32"
    },
    "3177": {
      "fn": "ERC1155Upgradeable.uri",
      "offset": [
        2482,
        2493
      ],
      "op": "SLOAD",
      "path": "32"
    },
    "3178": {
      "fn": "ERC1155Upgradeable.uri",
      "offset": [
        2482,
        2493
      ],
      "op": "DIV",
      "path": "32"
    },
    "3179": {
      "fn": "ERC1155Upgradeable.uri",
      "offset": [
        2482,
        2493
      ],
      "op": "MUL",
      "path": "32"
    },
    "3180": {
      "fn": "ERC1155Upgradeable.uri",
      "offset": [
        2482,
        2493
      ],
      "op": "DUP4",
      "path": "32"
    },
    "3181": {
      "fn": "ERC1155Upgradeable.uri",
      "offset": [
        2482,
        2493
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "3182": {
      "fn": "ERC1155Upgradeable.uri",
      "offset": [
        2482,
        2493
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "3183": {
      "fn": "ERC1155Upgradeable.uri",
      "offset": [
        2482,
        2493
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x20"
    },
    "3185": {
      "fn": "ERC1155Upgradeable.uri",
      "offset": [
        2482,
        2493
      ],
      "op": "ADD",
      "path": "32"
    },
    "3186": {
      "fn": "ERC1155Upgradeable.uri",
      "offset": [
        2482,
        2493
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "3187": {
      "fn": "ERC1155Upgradeable.uri",
      "offset": [
        2482,
        2493
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0xCA2"
    },
    "3190": {
      "fn": "ERC1155Upgradeable.uri",
      "offset": [
        2482,
        2493
      ],
      "op": "JUMP",
      "path": "32"
    },
    "3191": {
      "fn": "ERC1155Upgradeable.uri",
      "offset": [
        2482,
        2493
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "3192": {
      "fn": "ERC1155Upgradeable.uri",
      "offset": [
        2482,
        2493
      ],
      "op": "DUP3",
      "path": "32"
    },
    "3193": {
      "fn": "ERC1155Upgradeable.uri",
      "offset": [
        2482,
        2493
      ],
      "op": "ADD",
      "path": "32"
    },
    "3194": {
      "fn": "ERC1155Upgradeable.uri",
      "offset": [
        2482,
        2493
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "3195": {
      "fn": "ERC1155Upgradeable.uri",
      "offset": [
        2482,
        2493
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "3196": {
      "fn": "ERC1155Upgradeable.uri",
      "offset": [
        2482,
        2493
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x0"
    },
    "3198": {
      "fn": "ERC1155Upgradeable.uri",
      "offset": [
        2482,
        2493
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "3199": {
      "fn": "ERC1155Upgradeable.uri",
      "offset": [
        2482,
        2493
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x20"
    },
    "3201": {
      "fn": "ERC1155Upgradeable.uri",
      "offset": [
        2482,
        2493
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x0"
    },
    "3203": {
      "fn": "ERC1155Upgradeable.uri",
      "offset": [
        2482,
        2493
      ],
      "op": "KECCAK256",
      "path": "32"
    },
    "3204": {
      "fn": "ERC1155Upgradeable.uri",
      "offset": [
        2482,
        2493
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "3205": {
      "fn": "ERC1155Upgradeable.uri",
      "offset": [
        2482,
        2493
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "3206": {
      "fn": "ERC1155Upgradeable.uri",
      "offset": [
        2482,
        2493
      ],
      "op": "DUP2",
      "path": "32"
    },
    "3207": {
      "fn": "ERC1155Upgradeable.uri",
      "offset": [
        2482,
        2493
      ],
      "op": "SLOAD",
      "path": "32"
    },
    "3208": {
      "fn": "ERC1155Upgradeable.uri",
      "offset": [
        2482,
        2493
      ],
      "op": "DUP2",
      "path": "32"
    },
    "3209": {
      "fn": "ERC1155Upgradeable.uri",
      "offset": [
        2482,
        2493
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "3210": {
      "fn": "ERC1155Upgradeable.uri",
      "offset": [
        2482,
        2493
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "3211": {
      "fn": "ERC1155Upgradeable.uri",
      "offset": [
        2482,
        2493
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x1"
    },
    "3213": {
      "fn": "ERC1155Upgradeable.uri",
      "offset": [
        2482,
        2493
      ],
      "op": "ADD",
      "path": "32"
    },
    "3214": {
      "fn": "ERC1155Upgradeable.uri",
      "offset": [
        2482,
        2493
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "3215": {
      "fn": "ERC1155Upgradeable.uri",
      "offset": [
        2482,
        2493
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x20"
    },
    "3217": {
      "fn": "ERC1155Upgradeable.uri",
      "offset": [
        2482,
        2493
      ],
      "op": "ADD",
      "path": "32"
    },
    "3218": {
      "fn": "ERC1155Upgradeable.uri",
      "offset": [
        2482,
        2493
      ],
      "op": "DUP1",
      "path": "32"
    },
    "3219": {
      "fn": "ERC1155Upgradeable.uri",
      "offset": [
        2482,
        2493
      ],
      "op": "DUP4",
      "path": "32"
    },
    "3220": {
      "fn": "ERC1155Upgradeable.uri",
      "offset": [
        2482,
        2493
      ],
      "op": "GT",
      "path": "32"
    },
    "3221": {
      "fn": "ERC1155Upgradeable.uri",
      "offset": [
        2482,
        2493
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0xC85"
    },
    "3224": {
      "fn": "ERC1155Upgradeable.uri",
      "offset": [
        2482,
        2493
      ],
      "op": "JUMPI",
      "path": "32"
    },
    "3225": {
      "fn": "ERC1155Upgradeable.uri",
      "offset": [
        2482,
        2493
      ],
      "op": "DUP3",
      "path": "32"
    },
    "3226": {
      "fn": "ERC1155Upgradeable.uri",
      "offset": [
        2482,
        2493
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "3227": {
      "fn": "ERC1155Upgradeable.uri",
      "offset": [
        2482,
        2493
      ],
      "op": "SUB",
      "path": "32"
    },
    "3228": {
      "fn": "ERC1155Upgradeable.uri",
      "offset": [
        2482,
        2493
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x1F"
    },
    "3230": {
      "fn": "ERC1155Upgradeable.uri",
      "offset": [
        2482,
        2493
      ],
      "op": "AND",
      "path": "32"
    },
    "3231": {
      "fn": "ERC1155Upgradeable.uri",
      "offset": [
        2482,
        2493
      ],
      "op": "DUP3",
      "path": "32"
    },
    "3232": {
      "fn": "ERC1155Upgradeable.uri",
      "offset": [
        2482,
        2493
      ],
      "op": "ADD",
      "path": "32"
    },
    "3233": {
      "fn": "ERC1155Upgradeable.uri",
      "offset": [
        2482,
        2493
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "3234": {
      "fn": "ERC1155Upgradeable.uri",
      "offset": [
        2482,
        2493
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "3235": {
      "fn": "ERC1155Upgradeable.uri",
      "offset": [
        2482,
        2493
      ],
      "op": "POP",
      "path": "32"
    },
    "3236": {
      "fn": "ERC1155Upgradeable.uri",
      "offset": [
        2482,
        2493
      ],
      "op": "POP",
      "path": "32"
    },
    "3237": {
      "fn": "ERC1155Upgradeable.uri",
      "offset": [
        2482,
        2493
      ],
      "op": "POP",
      "path": "32"
    },
    "3238": {
      "fn": "ERC1155Upgradeable.uri",
      "offset": [
        2482,
        2493
      ],
      "op": "POP",
      "path": "32"
    },
    "3239": {
      "fn": "ERC1155Upgradeable.uri",
      "offset": [
        2482,
        2493
      ],
      "op": "POP",
      "path": "32"
    },
    "3240": {
      "fn": "ERC1155Upgradeable.uri",
      "offset": [
        2482,
        2493
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "3241": {
      "fn": "ERC1155Upgradeable.uri",
      "offset": [
        2482,
        2493
      ],
      "op": "POP",
      "path": "32"
    },
    "3242": {
      "fn": "ERC1155Upgradeable.uri",
      "offset": [
        2396,
        2501
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "3243": {
      "fn": "ERC1155Upgradeable.uri",
      "offset": [
        2396,
        2501
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "3244": {
      "fn": "ERC1155Upgradeable.uri",
      "offset": [
        2396,
        2501
      ],
      "op": "POP",
      "path": "32"
    },
    "3245": {
      "fn": "ERC1155Upgradeable.uri",
      "jump": "o",
      "offset": [
        2396,
        2501
      ],
      "op": "JUMP",
      "path": "32"
    },
    "3246": {
      "fn": "BaseLoot.burnFrom",
      "offset": [
        2031,
        2202
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3247": {
      "fn": "BaseLoot.burnFrom",
      "offset": [
        2111,
        2114
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 16,
      "value": "0xFB"
    },
    "3249": {
      "fn": "BaseLoot.burnFrom",
      "offset": [
        2111,
        2114
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3250": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3252": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3254": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3256": {
      "op": "SHL"
    },
    "3257": {
      "op": "SUB"
    },
    "3258": {
      "fn": "BaseLoot.burnFrom",
      "offset": [
        2111,
        2114
      ],
      "op": "AND",
      "path": "2"
    },
    "3259": {
      "fn": "BaseLoot.burnFrom",
      "offset": [
        2118,
        2128
      ],
      "op": "CALLER",
      "path": "2"
    },
    "3260": {
      "fn": "BaseLoot.burnFrom",
      "offset": [
        2111,
        2128
      ],
      "op": "EQ",
      "path": "2"
    },
    "3261": {
      "branch": 163,
      "fn": "BaseLoot.burnFrom",
      "offset": [
        2111,
        2128
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3262": {
      "fn": "BaseLoot.burnFrom",
      "offset": [
        2111,
        2151
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xCD7"
    },
    "3265": {
      "branch": 163,
      "fn": "BaseLoot.burnFrom",
      "offset": [
        2111,
        2151
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3266": {
      "op": "POP"
    },
    "3267": {
      "fn": "BaseLoot.burnFrom",
      "offset": [
        2140,
        2150
      ],
      "op": "CALLER",
      "path": "2"
    },
    "3268": {
      "fn": "BaseLoot.burnFrom",
      "offset": [
        2132,
        2151
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3270": {
      "fn": "BaseLoot.burnFrom",
      "offset": [
        2132,
        2151
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3271": {
      "fn": "BaseLoot.burnFrom",
      "offset": [
        2132,
        2151
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3272": {
      "fn": "BaseLoot.burnFrom",
      "offset": [
        2132,
        2151
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3273": {
      "fn": "BaseLoot.burnFrom",
      "offset": [
        2132,
        2139
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "3276": {
      "fn": "BaseLoot.burnFrom",
      "offset": [
        2132,
        2151
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3278": {
      "fn": "BaseLoot.burnFrom",
      "offset": [
        2132,
        2151
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3279": {
      "fn": "BaseLoot.burnFrom",
      "offset": [
        2132,
        2151
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3281": {
      "fn": "BaseLoot.burnFrom",
      "offset": [
        2132,
        2151
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3282": {
      "fn": "BaseLoot.burnFrom",
      "offset": [
        2132,
        2151
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "3283": {
      "fn": "BaseLoot.burnFrom",
      "offset": [
        2132,
        2151
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3284": {
      "fn": "BaseLoot.burnFrom",
      "offset": [
        2132,
        2151
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "3286": {
      "branch": 164,
      "fn": "BaseLoot.burnFrom",
      "offset": [
        2132,
        2151
      ],
      "op": "AND",
      "path": "2"
    },
    "3287": {
      "fn": "BaseLoot.burnFrom",
      "offset": [
        2111,
        2151
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3288": {
      "fn": "BaseLoot.burnFrom",
      "offset": [
        2103,
        2164
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xD0E"
    },
    "3291": {
      "branch": 164,
      "fn": "BaseLoot.burnFrom",
      "offset": [
        2103,
        2164
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3292": {
      "fn": "BaseLoot.burnFrom",
      "offset": [
        2103,
        2164
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3294": {
      "fn": "BaseLoot.burnFrom",
      "offset": [
        2103,
        2164
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3295": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3299": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3301": {
      "op": "SHL"
    },
    "3302": {
      "fn": "BaseLoot.burnFrom",
      "offset": [
        2103,
        2164
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3303": {
      "fn": "BaseLoot.burnFrom",
      "offset": [
        2103,
        2164
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3304": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3306": {
      "fn": "BaseLoot.burnFrom",
      "offset": [
        2103,
        2164
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3308": {
      "fn": "BaseLoot.burnFrom",
      "offset": [
        2103,
        2164
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3309": {
      "fn": "BaseLoot.burnFrom",
      "offset": [
        2103,
        2164
      ],
      "op": "ADD",
      "path": "2"
    },
    "3310": {
      "op": "MSTORE"
    },
    "3311": {
      "op": "PUSH1",
      "value": "0x8"
    },
    "3313": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3315": {
      "op": "DUP3"
    },
    "3316": {
      "op": "ADD"
    },
    "3317": {
      "op": "MSTORE"
    },
    "3318": {
      "op": "PUSH8",
      "value": "0x6275726E46726F6D"
    },
    "3327": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "3329": {
      "op": "SHL"
    },
    "3330": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3332": {
      "op": "DUP3"
    },
    "3333": {
      "op": "ADD"
    },
    "3334": {
      "op": "MSTORE"
    },
    "3335": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3337": {
      "op": "ADD"
    },
    "3338": {
      "fn": "BaseLoot.burnFrom",
      "offset": [
        2103,
        2164
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x60F"
    },
    "3341": {
      "op": "JUMP"
    },
    "3342": {
      "fn": "BaseLoot.burnFrom",
      "offset": [
        2103,
        2164
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3343": {
      "fn": "BaseLoot.burnFrom",
      "offset": [
        2168,
        2198
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 17,
      "value": "0xD19"
    },
    "3346": {
      "fn": "BaseLoot.burnFrom",
      "offset": [
        2174,
        2181
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3347": {
      "fn": "BaseLoot.burnFrom",
      "offset": [
        2183,
        2188
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3348": {
      "fn": "BaseLoot.burnFrom",
      "offset": [
        2190,
        2197
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3349": {
      "fn": "BaseLoot.burnFrom",
      "offset": [
        2168,
        2173
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3973"
    },
    "3352": {
      "fn": "BaseLoot.burnFrom",
      "jump": "i",
      "offset": [
        2168,
        2198
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3353": {
      "fn": "BaseLoot.burnFrom",
      "offset": [
        2168,
        2198
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3354": {
      "fn": "BaseLoot.burnFrom",
      "offset": [
        2031,
        2202
      ],
      "op": "POP",
      "path": "2"
    },
    "3355": {
      "fn": "BaseLoot.burnFrom",
      "offset": [
        2031,
        2202
      ],
      "op": "POP",
      "path": "2"
    },
    "3356": {
      "fn": "BaseLoot.burnFrom",
      "offset": [
        2031,
        2202
      ],
      "op": "POP",
      "path": "2"
    },
    "3357": {
      "fn": "BaseLoot.burnFrom",
      "jump": "o",
      "offset": [
        2031,
        2202
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3358": {
      "fn": "BaseLoot.addLoot",
      "offset": [
        1202,
        1387
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3359": {
      "fn": "BaseLoot.addLoot",
      "offset": [
        1294,
        1297
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 18,
      "value": "0xFB"
    },
    "3361": {
      "fn": "BaseLoot.addLoot",
      "offset": [
        1294,
        1297
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3362": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3364": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3366": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3368": {
      "op": "SHL"
    },
    "3369": {
      "op": "SUB"
    },
    "3370": {
      "fn": "BaseLoot.addLoot",
      "offset": [
        1294,
        1297
      ],
      "op": "AND",
      "path": "2"
    },
    "3371": {
      "fn": "BaseLoot.addLoot",
      "offset": [
        1280,
        1290
      ],
      "op": "CALLER",
      "path": "2"
    },
    "3372": {
      "fn": "BaseLoot.addLoot",
      "offset": [
        1280,
        1297
      ],
      "op": "EQ",
      "path": "2"
    },
    "3373": {
      "branch": 165,
      "fn": "BaseLoot.addLoot",
      "offset": [
        1280,
        1297
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3374": {
      "fn": "BaseLoot.addLoot",
      "offset": [
        1280,
        1320
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xD47"
    },
    "3377": {
      "branch": 165,
      "fn": "BaseLoot.addLoot",
      "offset": [
        1280,
        1320
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3378": {
      "op": "POP"
    },
    "3379": {
      "fn": "BaseLoot.addLoot",
      "offset": [
        1309,
        1319
      ],
      "op": "CALLER",
      "path": "2"
    },
    "3380": {
      "fn": "BaseLoot.addLoot",
      "offset": [
        1301,
        1320
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3382": {
      "fn": "BaseLoot.addLoot",
      "offset": [
        1301,
        1320
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3383": {
      "fn": "BaseLoot.addLoot",
      "offset": [
        1301,
        1320
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3384": {
      "fn": "BaseLoot.addLoot",
      "offset": [
        1301,
        1320
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3385": {
      "fn": "BaseLoot.addLoot",
      "offset": [
        1301,
        1308
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "3388": {
      "fn": "BaseLoot.addLoot",
      "offset": [
        1301,
        1320
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3390": {
      "fn": "BaseLoot.addLoot",
      "offset": [
        1301,
        1320
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3391": {
      "fn": "BaseLoot.addLoot",
      "offset": [
        1301,
        1320
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3393": {
      "fn": "BaseLoot.addLoot",
      "offset": [
        1301,
        1320
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3394": {
      "fn": "BaseLoot.addLoot",
      "offset": [
        1301,
        1320
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "3395": {
      "fn": "BaseLoot.addLoot",
      "offset": [
        1301,
        1320
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3396": {
      "fn": "BaseLoot.addLoot",
      "offset": [
        1301,
        1320
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "3398": {
      "branch": 166,
      "fn": "BaseLoot.addLoot",
      "offset": [
        1301,
        1320
      ],
      "op": "AND",
      "path": "2"
    },
    "3399": {
      "fn": "BaseLoot.addLoot",
      "offset": [
        1280,
        1320
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3400": {
      "fn": "BaseLoot.addLoot",
      "offset": [
        1272,
        1348
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xD8D"
    },
    "3403": {
      "branch": 166,
      "fn": "BaseLoot.addLoot",
      "offset": [
        1272,
        1348
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3404": {
      "fn": "BaseLoot.addLoot",
      "offset": [
        1272,
        1348
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3406": {
      "fn": "BaseLoot.addLoot",
      "offset": [
        1272,
        1348
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3407": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3411": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3413": {
      "op": "SHL"
    },
    "3414": {
      "fn": "BaseLoot.addLoot",
      "offset": [
        1272,
        1348
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3415": {
      "fn": "BaseLoot.addLoot",
      "offset": [
        1272,
        1348
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3416": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3418": {
      "fn": "BaseLoot.addLoot",
      "offset": [
        1272,
        1348
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3420": {
      "fn": "BaseLoot.addLoot",
      "offset": [
        1272,
        1348
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3421": {
      "fn": "BaseLoot.addLoot",
      "offset": [
        1272,
        1348
      ],
      "op": "ADD",
      "path": "2"
    },
    "3422": {
      "op": "MSTORE"
    },
    "3423": {
      "op": "PUSH1",
      "value": "0x17"
    },
    "3425": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3427": {
      "op": "DUP3"
    },
    "3428": {
      "op": "ADD"
    },
    "3429": {
      "op": "MSTORE"
    },
    "3430": {
      "op": "PUSH23",
      "value": "0x2CB7BA9031B0B713BA1030B232103A3432903637B7BA17"
    },
    "3454": {
      "op": "PUSH1",
      "value": "0x49"
    },
    "3456": {
      "op": "SHL"
    },
    "3457": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3459": {
      "op": "DUP3"
    },
    "3460": {
      "op": "ADD"
    },
    "3461": {
      "op": "MSTORE"
    },
    "3462": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3464": {
      "op": "ADD"
    },
    "3465": {
      "fn": "BaseLoot.addLoot",
      "offset": [
        1272,
        1348
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x60F"
    },
    "3468": {
      "op": "JUMP"
    },
    "3469": {
      "fn": "BaseLoot.addLoot",
      "offset": [
        1272,
        1348
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3470": {
      "fn": "BaseLoot.addLoot",
      "offset": [
        1378,
        1383
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 19,
      "value": "0x0"
    },
    "3472": {
      "fn": "BaseLoot.addLoot",
      "offset": [
        1352,
        1366
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3473": {
      "fn": "BaseLoot.addLoot",
      "offset": [
        1352,
        1366
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3474": {
      "fn": "BaseLoot.addLoot",
      "offset": [
        1352,
        1366
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3475": {
      "fn": "BaseLoot.addLoot",
      "offset": [
        1352,
        1360
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "3477": {
      "fn": "BaseLoot.addLoot",
      "offset": [
        1352,
        1366
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3479": {
      "fn": "BaseLoot.addLoot",
      "offset": [
        1352,
        1366
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3480": {
      "fn": "BaseLoot.addLoot",
      "offset": [
        1352,
        1366
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3481": {
      "fn": "BaseLoot.addLoot",
      "offset": [
        1352,
        1366
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3482": {
      "fn": "BaseLoot.addLoot",
      "offset": [
        1352,
        1366
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3484": {
      "fn": "BaseLoot.addLoot",
      "offset": [
        1352,
        1366
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3485": {
      "fn": "BaseLoot.addLoot",
      "offset": [
        1352,
        1366
      ],
      "op": "DUP5",
      "path": "2"
    },
    "3486": {
      "fn": "BaseLoot.addLoot",
      "offset": [
        1352,
        1366
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "3487": {
      "fn": "BaseLoot.addLoot",
      "offset": [
        1352,
        1375
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "3488": {
      "fn": "BaseLoot.addLoot",
      "offset": [
        1352,
        1375
      ],
      "op": "DUP5",
      "path": "2"
    },
    "3489": {
      "fn": "BaseLoot.addLoot",
      "offset": [
        1352,
        1375
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3490": {
      "fn": "BaseLoot.addLoot",
      "offset": [
        1352,
        1375
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3491": {
      "fn": "BaseLoot.addLoot",
      "offset": [
        1352,
        1375
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3492": {
      "fn": "BaseLoot.addLoot",
      "offset": [
        1352,
        1375
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3493": {
      "fn": "BaseLoot.addLoot",
      "offset": [
        1352,
        1375
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3494": {
      "fn": "BaseLoot.addLoot",
      "offset": [
        1352,
        1375
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "3495": {
      "fn": "BaseLoot.addLoot",
      "offset": [
        1352,
        1383
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3496": {
      "fn": "BaseLoot.addLoot",
      "offset": [
        1352,
        1383
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3497": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "3499": {
      "op": "NOT"
    },
    "3500": {
      "fn": "BaseLoot.addLoot",
      "offset": [
        1352,
        1383
      ],
      "op": "AND",
      "path": "2"
    },
    "3501": {
      "fn": "BaseLoot.addLoot",
      "offset": [
        1352,
        1383
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3502": {
      "fn": "BaseLoot.addLoot",
      "offset": [
        1352,
        1383
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "3503": {
      "op": "POP"
    },
    "3504": {
      "fn": "BaseLoot.addLoot",
      "jump": "o",
      "offset": [
        1202,
        1387
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3505": {
      "fn": "ERC1155Upgradeable.safeBatchTransferFrom",
      "offset": [
        4591,
        5033
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "3506": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3508": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3510": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3512": {
      "op": "SHL"
    },
    "3513": {
      "op": "SUB"
    },
    "3514": {
      "fn": "ERC1155Upgradeable.safeBatchTransferFrom",
      "offset": [
        4824,
        4844
      ],
      "op": "DUP6",
      "path": "32",
      "statement": 20
    },
    "3515": {
      "fn": "ERC1155Upgradeable.safeBatchTransferFrom",
      "offset": [
        4824,
        4844
      ],
      "op": "AND",
      "path": "32"
    },
    "3516": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        952,
        962
      ],
      "op": "CALLER",
      "path": "42",
      "statement": 21
    },
    "3517": {
      "fn": "ERC1155Upgradeable.safeBatchTransferFrom",
      "offset": [
        4824,
        4844
      ],
      "op": "EQ",
      "path": "32"
    },
    "3518": {
      "branch": 222,
      "fn": "ERC1155Upgradeable.safeBatchTransferFrom",
      "offset": [
        4824,
        4844
      ],
      "op": "DUP1",
      "path": "32"
    },
    "3519": {
      "fn": "ERC1155Upgradeable.safeBatchTransferFrom",
      "offset": [
        4824,
        4884
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0xDCD"
    },
    "3522": {
      "branch": 222,
      "fn": "ERC1155Upgradeable.safeBatchTransferFrom",
      "offset": [
        4824,
        4884
      ],
      "op": "JUMPI",
      "path": "32"
    },
    "3523": {
      "op": "POP"
    },
    "3524": {
      "fn": "ERC1155Upgradeable.safeBatchTransferFrom",
      "offset": [
        4848,
        4884
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0xDCD"
    },
    "3527": {
      "fn": "ERC1155Upgradeable.safeBatchTransferFrom",
      "offset": [
        4865,
        4869
      ],
      "op": "DUP6",
      "path": "32"
    },
    "3528": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        952,
        962
      ],
      "op": "CALLER",
      "path": "42"
    },
    "3529": {
      "fn": "ERC1155Upgradeable.isApprovedForAll",
      "offset": [
        3873,
        4041
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x539"
    },
    "3532": {
      "fn": "ERC1155Upgradeable.isApprovedForAll",
      "jump": "i",
      "offset": [
        3873,
        4041
      ],
      "op": "JUMP",
      "path": "32"
    },
    "3533": {
      "branch": 223,
      "fn": "ERC1155Upgradeable.safeBatchTransferFrom",
      "offset": [
        4848,
        4884
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "3534": {
      "fn": "ERC1155Upgradeable.safeBatchTransferFrom",
      "offset": [
        4802,
        4962
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0xE34"
    },
    "3537": {
      "branch": 223,
      "fn": "ERC1155Upgradeable.safeBatchTransferFrom",
      "offset": [
        4802,
        4962
      ],
      "op": "JUMPI",
      "path": "32"
    },
    "3538": {
      "fn": "ERC1155Upgradeable.safeBatchTransferFrom",
      "offset": [
        4802,
        4962
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x40"
    },
    "3540": {
      "fn": "ERC1155Upgradeable.safeBatchTransferFrom",
      "offset": [
        4802,
        4962
      ],
      "op": "MLOAD",
      "path": "32"
    },
    "3541": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3545": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3547": {
      "op": "SHL"
    },
    "3548": {
      "fn": "ERC1155Upgradeable.safeBatchTransferFrom",
      "offset": [
        4802,
        4962
      ],
      "op": "DUP2",
      "path": "32"
    },
    "3549": {
      "fn": "ERC1155Upgradeable.safeBatchTransferFrom",
      "offset": [
        4802,
        4962
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "3550": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3552": {
      "fn": "ERC1155Upgradeable.safeBatchTransferFrom",
      "offset": [
        4802,
        4962
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x4"
    },
    "3554": {
      "fn": "ERC1155Upgradeable.safeBatchTransferFrom",
      "offset": [
        4802,
        4962
      ],
      "op": "DUP3",
      "path": "32"
    },
    "3555": {
      "fn": "ERC1155Upgradeable.safeBatchTransferFrom",
      "offset": [
        4802,
        4962
      ],
      "op": "ADD",
      "path": "32"
    },
    "3556": {
      "op": "MSTORE"
    },
    "3557": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "3559": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3561": {
      "op": "DUP3"
    },
    "3562": {
      "op": "ADD"
    },
    "3563": {
      "op": "MSTORE"
    },
    "3564": {
      "op": "PUSH32",
      "value": "0x455243313135353A207472616E736665722063616C6C6572206973206E6F7420"
    },
    "3597": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3599": {
      "op": "DUP3"
    },
    "3600": {
      "op": "ADD"
    },
    "3601": {
      "op": "MSTORE"
    },
    "3602": {
      "op": "PUSH18",
      "value": "0x1BDDDB995C881B9BDC88185C1C1C9BDD9959"
    },
    "3621": {
      "op": "PUSH1",
      "value": "0x72"
    },
    "3623": {
      "op": "SHL"
    },
    "3624": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3626": {
      "op": "DUP3"
    },
    "3627": {
      "op": "ADD"
    },
    "3628": {
      "op": "MSTORE"
    },
    "3629": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3631": {
      "op": "ADD"
    },
    "3632": {
      "fn": "ERC1155Upgradeable.safeBatchTransferFrom",
      "offset": [
        4802,
        4962
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x60F"
    },
    "3635": {
      "op": "JUMP"
    },
    "3636": {
      "fn": "ERC1155Upgradeable.safeBatchTransferFrom",
      "offset": [
        4802,
        4962
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "3637": {
      "fn": "ERC1155Upgradeable.safeBatchTransferFrom",
      "offset": [
        4973,
        5025
      ],
      "op": "PUSH2",
      "path": "32",
      "statement": 22,
      "value": "0xE41"
    },
    "3640": {
      "fn": "ERC1155Upgradeable.safeBatchTransferFrom",
      "offset": [
        4996,
        5000
      ],
      "op": "DUP6",
      "path": "32"
    },
    "3641": {
      "fn": "ERC1155Upgradeable.safeBatchTransferFrom",
      "offset": [
        5002,
        5004
      ],
      "op": "DUP6",
      "path": "32"
    },
    "3642": {
      "fn": "ERC1155Upgradeable.safeBatchTransferFrom",
      "offset": [
        5006,
        5009
      ],
      "op": "DUP6",
      "path": "32"
    },
    "3643": {
      "fn": "ERC1155Upgradeable.safeBatchTransferFrom",
      "offset": [
        5011,
        5018
      ],
      "op": "DUP6",
      "path": "32"
    },
    "3644": {
      "fn": "ERC1155Upgradeable.safeBatchTransferFrom",
      "offset": [
        5020,
        5024
      ],
      "op": "DUP6",
      "path": "32"
    },
    "3645": {
      "fn": "ERC1155Upgradeable.safeBatchTransferFrom",
      "offset": [
        4973,
        4995
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x3A68"
    },
    "3648": {
      "fn": "ERC1155Upgradeable.safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        4973,
        5025
      ],
      "op": "JUMP",
      "path": "32"
    },
    "3649": {
      "fn": "ERC1155Upgradeable.safeBatchTransferFrom",
      "offset": [
        4973,
        5025
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "3650": {
      "fn": "ERC1155Upgradeable.safeBatchTransferFrom",
      "offset": [
        4591,
        5033
      ],
      "op": "POP",
      "path": "32"
    },
    "3651": {
      "fn": "ERC1155Upgradeable.safeBatchTransferFrom",
      "offset": [
        4591,
        5033
      ],
      "op": "POP",
      "path": "32"
    },
    "3652": {
      "fn": "ERC1155Upgradeable.safeBatchTransferFrom",
      "offset": [
        4591,
        5033
      ],
      "op": "POP",
      "path": "32"
    },
    "3653": {
      "fn": "ERC1155Upgradeable.safeBatchTransferFrom",
      "offset": [
        4591,
        5033
      ],
      "op": "POP",
      "path": "32"
    },
    "3654": {
      "fn": "ERC1155Upgradeable.safeBatchTransferFrom",
      "offset": [
        4591,
        5033
      ],
      "op": "POP",
      "path": "32"
    },
    "3655": {
      "fn": "ERC1155Upgradeable.safeBatchTransferFrom",
      "jump": "o",
      "offset": [
        4591,
        5033
      ],
      "op": "JUMP",
      "path": "32"
    },
    "3656": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9398,
        9901
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3657": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9562,
        9580
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 23,
      "value": "0x40"
    },
    "3659": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9562,
        9580
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3660": {
      "op": "PUSH4",
      "value": "0x31A9108F"
    },
    "3665": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "3667": {
      "op": "SHL"
    },
    "3668": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9562,
        9580
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3669": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9562,
        9580
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3670": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9562,
        9580
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3672": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9562,
        9580
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3673": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9562,
        9580
      ],
      "op": "ADD",
      "path": "2"
    },
    "3674": {
      "op": "DUP6"
    },
    "3675": {
      "op": "SWAP1"
    },
    "3676": {
      "op": "MSTORE"
    },
    "3677": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9530,
        9535
      ],
      "op": "DUP6",
      "path": "2"
    },
    "3678": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9530,
        9535
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3679": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9584,
        9594
      ],
      "op": "CALLER",
      "path": "2"
    },
    "3680": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9584,
        9594
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3681": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3683": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3685": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3687": {
      "op": "SHL"
    },
    "3688": {
      "op": "SUB"
    },
    "3689": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9562,
        9574
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3690": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9562,
        9574
      ],
      "op": "AND",
      "path": "2"
    },
    "3691": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9562,
        9574
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3692": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9562,
        9574
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x6352211E"
    },
    "3697": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9562,
        9574
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3698": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3700": {
      "op": "ADD"
    },
    "3701": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9562,
        9580
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3703": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9562,
        9580
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3705": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9562,
        9580
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3706": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9562,
        9580
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3707": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9562,
        9580
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3708": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9562,
        9580
      ],
      "op": "SUB",
      "path": "2"
    },
    "3709": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9562,
        9580
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3710": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9562,
        9580
      ],
      "op": "DUP7",
      "path": "2"
    },
    "3711": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9562,
        9580
      ],
      "op": "GAS",
      "path": "2"
    },
    "3712": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9562,
        9580
      ],
      "op": "STATICCALL",
      "path": "2"
    },
    "3713": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9562,
        9580
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3714": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9562,
        9580
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3715": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9562,
        9580
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3716": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9562,
        9580
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE91"
    },
    "3719": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9562,
        9580
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3720": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9562,
        9580
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "3721": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9562,
        9580
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3723": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9562,
        9580
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3724": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9562,
        9580
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "3725": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9562,
        9580
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "3726": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9562,
        9580
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3728": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9562,
        9580
      ],
      "op": "REVERT",
      "path": "2"
    },
    "3729": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9562,
        9580
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3730": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9562,
        9580
      ],
      "op": "POP",
      "path": "2"
    },
    "3731": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9562,
        9580
      ],
      "op": "POP",
      "path": "2"
    },
    "3732": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9562,
        9580
      ],
      "op": "POP",
      "path": "2"
    },
    "3733": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9562,
        9580
      ],
      "op": "POP",
      "path": "2"
    },
    "3734": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9562,
        9580
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3736": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9562,
        9580
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3737": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9562,
        9580
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "3738": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9562,
        9580
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "3740": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9562,
        9580
      ],
      "op": "NOT",
      "path": "2"
    },
    "3741": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9562,
        9580
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "3743": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9562,
        9580
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3744": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9562,
        9580
      ],
      "op": "ADD",
      "path": "2"
    },
    "3745": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9562,
        9580
      ],
      "op": "AND",
      "path": "2"
    },
    "3746": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9562,
        9580
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3747": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9562,
        9580
      ],
      "op": "ADD",
      "path": "2"
    },
    "3748": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9562,
        9580
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3749": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9562,
        9580
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3751": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9562,
        9580
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3752": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9562,
        9580
      ],
      "op": "POP",
      "path": "2"
    },
    "3753": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9562,
        9580
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3754": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9562,
        9580
      ],
      "op": "ADD",
      "path": "2"
    },
    "3755": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9562,
        9580
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3756": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9562,
        9580
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xEB5"
    },
    "3759": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9562,
        9580
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3760": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9562,
        9580
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3761": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9562,
        9580
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4C0C"
    },
    "3764": {
      "fn": "BaseLoot.castCB",
      "jump": "i",
      "offset": [
        9562,
        9580
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3765": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9562,
        9580
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3766": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3768": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3770": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3772": {
      "op": "SHL"
    },
    "3773": {
      "op": "SUB"
    },
    "3774": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9562,
        9594
      ],
      "op": "AND",
      "path": "2"
    },
    "3775": {
      "branch": 167,
      "fn": "BaseLoot.castCB",
      "offset": [
        9562,
        9594
      ],
      "op": "EQ",
      "path": "2"
    },
    "3776": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9562,
        9617
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3777": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9562,
        9617
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xEDA"
    },
    "3780": {
      "branch": 167,
      "fn": "BaseLoot.castCB",
      "offset": [
        9562,
        9617
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3781": {
      "op": "POP"
    },
    "3782": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9606,
        9616
      ],
      "op": "CALLER",
      "path": "2"
    },
    "3783": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9598,
        9617
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3785": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9598,
        9617
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3786": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9598,
        9617
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3787": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9598,
        9617
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3788": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9598,
        9605
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "3791": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9598,
        9617
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3793": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9598,
        9617
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3794": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9598,
        9617
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3796": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9598,
        9617
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3797": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9598,
        9617
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "3798": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9598,
        9617
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3799": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9598,
        9617
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "3801": {
      "branch": 168,
      "fn": "BaseLoot.castCB",
      "offset": [
        9598,
        9617
      ],
      "op": "AND",
      "path": "2"
    },
    "3802": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9562,
        9617
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3803": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9554,
        9640
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xEF6"
    },
    "3806": {
      "branch": 168,
      "fn": "BaseLoot.castCB",
      "offset": [
        9554,
        9640
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3807": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9554,
        9640
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3809": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9554,
        9640
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3810": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3814": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3816": {
      "op": "SHL"
    },
    "3817": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9554,
        9640
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3818": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9554,
        9640
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3819": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9554,
        9640
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3821": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9554,
        9640
      ],
      "op": "ADD",
      "path": "2"
    },
    "3822": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9554,
        9640
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x60F"
    },
    "3825": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9554,
        9640
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3826": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9554,
        9640
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4C72"
    },
    "3829": {
      "fn": "BaseLoot.castCB",
      "jump": "i",
      "offset": [
        9554,
        9640
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3830": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9554,
        9640
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3831": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9666,
        9697
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 24,
      "value": "0x40"
    },
    "3833": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9666,
        9697
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3834": {
      "op": "PUSH4",
      "value": "0x6BFC324F"
    },
    "3839": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3841": {
      "op": "SHL"
    },
    "3842": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9666,
        9697
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3843": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9666,
        9697
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3844": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9666,
        9697
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3846": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9666,
        9697
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3847": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9666,
        9697
      ],
      "op": "ADD",
      "path": "2"
    },
    "3848": {
      "op": "DUP7"
    },
    "3849": {
      "op": "SWAP1"
    },
    "3850": {
      "op": "MSTORE"
    },
    "3851": {
      "offset": [
        2045,
        2047
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2E"
    },
    "3853": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3855": {
      "op": "DUP3"
    },
    "3856": {
      "op": "ADD"
    },
    "3857": {
      "op": "MSTORE"
    },
    "3858": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3860": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3862": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3864": {
      "op": "SHL"
    },
    "3865": {
      "op": "SUB"
    },
    "3866": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9666,
        9678
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3867": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9666,
        9678
      ],
      "op": "AND",
      "path": "2"
    },
    "3868": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9666,
        9678
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3869": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9666,
        9678
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x6BFC324F"
    },
    "3874": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9666,
        9678
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3875": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3877": {
      "op": "ADD"
    },
    "3878": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9666,
        9697
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3880": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9666,
        9697
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3882": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9666,
        9697
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3883": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9666,
        9697
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3884": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9666,
        9697
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3885": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9666,
        9697
      ],
      "op": "SUB",
      "path": "2"
    },
    "3886": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9666,
        9697
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3887": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9666,
        9697
      ],
      "op": "DUP7",
      "path": "2"
    },
    "3888": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9666,
        9697
      ],
      "op": "GAS",
      "path": "2"
    },
    "3889": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9666,
        9697
      ],
      "op": "STATICCALL",
      "path": "2"
    },
    "3890": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9666,
        9697
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3891": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9666,
        9697
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3892": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9666,
        9697
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3893": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9666,
        9697
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF42"
    },
    "3896": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9666,
        9697
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3897": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9666,
        9697
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "3898": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9666,
        9697
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3900": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9666,
        9697
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3901": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9666,
        9697
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "3902": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9666,
        9697
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "3903": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9666,
        9697
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3905": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9666,
        9697
      ],
      "op": "REVERT",
      "path": "2"
    },
    "3906": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9666,
        9697
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3907": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9666,
        9697
      ],
      "op": "POP",
      "path": "2"
    },
    "3908": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9666,
        9697
      ],
      "op": "POP",
      "path": "2"
    },
    "3909": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9666,
        9697
      ],
      "op": "POP",
      "path": "2"
    },
    "3910": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9666,
        9697
      ],
      "op": "POP",
      "path": "2"
    },
    "3911": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9666,
        9697
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3913": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9666,
        9697
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3914": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9666,
        9697
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "3915": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9666,
        9697
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "3917": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9666,
        9697
      ],
      "op": "NOT",
      "path": "2"
    },
    "3918": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9666,
        9697
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "3920": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9666,
        9697
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3921": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9666,
        9697
      ],
      "op": "ADD",
      "path": "2"
    },
    "3922": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9666,
        9697
      ],
      "op": "AND",
      "path": "2"
    },
    "3923": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9666,
        9697
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3924": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9666,
        9697
      ],
      "op": "ADD",
      "path": "2"
    },
    "3925": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9666,
        9697
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3926": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9666,
        9697
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3928": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9666,
        9697
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3929": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9666,
        9697
      ],
      "op": "POP",
      "path": "2"
    },
    "3930": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9666,
        9697
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3931": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9666,
        9697
      ],
      "op": "ADD",
      "path": "2"
    },
    "3932": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9666,
        9697
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3933": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9666,
        9697
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF66"
    },
    "3936": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9666,
        9697
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3937": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9666,
        9697
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3938": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9666,
        9697
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4BCC"
    },
    "3941": {
      "fn": "BaseLoot.castCB",
      "jump": "i",
      "offset": [
        9666,
        9697
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3942": {
      "branch": 169,
      "fn": "BaseLoot.castCB",
      "offset": [
        9666,
        9697
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3943": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9658,
        9730
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFB2"
    },
    "3946": {
      "branch": 169,
      "fn": "BaseLoot.castCB",
      "offset": [
        9658,
        9730
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3947": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9658,
        9730
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3949": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9658,
        9730
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3950": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3954": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3956": {
      "op": "SHL"
    },
    "3957": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9658,
        9730
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3958": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9658,
        9730
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3959": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3961": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9658,
        9730
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3963": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9658,
        9730
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3964": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9658,
        9730
      ],
      "op": "ADD",
      "path": "2"
    },
    "3965": {
      "op": "MSTORE"
    },
    "3966": {
      "op": "PUSH1",
      "value": "0x1C"
    },
    "3968": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3970": {
      "op": "DUP3"
    },
    "3971": {
      "op": "ADD"
    },
    "3972": {
      "op": "MSTORE"
    },
    "3973": {
      "op": "PUSH32",
      "value": "0x4865726F2063616E2774206361737420636861726D2062656173742E00000000"
    },
    "4006": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4008": {
      "op": "DUP3"
    },
    "4009": {
      "op": "ADD"
    },
    "4010": {
      "op": "MSTORE"
    },
    "4011": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4013": {
      "op": "ADD"
    },
    "4014": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9658,
        9730
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x60F"
    },
    "4017": {
      "op": "JUMP"
    },
    "4018": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9658,
        9730
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4019": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9756,
        9762
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 25,
      "value": "0xFE"
    },
    "4021": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9756,
        9762
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4022": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9756,
        9797
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4024": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9756,
        9797
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4025": {
      "op": "PUSH4",
      "value": "0x156A0BF1"
    },
    "4030": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "4032": {
      "op": "SHL"
    },
    "4033": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9756,
        9797
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4034": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9756,
        9797
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4035": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4037": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4039": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4041": {
      "op": "SHL"
    },
    "4042": {
      "op": "SUB"
    },
    "4043": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9756,
        9762
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4044": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9756,
        9762
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4045": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9756,
        9762
      ],
      "op": "AND",
      "path": "2"
    },
    "4046": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9756,
        9762
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4047": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9756,
        9771
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x55A82FC4"
    },
    "4052": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9756,
        9771
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4053": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9756,
        9797
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFE8"
    },
    "4056": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9756,
        9797
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4057": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9772,
        9777
      ],
      "op": "DUP10",
      "path": "2"
    },
    "4058": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9772,
        9777
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4059": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9779,
        9783
      ],
      "op": "DUP10",
      "path": "2"
    },
    "4060": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9779,
        9783
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4061": {
      "offset": [
        3476,
        3481
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2710"
    },
    "4064": {
      "fn": "BaseLoot.castCB",
      "offset": [
        3476,
        3481
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4065": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9756,
        9797
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "4067": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9756,
        9797
      ],
      "op": "ADD",
      "path": "2"
    },
    "4068": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9756,
        9797
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4C51"
    },
    "4071": {
      "fn": "BaseLoot.castCB",
      "jump": "i",
      "offset": [
        9756,
        9797
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4072": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9756,
        9797
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4073": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9756,
        9797
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4075": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9756,
        9797
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4077": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9756,
        9797
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4078": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9756,
        9797
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4079": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9756,
        9797
      ],
      "op": "DUP4",
      "path": "2"
    },
    "4080": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9756,
        9797
      ],
      "op": "SUB",
      "path": "2"
    },
    "4081": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9756,
        9797
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4082": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9756,
        9797
      ],
      "op": "DUP7",
      "path": "2"
    },
    "4083": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9756,
        9797
      ],
      "op": "GAS",
      "path": "2"
    },
    "4084": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9756,
        9797
      ],
      "op": "STATICCALL",
      "path": "2"
    },
    "4085": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9756,
        9797
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "4086": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9756,
        9797
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4087": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9756,
        9797
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "4088": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9756,
        9797
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1005"
    },
    "4091": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9756,
        9797
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4092": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9756,
        9797
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "4093": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9756,
        9797
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4095": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9756,
        9797
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4096": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9756,
        9797
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "4097": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9756,
        9797
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "4098": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9756,
        9797
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4100": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9756,
        9797
      ],
      "op": "REVERT",
      "path": "2"
    },
    "4101": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9756,
        9797
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4102": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9756,
        9797
      ],
      "op": "POP",
      "path": "2"
    },
    "4103": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9756,
        9797
      ],
      "op": "POP",
      "path": "2"
    },
    "4104": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9756,
        9797
      ],
      "op": "POP",
      "path": "2"
    },
    "4105": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9756,
        9797
      ],
      "op": "POP",
      "path": "2"
    },
    "4106": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9756,
        9797
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4108": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9756,
        9797
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4109": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9756,
        9797
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "4110": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9756,
        9797
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "4112": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9756,
        9797
      ],
      "op": "NOT",
      "path": "2"
    },
    "4113": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9756,
        9797
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "4115": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9756,
        9797
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4116": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9756,
        9797
      ],
      "op": "ADD",
      "path": "2"
    },
    "4117": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9756,
        9797
      ],
      "op": "AND",
      "path": "2"
    },
    "4118": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9756,
        9797
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4119": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9756,
        9797
      ],
      "op": "ADD",
      "path": "2"
    },
    "4120": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9756,
        9797
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4121": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9756,
        9797
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4123": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9756,
        9797
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4124": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9756,
        9797
      ],
      "op": "POP",
      "path": "2"
    },
    "4125": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9756,
        9797
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4126": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9756,
        9797
      ],
      "op": "ADD",
      "path": "2"
    },
    "4127": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9756,
        9797
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4128": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9756,
        9797
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1029"
    },
    "4131": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9756,
        9797
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4132": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9756,
        9797
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4133": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9756,
        9797
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4BCC"
    },
    "4136": {
      "fn": "BaseLoot.castCB",
      "jump": "i",
      "offset": [
        9756,
        9797
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4137": {
      "branch": 170,
      "fn": "BaseLoot.castCB",
      "offset": [
        9756,
        9797
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4138": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9748,
        9819
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1069"
    },
    "4141": {
      "branch": 170,
      "fn": "BaseLoot.castCB",
      "offset": [
        9748,
        9819
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4142": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9748,
        9819
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4144": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9748,
        9819
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4145": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4149": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4151": {
      "op": "SHL"
    },
    "4152": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9748,
        9819
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4153": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9748,
        9819
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4154": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4156": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9748,
        9819
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "4158": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9748,
        9819
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4159": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9748,
        9819
      ],
      "op": "ADD",
      "path": "2"
    },
    "4160": {
      "op": "MSTORE"
    },
    "4161": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "4163": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4165": {
      "op": "DUP3"
    },
    "4166": {
      "op": "ADD"
    },
    "4167": {
      "op": "MSTORE"
    },
    "4168": {
      "op": "PUSH17",
      "value": "0x21B0B713BA1031B430B936903A3430BA17"
    },
    "4186": {
      "op": "PUSH1",
      "value": "0x79"
    },
    "4188": {
      "op": "SHL"
    },
    "4189": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4191": {
      "op": "DUP3"
    },
    "4192": {
      "op": "ADD"
    },
    "4193": {
      "op": "MSTORE"
    },
    "4194": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4196": {
      "op": "ADD"
    },
    "4197": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9748,
        9819
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x60F"
    },
    "4200": {
      "op": "JUMP"
    },
    "4201": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9748,
        9819
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4202": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9838,
        9844
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 26,
      "value": "0xFE"
    },
    "4204": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9838,
        9844
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4205": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9838,
        9890
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4207": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9838,
        9890
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4208": {
      "op": "PUSH4",
      "value": "0x16B980F1"
    },
    "4213": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "4215": {
      "op": "SHL"
    },
    "4216": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9838,
        9890
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4217": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9838,
        9890
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4218": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4220": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4222": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4224": {
      "op": "SHL"
    },
    "4225": {
      "op": "SUB"
    },
    "4226": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9838,
        9844
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4227": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9838,
        9844
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4228": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9838,
        9844
      ],
      "op": "AND",
      "path": "2"
    },
    "4229": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9838,
        9844
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4230": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9838,
        9853
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x2D7301E2"
    },
    "4235": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9838,
        9853
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4236": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9838,
        9890
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7B1"
    },
    "4239": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9838,
        9890
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4240": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9854,
        9859
      ],
      "op": "DUP10",
      "path": "2"
    },
    "4241": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9854,
        9859
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4242": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9861,
        9868
      ],
      "op": "DUP9",
      "path": "2"
    },
    "4243": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9861,
        9868
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4244": {
      "offset": [
        2045,
        2047
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2E"
    },
    "4246": {
      "fn": "BaseLoot.castCB",
      "offset": [
        2045,
        2047
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4247": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9883,
        9889
      ],
      "op": "DUP10",
      "path": "2"
    },
    "4248": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9883,
        9889
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4249": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9838,
        9890
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "4251": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9838,
        9890
      ],
      "op": "ADD",
      "path": "2"
    },
    "4252": {
      "fn": "BaseLoot.castCB",
      "offset": [
        9838,
        9890
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4C29"
    },
    "4255": {
      "fn": "BaseLoot.castCB",
      "jump": "i",
      "offset": [
        9838,
        9890
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4256": {
      "fn": "BaseLoot.castRES",
      "offset": [
        9903,
        11251
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4257": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10067,
        10086
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4259": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10067,
        10086
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4260": {
      "op": "PUSH4",
      "value": "0x7B303965"
    },
    "4265": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4267": {
      "op": "SHL"
    },
    "4268": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10067,
        10086
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4269": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10067,
        10086
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4270": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10067,
        10086
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "4272": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10067,
        10086
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4273": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10067,
        10086
      ],
      "op": "ADD",
      "path": "2"
    },
    "4274": {
      "op": "DUP4"
    },
    "4275": {
      "op": "SWAP1"
    },
    "4276": {
      "op": "MSTORE"
    },
    "4277": {
      "fn": "BaseLoot.castRES",
      "offset": [
        9981,
        9985
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4279": {
      "fn": "BaseLoot.castRES",
      "offset": [
        9981,
        9985
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4280": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10022,
        10027
      ],
      "op": "DUP5",
      "path": "2"
    },
    "4281": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10022,
        10027
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4282": {
      "fn": "BaseLoot.castRES",
      "offset": [
        9981,
        9985
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4283": {
      "fn": "BaseLoot.castRES",
      "offset": [
        9981,
        9985
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4284": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4286": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4288": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4290": {
      "op": "SHL"
    },
    "4291": {
      "op": "SUB"
    },
    "4292": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10067,
        10080
      ],
      "op": "DUP4",
      "path": "2"
    },
    "4293": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10067,
        10080
      ],
      "op": "AND",
      "path": "2"
    },
    "4294": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10067,
        10080
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4295": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10067,
        10080
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x7B303965"
    },
    "4300": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10067,
        10080
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4301": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4303": {
      "op": "ADD"
    },
    "4304": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10067,
        10086
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xC0"
    },
    "4306": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10067,
        10086
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4308": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10067,
        10086
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4309": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10067,
        10086
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4310": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10067,
        10086
      ],
      "op": "DUP4",
      "path": "2"
    },
    "4311": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10067,
        10086
      ],
      "op": "SUB",
      "path": "2"
    },
    "4312": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10067,
        10086
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4313": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10067,
        10086
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4315": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10067,
        10086
      ],
      "op": "DUP8",
      "path": "2"
    },
    "4316": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10067,
        10086
      ],
      "op": "GAS",
      "path": "2"
    },
    "4317": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10067,
        10086
      ],
      "op": "CALL",
      "path": "2"
    },
    "4318": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10067,
        10086
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "4319": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10067,
        10086
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4320": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10067,
        10086
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "4321": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10067,
        10086
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x10EE"
    },
    "4324": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10067,
        10086
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4325": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10067,
        10086
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "4326": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10067,
        10086
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4328": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10067,
        10086
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4329": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10067,
        10086
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "4330": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10067,
        10086
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "4331": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10067,
        10086
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4333": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10067,
        10086
      ],
      "op": "REVERT",
      "path": "2"
    },
    "4334": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10067,
        10086
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4335": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10067,
        10086
      ],
      "op": "POP",
      "path": "2"
    },
    "4336": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10067,
        10086
      ],
      "op": "POP",
      "path": "2"
    },
    "4337": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10067,
        10086
      ],
      "op": "POP",
      "path": "2"
    },
    "4338": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10067,
        10086
      ],
      "op": "POP",
      "path": "2"
    },
    "4339": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10067,
        10086
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4341": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10067,
        10086
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4342": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10067,
        10086
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "4343": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10067,
        10086
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "4345": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10067,
        10086
      ],
      "op": "NOT",
      "path": "2"
    },
    "4346": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10067,
        10086
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "4348": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10067,
        10086
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4349": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10067,
        10086
      ],
      "op": "ADD",
      "path": "2"
    },
    "4350": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10067,
        10086
      ],
      "op": "AND",
      "path": "2"
    },
    "4351": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10067,
        10086
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4352": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10067,
        10086
      ],
      "op": "ADD",
      "path": "2"
    },
    "4353": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10067,
        10086
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4354": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10067,
        10086
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4356": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10067,
        10086
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4357": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10067,
        10086
      ],
      "op": "POP",
      "path": "2"
    },
    "4358": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10067,
        10086
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4359": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10067,
        10086
      ],
      "op": "ADD",
      "path": "2"
    },
    "4360": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10067,
        10086
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4361": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10067,
        10086
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1112"
    },
    "4364": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10067,
        10086
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4365": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10067,
        10086
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4366": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10067,
        10086
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4CD8"
    },
    "4369": {
      "fn": "BaseLoot.castRES",
      "jump": "i",
      "offset": [
        10067,
        10086
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4370": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10067,
        10086
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4371": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10112,
        10143
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 27,
      "value": "0x40"
    },
    "4373": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10112,
        10143
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4374": {
      "op": "PUSH4",
      "value": "0x6BFC324F"
    },
    "4379": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4381": {
      "op": "SHL"
    },
    "4382": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10112,
        10143
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4383": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10112,
        10143
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4384": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10112,
        10143
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "4386": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10112,
        10143
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4387": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10112,
        10143
      ],
      "op": "ADD",
      "path": "2"
    },
    "4388": {
      "op": "DUP8"
    },
    "4389": {
      "op": "SWAP1"
    },
    "4390": {
      "op": "MSTORE"
    },
    "4391": {
      "offset": [
        3193,
        3196
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x88"
    },
    "4393": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4395": {
      "op": "DUP3"
    },
    "4396": {
      "op": "ADD"
    },
    "4397": {
      "op": "MSTORE"
    },
    "4398": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10046,
        10086
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4399": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10046,
        10086
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4400": {
      "op": "POP"
    },
    "4401": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4403": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4405": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4407": {
      "op": "SHL"
    },
    "4408": {
      "op": "SUB"
    },
    "4409": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10112,
        10124
      ],
      "op": "DUP4",
      "path": "2"
    },
    "4410": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10112,
        10124
      ],
      "op": "AND",
      "path": "2"
    },
    "4411": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10112,
        10124
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4412": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10112,
        10124
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x6BFC324F"
    },
    "4417": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10112,
        10124
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4418": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4420": {
      "op": "ADD"
    },
    "4421": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10112,
        10143
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4423": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10112,
        10143
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4425": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10112,
        10143
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4426": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10112,
        10143
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4427": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10112,
        10143
      ],
      "op": "DUP4",
      "path": "2"
    },
    "4428": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10112,
        10143
      ],
      "op": "SUB",
      "path": "2"
    },
    "4429": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10112,
        10143
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4430": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10112,
        10143
      ],
      "op": "DUP7",
      "path": "2"
    },
    "4431": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10112,
        10143
      ],
      "op": "GAS",
      "path": "2"
    },
    "4432": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10112,
        10143
      ],
      "op": "STATICCALL",
      "path": "2"
    },
    "4433": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10112,
        10143
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "4434": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10112,
        10143
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4435": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10112,
        10143
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "4436": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10112,
        10143
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1161"
    },
    "4439": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10112,
        10143
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4440": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10112,
        10143
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "4441": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10112,
        10143
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4443": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10112,
        10143
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4444": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10112,
        10143
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "4445": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10112,
        10143
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "4446": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10112,
        10143
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4448": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10112,
        10143
      ],
      "op": "REVERT",
      "path": "2"
    },
    "4449": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10112,
        10143
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4450": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10112,
        10143
      ],
      "op": "POP",
      "path": "2"
    },
    "4451": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10112,
        10143
      ],
      "op": "POP",
      "path": "2"
    },
    "4452": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10112,
        10143
      ],
      "op": "POP",
      "path": "2"
    },
    "4453": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10112,
        10143
      ],
      "op": "POP",
      "path": "2"
    },
    "4454": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10112,
        10143
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4456": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10112,
        10143
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4457": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10112,
        10143
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "4458": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10112,
        10143
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "4460": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10112,
        10143
      ],
      "op": "NOT",
      "path": "2"
    },
    "4461": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10112,
        10143
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "4463": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10112,
        10143
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4464": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10112,
        10143
      ],
      "op": "ADD",
      "path": "2"
    },
    "4465": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10112,
        10143
      ],
      "op": "AND",
      "path": "2"
    },
    "4466": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10112,
        10143
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4467": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10112,
        10143
      ],
      "op": "ADD",
      "path": "2"
    },
    "4468": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10112,
        10143
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4469": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10112,
        10143
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4471": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10112,
        10143
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4472": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10112,
        10143
      ],
      "op": "POP",
      "path": "2"
    },
    "4473": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10112,
        10143
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4474": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10112,
        10143
      ],
      "op": "ADD",
      "path": "2"
    },
    "4475": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10112,
        10143
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4476": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10112,
        10143
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1185"
    },
    "4479": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10112,
        10143
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4480": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10112,
        10143
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4481": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10112,
        10143
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4BCC"
    },
    "4484": {
      "fn": "BaseLoot.castRES",
      "jump": "i",
      "offset": [
        10112,
        10143
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4485": {
      "branch": 171,
      "fn": "BaseLoot.castRES",
      "offset": [
        10112,
        10143
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4486": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10104,
        10168
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x11C8"
    },
    "4489": {
      "branch": 171,
      "fn": "BaseLoot.castRES",
      "offset": [
        10104,
        10168
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4490": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10104,
        10168
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4492": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10104,
        10168
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4493": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4497": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4499": {
      "op": "SHL"
    },
    "4500": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10104,
        10168
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4501": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10104,
        10168
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4502": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4504": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10104,
        10168
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "4506": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10104,
        10168
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4507": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10104,
        10168
      ],
      "op": "ADD",
      "path": "2"
    },
    "4508": {
      "op": "MSTORE"
    },
    "4509": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "4511": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4513": {
      "op": "DUP3"
    },
    "4514": {
      "op": "ADD"
    },
    "4515": {
      "op": "MSTORE"
    },
    "4516": {
      "op": "PUSH20",
      "value": "0x2432B9379031B0B713BA1031B0B9BA103932B997"
    },
    "4537": {
      "op": "PUSH1",
      "value": "0x61"
    },
    "4539": {
      "op": "SHL"
    },
    "4540": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4542": {
      "op": "DUP3"
    },
    "4543": {
      "op": "ADD"
    },
    "4544": {
      "op": "MSTORE"
    },
    "4545": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4547": {
      "op": "ADD"
    },
    "4548": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10104,
        10168
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x60F"
    },
    "4551": {
      "op": "JUMP"
    },
    "4552": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10104,
        10168
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4553": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10194,
        10212
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 28,
      "value": "0x40"
    },
    "4555": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10194,
        10212
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4556": {
      "op": "PUSH4",
      "value": "0x31A9108F"
    },
    "4561": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "4563": {
      "op": "SHL"
    },
    "4564": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10194,
        10212
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4565": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10194,
        10212
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4566": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10194,
        10212
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "4568": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10194,
        10212
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4569": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10194,
        10212
      ],
      "op": "ADD",
      "path": "2"
    },
    "4570": {
      "op": "DUP7"
    },
    "4571": {
      "op": "SWAP1"
    },
    "4572": {
      "op": "MSTORE"
    },
    "4573": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10216,
        10226
      ],
      "op": "CALLER",
      "path": "2"
    },
    "4574": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10216,
        10226
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4575": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4577": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4579": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4581": {
      "op": "SHL"
    },
    "4582": {
      "op": "SUB"
    },
    "4583": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10194,
        10206
      ],
      "op": "DUP5",
      "path": "2"
    },
    "4584": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10194,
        10206
      ],
      "op": "AND",
      "path": "2"
    },
    "4585": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10194,
        10206
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4586": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10194,
        10206
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x6352211E"
    },
    "4591": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10194,
        10206
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4592": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4594": {
      "op": "ADD"
    },
    "4595": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10194,
        10212
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4597": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10194,
        10212
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4599": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10194,
        10212
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4600": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10194,
        10212
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4601": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10194,
        10212
      ],
      "op": "DUP4",
      "path": "2"
    },
    "4602": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10194,
        10212
      ],
      "op": "SUB",
      "path": "2"
    },
    "4603": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10194,
        10212
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4604": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10194,
        10212
      ],
      "op": "DUP7",
      "path": "2"
    },
    "4605": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10194,
        10212
      ],
      "op": "GAS",
      "path": "2"
    },
    "4606": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10194,
        10212
      ],
      "op": "STATICCALL",
      "path": "2"
    },
    "4607": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10194,
        10212
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "4608": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10194,
        10212
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4609": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10194,
        10212
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "4610": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10194,
        10212
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x120F"
    },
    "4613": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10194,
        10212
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4614": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10194,
        10212
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "4615": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10194,
        10212
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4617": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10194,
        10212
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4618": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10194,
        10212
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "4619": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10194,
        10212
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "4620": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10194,
        10212
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4622": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10194,
        10212
      ],
      "op": "REVERT",
      "path": "2"
    },
    "4623": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10194,
        10212
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4624": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10194,
        10212
      ],
      "op": "POP",
      "path": "2"
    },
    "4625": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10194,
        10212
      ],
      "op": "POP",
      "path": "2"
    },
    "4626": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10194,
        10212
      ],
      "op": "POP",
      "path": "2"
    },
    "4627": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10194,
        10212
      ],
      "op": "POP",
      "path": "2"
    },
    "4628": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10194,
        10212
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4630": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10194,
        10212
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4631": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10194,
        10212
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "4632": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10194,
        10212
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "4634": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10194,
        10212
      ],
      "op": "NOT",
      "path": "2"
    },
    "4635": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10194,
        10212
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "4637": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10194,
        10212
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4638": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10194,
        10212
      ],
      "op": "ADD",
      "path": "2"
    },
    "4639": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10194,
        10212
      ],
      "op": "AND",
      "path": "2"
    },
    "4640": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10194,
        10212
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4641": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10194,
        10212
      ],
      "op": "ADD",
      "path": "2"
    },
    "4642": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10194,
        10212
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4643": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10194,
        10212
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4645": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10194,
        10212
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4646": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10194,
        10212
      ],
      "op": "POP",
      "path": "2"
    },
    "4647": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10194,
        10212
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4648": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10194,
        10212
      ],
      "op": "ADD",
      "path": "2"
    },
    "4649": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10194,
        10212
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4650": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10194,
        10212
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1233"
    },
    "4653": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10194,
        10212
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4654": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10194,
        10212
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4655": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10194,
        10212
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4C0C"
    },
    "4658": {
      "fn": "BaseLoot.castRES",
      "jump": "i",
      "offset": [
        10194,
        10212
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4659": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10194,
        10212
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4660": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4662": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4664": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4666": {
      "op": "SHL"
    },
    "4667": {
      "op": "SUB"
    },
    "4668": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10194,
        10226
      ],
      "op": "AND",
      "path": "2"
    },
    "4669": {
      "branch": 172,
      "fn": "BaseLoot.castRES",
      "offset": [
        10194,
        10226
      ],
      "op": "EQ",
      "path": "2"
    },
    "4670": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10194,
        10249
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4671": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10194,
        10249
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1258"
    },
    "4674": {
      "branch": 172,
      "fn": "BaseLoot.castRES",
      "offset": [
        10194,
        10249
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4675": {
      "op": "POP"
    },
    "4676": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10238,
        10248
      ],
      "op": "CALLER",
      "path": "2"
    },
    "4677": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10230,
        10249
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4679": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10230,
        10249
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4680": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10230,
        10249
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4681": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10230,
        10249
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4682": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10230,
        10237
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "4685": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10230,
        10249
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4687": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10230,
        10249
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4688": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10230,
        10249
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4690": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10230,
        10249
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4691": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10230,
        10249
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "4692": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10230,
        10249
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4693": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10230,
        10249
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "4695": {
      "branch": 173,
      "fn": "BaseLoot.castRES",
      "offset": [
        10230,
        10249
      ],
      "op": "AND",
      "path": "2"
    },
    "4696": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10194,
        10249
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4697": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10186,
        10272
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1274"
    },
    "4700": {
      "branch": 173,
      "fn": "BaseLoot.castRES",
      "offset": [
        10186,
        10272
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4701": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10186,
        10272
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4703": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10186,
        10272
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4704": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4708": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4710": {
      "op": "SHL"
    },
    "4711": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10186,
        10272
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4712": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10186,
        10272
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4713": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10186,
        10272
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "4715": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10186,
        10272
      ],
      "op": "ADD",
      "path": "2"
    },
    "4716": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10186,
        10272
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x60F"
    },
    "4719": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10186,
        10272
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4720": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10186,
        10272
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4C72"
    },
    "4723": {
      "fn": "BaseLoot.castRES",
      "jump": "i",
      "offset": [
        10186,
        10272
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4724": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10186,
        10272
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4725": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10323,
        10339
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4727": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10323,
        10339
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4728": {
      "op": "PUSH4",
      "value": "0x43E8C3F7"
    },
    "4733": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "4735": {
      "op": "SHL"
    },
    "4736": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10323,
        10339
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4737": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10323,
        10339
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4738": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10323,
        10339
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "4740": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10323,
        10339
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4741": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10323,
        10339
      ],
      "op": "ADD",
      "path": "2"
    },
    "4742": {
      "op": "DUP7"
    },
    "4743": {
      "op": "SWAP1"
    },
    "4744": {
      "op": "MSTORE"
    },
    "4745": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10292,
        10303
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4747": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10292,
        10303
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4748": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10292,
        10303
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4749": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10292,
        10303
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4750": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4752": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4754": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4756": {
      "op": "SHL"
    },
    "4757": {
      "op": "SUB"
    },
    "4758": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10323,
        10333
      ],
      "op": "DUP6",
      "path": "2"
    },
    "4759": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10323,
        10333
      ],
      "op": "AND",
      "path": "2"
    },
    "4760": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10323,
        10333
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4761": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10323,
        10333
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x87D187EE"
    },
    "4766": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10323,
        10333
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4767": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4769": {
      "op": "ADD"
    },
    "4770": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10323,
        10339
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4772": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10323,
        10339
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4773": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10323,
        10339
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4774": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10323,
        10339
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4775": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10323,
        10339
      ],
      "op": "DUP4",
      "path": "2"
    },
    "4776": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10323,
        10339
      ],
      "op": "SUB",
      "path": "2"
    },
    "4777": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10323,
        10339
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4778": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10323,
        10339
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4780": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10323,
        10339
      ],
      "op": "DUP8",
      "path": "2"
    },
    "4781": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10323,
        10339
      ],
      "op": "GAS",
      "path": "2"
    },
    "4782": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10323,
        10339
      ],
      "op": "CALL",
      "path": "2"
    },
    "4783": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10323,
        10339
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "4784": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10323,
        10339
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4785": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10323,
        10339
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "4786": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10323,
        10339
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x12BF"
    },
    "4789": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10323,
        10339
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4790": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10323,
        10339
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "4791": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10323,
        10339
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4793": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10323,
        10339
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4794": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10323,
        10339
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "4795": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10323,
        10339
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "4796": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10323,
        10339
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4798": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10323,
        10339
      ],
      "op": "REVERT",
      "path": "2"
    },
    "4799": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10323,
        10339
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4800": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10323,
        10339
      ],
      "op": "POP",
      "path": "2"
    },
    "4801": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10323,
        10339
      ],
      "op": "POP",
      "path": "2"
    },
    "4802": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10323,
        10339
      ],
      "op": "POP",
      "path": "2"
    },
    "4803": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10323,
        10339
      ],
      "op": "POP",
      "path": "2"
    },
    "4804": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10323,
        10339
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4806": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10323,
        10339
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4807": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10323,
        10339
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "4808": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10323,
        10339
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "4810": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10323,
        10339
      ],
      "op": "NOT",
      "path": "2"
    },
    "4811": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10323,
        10339
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "4813": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10323,
        10339
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4814": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10323,
        10339
      ],
      "op": "ADD",
      "path": "2"
    },
    "4815": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10323,
        10339
      ],
      "op": "AND",
      "path": "2"
    },
    "4816": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10323,
        10339
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4817": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10323,
        10339
      ],
      "op": "ADD",
      "path": "2"
    },
    "4818": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10323,
        10339
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4819": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10323,
        10339
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4821": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10323,
        10339
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4822": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10323,
        10339
      ],
      "op": "POP",
      "path": "2"
    },
    "4823": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10323,
        10339
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4824": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10323,
        10339
      ],
      "op": "ADD",
      "path": "2"
    },
    "4825": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10323,
        10339
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4826": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10323,
        10339
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x12E3"
    },
    "4829": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10323,
        10339
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4830": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10323,
        10339
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4831": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10323,
        10339
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4BA8"
    },
    "4834": {
      "fn": "BaseLoot.castRES",
      "jump": "i",
      "offset": [
        10323,
        10339
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4835": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10323,
        10339
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4836": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10374,
        10392
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4838": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10374,
        10392
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4839": {
      "op": "PUSH4",
      "value": "0x6573C787"
    },
    "4844": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4846": {
      "op": "SHL"
    },
    "4847": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10374,
        10392
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4848": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10374,
        10392
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4849": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10374,
        10392
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "4851": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10374,
        10392
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4852": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10374,
        10392
      ],
      "op": "ADD",
      "path": "2"
    },
    "4853": {
      "op": "DUP4"
    },
    "4854": {
      "op": "SWAP1"
    },
    "4855": {
      "op": "MSTORE"
    },
    "4856": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10291,
        10339
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4857": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10291,
        10339
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "4858": {
      "op": "POP"
    },
    "4859": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10291,
        10339
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4860": {
      "op": "POP"
    },
    "4861": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10357,
        10371
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4863": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10357,
        10371
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4864": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4866": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4868": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4870": {
      "op": "SHL"
    },
    "4871": {
      "op": "SUB"
    },
    "4872": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10374,
        10384
      ],
      "op": "DUP7",
      "path": "2"
    },
    "4873": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10374,
        10384
      ],
      "op": "AND",
      "path": "2"
    },
    "4874": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10374,
        10384
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4875": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10374,
        10384
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x6573C787"
    },
    "4880": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10374,
        10384
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4881": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4883": {
      "op": "ADD"
    },
    "4884": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10374,
        10392
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4886": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10374,
        10392
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4888": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10374,
        10392
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4889": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10374,
        10392
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4890": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10374,
        10392
      ],
      "op": "DUP4",
      "path": "2"
    },
    "4891": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10374,
        10392
      ],
      "op": "SUB",
      "path": "2"
    },
    "4892": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10374,
        10392
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4893": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10374,
        10392
      ],
      "op": "DUP7",
      "path": "2"
    },
    "4894": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10374,
        10392
      ],
      "op": "GAS",
      "path": "2"
    },
    "4895": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10374,
        10392
      ],
      "op": "STATICCALL",
      "path": "2"
    },
    "4896": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10374,
        10392
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "4897": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10374,
        10392
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4898": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10374,
        10392
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "4899": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10374,
        10392
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1330"
    },
    "4902": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10374,
        10392
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4903": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10374,
        10392
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "4904": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10374,
        10392
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4906": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10374,
        10392
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4907": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10374,
        10392
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "4908": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10374,
        10392
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "4909": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10374,
        10392
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4911": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10374,
        10392
      ],
      "op": "REVERT",
      "path": "2"
    },
    "4912": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10374,
        10392
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4913": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10374,
        10392
      ],
      "op": "POP",
      "path": "2"
    },
    "4914": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10374,
        10392
      ],
      "op": "POP",
      "path": "2"
    },
    "4915": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10374,
        10392
      ],
      "op": "POP",
      "path": "2"
    },
    "4916": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10374,
        10392
      ],
      "op": "POP",
      "path": "2"
    },
    "4917": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10374,
        10392
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4919": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10374,
        10392
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4920": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10374,
        10392
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "4921": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10374,
        10392
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "4923": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10374,
        10392
      ],
      "op": "NOT",
      "path": "2"
    },
    "4924": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10374,
        10392
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "4926": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10374,
        10392
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4927": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10374,
        10392
      ],
      "op": "ADD",
      "path": "2"
    },
    "4928": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10374,
        10392
      ],
      "op": "AND",
      "path": "2"
    },
    "4929": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10374,
        10392
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4930": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10374,
        10392
      ],
      "op": "ADD",
      "path": "2"
    },
    "4931": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10374,
        10392
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4932": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10374,
        10392
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4934": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10374,
        10392
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4935": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10374,
        10392
      ],
      "op": "POP",
      "path": "2"
    },
    "4936": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10374,
        10392
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4937": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10374,
        10392
      ],
      "op": "ADD",
      "path": "2"
    },
    "4938": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10374,
        10392
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4939": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10374,
        10392
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1354"
    },
    "4942": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10374,
        10392
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4943": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10374,
        10392
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4944": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10374,
        10392
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4BCC"
    },
    "4947": {
      "fn": "BaseLoot.castRES",
      "jump": "i",
      "offset": [
        10374,
        10392
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4948": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10374,
        10392
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4949": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10357,
        10392
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4950": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10357,
        10392
      ],
      "op": "POP",
      "path": "2"
    },
    "4951": {
      "branch": 174,
      "fn": "BaseLoot.castRES",
      "offset": [
        10418,
        10427
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 29
    },
    "4952": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10418,
        10478
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4953": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10418,
        10478
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x136C"
    },
    "4956": {
      "branch": 174,
      "fn": "BaseLoot.castRES",
      "offset": [
        10418,
        10478
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4957": {
      "op": "POP"
    },
    "4958": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10431,
        10443
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x80"
    },
    "4960": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10431,
        10443
      ],
      "op": "DUP5",
      "path": "2"
    },
    "4961": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10431,
        10443
      ],
      "op": "ADD",
      "path": "2"
    },
    "4962": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10431,
        10443
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4963": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10431,
        10450
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4964": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4966": {
      "op": "PUSH1",
      "value": "0x89"
    },
    "4968": {
      "op": "SHL"
    },
    "4969": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10431,
        10474
      ],
      "op": "AND",
      "path": "2"
    },
    "4970": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10431,
        10478
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "4971": {
      "branch": 175,
      "fn": "BaseLoot.castRES",
      "offset": [
        10431,
        10478
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "4972": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10418,
        10478
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4973": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10410,
        10496
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1388"
    },
    "4976": {
      "branch": 175,
      "fn": "BaseLoot.castRES",
      "offset": [
        10410,
        10496
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4977": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10410,
        10496
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4979": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10410,
        10496
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4980": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4984": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4986": {
      "op": "SHL"
    },
    "4987": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10410,
        10496
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4988": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10410,
        10496
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4989": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10410,
        10496
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "4991": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10410,
        10496
      ],
      "op": "ADD",
      "path": "2"
    },
    "4992": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10410,
        10496
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x60F"
    },
    "4995": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10410,
        10496
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4996": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10410,
        10496
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4D73"
    },
    "4999": {
      "fn": "BaseLoot.castRES",
      "jump": "i",
      "offset": [
        10410,
        10496
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5000": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10410,
        10496
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5001": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10531,
        10532
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "5003": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10514,
        10528
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5005": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10589,
        10610
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x139E"
    },
    "5008": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10531,
        10532
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5009": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10601,
        10610
      ],
      "op": "PUSH8",
      "path": "2",
      "value": "0x16345785D8A0000"
    },
    "5018": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10589,
        10610
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4DB0"
    },
    "5021": {
      "fn": "BaseLoot.castRES",
      "jump": "i",
      "offset": [
        10589,
        10610
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5022": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10589,
        10610
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5023": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10755,
        10794
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 30,
      "value": "0x40"
    },
    "5025": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10755,
        10794
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5026": {
      "op": "PUSH4",
      "value": "0x6BFC324F"
    },
    "5031": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5033": {
      "op": "SHL"
    },
    "5034": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10755,
        10794
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5035": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10755,
        10794
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5036": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10755,
        10794
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "5038": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10755,
        10794
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5039": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10755,
        10794
      ],
      "op": "ADD",
      "path": "2"
    },
    "5040": {
      "op": "DUP13"
    },
    "5041": {
      "op": "SWAP1"
    },
    "5042": {
      "op": "MSTORE"
    },
    "5043": {
      "offset": [
        3059,
        3062
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x86"
    },
    "5045": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5047": {
      "op": "DUP3"
    },
    "5048": {
      "op": "ADD"
    },
    "5049": {
      "op": "MSTORE"
    },
    "5050": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10577,
        10610
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5051": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10577,
        10610
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5052": {
      "op": "POP"
    },
    "5053": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5055": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5057": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5059": {
      "op": "SHL"
    },
    "5060": {
      "op": "SUB"
    },
    "5061": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10755,
        10767
      ],
      "op": "DUP9",
      "path": "2"
    },
    "5062": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10755,
        10767
      ],
      "op": "AND",
      "path": "2"
    },
    "5063": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10755,
        10767
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5064": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10755,
        10767
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x6BFC324F"
    },
    "5069": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10755,
        10767
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5070": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5072": {
      "op": "ADD"
    },
    "5073": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10755,
        10794
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5075": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10755,
        10794
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5077": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10755,
        10794
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5078": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10755,
        10794
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5079": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10755,
        10794
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5080": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10755,
        10794
      ],
      "op": "SUB",
      "path": "2"
    },
    "5081": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10755,
        10794
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5082": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10755,
        10794
      ],
      "op": "DUP7",
      "path": "2"
    },
    "5083": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10755,
        10794
      ],
      "op": "GAS",
      "path": "2"
    },
    "5084": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10755,
        10794
      ],
      "op": "STATICCALL",
      "path": "2"
    },
    "5085": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10755,
        10794
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "5086": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10755,
        10794
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5087": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10755,
        10794
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "5088": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10755,
        10794
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x13ED"
    },
    "5091": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10755,
        10794
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5092": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10755,
        10794
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "5093": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10755,
        10794
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5095": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10755,
        10794
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5096": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10755,
        10794
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "5097": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10755,
        10794
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "5098": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10755,
        10794
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5100": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10755,
        10794
      ],
      "op": "REVERT",
      "path": "2"
    },
    "5101": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10755,
        10794
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5102": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10755,
        10794
      ],
      "op": "POP",
      "path": "2"
    },
    "5103": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10755,
        10794
      ],
      "op": "POP",
      "path": "2"
    },
    "5104": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10755,
        10794
      ],
      "op": "POP",
      "path": "2"
    },
    "5105": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10755,
        10794
      ],
      "op": "POP",
      "path": "2"
    },
    "5106": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10755,
        10794
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5108": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10755,
        10794
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5109": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10755,
        10794
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "5110": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10755,
        10794
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "5112": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10755,
        10794
      ],
      "op": "NOT",
      "path": "2"
    },
    "5113": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10755,
        10794
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "5115": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10755,
        10794
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5116": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10755,
        10794
      ],
      "op": "ADD",
      "path": "2"
    },
    "5117": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10755,
        10794
      ],
      "op": "AND",
      "path": "2"
    },
    "5118": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10755,
        10794
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5119": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10755,
        10794
      ],
      "op": "ADD",
      "path": "2"
    },
    "5120": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10755,
        10794
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5121": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10755,
        10794
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5123": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10755,
        10794
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5124": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10755,
        10794
      ],
      "op": "POP",
      "path": "2"
    },
    "5125": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10755,
        10794
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5126": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10755,
        10794
      ],
      "op": "ADD",
      "path": "2"
    },
    "5127": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10755,
        10794
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5128": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10755,
        10794
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1411"
    },
    "5131": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10755,
        10794
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5132": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10755,
        10794
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5133": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10755,
        10794
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4BCC"
    },
    "5136": {
      "fn": "BaseLoot.castRES",
      "jump": "i",
      "offset": [
        10755,
        10794
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5137": {
      "branch": 176,
      "fn": "BaseLoot.castRES",
      "offset": [
        10755,
        10794
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5138": {
      "op": "POP"
    },
    "5139": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10915,
        10934
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5141": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10915,
        10934
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5142": {
      "op": "PUSH4",
      "value": "0x43E8C3F7"
    },
    "5147": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "5149": {
      "op": "SHL"
    },
    "5150": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10915,
        10934
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5151": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10915,
        10934
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5152": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10915,
        10934
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "5154": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10915,
        10934
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5155": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10915,
        10934
      ],
      "op": "ADD",
      "path": "2"
    },
    "5156": {
      "op": "DUP11"
    },
    "5157": {
      "op": "SWAP1"
    },
    "5158": {
      "op": "MSTORE"
    },
    "5159": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10888,
        10898
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5161": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10888,
        10898
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5162": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10888,
        10898
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5163": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10888,
        10898
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5164": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5166": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5168": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5170": {
      "op": "SHL"
    },
    "5171": {
      "op": "SUB"
    },
    "5172": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10915,
        10925
      ],
      "op": "DUP11",
      "path": "2"
    },
    "5173": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10915,
        10925
      ],
      "op": "AND",
      "path": "2"
    },
    "5174": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10915,
        10925
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5175": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10915,
        10925
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x87D187EE"
    },
    "5180": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10915,
        10925
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5181": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5183": {
      "op": "ADD"
    },
    "5184": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10915,
        10934
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5186": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10915,
        10934
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5187": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10915,
        10934
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5188": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10915,
        10934
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5189": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10915,
        10934
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5190": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10915,
        10934
      ],
      "op": "SUB",
      "path": "2"
    },
    "5191": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10915,
        10934
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5192": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10915,
        10934
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5194": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10915,
        10934
      ],
      "op": "DUP8",
      "path": "2"
    },
    "5195": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10915,
        10934
      ],
      "op": "GAS",
      "path": "2"
    },
    "5196": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10915,
        10934
      ],
      "op": "CALL",
      "path": "2"
    },
    "5197": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10915,
        10934
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "5198": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10915,
        10934
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5199": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10915,
        10934
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "5200": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10915,
        10934
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x145D"
    },
    "5203": {
      "branch": 176,
      "fn": "BaseLoot.castRES",
      "offset": [
        10915,
        10934
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5204": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10915,
        10934
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "5205": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10915,
        10934
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5207": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10915,
        10934
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5208": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10915,
        10934
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "5209": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10915,
        10934
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "5210": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10915,
        10934
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5212": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10915,
        10934
      ],
      "op": "REVERT",
      "path": "2"
    },
    "5213": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10915,
        10934
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5214": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10915,
        10934
      ],
      "op": "POP",
      "path": "2"
    },
    "5215": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10915,
        10934
      ],
      "op": "POP",
      "path": "2"
    },
    "5216": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10915,
        10934
      ],
      "op": "POP",
      "path": "2"
    },
    "5217": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10915,
        10934
      ],
      "op": "POP",
      "path": "2"
    },
    "5218": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10915,
        10934
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5220": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10915,
        10934
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5221": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10915,
        10934
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "5222": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10915,
        10934
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "5224": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10915,
        10934
      ],
      "op": "NOT",
      "path": "2"
    },
    "5225": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10915,
        10934
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "5227": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10915,
        10934
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5228": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10915,
        10934
      ],
      "op": "ADD",
      "path": "2"
    },
    "5229": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10915,
        10934
      ],
      "op": "AND",
      "path": "2"
    },
    "5230": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10915,
        10934
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5231": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10915,
        10934
      ],
      "op": "ADD",
      "path": "2"
    },
    "5232": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10915,
        10934
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5233": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10915,
        10934
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5235": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10915,
        10934
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5236": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10915,
        10934
      ],
      "op": "POP",
      "path": "2"
    },
    "5237": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10915,
        10934
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5238": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10915,
        10934
      ],
      "op": "ADD",
      "path": "2"
    },
    "5239": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10915,
        10934
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5240": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10915,
        10934
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1481"
    },
    "5243": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10915,
        10934
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5244": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10915,
        10934
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5245": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10915,
        10934
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4BA8"
    },
    "5248": {
      "fn": "BaseLoot.castRES",
      "jump": "i",
      "offset": [
        10915,
        10934
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5249": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10915,
        10934
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5250": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10955,
        10972
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5252": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10955,
        10972
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5253": {
      "op": "PUSH4",
      "value": "0x6573C787"
    },
    "5258": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5260": {
      "op": "SHL"
    },
    "5261": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10955,
        10972
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5262": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10955,
        10972
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5263": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10955,
        10972
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "5265": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10955,
        10972
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5266": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10955,
        10972
      ],
      "op": "ADD",
      "path": "2"
    },
    "5267": {
      "op": "DUP4"
    },
    "5268": {
      "op": "SWAP1"
    },
    "5269": {
      "op": "MSTORE"
    },
    "5270": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10887,
        10934
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5271": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10887,
        10934
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "5272": {
      "op": "POP"
    },
    "5273": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10887,
        10934
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5274": {
      "op": "POP"
    },
    "5275": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5277": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5279": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5281": {
      "op": "SHL"
    },
    "5282": {
      "op": "SUB"
    },
    "5283": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10955,
        10965
      ],
      "op": "DUP11",
      "path": "2"
    },
    "5284": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10955,
        10965
      ],
      "op": "AND",
      "path": "2"
    },
    "5285": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10955,
        10965
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5286": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10955,
        10965
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x6573C787"
    },
    "5291": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10955,
        10965
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5292": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5294": {
      "op": "ADD"
    },
    "5295": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10955,
        10972
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5297": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10955,
        10972
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5299": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10955,
        10972
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5300": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10955,
        10972
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5301": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10955,
        10972
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5302": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10955,
        10972
      ],
      "op": "SUB",
      "path": "2"
    },
    "5303": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10955,
        10972
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5304": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10955,
        10972
      ],
      "op": "DUP7",
      "path": "2"
    },
    "5305": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10955,
        10972
      ],
      "op": "GAS",
      "path": "2"
    },
    "5306": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10955,
        10972
      ],
      "op": "STATICCALL",
      "path": "2"
    },
    "5307": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10955,
        10972
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "5308": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10955,
        10972
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5309": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10955,
        10972
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "5310": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10955,
        10972
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x14CB"
    },
    "5313": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10955,
        10972
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5314": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10955,
        10972
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "5315": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10955,
        10972
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5317": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10955,
        10972
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5318": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10955,
        10972
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "5319": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10955,
        10972
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "5320": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10955,
        10972
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5322": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10955,
        10972
      ],
      "op": "REVERT",
      "path": "2"
    },
    "5323": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10955,
        10972
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5324": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10955,
        10972
      ],
      "op": "POP",
      "path": "2"
    },
    "5325": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10955,
        10972
      ],
      "op": "POP",
      "path": "2"
    },
    "5326": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10955,
        10972
      ],
      "op": "POP",
      "path": "2"
    },
    "5327": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10955,
        10972
      ],
      "op": "POP",
      "path": "2"
    },
    "5328": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10955,
        10972
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5330": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10955,
        10972
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5331": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10955,
        10972
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "5332": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10955,
        10972
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "5334": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10955,
        10972
      ],
      "op": "NOT",
      "path": "2"
    },
    "5335": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10955,
        10972
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "5337": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10955,
        10972
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5338": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10955,
        10972
      ],
      "op": "ADD",
      "path": "2"
    },
    "5339": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10955,
        10972
      ],
      "op": "AND",
      "path": "2"
    },
    "5340": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10955,
        10972
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5341": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10955,
        10972
      ],
      "op": "ADD",
      "path": "2"
    },
    "5342": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10955,
        10972
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5343": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10955,
        10972
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5345": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10955,
        10972
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5346": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10955,
        10972
      ],
      "op": "POP",
      "path": "2"
    },
    "5347": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10955,
        10972
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5348": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10955,
        10972
      ],
      "op": "ADD",
      "path": "2"
    },
    "5349": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10955,
        10972
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5350": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10955,
        10972
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x14EF"
    },
    "5353": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10955,
        10972
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5354": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10955,
        10972
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5355": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10955,
        10972
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4BCC"
    },
    "5358": {
      "fn": "BaseLoot.castRES",
      "jump": "i",
      "offset": [
        10955,
        10972
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5359": {
      "branch": 177,
      "fn": "BaseLoot.castRES",
      "offset": [
        10955,
        10972
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5360": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10952,
        11108
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1567"
    },
    "5363": {
      "branch": 177,
      "fn": "BaseLoot.castRES",
      "offset": [
        10952,
        11108
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5364": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11025,
        11029
      ],
      "op": "DUP9",
      "path": "2",
      "statement": 31
    },
    "5365": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5367": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5369": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5371": {
      "op": "SHL"
    },
    "5372": {
      "op": "SUB"
    },
    "5373": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11025,
        11043
      ],
      "op": "AND",
      "path": "2"
    },
    "5374": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11025,
        11043
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x8FC56767"
    },
    "5379": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11044,
        11048
      ],
      "op": "DUP14",
      "path": "2"
    },
    "5380": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11050,
        11057
      ],
      "op": "DUP14",
      "path": "2"
    },
    "5381": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11059,
        11068
      ],
      "op": "PUSH8",
      "path": "2",
      "value": "0x6F05B59D3B20000"
    },
    "5390": {
      "offset": [
        3980,
        3986
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "5392": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11076,
        11081
      ],
      "op": "DUP14",
      "path": "2"
    },
    "5393": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11076,
        11088
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "5395": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11076,
        11088
      ],
      "op": "ADD",
      "path": "2"
    },
    "5396": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11076,
        11088
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5397": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11025,
        11089
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5399": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11025,
        11089
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5400": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11025,
        11089
      ],
      "op": "DUP7",
      "path": "2"
    },
    "5401": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11025,
        11089
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xFFFFFFFF"
    },
    "5406": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11025,
        11089
      ],
      "op": "AND",
      "path": "2"
    },
    "5407": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11025,
        11089
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE0"
    },
    "5409": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11025,
        11089
      ],
      "op": "SHL",
      "path": "2"
    },
    "5410": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11025,
        11089
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5411": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11025,
        11089
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5412": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11025,
        11089
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "5414": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11025,
        11089
      ],
      "op": "ADD",
      "path": "2"
    },
    "5415": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11025,
        11089
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1534"
    },
    "5418": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11025,
        11089
      ],
      "op": "SWAP6",
      "path": "2"
    },
    "5419": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11025,
        11089
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "5420": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11025,
        11089
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "5421": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11025,
        11089
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "5422": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11025,
        11089
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5423": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11025,
        11089
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5424": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11025,
        11089
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4BE9"
    },
    "5427": {
      "fn": "BaseLoot.castRES",
      "jump": "i",
      "offset": [
        11025,
        11089
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5428": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11025,
        11089
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5429": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11025,
        11089
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5431": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11025,
        11089
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5433": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11025,
        11089
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5434": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11025,
        11089
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5435": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11025,
        11089
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5436": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11025,
        11089
      ],
      "op": "SUB",
      "path": "2"
    },
    "5437": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11025,
        11089
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5438": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11025,
        11089
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5440": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11025,
        11089
      ],
      "op": "DUP8",
      "path": "2"
    },
    "5441": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11025,
        11089
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5442": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11025,
        11089
      ],
      "op": "EXTCODESIZE",
      "path": "2"
    },
    "5443": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11025,
        11089
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "5444": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11025,
        11089
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5445": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11025,
        11089
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "5446": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11025,
        11089
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x154E"
    },
    "5449": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11025,
        11089
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5450": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11025,
        11089
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5452": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11025,
        11089
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5453": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11025,
        11089
      ],
      "op": "REVERT",
      "path": "2"
    },
    "5454": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11025,
        11089
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5455": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11025,
        11089
      ],
      "op": "POP",
      "path": "2"
    },
    "5456": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11025,
        11089
      ],
      "op": "GAS",
      "path": "2"
    },
    "5457": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11025,
        11089
      ],
      "op": "CALL",
      "path": "2"
    },
    "5458": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11025,
        11089
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "5459": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11025,
        11089
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5460": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11025,
        11089
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "5461": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11025,
        11089
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1562"
    },
    "5464": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11025,
        11089
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5465": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11025,
        11089
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "5466": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11025,
        11089
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5468": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11025,
        11089
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5469": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11025,
        11089
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "5470": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11025,
        11089
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "5471": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11025,
        11089
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5473": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11025,
        11089
      ],
      "op": "REVERT",
      "path": "2"
    },
    "5474": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11025,
        11089
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5475": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11025,
        11089
      ],
      "op": "POP",
      "path": "2"
    },
    "5476": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11025,
        11089
      ],
      "op": "POP",
      "path": "2"
    },
    "5477": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11025,
        11089
      ],
      "op": "POP",
      "path": "2"
    },
    "5478": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11025,
        11089
      ],
      "op": "POP",
      "path": "2"
    },
    "5479": {
      "fn": "BaseLoot.castRES",
      "offset": [
        10952,
        11108
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5480": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11183,
        11189
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 32,
      "value": "0xFE"
    },
    "5482": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11183,
        11189
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5484": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11183,
        11189
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5485": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11183,
        11189
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5486": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11183,
        11189
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5487": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11183,
        11189
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "5490": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11183,
        11189
      ],
      "op": "EXP",
      "path": "2"
    },
    "5491": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11183,
        11189
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5492": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11183,
        11189
      ],
      "op": "DIV",
      "path": "2"
    },
    "5493": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5495": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5497": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5499": {
      "op": "SHL"
    },
    "5500": {
      "op": "SUB"
    },
    "5501": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11183,
        11189
      ],
      "op": "AND",
      "path": "2"
    },
    "5502": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5504": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5506": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5508": {
      "op": "SHL"
    },
    "5509": {
      "op": "SUB"
    },
    "5510": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11183,
        11198
      ],
      "op": "AND",
      "path": "2"
    },
    "5511": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11183,
        11198
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x55A82FC4"
    },
    "5516": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11199,
        11204
      ],
      "op": "DUP15",
      "path": "2"
    },
    "5517": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11206,
        11210
      ],
      "op": "DUP15",
      "path": "2"
    },
    "5518": {
      "offset": [
        3554,
        3559
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2712"
    },
    "5521": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11183,
        11226
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5523": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11183,
        11226
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5524": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11183,
        11226
      ],
      "op": "DUP5",
      "path": "2"
    },
    "5525": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11183,
        11226
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xFFFFFFFF"
    },
    "5530": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11183,
        11226
      ],
      "op": "AND",
      "path": "2"
    },
    "5531": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11183,
        11226
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE0"
    },
    "5533": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11183,
        11226
      ],
      "op": "SHL",
      "path": "2"
    },
    "5534": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11183,
        11226
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5535": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11183,
        11226
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5536": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11183,
        11226
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "5538": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11183,
        11226
      ],
      "op": "ADD",
      "path": "2"
    },
    "5539": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11183,
        11226
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x15AE"
    },
    "5542": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11183,
        11226
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "5543": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11183,
        11226
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "5544": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11183,
        11226
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5545": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11183,
        11226
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5546": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11183,
        11226
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4C51"
    },
    "5549": {
      "fn": "BaseLoot.castRES",
      "jump": "i",
      "offset": [
        11183,
        11226
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5550": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11183,
        11226
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5551": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11183,
        11226
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5553": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11183,
        11226
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5555": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11183,
        11226
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5556": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11183,
        11226
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5557": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11183,
        11226
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5558": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11183,
        11226
      ],
      "op": "SUB",
      "path": "2"
    },
    "5559": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11183,
        11226
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5560": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11183,
        11226
      ],
      "op": "DUP7",
      "path": "2"
    },
    "5561": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11183,
        11226
      ],
      "op": "GAS",
      "path": "2"
    },
    "5562": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11183,
        11226
      ],
      "op": "STATICCALL",
      "path": "2"
    },
    "5563": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11183,
        11226
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "5564": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11183,
        11226
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5565": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11183,
        11226
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "5566": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11183,
        11226
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x15CB"
    },
    "5569": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11183,
        11226
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5570": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11183,
        11226
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "5571": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11183,
        11226
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5573": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11183,
        11226
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5574": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11183,
        11226
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "5575": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11183,
        11226
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "5576": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11183,
        11226
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5578": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11183,
        11226
      ],
      "op": "REVERT",
      "path": "2"
    },
    "5579": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11183,
        11226
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5580": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11183,
        11226
      ],
      "op": "POP",
      "path": "2"
    },
    "5581": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11183,
        11226
      ],
      "op": "POP",
      "path": "2"
    },
    "5582": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11183,
        11226
      ],
      "op": "POP",
      "path": "2"
    },
    "5583": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11183,
        11226
      ],
      "op": "POP",
      "path": "2"
    },
    "5584": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11183,
        11226
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5586": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11183,
        11226
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5587": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11183,
        11226
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "5588": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11183,
        11226
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "5590": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11183,
        11226
      ],
      "op": "NOT",
      "path": "2"
    },
    "5591": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11183,
        11226
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "5593": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11183,
        11226
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5594": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11183,
        11226
      ],
      "op": "ADD",
      "path": "2"
    },
    "5595": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11183,
        11226
      ],
      "op": "AND",
      "path": "2"
    },
    "5596": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11183,
        11226
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5597": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11183,
        11226
      ],
      "op": "ADD",
      "path": "2"
    },
    "5598": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11183,
        11226
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5599": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11183,
        11226
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5601": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11183,
        11226
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5602": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11183,
        11226
      ],
      "op": "POP",
      "path": "2"
    },
    "5603": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11183,
        11226
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5604": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11183,
        11226
      ],
      "op": "ADD",
      "path": "2"
    },
    "5605": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11183,
        11226
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5606": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11183,
        11226
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x15EF"
    },
    "5609": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11183,
        11226
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5610": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11183,
        11226
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5611": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11183,
        11226
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4BCC"
    },
    "5614": {
      "fn": "BaseLoot.castRES",
      "jump": "i",
      "offset": [
        11183,
        11226
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5615": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11183,
        11226
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5616": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11133,
        11226
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "5617": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11133,
        11226
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "5618": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11133,
        11139
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFE"
    },
    "5620": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11133,
        11139
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5622": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11133,
        11139
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5623": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11133,
        11139
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5624": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11133,
        11139
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5625": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11133,
        11139
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "5628": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11133,
        11139
      ],
      "op": "EXP",
      "path": "2"
    },
    "5629": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11133,
        11139
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5630": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11133,
        11139
      ],
      "op": "DIV",
      "path": "2"
    },
    "5631": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5633": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5635": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5637": {
      "op": "SHL"
    },
    "5638": {
      "op": "SUB"
    },
    "5639": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11133,
        11139
      ],
      "op": "AND",
      "path": "2"
    },
    "5640": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5642": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5644": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5646": {
      "op": "SHL"
    },
    "5647": {
      "op": "SUB"
    },
    "5648": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11133,
        11148
      ],
      "op": "AND",
      "path": "2"
    },
    "5649": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11133,
        11148
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x55A82FC4"
    },
    "5654": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11149,
        11154
      ],
      "op": "DUP16",
      "path": "2"
    },
    "5655": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11156,
        11163
      ],
      "op": "DUP15",
      "path": "2"
    },
    "5656": {
      "offset": [
        3554,
        3559
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2712"
    },
    "5659": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11133,
        11179
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5661": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11133,
        11179
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5662": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11133,
        11179
      ],
      "op": "DUP5",
      "path": "2"
    },
    "5663": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11133,
        11179
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xFFFFFFFF"
    },
    "5668": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11133,
        11179
      ],
      "op": "AND",
      "path": "2"
    },
    "5669": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11133,
        11179
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE0"
    },
    "5671": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11133,
        11179
      ],
      "op": "SHL",
      "path": "2"
    },
    "5672": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11133,
        11179
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5673": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11133,
        11179
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5674": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11133,
        11179
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "5676": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11133,
        11179
      ],
      "op": "ADD",
      "path": "2"
    },
    "5677": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11133,
        11179
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1638"
    },
    "5680": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11133,
        11179
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "5681": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11133,
        11179
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "5682": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11133,
        11179
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5683": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11133,
        11179
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5684": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11133,
        11179
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4C51"
    },
    "5687": {
      "fn": "BaseLoot.castRES",
      "jump": "i",
      "offset": [
        11133,
        11179
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5688": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11133,
        11179
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5689": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11133,
        11179
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5691": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11133,
        11179
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5693": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11133,
        11179
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5694": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11133,
        11179
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5695": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11133,
        11179
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5696": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11133,
        11179
      ],
      "op": "SUB",
      "path": "2"
    },
    "5697": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11133,
        11179
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5698": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11133,
        11179
      ],
      "op": "DUP7",
      "path": "2"
    },
    "5699": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11133,
        11179
      ],
      "op": "GAS",
      "path": "2"
    },
    "5700": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11133,
        11179
      ],
      "op": "STATICCALL",
      "path": "2"
    },
    "5701": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11133,
        11179
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "5702": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11133,
        11179
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5703": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11133,
        11179
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "5704": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11133,
        11179
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1655"
    },
    "5707": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11133,
        11179
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5708": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11133,
        11179
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "5709": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11133,
        11179
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5711": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11133,
        11179
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5712": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11133,
        11179
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "5713": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11133,
        11179
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "5714": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11133,
        11179
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5716": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11133,
        11179
      ],
      "op": "REVERT",
      "path": "2"
    },
    "5717": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11133,
        11179
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5718": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11133,
        11179
      ],
      "op": "POP",
      "path": "2"
    },
    "5719": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11133,
        11179
      ],
      "op": "POP",
      "path": "2"
    },
    "5720": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11133,
        11179
      ],
      "op": "POP",
      "path": "2"
    },
    "5721": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11133,
        11179
      ],
      "op": "POP",
      "path": "2"
    },
    "5722": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11133,
        11179
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5724": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11133,
        11179
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5725": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11133,
        11179
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "5726": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11133,
        11179
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "5728": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11133,
        11179
      ],
      "op": "NOT",
      "path": "2"
    },
    "5729": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11133,
        11179
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "5731": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11133,
        11179
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5732": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11133,
        11179
      ],
      "op": "ADD",
      "path": "2"
    },
    "5733": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11133,
        11179
      ],
      "op": "AND",
      "path": "2"
    },
    "5734": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11133,
        11179
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5735": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11133,
        11179
      ],
      "op": "ADD",
      "path": "2"
    },
    "5736": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11133,
        11179
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5737": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11133,
        11179
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5739": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11133,
        11179
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5740": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11133,
        11179
      ],
      "op": "POP",
      "path": "2"
    },
    "5741": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11133,
        11179
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5742": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11133,
        11179
      ],
      "op": "ADD",
      "path": "2"
    },
    "5743": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11133,
        11179
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5744": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11133,
        11179
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1679"
    },
    "5747": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11133,
        11179
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5748": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11133,
        11179
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5749": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11133,
        11179
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4BCC"
    },
    "5752": {
      "fn": "BaseLoot.castRES",
      "jump": "i",
      "offset": [
        11133,
        11179
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5753": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11133,
        11179
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5754": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11133,
        11226
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "5755": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11133,
        11226
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "5756": {
      "branch": 178,
      "fn": "BaseLoot.castRES",
      "offset": [
        11133,
        11226
      ],
      "op": "EQ",
      "path": "2"
    },
    "5757": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11125,
        11240
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x16B4"
    },
    "5760": {
      "branch": 178,
      "fn": "BaseLoot.castRES",
      "offset": [
        11125,
        11240
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5761": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11125,
        11240
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5763": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11125,
        11240
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5764": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5768": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5770": {
      "op": "SHL"
    },
    "5771": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11125,
        11240
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5772": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11125,
        11240
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5773": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5775": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11125,
        11240
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "5777": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11125,
        11240
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5778": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11125,
        11240
      ],
      "op": "ADD",
      "path": "2"
    },
    "5779": {
      "op": "MSTORE"
    },
    "5780": {
      "op": "PUSH1",
      "value": "0x9"
    },
    "5782": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5784": {
      "op": "DUP3"
    },
    "5785": {
      "op": "ADD"
    },
    "5786": {
      "op": "MSTORE"
    },
    "5787": {
      "op": "PUSH9",
      "value": "0x2737BA103830B63997"
    },
    "5797": {
      "op": "PUSH1",
      "value": "0xB9"
    },
    "5799": {
      "op": "SHL"
    },
    "5800": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5802": {
      "op": "DUP3"
    },
    "5803": {
      "op": "ADD"
    },
    "5804": {
      "op": "MSTORE"
    },
    "5805": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5807": {
      "op": "ADD"
    },
    "5808": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11125,
        11240
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x60F"
    },
    "5811": {
      "op": "JUMP"
    },
    "5812": {
      "fn": "BaseLoot.castRES",
      "offset": [
        11125,
        11240
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5813": {
      "fn": "BaseLoot.castRES",
      "offset": [
        9987,
        11251
      ],
      "op": "POP",
      "path": "2"
    },
    "5814": {
      "fn": "BaseLoot.castRES",
      "offset": [
        9987,
        11251
      ],
      "op": "POP",
      "path": "2"
    },
    "5815": {
      "fn": "BaseLoot.castRES",
      "offset": [
        9987,
        11251
      ],
      "op": "POP",
      "path": "2"
    },
    "5816": {
      "fn": "BaseLoot.castRES",
      "offset": [
        9987,
        11251
      ],
      "op": "POP",
      "path": "2"
    },
    "5817": {
      "fn": "BaseLoot.castRES",
      "offset": [
        9987,
        11251
      ],
      "op": "POP",
      "path": "2"
    },
    "5818": {
      "fn": "BaseLoot.castRES",
      "offset": [
        9987,
        11251
      ],
      "op": "POP",
      "path": "2"
    },
    "5819": {
      "fn": "BaseLoot.castRES",
      "offset": [
        9987,
        11251
      ],
      "op": "POP",
      "path": "2"
    },
    "5820": {
      "fn": "BaseLoot.castRES",
      "offset": [
        9987,
        11251
      ],
      "op": "POP",
      "path": "2"
    },
    "5821": {
      "fn": "BaseLoot.castRES",
      "offset": [
        9987,
        11251
      ],
      "op": "POP",
      "path": "2"
    },
    "5822": {
      "fn": "BaseLoot.castRES",
      "offset": [
        9903,
        11251
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "5823": {
      "fn": "BaseLoot.castRES",
      "offset": [
        9903,
        11251
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "5824": {
      "fn": "BaseLoot.castRES",
      "offset": [
        9903,
        11251
      ],
      "op": "POP",
      "path": "2"
    },
    "5825": {
      "fn": "BaseLoot.castRES",
      "offset": [
        9903,
        11251
      ],
      "op": "POP",
      "path": "2"
    },
    "5826": {
      "fn": "BaseLoot.castRES",
      "offset": [
        9903,
        11251
      ],
      "op": "POP",
      "path": "2"
    },
    "5827": {
      "fn": "BaseLoot.castRES",
      "jump": "o",
      "offset": [
        9903,
        11251
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5828": {
      "fn": "Receiver.addonPay",
      "offset": [
        108,
        151
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "5829": {
      "fn": "Receiver.addonPay",
      "jump": "o",
      "offset": [
        108,
        151
      ],
      "op": "JUMP",
      "path": "29"
    },
    "5830": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "offset": [
        3049,
        3573
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "5831": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "offset": [
        3205,
        3221
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x60"
    },
    "5833": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "offset": [
        3266,
        3269
      ],
      "op": "DUP2",
      "path": "32",
      "statement": 33
    },
    "5834": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "offset": [
        3266,
        3276
      ],
      "op": "MLOAD",
      "path": "32"
    },
    "5835": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "offset": [
        3247,
        3255
      ],
      "op": "DUP4",
      "path": "32"
    },
    "5836": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "offset": [
        3247,
        3262
      ],
      "op": "MLOAD",
      "path": "32"
    },
    "5837": {
      "branch": 224,
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "offset": [
        3247,
        3276
      ],
      "op": "EQ",
      "path": "32"
    },
    "5838": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "offset": [
        3239,
        3322
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x172B"
    },
    "5841": {
      "branch": 224,
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "offset": [
        3239,
        3322
      ],
      "op": "JUMPI",
      "path": "32"
    },
    "5842": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "offset": [
        3239,
        3322
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x40"
    },
    "5844": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "offset": [
        3239,
        3322
      ],
      "op": "MLOAD",
      "path": "32"
    },
    "5845": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5849": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5851": {
      "op": "SHL"
    },
    "5852": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "offset": [
        3239,
        3322
      ],
      "op": "DUP2",
      "path": "32"
    },
    "5853": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "offset": [
        3239,
        3322
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "5854": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5856": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "offset": [
        3239,
        3322
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x4"
    },
    "5858": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "offset": [
        3239,
        3322
      ],
      "op": "DUP3",
      "path": "32"
    },
    "5859": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "offset": [
        3239,
        3322
      ],
      "op": "ADD",
      "path": "32"
    },
    "5860": {
      "op": "MSTORE"
    },
    "5861": {
      "op": "PUSH1",
      "value": "0x29"
    },
    "5863": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5865": {
      "op": "DUP3"
    },
    "5866": {
      "op": "ADD"
    },
    "5867": {
      "op": "MSTORE"
    },
    "5868": {
      "op": "PUSH32",
      "value": "0x455243313135353A206163636F756E747320616E6420696473206C656E677468"
    },
    "5901": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5903": {
      "op": "DUP3"
    },
    "5904": {
      "op": "ADD"
    },
    "5905": {
      "op": "MSTORE"
    },
    "5906": {
      "op": "PUSH9",
      "value": "0x40DAD2E6DAC2E8C6D"
    },
    "5916": {
      "op": "PUSH1",
      "value": "0xBB"
    },
    "5918": {
      "op": "SHL"
    },
    "5919": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5921": {
      "op": "DUP3"
    },
    "5922": {
      "op": "ADD"
    },
    "5923": {
      "op": "MSTORE"
    },
    "5924": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "5926": {
      "op": "ADD"
    },
    "5927": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "offset": [
        3239,
        3322
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x60F"
    },
    "5930": {
      "op": "JUMP"
    },
    "5931": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "offset": [
        3239,
        3322
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "5932": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "offset": [
        3335,
        3365
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x0"
    },
    "5934": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "offset": [
        3382,
        3390
      ],
      "op": "DUP4",
      "path": "32"
    },
    "5935": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "offset": [
        3382,
        3397
      ],
      "op": "MLOAD",
      "path": "32"
    },
    "5936": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5938": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5940": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5942": {
      "op": "SHL"
    },
    "5943": {
      "op": "SUB"
    },
    "5944": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "offset": [
        3368,
        3398
      ],
      "op": "DUP2",
      "path": "32"
    },
    "5945": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "offset": [
        3368,
        3398
      ],
      "op": "GT",
      "path": "32"
    },
    "5946": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "offset": [
        3368,
        3398
      ],
      "op": "ISZERO",
      "path": "32"
    },
    "5947": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "offset": [
        3368,
        3398
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x1746"
    },
    "5950": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "offset": [
        3368,
        3398
      ],
      "op": "JUMPI",
      "path": "32"
    },
    "5951": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "offset": [
        3368,
        3398
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x1746"
    },
    "5954": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "offset": [
        3368,
        3398
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x4592"
    },
    "5957": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "jump": "i",
      "offset": [
        3368,
        3398
      ],
      "op": "JUMP",
      "path": "32"
    },
    "5958": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "offset": [
        3368,
        3398
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "5959": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "offset": [
        3368,
        3398
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x40"
    },
    "5961": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "offset": [
        3368,
        3398
      ],
      "op": "MLOAD",
      "path": "32"
    },
    "5962": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "offset": [
        3368,
        3398
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "5963": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "offset": [
        3368,
        3398
      ],
      "op": "DUP1",
      "path": "32"
    },
    "5964": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "offset": [
        3368,
        3398
      ],
      "op": "DUP3",
      "path": "32"
    },
    "5965": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "offset": [
        3368,
        3398
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "5966": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "offset": [
        3368,
        3398
      ],
      "op": "DUP1",
      "path": "32"
    },
    "5967": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "offset": [
        3368,
        3398
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x20"
    },
    "5969": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "offset": [
        3368,
        3398
      ],
      "op": "MUL",
      "path": "32"
    },
    "5970": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "offset": [
        3368,
        3398
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x20"
    },
    "5972": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "offset": [
        3368,
        3398
      ],
      "op": "ADD",
      "path": "32"
    },
    "5973": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "offset": [
        3368,
        3398
      ],
      "op": "DUP3",
      "path": "32"
    },
    "5974": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "offset": [
        3368,
        3398
      ],
      "op": "ADD",
      "path": "32"
    },
    "5975": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "offset": [
        3368,
        3398
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x40"
    },
    "5977": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "offset": [
        3368,
        3398
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "5978": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "offset": [
        3368,
        3398
      ],
      "op": "DUP1",
      "path": "32"
    },
    "5979": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "offset": [
        3368,
        3398
      ],
      "op": "ISZERO",
      "path": "32"
    },
    "5980": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "offset": [
        3368,
        3398
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x176F"
    },
    "5983": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "offset": [
        3368,
        3398
      ],
      "op": "JUMPI",
      "path": "32"
    },
    "5984": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "offset": [
        3368,
        3398
      ],
      "op": "DUP2",
      "path": "32"
    },
    "5985": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "offset": [
        3368,
        3398
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x20"
    },
    "5987": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "offset": [
        3368,
        3398
      ],
      "op": "ADD",
      "path": "32"
    },
    "5988": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "offset": [
        3368,
        3398
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x20"
    },
    "5990": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "offset": [
        3368,
        3398
      ],
      "op": "DUP3",
      "path": "32"
    },
    "5991": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "offset": [
        3368,
        3398
      ],
      "op": "MUL",
      "path": "32"
    },
    "5992": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "offset": [
        3368,
        3398
      ],
      "op": "DUP1",
      "path": "32"
    },
    "5993": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "offset": [
        3368,
        3398
      ],
      "op": "CALLDATASIZE",
      "path": "32"
    },
    "5994": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "offset": [
        3368,
        3398
      ],
      "op": "DUP4",
      "path": "32"
    },
    "5995": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "offset": [
        3368,
        3398
      ],
      "op": "CALLDATACOPY",
      "path": "32"
    },
    "5996": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "offset": [
        3368,
        3398
      ],
      "op": "ADD",
      "path": "32"
    },
    "5997": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "offset": [
        3368,
        3398
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "5998": {
      "op": "POP"
    },
    "5999": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "offset": [
        3368,
        3398
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "6000": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "offset": [
        3368,
        3398
      ],
      "op": "POP",
      "path": "32"
    },
    "6001": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "offset": [
        3335,
        3398
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "6002": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "offset": [
        3335,
        3398
      ],
      "op": "POP",
      "path": "32"
    },
    "6003": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "offset": [
        3416,
        3425
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x0"
    },
    "6005": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "offset": [
        3411,
        3533
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "6006": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "offset": [
        3435,
        3443
      ],
      "op": "DUP5",
      "path": "32"
    },
    "6007": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "offset": [
        3435,
        3450
      ],
      "op": "MLOAD",
      "path": "32"
    },
    "6008": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "offset": [
        3431,
        3432
      ],
      "op": "DUP2",
      "path": "32"
    },
    "6009": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "offset": [
        3431,
        3450
      ],
      "op": "LT",
      "path": "32"
    },
    "6010": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "offset": [
        3411,
        3533
      ],
      "op": "ISZERO",
      "path": "32"
    },
    "6011": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "offset": [
        3411,
        3533
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x17E7"
    },
    "6014": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "offset": [
        3411,
        3533
      ],
      "op": "JUMPI",
      "path": "32"
    },
    "6015": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "offset": [
        3491,
        3521
      ],
      "op": "PUSH2",
      "path": "32",
      "statement": 34,
      "value": "0x17BA"
    },
    "6018": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "offset": [
        3501,
        3509
      ],
      "op": "DUP6",
      "path": "32"
    },
    "6019": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "offset": [
        3510,
        3511
      ],
      "op": "DUP3",
      "path": "32"
    },
    "6020": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "offset": [
        3501,
        3512
      ],
      "op": "DUP2",
      "path": "32"
    },
    "6021": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "offset": [
        3501,
        3512
      ],
      "op": "MLOAD",
      "path": "32"
    },
    "6022": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "offset": [
        3501,
        3512
      ],
      "op": "DUP2",
      "path": "32"
    },
    "6023": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "offset": [
        3501,
        3512
      ],
      "op": "LT",
      "path": "32"
    },
    "6024": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "offset": [
        3501,
        3512
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x1793"
    },
    "6027": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "offset": [
        3501,
        3512
      ],
      "op": "JUMPI",
      "path": "32"
    },
    "6028": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "offset": [
        3501,
        3512
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x1793"
    },
    "6031": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "offset": [
        3501,
        3512
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x4DCF"
    },
    "6034": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "jump": "i",
      "offset": [
        3501,
        3512
      ],
      "op": "JUMP",
      "path": "32"
    },
    "6035": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "offset": [
        3501,
        3512
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "6036": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "offset": [
        3501,
        3512
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x20"
    },
    "6038": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "offset": [
        3501,
        3512
      ],
      "op": "MUL",
      "path": "32"
    },
    "6039": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "offset": [
        3501,
        3512
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x20"
    },
    "6041": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "offset": [
        3501,
        3512
      ],
      "op": "ADD",
      "path": "32"
    },
    "6042": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "offset": [
        3501,
        3512
      ],
      "op": "ADD",
      "path": "32"
    },
    "6043": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "offset": [
        3501,
        3512
      ],
      "op": "MLOAD",
      "path": "32"
    },
    "6044": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "offset": [
        3514,
        3517
      ],
      "op": "DUP6",
      "path": "32"
    },
    "6045": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "offset": [
        3518,
        3519
      ],
      "op": "DUP4",
      "path": "32"
    },
    "6046": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "offset": [
        3514,
        3520
      ],
      "op": "DUP2",
      "path": "32"
    },
    "6047": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "offset": [
        3514,
        3520
      ],
      "op": "MLOAD",
      "path": "32"
    },
    "6048": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "offset": [
        3514,
        3520
      ],
      "op": "DUP2",
      "path": "32"
    },
    "6049": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "offset": [
        3514,
        3520
      ],
      "op": "LT",
      "path": "32"
    },
    "6050": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "offset": [
        3514,
        3520
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x17AD"
    },
    "6053": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "offset": [
        3514,
        3520
      ],
      "op": "JUMPI",
      "path": "32"
    },
    "6054": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "offset": [
        3514,
        3520
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x17AD"
    },
    "6057": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "offset": [
        3514,
        3520
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x4DCF"
    },
    "6060": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "jump": "i",
      "offset": [
        3514,
        3520
      ],
      "op": "JUMP",
      "path": "32"
    },
    "6061": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "offset": [
        3514,
        3520
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "6062": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "offset": [
        3514,
        3520
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x20"
    },
    "6064": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "offset": [
        3514,
        3520
      ],
      "op": "MUL",
      "path": "32"
    },
    "6065": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "offset": [
        3514,
        3520
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x20"
    },
    "6067": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "offset": [
        3514,
        3520
      ],
      "op": "ADD",
      "path": "32"
    },
    "6068": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "offset": [
        3514,
        3520
      ],
      "op": "ADD",
      "path": "32"
    },
    "6069": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "offset": [
        3514,
        3520
      ],
      "op": "MLOAD",
      "path": "32"
    },
    "6070": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "offset": [
        3491,
        3500
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x5A7"
    },
    "6073": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "jump": "i",
      "offset": [
        3491,
        3521
      ],
      "op": "JUMP",
      "path": "32"
    },
    "6074": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "offset": [
        3491,
        3521
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "6075": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "offset": [
        3472,
        3485
      ],
      "op": "DUP3",
      "path": "32"
    },
    "6076": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "offset": [
        3486,
        3487
      ],
      "op": "DUP3",
      "path": "32"
    },
    "6077": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "offset": [
        3472,
        3488
      ],
      "op": "DUP2",
      "path": "32"
    },
    "6078": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "offset": [
        3472,
        3488
      ],
      "op": "MLOAD",
      "path": "32"
    },
    "6079": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "offset": [
        3472,
        3488
      ],
      "op": "DUP2",
      "path": "32"
    },
    "6080": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "offset": [
        3472,
        3488
      ],
      "op": "LT",
      "path": "32"
    },
    "6081": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "offset": [
        3472,
        3488
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x17CC"
    },
    "6084": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "offset": [
        3472,
        3488
      ],
      "op": "JUMPI",
      "path": "32"
    },
    "6085": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "offset": [
        3472,
        3488
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x17CC"
    },
    "6088": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "offset": [
        3472,
        3488
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x4DCF"
    },
    "6091": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "jump": "i",
      "offset": [
        3472,
        3488
      ],
      "op": "JUMP",
      "path": "32"
    },
    "6092": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "offset": [
        3472,
        3488
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "6093": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "offset": [
        3472,
        3488
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x20"
    },
    "6095": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "offset": [
        3472,
        3488
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "6096": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "offset": [
        3472,
        3488
      ],
      "op": "DUP2",
      "path": "32"
    },
    "6097": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "offset": [
        3472,
        3488
      ],
      "op": "MUL",
      "path": "32"
    },
    "6098": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "offset": [
        3472,
        3488
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "6099": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "offset": [
        3472,
        3488
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "6100": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "offset": [
        3472,
        3488
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "6101": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "offset": [
        3472,
        3488
      ],
      "op": "ADD",
      "path": "32"
    },
    "6102": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "offset": [
        3472,
        3488
      ],
      "op": "ADD",
      "path": "32"
    },
    "6103": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "offset": [
        3472,
        3521
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "6104": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "offset": [
        3452,
        3455
      ],
      "op": "PUSH2",
      "path": "32",
      "statement": 35,
      "value": "0x17E0"
    },
    "6107": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "offset": [
        3452,
        3455
      ],
      "op": "DUP2",
      "path": "32"
    },
    "6108": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "offset": [
        3452,
        3455
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x4DE5"
    },
    "6111": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "jump": "i",
      "offset": [
        3452,
        3455
      ],
      "op": "JUMP",
      "path": "32"
    },
    "6112": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "offset": [
        3452,
        3455
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "6113": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "offset": [
        3452,
        3455
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "6114": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "offset": [
        3452,
        3455
      ],
      "op": "POP",
      "path": "32"
    },
    "6115": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "offset": [
        3411,
        3533
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x1775"
    },
    "6118": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "offset": [
        3411,
        3533
      ],
      "op": "JUMP",
      "path": "32"
    },
    "6119": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "offset": [
        3411,
        3533
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "6120": {
      "op": "POP"
    },
    "6121": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "offset": [
        3552,
        3565
      ],
      "op": "SWAP4",
      "path": "32",
      "statement": 36
    },
    "6122": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "offset": [
        3049,
        3573
      ],
      "op": "SWAP3",
      "path": "32"
    },
    "6123": {
      "op": "POP"
    },
    "6124": {
      "op": "POP"
    },
    "6125": {
      "op": "POP"
    },
    "6126": {
      "fn": "ERC1155Upgradeable.balanceOfBatch",
      "jump": "o",
      "offset": [
        3049,
        3573
      ],
      "op": "JUMP",
      "path": "32"
    },
    "6127": {
      "fn": "BaseLoot.initialize",
      "offset": [
        492,
        912
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6128": {
      "offset": [
        2421,
        2434
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x0"
    },
    "6130": {
      "fn": "BaseLoot.initialize",
      "offset": [
        2421,
        2434
      ],
      "op": "SLOAD",
      "path": "30"
    },
    "6131": {
      "fn": "BaseLoot.initialize",
      "offset": [
        2421,
        2434
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x100"
    },
    "6134": {
      "fn": "BaseLoot.initialize",
      "offset": [
        2421,
        2434
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "6135": {
      "fn": "BaseLoot.initialize",
      "offset": [
        2421,
        2434
      ],
      "op": "DIV",
      "path": "30"
    },
    "6136": {
      "fn": "BaseLoot.initialize",
      "offset": [
        2421,
        2434
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0xFF"
    },
    "6138": {
      "branch": 241,
      "fn": "BaseLoot.initialize",
      "offset": [
        2421,
        2434
      ],
      "op": "AND",
      "path": "30"
    },
    "6139": {
      "offset": [
        2421,
        2469
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x180A"
    },
    "6142": {
      "branch": 241,
      "fn": "BaseLoot.initialize",
      "offset": [
        2421,
        2469
      ],
      "op": "JUMPI",
      "path": "30"
    },
    "6143": {
      "offset": [
        2457,
        2469
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x0"
    },
    "6145": {
      "fn": "BaseLoot.initialize",
      "offset": [
        2457,
        2469
      ],
      "op": "SLOAD",
      "path": "30"
    },
    "6146": {
      "fn": "BaseLoot.initialize",
      "offset": [
        2457,
        2469
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0xFF"
    },
    "6148": {
      "fn": "BaseLoot.initialize",
      "offset": [
        2457,
        2469
      ],
      "op": "AND",
      "path": "30"
    },
    "6149": {
      "offset": [
        2456,
        2469
      ],
      "op": "ISZERO",
      "path": "30"
    },
    "6150": {
      "offset": [
        2421,
        2469
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x180E"
    },
    "6153": {
      "fn": "BaseLoot.initialize",
      "offset": [
        2421,
        2469
      ],
      "op": "JUMP",
      "path": "30"
    },
    "6154": {
      "branch": 242,
      "fn": "BaseLoot.initialize",
      "offset": [
        2421,
        2469
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "6155": {
      "fn": "Initializable._isConstructor",
      "offset": [
        3224,
        3228
      ],
      "op": "ADDRESS",
      "path": "30",
      "statement": 37
    },
    "6156": {
      "op": "EXTCODESIZE"
    },
    "6157": {
      "op": "ISZERO"
    },
    "6158": {
      "offset": [
        2437,
        2453
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "6159": {
      "offset": [
        2413,
        2520
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x1871"
    },
    "6162": {
      "branch": 242,
      "offset": [
        2413,
        2520
      ],
      "op": "JUMPI",
      "path": "30"
    },
    "6163": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2413,
        2520
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x40"
    },
    "6165": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2413,
        2520
      ],
      "op": "MLOAD",
      "path": "30"
    },
    "6166": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6170": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6172": {
      "op": "SHL"
    },
    "6173": {
      "offset": [
        2413,
        2520
      ],
      "op": "DUP2",
      "path": "30"
    },
    "6174": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2413,
        2520
      ],
      "op": "MSTORE",
      "path": "30"
    },
    "6175": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6177": {
      "offset": [
        2413,
        2520
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x4"
    },
    "6179": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2413,
        2520
      ],
      "op": "DUP3",
      "path": "30"
    },
    "6180": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2413,
        2520
      ],
      "op": "ADD",
      "path": "30"
    },
    "6181": {
      "op": "MSTORE"
    },
    "6182": {
      "op": "PUSH1",
      "value": "0x2E"
    },
    "6184": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6186": {
      "op": "DUP3"
    },
    "6187": {
      "op": "ADD"
    },
    "6188": {
      "op": "MSTORE"
    },
    "6189": {
      "op": "PUSH32",
      "value": "0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561"
    },
    "6222": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6224": {
      "op": "DUP3"
    },
    "6225": {
      "op": "ADD"
    },
    "6226": {
      "op": "MSTORE"
    },
    "6227": {
      "op": "PUSH14",
      "value": "0x191E481A5B9A5D1A585B1A5E9959"
    },
    "6242": {
      "op": "PUSH1",
      "value": "0x92"
    },
    "6244": {
      "op": "SHL"
    },
    "6245": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6247": {
      "op": "DUP3"
    },
    "6248": {
      "op": "ADD"
    },
    "6249": {
      "op": "MSTORE"
    },
    "6250": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "6252": {
      "op": "ADD"
    },
    "6253": {
      "offset": [
        2413,
        2520
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x60F"
    },
    "6256": {
      "op": "JUMP"
    },
    "6257": {
      "offset": [
        2413,
        2520
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "6258": {
      "offset": [
        2533,
        2552
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x0"
    },
    "6260": {
      "offset": [
        2556,
        2569
      ],
      "op": "SLOAD",
      "path": "30"
    },
    "6261": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2556,
        2569
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x100"
    },
    "6264": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2556,
        2569
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "6265": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2556,
        2569
      ],
      "op": "DIV",
      "path": "30"
    },
    "6266": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2556,
        2569
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0xFF"
    },
    "6268": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2556,
        2569
      ],
      "op": "AND",
      "path": "30"
    },
    "6269": {
      "offset": [
        2555,
        2569
      ],
      "op": "ISZERO",
      "path": "30"
    },
    "6270": {
      "offset": [
        2580,
        2681
      ],
      "op": "DUP1",
      "path": "30"
    },
    "6271": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2580,
        2681
      ],
      "op": "ISZERO",
      "path": "30"
    },
    "6272": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2580,
        2681
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x1893"
    },
    "6275": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2580,
        2681
      ],
      "op": "JUMPI",
      "path": "30"
    },
    "6276": {
      "offset": [
        2615,
        2628
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x0"
    },
    "6278": {
      "offset": [
        2615,
        2635
      ],
      "op": "DUP1",
      "path": "30"
    },
    "6279": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2615,
        2635
      ],
      "op": "SLOAD",
      "path": "30"
    },
    "6280": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "6283": {
      "op": "NOT"
    },
    "6284": {
      "offset": [
        2650,
        2669
      ],
      "op": "AND",
      "path": "30"
    },
    "6285": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2650,
        2669
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x101"
    },
    "6288": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2650,
        2669
      ],
      "op": "OR",
      "path": "30"
    },
    "6289": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2650,
        2669
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "6290": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2650,
        2669
      ],
      "op": "SSTORE",
      "path": "30"
    },
    "6291": {
      "offset": [
        2580,
        2681
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "6292": {
      "fn": "BaseLoot.initialize",
      "offset": [
        629,
        649
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 38,
      "value": "0x189C"
    },
    "6295": {
      "fn": "BaseLoot.initialize",
      "offset": [
        644,
        648
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6296": {
      "fn": "BaseLoot.initialize",
      "offset": [
        629,
        643
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3C07"
    },
    "6299": {
      "fn": "BaseLoot.initialize",
      "jump": "i",
      "offset": [
        629,
        649
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6300": {
      "fn": "BaseLoot.initialize",
      "offset": [
        629,
        649
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6301": {
      "fn": "BaseLoot.initialize",
      "offset": [
        667,
        691
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 39,
      "value": "0x18A4"
    },
    "6304": {
      "fn": "BaseLoot.initialize",
      "offset": [
        667,
        689
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3C3A"
    },
    "6307": {
      "fn": "BaseLoot.initialize",
      "jump": "i",
      "offset": [
        667,
        691
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6308": {
      "fn": "BaseLoot.initialize",
      "offset": [
        667,
        691
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6309": {
      "fn": "BaseLoot.initialize",
      "offset": [
        709,
        733
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 40,
      "value": "0x18AC"
    },
    "6312": {
      "fn": "BaseLoot.initialize",
      "offset": [
        709,
        731
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3C61"
    },
    "6315": {
      "fn": "BaseLoot.initialize",
      "jump": "i",
      "offset": [
        709,
        733
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6316": {
      "fn": "BaseLoot.initialize",
      "offset": [
        709,
        733
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6317": {
      "fn": "BaseLoot.initialize",
      "offset": [
        752,
        755
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 41,
      "value": "0xFB"
    },
    "6319": {
      "fn": "BaseLoot.initialize",
      "offset": [
        752,
        762
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6320": {
      "fn": "BaseLoot.initialize",
      "offset": [
        752,
        762
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6321": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6323": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6325": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6327": {
      "op": "SHL"
    },
    "6328": {
      "op": "SUB"
    },
    "6329": {
      "fn": "BaseLoot.initialize",
      "offset": [
        752,
        762
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6330": {
      "fn": "BaseLoot.initialize",
      "offset": [
        752,
        762
      ],
      "op": "DUP9",
      "path": "2"
    },
    "6331": {
      "fn": "BaseLoot.initialize",
      "offset": [
        752,
        762
      ],
      "op": "AND",
      "path": "2"
    },
    "6332": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6334": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6336": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6338": {
      "op": "SHL"
    },
    "6339": {
      "op": "SUB"
    },
    "6340": {
      "op": "NOT"
    },
    "6341": {
      "fn": "BaseLoot.initialize",
      "offset": [
        752,
        762
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "6342": {
      "fn": "BaseLoot.initialize",
      "offset": [
        752,
        762
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6343": {
      "fn": "BaseLoot.initialize",
      "offset": [
        752,
        762
      ],
      "op": "AND",
      "path": "2"
    },
    "6344": {
      "fn": "BaseLoot.initialize",
      "offset": [
        752,
        762
      ],
      "op": "OR",
      "path": "2"
    },
    "6345": {
      "fn": "BaseLoot.initialize",
      "offset": [
        752,
        762
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6346": {
      "fn": "BaseLoot.initialize",
      "offset": [
        752,
        762
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "6347": {
      "fn": "BaseLoot.initialize",
      "offset": [
        752,
        762
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "6348": {
      "fn": "BaseLoot.initialize",
      "offset": [
        780,
        782
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 42,
      "value": "0xFD"
    },
    "6350": {
      "fn": "BaseLoot.initialize",
      "offset": [
        780,
        810
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6351": {
      "fn": "BaseLoot.initialize",
      "offset": [
        780,
        810
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6352": {
      "fn": "BaseLoot.initialize",
      "offset": [
        780,
        810
      ],
      "op": "DUP8",
      "path": "2"
    },
    "6353": {
      "fn": "BaseLoot.initialize",
      "offset": [
        780,
        810
      ],
      "op": "DUP5",
      "path": "2"
    },
    "6354": {
      "fn": "BaseLoot.initialize",
      "offset": [
        780,
        810
      ],
      "op": "AND",
      "path": "2"
    },
    "6355": {
      "fn": "BaseLoot.initialize",
      "offset": [
        780,
        810
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6356": {
      "fn": "BaseLoot.initialize",
      "offset": [
        780,
        810
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6357": {
      "fn": "BaseLoot.initialize",
      "offset": [
        780,
        810
      ],
      "op": "AND",
      "path": "2"
    },
    "6358": {
      "fn": "BaseLoot.initialize",
      "offset": [
        780,
        810
      ],
      "op": "OR",
      "path": "2"
    },
    "6359": {
      "fn": "BaseLoot.initialize",
      "offset": [
        780,
        810
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6360": {
      "fn": "BaseLoot.initialize",
      "offset": [
        780,
        810
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "6361": {
      "fn": "BaseLoot.initialize",
      "offset": [
        828,
        838
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 43,
      "value": "0xFC"
    },
    "6363": {
      "fn": "BaseLoot.initialize",
      "offset": [
        828,
        852
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6364": {
      "fn": "BaseLoot.initialize",
      "offset": [
        828,
        852
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6365": {
      "fn": "BaseLoot.initialize",
      "offset": [
        828,
        852
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "6366": {
      "fn": "BaseLoot.initialize",
      "offset": [
        828,
        852
      ],
      "op": "DUP7",
      "path": "2"
    },
    "6367": {
      "fn": "BaseLoot.initialize",
      "offset": [
        828,
        852
      ],
      "op": "AND",
      "path": "2"
    },
    "6368": {
      "fn": "BaseLoot.initialize",
      "offset": [
        828,
        852
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "6369": {
      "fn": "BaseLoot.initialize",
      "offset": [
        828,
        852
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6370": {
      "fn": "BaseLoot.initialize",
      "offset": [
        828,
        852
      ],
      "op": "AND",
      "path": "2"
    },
    "6371": {
      "fn": "BaseLoot.initialize",
      "offset": [
        828,
        852
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6372": {
      "fn": "BaseLoot.initialize",
      "offset": [
        828,
        852
      ],
      "op": "OR",
      "path": "2"
    },
    "6373": {
      "fn": "BaseLoot.initialize",
      "offset": [
        828,
        852
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6374": {
      "fn": "BaseLoot.initialize",
      "offset": [
        828,
        852
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "6375": {
      "fn": "BaseLoot.initialize",
      "offset": [
        870,
        876
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 44,
      "value": "0xFE"
    },
    "6377": {
      "fn": "BaseLoot.initialize",
      "offset": [
        870,
        901
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6378": {
      "fn": "BaseLoot.initialize",
      "offset": [
        870,
        901
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6379": {
      "fn": "BaseLoot.initialize",
      "offset": [
        870,
        901
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6380": {
      "fn": "BaseLoot.initialize",
      "offset": [
        870,
        901
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6381": {
      "fn": "BaseLoot.initialize",
      "offset": [
        870,
        901
      ],
      "op": "AND",
      "path": "2"
    },
    "6382": {
      "fn": "BaseLoot.initialize",
      "offset": [
        870,
        901
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6383": {
      "fn": "BaseLoot.initialize",
      "offset": [
        870,
        901
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6384": {
      "fn": "BaseLoot.initialize",
      "offset": [
        870,
        901
      ],
      "op": "OR",
      "path": "2"
    },
    "6385": {
      "fn": "BaseLoot.initialize",
      "offset": [
        870,
        901
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6386": {
      "fn": "BaseLoot.initialize",
      "offset": [
        870,
        901
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "6387": {
      "offset": [
        2707,
        2775
      ],
      "op": "DUP1",
      "path": "30"
    },
    "6388": {
      "fn": "BaseLoot.initialize",
      "offset": [
        2707,
        2775
      ],
      "op": "ISZERO",
      "path": "30"
    },
    "6389": {
      "fn": "BaseLoot.initialize",
      "offset": [
        2707,
        2775
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0xE41"
    },
    "6392": {
      "fn": "BaseLoot.initialize",
      "offset": [
        2707,
        2775
      ],
      "op": "JUMPI",
      "path": "30"
    },
    "6393": {
      "offset": [
        2758,
        2763
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x0"
    },
    "6395": {
      "offset": [
        2742,
        2763
      ],
      "op": "DUP1",
      "path": "30"
    },
    "6396": {
      "fn": "BaseLoot.initialize",
      "offset": [
        2742,
        2763
      ],
      "op": "SLOAD",
      "path": "30"
    },
    "6397": {
      "op": "PUSH2",
      "value": "0xFF00"
    },
    "6400": {
      "op": "NOT"
    },
    "6401": {
      "offset": [
        2742,
        2763
      ],
      "op": "AND",
      "path": "30"
    },
    "6402": {
      "fn": "BaseLoot.initialize",
      "offset": [
        2742,
        2763
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "6403": {
      "fn": "BaseLoot.initialize",
      "offset": [
        2742,
        2763
      ],
      "op": "SSTORE",
      "path": "30"
    },
    "6404": {
      "offset": [
        2128,
        2782
      ],
      "op": "POP",
      "path": "30"
    },
    "6405": {
      "fn": "BaseLoot.initialize",
      "offset": [
        492,
        912
      ],
      "op": "POP",
      "path": "2"
    },
    "6406": {
      "fn": "BaseLoot.initialize",
      "offset": [
        492,
        912
      ],
      "op": "POP",
      "path": "2"
    },
    "6407": {
      "fn": "BaseLoot.initialize",
      "offset": [
        492,
        912
      ],
      "op": "POP",
      "path": "2"
    },
    "6408": {
      "fn": "BaseLoot.initialize",
      "offset": [
        492,
        912
      ],
      "op": "POP",
      "path": "2"
    },
    "6409": {
      "fn": "BaseLoot.initialize",
      "jump": "o",
      "offset": [
        492,
        912
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6410": {
      "fn": "BaseLoot.loot",
      "offset": [
        2204,
        3427
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6411": {
      "fn": "BaseLoot.loot",
      "offset": [
        2371,
        2387
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6413": {
      "fn": "BaseLoot.loot",
      "offset": [
        2371,
        2387
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6414": {
      "op": "PUSH4",
      "value": "0x43E8C3F7"
    },
    "6419": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "6421": {
      "op": "SHL"
    },
    "6422": {
      "fn": "BaseLoot.loot",
      "offset": [
        2371,
        2387
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6423": {
      "fn": "BaseLoot.loot",
      "offset": [
        2371,
        2387
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6424": {
      "fn": "BaseLoot.loot",
      "offset": [
        2371,
        2387
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "6426": {
      "fn": "BaseLoot.loot",
      "offset": [
        2371,
        2387
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6427": {
      "fn": "BaseLoot.loot",
      "offset": [
        2371,
        2387
      ],
      "op": "ADD",
      "path": "2"
    },
    "6428": {
      "op": "DUP4"
    },
    "6429": {
      "op": "SWAP1"
    },
    "6430": {
      "op": "MSTORE"
    },
    "6431": {
      "fn": "BaseLoot.loot",
      "offset": [
        2281,
        2285
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6433": {
      "fn": "BaseLoot.loot",
      "offset": [
        2281,
        2285
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6434": {
      "fn": "BaseLoot.loot",
      "offset": [
        2315,
        2320
      ],
      "op": "DUP5",
      "path": "2"
    },
    "6435": {
      "fn": "BaseLoot.loot",
      "offset": [
        2315,
        2320
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6436": {
      "fn": "BaseLoot.loot",
      "offset": [
        2281,
        2285
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6437": {
      "fn": "BaseLoot.loot",
      "offset": [
        2281,
        2285
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6438": {
      "fn": "BaseLoot.loot",
      "offset": [
        2281,
        2285
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6439": {
      "fn": "BaseLoot.loot",
      "offset": [
        2281,
        2285
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6440": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6442": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6444": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6446": {
      "op": "SHL"
    },
    "6447": {
      "op": "SUB"
    },
    "6448": {
      "fn": "BaseLoot.loot",
      "offset": [
        2371,
        2381
      ],
      "op": "DUP5",
      "path": "2"
    },
    "6449": {
      "fn": "BaseLoot.loot",
      "offset": [
        2371,
        2381
      ],
      "op": "AND",
      "path": "2"
    },
    "6450": {
      "fn": "BaseLoot.loot",
      "offset": [
        2371,
        2381
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6451": {
      "fn": "BaseLoot.loot",
      "offset": [
        2371,
        2381
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x87D187EE"
    },
    "6456": {
      "fn": "BaseLoot.loot",
      "offset": [
        2371,
        2381
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6457": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6459": {
      "op": "ADD"
    },
    "6460": {
      "fn": "BaseLoot.loot",
      "offset": [
        2371,
        2387
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6462": {
      "fn": "BaseLoot.loot",
      "offset": [
        2371,
        2387
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6463": {
      "fn": "BaseLoot.loot",
      "offset": [
        2371,
        2387
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6464": {
      "fn": "BaseLoot.loot",
      "offset": [
        2371,
        2387
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6465": {
      "fn": "BaseLoot.loot",
      "offset": [
        2371,
        2387
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6466": {
      "fn": "BaseLoot.loot",
      "offset": [
        2371,
        2387
      ],
      "op": "SUB",
      "path": "2"
    },
    "6467": {
      "fn": "BaseLoot.loot",
      "offset": [
        2371,
        2387
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6468": {
      "fn": "BaseLoot.loot",
      "offset": [
        2371,
        2387
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6470": {
      "fn": "BaseLoot.loot",
      "offset": [
        2371,
        2387
      ],
      "op": "DUP8",
      "path": "2"
    },
    "6471": {
      "fn": "BaseLoot.loot",
      "offset": [
        2371,
        2387
      ],
      "op": "GAS",
      "path": "2"
    },
    "6472": {
      "fn": "BaseLoot.loot",
      "offset": [
        2371,
        2387
      ],
      "op": "CALL",
      "path": "2"
    },
    "6473": {
      "fn": "BaseLoot.loot",
      "offset": [
        2371,
        2387
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "6474": {
      "fn": "BaseLoot.loot",
      "offset": [
        2371,
        2387
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6475": {
      "fn": "BaseLoot.loot",
      "offset": [
        2371,
        2387
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "6476": {
      "fn": "BaseLoot.loot",
      "offset": [
        2371,
        2387
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1959"
    },
    "6479": {
      "fn": "BaseLoot.loot",
      "offset": [
        2371,
        2387
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6480": {
      "fn": "BaseLoot.loot",
      "offset": [
        2371,
        2387
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "6481": {
      "fn": "BaseLoot.loot",
      "offset": [
        2371,
        2387
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6483": {
      "fn": "BaseLoot.loot",
      "offset": [
        2371,
        2387
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6484": {
      "fn": "BaseLoot.loot",
      "offset": [
        2371,
        2387
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "6485": {
      "fn": "BaseLoot.loot",
      "offset": [
        2371,
        2387
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "6486": {
      "fn": "BaseLoot.loot",
      "offset": [
        2371,
        2387
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6488": {
      "fn": "BaseLoot.loot",
      "offset": [
        2371,
        2387
      ],
      "op": "REVERT",
      "path": "2"
    },
    "6489": {
      "fn": "BaseLoot.loot",
      "offset": [
        2371,
        2387
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6490": {
      "fn": "BaseLoot.loot",
      "offset": [
        2371,
        2387
      ],
      "op": "POP",
      "path": "2"
    },
    "6491": {
      "fn": "BaseLoot.loot",
      "offset": [
        2371,
        2387
      ],
      "op": "POP",
      "path": "2"
    },
    "6492": {
      "fn": "BaseLoot.loot",
      "offset": [
        2371,
        2387
      ],
      "op": "POP",
      "path": "2"
    },
    "6493": {
      "fn": "BaseLoot.loot",
      "offset": [
        2371,
        2387
      ],
      "op": "POP",
      "path": "2"
    },
    "6494": {
      "fn": "BaseLoot.loot",
      "offset": [
        2371,
        2387
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6496": {
      "fn": "BaseLoot.loot",
      "offset": [
        2371,
        2387
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6497": {
      "fn": "BaseLoot.loot",
      "offset": [
        2371,
        2387
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "6498": {
      "fn": "BaseLoot.loot",
      "offset": [
        2371,
        2387
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "6500": {
      "fn": "BaseLoot.loot",
      "offset": [
        2371,
        2387
      ],
      "op": "NOT",
      "path": "2"
    },
    "6501": {
      "fn": "BaseLoot.loot",
      "offset": [
        2371,
        2387
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "6503": {
      "fn": "BaseLoot.loot",
      "offset": [
        2371,
        2387
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6504": {
      "fn": "BaseLoot.loot",
      "offset": [
        2371,
        2387
      ],
      "op": "ADD",
      "path": "2"
    },
    "6505": {
      "fn": "BaseLoot.loot",
      "offset": [
        2371,
        2387
      ],
      "op": "AND",
      "path": "2"
    },
    "6506": {
      "fn": "BaseLoot.loot",
      "offset": [
        2371,
        2387
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6507": {
      "fn": "BaseLoot.loot",
      "offset": [
        2371,
        2387
      ],
      "op": "ADD",
      "path": "2"
    },
    "6508": {
      "fn": "BaseLoot.loot",
      "offset": [
        2371,
        2387
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6509": {
      "fn": "BaseLoot.loot",
      "offset": [
        2371,
        2387
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6511": {
      "fn": "BaseLoot.loot",
      "offset": [
        2371,
        2387
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6512": {
      "fn": "BaseLoot.loot",
      "offset": [
        2371,
        2387
      ],
      "op": "POP",
      "path": "2"
    },
    "6513": {
      "fn": "BaseLoot.loot",
      "offset": [
        2371,
        2387
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6514": {
      "fn": "BaseLoot.loot",
      "offset": [
        2371,
        2387
      ],
      "op": "ADD",
      "path": "2"
    },
    "6515": {
      "fn": "BaseLoot.loot",
      "offset": [
        2371,
        2387
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6516": {
      "fn": "BaseLoot.loot",
      "offset": [
        2371,
        2387
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x197D"
    },
    "6519": {
      "fn": "BaseLoot.loot",
      "offset": [
        2371,
        2387
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6520": {
      "fn": "BaseLoot.loot",
      "offset": [
        2371,
        2387
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6521": {
      "fn": "BaseLoot.loot",
      "offset": [
        2371,
        2387
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4BA8"
    },
    "6524": {
      "fn": "BaseLoot.loot",
      "jump": "i",
      "offset": [
        2371,
        2387
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6525": {
      "fn": "BaseLoot.loot",
      "offset": [
        2371,
        2387
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6526": {
      "fn": "BaseLoot.loot",
      "offset": [
        2339,
        2387
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6527": {
      "fn": "BaseLoot.loot",
      "offset": [
        2339,
        2387
      ],
      "op": "POP",
      "path": "2"
    },
    "6528": {
      "fn": "BaseLoot.loot",
      "offset": [
        2339,
        2387
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6529": {
      "fn": "BaseLoot.loot",
      "offset": [
        2339,
        2387
      ],
      "op": "POP",
      "path": "2"
    },
    "6530": {
      "fn": "BaseLoot.loot",
      "offset": [
        2406,
        2416
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6532": {
      "fn": "BaseLoot.loot",
      "offset": [
        2418,
        2429
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6533": {
      "fn": "BaseLoot.loot",
      "offset": [
        2433,
        2437
      ],
      "op": "DUP5",
      "path": "2"
    },
    "6534": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6536": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6538": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6540": {
      "op": "SHL"
    },
    "6541": {
      "op": "SUB"
    },
    "6542": {
      "fn": "BaseLoot.loot",
      "offset": [
        2433,
        2443
      ],
      "op": "AND",
      "path": "2"
    },
    "6543": {
      "fn": "BaseLoot.loot",
      "offset": [
        2433,
        2443
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x87D187EE"
    },
    "6548": {
      "fn": "BaseLoot.loot",
      "offset": [
        2444,
        2451
      ],
      "op": "DUP9",
      "path": "2"
    },
    "6549": {
      "fn": "BaseLoot.loot",
      "offset": [
        2433,
        2452
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6551": {
      "fn": "BaseLoot.loot",
      "offset": [
        2433,
        2452
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6552": {
      "fn": "BaseLoot.loot",
      "offset": [
        2433,
        2452
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6553": {
      "fn": "BaseLoot.loot",
      "offset": [
        2433,
        2452
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xFFFFFFFF"
    },
    "6558": {
      "fn": "BaseLoot.loot",
      "offset": [
        2433,
        2452
      ],
      "op": "AND",
      "path": "2"
    },
    "6559": {
      "fn": "BaseLoot.loot",
      "offset": [
        2433,
        2452
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE0"
    },
    "6561": {
      "fn": "BaseLoot.loot",
      "offset": [
        2433,
        2452
      ],
      "op": "SHL",
      "path": "2"
    },
    "6562": {
      "fn": "BaseLoot.loot",
      "offset": [
        2433,
        2452
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6563": {
      "fn": "BaseLoot.loot",
      "offset": [
        2433,
        2452
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6564": {
      "fn": "BaseLoot.loot",
      "offset": [
        2433,
        2452
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "6566": {
      "fn": "BaseLoot.loot",
      "offset": [
        2433,
        2452
      ],
      "op": "ADD",
      "path": "2"
    },
    "6567": {
      "fn": "BaseLoot.loot",
      "offset": [
        2433,
        2452
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x19B2"
    },
    "6570": {
      "fn": "BaseLoot.loot",
      "offset": [
        2433,
        2452
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6571": {
      "op": "DUP2"
    },
    "6572": {
      "op": "MSTORE"
    },
    "6573": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6575": {
      "op": "ADD"
    },
    "6576": {
      "op": "SWAP1"
    },
    "6577": {
      "op": "JUMP"
    },
    "6578": {
      "fn": "BaseLoot.loot",
      "offset": [
        2433,
        2452
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6579": {
      "fn": "BaseLoot.loot",
      "offset": [
        2433,
        2452
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6581": {
      "fn": "BaseLoot.loot",
      "offset": [
        2433,
        2452
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6582": {
      "fn": "BaseLoot.loot",
      "offset": [
        2433,
        2452
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6583": {
      "fn": "BaseLoot.loot",
      "offset": [
        2433,
        2452
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6584": {
      "fn": "BaseLoot.loot",
      "offset": [
        2433,
        2452
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6585": {
      "fn": "BaseLoot.loot",
      "offset": [
        2433,
        2452
      ],
      "op": "SUB",
      "path": "2"
    },
    "6586": {
      "fn": "BaseLoot.loot",
      "offset": [
        2433,
        2452
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6587": {
      "fn": "BaseLoot.loot",
      "offset": [
        2433,
        2452
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6589": {
      "fn": "BaseLoot.loot",
      "offset": [
        2433,
        2452
      ],
      "op": "DUP8",
      "path": "2"
    },
    "6590": {
      "fn": "BaseLoot.loot",
      "offset": [
        2433,
        2452
      ],
      "op": "GAS",
      "path": "2"
    },
    "6591": {
      "fn": "BaseLoot.loot",
      "offset": [
        2433,
        2452
      ],
      "op": "CALL",
      "path": "2"
    },
    "6592": {
      "fn": "BaseLoot.loot",
      "offset": [
        2433,
        2452
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "6593": {
      "fn": "BaseLoot.loot",
      "offset": [
        2433,
        2452
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6594": {
      "fn": "BaseLoot.loot",
      "offset": [
        2433,
        2452
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "6595": {
      "fn": "BaseLoot.loot",
      "offset": [
        2433,
        2452
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x19D0"
    },
    "6598": {
      "fn": "BaseLoot.loot",
      "offset": [
        2433,
        2452
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6599": {
      "fn": "BaseLoot.loot",
      "offset": [
        2433,
        2452
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "6600": {
      "fn": "BaseLoot.loot",
      "offset": [
        2433,
        2452
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6602": {
      "fn": "BaseLoot.loot",
      "offset": [
        2433,
        2452
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6603": {
      "fn": "BaseLoot.loot",
      "offset": [
        2433,
        2452
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "6604": {
      "fn": "BaseLoot.loot",
      "offset": [
        2433,
        2452
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "6605": {
      "fn": "BaseLoot.loot",
      "offset": [
        2433,
        2452
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6607": {
      "fn": "BaseLoot.loot",
      "offset": [
        2433,
        2452
      ],
      "op": "REVERT",
      "path": "2"
    },
    "6608": {
      "fn": "BaseLoot.loot",
      "offset": [
        2433,
        2452
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6609": {
      "fn": "BaseLoot.loot",
      "offset": [
        2433,
        2452
      ],
      "op": "POP",
      "path": "2"
    },
    "6610": {
      "fn": "BaseLoot.loot",
      "offset": [
        2433,
        2452
      ],
      "op": "POP",
      "path": "2"
    },
    "6611": {
      "fn": "BaseLoot.loot",
      "offset": [
        2433,
        2452
      ],
      "op": "POP",
      "path": "2"
    },
    "6612": {
      "fn": "BaseLoot.loot",
      "offset": [
        2433,
        2452
      ],
      "op": "POP",
      "path": "2"
    },
    "6613": {
      "fn": "BaseLoot.loot",
      "offset": [
        2433,
        2452
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6615": {
      "fn": "BaseLoot.loot",
      "offset": [
        2433,
        2452
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6616": {
      "fn": "BaseLoot.loot",
      "offset": [
        2433,
        2452
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "6617": {
      "fn": "BaseLoot.loot",
      "offset": [
        2433,
        2452
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "6619": {
      "fn": "BaseLoot.loot",
      "offset": [
        2433,
        2452
      ],
      "op": "NOT",
      "path": "2"
    },
    "6620": {
      "fn": "BaseLoot.loot",
      "offset": [
        2433,
        2452
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "6622": {
      "fn": "BaseLoot.loot",
      "offset": [
        2433,
        2452
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6623": {
      "fn": "BaseLoot.loot",
      "offset": [
        2433,
        2452
      ],
      "op": "ADD",
      "path": "2"
    },
    "6624": {
      "fn": "BaseLoot.loot",
      "offset": [
        2433,
        2452
      ],
      "op": "AND",
      "path": "2"
    },
    "6625": {
      "fn": "BaseLoot.loot",
      "offset": [
        2433,
        2452
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6626": {
      "fn": "BaseLoot.loot",
      "offset": [
        2433,
        2452
      ],
      "op": "ADD",
      "path": "2"
    },
    "6627": {
      "fn": "BaseLoot.loot",
      "offset": [
        2433,
        2452
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6628": {
      "fn": "BaseLoot.loot",
      "offset": [
        2433,
        2452
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6630": {
      "fn": "BaseLoot.loot",
      "offset": [
        2433,
        2452
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6631": {
      "fn": "BaseLoot.loot",
      "offset": [
        2433,
        2452
      ],
      "op": "POP",
      "path": "2"
    },
    "6632": {
      "fn": "BaseLoot.loot",
      "offset": [
        2433,
        2452
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6633": {
      "fn": "BaseLoot.loot",
      "offset": [
        2433,
        2452
      ],
      "op": "ADD",
      "path": "2"
    },
    "6634": {
      "fn": "BaseLoot.loot",
      "offset": [
        2433,
        2452
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6635": {
      "fn": "BaseLoot.loot",
      "offset": [
        2433,
        2452
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x19F4"
    },
    "6638": {
      "fn": "BaseLoot.loot",
      "offset": [
        2433,
        2452
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6639": {
      "fn": "BaseLoot.loot",
      "offset": [
        2433,
        2452
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6640": {
      "fn": "BaseLoot.loot",
      "offset": [
        2433,
        2452
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4BA8"
    },
    "6643": {
      "fn": "BaseLoot.loot",
      "jump": "i",
      "offset": [
        2433,
        2452
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6644": {
      "fn": "BaseLoot.loot",
      "offset": [
        2433,
        2452
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6645": {
      "fn": "BaseLoot.loot",
      "offset": [
        2487,
        2505
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6647": {
      "fn": "BaseLoot.loot",
      "offset": [
        2487,
        2505
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6648": {
      "op": "PUSH4",
      "value": "0x6573C787"
    },
    "6653": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6655": {
      "op": "SHL"
    },
    "6656": {
      "fn": "BaseLoot.loot",
      "offset": [
        2487,
        2505
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6657": {
      "fn": "BaseLoot.loot",
      "offset": [
        2487,
        2505
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6658": {
      "fn": "BaseLoot.loot",
      "offset": [
        2487,
        2505
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "6660": {
      "fn": "BaseLoot.loot",
      "offset": [
        2487,
        2505
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6661": {
      "fn": "BaseLoot.loot",
      "offset": [
        2487,
        2505
      ],
      "op": "ADD",
      "path": "2"
    },
    "6662": {
      "op": "DUP8"
    },
    "6663": {
      "op": "SWAP1"
    },
    "6664": {
      "op": "MSTORE"
    },
    "6665": {
      "fn": "BaseLoot.loot",
      "offset": [
        2405,
        2452
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6666": {
      "fn": "BaseLoot.loot",
      "offset": [
        2405,
        2452
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "6667": {
      "op": "POP"
    },
    "6668": {
      "fn": "BaseLoot.loot",
      "offset": [
        2405,
        2452
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6669": {
      "op": "POP"
    },
    "6670": {
      "fn": "BaseLoot.loot",
      "offset": [
        2470,
        2484
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6672": {
      "fn": "BaseLoot.loot",
      "offset": [
        2470,
        2484
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6673": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6675": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6677": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6679": {
      "op": "SHL"
    },
    "6680": {
      "op": "SUB"
    },
    "6681": {
      "fn": "BaseLoot.loot",
      "offset": [
        2487,
        2497
      ],
      "op": "DUP8",
      "path": "2"
    },
    "6682": {
      "fn": "BaseLoot.loot",
      "offset": [
        2487,
        2497
      ],
      "op": "AND",
      "path": "2"
    },
    "6683": {
      "fn": "BaseLoot.loot",
      "offset": [
        2487,
        2497
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6684": {
      "fn": "BaseLoot.loot",
      "offset": [
        2487,
        2497
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x6573C787"
    },
    "6689": {
      "fn": "BaseLoot.loot",
      "offset": [
        2487,
        2497
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6690": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6692": {
      "op": "ADD"
    },
    "6693": {
      "fn": "BaseLoot.loot",
      "offset": [
        2487,
        2505
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6695": {
      "fn": "BaseLoot.loot",
      "offset": [
        2487,
        2505
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6697": {
      "fn": "BaseLoot.loot",
      "offset": [
        2487,
        2505
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6698": {
      "fn": "BaseLoot.loot",
      "offset": [
        2487,
        2505
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6699": {
      "fn": "BaseLoot.loot",
      "offset": [
        2487,
        2505
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6700": {
      "fn": "BaseLoot.loot",
      "offset": [
        2487,
        2505
      ],
      "op": "SUB",
      "path": "2"
    },
    "6701": {
      "fn": "BaseLoot.loot",
      "offset": [
        2487,
        2505
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6702": {
      "fn": "BaseLoot.loot",
      "offset": [
        2487,
        2505
      ],
      "op": "DUP7",
      "path": "2"
    },
    "6703": {
      "fn": "BaseLoot.loot",
      "offset": [
        2487,
        2505
      ],
      "op": "GAS",
      "path": "2"
    },
    "6704": {
      "fn": "BaseLoot.loot",
      "offset": [
        2487,
        2505
      ],
      "op": "STATICCALL",
      "path": "2"
    },
    "6705": {
      "fn": "BaseLoot.loot",
      "offset": [
        2487,
        2505
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "6706": {
      "fn": "BaseLoot.loot",
      "offset": [
        2487,
        2505
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6707": {
      "fn": "BaseLoot.loot",
      "offset": [
        2487,
        2505
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "6708": {
      "fn": "BaseLoot.loot",
      "offset": [
        2487,
        2505
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1A41"
    },
    "6711": {
      "fn": "BaseLoot.loot",
      "offset": [
        2487,
        2505
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6712": {
      "fn": "BaseLoot.loot",
      "offset": [
        2487,
        2505
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "6713": {
      "fn": "BaseLoot.loot",
      "offset": [
        2487,
        2505
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6715": {
      "fn": "BaseLoot.loot",
      "offset": [
        2487,
        2505
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6716": {
      "fn": "BaseLoot.loot",
      "offset": [
        2487,
        2505
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "6717": {
      "fn": "BaseLoot.loot",
      "offset": [
        2487,
        2505
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "6718": {
      "fn": "BaseLoot.loot",
      "offset": [
        2487,
        2505
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6720": {
      "fn": "BaseLoot.loot",
      "offset": [
        2487,
        2505
      ],
      "op": "REVERT",
      "path": "2"
    },
    "6721": {
      "fn": "BaseLoot.loot",
      "offset": [
        2487,
        2505
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6722": {
      "fn": "BaseLoot.loot",
      "offset": [
        2487,
        2505
      ],
      "op": "POP",
      "path": "2"
    },
    "6723": {
      "fn": "BaseLoot.loot",
      "offset": [
        2487,
        2505
      ],
      "op": "POP",
      "path": "2"
    },
    "6724": {
      "fn": "BaseLoot.loot",
      "offset": [
        2487,
        2505
      ],
      "op": "POP",
      "path": "2"
    },
    "6725": {
      "fn": "BaseLoot.loot",
      "offset": [
        2487,
        2505
      ],
      "op": "POP",
      "path": "2"
    },
    "6726": {
      "fn": "BaseLoot.loot",
      "offset": [
        2487,
        2505
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6728": {
      "fn": "BaseLoot.loot",
      "offset": [
        2487,
        2505
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6729": {
      "fn": "BaseLoot.loot",
      "offset": [
        2487,
        2505
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "6730": {
      "fn": "BaseLoot.loot",
      "offset": [
        2487,
        2505
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "6732": {
      "fn": "BaseLoot.loot",
      "offset": [
        2487,
        2505
      ],
      "op": "NOT",
      "path": "2"
    },
    "6733": {
      "fn": "BaseLoot.loot",
      "offset": [
        2487,
        2505
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "6735": {
      "fn": "BaseLoot.loot",
      "offset": [
        2487,
        2505
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6736": {
      "fn": "BaseLoot.loot",
      "offset": [
        2487,
        2505
      ],
      "op": "ADD",
      "path": "2"
    },
    "6737": {
      "fn": "BaseLoot.loot",
      "offset": [
        2487,
        2505
      ],
      "op": "AND",
      "path": "2"
    },
    "6738": {
      "fn": "BaseLoot.loot",
      "offset": [
        2487,
        2505
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6739": {
      "fn": "BaseLoot.loot",
      "offset": [
        2487,
        2505
      ],
      "op": "ADD",
      "path": "2"
    },
    "6740": {
      "fn": "BaseLoot.loot",
      "offset": [
        2487,
        2505
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6741": {
      "fn": "BaseLoot.loot",
      "offset": [
        2487,
        2505
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6743": {
      "fn": "BaseLoot.loot",
      "offset": [
        2487,
        2505
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6744": {
      "fn": "BaseLoot.loot",
      "offset": [
        2487,
        2505
      ],
      "op": "POP",
      "path": "2"
    },
    "6745": {
      "fn": "BaseLoot.loot",
      "offset": [
        2487,
        2505
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6746": {
      "fn": "BaseLoot.loot",
      "offset": [
        2487,
        2505
      ],
      "op": "ADD",
      "path": "2"
    },
    "6747": {
      "fn": "BaseLoot.loot",
      "offset": [
        2487,
        2505
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6748": {
      "fn": "BaseLoot.loot",
      "offset": [
        2487,
        2505
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1A65"
    },
    "6751": {
      "fn": "BaseLoot.loot",
      "offset": [
        2487,
        2505
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6752": {
      "fn": "BaseLoot.loot",
      "offset": [
        2487,
        2505
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6753": {
      "fn": "BaseLoot.loot",
      "offset": [
        2487,
        2505
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4BCC"
    },
    "6756": {
      "fn": "BaseLoot.loot",
      "jump": "i",
      "offset": [
        2487,
        2505
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6757": {
      "fn": "BaseLoot.loot",
      "offset": [
        2487,
        2505
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6758": {
      "fn": "BaseLoot.loot",
      "offset": [
        2539,
        2556
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6760": {
      "fn": "BaseLoot.loot",
      "offset": [
        2539,
        2556
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6761": {
      "op": "PUSH4",
      "value": "0x6573C787"
    },
    "6766": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6768": {
      "op": "SHL"
    },
    "6769": {
      "fn": "BaseLoot.loot",
      "offset": [
        2539,
        2556
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6770": {
      "fn": "BaseLoot.loot",
      "offset": [
        2539,
        2556
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6771": {
      "fn": "BaseLoot.loot",
      "offset": [
        2539,
        2556
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "6773": {
      "fn": "BaseLoot.loot",
      "offset": [
        2539,
        2556
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6774": {
      "fn": "BaseLoot.loot",
      "offset": [
        2539,
        2556
      ],
      "op": "ADD",
      "path": "2"
    },
    "6775": {
      "op": "DUP6"
    },
    "6776": {
      "op": "SWAP1"
    },
    "6777": {
      "op": "MSTORE"
    },
    "6778": {
      "fn": "BaseLoot.loot",
      "offset": [
        2470,
        2505
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6779": {
      "fn": "BaseLoot.loot",
      "offset": [
        2470,
        2505
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6780": {
      "op": "POP"
    },
    "6781": {
      "fn": "BaseLoot.loot",
      "offset": [
        2523,
        2536
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6783": {
      "fn": "BaseLoot.loot",
      "offset": [
        2523,
        2536
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6784": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6786": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6788": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6790": {
      "op": "SHL"
    },
    "6791": {
      "op": "SUB"
    },
    "6792": {
      "fn": "BaseLoot.loot",
      "offset": [
        2539,
        2549
      ],
      "op": "DUP9",
      "path": "2"
    },
    "6793": {
      "fn": "BaseLoot.loot",
      "offset": [
        2539,
        2549
      ],
      "op": "AND",
      "path": "2"
    },
    "6794": {
      "fn": "BaseLoot.loot",
      "offset": [
        2539,
        2549
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6795": {
      "fn": "BaseLoot.loot",
      "offset": [
        2539,
        2549
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x6573C787"
    },
    "6800": {
      "fn": "BaseLoot.loot",
      "offset": [
        2539,
        2549
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6801": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6803": {
      "op": "ADD"
    },
    "6804": {
      "fn": "BaseLoot.loot",
      "offset": [
        2539,
        2556
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6806": {
      "fn": "BaseLoot.loot",
      "offset": [
        2539,
        2556
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6808": {
      "fn": "BaseLoot.loot",
      "offset": [
        2539,
        2556
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6809": {
      "fn": "BaseLoot.loot",
      "offset": [
        2539,
        2556
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6810": {
      "fn": "BaseLoot.loot",
      "offset": [
        2539,
        2556
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6811": {
      "fn": "BaseLoot.loot",
      "offset": [
        2539,
        2556
      ],
      "op": "SUB",
      "path": "2"
    },
    "6812": {
      "fn": "BaseLoot.loot",
      "offset": [
        2539,
        2556
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6813": {
      "fn": "BaseLoot.loot",
      "offset": [
        2539,
        2556
      ],
      "op": "DUP7",
      "path": "2"
    },
    "6814": {
      "fn": "BaseLoot.loot",
      "offset": [
        2539,
        2556
      ],
      "op": "GAS",
      "path": "2"
    },
    "6815": {
      "fn": "BaseLoot.loot",
      "offset": [
        2539,
        2556
      ],
      "op": "STATICCALL",
      "path": "2"
    },
    "6816": {
      "fn": "BaseLoot.loot",
      "offset": [
        2539,
        2556
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "6817": {
      "fn": "BaseLoot.loot",
      "offset": [
        2539,
        2556
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6818": {
      "fn": "BaseLoot.loot",
      "offset": [
        2539,
        2556
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "6819": {
      "fn": "BaseLoot.loot",
      "offset": [
        2539,
        2556
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1AB0"
    },
    "6822": {
      "fn": "BaseLoot.loot",
      "offset": [
        2539,
        2556
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6823": {
      "fn": "BaseLoot.loot",
      "offset": [
        2539,
        2556
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "6824": {
      "fn": "BaseLoot.loot",
      "offset": [
        2539,
        2556
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6826": {
      "fn": "BaseLoot.loot",
      "offset": [
        2539,
        2556
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6827": {
      "fn": "BaseLoot.loot",
      "offset": [
        2539,
        2556
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "6828": {
      "fn": "BaseLoot.loot",
      "offset": [
        2539,
        2556
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "6829": {
      "fn": "BaseLoot.loot",
      "offset": [
        2539,
        2556
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6831": {
      "fn": "BaseLoot.loot",
      "offset": [
        2539,
        2556
      ],
      "op": "REVERT",
      "path": "2"
    },
    "6832": {
      "fn": "BaseLoot.loot",
      "offset": [
        2539,
        2556
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6833": {
      "fn": "BaseLoot.loot",
      "offset": [
        2539,
        2556
      ],
      "op": "POP",
      "path": "2"
    },
    "6834": {
      "fn": "BaseLoot.loot",
      "offset": [
        2539,
        2556
      ],
      "op": "POP",
      "path": "2"
    },
    "6835": {
      "fn": "BaseLoot.loot",
      "offset": [
        2539,
        2556
      ],
      "op": "POP",
      "path": "2"
    },
    "6836": {
      "fn": "BaseLoot.loot",
      "offset": [
        2539,
        2556
      ],
      "op": "POP",
      "path": "2"
    },
    "6837": {
      "fn": "BaseLoot.loot",
      "offset": [
        2539,
        2556
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6839": {
      "fn": "BaseLoot.loot",
      "offset": [
        2539,
        2556
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6840": {
      "fn": "BaseLoot.loot",
      "offset": [
        2539,
        2556
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "6841": {
      "fn": "BaseLoot.loot",
      "offset": [
        2539,
        2556
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "6843": {
      "fn": "BaseLoot.loot",
      "offset": [
        2539,
        2556
      ],
      "op": "NOT",
      "path": "2"
    },
    "6844": {
      "fn": "BaseLoot.loot",
      "offset": [
        2539,
        2556
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "6846": {
      "fn": "BaseLoot.loot",
      "offset": [
        2539,
        2556
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6847": {
      "fn": "BaseLoot.loot",
      "offset": [
        2539,
        2556
      ],
      "op": "ADD",
      "path": "2"
    },
    "6848": {
      "fn": "BaseLoot.loot",
      "offset": [
        2539,
        2556
      ],
      "op": "AND",
      "path": "2"
    },
    "6849": {
      "fn": "BaseLoot.loot",
      "offset": [
        2539,
        2556
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6850": {
      "fn": "BaseLoot.loot",
      "offset": [
        2539,
        2556
      ],
      "op": "ADD",
      "path": "2"
    },
    "6851": {
      "fn": "BaseLoot.loot",
      "offset": [
        2539,
        2556
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6852": {
      "fn": "BaseLoot.loot",
      "offset": [
        2539,
        2556
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6854": {
      "fn": "BaseLoot.loot",
      "offset": [
        2539,
        2556
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6855": {
      "fn": "BaseLoot.loot",
      "offset": [
        2539,
        2556
      ],
      "op": "POP",
      "path": "2"
    },
    "6856": {
      "fn": "BaseLoot.loot",
      "offset": [
        2539,
        2556
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6857": {
      "fn": "BaseLoot.loot",
      "offset": [
        2539,
        2556
      ],
      "op": "ADD",
      "path": "2"
    },
    "6858": {
      "fn": "BaseLoot.loot",
      "offset": [
        2539,
        2556
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6859": {
      "fn": "BaseLoot.loot",
      "offset": [
        2539,
        2556
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1AD4"
    },
    "6862": {
      "fn": "BaseLoot.loot",
      "offset": [
        2539,
        2556
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6863": {
      "fn": "BaseLoot.loot",
      "offset": [
        2539,
        2556
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6864": {
      "fn": "BaseLoot.loot",
      "offset": [
        2539,
        2556
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4BCC"
    },
    "6867": {
      "fn": "BaseLoot.loot",
      "jump": "i",
      "offset": [
        2539,
        2556
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6868": {
      "fn": "BaseLoot.loot",
      "offset": [
        2539,
        2556
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6869": {
      "fn": "BaseLoot.loot",
      "offset": [
        2523,
        2556
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6870": {
      "fn": "BaseLoot.loot",
      "offset": [
        2523,
        2556
      ],
      "op": "POP",
      "path": "2"
    },
    "6871": {
      "fn": "BaseLoot.loot",
      "offset": [
        2570,
        2578
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 45
    },
    "6872": {
      "branch": 179,
      "fn": "BaseLoot.loot",
      "offset": [
        2569,
        2578
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "6873": {
      "fn": "BaseLoot.loot",
      "offset": [
        2561,
        2605
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1B1D"
    },
    "6876": {
      "branch": 179,
      "fn": "BaseLoot.loot",
      "offset": [
        2561,
        2605
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6877": {
      "fn": "BaseLoot.loot",
      "offset": [
        2561,
        2605
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6879": {
      "fn": "BaseLoot.loot",
      "offset": [
        2561,
        2605
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6880": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6884": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6886": {
      "op": "SHL"
    },
    "6887": {
      "fn": "BaseLoot.loot",
      "offset": [
        2561,
        2605
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6888": {
      "fn": "BaseLoot.loot",
      "offset": [
        2561,
        2605
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6889": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6891": {
      "fn": "BaseLoot.loot",
      "offset": [
        2561,
        2605
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "6893": {
      "fn": "BaseLoot.loot",
      "offset": [
        2561,
        2605
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6894": {
      "fn": "BaseLoot.loot",
      "offset": [
        2561,
        2605
      ],
      "op": "ADD",
      "path": "2"
    },
    "6895": {
      "op": "MSTORE"
    },
    "6896": {
      "op": "PUSH1",
      "value": "0x16"
    },
    "6898": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6900": {
      "op": "DUP3"
    },
    "6901": {
      "op": "ADD"
    },
    "6902": {
      "op": "MSTORE"
    },
    "6903": {
      "op": "PUSH22",
      "value": "0x2A30B933B2BA1034B99030B634BB329039BA34B63617"
    },
    "6926": {
      "op": "PUSH1",
      "value": "0x51"
    },
    "6928": {
      "op": "SHL"
    },
    "6929": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6931": {
      "op": "DUP3"
    },
    "6932": {
      "op": "ADD"
    },
    "6933": {
      "op": "MSTORE"
    },
    "6934": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6936": {
      "op": "ADD"
    },
    "6937": {
      "fn": "BaseLoot.loot",
      "offset": [
        2561,
        2605
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x60F"
    },
    "6940": {
      "op": "JUMP"
    },
    "6941": {
      "fn": "BaseLoot.loot",
      "offset": [
        2561,
        2605
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6942": {
      "branch": 180,
      "fn": "BaseLoot.loot",
      "offset": [
        2617,
        2626
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 46
    },
    "6943": {
      "fn": "BaseLoot.loot",
      "offset": [
        2609,
        2644
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1B3A"
    },
    "6946": {
      "branch": 180,
      "fn": "BaseLoot.loot",
      "offset": [
        2609,
        2644
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6947": {
      "fn": "BaseLoot.loot",
      "offset": [
        2609,
        2644
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6949": {
      "fn": "BaseLoot.loot",
      "offset": [
        2609,
        2644
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6950": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6954": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6956": {
      "op": "SHL"
    },
    "6957": {
      "fn": "BaseLoot.loot",
      "offset": [
        2609,
        2644
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6958": {
      "fn": "BaseLoot.loot",
      "offset": [
        2609,
        2644
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6959": {
      "fn": "BaseLoot.loot",
      "offset": [
        2609,
        2644
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "6961": {
      "fn": "BaseLoot.loot",
      "offset": [
        2609,
        2644
      ],
      "op": "ADD",
      "path": "2"
    },
    "6962": {
      "fn": "BaseLoot.loot",
      "offset": [
        2609,
        2644
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x60F"
    },
    "6965": {
      "fn": "BaseLoot.loot",
      "offset": [
        2609,
        2644
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6966": {
      "fn": "BaseLoot.loot",
      "offset": [
        2609,
        2644
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4D73"
    },
    "6969": {
      "fn": "BaseLoot.loot",
      "jump": "i",
      "offset": [
        2609,
        2644
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6970": {
      "fn": "BaseLoot.loot",
      "offset": [
        2609,
        2644
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6971": {
      "fn": "BaseLoot.loot",
      "offset": [
        2791,
        2809
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 47,
      "value": "0x40"
    },
    "6973": {
      "fn": "BaseLoot.loot",
      "offset": [
        2791,
        2809
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6974": {
      "op": "PUSH4",
      "value": "0x31A9108F"
    },
    "6979": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "6981": {
      "op": "SHL"
    },
    "6982": {
      "fn": "BaseLoot.loot",
      "offset": [
        2791,
        2809
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6983": {
      "fn": "BaseLoot.loot",
      "offset": [
        2791,
        2809
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6984": {
      "fn": "BaseLoot.loot",
      "offset": [
        2791,
        2809
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "6986": {
      "fn": "BaseLoot.loot",
      "offset": [
        2791,
        2809
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6987": {
      "fn": "BaseLoot.loot",
      "offset": [
        2791,
        2809
      ],
      "op": "ADD",
      "path": "2"
    },
    "6988": {
      "op": "DUP12"
    },
    "6989": {
      "op": "SWAP1"
    },
    "6990": {
      "op": "MSTORE"
    },
    "6991": {
      "fn": "BaseLoot.loot",
      "offset": [
        2813,
        2823
      ],
      "op": "CALLER",
      "path": "2"
    },
    "6992": {
      "fn": "BaseLoot.loot",
      "offset": [
        2813,
        2823
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6993": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6995": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6997": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6999": {
      "op": "SHL"
    },
    "7000": {
      "op": "SUB"
    },
    "7001": {
      "fn": "BaseLoot.loot",
      "offset": [
        2791,
        2803
      ],
      "op": "DUP10",
      "path": "2"
    },
    "7002": {
      "fn": "BaseLoot.loot",
      "offset": [
        2791,
        2803
      ],
      "op": "AND",
      "path": "2"
    },
    "7003": {
      "fn": "BaseLoot.loot",
      "offset": [
        2791,
        2803
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7004": {
      "fn": "BaseLoot.loot",
      "offset": [
        2791,
        2803
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x6352211E"
    },
    "7009": {
      "fn": "BaseLoot.loot",
      "offset": [
        2791,
        2803
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7010": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7012": {
      "op": "ADD"
    },
    "7013": {
      "fn": "BaseLoot.loot",
      "offset": [
        2791,
        2809
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7015": {
      "fn": "BaseLoot.loot",
      "offset": [
        2791,
        2809
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7017": {
      "fn": "BaseLoot.loot",
      "offset": [
        2791,
        2809
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7018": {
      "fn": "BaseLoot.loot",
      "offset": [
        2791,
        2809
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7019": {
      "fn": "BaseLoot.loot",
      "offset": [
        2791,
        2809
      ],
      "op": "DUP4",
      "path": "2"
    },
    "7020": {
      "fn": "BaseLoot.loot",
      "offset": [
        2791,
        2809
      ],
      "op": "SUB",
      "path": "2"
    },
    "7021": {
      "fn": "BaseLoot.loot",
      "offset": [
        2791,
        2809
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7022": {
      "fn": "BaseLoot.loot",
      "offset": [
        2791,
        2809
      ],
      "op": "DUP7",
      "path": "2"
    },
    "7023": {
      "fn": "BaseLoot.loot",
      "offset": [
        2791,
        2809
      ],
      "op": "GAS",
      "path": "2"
    },
    "7024": {
      "fn": "BaseLoot.loot",
      "offset": [
        2791,
        2809
      ],
      "op": "STATICCALL",
      "path": "2"
    },
    "7025": {
      "fn": "BaseLoot.loot",
      "offset": [
        2791,
        2809
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "7026": {
      "fn": "BaseLoot.loot",
      "offset": [
        2791,
        2809
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7027": {
      "fn": "BaseLoot.loot",
      "offset": [
        2791,
        2809
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "7028": {
      "fn": "BaseLoot.loot",
      "offset": [
        2791,
        2809
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1B81"
    },
    "7031": {
      "fn": "BaseLoot.loot",
      "offset": [
        2791,
        2809
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7032": {
      "fn": "BaseLoot.loot",
      "offset": [
        2791,
        2809
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "7033": {
      "fn": "BaseLoot.loot",
      "offset": [
        2791,
        2809
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7035": {
      "fn": "BaseLoot.loot",
      "offset": [
        2791,
        2809
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7036": {
      "fn": "BaseLoot.loot",
      "offset": [
        2791,
        2809
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "7037": {
      "fn": "BaseLoot.loot",
      "offset": [
        2791,
        2809
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "7038": {
      "fn": "BaseLoot.loot",
      "offset": [
        2791,
        2809
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7040": {
      "fn": "BaseLoot.loot",
      "offset": [
        2791,
        2809
      ],
      "op": "REVERT",
      "path": "2"
    },
    "7041": {
      "fn": "BaseLoot.loot",
      "offset": [
        2791,
        2809
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7042": {
      "fn": "BaseLoot.loot",
      "offset": [
        2791,
        2809
      ],
      "op": "POP",
      "path": "2"
    },
    "7043": {
      "fn": "BaseLoot.loot",
      "offset": [
        2791,
        2809
      ],
      "op": "POP",
      "path": "2"
    },
    "7044": {
      "fn": "BaseLoot.loot",
      "offset": [
        2791,
        2809
      ],
      "op": "POP",
      "path": "2"
    },
    "7045": {
      "fn": "BaseLoot.loot",
      "offset": [
        2791,
        2809
      ],
      "op": "POP",
      "path": "2"
    },
    "7046": {
      "fn": "BaseLoot.loot",
      "offset": [
        2791,
        2809
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7048": {
      "fn": "BaseLoot.loot",
      "offset": [
        2791,
        2809
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7049": {
      "fn": "BaseLoot.loot",
      "offset": [
        2791,
        2809
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "7050": {
      "fn": "BaseLoot.loot",
      "offset": [
        2791,
        2809
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "7052": {
      "fn": "BaseLoot.loot",
      "offset": [
        2791,
        2809
      ],
      "op": "NOT",
      "path": "2"
    },
    "7053": {
      "fn": "BaseLoot.loot",
      "offset": [
        2791,
        2809
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "7055": {
      "fn": "BaseLoot.loot",
      "offset": [
        2791,
        2809
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7056": {
      "fn": "BaseLoot.loot",
      "offset": [
        2791,
        2809
      ],
      "op": "ADD",
      "path": "2"
    },
    "7057": {
      "fn": "BaseLoot.loot",
      "offset": [
        2791,
        2809
      ],
      "op": "AND",
      "path": "2"
    },
    "7058": {
      "fn": "BaseLoot.loot",
      "offset": [
        2791,
        2809
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7059": {
      "fn": "BaseLoot.loot",
      "offset": [
        2791,
        2809
      ],
      "op": "ADD",
      "path": "2"
    },
    "7060": {
      "fn": "BaseLoot.loot",
      "offset": [
        2791,
        2809
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7061": {
      "fn": "BaseLoot.loot",
      "offset": [
        2791,
        2809
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7063": {
      "fn": "BaseLoot.loot",
      "offset": [
        2791,
        2809
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7064": {
      "fn": "BaseLoot.loot",
      "offset": [
        2791,
        2809
      ],
      "op": "POP",
      "path": "2"
    },
    "7065": {
      "fn": "BaseLoot.loot",
      "offset": [
        2791,
        2809
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7066": {
      "fn": "BaseLoot.loot",
      "offset": [
        2791,
        2809
      ],
      "op": "ADD",
      "path": "2"
    },
    "7067": {
      "fn": "BaseLoot.loot",
      "offset": [
        2791,
        2809
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7068": {
      "fn": "BaseLoot.loot",
      "offset": [
        2791,
        2809
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1BA5"
    },
    "7071": {
      "fn": "BaseLoot.loot",
      "offset": [
        2791,
        2809
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7072": {
      "fn": "BaseLoot.loot",
      "offset": [
        2791,
        2809
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7073": {
      "fn": "BaseLoot.loot",
      "offset": [
        2791,
        2809
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4C0C"
    },
    "7076": {
      "fn": "BaseLoot.loot",
      "jump": "i",
      "offset": [
        2791,
        2809
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7077": {
      "fn": "BaseLoot.loot",
      "offset": [
        2791,
        2809
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7078": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7080": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7082": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7084": {
      "op": "SHL"
    },
    "7085": {
      "op": "SUB"
    },
    "7086": {
      "fn": "BaseLoot.loot",
      "offset": [
        2791,
        2823
      ],
      "op": "AND",
      "path": "2"
    },
    "7087": {
      "branch": 181,
      "fn": "BaseLoot.loot",
      "offset": [
        2791,
        2823
      ],
      "op": "EQ",
      "path": "2"
    },
    "7088": {
      "fn": "BaseLoot.loot",
      "offset": [
        2791,
        2844
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7089": {
      "fn": "BaseLoot.loot",
      "offset": [
        2791,
        2844
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1BC4"
    },
    "7092": {
      "branch": 181,
      "fn": "BaseLoot.loot",
      "offset": [
        2791,
        2844
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7093": {
      "op": "POP"
    },
    "7094": {
      "fn": "BaseLoot.loot",
      "offset": [
        2841,
        2844
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFB"
    },
    "7096": {
      "fn": "BaseLoot.loot",
      "offset": [
        2841,
        2844
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7097": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7099": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7101": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7103": {
      "op": "SHL"
    },
    "7104": {
      "op": "SUB"
    },
    "7105": {
      "fn": "BaseLoot.loot",
      "offset": [
        2841,
        2844
      ],
      "op": "AND",
      "path": "2"
    },
    "7106": {
      "fn": "BaseLoot.loot",
      "offset": [
        2827,
        2837
      ],
      "op": "CALLER",
      "path": "2"
    },
    "7107": {
      "branch": 182,
      "fn": "BaseLoot.loot",
      "offset": [
        2827,
        2844
      ],
      "op": "EQ",
      "path": "2"
    },
    "7108": {
      "fn": "BaseLoot.loot",
      "offset": [
        2791,
        2844
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7109": {
      "fn": "BaseLoot.loot",
      "offset": [
        2783,
        2867
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1BE0"
    },
    "7112": {
      "branch": 182,
      "fn": "BaseLoot.loot",
      "offset": [
        2783,
        2867
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7113": {
      "fn": "BaseLoot.loot",
      "offset": [
        2783,
        2867
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7115": {
      "fn": "BaseLoot.loot",
      "offset": [
        2783,
        2867
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7116": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7120": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7122": {
      "op": "SHL"
    },
    "7123": {
      "fn": "BaseLoot.loot",
      "offset": [
        2783,
        2867
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7124": {
      "fn": "BaseLoot.loot",
      "offset": [
        2783,
        2867
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7125": {
      "fn": "BaseLoot.loot",
      "offset": [
        2783,
        2867
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "7127": {
      "fn": "BaseLoot.loot",
      "offset": [
        2783,
        2867
      ],
      "op": "ADD",
      "path": "2"
    },
    "7128": {
      "fn": "BaseLoot.loot",
      "offset": [
        2783,
        2867
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x60F"
    },
    "7131": {
      "fn": "BaseLoot.loot",
      "offset": [
        2783,
        2867
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7132": {
      "fn": "BaseLoot.loot",
      "offset": [
        2783,
        2867
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4C72"
    },
    "7135": {
      "fn": "BaseLoot.loot",
      "jump": "i",
      "offset": [
        2783,
        2867
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7136": {
      "fn": "BaseLoot.loot",
      "offset": [
        2783,
        2867
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7137": {
      "fn": "BaseLoot.loot",
      "offset": [
        2893,
        2899
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 48,
      "value": "0xFE"
    },
    "7139": {
      "fn": "BaseLoot.loot",
      "offset": [
        2893,
        2899
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7140": {
      "fn": "BaseLoot.loot",
      "offset": [
        2893,
        2935
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7142": {
      "fn": "BaseLoot.loot",
      "offset": [
        2893,
        2935
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7143": {
      "op": "PUSH4",
      "value": "0x562530DF"
    },
    "7148": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "7150": {
      "op": "SHL"
    },
    "7151": {
      "fn": "BaseLoot.loot",
      "offset": [
        2893,
        2935
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7152": {
      "fn": "BaseLoot.loot",
      "offset": [
        2893,
        2935
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7153": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7155": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7157": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7159": {
      "op": "SHL"
    },
    "7160": {
      "op": "SUB"
    },
    "7161": {
      "fn": "BaseLoot.loot",
      "offset": [
        2893,
        2899
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7162": {
      "fn": "BaseLoot.loot",
      "offset": [
        2893,
        2899
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7163": {
      "fn": "BaseLoot.loot",
      "offset": [
        2893,
        2899
      ],
      "op": "AND",
      "path": "2"
    },
    "7164": {
      "fn": "BaseLoot.loot",
      "offset": [
        2893,
        2899
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7165": {
      "fn": "BaseLoot.loot",
      "offset": [
        2893,
        2910
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xAC4A61BE"
    },
    "7170": {
      "fn": "BaseLoot.loot",
      "offset": [
        2893,
        2910
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7171": {
      "fn": "BaseLoot.loot",
      "offset": [
        2893,
        2935
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1C17"
    },
    "7174": {
      "fn": "BaseLoot.loot",
      "offset": [
        2893,
        2935
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7175": {
      "fn": "BaseLoot.loot",
      "offset": [
        2911,
        2916
      ],
      "op": "DUP15",
      "path": "2"
    },
    "7176": {
      "fn": "BaseLoot.loot",
      "offset": [
        2911,
        2916
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7177": {
      "fn": "BaseLoot.loot",
      "offset": [
        2918,
        2922
      ],
      "op": "DUP15",
      "path": "2"
    },
    "7178": {
      "fn": "BaseLoot.loot",
      "offset": [
        2918,
        2922
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7179": {
      "fn": "BaseLoot.loot",
      "offset": [
        2924,
        2931
      ],
      "op": "DUP15",
      "path": "2"
    },
    "7180": {
      "fn": "BaseLoot.loot",
      "offset": [
        2924,
        2931
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7181": {
      "fn": "BaseLoot.loot",
      "offset": [
        2893,
        2899
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "7183": {
      "fn": "BaseLoot.loot",
      "offset": [
        2893,
        2899
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7184": {
      "fn": "BaseLoot.loot",
      "offset": [
        2893,
        2935
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "7186": {
      "fn": "BaseLoot.loot",
      "offset": [
        2893,
        2935
      ],
      "op": "ADD",
      "path": "2"
    },
    "7187": {
      "fn": "BaseLoot.loot",
      "offset": [
        2893,
        2935
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4DFE"
    },
    "7190": {
      "fn": "BaseLoot.loot",
      "jump": "i",
      "offset": [
        2893,
        2935
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7191": {
      "fn": "BaseLoot.loot",
      "offset": [
        2893,
        2935
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7192": {
      "fn": "BaseLoot.loot",
      "offset": [
        2893,
        2935
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7194": {
      "fn": "BaseLoot.loot",
      "offset": [
        2893,
        2935
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7196": {
      "fn": "BaseLoot.loot",
      "offset": [
        2893,
        2935
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7197": {
      "fn": "BaseLoot.loot",
      "offset": [
        2893,
        2935
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7198": {
      "fn": "BaseLoot.loot",
      "offset": [
        2893,
        2935
      ],
      "op": "DUP4",
      "path": "2"
    },
    "7199": {
      "fn": "BaseLoot.loot",
      "offset": [
        2893,
        2935
      ],
      "op": "SUB",
      "path": "2"
    },
    "7200": {
      "fn": "BaseLoot.loot",
      "offset": [
        2893,
        2935
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7201": {
      "fn": "BaseLoot.loot",
      "offset": [
        2893,
        2935
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7203": {
      "fn": "BaseLoot.loot",
      "offset": [
        2893,
        2935
      ],
      "op": "DUP8",
      "path": "2"
    },
    "7204": {
      "fn": "BaseLoot.loot",
      "offset": [
        2893,
        2935
      ],
      "op": "GAS",
      "path": "2"
    },
    "7205": {
      "fn": "BaseLoot.loot",
      "offset": [
        2893,
        2935
      ],
      "op": "CALL",
      "path": "2"
    },
    "7206": {
      "fn": "BaseLoot.loot",
      "offset": [
        2893,
        2935
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "7207": {
      "fn": "BaseLoot.loot",
      "offset": [
        2893,
        2935
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7208": {
      "fn": "BaseLoot.loot",
      "offset": [
        2893,
        2935
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "7209": {
      "fn": "BaseLoot.loot",
      "offset": [
        2893,
        2935
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1C36"
    },
    "7212": {
      "fn": "BaseLoot.loot",
      "offset": [
        2893,
        2935
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7213": {
      "fn": "BaseLoot.loot",
      "offset": [
        2893,
        2935
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "7214": {
      "fn": "BaseLoot.loot",
      "offset": [
        2893,
        2935
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7216": {
      "fn": "BaseLoot.loot",
      "offset": [
        2893,
        2935
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7217": {
      "fn": "BaseLoot.loot",
      "offset": [
        2893,
        2935
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "7218": {
      "fn": "BaseLoot.loot",
      "offset": [
        2893,
        2935
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "7219": {
      "fn": "BaseLoot.loot",
      "offset": [
        2893,
        2935
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7221": {
      "fn": "BaseLoot.loot",
      "offset": [
        2893,
        2935
      ],
      "op": "REVERT",
      "path": "2"
    },
    "7222": {
      "fn": "BaseLoot.loot",
      "offset": [
        2893,
        2935
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7223": {
      "fn": "BaseLoot.loot",
      "offset": [
        2893,
        2935
      ],
      "op": "POP",
      "path": "2"
    },
    "7224": {
      "fn": "BaseLoot.loot",
      "offset": [
        2893,
        2935
      ],
      "op": "POP",
      "path": "2"
    },
    "7225": {
      "fn": "BaseLoot.loot",
      "offset": [
        2893,
        2935
      ],
      "op": "POP",
      "path": "2"
    },
    "7226": {
      "fn": "BaseLoot.loot",
      "offset": [
        2893,
        2935
      ],
      "op": "POP",
      "path": "2"
    },
    "7227": {
      "fn": "BaseLoot.loot",
      "offset": [
        2893,
        2935
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7229": {
      "fn": "BaseLoot.loot",
      "offset": [
        2893,
        2935
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7230": {
      "fn": "BaseLoot.loot",
      "offset": [
        2893,
        2935
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "7231": {
      "fn": "BaseLoot.loot",
      "offset": [
        2893,
        2935
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "7233": {
      "fn": "BaseLoot.loot",
      "offset": [
        2893,
        2935
      ],
      "op": "NOT",
      "path": "2"
    },
    "7234": {
      "fn": "BaseLoot.loot",
      "offset": [
        2893,
        2935
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "7236": {
      "fn": "BaseLoot.loot",
      "offset": [
        2893,
        2935
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7237": {
      "fn": "BaseLoot.loot",
      "offset": [
        2893,
        2935
      ],
      "op": "ADD",
      "path": "2"
    },
    "7238": {
      "fn": "BaseLoot.loot",
      "offset": [
        2893,
        2935
      ],
      "op": "AND",
      "path": "2"
    },
    "7239": {
      "fn": "BaseLoot.loot",
      "offset": [
        2893,
        2935
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7240": {
      "fn": "BaseLoot.loot",
      "offset": [
        2893,
        2935
      ],
      "op": "ADD",
      "path": "2"
    },
    "7241": {
      "fn": "BaseLoot.loot",
      "offset": [
        2893,
        2935
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7242": {
      "fn": "BaseLoot.loot",
      "offset": [
        2893,
        2935
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7244": {
      "fn": "BaseLoot.loot",
      "offset": [
        2893,
        2935
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7245": {
      "fn": "BaseLoot.loot",
      "offset": [
        2893,
        2935
      ],
      "op": "POP",
      "path": "2"
    },
    "7246": {
      "fn": "BaseLoot.loot",
      "offset": [
        2893,
        2935
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7247": {
      "fn": "BaseLoot.loot",
      "offset": [
        2893,
        2935
      ],
      "op": "ADD",
      "path": "2"
    },
    "7248": {
      "fn": "BaseLoot.loot",
      "offset": [
        2893,
        2935
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7249": {
      "fn": "BaseLoot.loot",
      "offset": [
        2893,
        2935
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1C5A"
    },
    "7252": {
      "fn": "BaseLoot.loot",
      "offset": [
        2893,
        2935
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7253": {
      "fn": "BaseLoot.loot",
      "offset": [
        2893,
        2935
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7254": {
      "fn": "BaseLoot.loot",
      "offset": [
        2893,
        2935
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4BCC"
    },
    "7257": {
      "fn": "BaseLoot.loot",
      "jump": "i",
      "offset": [
        2893,
        2935
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7258": {
      "branch": 183,
      "fn": "BaseLoot.loot",
      "offset": [
        2893,
        2935
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7259": {
      "fn": "BaseLoot.loot",
      "offset": [
        2885,
        2951
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1C94"
    },
    "7262": {
      "branch": 183,
      "fn": "BaseLoot.loot",
      "offset": [
        2885,
        2951
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7263": {
      "fn": "BaseLoot.loot",
      "offset": [
        2885,
        2951
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7265": {
      "fn": "BaseLoot.loot",
      "offset": [
        2885,
        2951
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7266": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7270": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7272": {
      "op": "SHL"
    },
    "7273": {
      "fn": "BaseLoot.loot",
      "offset": [
        2885,
        2951
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7274": {
      "fn": "BaseLoot.loot",
      "offset": [
        2885,
        2951
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7275": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7277": {
      "fn": "BaseLoot.loot",
      "offset": [
        2885,
        2951
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "7279": {
      "fn": "BaseLoot.loot",
      "offset": [
        2885,
        2951
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7280": {
      "fn": "BaseLoot.loot",
      "offset": [
        2885,
        2951
      ],
      "op": "ADD",
      "path": "2"
    },
    "7281": {
      "op": "MSTORE"
    },
    "7282": {
      "op": "PUSH1",
      "value": "0xB"
    },
    "7284": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7286": {
      "op": "DUP3"
    },
    "7287": {
      "op": "ADD"
    },
    "7288": {
      "op": "MSTORE"
    },
    "7289": {
      "op": "PUSH11",
      "value": "0x3637B7BA1034B99027A7A9"
    },
    "7301": {
      "op": "PUSH1",
      "value": "0xA9"
    },
    "7303": {
      "op": "SHL"
    },
    "7304": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7306": {
      "op": "DUP3"
    },
    "7307": {
      "op": "ADD"
    },
    "7308": {
      "op": "MSTORE"
    },
    "7309": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7311": {
      "op": "ADD"
    },
    "7312": {
      "fn": "BaseLoot.loot",
      "offset": [
        2885,
        2951
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x60F"
    },
    "7315": {
      "op": "JUMP"
    },
    "7316": {
      "fn": "BaseLoot.loot",
      "offset": [
        2885,
        2951
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7317": {
      "fn": "BaseLoot.loot",
      "offset": [
        2977,
        2983
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 49,
      "value": "0xFE"
    },
    "7319": {
      "fn": "BaseLoot.loot",
      "offset": [
        2977,
        2983
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7320": {
      "fn": "BaseLoot.loot",
      "offset": [
        2977,
        3012
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7322": {
      "fn": "BaseLoot.loot",
      "offset": [
        2977,
        3012
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7323": {
      "op": "PUSH4",
      "value": "0x214AC01B"
    },
    "7328": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "7330": {
      "op": "SHL"
    },
    "7331": {
      "fn": "BaseLoot.loot",
      "offset": [
        2977,
        3012
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7332": {
      "fn": "BaseLoot.loot",
      "offset": [
        2977,
        3012
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7333": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7335": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7337": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7339": {
      "op": "SHL"
    },
    "7340": {
      "op": "SUB"
    },
    "7341": {
      "fn": "BaseLoot.loot",
      "offset": [
        2977,
        2983
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7342": {
      "fn": "BaseLoot.loot",
      "offset": [
        2977,
        2983
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7343": {
      "fn": "BaseLoot.loot",
      "offset": [
        2977,
        2983
      ],
      "op": "AND",
      "path": "2"
    },
    "7344": {
      "fn": "BaseLoot.loot",
      "offset": [
        2977,
        2983
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7345": {
      "fn": "BaseLoot.loot",
      "offset": [
        2977,
        2990
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x42958036"
    },
    "7350": {
      "fn": "BaseLoot.loot",
      "offset": [
        2977,
        2990
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7351": {
      "fn": "BaseLoot.loot",
      "offset": [
        2977,
        3012
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1CC8"
    },
    "7354": {
      "fn": "BaseLoot.loot",
      "offset": [
        2977,
        3012
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7355": {
      "fn": "BaseLoot.loot",
      "offset": [
        2991,
        2996
      ],
      "op": "DUP15",
      "path": "2"
    },
    "7356": {
      "fn": "BaseLoot.loot",
      "offset": [
        2991,
        2996
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7357": {
      "fn": "BaseLoot.loot",
      "offset": [
        2998,
        3002
      ],
      "op": "DUP15",
      "path": "2"
    },
    "7358": {
      "fn": "BaseLoot.loot",
      "offset": [
        2998,
        3002
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7359": {
      "fn": "BaseLoot.loot",
      "offset": [
        3004,
        3011
      ],
      "op": "DUP15",
      "path": "2"
    },
    "7360": {
      "fn": "BaseLoot.loot",
      "offset": [
        3004,
        3011
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7361": {
      "fn": "BaseLoot.loot",
      "offset": [
        2977,
        3012
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "7363": {
      "fn": "BaseLoot.loot",
      "offset": [
        2977,
        3012
      ],
      "op": "ADD",
      "path": "2"
    },
    "7364": {
      "fn": "BaseLoot.loot",
      "offset": [
        2977,
        3012
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4C51"
    },
    "7367": {
      "fn": "BaseLoot.loot",
      "jump": "i",
      "offset": [
        2977,
        3012
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7368": {
      "fn": "BaseLoot.loot",
      "offset": [
        2977,
        3012
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7369": {
      "fn": "BaseLoot.loot",
      "offset": [
        2977,
        3012
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7371": {
      "fn": "BaseLoot.loot",
      "offset": [
        2977,
        3012
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7373": {
      "fn": "BaseLoot.loot",
      "offset": [
        2977,
        3012
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7374": {
      "fn": "BaseLoot.loot",
      "offset": [
        2977,
        3012
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7375": {
      "fn": "BaseLoot.loot",
      "offset": [
        2977,
        3012
      ],
      "op": "DUP4",
      "path": "2"
    },
    "7376": {
      "fn": "BaseLoot.loot",
      "offset": [
        2977,
        3012
      ],
      "op": "SUB",
      "path": "2"
    },
    "7377": {
      "fn": "BaseLoot.loot",
      "offset": [
        2977,
        3012
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7378": {
      "fn": "BaseLoot.loot",
      "offset": [
        2977,
        3012
      ],
      "op": "DUP7",
      "path": "2"
    },
    "7379": {
      "fn": "BaseLoot.loot",
      "offset": [
        2977,
        3012
      ],
      "op": "GAS",
      "path": "2"
    },
    "7380": {
      "fn": "BaseLoot.loot",
      "offset": [
        2977,
        3012
      ],
      "op": "STATICCALL",
      "path": "2"
    },
    "7381": {
      "fn": "BaseLoot.loot",
      "offset": [
        2977,
        3012
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "7382": {
      "fn": "BaseLoot.loot",
      "offset": [
        2977,
        3012
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7383": {
      "fn": "BaseLoot.loot",
      "offset": [
        2977,
        3012
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "7384": {
      "fn": "BaseLoot.loot",
      "offset": [
        2977,
        3012
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1CE5"
    },
    "7387": {
      "fn": "BaseLoot.loot",
      "offset": [
        2977,
        3012
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7388": {
      "fn": "BaseLoot.loot",
      "offset": [
        2977,
        3012
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "7389": {
      "fn": "BaseLoot.loot",
      "offset": [
        2977,
        3012
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7391": {
      "fn": "BaseLoot.loot",
      "offset": [
        2977,
        3012
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7392": {
      "fn": "BaseLoot.loot",
      "offset": [
        2977,
        3012
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "7393": {
      "fn": "BaseLoot.loot",
      "offset": [
        2977,
        3012
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "7394": {
      "fn": "BaseLoot.loot",
      "offset": [
        2977,
        3012
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7396": {
      "fn": "BaseLoot.loot",
      "offset": [
        2977,
        3012
      ],
      "op": "REVERT",
      "path": "2"
    },
    "7397": {
      "fn": "BaseLoot.loot",
      "offset": [
        2977,
        3012
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7398": {
      "fn": "BaseLoot.loot",
      "offset": [
        2977,
        3012
      ],
      "op": "POP",
      "path": "2"
    },
    "7399": {
      "fn": "BaseLoot.loot",
      "offset": [
        2977,
        3012
      ],
      "op": "POP",
      "path": "2"
    },
    "7400": {
      "fn": "BaseLoot.loot",
      "offset": [
        2977,
        3012
      ],
      "op": "POP",
      "path": "2"
    },
    "7401": {
      "fn": "BaseLoot.loot",
      "offset": [
        2977,
        3012
      ],
      "op": "POP",
      "path": "2"
    },
    "7402": {
      "fn": "BaseLoot.loot",
      "offset": [
        2977,
        3012
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7404": {
      "fn": "BaseLoot.loot",
      "offset": [
        2977,
        3012
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7405": {
      "fn": "BaseLoot.loot",
      "offset": [
        2977,
        3012
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "7406": {
      "fn": "BaseLoot.loot",
      "offset": [
        2977,
        3012
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "7408": {
      "fn": "BaseLoot.loot",
      "offset": [
        2977,
        3012
      ],
      "op": "NOT",
      "path": "2"
    },
    "7409": {
      "fn": "BaseLoot.loot",
      "offset": [
        2977,
        3012
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "7411": {
      "fn": "BaseLoot.loot",
      "offset": [
        2977,
        3012
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7412": {
      "fn": "BaseLoot.loot",
      "offset": [
        2977,
        3012
      ],
      "op": "ADD",
      "path": "2"
    },
    "7413": {
      "fn": "BaseLoot.loot",
      "offset": [
        2977,
        3012
      ],
      "op": "AND",
      "path": "2"
    },
    "7414": {
      "fn": "BaseLoot.loot",
      "offset": [
        2977,
        3012
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7415": {
      "fn": "BaseLoot.loot",
      "offset": [
        2977,
        3012
      ],
      "op": "ADD",
      "path": "2"
    },
    "7416": {
      "fn": "BaseLoot.loot",
      "offset": [
        2977,
        3012
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7417": {
      "fn": "BaseLoot.loot",
      "offset": [
        2977,
        3012
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7419": {
      "fn": "BaseLoot.loot",
      "offset": [
        2977,
        3012
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7420": {
      "fn": "BaseLoot.loot",
      "offset": [
        2977,
        3012
      ],
      "op": "POP",
      "path": "2"
    },
    "7421": {
      "fn": "BaseLoot.loot",
      "offset": [
        2977,
        3012
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7422": {
      "fn": "BaseLoot.loot",
      "offset": [
        2977,
        3012
      ],
      "op": "ADD",
      "path": "2"
    },
    "7423": {
      "fn": "BaseLoot.loot",
      "offset": [
        2977,
        3012
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7424": {
      "fn": "BaseLoot.loot",
      "offset": [
        2977,
        3012
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1D09"
    },
    "7427": {
      "fn": "BaseLoot.loot",
      "offset": [
        2977,
        3012
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7428": {
      "fn": "BaseLoot.loot",
      "offset": [
        2977,
        3012
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7429": {
      "fn": "BaseLoot.loot",
      "offset": [
        2977,
        3012
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4BCC"
    },
    "7432": {
      "fn": "BaseLoot.loot",
      "jump": "i",
      "offset": [
        2977,
        3012
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7433": {
      "branch": 184,
      "fn": "BaseLoot.loot",
      "offset": [
        2977,
        3012
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7434": {
      "fn": "BaseLoot.loot",
      "offset": [
        2969,
        3031
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1D46"
    },
    "7437": {
      "branch": 184,
      "fn": "BaseLoot.loot",
      "offset": [
        2969,
        3031
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7438": {
      "fn": "BaseLoot.loot",
      "offset": [
        2969,
        3031
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7440": {
      "fn": "BaseLoot.loot",
      "offset": [
        2969,
        3031
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7441": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7445": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7447": {
      "op": "SHL"
    },
    "7448": {
      "fn": "BaseLoot.loot",
      "offset": [
        2969,
        3031
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7449": {
      "fn": "BaseLoot.loot",
      "offset": [
        2969,
        3031
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7450": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7452": {
      "fn": "BaseLoot.loot",
      "offset": [
        2969,
        3031
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "7454": {
      "fn": "BaseLoot.loot",
      "offset": [
        2969,
        3031
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7455": {
      "fn": "BaseLoot.loot",
      "offset": [
        2969,
        3031
      ],
      "op": "ADD",
      "path": "2"
    },
    "7456": {
      "op": "MSTORE"
    },
    "7457": {
      "op": "PUSH1",
      "value": "0xE"
    },
    "7459": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7461": {
      "op": "DUP3"
    },
    "7462": {
      "op": "ADD"
    },
    "7463": {
      "op": "MSTORE"
    },
    "7464": {
      "op": "PUSH14",
      "value": "0x6C6F6F74206C61636B73204C4F53"
    },
    "7479": {
      "op": "PUSH1",
      "value": "0x90"
    },
    "7481": {
      "op": "SHL"
    },
    "7482": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7484": {
      "op": "DUP3"
    },
    "7485": {
      "op": "ADD"
    },
    "7486": {
      "op": "MSTORE"
    },
    "7487": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7489": {
      "op": "ADD"
    },
    "7490": {
      "fn": "BaseLoot.loot",
      "offset": [
        2969,
        3031
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x60F"
    },
    "7493": {
      "op": "JUMP"
    },
    "7494": {
      "fn": "BaseLoot.loot",
      "offset": [
        2969,
        3031
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7495": {
      "fn": "BaseLoot.loot",
      "offset": [
        3043,
        3049
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 50,
      "value": "0xFE"
    },
    "7497": {
      "fn": "BaseLoot.loot",
      "offset": [
        3043,
        3049
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7498": {
      "fn": "BaseLoot.loot",
      "offset": [
        3043,
        3087
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7500": {
      "fn": "BaseLoot.loot",
      "offset": [
        3043,
        3087
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7501": {
      "op": "PUSH4",
      "value": "0x156A0BF1"
    },
    "7506": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "7508": {
      "op": "SHL"
    },
    "7509": {
      "fn": "BaseLoot.loot",
      "offset": [
        3043,
        3087
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7510": {
      "fn": "BaseLoot.loot",
      "offset": [
        3043,
        3087
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7511": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7513": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7515": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7517": {
      "op": "SHL"
    },
    "7518": {
      "op": "SUB"
    },
    "7519": {
      "fn": "BaseLoot.loot",
      "offset": [
        3043,
        3049
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7520": {
      "fn": "BaseLoot.loot",
      "offset": [
        3043,
        3049
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7521": {
      "fn": "BaseLoot.loot",
      "offset": [
        3043,
        3049
      ],
      "op": "AND",
      "path": "2"
    },
    "7522": {
      "fn": "BaseLoot.loot",
      "offset": [
        3043,
        3049
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7523": {
      "fn": "BaseLoot.loot",
      "offset": [
        3043,
        3058
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x55A82FC4"
    },
    "7528": {
      "fn": "BaseLoot.loot",
      "offset": [
        3043,
        3058
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7529": {
      "fn": "BaseLoot.loot",
      "offset": [
        3043,
        3087
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1D7C"
    },
    "7532": {
      "fn": "BaseLoot.loot",
      "offset": [
        3043,
        3087
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7533": {
      "fn": "BaseLoot.loot",
      "offset": [
        3059,
        3064
      ],
      "op": "DUP15",
      "path": "2"
    },
    "7534": {
      "fn": "BaseLoot.loot",
      "offset": [
        3059,
        3064
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7535": {
      "fn": "BaseLoot.loot",
      "offset": [
        3066,
        3073
      ],
      "op": "DUP14",
      "path": "2"
    },
    "7536": {
      "fn": "BaseLoot.loot",
      "offset": [
        3066,
        3073
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7537": {
      "offset": [
        3476,
        3481
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2710"
    },
    "7540": {
      "fn": "BaseLoot.loot",
      "offset": [
        3476,
        3481
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7541": {
      "fn": "BaseLoot.loot",
      "offset": [
        3043,
        3087
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "7543": {
      "fn": "BaseLoot.loot",
      "offset": [
        3043,
        3087
      ],
      "op": "ADD",
      "path": "2"
    },
    "7544": {
      "fn": "BaseLoot.loot",
      "offset": [
        3043,
        3087
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4C51"
    },
    "7547": {
      "fn": "BaseLoot.loot",
      "jump": "i",
      "offset": [
        3043,
        3087
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7548": {
      "fn": "BaseLoot.loot",
      "offset": [
        3043,
        3087
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7549": {
      "fn": "BaseLoot.loot",
      "offset": [
        3043,
        3087
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7551": {
      "fn": "BaseLoot.loot",
      "offset": [
        3043,
        3087
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7553": {
      "fn": "BaseLoot.loot",
      "offset": [
        3043,
        3087
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7554": {
      "fn": "BaseLoot.loot",
      "offset": [
        3043,
        3087
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7555": {
      "fn": "BaseLoot.loot",
      "offset": [
        3043,
        3087
      ],
      "op": "DUP4",
      "path": "2"
    },
    "7556": {
      "fn": "BaseLoot.loot",
      "offset": [
        3043,
        3087
      ],
      "op": "SUB",
      "path": "2"
    },
    "7557": {
      "fn": "BaseLoot.loot",
      "offset": [
        3043,
        3087
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7558": {
      "fn": "BaseLoot.loot",
      "offset": [
        3043,
        3087
      ],
      "op": "DUP7",
      "path": "2"
    },
    "7559": {
      "fn": "BaseLoot.loot",
      "offset": [
        3043,
        3087
      ],
      "op": "GAS",
      "path": "2"
    },
    "7560": {
      "fn": "BaseLoot.loot",
      "offset": [
        3043,
        3087
      ],
      "op": "STATICCALL",
      "path": "2"
    },
    "7561": {
      "fn": "BaseLoot.loot",
      "offset": [
        3043,
        3087
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "7562": {
      "fn": "BaseLoot.loot",
      "offset": [
        3043,
        3087
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7563": {
      "fn": "BaseLoot.loot",
      "offset": [
        3043,
        3087
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "7564": {
      "fn": "BaseLoot.loot",
      "offset": [
        3043,
        3087
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1D99"
    },
    "7567": {
      "fn": "BaseLoot.loot",
      "offset": [
        3043,
        3087
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7568": {
      "fn": "BaseLoot.loot",
      "offset": [
        3043,
        3087
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "7569": {
      "fn": "BaseLoot.loot",
      "offset": [
        3043,
        3087
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7571": {
      "fn": "BaseLoot.loot",
      "offset": [
        3043,
        3087
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7572": {
      "fn": "BaseLoot.loot",
      "offset": [
        3043,
        3087
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "7573": {
      "fn": "BaseLoot.loot",
      "offset": [
        3043,
        3087
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "7574": {
      "fn": "BaseLoot.loot",
      "offset": [
        3043,
        3087
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7576": {
      "fn": "BaseLoot.loot",
      "offset": [
        3043,
        3087
      ],
      "op": "REVERT",
      "path": "2"
    },
    "7577": {
      "fn": "BaseLoot.loot",
      "offset": [
        3043,
        3087
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7578": {
      "fn": "BaseLoot.loot",
      "offset": [
        3043,
        3087
      ],
      "op": "POP",
      "path": "2"
    },
    "7579": {
      "fn": "BaseLoot.loot",
      "offset": [
        3043,
        3087
      ],
      "op": "POP",
      "path": "2"
    },
    "7580": {
      "fn": "BaseLoot.loot",
      "offset": [
        3043,
        3087
      ],
      "op": "POP",
      "path": "2"
    },
    "7581": {
      "fn": "BaseLoot.loot",
      "offset": [
        3043,
        3087
      ],
      "op": "POP",
      "path": "2"
    },
    "7582": {
      "fn": "BaseLoot.loot",
      "offset": [
        3043,
        3087
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7584": {
      "fn": "BaseLoot.loot",
      "offset": [
        3043,
        3087
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7585": {
      "fn": "BaseLoot.loot",
      "offset": [
        3043,
        3087
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "7586": {
      "fn": "BaseLoot.loot",
      "offset": [
        3043,
        3087
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "7588": {
      "fn": "BaseLoot.loot",
      "offset": [
        3043,
        3087
      ],
      "op": "NOT",
      "path": "2"
    },
    "7589": {
      "fn": "BaseLoot.loot",
      "offset": [
        3043,
        3087
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "7591": {
      "fn": "BaseLoot.loot",
      "offset": [
        3043,
        3087
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7592": {
      "fn": "BaseLoot.loot",
      "offset": [
        3043,
        3087
      ],
      "op": "ADD",
      "path": "2"
    },
    "7593": {
      "fn": "BaseLoot.loot",
      "offset": [
        3043,
        3087
      ],
      "op": "AND",
      "path": "2"
    },
    "7594": {
      "fn": "BaseLoot.loot",
      "offset": [
        3043,
        3087
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7595": {
      "fn": "BaseLoot.loot",
      "offset": [
        3043,
        3087
      ],
      "op": "ADD",
      "path": "2"
    },
    "7596": {
      "fn": "BaseLoot.loot",
      "offset": [
        3043,
        3087
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7597": {
      "fn": "BaseLoot.loot",
      "offset": [
        3043,
        3087
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7599": {
      "fn": "BaseLoot.loot",
      "offset": [
        3043,
        3087
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7600": {
      "fn": "BaseLoot.loot",
      "offset": [
        3043,
        3087
      ],
      "op": "POP",
      "path": "2"
    },
    "7601": {
      "fn": "BaseLoot.loot",
      "offset": [
        3043,
        3087
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7602": {
      "fn": "BaseLoot.loot",
      "offset": [
        3043,
        3087
      ],
      "op": "ADD",
      "path": "2"
    },
    "7603": {
      "fn": "BaseLoot.loot",
      "offset": [
        3043,
        3087
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7604": {
      "fn": "BaseLoot.loot",
      "offset": [
        3043,
        3087
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1DBD"
    },
    "7607": {
      "fn": "BaseLoot.loot",
      "offset": [
        3043,
        3087
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7608": {
      "fn": "BaseLoot.loot",
      "offset": [
        3043,
        3087
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7609": {
      "fn": "BaseLoot.loot",
      "offset": [
        3043,
        3087
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4BCC"
    },
    "7612": {
      "fn": "BaseLoot.loot",
      "jump": "i",
      "offset": [
        3043,
        3087
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7613": {
      "branch": 185,
      "fn": "BaseLoot.loot",
      "offset": [
        3043,
        3087
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7614": {
      "fn": "BaseLoot.loot",
      "offset": [
        3035,
        3108
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1DFC"
    },
    "7617": {
      "branch": 185,
      "fn": "BaseLoot.loot",
      "offset": [
        3035,
        3108
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7618": {
      "fn": "BaseLoot.loot",
      "offset": [
        3035,
        3108
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7620": {
      "fn": "BaseLoot.loot",
      "offset": [
        3035,
        3108
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7621": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7625": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7627": {
      "op": "SHL"
    },
    "7628": {
      "fn": "BaseLoot.loot",
      "offset": [
        3035,
        3108
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7629": {
      "fn": "BaseLoot.loot",
      "offset": [
        3035,
        3108
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7630": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7632": {
      "fn": "BaseLoot.loot",
      "offset": [
        3035,
        3108
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "7634": {
      "fn": "BaseLoot.loot",
      "offset": [
        3035,
        3108
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7635": {
      "fn": "BaseLoot.loot",
      "offset": [
        3035,
        3108
      ],
      "op": "ADD",
      "path": "2"
    },
    "7636": {
      "op": "MSTORE"
    },
    "7637": {
      "op": "PUSH1",
      "value": "0x10"
    },
    "7639": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7641": {
      "op": "DUP3"
    },
    "7642": {
      "op": "ADD"
    },
    "7643": {
      "op": "MSTORE"
    },
    "7644": {
      "op": "PUSH16",
      "value": "0x21B0B713BA103637B7BA103A3430BA17"
    },
    "7661": {
      "op": "PUSH1",
      "value": "0x81"
    },
    "7663": {
      "op": "SHL"
    },
    "7664": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7666": {
      "op": "DUP3"
    },
    "7667": {
      "op": "ADD"
    },
    "7668": {
      "op": "MSTORE"
    },
    "7669": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7671": {
      "op": "ADD"
    },
    "7672": {
      "fn": "BaseLoot.loot",
      "offset": [
        3035,
        3108
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x60F"
    },
    "7675": {
      "op": "JUMP"
    },
    "7676": {
      "fn": "BaseLoot.loot",
      "offset": [
        3035,
        3108
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7677": {
      "fn": "BaseLoot.looted",
      "offset": [
        1469,
        1473
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7679": {
      "fn": "BaseLoot.looted",
      "offset": [
        1486,
        1500
      ],
      "op": "DUP11",
      "path": "2",
      "statement": 51
    },
    "7680": {
      "fn": "BaseLoot.looted",
      "offset": [
        1486,
        1500
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7681": {
      "fn": "BaseLoot.looted",
      "offset": [
        1486,
        1500
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7682": {
      "fn": "BaseLoot.looted",
      "offset": [
        1486,
        1494
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "7684": {
      "fn": "BaseLoot.looted",
      "offset": [
        1486,
        1500
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7686": {
      "fn": "BaseLoot.looted",
      "offset": [
        1486,
        1500
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7687": {
      "fn": "BaseLoot.looted",
      "offset": [
        1486,
        1500
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7688": {
      "fn": "BaseLoot.looted",
      "offset": [
        1486,
        1500
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7689": {
      "fn": "BaseLoot.looted",
      "offset": [
        1486,
        1500
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7691": {
      "fn": "BaseLoot.looted",
      "offset": [
        1486,
        1500
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7692": {
      "fn": "BaseLoot.looted",
      "offset": [
        1486,
        1500
      ],
      "op": "DUP5",
      "path": "2"
    },
    "7693": {
      "fn": "BaseLoot.looted",
      "offset": [
        1486,
        1500
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "7694": {
      "fn": "BaseLoot.looted",
      "offset": [
        1486,
        1509
      ],
      "op": "DUP14",
      "path": "2"
    },
    "7695": {
      "fn": "BaseLoot.looted",
      "offset": [
        1486,
        1509
      ],
      "op": "DUP6",
      "path": "2"
    },
    "7696": {
      "fn": "BaseLoot.looted",
      "offset": [
        1486,
        1509
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7697": {
      "fn": "BaseLoot.looted",
      "offset": [
        1486,
        1509
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7698": {
      "fn": "BaseLoot.looted",
      "offset": [
        1486,
        1509
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7699": {
      "fn": "BaseLoot.looted",
      "offset": [
        1486,
        1509
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7700": {
      "fn": "BaseLoot.looted",
      "offset": [
        1486,
        1509
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7701": {
      "fn": "BaseLoot.looted",
      "offset": [
        1486,
        1509
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7702": {
      "fn": "BaseLoot.looted",
      "offset": [
        1486,
        1509
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "7703": {
      "fn": "BaseLoot.looted",
      "offset": [
        1486,
        1509
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7704": {
      "fn": "BaseLoot.looted",
      "offset": [
        1486,
        1509
      ],
      "op": "AND",
      "path": "2"
    },
    "7705": {
      "branch": 186,
      "fn": "BaseLoot.loot",
      "offset": [
        3120,
        3148
      ],
      "op": "ISZERO",
      "path": "2",
      "statement": 52
    },
    "7706": {
      "fn": "BaseLoot.loot",
      "offset": [
        3112,
        3168
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1E57"
    },
    "7709": {
      "branch": 186,
      "fn": "BaseLoot.loot",
      "offset": [
        3112,
        3168
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7710": {
      "fn": "BaseLoot.loot",
      "offset": [
        3112,
        3168
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7712": {
      "fn": "BaseLoot.loot",
      "offset": [
        3112,
        3168
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7713": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7717": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7719": {
      "op": "SHL"
    },
    "7720": {
      "fn": "BaseLoot.loot",
      "offset": [
        3112,
        3168
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7721": {
      "fn": "BaseLoot.loot",
      "offset": [
        3112,
        3168
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7722": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7724": {
      "fn": "BaseLoot.loot",
      "offset": [
        3112,
        3168
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "7726": {
      "fn": "BaseLoot.loot",
      "offset": [
        3112,
        3168
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7727": {
      "fn": "BaseLoot.loot",
      "offset": [
        3112,
        3168
      ],
      "op": "ADD",
      "path": "2"
    },
    "7728": {
      "op": "MSTORE"
    },
    "7729": {
      "op": "PUSH1",
      "value": "0xF"
    },
    "7731": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7733": {
      "op": "DUP3"
    },
    "7734": {
      "op": "ADD"
    },
    "7735": {
      "op": "MSTORE"
    },
    "7736": {
      "op": "PUSH15",
      "value": "0x20B63932B0B23C903637B7BA32B217"
    },
    "7752": {
      "op": "PUSH1",
      "value": "0x89"
    },
    "7754": {
      "op": "SHL"
    },
    "7755": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7757": {
      "op": "DUP3"
    },
    "7758": {
      "op": "ADD"
    },
    "7759": {
      "op": "MSTORE"
    },
    "7760": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7762": {
      "op": "ADD"
    },
    "7763": {
      "fn": "BaseLoot.loot",
      "offset": [
        3112,
        3168
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x60F"
    },
    "7766": {
      "op": "JUMP"
    },
    "7767": {
      "fn": "BaseLoot.loot",
      "offset": [
        3112,
        3168
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7768": {
      "fn": "BaseLoot.loot",
      "offset": [
        3173,
        3211
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 53,
      "value": "0x1E81"
    },
    "7771": {
      "fn": "BaseLoot.loot",
      "offset": [
        3179,
        3189
      ],
      "op": "CALLER",
      "path": "2"
    },
    "7772": {
      "fn": "BaseLoot.loot",
      "offset": [
        3191,
        3198
      ],
      "op": "DUP11",
      "path": "2"
    },
    "7773": {
      "fn": "BaseLoot.loot",
      "offset": [
        3200,
        3201
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x9"
    },
    "7775": {
      "fn": "BaseLoot.loot",
      "offset": [
        3173,
        3211
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7777": {
      "fn": "BaseLoot.loot",
      "offset": [
        3173,
        3211
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7778": {
      "fn": "BaseLoot.loot",
      "offset": [
        3173,
        3211
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7779": {
      "fn": "BaseLoot.loot",
      "offset": [
        3173,
        3211
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7781": {
      "fn": "BaseLoot.loot",
      "offset": [
        3173,
        3211
      ],
      "op": "ADD",
      "path": "2"
    },
    "7782": {
      "fn": "BaseLoot.loot",
      "offset": [
        3173,
        3211
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7784": {
      "fn": "BaseLoot.loot",
      "offset": [
        3173,
        3211
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7785": {
      "fn": "BaseLoot.loot",
      "offset": [
        3173,
        3211
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7786": {
      "fn": "BaseLoot.loot",
      "offset": [
        3173,
        3211
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "7788": {
      "fn": "BaseLoot.loot",
      "offset": [
        3173,
        3211
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7789": {
      "fn": "BaseLoot.loot",
      "offset": [
        3173,
        3211
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7790": {
      "fn": "BaseLoot.loot",
      "offset": [
        3173,
        3211
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7792": {
      "fn": "BaseLoot.loot",
      "offset": [
        3173,
        3211
      ],
      "op": "ADD",
      "path": "2"
    },
    "7793": {
      "op": "PUSH5",
      "value": "0x6C6F6F7439"
    },
    "7799": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "7801": {
      "op": "SHL"
    },
    "7802": {
      "fn": "BaseLoot.loot",
      "offset": [
        3173,
        3211
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7803": {
      "fn": "BaseLoot.loot",
      "offset": [
        3173,
        3211
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7804": {
      "fn": "BaseLoot.loot",
      "offset": [
        3173,
        3211
      ],
      "op": "POP",
      "path": "2"
    },
    "7805": {
      "fn": "BaseLoot.loot",
      "offset": [
        3173,
        3178
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3C90"
    },
    "7808": {
      "fn": "BaseLoot.loot",
      "jump": "i",
      "offset": [
        3173,
        3211
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7809": {
      "fn": "BaseLoot.loot",
      "offset": [
        3173,
        3211
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7810": {
      "fn": "BaseLoot.loot",
      "offset": [
        3243,
        3327
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 54,
      "value": "0x1FE8"
    },
    "7813": {
      "fn": "BaseLoot.loot",
      "offset": [
        3262,
        3266
      ],
      "op": "DUP8",
      "path": "2"
    },
    "7814": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7816": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7818": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7820": {
      "op": "SHL"
    },
    "7821": {
      "op": "SUB"
    },
    "7822": {
      "fn": "BaseLoot.loot",
      "offset": [
        3262,
        3273
      ],
      "op": "AND",
      "path": "2"
    },
    "7823": {
      "fn": "BaseLoot.loot",
      "offset": [
        3262,
        3273
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x51F41EE3"
    },
    "7828": {
      "fn": "BaseLoot.loot",
      "offset": [
        3262,
        3275
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7830": {
      "fn": "BaseLoot.loot",
      "offset": [
        3262,
        3275
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7831": {
      "fn": "BaseLoot.loot",
      "offset": [
        3262,
        3275
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7832": {
      "fn": "BaseLoot.loot",
      "offset": [
        3262,
        3275
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xFFFFFFFF"
    },
    "7837": {
      "fn": "BaseLoot.loot",
      "offset": [
        3262,
        3275
      ],
      "op": "AND",
      "path": "2"
    },
    "7838": {
      "fn": "BaseLoot.loot",
      "offset": [
        3262,
        3275
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE0"
    },
    "7840": {
      "fn": "BaseLoot.loot",
      "offset": [
        3262,
        3275
      ],
      "op": "SHL",
      "path": "2"
    },
    "7841": {
      "fn": "BaseLoot.loot",
      "offset": [
        3262,
        3275
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7842": {
      "fn": "BaseLoot.loot",
      "offset": [
        3262,
        3275
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7843": {
      "fn": "BaseLoot.loot",
      "offset": [
        3262,
        3275
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "7845": {
      "fn": "BaseLoot.loot",
      "offset": [
        3262,
        3275
      ],
      "op": "ADD",
      "path": "2"
    },
    "7846": {
      "fn": "BaseLoot.loot",
      "offset": [
        3262,
        3275
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7848": {
      "fn": "BaseLoot.loot",
      "offset": [
        3262,
        3275
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7850": {
      "fn": "BaseLoot.loot",
      "offset": [
        3262,
        3275
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7851": {
      "fn": "BaseLoot.loot",
      "offset": [
        3262,
        3275
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7852": {
      "fn": "BaseLoot.loot",
      "offset": [
        3262,
        3275
      ],
      "op": "DUP4",
      "path": "2"
    },
    "7853": {
      "fn": "BaseLoot.loot",
      "offset": [
        3262,
        3275
      ],
      "op": "SUB",
      "path": "2"
    },
    "7854": {
      "fn": "BaseLoot.loot",
      "offset": [
        3262,
        3275
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7855": {
      "fn": "BaseLoot.loot",
      "offset": [
        3262,
        3275
      ],
      "op": "DUP7",
      "path": "2"
    },
    "7856": {
      "fn": "BaseLoot.loot",
      "offset": [
        3262,
        3275
      ],
      "op": "GAS",
      "path": "2"
    },
    "7857": {
      "fn": "BaseLoot.loot",
      "offset": [
        3262,
        3275
      ],
      "op": "STATICCALL",
      "path": "2"
    },
    "7858": {
      "fn": "BaseLoot.loot",
      "offset": [
        3262,
        3275
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "7859": {
      "fn": "BaseLoot.loot",
      "offset": [
        3262,
        3275
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7860": {
      "fn": "BaseLoot.loot",
      "offset": [
        3262,
        3275
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "7861": {
      "fn": "BaseLoot.loot",
      "offset": [
        3262,
        3275
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1EC2"
    },
    "7864": {
      "fn": "BaseLoot.loot",
      "offset": [
        3262,
        3275
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7865": {
      "fn": "BaseLoot.loot",
      "offset": [
        3262,
        3275
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "7866": {
      "fn": "BaseLoot.loot",
      "offset": [
        3262,
        3275
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7868": {
      "fn": "BaseLoot.loot",
      "offset": [
        3262,
        3275
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7869": {
      "fn": "BaseLoot.loot",
      "offset": [
        3262,
        3275
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "7870": {
      "fn": "BaseLoot.loot",
      "offset": [
        3262,
        3275
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "7871": {
      "fn": "BaseLoot.loot",
      "offset": [
        3262,
        3275
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7873": {
      "fn": "BaseLoot.loot",
      "offset": [
        3262,
        3275
      ],
      "op": "REVERT",
      "path": "2"
    },
    "7874": {
      "fn": "BaseLoot.loot",
      "offset": [
        3262,
        3275
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7875": {
      "fn": "BaseLoot.loot",
      "offset": [
        3262,
        3275
      ],
      "op": "POP",
      "path": "2"
    },
    "7876": {
      "fn": "BaseLoot.loot",
      "offset": [
        3262,
        3275
      ],
      "op": "POP",
      "path": "2"
    },
    "7877": {
      "fn": "BaseLoot.loot",
      "offset": [
        3262,
        3275
      ],
      "op": "POP",
      "path": "2"
    },
    "7878": {
      "fn": "BaseLoot.loot",
      "offset": [
        3262,
        3275
      ],
      "op": "POP",
      "path": "2"
    },
    "7879": {
      "fn": "BaseLoot.loot",
      "offset": [
        3262,
        3275
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7881": {
      "fn": "BaseLoot.loot",
      "offset": [
        3262,
        3275
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7882": {
      "fn": "BaseLoot.loot",
      "offset": [
        3262,
        3275
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "7883": {
      "fn": "BaseLoot.loot",
      "offset": [
        3262,
        3275
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "7885": {
      "fn": "BaseLoot.loot",
      "offset": [
        3262,
        3275
      ],
      "op": "NOT",
      "path": "2"
    },
    "7886": {
      "fn": "BaseLoot.loot",
      "offset": [
        3262,
        3275
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "7888": {
      "fn": "BaseLoot.loot",
      "offset": [
        3262,
        3275
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7889": {
      "fn": "BaseLoot.loot",
      "offset": [
        3262,
        3275
      ],
      "op": "ADD",
      "path": "2"
    },
    "7890": {
      "fn": "BaseLoot.loot",
      "offset": [
        3262,
        3275
      ],
      "op": "AND",
      "path": "2"
    },
    "7891": {
      "fn": "BaseLoot.loot",
      "offset": [
        3262,
        3275
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7892": {
      "fn": "BaseLoot.loot",
      "offset": [
        3262,
        3275
      ],
      "op": "ADD",
      "path": "2"
    },
    "7893": {
      "fn": "BaseLoot.loot",
      "offset": [
        3262,
        3275
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7894": {
      "fn": "BaseLoot.loot",
      "offset": [
        3262,
        3275
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7896": {
      "fn": "BaseLoot.loot",
      "offset": [
        3262,
        3275
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7897": {
      "fn": "BaseLoot.loot",
      "offset": [
        3262,
        3275
      ],
      "op": "POP",
      "path": "2"
    },
    "7898": {
      "fn": "BaseLoot.loot",
      "offset": [
        3262,
        3275
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7899": {
      "fn": "BaseLoot.loot",
      "offset": [
        3262,
        3275
      ],
      "op": "ADD",
      "path": "2"
    },
    "7900": {
      "fn": "BaseLoot.loot",
      "offset": [
        3262,
        3275
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7901": {
      "fn": "BaseLoot.loot",
      "offset": [
        3262,
        3275
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1EE6"
    },
    "7904": {
      "fn": "BaseLoot.loot",
      "offset": [
        3262,
        3275
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7905": {
      "fn": "BaseLoot.loot",
      "offset": [
        3262,
        3275
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7906": {
      "fn": "BaseLoot.loot",
      "offset": [
        3262,
        3275
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4C0C"
    },
    "7909": {
      "fn": "BaseLoot.loot",
      "jump": "i",
      "offset": [
        3262,
        3275
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7910": {
      "fn": "BaseLoot.loot",
      "offset": [
        3262,
        3275
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7911": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7913": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7915": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7917": {
      "op": "SHL"
    },
    "7918": {
      "op": "SUB"
    },
    "7919": {
      "fn": "BaseLoot.loot",
      "offset": [
        3249,
        3284
      ],
      "op": "AND",
      "path": "2"
    },
    "7920": {
      "fn": "BaseLoot.loot",
      "offset": [
        3249,
        3284
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x6352211E"
    },
    "7925": {
      "fn": "BaseLoot.loot",
      "offset": [
        3285,
        3289
      ],
      "op": "DUP10",
      "path": "2"
    },
    "7926": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7928": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7930": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7932": {
      "op": "SHL"
    },
    "7933": {
      "op": "SUB"
    },
    "7934": {
      "fn": "BaseLoot.loot",
      "offset": [
        3285,
        3298
      ],
      "op": "AND",
      "path": "2"
    },
    "7935": {
      "fn": "BaseLoot.loot",
      "offset": [
        3285,
        3298
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x33D119EB"
    },
    "7940": {
      "fn": "BaseLoot.loot",
      "offset": [
        3299,
        3303
      ],
      "op": "DUP15",
      "path": "2"
    },
    "7941": {
      "fn": "BaseLoot.loot",
      "offset": [
        3285,
        3304
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7943": {
      "fn": "BaseLoot.loot",
      "offset": [
        3285,
        3304
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7944": {
      "fn": "BaseLoot.loot",
      "offset": [
        3285,
        3304
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7945": {
      "fn": "BaseLoot.loot",
      "offset": [
        3285,
        3304
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xFFFFFFFF"
    },
    "7950": {
      "fn": "BaseLoot.loot",
      "offset": [
        3285,
        3304
      ],
      "op": "AND",
      "path": "2"
    },
    "7951": {
      "fn": "BaseLoot.loot",
      "offset": [
        3285,
        3304
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE0"
    },
    "7953": {
      "fn": "BaseLoot.loot",
      "offset": [
        3285,
        3304
      ],
      "op": "SHL",
      "path": "2"
    },
    "7954": {
      "fn": "BaseLoot.loot",
      "offset": [
        3285,
        3304
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7955": {
      "fn": "BaseLoot.loot",
      "offset": [
        3285,
        3304
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7956": {
      "fn": "BaseLoot.loot",
      "offset": [
        3285,
        3304
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "7958": {
      "fn": "BaseLoot.loot",
      "offset": [
        3285,
        3304
      ],
      "op": "ADD",
      "path": "2"
    },
    "7959": {
      "fn": "BaseLoot.loot",
      "offset": [
        3285,
        3304
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1F22"
    },
    "7962": {
      "fn": "BaseLoot.loot",
      "offset": [
        3285,
        3304
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7963": {
      "op": "DUP2"
    },
    "7964": {
      "op": "MSTORE"
    },
    "7965": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7967": {
      "op": "ADD"
    },
    "7968": {
      "op": "SWAP1"
    },
    "7969": {
      "op": "JUMP"
    },
    "7970": {
      "fn": "BaseLoot.loot",
      "offset": [
        3285,
        3304
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7971": {
      "fn": "BaseLoot.loot",
      "offset": [
        3285,
        3304
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7973": {
      "fn": "BaseLoot.loot",
      "offset": [
        3285,
        3304
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7975": {
      "fn": "BaseLoot.loot",
      "offset": [
        3285,
        3304
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7976": {
      "fn": "BaseLoot.loot",
      "offset": [
        3285,
        3304
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7977": {
      "fn": "BaseLoot.loot",
      "offset": [
        3285,
        3304
      ],
      "op": "DUP4",
      "path": "2"
    },
    "7978": {
      "fn": "BaseLoot.loot",
      "offset": [
        3285,
        3304
      ],
      "op": "SUB",
      "path": "2"
    },
    "7979": {
      "fn": "BaseLoot.loot",
      "offset": [
        3285,
        3304
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7980": {
      "fn": "BaseLoot.loot",
      "offset": [
        3285,
        3304
      ],
      "op": "DUP7",
      "path": "2"
    },
    "7981": {
      "fn": "BaseLoot.loot",
      "offset": [
        3285,
        3304
      ],
      "op": "GAS",
      "path": "2"
    },
    "7982": {
      "fn": "BaseLoot.loot",
      "offset": [
        3285,
        3304
      ],
      "op": "STATICCALL",
      "path": "2"
    },
    "7983": {
      "fn": "BaseLoot.loot",
      "offset": [
        3285,
        3304
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "7984": {
      "fn": "BaseLoot.loot",
      "offset": [
        3285,
        3304
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7985": {
      "fn": "BaseLoot.loot",
      "offset": [
        3285,
        3304
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "7986": {
      "fn": "BaseLoot.loot",
      "offset": [
        3285,
        3304
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1F3F"
    },
    "7989": {
      "fn": "BaseLoot.loot",
      "offset": [
        3285,
        3304
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7990": {
      "fn": "BaseLoot.loot",
      "offset": [
        3285,
        3304
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "7991": {
      "fn": "BaseLoot.loot",
      "offset": [
        3285,
        3304
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7993": {
      "fn": "BaseLoot.loot",
      "offset": [
        3285,
        3304
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7994": {
      "fn": "BaseLoot.loot",
      "offset": [
        3285,
        3304
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "7995": {
      "fn": "BaseLoot.loot",
      "offset": [
        3285,
        3304
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "7996": {
      "fn": "BaseLoot.loot",
      "offset": [
        3285,
        3304
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7998": {
      "fn": "BaseLoot.loot",
      "offset": [
        3285,
        3304
      ],
      "op": "REVERT",
      "path": "2"
    },
    "7999": {
      "fn": "BaseLoot.loot",
      "offset": [
        3285,
        3304
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8000": {
      "fn": "BaseLoot.loot",
      "offset": [
        3285,
        3304
      ],
      "op": "POP",
      "path": "2"
    },
    "8001": {
      "fn": "BaseLoot.loot",
      "offset": [
        3285,
        3304
      ],
      "op": "POP",
      "path": "2"
    },
    "8002": {
      "fn": "BaseLoot.loot",
      "offset": [
        3285,
        3304
      ],
      "op": "POP",
      "path": "2"
    },
    "8003": {
      "fn": "BaseLoot.loot",
      "offset": [
        3285,
        3304
      ],
      "op": "POP",
      "path": "2"
    },
    "8004": {
      "fn": "BaseLoot.loot",
      "offset": [
        3285,
        3304
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8006": {
      "fn": "BaseLoot.loot",
      "offset": [
        3285,
        3304
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8007": {
      "fn": "BaseLoot.loot",
      "offset": [
        3285,
        3304
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "8008": {
      "fn": "BaseLoot.loot",
      "offset": [
        3285,
        3304
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "8010": {
      "fn": "BaseLoot.loot",
      "offset": [
        3285,
        3304
      ],
      "op": "NOT",
      "path": "2"
    },
    "8011": {
      "fn": "BaseLoot.loot",
      "offset": [
        3285,
        3304
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "8013": {
      "fn": "BaseLoot.loot",
      "offset": [
        3285,
        3304
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8014": {
      "fn": "BaseLoot.loot",
      "offset": [
        3285,
        3304
      ],
      "op": "ADD",
      "path": "2"
    },
    "8015": {
      "fn": "BaseLoot.loot",
      "offset": [
        3285,
        3304
      ],
      "op": "AND",
      "path": "2"
    },
    "8016": {
      "fn": "BaseLoot.loot",
      "offset": [
        3285,
        3304
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8017": {
      "fn": "BaseLoot.loot",
      "offset": [
        3285,
        3304
      ],
      "op": "ADD",
      "path": "2"
    },
    "8018": {
      "fn": "BaseLoot.loot",
      "offset": [
        3285,
        3304
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8019": {
      "fn": "BaseLoot.loot",
      "offset": [
        3285,
        3304
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8021": {
      "fn": "BaseLoot.loot",
      "offset": [
        3285,
        3304
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8022": {
      "fn": "BaseLoot.loot",
      "offset": [
        3285,
        3304
      ],
      "op": "POP",
      "path": "2"
    },
    "8023": {
      "fn": "BaseLoot.loot",
      "offset": [
        3285,
        3304
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8024": {
      "fn": "BaseLoot.loot",
      "offset": [
        3285,
        3304
      ],
      "op": "ADD",
      "path": "2"
    },
    "8025": {
      "fn": "BaseLoot.loot",
      "offset": [
        3285,
        3304
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8026": {
      "fn": "BaseLoot.loot",
      "offset": [
        3285,
        3304
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1F63"
    },
    "8029": {
      "fn": "BaseLoot.loot",
      "offset": [
        3285,
        3304
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8030": {
      "fn": "BaseLoot.loot",
      "offset": [
        3285,
        3304
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8031": {
      "fn": "BaseLoot.loot",
      "offset": [
        3285,
        3304
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4E24"
    },
    "8034": {
      "fn": "BaseLoot.loot",
      "jump": "i",
      "offset": [
        3285,
        3304
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8035": {
      "fn": "BaseLoot.loot",
      "offset": [
        3285,
        3304
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8036": {
      "fn": "BaseLoot.loot",
      "offset": [
        3249,
        3305
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8038": {
      "fn": "BaseLoot.loot",
      "offset": [
        3249,
        3305
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8039": {
      "fn": "BaseLoot.loot",
      "offset": [
        3249,
        3305
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8040": {
      "fn": "BaseLoot.loot",
      "offset": [
        3249,
        3305
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xFFFFFFFF"
    },
    "8045": {
      "fn": "BaseLoot.loot",
      "offset": [
        3249,
        3305
      ],
      "op": "AND",
      "path": "2"
    },
    "8046": {
      "fn": "BaseLoot.loot",
      "offset": [
        3249,
        3305
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE0"
    },
    "8048": {
      "fn": "BaseLoot.loot",
      "offset": [
        3249,
        3305
      ],
      "op": "SHL",
      "path": "2"
    },
    "8049": {
      "fn": "BaseLoot.loot",
      "offset": [
        3249,
        3305
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8050": {
      "fn": "BaseLoot.loot",
      "offset": [
        3249,
        3305
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8051": {
      "fn": "BaseLoot.loot",
      "offset": [
        3249,
        3305
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "8053": {
      "fn": "BaseLoot.loot",
      "offset": [
        3249,
        3305
      ],
      "op": "ADD",
      "path": "2"
    },
    "8054": {
      "fn": "BaseLoot.loot",
      "offset": [
        3249,
        3305
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1F81"
    },
    "8057": {
      "fn": "BaseLoot.loot",
      "offset": [
        3249,
        3305
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8058": {
      "op": "DUP2"
    },
    "8059": {
      "op": "MSTORE"
    },
    "8060": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8062": {
      "op": "ADD"
    },
    "8063": {
      "op": "SWAP1"
    },
    "8064": {
      "op": "JUMP"
    },
    "8065": {
      "fn": "BaseLoot.loot",
      "offset": [
        3249,
        3305
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8066": {
      "fn": "BaseLoot.loot",
      "offset": [
        3249,
        3305
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "8068": {
      "fn": "BaseLoot.loot",
      "offset": [
        3249,
        3305
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8070": {
      "fn": "BaseLoot.loot",
      "offset": [
        3249,
        3305
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8071": {
      "fn": "BaseLoot.loot",
      "offset": [
        3249,
        3305
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8072": {
      "fn": "BaseLoot.loot",
      "offset": [
        3249,
        3305
      ],
      "op": "DUP4",
      "path": "2"
    },
    "8073": {
      "fn": "BaseLoot.loot",
      "offset": [
        3249,
        3305
      ],
      "op": "SUB",
      "path": "2"
    },
    "8074": {
      "fn": "BaseLoot.loot",
      "offset": [
        3249,
        3305
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8075": {
      "fn": "BaseLoot.loot",
      "offset": [
        3249,
        3305
      ],
      "op": "DUP7",
      "path": "2"
    },
    "8076": {
      "fn": "BaseLoot.loot",
      "offset": [
        3249,
        3305
      ],
      "op": "GAS",
      "path": "2"
    },
    "8077": {
      "fn": "BaseLoot.loot",
      "offset": [
        3249,
        3305
      ],
      "op": "STATICCALL",
      "path": "2"
    },
    "8078": {
      "fn": "BaseLoot.loot",
      "offset": [
        3249,
        3305
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "8079": {
      "fn": "BaseLoot.loot",
      "offset": [
        3249,
        3305
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8080": {
      "fn": "BaseLoot.loot",
      "offset": [
        3249,
        3305
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "8081": {
      "fn": "BaseLoot.loot",
      "offset": [
        3249,
        3305
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1F9E"
    },
    "8084": {
      "fn": "BaseLoot.loot",
      "offset": [
        3249,
        3305
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "8085": {
      "fn": "BaseLoot.loot",
      "offset": [
        3249,
        3305
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "8086": {
      "fn": "BaseLoot.loot",
      "offset": [
        3249,
        3305
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8088": {
      "fn": "BaseLoot.loot",
      "offset": [
        3249,
        3305
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8089": {
      "fn": "BaseLoot.loot",
      "offset": [
        3249,
        3305
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "8090": {
      "fn": "BaseLoot.loot",
      "offset": [
        3249,
        3305
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "8091": {
      "fn": "BaseLoot.loot",
      "offset": [
        3249,
        3305
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8093": {
      "fn": "BaseLoot.loot",
      "offset": [
        3249,
        3305
      ],
      "op": "REVERT",
      "path": "2"
    },
    "8094": {
      "fn": "BaseLoot.loot",
      "offset": [
        3249,
        3305
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8095": {
      "fn": "BaseLoot.loot",
      "offset": [
        3249,
        3305
      ],
      "op": "POP",
      "path": "2"
    },
    "8096": {
      "fn": "BaseLoot.loot",
      "offset": [
        3249,
        3305
      ],
      "op": "POP",
      "path": "2"
    },
    "8097": {
      "fn": "BaseLoot.loot",
      "offset": [
        3249,
        3305
      ],
      "op": "POP",
      "path": "2"
    },
    "8098": {
      "fn": "BaseLoot.loot",
      "offset": [
        3249,
        3305
      ],
      "op": "POP",
      "path": "2"
    },
    "8099": {
      "fn": "BaseLoot.loot",
      "offset": [
        3249,
        3305
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8101": {
      "fn": "BaseLoot.loot",
      "offset": [
        3249,
        3305
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8102": {
      "fn": "BaseLoot.loot",
      "offset": [
        3249,
        3305
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "8103": {
      "fn": "BaseLoot.loot",
      "offset": [
        3249,
        3305
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "8105": {
      "fn": "BaseLoot.loot",
      "offset": [
        3249,
        3305
      ],
      "op": "NOT",
      "path": "2"
    },
    "8106": {
      "fn": "BaseLoot.loot",
      "offset": [
        3249,
        3305
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "8108": {
      "fn": "BaseLoot.loot",
      "offset": [
        3249,
        3305
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8109": {
      "fn": "BaseLoot.loot",
      "offset": [
        3249,
        3305
      ],
      "op": "ADD",
      "path": "2"
    },
    "8110": {
      "fn": "BaseLoot.loot",
      "offset": [
        3249,
        3305
      ],
      "op": "AND",
      "path": "2"
    },
    "8111": {
      "fn": "BaseLoot.loot",
      "offset": [
        3249,
        3305
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8112": {
      "fn": "BaseLoot.loot",
      "offset": [
        3249,
        3305
      ],
      "op": "ADD",
      "path": "2"
    },
    "8113": {
      "fn": "BaseLoot.loot",
      "offset": [
        3249,
        3305
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8114": {
      "fn": "BaseLoot.loot",
      "offset": [
        3249,
        3305
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8116": {
      "fn": "BaseLoot.loot",
      "offset": [
        3249,
        3305
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8117": {
      "fn": "BaseLoot.loot",
      "offset": [
        3249,
        3305
      ],
      "op": "POP",
      "path": "2"
    },
    "8118": {
      "fn": "BaseLoot.loot",
      "offset": [
        3249,
        3305
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8119": {
      "fn": "BaseLoot.loot",
      "offset": [
        3249,
        3305
      ],
      "op": "ADD",
      "path": "2"
    },
    "8120": {
      "fn": "BaseLoot.loot",
      "offset": [
        3249,
        3305
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8121": {
      "fn": "BaseLoot.loot",
      "offset": [
        3249,
        3305
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1FC2"
    },
    "8124": {
      "fn": "BaseLoot.loot",
      "offset": [
        3249,
        3305
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8125": {
      "fn": "BaseLoot.loot",
      "offset": [
        3249,
        3305
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8126": {
      "fn": "BaseLoot.loot",
      "offset": [
        3249,
        3305
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4C0C"
    },
    "8129": {
      "fn": "BaseLoot.loot",
      "jump": "i",
      "offset": [
        3249,
        3305
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8130": {
      "fn": "BaseLoot.loot",
      "offset": [
        3249,
        3305
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8131": {
      "fn": "BaseLoot.loot",
      "offset": [
        3307,
        3314
      ],
      "op": "DUP11",
      "path": "2"
    },
    "8132": {
      "fn": "BaseLoot.loot",
      "offset": [
        3316,
        3317
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "8134": {
      "fn": "BaseLoot.loot",
      "offset": [
        3243,
        3327
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8136": {
      "fn": "BaseLoot.loot",
      "offset": [
        3243,
        3327
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8137": {
      "fn": "BaseLoot.loot",
      "offset": [
        3243,
        3327
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8138": {
      "fn": "BaseLoot.loot",
      "offset": [
        3243,
        3327
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8140": {
      "fn": "BaseLoot.loot",
      "offset": [
        3243,
        3327
      ],
      "op": "ADD",
      "path": "2"
    },
    "8141": {
      "fn": "BaseLoot.loot",
      "offset": [
        3243,
        3327
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8143": {
      "fn": "BaseLoot.loot",
      "offset": [
        3243,
        3327
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8144": {
      "fn": "BaseLoot.loot",
      "offset": [
        3243,
        3327
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8145": {
      "fn": "BaseLoot.loot",
      "offset": [
        3243,
        3327
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "8147": {
      "fn": "BaseLoot.loot",
      "offset": [
        3243,
        3327
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8148": {
      "fn": "BaseLoot.loot",
      "offset": [
        3243,
        3327
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8149": {
      "fn": "BaseLoot.loot",
      "offset": [
        3243,
        3327
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "8151": {
      "fn": "BaseLoot.loot",
      "offset": [
        3243,
        3327
      ],
      "op": "ADD",
      "path": "2"
    },
    "8152": {
      "op": "PUSH5",
      "value": "0x6C6F6F7431"
    },
    "8158": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "8160": {
      "op": "SHL"
    },
    "8161": {
      "fn": "BaseLoot.loot",
      "offset": [
        3243,
        3327
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8162": {
      "fn": "BaseLoot.loot",
      "offset": [
        3243,
        3327
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8163": {
      "fn": "BaseLoot.loot",
      "offset": [
        3243,
        3327
      ],
      "op": "POP",
      "path": "2"
    },
    "8164": {
      "fn": "BaseLoot.loot",
      "offset": [
        3243,
        3248
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3C90"
    },
    "8167": {
      "fn": "BaseLoot.loot",
      "jump": "i",
      "offset": [
        3243,
        3327
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8168": {
      "fn": "BaseLoot.loot",
      "offset": [
        3243,
        3327
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8169": {
      "fn": "BaseLoot.loot",
      "offset": [
        3332,
        3369
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 55,
      "value": "0x1FF5"
    },
    "8172": {
      "fn": "BaseLoot.loot",
      "offset": [
        3343,
        3347
      ],
      "op": "DUP8",
      "path": "2"
    },
    "8173": {
      "fn": "BaseLoot.loot",
      "offset": [
        3349,
        3353
      ],
      "op": "DUP12",
      "path": "2"
    },
    "8174": {
      "fn": "BaseLoot.loot",
      "offset": [
        3355,
        3362
      ],
      "op": "DUP12",
      "path": "2"
    },
    "8175": {
      "fn": "BaseLoot.loot",
      "offset": [
        3364,
        3368
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "8177": {
      "fn": "BaseLoot.loot",
      "offset": [
        3332,
        3342
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2C0E"
    },
    "8180": {
      "fn": "BaseLoot.loot",
      "jump": "i",
      "offset": [
        3332,
        3369
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8181": {
      "fn": "BaseLoot.loot",
      "offset": [
        3332,
        3369
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8182": {
      "fn": "BaseLoot.loot",
      "offset": [
        3381,
        3387
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 56,
      "value": "0xFE"
    },
    "8184": {
      "fn": "BaseLoot.loot",
      "offset": [
        3381,
        3387
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8185": {
      "fn": "BaseLoot.loot",
      "offset": [
        3381,
        3423
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8187": {
      "fn": "BaseLoot.loot",
      "offset": [
        3381,
        3423
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8188": {
      "op": "PUSH4",
      "value": "0x30E327EF"
    },
    "8193": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "8195": {
      "op": "SHL"
    },
    "8196": {
      "fn": "BaseLoot.loot",
      "offset": [
        3381,
        3423
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8197": {
      "fn": "BaseLoot.loot",
      "offset": [
        3381,
        3423
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8198": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8200": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8202": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8204": {
      "op": "SHL"
    },
    "8205": {
      "op": "SUB"
    },
    "8206": {
      "fn": "BaseLoot.loot",
      "offset": [
        3381,
        3387
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8207": {
      "fn": "BaseLoot.loot",
      "offset": [
        3381,
        3387
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8208": {
      "fn": "BaseLoot.loot",
      "offset": [
        3381,
        3387
      ],
      "op": "AND",
      "path": "2"
    },
    "8209": {
      "fn": "BaseLoot.loot",
      "offset": [
        3381,
        3387
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8210": {
      "fn": "BaseLoot.loot",
      "offset": [
        3381,
        3401
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xC38C9FBC"
    },
    "8215": {
      "fn": "BaseLoot.loot",
      "offset": [
        3381,
        3401
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8216": {
      "fn": "BaseLoot.loot",
      "offset": [
        3381,
        3423
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2029"
    },
    "8219": {
      "fn": "BaseLoot.loot",
      "offset": [
        3381,
        3423
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8220": {
      "fn": "BaseLoot.loot",
      "offset": [
        3402,
        3407
      ],
      "op": "DUP15",
      "path": "2"
    },
    "8221": {
      "fn": "BaseLoot.loot",
      "offset": [
        3402,
        3407
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8222": {
      "fn": "BaseLoot.loot",
      "offset": [
        3409,
        3413
      ],
      "op": "DUP15",
      "path": "2"
    },
    "8223": {
      "fn": "BaseLoot.loot",
      "offset": [
        3409,
        3413
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8224": {
      "fn": "BaseLoot.loot",
      "offset": [
        3415,
        3422
      ],
      "op": "DUP15",
      "path": "2"
    },
    "8225": {
      "fn": "BaseLoot.loot",
      "offset": [
        3415,
        3422
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8226": {
      "fn": "BaseLoot.loot",
      "offset": [
        3381,
        3423
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "8228": {
      "fn": "BaseLoot.loot",
      "offset": [
        3381,
        3423
      ],
      "op": "ADD",
      "path": "2"
    },
    "8229": {
      "fn": "BaseLoot.loot",
      "offset": [
        3381,
        3423
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4C51"
    },
    "8232": {
      "fn": "BaseLoot.loot",
      "jump": "i",
      "offset": [
        3381,
        3423
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8233": {
      "fn": "BaseLoot.loot",
      "offset": [
        3381,
        3423
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8234": {
      "fn": "BaseLoot.loot",
      "offset": [
        3381,
        3423
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "8236": {
      "fn": "BaseLoot.loot",
      "offset": [
        3381,
        3423
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8238": {
      "fn": "BaseLoot.loot",
      "offset": [
        3381,
        3423
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8239": {
      "fn": "BaseLoot.loot",
      "offset": [
        3381,
        3423
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8240": {
      "fn": "BaseLoot.loot",
      "offset": [
        3381,
        3423
      ],
      "op": "DUP4",
      "path": "2"
    },
    "8241": {
      "fn": "BaseLoot.loot",
      "offset": [
        3381,
        3423
      ],
      "op": "SUB",
      "path": "2"
    },
    "8242": {
      "fn": "BaseLoot.loot",
      "offset": [
        3381,
        3423
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8243": {
      "fn": "BaseLoot.loot",
      "offset": [
        3381,
        3423
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8245": {
      "fn": "BaseLoot.loot",
      "offset": [
        3381,
        3423
      ],
      "op": "DUP8",
      "path": "2"
    },
    "8246": {
      "fn": "BaseLoot.loot",
      "offset": [
        3381,
        3423
      ],
      "op": "GAS",
      "path": "2"
    },
    "8247": {
      "fn": "BaseLoot.loot",
      "offset": [
        3381,
        3423
      ],
      "op": "CALL",
      "path": "2"
    },
    "8248": {
      "fn": "BaseLoot.loot",
      "offset": [
        3381,
        3423
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "8249": {
      "fn": "BaseLoot.loot",
      "offset": [
        3381,
        3423
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8250": {
      "fn": "BaseLoot.loot",
      "offset": [
        3381,
        3423
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "8251": {
      "fn": "BaseLoot.loot",
      "offset": [
        3381,
        3423
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2048"
    },
    "8254": {
      "fn": "BaseLoot.loot",
      "offset": [
        3381,
        3423
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "8255": {
      "fn": "BaseLoot.loot",
      "offset": [
        3381,
        3423
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "8256": {
      "fn": "BaseLoot.loot",
      "offset": [
        3381,
        3423
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8258": {
      "fn": "BaseLoot.loot",
      "offset": [
        3381,
        3423
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8259": {
      "fn": "BaseLoot.loot",
      "offset": [
        3381,
        3423
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "8260": {
      "fn": "BaseLoot.loot",
      "offset": [
        3381,
        3423
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "8261": {
      "fn": "BaseLoot.loot",
      "offset": [
        3381,
        3423
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8263": {
      "fn": "BaseLoot.loot",
      "offset": [
        3381,
        3423
      ],
      "op": "REVERT",
      "path": "2"
    },
    "8264": {
      "fn": "BaseLoot.loot",
      "offset": [
        3381,
        3423
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8265": {
      "fn": "BaseLoot.loot",
      "offset": [
        3381,
        3423
      ],
      "op": "POP",
      "path": "2"
    },
    "8266": {
      "fn": "BaseLoot.loot",
      "offset": [
        3381,
        3423
      ],
      "op": "POP",
      "path": "2"
    },
    "8267": {
      "fn": "BaseLoot.loot",
      "offset": [
        3381,
        3423
      ],
      "op": "POP",
      "path": "2"
    },
    "8268": {
      "fn": "BaseLoot.loot",
      "offset": [
        3381,
        3423
      ],
      "op": "POP",
      "path": "2"
    },
    "8269": {
      "fn": "BaseLoot.loot",
      "offset": [
        3381,
        3423
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8271": {
      "fn": "BaseLoot.loot",
      "offset": [
        3381,
        3423
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8272": {
      "fn": "BaseLoot.loot",
      "offset": [
        3381,
        3423
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "8273": {
      "fn": "BaseLoot.loot",
      "offset": [
        3381,
        3423
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "8275": {
      "fn": "BaseLoot.loot",
      "offset": [
        3381,
        3423
      ],
      "op": "NOT",
      "path": "2"
    },
    "8276": {
      "fn": "BaseLoot.loot",
      "offset": [
        3381,
        3423
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "8278": {
      "fn": "BaseLoot.loot",
      "offset": [
        3381,
        3423
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8279": {
      "fn": "BaseLoot.loot",
      "offset": [
        3381,
        3423
      ],
      "op": "ADD",
      "path": "2"
    },
    "8280": {
      "fn": "BaseLoot.loot",
      "offset": [
        3381,
        3423
      ],
      "op": "AND",
      "path": "2"
    },
    "8281": {
      "fn": "BaseLoot.loot",
      "offset": [
        3381,
        3423
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8282": {
      "fn": "BaseLoot.loot",
      "offset": [
        3381,
        3423
      ],
      "op": "ADD",
      "path": "2"
    },
    "8283": {
      "fn": "BaseLoot.loot",
      "offset": [
        3381,
        3423
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8284": {
      "fn": "BaseLoot.loot",
      "offset": [
        3381,
        3423
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8286": {
      "fn": "BaseLoot.loot",
      "offset": [
        3381,
        3423
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8287": {
      "fn": "BaseLoot.loot",
      "offset": [
        3381,
        3423
      ],
      "op": "POP",
      "path": "2"
    },
    "8288": {
      "fn": "BaseLoot.loot",
      "offset": [
        3381,
        3423
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8289": {
      "fn": "BaseLoot.loot",
      "offset": [
        3381,
        3423
      ],
      "op": "ADD",
      "path": "2"
    },
    "8290": {
      "fn": "BaseLoot.loot",
      "offset": [
        3381,
        3423
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8291": {
      "fn": "BaseLoot.loot",
      "offset": [
        3381,
        3423
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x206C"
    },
    "8294": {
      "fn": "BaseLoot.loot",
      "offset": [
        3381,
        3423
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8295": {
      "fn": "BaseLoot.loot",
      "offset": [
        3381,
        3423
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8296": {
      "fn": "BaseLoot.loot",
      "offset": [
        3381,
        3423
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4E24"
    },
    "8299": {
      "fn": "BaseLoot.loot",
      "jump": "i",
      "offset": [
        3381,
        3423
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8300": {
      "fn": "BaseLoot.loot",
      "offset": [
        3381,
        3423
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8301": {
      "fn": "BaseLoot.loot",
      "offset": [
        3374,
        3423
      ],
      "op": "SWAP12",
      "path": "2"
    },
    "8302": {
      "fn": "BaseLoot.loot",
      "offset": [
        2204,
        3427
      ],
      "op": "SWAP11",
      "path": "2"
    },
    "8303": {
      "op": "POP"
    },
    "8304": {
      "op": "POP"
    },
    "8305": {
      "op": "POP"
    },
    "8306": {
      "op": "POP"
    },
    "8307": {
      "op": "POP"
    },
    "8308": {
      "op": "POP"
    },
    "8309": {
      "op": "POP"
    },
    "8310": {
      "op": "POP"
    },
    "8311": {
      "op": "POP"
    },
    "8312": {
      "op": "POP"
    },
    "8313": {
      "op": "POP"
    },
    "8314": {
      "fn": "BaseLoot.loot",
      "jump": "o",
      "offset": [
        2204,
        3427
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8315": {
      "fn": "ERC1155BurnableUpgradeable.burnBatch",
      "offset": [
        994,
        1347
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "8316": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8318": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8320": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8322": {
      "op": "SHL"
    },
    "8323": {
      "op": "SUB"
    },
    "8324": {
      "fn": "ERC1155BurnableUpgradeable.burnBatch",
      "offset": [
        1159,
        1182
      ],
      "op": "DUP4",
      "path": "35",
      "statement": 57
    },
    "8325": {
      "fn": "ERC1155BurnableUpgradeable.burnBatch",
      "offset": [
        1159,
        1182
      ],
      "op": "AND",
      "path": "35"
    },
    "8326": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        952,
        962
      ],
      "op": "CALLER",
      "path": "42"
    },
    "8327": {
      "fn": "ERC1155BurnableUpgradeable.burnBatch",
      "offset": [
        1159,
        1182
      ],
      "op": "EQ",
      "path": "35"
    },
    "8328": {
      "branch": 217,
      "fn": "ERC1155BurnableUpgradeable.burnBatch",
      "offset": [
        1159,
        1182
      ],
      "op": "DUP1",
      "path": "35"
    },
    "8329": {
      "fn": "ERC1155BurnableUpgradeable.burnBatch",
      "offset": [
        1159,
        1225
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x2097"
    },
    "8332": {
      "branch": 217,
      "fn": "ERC1155BurnableUpgradeable.burnBatch",
      "offset": [
        1159,
        1225
      ],
      "op": "JUMPI",
      "path": "35"
    },
    "8333": {
      "op": "POP"
    },
    "8334": {
      "fn": "ERC1155BurnableUpgradeable.burnBatch",
      "offset": [
        1186,
        1225
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x2097"
    },
    "8337": {
      "fn": "ERC1155BurnableUpgradeable.burnBatch",
      "offset": [
        1203,
        1210
      ],
      "op": "DUP4",
      "path": "35"
    },
    "8338": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        952,
        962
      ],
      "op": "CALLER",
      "path": "42"
    },
    "8339": {
      "fn": "ERC1155Upgradeable.isApprovedForAll",
      "offset": [
        3873,
        4041
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x539"
    },
    "8342": {
      "fn": "ERC1155Upgradeable.isApprovedForAll",
      "jump": "i",
      "offset": [
        3873,
        4041
      ],
      "op": "JUMP",
      "path": "32"
    },
    "8343": {
      "branch": 218,
      "fn": "ERC1155BurnableUpgradeable.burnBatch",
      "offset": [
        1186,
        1225
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "8344": {
      "fn": "ERC1155BurnableUpgradeable.burnBatch",
      "offset": [
        1137,
        1294
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x20B3"
    },
    "8347": {
      "branch": 218,
      "fn": "ERC1155BurnableUpgradeable.burnBatch",
      "offset": [
        1137,
        1294
      ],
      "op": "JUMPI",
      "path": "35"
    },
    "8348": {
      "fn": "ERC1155BurnableUpgradeable.burnBatch",
      "offset": [
        1137,
        1294
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x40"
    },
    "8350": {
      "fn": "ERC1155BurnableUpgradeable.burnBatch",
      "offset": [
        1137,
        1294
      ],
      "op": "MLOAD",
      "path": "35"
    },
    "8351": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8355": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8357": {
      "op": "SHL"
    },
    "8358": {
      "fn": "ERC1155BurnableUpgradeable.burnBatch",
      "offset": [
        1137,
        1294
      ],
      "op": "DUP2",
      "path": "35"
    },
    "8359": {
      "fn": "ERC1155BurnableUpgradeable.burnBatch",
      "offset": [
        1137,
        1294
      ],
      "op": "MSTORE",
      "path": "35"
    },
    "8360": {
      "fn": "ERC1155BurnableUpgradeable.burnBatch",
      "offset": [
        1137,
        1294
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x4"
    },
    "8362": {
      "fn": "ERC1155BurnableUpgradeable.burnBatch",
      "offset": [
        1137,
        1294
      ],
      "op": "ADD",
      "path": "35"
    },
    "8363": {
      "fn": "ERC1155BurnableUpgradeable.burnBatch",
      "offset": [
        1137,
        1294
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x60F"
    },
    "8366": {
      "fn": "ERC1155BurnableUpgradeable.burnBatch",
      "offset": [
        1137,
        1294
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "8367": {
      "fn": "ERC1155BurnableUpgradeable.burnBatch",
      "offset": [
        1137,
        1294
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x4E3D"
    },
    "8370": {
      "fn": "ERC1155BurnableUpgradeable.burnBatch",
      "jump": "i",
      "offset": [
        1137,
        1294
      ],
      "op": "JUMP",
      "path": "35"
    },
    "8371": {
      "fn": "ERC1155BurnableUpgradeable.burnBatch",
      "offset": [
        1137,
        1294
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "8372": {
      "fn": "ERC1155BurnableUpgradeable.burnBatch",
      "offset": [
        1307,
        1339
      ],
      "op": "PUSH2",
      "path": "35",
      "statement": 58,
      "value": "0xD19"
    },
    "8375": {
      "fn": "ERC1155BurnableUpgradeable.burnBatch",
      "offset": [
        1318,
        1325
      ],
      "op": "DUP4",
      "path": "35"
    },
    "8376": {
      "fn": "ERC1155BurnableUpgradeable.burnBatch",
      "offset": [
        1327,
        1330
      ],
      "op": "DUP4",
      "path": "35"
    },
    "8377": {
      "fn": "ERC1155BurnableUpgradeable.burnBatch",
      "offset": [
        1332,
        1338
      ],
      "op": "DUP4",
      "path": "35"
    },
    "8378": {
      "fn": "ERC1155BurnableUpgradeable.burnBatch",
      "offset": [
        1307,
        1317
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x3D8B"
    },
    "8381": {
      "fn": "ERC1155BurnableUpgradeable.burnBatch",
      "jump": "i",
      "offset": [
        1307,
        1339
      ],
      "op": "JUMP",
      "path": "35"
    },
    "8382": {
      "fn": "BaseLoot.setAddon",
      "offset": [
        1019,
        1200
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8383": {
      "fn": "BaseLoot.setAddon",
      "offset": [
        1113,
        1116
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 59,
      "value": "0xFB"
    },
    "8385": {
      "fn": "BaseLoot.setAddon",
      "offset": [
        1113,
        1116
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8386": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8388": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8390": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8392": {
      "op": "SHL"
    },
    "8393": {
      "op": "SUB"
    },
    "8394": {
      "fn": "BaseLoot.setAddon",
      "offset": [
        1113,
        1116
      ],
      "op": "AND",
      "path": "2"
    },
    "8395": {
      "fn": "BaseLoot.setAddon",
      "offset": [
        1099,
        1109
      ],
      "op": "CALLER",
      "path": "2"
    },
    "8396": {
      "branch": 187,
      "fn": "BaseLoot.setAddon",
      "offset": [
        1099,
        1116
      ],
      "op": "EQ",
      "path": "2"
    },
    "8397": {
      "fn": "BaseLoot.setAddon",
      "offset": [
        1091,
        1147
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2118"
    },
    "8400": {
      "branch": 187,
      "fn": "BaseLoot.setAddon",
      "offset": [
        1091,
        1147
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "8401": {
      "fn": "BaseLoot.setAddon",
      "offset": [
        1091,
        1147
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8403": {
      "fn": "BaseLoot.setAddon",
      "offset": [
        1091,
        1147
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8404": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8408": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8410": {
      "op": "SHL"
    },
    "8411": {
      "fn": "BaseLoot.setAddon",
      "offset": [
        1091,
        1147
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8412": {
      "fn": "BaseLoot.setAddon",
      "offset": [
        1091,
        1147
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8413": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8415": {
      "fn": "BaseLoot.setAddon",
      "offset": [
        1091,
        1147
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "8417": {
      "fn": "BaseLoot.setAddon",
      "offset": [
        1091,
        1147
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8418": {
      "fn": "BaseLoot.setAddon",
      "offset": [
        1091,
        1147
      ],
      "op": "ADD",
      "path": "2"
    },
    "8419": {
      "op": "MSTORE"
    },
    "8420": {
      "op": "PUSH1",
      "value": "0x1A"
    },
    "8422": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8424": {
      "op": "DUP3"
    },
    "8425": {
      "op": "ADD"
    },
    "8426": {
      "op": "MSTORE"
    },
    "8427": {
      "op": "PUSH32",
      "value": "0x4F6E6C792061646D696E73206D617920736574206164646F6E2E000000000000"
    },
    "8460": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8462": {
      "op": "DUP3"
    },
    "8463": {
      "op": "ADD"
    },
    "8464": {
      "op": "MSTORE"
    },
    "8465": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8467": {
      "op": "ADD"
    },
    "8468": {
      "fn": "BaseLoot.setAddon",
      "offset": [
        1091,
        1147
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x60F"
    },
    "8471": {
      "op": "JUMP"
    },
    "8472": {
      "fn": "BaseLoot.setAddon",
      "offset": [
        1091,
        1147
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8473": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8475": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8477": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8479": {
      "op": "SHL"
    },
    "8480": {
      "op": "SUB"
    },
    "8481": {
      "fn": "BaseLoot.setAddon",
      "offset": [
        1165,
        1180
      ],
      "op": "SWAP2",
      "path": "2",
      "statement": 60
    },
    "8482": {
      "fn": "BaseLoot.setAddon",
      "offset": [
        1165,
        1180
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8483": {
      "fn": "BaseLoot.setAddon",
      "offset": [
        1165,
        1180
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8484": {
      "fn": "BaseLoot.setAddon",
      "offset": [
        1165,
        1180
      ],
      "op": "AND",
      "path": "2"
    },
    "8485": {
      "fn": "BaseLoot.setAddon",
      "offset": [
        1165,
        1180
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8487": {
      "fn": "BaseLoot.setAddon",
      "offset": [
        1165,
        1180
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8488": {
      "fn": "BaseLoot.setAddon",
      "offset": [
        1165,
        1180
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8489": {
      "fn": "BaseLoot.setAddon",
      "offset": [
        1165,
        1180
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8490": {
      "fn": "BaseLoot.setAddon",
      "offset": [
        1165,
        1172
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "8493": {
      "fn": "BaseLoot.setAddon",
      "offset": [
        1165,
        1180
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "8495": {
      "fn": "BaseLoot.setAddon",
      "offset": [
        1165,
        1180
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8496": {
      "fn": "BaseLoot.setAddon",
      "offset": [
        1165,
        1180
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8498": {
      "fn": "BaseLoot.setAddon",
      "offset": [
        1165,
        1180
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8499": {
      "fn": "BaseLoot.setAddon",
      "offset": [
        1165,
        1180
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "8500": {
      "fn": "BaseLoot.setAddon",
      "offset": [
        1165,
        1189
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8501": {
      "fn": "BaseLoot.setAddon",
      "offset": [
        1165,
        1189
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8502": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "8504": {
      "op": "NOT"
    },
    "8505": {
      "fn": "BaseLoot.setAddon",
      "offset": [
        1165,
        1189
      ],
      "op": "AND",
      "path": "2"
    },
    "8506": {
      "fn": "BaseLoot.setAddon",
      "offset": [
        1165,
        1189
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8507": {
      "fn": "BaseLoot.setAddon",
      "offset": [
        1165,
        1189
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "8508": {
      "fn": "BaseLoot.setAddon",
      "offset": [
        1165,
        1189
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "8509": {
      "fn": "BaseLoot.setAddon",
      "offset": [
        1165,
        1189
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8510": {
      "fn": "BaseLoot.setAddon",
      "offset": [
        1165,
        1189
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8511": {
      "fn": "BaseLoot.setAddon",
      "offset": [
        1165,
        1189
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8512": {
      "fn": "BaseLoot.setAddon",
      "offset": [
        1165,
        1189
      ],
      "op": "OR",
      "path": "2"
    },
    "8513": {
      "fn": "BaseLoot.setAddon",
      "offset": [
        1165,
        1189
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8514": {
      "fn": "BaseLoot.setAddon",
      "offset": [
        1165,
        1189
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "8515": {
      "fn": "BaseLoot.setAddon",
      "jump": "o",
      "offset": [
        1019,
        1200
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8516": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5563,
        5916
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8517": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5682,
        5700
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 61,
      "value": "0x40"
    },
    "8519": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5682,
        5700
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8520": {
      "op": "PUSH4",
      "value": "0x31A9108F"
    },
    "8525": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "8527": {
      "op": "SHL"
    },
    "8528": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5682,
        5700
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8529": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5682,
        5700
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8530": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5682,
        5700
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "8532": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5682,
        5700
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8533": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5682,
        5700
      ],
      "op": "ADD",
      "path": "2"
    },
    "8534": {
      "op": "DUP3"
    },
    "8535": {
      "op": "SWAP1"
    },
    "8536": {
      "op": "MSTORE"
    },
    "8537": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5650,
        5655
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8538": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5650,
        5655
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8539": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5704,
        5714
      ],
      "op": "CALLER",
      "path": "2"
    },
    "8540": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5704,
        5714
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8541": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8543": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8545": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8547": {
      "op": "SHL"
    },
    "8548": {
      "op": "SUB"
    },
    "8549": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5682,
        5694
      ],
      "op": "DUP4",
      "path": "2"
    },
    "8550": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5682,
        5694
      ],
      "op": "AND",
      "path": "2"
    },
    "8551": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5682,
        5694
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8552": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5682,
        5694
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x6352211E"
    },
    "8557": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5682,
        5694
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8558": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8560": {
      "op": "ADD"
    },
    "8561": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5682,
        5700
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "8563": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5682,
        5700
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8565": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5682,
        5700
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8566": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5682,
        5700
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8567": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5682,
        5700
      ],
      "op": "DUP4",
      "path": "2"
    },
    "8568": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5682,
        5700
      ],
      "op": "SUB",
      "path": "2"
    },
    "8569": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5682,
        5700
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8570": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5682,
        5700
      ],
      "op": "DUP7",
      "path": "2"
    },
    "8571": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5682,
        5700
      ],
      "op": "GAS",
      "path": "2"
    },
    "8572": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5682,
        5700
      ],
      "op": "STATICCALL",
      "path": "2"
    },
    "8573": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5682,
        5700
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "8574": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5682,
        5700
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8575": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5682,
        5700
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "8576": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5682,
        5700
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x218D"
    },
    "8579": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5682,
        5700
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "8580": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5682,
        5700
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "8581": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5682,
        5700
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8583": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5682,
        5700
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8584": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5682,
        5700
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "8585": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5682,
        5700
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "8586": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5682,
        5700
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8588": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5682,
        5700
      ],
      "op": "REVERT",
      "path": "2"
    },
    "8589": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5682,
        5700
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8590": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5682,
        5700
      ],
      "op": "POP",
      "path": "2"
    },
    "8591": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5682,
        5700
      ],
      "op": "POP",
      "path": "2"
    },
    "8592": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5682,
        5700
      ],
      "op": "POP",
      "path": "2"
    },
    "8593": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5682,
        5700
      ],
      "op": "POP",
      "path": "2"
    },
    "8594": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5682,
        5700
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8596": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5682,
        5700
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8597": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5682,
        5700
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "8598": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5682,
        5700
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "8600": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5682,
        5700
      ],
      "op": "NOT",
      "path": "2"
    },
    "8601": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5682,
        5700
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "8603": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5682,
        5700
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8604": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5682,
        5700
      ],
      "op": "ADD",
      "path": "2"
    },
    "8605": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5682,
        5700
      ],
      "op": "AND",
      "path": "2"
    },
    "8606": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5682,
        5700
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8607": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5682,
        5700
      ],
      "op": "ADD",
      "path": "2"
    },
    "8608": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5682,
        5700
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8609": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5682,
        5700
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8611": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5682,
        5700
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8612": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5682,
        5700
      ],
      "op": "POP",
      "path": "2"
    },
    "8613": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5682,
        5700
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8614": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5682,
        5700
      ],
      "op": "ADD",
      "path": "2"
    },
    "8615": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5682,
        5700
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8616": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5682,
        5700
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x21B1"
    },
    "8619": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5682,
        5700
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8620": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5682,
        5700
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8621": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5682,
        5700
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4C0C"
    },
    "8624": {
      "fn": "BaseLoot.castIS",
      "jump": "i",
      "offset": [
        5682,
        5700
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8625": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5682,
        5700
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8626": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8628": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8630": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8632": {
      "op": "SHL"
    },
    "8633": {
      "op": "SUB"
    },
    "8634": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5682,
        5714
      ],
      "op": "AND",
      "path": "2"
    },
    "8635": {
      "branch": 188,
      "fn": "BaseLoot.castIS",
      "offset": [
        5682,
        5714
      ],
      "op": "EQ",
      "path": "2"
    },
    "8636": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5682,
        5737
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8637": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5682,
        5737
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x21D6"
    },
    "8640": {
      "branch": 188,
      "fn": "BaseLoot.castIS",
      "offset": [
        5682,
        5737
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "8641": {
      "op": "POP"
    },
    "8642": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5726,
        5736
      ],
      "op": "CALLER",
      "path": "2"
    },
    "8643": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5718,
        5737
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8645": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5718,
        5737
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8646": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5718,
        5737
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8647": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5718,
        5737
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8648": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5718,
        5725
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "8651": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5718,
        5737
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "8653": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5718,
        5737
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8654": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5718,
        5737
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8656": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5718,
        5737
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8657": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5718,
        5737
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "8658": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5718,
        5737
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8659": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5718,
        5737
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "8661": {
      "branch": 189,
      "fn": "BaseLoot.castIS",
      "offset": [
        5718,
        5737
      ],
      "op": "AND",
      "path": "2"
    },
    "8662": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5682,
        5737
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8663": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5674,
        5760
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x21F2"
    },
    "8666": {
      "branch": 189,
      "fn": "BaseLoot.castIS",
      "offset": [
        5674,
        5760
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "8667": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5674,
        5760
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8669": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5674,
        5760
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8670": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8674": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8676": {
      "op": "SHL"
    },
    "8677": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5674,
        5760
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8678": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5674,
        5760
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8679": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5674,
        5760
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "8681": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5674,
        5760
      ],
      "op": "ADD",
      "path": "2"
    },
    "8682": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5674,
        5760
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x60F"
    },
    "8685": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5674,
        5760
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8686": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5674,
        5760
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4C72"
    },
    "8689": {
      "fn": "BaseLoot.castIS",
      "jump": "i",
      "offset": [
        5674,
        5760
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8690": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5674,
        5760
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8691": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5786,
        5815
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 62,
      "value": "0x40"
    },
    "8693": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5786,
        5815
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8694": {
      "op": "PUSH4",
      "value": "0x6BFC324F"
    },
    "8699": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8701": {
      "op": "SHL"
    },
    "8702": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5786,
        5815
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8703": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5786,
        5815
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8704": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5786,
        5815
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "8706": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5786,
        5815
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8707": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5786,
        5815
      ],
      "op": "ADD",
      "path": "2"
    },
    "8708": {
      "op": "DUP4"
    },
    "8709": {
      "op": "SWAP1"
    },
    "8710": {
      "op": "MSTORE"
    },
    "8711": {
      "offset": [
        2354,
        2356
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4B"
    },
    "8713": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8715": {
      "op": "DUP3"
    },
    "8716": {
      "op": "ADD"
    },
    "8717": {
      "op": "MSTORE"
    },
    "8718": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8720": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8722": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8724": {
      "op": "SHL"
    },
    "8725": {
      "op": "SUB"
    },
    "8726": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5786,
        5798
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8727": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5786,
        5798
      ],
      "op": "AND",
      "path": "2"
    },
    "8728": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5786,
        5798
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8729": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5786,
        5798
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x6BFC324F"
    },
    "8734": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5786,
        5798
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8735": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8737": {
      "op": "ADD"
    },
    "8738": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5786,
        5815
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "8740": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5786,
        5815
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8742": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5786,
        5815
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8743": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5786,
        5815
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8744": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5786,
        5815
      ],
      "op": "DUP4",
      "path": "2"
    },
    "8745": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5786,
        5815
      ],
      "op": "SUB",
      "path": "2"
    },
    "8746": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5786,
        5815
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8747": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5786,
        5815
      ],
      "op": "DUP7",
      "path": "2"
    },
    "8748": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5786,
        5815
      ],
      "op": "GAS",
      "path": "2"
    },
    "8749": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5786,
        5815
      ],
      "op": "STATICCALL",
      "path": "2"
    },
    "8750": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5786,
        5815
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "8751": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5786,
        5815
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8752": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5786,
        5815
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "8753": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5786,
        5815
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x223E"
    },
    "8756": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5786,
        5815
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "8757": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5786,
        5815
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "8758": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5786,
        5815
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8760": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5786,
        5815
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8761": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5786,
        5815
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "8762": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5786,
        5815
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "8763": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5786,
        5815
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8765": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5786,
        5815
      ],
      "op": "REVERT",
      "path": "2"
    },
    "8766": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5786,
        5815
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8767": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5786,
        5815
      ],
      "op": "POP",
      "path": "2"
    },
    "8768": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5786,
        5815
      ],
      "op": "POP",
      "path": "2"
    },
    "8769": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5786,
        5815
      ],
      "op": "POP",
      "path": "2"
    },
    "8770": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5786,
        5815
      ],
      "op": "POP",
      "path": "2"
    },
    "8771": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5786,
        5815
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8773": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5786,
        5815
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8774": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5786,
        5815
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "8775": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5786,
        5815
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "8777": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5786,
        5815
      ],
      "op": "NOT",
      "path": "2"
    },
    "8778": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5786,
        5815
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "8780": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5786,
        5815
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8781": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5786,
        5815
      ],
      "op": "ADD",
      "path": "2"
    },
    "8782": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5786,
        5815
      ],
      "op": "AND",
      "path": "2"
    },
    "8783": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5786,
        5815
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8784": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5786,
        5815
      ],
      "op": "ADD",
      "path": "2"
    },
    "8785": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5786,
        5815
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8786": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5786,
        5815
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8788": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5786,
        5815
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8789": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5786,
        5815
      ],
      "op": "POP",
      "path": "2"
    },
    "8790": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5786,
        5815
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8791": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5786,
        5815
      ],
      "op": "ADD",
      "path": "2"
    },
    "8792": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5786,
        5815
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8793": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5786,
        5815
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2262"
    },
    "8796": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5786,
        5815
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8797": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5786,
        5815
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8798": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5786,
        5815
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4BCC"
    },
    "8801": {
      "fn": "BaseLoot.castIS",
      "jump": "i",
      "offset": [
        5786,
        5815
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8802": {
      "branch": 190,
      "fn": "BaseLoot.castIS",
      "offset": [
        5786,
        5815
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8803": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5778,
        5846
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x22AE"
    },
    "8806": {
      "branch": 190,
      "fn": "BaseLoot.castIS",
      "offset": [
        5778,
        5846
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "8807": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5778,
        5846
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8809": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5778,
        5846
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8810": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8814": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8816": {
      "op": "SHL"
    },
    "8817": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5778,
        5846
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8818": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5778,
        5846
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8819": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8821": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5778,
        5846
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "8823": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5778,
        5846
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8824": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5778,
        5846
      ],
      "op": "ADD",
      "path": "2"
    },
    "8825": {
      "op": "MSTORE"
    },
    "8826": {
      "op": "PUSH1",
      "value": "0x1A"
    },
    "8828": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8830": {
      "op": "DUP3"
    },
    "8831": {
      "op": "ADD"
    },
    "8832": {
      "op": "MSTORE"
    },
    "8833": {
      "op": "PUSH32",
      "value": "0x4865726F2063616E277420636173742069726F6E20736B696E2E000000000000"
    },
    "8866": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8868": {
      "op": "DUP3"
    },
    "8869": {
      "op": "ADD"
    },
    "8870": {
      "op": "MSTORE"
    },
    "8871": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8873": {
      "op": "ADD"
    },
    "8874": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5778,
        5846
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x60F"
    },
    "8877": {
      "op": "JUMP"
    },
    "8878": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5778,
        5846
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8879": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5865,
        5871
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 63,
      "value": "0xFE"
    },
    "8881": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5865,
        5871
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8882": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5865,
        5905
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8884": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5865,
        5905
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8885": {
      "op": "PUSH4",
      "value": "0x422F683"
    },
    "8890": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "8892": {
      "op": "SHL"
    },
    "8893": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5865,
        5905
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8894": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5865,
        5905
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8895": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8897": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8899": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8901": {
      "op": "SHL"
    },
    "8902": {
      "op": "SUB"
    },
    "8903": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5865,
        5871
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8904": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5865,
        5871
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8905": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5865,
        5871
      ],
      "op": "AND",
      "path": "2"
    },
    "8906": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5865,
        5871
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8907": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5865,
        5878
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x108BDA0C"
    },
    "8912": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5865,
        5878
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8913": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5865,
        5905
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x22E6"
    },
    "8916": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5865,
        5905
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8917": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5879,
        5884
      ],
      "op": "DUP7",
      "path": "2"
    },
    "8918": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5879,
        5884
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8919": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5886,
        5890
      ],
      "op": "DUP7",
      "path": "2"
    },
    "8920": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5886,
        5890
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8921": {
      "offset": [
        2354,
        2356
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4B"
    },
    "8923": {
      "fn": "BaseLoot.castIS",
      "offset": [
        2354,
        2356
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "8924": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5865,
        5871
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "8926": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5865,
        5871
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8927": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5865,
        5905
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "8929": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5865,
        5905
      ],
      "op": "ADD",
      "path": "2"
    },
    "8930": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5865,
        5905
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4DFE"
    },
    "8933": {
      "fn": "BaseLoot.castIS",
      "jump": "i",
      "offset": [
        5865,
        5905
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8934": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5865,
        5905
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8935": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5865,
        5905
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8937": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5865,
        5905
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8939": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5865,
        5905
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8940": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5865,
        5905
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8941": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5865,
        5905
      ],
      "op": "DUP4",
      "path": "2"
    },
    "8942": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5865,
        5905
      ],
      "op": "SUB",
      "path": "2"
    },
    "8943": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5865,
        5905
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8944": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5865,
        5905
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8946": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5865,
        5905
      ],
      "op": "DUP8",
      "path": "2"
    },
    "8947": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5865,
        5905
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8948": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5865,
        5905
      ],
      "op": "EXTCODESIZE",
      "path": "2"
    },
    "8949": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5865,
        5905
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "8950": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5865,
        5905
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8951": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5865,
        5905
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "8952": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5865,
        5905
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2300"
    },
    "8955": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5865,
        5905
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "8956": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5865,
        5905
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8958": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5865,
        5905
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8959": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5865,
        5905
      ],
      "op": "REVERT",
      "path": "2"
    },
    "8960": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5865,
        5905
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8961": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5865,
        5905
      ],
      "op": "POP",
      "path": "2"
    },
    "8962": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5865,
        5905
      ],
      "op": "GAS",
      "path": "2"
    },
    "8963": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5865,
        5905
      ],
      "op": "CALL",
      "path": "2"
    },
    "8964": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5865,
        5905
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "8965": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5865,
        5905
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8966": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5865,
        5905
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "8967": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5865,
        5905
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2314"
    },
    "8970": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5865,
        5905
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "8971": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5865,
        5905
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "8972": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5865,
        5905
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8974": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5865,
        5905
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8975": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5865,
        5905
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "8976": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5865,
        5905
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "8977": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5865,
        5905
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8979": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5865,
        5905
      ],
      "op": "REVERT",
      "path": "2"
    },
    "8980": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5865,
        5905
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8981": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5865,
        5905
      ],
      "op": "POP",
      "path": "2"
    },
    "8982": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5865,
        5905
      ],
      "op": "POP",
      "path": "2"
    },
    "8983": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5865,
        5905
      ],
      "op": "POP",
      "path": "2"
    },
    "8984": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5865,
        5905
      ],
      "op": "POP",
      "path": "2"
    },
    "8985": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5615,
        5916
      ],
      "op": "POP",
      "path": "2"
    },
    "8986": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5563,
        5916
      ],
      "op": "POP",
      "path": "2"
    },
    "8987": {
      "fn": "BaseLoot.castIS",
      "offset": [
        5563,
        5916
      ],
      "op": "POP",
      "path": "2"
    },
    "8988": {
      "fn": "BaseLoot.castIS",
      "jump": "o",
      "offset": [
        5563,
        5916
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8989": {
      "fn": "BaseLoot.lootTo",
      "offset": [
        1846,
        2029
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8990": {
      "fn": "BaseLoot.lootTo",
      "offset": [
        1941,
        1944
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 64,
      "value": "0xFB"
    },
    "8992": {
      "fn": "BaseLoot.lootTo",
      "offset": [
        1941,
        1944
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8993": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8995": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8997": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8999": {
      "op": "SHL"
    },
    "9000": {
      "op": "SUB"
    },
    "9001": {
      "fn": "BaseLoot.lootTo",
      "offset": [
        1941,
        1944
      ],
      "op": "AND",
      "path": "2"
    },
    "9002": {
      "fn": "BaseLoot.lootTo",
      "offset": [
        1948,
        1958
      ],
      "op": "CALLER",
      "path": "2"
    },
    "9003": {
      "fn": "BaseLoot.lootTo",
      "offset": [
        1941,
        1958
      ],
      "op": "EQ",
      "path": "2"
    },
    "9004": {
      "branch": 191,
      "fn": "BaseLoot.lootTo",
      "offset": [
        1941,
        1958
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9005": {
      "fn": "BaseLoot.lootTo",
      "offset": [
        1941,
        1981
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2346"
    },
    "9008": {
      "branch": 191,
      "fn": "BaseLoot.lootTo",
      "offset": [
        1941,
        1981
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "9009": {
      "op": "POP"
    },
    "9010": {
      "fn": "BaseLoot.lootTo",
      "offset": [
        1970,
        1980
      ],
      "op": "CALLER",
      "path": "2"
    },
    "9011": {
      "fn": "BaseLoot.lootTo",
      "offset": [
        1962,
        1981
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "9013": {
      "fn": "BaseLoot.lootTo",
      "offset": [
        1962,
        1981
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9014": {
      "fn": "BaseLoot.lootTo",
      "offset": [
        1962,
        1981
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9015": {
      "fn": "BaseLoot.lootTo",
      "offset": [
        1962,
        1981
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9016": {
      "fn": "BaseLoot.lootTo",
      "offset": [
        1962,
        1969
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "9019": {
      "fn": "BaseLoot.lootTo",
      "offset": [
        1962,
        1981
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "9021": {
      "fn": "BaseLoot.lootTo",
      "offset": [
        1962,
        1981
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9022": {
      "fn": "BaseLoot.lootTo",
      "offset": [
        1962,
        1981
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9024": {
      "fn": "BaseLoot.lootTo",
      "offset": [
        1962,
        1981
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9025": {
      "fn": "BaseLoot.lootTo",
      "offset": [
        1962,
        1981
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "9026": {
      "fn": "BaseLoot.lootTo",
      "offset": [
        1962,
        1981
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "9027": {
      "fn": "BaseLoot.lootTo",
      "offset": [
        1962,
        1981
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "9029": {
      "branch": 192,
      "fn": "BaseLoot.lootTo",
      "offset": [
        1962,
        1981
      ],
      "op": "AND",
      "path": "2"
    },
    "9030": {
      "fn": "BaseLoot.lootTo",
      "offset": [
        1941,
        1981
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9031": {
      "fn": "BaseLoot.lootTo",
      "offset": [
        1933,
        1992
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x237B"
    },
    "9034": {
      "branch": 192,
      "fn": "BaseLoot.lootTo",
      "offset": [
        1933,
        1992
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "9035": {
      "fn": "BaseLoot.lootTo",
      "offset": [
        1933,
        1992
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9037": {
      "fn": "BaseLoot.lootTo",
      "offset": [
        1933,
        1992
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9038": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9042": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9044": {
      "op": "SHL"
    },
    "9045": {
      "fn": "BaseLoot.lootTo",
      "offset": [
        1933,
        1992
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9046": {
      "fn": "BaseLoot.lootTo",
      "offset": [
        1933,
        1992
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9047": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9049": {
      "fn": "BaseLoot.lootTo",
      "offset": [
        1933,
        1992
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "9051": {
      "fn": "BaseLoot.lootTo",
      "offset": [
        1933,
        1992
      ],
      "op": "DUP3",
      "path": "2"
    },
    "9052": {
      "fn": "BaseLoot.lootTo",
      "offset": [
        1933,
        1992
      ],
      "op": "ADD",
      "path": "2"
    },
    "9053": {
      "op": "MSTORE"
    },
    "9054": {
      "op": "PUSH1",
      "value": "0x6"
    },
    "9056": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9058": {
      "op": "DUP3"
    },
    "9059": {
      "op": "ADD"
    },
    "9060": {
      "op": "MSTORE"
    },
    "9061": {
      "op": "PUSH6",
      "value": "0x6C6F6F74546F"
    },
    "9068": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "9070": {
      "op": "SHL"
    },
    "9071": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9073": {
      "op": "DUP3"
    },
    "9074": {
      "op": "ADD"
    },
    "9075": {
      "op": "MSTORE"
    },
    "9076": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9078": {
      "op": "ADD"
    },
    "9079": {
      "fn": "BaseLoot.lootTo",
      "offset": [
        1933,
        1992
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x60F"
    },
    "9082": {
      "op": "JUMP"
    },
    "9083": {
      "fn": "BaseLoot.lootTo",
      "offset": [
        1933,
        1992
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9084": {
      "fn": "BaseLoot.lootTo",
      "offset": [
        1996,
        2025
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 65,
      "value": "0x23A4"
    },
    "9087": {
      "fn": "BaseLoot.lootTo",
      "offset": [
        2002,
        2007
      ],
      "op": "DUP5",
      "path": "2"
    },
    "9088": {
      "fn": "BaseLoot.lootTo",
      "offset": [
        2009,
        2013
      ],
      "op": "DUP5",
      "path": "2"
    },
    "9089": {
      "fn": "BaseLoot.lootTo",
      "offset": [
        2015,
        2016
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "9091": {
      "fn": "BaseLoot.lootTo",
      "offset": [
        1996,
        2025
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9093": {
      "fn": "BaseLoot.lootTo",
      "offset": [
        1996,
        2025
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9094": {
      "fn": "BaseLoot.lootTo",
      "offset": [
        1996,
        2025
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9095": {
      "fn": "BaseLoot.lootTo",
      "offset": [
        1996,
        2025
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9097": {
      "fn": "BaseLoot.lootTo",
      "offset": [
        1996,
        2025
      ],
      "op": "ADD",
      "path": "2"
    },
    "9098": {
      "fn": "BaseLoot.lootTo",
      "offset": [
        1996,
        2025
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9100": {
      "fn": "BaseLoot.lootTo",
      "offset": [
        1996,
        2025
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9101": {
      "fn": "BaseLoot.lootTo",
      "offset": [
        1996,
        2025
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9102": {
      "fn": "BaseLoot.lootTo",
      "offset": [
        1996,
        2025
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "9104": {
      "fn": "BaseLoot.lootTo",
      "offset": [
        1996,
        2025
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9105": {
      "fn": "BaseLoot.lootTo",
      "offset": [
        1996,
        2025
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9106": {
      "fn": "BaseLoot.lootTo",
      "offset": [
        1996,
        2025
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "9108": {
      "fn": "BaseLoot.lootTo",
      "offset": [
        1996,
        2025
      ],
      "op": "ADD",
      "path": "2"
    },
    "9109": {
      "op": "PUSH4",
      "value": "0x1B1BDBDD"
    },
    "9114": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "9116": {
      "op": "SHL"
    },
    "9117": {
      "fn": "BaseLoot.lootTo",
      "offset": [
        1996,
        2025
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9118": {
      "fn": "BaseLoot.lootTo",
      "offset": [
        1996,
        2025
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9119": {
      "fn": "BaseLoot.lootTo",
      "offset": [
        1996,
        2025
      ],
      "op": "POP",
      "path": "2"
    },
    "9120": {
      "fn": "BaseLoot.lootTo",
      "offset": [
        1996,
        2001
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3C90"
    },
    "9123": {
      "fn": "BaseLoot.lootTo",
      "jump": "i",
      "offset": [
        1996,
        2025
      ],
      "op": "JUMP",
      "path": "2"
    },
    "9124": {
      "fn": "BaseLoot.lootTo",
      "offset": [
        1996,
        2025
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9125": {
      "fn": "BaseLoot.lootTo",
      "offset": [
        1846,
        2029
      ],
      "op": "POP",
      "path": "2"
    },
    "9126": {
      "fn": "BaseLoot.lootTo",
      "offset": [
        1846,
        2029
      ],
      "op": "POP",
      "path": "2"
    },
    "9127": {
      "fn": "BaseLoot.lootTo",
      "offset": [
        1846,
        2029
      ],
      "op": "POP",
      "path": "2"
    },
    "9128": {
      "fn": "BaseLoot.lootTo",
      "offset": [
        1846,
        2029
      ],
      "op": "POP",
      "path": "2"
    },
    "9129": {
      "fn": "BaseLoot.lootTo",
      "jump": "o",
      "offset": [
        1846,
        2029
      ],
      "op": "JUMP",
      "path": "2"
    },
    "9130": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3450,
        4825
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9131": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3596,
        3626
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 66,
      "value": "0x40"
    },
    "9133": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3596,
        3626
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9134": {
      "op": "PUSH4",
      "value": "0x6BFC324F"
    },
    "9139": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9141": {
      "op": "SHL"
    },
    "9142": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3596,
        3626
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9143": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3596,
        3626
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9144": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3596,
        3626
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "9146": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3596,
        3626
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9147": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3596,
        3626
      ],
      "op": "ADD",
      "path": "2"
    },
    "9148": {
      "op": "DUP5"
    },
    "9149": {
      "op": "SWAP1"
    },
    "9150": {
      "op": "MSTORE"
    },
    "9151": {
      "offset": [
        1788,
        1790
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "9153": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9155": {
      "op": "DUP3"
    },
    "9156": {
      "op": "ADD"
    },
    "9157": {
      "op": "MSTORE"
    },
    "9158": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3564,
        3569
      ],
      "op": "DUP5",
      "path": "2"
    },
    "9159": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3564,
        3569
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9160": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9162": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9164": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9166": {
      "op": "SHL"
    },
    "9167": {
      "op": "SUB"
    },
    "9168": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3596,
        3608
      ],
      "op": "DUP3",
      "path": "2"
    },
    "9169": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3596,
        3608
      ],
      "op": "AND",
      "path": "2"
    },
    "9170": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3596,
        3608
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9171": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3596,
        3608
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x6BFC324F"
    },
    "9176": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3596,
        3608
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9177": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9179": {
      "op": "ADD"
    },
    "9180": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3596,
        3626
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "9182": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3596,
        3626
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9184": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3596,
        3626
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9185": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3596,
        3626
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9186": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3596,
        3626
      ],
      "op": "DUP4",
      "path": "2"
    },
    "9187": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3596,
        3626
      ],
      "op": "SUB",
      "path": "2"
    },
    "9188": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3596,
        3626
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9189": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3596,
        3626
      ],
      "op": "DUP7",
      "path": "2"
    },
    "9190": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3596,
        3626
      ],
      "op": "GAS",
      "path": "2"
    },
    "9191": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3596,
        3626
      ],
      "op": "STATICCALL",
      "path": "2"
    },
    "9192": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3596,
        3626
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "9193": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3596,
        3626
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9194": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3596,
        3626
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "9195": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3596,
        3626
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x23F8"
    },
    "9198": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3596,
        3626
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "9199": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3596,
        3626
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "9200": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3596,
        3626
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "9202": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3596,
        3626
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9203": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3596,
        3626
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "9204": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3596,
        3626
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "9205": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3596,
        3626
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "9207": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3596,
        3626
      ],
      "op": "REVERT",
      "path": "2"
    },
    "9208": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3596,
        3626
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9209": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3596,
        3626
      ],
      "op": "POP",
      "path": "2"
    },
    "9210": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3596,
        3626
      ],
      "op": "POP",
      "path": "2"
    },
    "9211": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3596,
        3626
      ],
      "op": "POP",
      "path": "2"
    },
    "9212": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3596,
        3626
      ],
      "op": "POP",
      "path": "2"
    },
    "9213": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3596,
        3626
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9215": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3596,
        3626
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9216": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3596,
        3626
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "9217": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3596,
        3626
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "9219": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3596,
        3626
      ],
      "op": "NOT",
      "path": "2"
    },
    "9220": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3596,
        3626
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "9222": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3596,
        3626
      ],
      "op": "DUP3",
      "path": "2"
    },
    "9223": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3596,
        3626
      ],
      "op": "ADD",
      "path": "2"
    },
    "9224": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3596,
        3626
      ],
      "op": "AND",
      "path": "2"
    },
    "9225": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3596,
        3626
      ],
      "op": "DUP3",
      "path": "2"
    },
    "9226": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3596,
        3626
      ],
      "op": "ADD",
      "path": "2"
    },
    "9227": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3596,
        3626
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9228": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3596,
        3626
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9230": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3596,
        3626
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9231": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3596,
        3626
      ],
      "op": "POP",
      "path": "2"
    },
    "9232": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3596,
        3626
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9233": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3596,
        3626
      ],
      "op": "ADD",
      "path": "2"
    },
    "9234": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3596,
        3626
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9235": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3596,
        3626
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x241C"
    },
    "9238": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3596,
        3626
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9239": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3596,
        3626
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9240": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3596,
        3626
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4BCC"
    },
    "9243": {
      "fn": "BaseLoot.castDF",
      "jump": "i",
      "offset": [
        3596,
        3626
      ],
      "op": "JUMP",
      "path": "2"
    },
    "9244": {
      "branch": 193,
      "fn": "BaseLoot.castDF",
      "offset": [
        3596,
        3626
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9245": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3588,
        3658
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2468"
    },
    "9248": {
      "branch": 193,
      "fn": "BaseLoot.castDF",
      "offset": [
        3588,
        3658
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "9249": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3588,
        3658
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9251": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3588,
        3658
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9252": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9256": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9258": {
      "op": "SHL"
    },
    "9259": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3588,
        3658
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9260": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3588,
        3658
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9261": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9263": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3588,
        3658
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "9265": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3588,
        3658
      ],
      "op": "DUP3",
      "path": "2"
    },
    "9266": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3588,
        3658
      ],
      "op": "ADD",
      "path": "2"
    },
    "9267": {
      "op": "MSTORE"
    },
    "9268": {
      "op": "PUSH1",
      "value": "0x1B"
    },
    "9270": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9272": {
      "op": "DUP3"
    },
    "9273": {
      "op": "ADD"
    },
    "9274": {
      "op": "MSTORE"
    },
    "9275": {
      "op": "PUSH32",
      "value": "0x4865726F2063616E2774206361737420647275696420666972652E0000000000"
    },
    "9308": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9310": {
      "op": "DUP3"
    },
    "9311": {
      "op": "ADD"
    },
    "9312": {
      "op": "MSTORE"
    },
    "9313": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9315": {
      "op": "ADD"
    },
    "9316": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3588,
        3658
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x60F"
    },
    "9319": {
      "op": "JUMP"
    },
    "9320": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3588,
        3658
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9321": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3684,
        3702
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 67,
      "value": "0x40"
    },
    "9323": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3684,
        3702
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9324": {
      "op": "PUSH4",
      "value": "0x31A9108F"
    },
    "9329": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "9331": {
      "op": "SHL"
    },
    "9332": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3684,
        3702
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9333": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3684,
        3702
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9334": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3684,
        3702
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "9336": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3684,
        3702
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9337": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3684,
        3702
      ],
      "op": "ADD",
      "path": "2"
    },
    "9338": {
      "op": "DUP6"
    },
    "9339": {
      "op": "SWAP1"
    },
    "9340": {
      "op": "MSTORE"
    },
    "9341": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3706,
        3716
      ],
      "op": "CALLER",
      "path": "2"
    },
    "9342": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3706,
        3716
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9343": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9345": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9347": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9349": {
      "op": "SHL"
    },
    "9350": {
      "op": "SUB"
    },
    "9351": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3684,
        3696
      ],
      "op": "DUP4",
      "path": "2"
    },
    "9352": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3684,
        3696
      ],
      "op": "AND",
      "path": "2"
    },
    "9353": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3684,
        3696
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9354": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3684,
        3696
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x6352211E"
    },
    "9359": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3684,
        3696
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9360": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9362": {
      "op": "ADD"
    },
    "9363": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3684,
        3702
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "9365": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3684,
        3702
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9367": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3684,
        3702
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9368": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3684,
        3702
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9369": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3684,
        3702
      ],
      "op": "DUP4",
      "path": "2"
    },
    "9370": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3684,
        3702
      ],
      "op": "SUB",
      "path": "2"
    },
    "9371": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3684,
        3702
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9372": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3684,
        3702
      ],
      "op": "DUP7",
      "path": "2"
    },
    "9373": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3684,
        3702
      ],
      "op": "GAS",
      "path": "2"
    },
    "9374": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3684,
        3702
      ],
      "op": "STATICCALL",
      "path": "2"
    },
    "9375": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3684,
        3702
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "9376": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3684,
        3702
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9377": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3684,
        3702
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "9378": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3684,
        3702
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x24AF"
    },
    "9381": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3684,
        3702
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "9382": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3684,
        3702
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "9383": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3684,
        3702
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "9385": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3684,
        3702
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9386": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3684,
        3702
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "9387": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3684,
        3702
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "9388": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3684,
        3702
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "9390": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3684,
        3702
      ],
      "op": "REVERT",
      "path": "2"
    },
    "9391": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3684,
        3702
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9392": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3684,
        3702
      ],
      "op": "POP",
      "path": "2"
    },
    "9393": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3684,
        3702
      ],
      "op": "POP",
      "path": "2"
    },
    "9394": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3684,
        3702
      ],
      "op": "POP",
      "path": "2"
    },
    "9395": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3684,
        3702
      ],
      "op": "POP",
      "path": "2"
    },
    "9396": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3684,
        3702
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9398": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3684,
        3702
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9399": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3684,
        3702
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "9400": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3684,
        3702
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "9402": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3684,
        3702
      ],
      "op": "NOT",
      "path": "2"
    },
    "9403": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3684,
        3702
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "9405": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3684,
        3702
      ],
      "op": "DUP3",
      "path": "2"
    },
    "9406": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3684,
        3702
      ],
      "op": "ADD",
      "path": "2"
    },
    "9407": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3684,
        3702
      ],
      "op": "AND",
      "path": "2"
    },
    "9408": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3684,
        3702
      ],
      "op": "DUP3",
      "path": "2"
    },
    "9409": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3684,
        3702
      ],
      "op": "ADD",
      "path": "2"
    },
    "9410": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3684,
        3702
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9411": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3684,
        3702
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9413": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3684,
        3702
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9414": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3684,
        3702
      ],
      "op": "POP",
      "path": "2"
    },
    "9415": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3684,
        3702
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9416": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3684,
        3702
      ],
      "op": "ADD",
      "path": "2"
    },
    "9417": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3684,
        3702
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9418": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3684,
        3702
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x24D3"
    },
    "9421": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3684,
        3702
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9422": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3684,
        3702
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9423": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3684,
        3702
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4C0C"
    },
    "9426": {
      "fn": "BaseLoot.castDF",
      "jump": "i",
      "offset": [
        3684,
        3702
      ],
      "op": "JUMP",
      "path": "2"
    },
    "9427": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3684,
        3702
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9428": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9430": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9432": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9434": {
      "op": "SHL"
    },
    "9435": {
      "op": "SUB"
    },
    "9436": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3684,
        3716
      ],
      "op": "AND",
      "path": "2"
    },
    "9437": {
      "branch": 194,
      "fn": "BaseLoot.castDF",
      "offset": [
        3684,
        3716
      ],
      "op": "EQ",
      "path": "2"
    },
    "9438": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3684,
        3739
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9439": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3684,
        3739
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x24F8"
    },
    "9442": {
      "branch": 194,
      "fn": "BaseLoot.castDF",
      "offset": [
        3684,
        3739
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "9443": {
      "op": "POP"
    },
    "9444": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3728,
        3738
      ],
      "op": "CALLER",
      "path": "2"
    },
    "9445": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3720,
        3739
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "9447": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3720,
        3739
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9448": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3720,
        3739
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9449": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3720,
        3739
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9450": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3720,
        3727
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "9453": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3720,
        3739
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "9455": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3720,
        3739
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9456": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3720,
        3739
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9458": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3720,
        3739
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9459": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3720,
        3739
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "9460": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3720,
        3739
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "9461": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3720,
        3739
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "9463": {
      "branch": 195,
      "fn": "BaseLoot.castDF",
      "offset": [
        3720,
        3739
      ],
      "op": "AND",
      "path": "2"
    },
    "9464": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3684,
        3739
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9465": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3676,
        3762
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2514"
    },
    "9468": {
      "branch": 195,
      "fn": "BaseLoot.castDF",
      "offset": [
        3676,
        3762
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "9469": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3676,
        3762
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9471": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3676,
        3762
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9472": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9476": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9478": {
      "op": "SHL"
    },
    "9479": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3676,
        3762
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9480": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3676,
        3762
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9481": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3676,
        3762
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "9483": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3676,
        3762
      ],
      "op": "ADD",
      "path": "2"
    },
    "9484": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3676,
        3762
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x60F"
    },
    "9487": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3676,
        3762
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9488": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3676,
        3762
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4C72"
    },
    "9491": {
      "fn": "BaseLoot.castDF",
      "jump": "i",
      "offset": [
        3676,
        3762
      ],
      "op": "JUMP",
      "path": "2"
    },
    "9492": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3676,
        3762
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9493": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3813,
        3829
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9495": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3813,
        3829
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9496": {
      "op": "PUSH4",
      "value": "0x43E8C3F7"
    },
    "9501": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "9503": {
      "op": "SHL"
    },
    "9504": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3813,
        3829
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9505": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3813,
        3829
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9506": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3813,
        3829
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "9508": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3813,
        3829
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9509": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3813,
        3829
      ],
      "op": "ADD",
      "path": "2"
    },
    "9510": {
      "op": "DUP6"
    },
    "9511": {
      "op": "SWAP1"
    },
    "9512": {
      "op": "MSTORE"
    },
    "9513": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3782,
        3793
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "9515": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3782,
        3793
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9516": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3782,
        3793
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9517": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3782,
        3793
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9518": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9520": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9522": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9524": {
      "op": "SHL"
    },
    "9525": {
      "op": "SUB"
    },
    "9526": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3813,
        3823
      ],
      "op": "DUP5",
      "path": "2"
    },
    "9527": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3813,
        3823
      ],
      "op": "AND",
      "path": "2"
    },
    "9528": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3813,
        3823
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9529": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3813,
        3823
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x87D187EE"
    },
    "9534": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3813,
        3823
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9535": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9537": {
      "op": "ADD"
    },
    "9538": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3813,
        3829
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9540": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3813,
        3829
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9541": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3813,
        3829
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9542": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3813,
        3829
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9543": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3813,
        3829
      ],
      "op": "DUP4",
      "path": "2"
    },
    "9544": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3813,
        3829
      ],
      "op": "SUB",
      "path": "2"
    },
    "9545": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3813,
        3829
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9546": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3813,
        3829
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "9548": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3813,
        3829
      ],
      "op": "DUP8",
      "path": "2"
    },
    "9549": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3813,
        3829
      ],
      "op": "GAS",
      "path": "2"
    },
    "9550": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3813,
        3829
      ],
      "op": "CALL",
      "path": "2"
    },
    "9551": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3813,
        3829
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "9552": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3813,
        3829
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9553": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3813,
        3829
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "9554": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3813,
        3829
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x255F"
    },
    "9557": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3813,
        3829
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "9558": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3813,
        3829
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "9559": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3813,
        3829
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "9561": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3813,
        3829
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9562": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3813,
        3829
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "9563": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3813,
        3829
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "9564": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3813,
        3829
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "9566": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3813,
        3829
      ],
      "op": "REVERT",
      "path": "2"
    },
    "9567": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3813,
        3829
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9568": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3813,
        3829
      ],
      "op": "POP",
      "path": "2"
    },
    "9569": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3813,
        3829
      ],
      "op": "POP",
      "path": "2"
    },
    "9570": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3813,
        3829
      ],
      "op": "POP",
      "path": "2"
    },
    "9571": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3813,
        3829
      ],
      "op": "POP",
      "path": "2"
    },
    "9572": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3813,
        3829
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9574": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3813,
        3829
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9575": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3813,
        3829
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "9576": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3813,
        3829
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "9578": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3813,
        3829
      ],
      "op": "NOT",
      "path": "2"
    },
    "9579": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3813,
        3829
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "9581": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3813,
        3829
      ],
      "op": "DUP3",
      "path": "2"
    },
    "9582": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3813,
        3829
      ],
      "op": "ADD",
      "path": "2"
    },
    "9583": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3813,
        3829
      ],
      "op": "AND",
      "path": "2"
    },
    "9584": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3813,
        3829
      ],
      "op": "DUP3",
      "path": "2"
    },
    "9585": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3813,
        3829
      ],
      "op": "ADD",
      "path": "2"
    },
    "9586": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3813,
        3829
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9587": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3813,
        3829
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9589": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3813,
        3829
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9590": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3813,
        3829
      ],
      "op": "POP",
      "path": "2"
    },
    "9591": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3813,
        3829
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9592": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3813,
        3829
      ],
      "op": "ADD",
      "path": "2"
    },
    "9593": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3813,
        3829
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9594": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3813,
        3829
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2583"
    },
    "9597": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3813,
        3829
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9598": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3813,
        3829
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9599": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3813,
        3829
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4BA8"
    },
    "9602": {
      "fn": "BaseLoot.castDF",
      "jump": "i",
      "offset": [
        3813,
        3829
      ],
      "op": "JUMP",
      "path": "2"
    },
    "9603": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3813,
        3829
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9604": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3864,
        3882
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9606": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3864,
        3882
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9607": {
      "op": "PUSH4",
      "value": "0x6573C787"
    },
    "9612": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9614": {
      "op": "SHL"
    },
    "9615": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3864,
        3882
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9616": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3864,
        3882
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9617": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3864,
        3882
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "9619": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3864,
        3882
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9620": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3864,
        3882
      ],
      "op": "ADD",
      "path": "2"
    },
    "9621": {
      "op": "DUP4"
    },
    "9622": {
      "op": "SWAP1"
    },
    "9623": {
      "op": "MSTORE"
    },
    "9624": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3781,
        3829
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9625": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3781,
        3829
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "9626": {
      "op": "POP"
    },
    "9627": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3781,
        3829
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9628": {
      "op": "POP"
    },
    "9629": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3847,
        3861
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "9631": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3847,
        3861
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9632": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9634": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9636": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9638": {
      "op": "SHL"
    },
    "9639": {
      "op": "SUB"
    },
    "9640": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3864,
        3874
      ],
      "op": "DUP6",
      "path": "2"
    },
    "9641": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3864,
        3874
      ],
      "op": "AND",
      "path": "2"
    },
    "9642": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3864,
        3874
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9643": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3864,
        3874
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x6573C787"
    },
    "9648": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3864,
        3874
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9649": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9651": {
      "op": "ADD"
    },
    "9652": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3864,
        3882
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "9654": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3864,
        3882
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9656": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3864,
        3882
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9657": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3864,
        3882
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9658": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3864,
        3882
      ],
      "op": "DUP4",
      "path": "2"
    },
    "9659": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3864,
        3882
      ],
      "op": "SUB",
      "path": "2"
    },
    "9660": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3864,
        3882
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9661": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3864,
        3882
      ],
      "op": "DUP7",
      "path": "2"
    },
    "9662": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3864,
        3882
      ],
      "op": "GAS",
      "path": "2"
    },
    "9663": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3864,
        3882
      ],
      "op": "STATICCALL",
      "path": "2"
    },
    "9664": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3864,
        3882
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "9665": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3864,
        3882
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9666": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3864,
        3882
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "9667": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3864,
        3882
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x25D0"
    },
    "9670": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3864,
        3882
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "9671": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3864,
        3882
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "9672": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3864,
        3882
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "9674": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3864,
        3882
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9675": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3864,
        3882
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "9676": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3864,
        3882
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "9677": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3864,
        3882
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "9679": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3864,
        3882
      ],
      "op": "REVERT",
      "path": "2"
    },
    "9680": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3864,
        3882
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9681": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3864,
        3882
      ],
      "op": "POP",
      "path": "2"
    },
    "9682": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3864,
        3882
      ],
      "op": "POP",
      "path": "2"
    },
    "9683": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3864,
        3882
      ],
      "op": "POP",
      "path": "2"
    },
    "9684": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3864,
        3882
      ],
      "op": "POP",
      "path": "2"
    },
    "9685": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3864,
        3882
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9687": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3864,
        3882
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9688": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3864,
        3882
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "9689": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3864,
        3882
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "9691": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3864,
        3882
      ],
      "op": "NOT",
      "path": "2"
    },
    "9692": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3864,
        3882
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "9694": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3864,
        3882
      ],
      "op": "DUP3",
      "path": "2"
    },
    "9695": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3864,
        3882
      ],
      "op": "ADD",
      "path": "2"
    },
    "9696": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3864,
        3882
      ],
      "op": "AND",
      "path": "2"
    },
    "9697": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3864,
        3882
      ],
      "op": "DUP3",
      "path": "2"
    },
    "9698": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3864,
        3882
      ],
      "op": "ADD",
      "path": "2"
    },
    "9699": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3864,
        3882
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9700": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3864,
        3882
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9702": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3864,
        3882
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9703": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3864,
        3882
      ],
      "op": "POP",
      "path": "2"
    },
    "9704": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3864,
        3882
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9705": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3864,
        3882
      ],
      "op": "ADD",
      "path": "2"
    },
    "9706": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3864,
        3882
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9707": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3864,
        3882
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x25F4"
    },
    "9710": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3864,
        3882
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9711": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3864,
        3882
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9712": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3864,
        3882
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4BCC"
    },
    "9715": {
      "fn": "BaseLoot.castDF",
      "jump": "i",
      "offset": [
        3864,
        3882
      ],
      "op": "JUMP",
      "path": "2"
    },
    "9716": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3864,
        3882
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9717": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3847,
        3882
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9718": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3847,
        3882
      ],
      "op": "POP",
      "path": "2"
    },
    "9719": {
      "branch": 196,
      "fn": "BaseLoot.castDF",
      "offset": [
        3908,
        3917
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 68
    },
    "9720": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3900,
        3935
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2613"
    },
    "9723": {
      "branch": 196,
      "fn": "BaseLoot.castDF",
      "offset": [
        3900,
        3935
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "9724": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3900,
        3935
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9726": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3900,
        3935
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9727": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9731": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9733": {
      "op": "SHL"
    },
    "9734": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3900,
        3935
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9735": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3900,
        3935
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9736": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3900,
        3935
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "9738": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3900,
        3935
      ],
      "op": "ADD",
      "path": "2"
    },
    "9739": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3900,
        3935
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x60F"
    },
    "9742": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3900,
        3935
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9743": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3900,
        3935
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4D73"
    },
    "9746": {
      "fn": "BaseLoot.castDF",
      "jump": "i",
      "offset": [
        3900,
        3935
      ],
      "op": "JUMP",
      "path": "2"
    },
    "9747": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3900,
        3935
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9748": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3971,
        3977
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFE"
    },
    "9750": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3971,
        3977
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "9751": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3971,
        3999
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9753": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3971,
        3999
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9754": {
      "op": "PUSH4",
      "value": "0x2C487CAB"
    },
    "9759": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "9761": {
      "op": "SHL"
    },
    "9762": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3971,
        3999
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9763": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3971,
        3999
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9764": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9766": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9768": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9770": {
      "op": "SHL"
    },
    "9771": {
      "op": "SUB"
    },
    "9772": {
      "op": "DUP11"
    },
    "9773": {
      "op": "DUP2"
    },
    "9774": {
      "op": "AND"
    },
    "9775": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3971,
        3999
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "9777": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3971,
        3999
      ],
      "op": "DUP4",
      "path": "2"
    },
    "9778": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3971,
        3999
      ],
      "op": "ADD",
      "path": "2"
    },
    "9779": {
      "op": "MSTORE"
    },
    "9780": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9782": {
      "op": "DUP3"
    },
    "9783": {
      "op": "ADD"
    },
    "9784": {
      "op": "DUP11"
    },
    "9785": {
      "op": "SWAP1"
    },
    "9786": {
      "op": "MSTORE"
    },
    "9787": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3954,
        3968
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "9789": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3954,
        3968
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "9790": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3971,
        3977
      ],
      "op": "AND",
      "path": "2"
    },
    "9791": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3971,
        3977
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9792": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3971,
        3986
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xB121F2AC"
    },
    "9797": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3971,
        3986
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9798": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9800": {
      "op": "ADD"
    },
    "9801": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3971,
        3999
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "9803": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3971,
        3999
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9805": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3971,
        3999
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9806": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3971,
        3999
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9807": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3971,
        3999
      ],
      "op": "DUP4",
      "path": "2"
    },
    "9808": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3971,
        3999
      ],
      "op": "SUB",
      "path": "2"
    },
    "9809": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3971,
        3999
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9810": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3971,
        3999
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "9812": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3971,
        3999
      ],
      "op": "DUP8",
      "path": "2"
    },
    "9813": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3971,
        3999
      ],
      "op": "GAS",
      "path": "2"
    },
    "9814": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3971,
        3999
      ],
      "op": "CALL",
      "path": "2"
    },
    "9815": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3971,
        3999
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "9816": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3971,
        3999
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9817": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3971,
        3999
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "9818": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3971,
        3999
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2667"
    },
    "9821": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3971,
        3999
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "9822": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3971,
        3999
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "9823": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3971,
        3999
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "9825": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3971,
        3999
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9826": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3971,
        3999
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "9827": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3971,
        3999
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "9828": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3971,
        3999
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "9830": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3971,
        3999
      ],
      "op": "REVERT",
      "path": "2"
    },
    "9831": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3971,
        3999
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9832": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3971,
        3999
      ],
      "op": "POP",
      "path": "2"
    },
    "9833": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3971,
        3999
      ],
      "op": "POP",
      "path": "2"
    },
    "9834": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3971,
        3999
      ],
      "op": "POP",
      "path": "2"
    },
    "9835": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3971,
        3999
      ],
      "op": "POP",
      "path": "2"
    },
    "9836": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3971,
        3999
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9838": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3971,
        3999
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9839": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3971,
        3999
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "9840": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3971,
        3999
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "9842": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3971,
        3999
      ],
      "op": "NOT",
      "path": "2"
    },
    "9843": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3971,
        3999
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "9845": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3971,
        3999
      ],
      "op": "DUP3",
      "path": "2"
    },
    "9846": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3971,
        3999
      ],
      "op": "ADD",
      "path": "2"
    },
    "9847": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3971,
        3999
      ],
      "op": "AND",
      "path": "2"
    },
    "9848": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3971,
        3999
      ],
      "op": "DUP3",
      "path": "2"
    },
    "9849": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3971,
        3999
      ],
      "op": "ADD",
      "path": "2"
    },
    "9850": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3971,
        3999
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9851": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3971,
        3999
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9853": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3971,
        3999
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9854": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3971,
        3999
      ],
      "op": "POP",
      "path": "2"
    },
    "9855": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3971,
        3999
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9856": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3971,
        3999
      ],
      "op": "ADD",
      "path": "2"
    },
    "9857": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3971,
        3999
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9858": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3971,
        3999
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x268B"
    },
    "9861": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3971,
        3999
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9862": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3971,
        3999
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9863": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3971,
        3999
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4E24"
    },
    "9866": {
      "fn": "BaseLoot.castDF",
      "jump": "i",
      "offset": [
        3971,
        3999
      ],
      "op": "JUMP",
      "path": "2"
    },
    "9867": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3971,
        3999
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9868": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3954,
        3999
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9869": {
      "op": "POP"
    },
    "9870": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4017,
        4026
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "9872": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4029,
        4050
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x26A1"
    },
    "9875": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3954,
        3999
      ],
      "op": "DUP3",
      "path": "2"
    },
    "9876": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4041,
        4050
      ],
      "op": "PUSH8",
      "path": "2",
      "value": "0x16345785D8A0000"
    },
    "9885": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4029,
        4050
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4DB0"
    },
    "9888": {
      "fn": "BaseLoot.castDF",
      "jump": "i",
      "offset": [
        4029,
        4050
      ],
      "op": "JUMP",
      "path": "2"
    },
    "9889": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4029,
        4050
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9890": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4017,
        4050
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9891": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4017,
        4050
      ],
      "op": "POP",
      "path": "2"
    },
    "9892": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4084,
        4093
      ],
      "op": "DUP4",
      "path": "2",
      "statement": 69
    },
    "9893": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4076,
        4080
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9894": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4076,
        4093
      ],
      "op": "GT",
      "path": "2"
    },
    "9895": {
      "branch": 197,
      "fn": "BaseLoot.castDF",
      "offset": [
        4076,
        4093
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "9896": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4068,
        4128
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x26F3"
    },
    "9899": {
      "branch": 197,
      "fn": "BaseLoot.castDF",
      "offset": [
        4068,
        4128
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "9900": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4068,
        4128
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9902": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4068,
        4128
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9903": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9907": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9909": {
      "op": "SHL"
    },
    "9910": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4068,
        4128
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9911": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4068,
        4128
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9912": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9914": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4068,
        4128
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "9916": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4068,
        4128
      ],
      "op": "DUP3",
      "path": "2"
    },
    "9917": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4068,
        4128
      ],
      "op": "ADD",
      "path": "2"
    },
    "9918": {
      "op": "MSTORE"
    },
    "9919": {
      "op": "PUSH1",
      "value": "0x1E"
    },
    "9921": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9923": {
      "op": "DUP3"
    },
    "9924": {
      "op": "ADD"
    },
    "9925": {
      "op": "MSTORE"
    },
    "9926": {
      "op": "PUSH32",
      "value": "0x596F75206C61636B2074686520706F77657220746F20646F20746861742E0000"
    },
    "9959": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9961": {
      "op": "DUP3"
    },
    "9962": {
      "op": "ADD"
    },
    "9963": {
      "op": "MSTORE"
    },
    "9964": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9966": {
      "op": "ADD"
    },
    "9967": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4068,
        4128
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x60F"
    },
    "9970": {
      "op": "JUMP"
    },
    "9971": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4068,
        4128
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9972": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4146,
        4172
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 70,
      "value": "0x40"
    },
    "9974": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4146,
        4172
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9975": {
      "op": "PUSH4",
      "value": "0x17C57EDF"
    },
    "9980": {
      "op": "PUSH1",
      "value": "0xE3"
    },
    "9982": {
      "op": "SHL"
    },
    "9983": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4146,
        4172
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9984": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4146,
        4172
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9985": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4146,
        4172
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "9987": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4146,
        4172
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9988": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4146,
        4172
      ],
      "op": "ADD",
      "path": "2"
    },
    "9989": {
      "op": "DUP11"
    },
    "9990": {
      "op": "SWAP1"
    },
    "9991": {
      "op": "MSTORE"
    },
    "9992": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9994": {
      "op": "DUP2"
    },
    "9995": {
      "op": "ADD"
    },
    "9996": {
      "op": "DUP3"
    },
    "9997": {
      "op": "SWAP1"
    },
    "9998": {
      "op": "MSTORE"
    },
    "9999": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10001": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10003": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10005": {
      "op": "SHL"
    },
    "10006": {
      "op": "SUB"
    },
    "10007": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4146,
        4160
      ],
      "op": "DUP8",
      "path": "2"
    },
    "10008": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4146,
        4160
      ],
      "op": "AND",
      "path": "2"
    },
    "10009": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4146,
        4160
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10010": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4146,
        4160
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xBE2BF6F8"
    },
    "10015": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4146,
        4160
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10016": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "10018": {
      "op": "ADD"
    },
    "10019": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4146,
        4172
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "10021": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4146,
        4172
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "10023": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4146,
        4172
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "10024": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4146,
        4172
      ],
      "op": "DUP1",
      "path": "2"
    },
    "10025": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4146,
        4172
      ],
      "op": "DUP4",
      "path": "2"
    },
    "10026": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4146,
        4172
      ],
      "op": "SUB",
      "path": "2"
    },
    "10027": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4146,
        4172
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10028": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4146,
        4172
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "10030": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4146,
        4172
      ],
      "op": "DUP8",
      "path": "2"
    },
    "10031": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4146,
        4172
      ],
      "op": "GAS",
      "path": "2"
    },
    "10032": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4146,
        4172
      ],
      "op": "CALL",
      "path": "2"
    },
    "10033": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4146,
        4172
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "10034": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4146,
        4172
      ],
      "op": "DUP1",
      "path": "2"
    },
    "10035": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4146,
        4172
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "10036": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4146,
        4172
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2741"
    },
    "10039": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4146,
        4172
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "10040": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4146,
        4172
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "10041": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4146,
        4172
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "10043": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4146,
        4172
      ],
      "op": "DUP1",
      "path": "2"
    },
    "10044": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4146,
        4172
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "10045": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4146,
        4172
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "10046": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4146,
        4172
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "10048": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4146,
        4172
      ],
      "op": "REVERT",
      "path": "2"
    },
    "10049": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4146,
        4172
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10050": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4146,
        4172
      ],
      "op": "POP",
      "path": "2"
    },
    "10051": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4146,
        4172
      ],
      "op": "POP",
      "path": "2"
    },
    "10052": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4146,
        4172
      ],
      "op": "POP",
      "path": "2"
    },
    "10053": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4146,
        4172
      ],
      "op": "POP",
      "path": "2"
    },
    "10054": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4146,
        4172
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "10056": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4146,
        4172
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "10057": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4146,
        4172
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "10058": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4146,
        4172
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "10060": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4146,
        4172
      ],
      "op": "NOT",
      "path": "2"
    },
    "10061": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4146,
        4172
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "10063": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4146,
        4172
      ],
      "op": "DUP3",
      "path": "2"
    },
    "10064": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4146,
        4172
      ],
      "op": "ADD",
      "path": "2"
    },
    "10065": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4146,
        4172
      ],
      "op": "AND",
      "path": "2"
    },
    "10066": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4146,
        4172
      ],
      "op": "DUP3",
      "path": "2"
    },
    "10067": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4146,
        4172
      ],
      "op": "ADD",
      "path": "2"
    },
    "10068": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4146,
        4172
      ],
      "op": "DUP1",
      "path": "2"
    },
    "10069": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4146,
        4172
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "10071": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4146,
        4172
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10072": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4146,
        4172
      ],
      "op": "POP",
      "path": "2"
    },
    "10073": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4146,
        4172
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10074": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4146,
        4172
      ],
      "op": "ADD",
      "path": "2"
    },
    "10075": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4146,
        4172
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10076": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4146,
        4172
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2765"
    },
    "10079": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4146,
        4172
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "10080": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4146,
        4172
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10081": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4146,
        4172
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4E24"
    },
    "10084": {
      "fn": "BaseLoot.castDF",
      "jump": "i",
      "offset": [
        4146,
        4172
      ],
      "op": "JUMP",
      "path": "2"
    },
    "10085": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4146,
        4172
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10086": {
      "op": "POP"
    },
    "10087": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4207,
        4226
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "10089": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4207,
        4226
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "10090": {
      "op": "PUSH4",
      "value": "0x43E8C3F7"
    },
    "10095": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "10097": {
      "op": "SHL"
    },
    "10098": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4207,
        4226
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10099": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4207,
        4226
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10100": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4207,
        4226
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "10102": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4207,
        4226
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10103": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4207,
        4226
      ],
      "op": "ADD",
      "path": "2"
    },
    "10104": {
      "op": "DUP10"
    },
    "10105": {
      "op": "SWAP1"
    },
    "10106": {
      "op": "MSTORE"
    },
    "10107": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4192,
        4202
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "10109": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4192,
        4202
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10110": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10112": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10114": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10116": {
      "op": "SHL"
    },
    "10117": {
      "op": "SUB"
    },
    "10118": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4207,
        4217
      ],
      "op": "DUP9",
      "path": "2"
    },
    "10119": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4207,
        4217
      ],
      "op": "AND",
      "path": "2"
    },
    "10120": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4207,
        4217
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10121": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4207,
        4217
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x87D187EE"
    },
    "10126": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4207,
        4217
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10127": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10129": {
      "op": "ADD"
    },
    "10130": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4207,
        4226
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "10132": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4207,
        4226
      ],
      "op": "DUP1",
      "path": "2"
    },
    "10133": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4207,
        4226
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "10134": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4207,
        4226
      ],
      "op": "DUP1",
      "path": "2"
    },
    "10135": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4207,
        4226
      ],
      "op": "DUP4",
      "path": "2"
    },
    "10136": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4207,
        4226
      ],
      "op": "SUB",
      "path": "2"
    },
    "10137": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4207,
        4226
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10138": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4207,
        4226
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "10140": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4207,
        4226
      ],
      "op": "DUP8",
      "path": "2"
    },
    "10141": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4207,
        4226
      ],
      "op": "GAS",
      "path": "2"
    },
    "10142": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4207,
        4226
      ],
      "op": "CALL",
      "path": "2"
    },
    "10143": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4207,
        4226
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "10144": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4207,
        4226
      ],
      "op": "DUP1",
      "path": "2"
    },
    "10145": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4207,
        4226
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "10146": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4207,
        4226
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x27AF"
    },
    "10149": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4207,
        4226
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "10150": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4207,
        4226
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "10151": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4207,
        4226
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "10153": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4207,
        4226
      ],
      "op": "DUP1",
      "path": "2"
    },
    "10154": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4207,
        4226
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "10155": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4207,
        4226
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "10156": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4207,
        4226
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "10158": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4207,
        4226
      ],
      "op": "REVERT",
      "path": "2"
    },
    "10159": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4207,
        4226
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10160": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4207,
        4226
      ],
      "op": "POP",
      "path": "2"
    },
    "10161": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4207,
        4226
      ],
      "op": "POP",
      "path": "2"
    },
    "10162": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4207,
        4226
      ],
      "op": "POP",
      "path": "2"
    },
    "10163": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4207,
        4226
      ],
      "op": "POP",
      "path": "2"
    },
    "10164": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4207,
        4226
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "10166": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4207,
        4226
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "10167": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4207,
        4226
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "10168": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4207,
        4226
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "10170": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4207,
        4226
      ],
      "op": "NOT",
      "path": "2"
    },
    "10171": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4207,
        4226
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "10173": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4207,
        4226
      ],
      "op": "DUP3",
      "path": "2"
    },
    "10174": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4207,
        4226
      ],
      "op": "ADD",
      "path": "2"
    },
    "10175": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4207,
        4226
      ],
      "op": "AND",
      "path": "2"
    },
    "10176": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4207,
        4226
      ],
      "op": "DUP3",
      "path": "2"
    },
    "10177": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4207,
        4226
      ],
      "op": "ADD",
      "path": "2"
    },
    "10178": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4207,
        4226
      ],
      "op": "DUP1",
      "path": "2"
    },
    "10179": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4207,
        4226
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "10181": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4207,
        4226
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10182": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4207,
        4226
      ],
      "op": "POP",
      "path": "2"
    },
    "10183": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4207,
        4226
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10184": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4207,
        4226
      ],
      "op": "ADD",
      "path": "2"
    },
    "10185": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4207,
        4226
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10186": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4207,
        4226
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x27D3"
    },
    "10189": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4207,
        4226
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "10190": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4207,
        4226
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10191": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4207,
        4226
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4BA8"
    },
    "10194": {
      "fn": "BaseLoot.castDF",
      "jump": "i",
      "offset": [
        4207,
        4226
      ],
      "op": "JUMP",
      "path": "2"
    },
    "10195": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4207,
        4226
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10196": {
      "op": "POP"
    },
    "10197": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4252,
        4269
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 71,
      "value": "0x40"
    },
    "10199": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4252,
        4269
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "10200": {
      "op": "PUSH4",
      "value": "0x6573C787"
    },
    "10205": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10207": {
      "op": "SHL"
    },
    "10208": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4252,
        4269
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10209": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4252,
        4269
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10210": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4252,
        4269
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "10212": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4252,
        4269
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10213": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4252,
        4269
      ],
      "op": "ADD",
      "path": "2"
    },
    "10214": {
      "op": "DUP3"
    },
    "10215": {
      "op": "SWAP1"
    },
    "10216": {
      "op": "MSTORE"
    },
    "10217": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4191,
        4226
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10218": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4191,
        4226
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "10219": {
      "op": "POP"
    },
    "10220": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10222": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10224": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10226": {
      "op": "SHL"
    },
    "10227": {
      "op": "SUB"
    },
    "10228": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4252,
        4262
      ],
      "op": "DUP9",
      "path": "2"
    },
    "10229": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4252,
        4262
      ],
      "op": "AND",
      "path": "2"
    },
    "10230": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4252,
        4262
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10231": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4252,
        4262
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x6573C787"
    },
    "10236": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4252,
        4262
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10237": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10239": {
      "op": "ADD"
    },
    "10240": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4252,
        4269
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "10242": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4252,
        4269
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "10244": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4252,
        4269
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "10245": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4252,
        4269
      ],
      "op": "DUP1",
      "path": "2"
    },
    "10246": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4252,
        4269
      ],
      "op": "DUP4",
      "path": "2"
    },
    "10247": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4252,
        4269
      ],
      "op": "SUB",
      "path": "2"
    },
    "10248": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4252,
        4269
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10249": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4252,
        4269
      ],
      "op": "DUP7",
      "path": "2"
    },
    "10250": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4252,
        4269
      ],
      "op": "GAS",
      "path": "2"
    },
    "10251": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4252,
        4269
      ],
      "op": "STATICCALL",
      "path": "2"
    },
    "10252": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4252,
        4269
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "10253": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4252,
        4269
      ],
      "op": "DUP1",
      "path": "2"
    },
    "10254": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4252,
        4269
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "10255": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4252,
        4269
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x281C"
    },
    "10258": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4252,
        4269
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "10259": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4252,
        4269
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "10260": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4252,
        4269
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "10262": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4252,
        4269
      ],
      "op": "DUP1",
      "path": "2"
    },
    "10263": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4252,
        4269
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "10264": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4252,
        4269
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "10265": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4252,
        4269
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "10267": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4252,
        4269
      ],
      "op": "REVERT",
      "path": "2"
    },
    "10268": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4252,
        4269
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10269": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4252,
        4269
      ],
      "op": "POP",
      "path": "2"
    },
    "10270": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4252,
        4269
      ],
      "op": "POP",
      "path": "2"
    },
    "10271": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4252,
        4269
      ],
      "op": "POP",
      "path": "2"
    },
    "10272": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4252,
        4269
      ],
      "op": "POP",
      "path": "2"
    },
    "10273": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4252,
        4269
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "10275": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4252,
        4269
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "10276": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4252,
        4269
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "10277": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4252,
        4269
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "10279": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4252,
        4269
      ],
      "op": "NOT",
      "path": "2"
    },
    "10280": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4252,
        4269
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "10282": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4252,
        4269
      ],
      "op": "DUP3",
      "path": "2"
    },
    "10283": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4252,
        4269
      ],
      "op": "ADD",
      "path": "2"
    },
    "10284": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4252,
        4269
      ],
      "op": "AND",
      "path": "2"
    },
    "10285": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4252,
        4269
      ],
      "op": "DUP3",
      "path": "2"
    },
    "10286": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4252,
        4269
      ],
      "op": "ADD",
      "path": "2"
    },
    "10287": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4252,
        4269
      ],
      "op": "DUP1",
      "path": "2"
    },
    "10288": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4252,
        4269
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "10290": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4252,
        4269
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10291": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4252,
        4269
      ],
      "op": "POP",
      "path": "2"
    },
    "10292": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4252,
        4269
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10293": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4252,
        4269
      ],
      "op": "ADD",
      "path": "2"
    },
    "10294": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4252,
        4269
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10295": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4252,
        4269
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2840"
    },
    "10298": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4252,
        4269
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "10299": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4252,
        4269
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10300": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4252,
        4269
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4BCC"
    },
    "10303": {
      "fn": "BaseLoot.castDF",
      "jump": "i",
      "offset": [
        4252,
        4269
      ],
      "op": "JUMP",
      "path": "2"
    },
    "10304": {
      "branch": 198,
      "fn": "BaseLoot.castDF",
      "offset": [
        4252,
        4269
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10305": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4244,
        4289
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x287E"
    },
    "10308": {
      "branch": 198,
      "fn": "BaseLoot.castDF",
      "offset": [
        4244,
        4289
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "10309": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4244,
        4289
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "10311": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4244,
        4289
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "10312": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10316": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10318": {
      "op": "SHL"
    },
    "10319": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4244,
        4289
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10320": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4244,
        4289
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10321": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10323": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4244,
        4289
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "10325": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4244,
        4289
      ],
      "op": "DUP3",
      "path": "2"
    },
    "10326": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4244,
        4289
      ],
      "op": "ADD",
      "path": "2"
    },
    "10327": {
      "op": "MSTORE"
    },
    "10328": {
      "op": "PUSH1",
      "value": "0xF"
    },
    "10330": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10332": {
      "op": "DUP3"
    },
    "10333": {
      "op": "ADD"
    },
    "10334": {
      "op": "MSTORE"
    },
    "10335": {
      "op": "PUSH15",
      "value": "0x2A30B933B2BA1034B9903232B0B217"
    },
    "10351": {
      "op": "PUSH1",
      "value": "0x89"
    },
    "10353": {
      "op": "SHL"
    },
    "10354": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "10356": {
      "op": "DUP3"
    },
    "10357": {
      "op": "ADD"
    },
    "10358": {
      "op": "MSTORE"
    },
    "10359": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "10361": {
      "op": "ADD"
    },
    "10362": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4244,
        4289
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x60F"
    },
    "10365": {
      "op": "JUMP"
    },
    "10366": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4244,
        4289
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10367": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4329,
        4348
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "10369": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4329,
        4348
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "10370": {
      "op": "PUSH4",
      "value": "0x7B303965"
    },
    "10375": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10377": {
      "op": "SHL"
    },
    "10378": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4329,
        4348
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10379": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4329,
        4348
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10380": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4329,
        4348
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "10382": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4329,
        4348
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10383": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4329,
        4348
      ],
      "op": "ADD",
      "path": "2"
    },
    "10384": {
      "op": "DUP12"
    },
    "10385": {
      "op": "SWAP1"
    },
    "10386": {
      "op": "MSTORE"
    },
    "10387": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4308,
        4326
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "10389": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4308,
        4326
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10390": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10392": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10394": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10396": {
      "op": "SHL"
    },
    "10397": {
      "op": "SUB"
    },
    "10398": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4329,
        4342
      ],
      "op": "DUP10",
      "path": "2"
    },
    "10399": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4329,
        4342
      ],
      "op": "AND",
      "path": "2"
    },
    "10400": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4329,
        4342
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10401": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4329,
        4342
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x7B303965"
    },
    "10406": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4329,
        4342
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10407": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10409": {
      "op": "ADD"
    },
    "10410": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4329,
        4348
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xC0"
    },
    "10412": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4329,
        4348
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "10414": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4329,
        4348
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "10415": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4329,
        4348
      ],
      "op": "DUP1",
      "path": "2"
    },
    "10416": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4329,
        4348
      ],
      "op": "DUP4",
      "path": "2"
    },
    "10417": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4329,
        4348
      ],
      "op": "SUB",
      "path": "2"
    },
    "10418": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4329,
        4348
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10419": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4329,
        4348
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "10421": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4329,
        4348
      ],
      "op": "DUP8",
      "path": "2"
    },
    "10422": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4329,
        4348
      ],
      "op": "GAS",
      "path": "2"
    },
    "10423": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4329,
        4348
      ],
      "op": "CALL",
      "path": "2"
    },
    "10424": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4329,
        4348
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "10425": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4329,
        4348
      ],
      "op": "DUP1",
      "path": "2"
    },
    "10426": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4329,
        4348
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "10427": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4329,
        4348
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x28C8"
    },
    "10430": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4329,
        4348
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "10431": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4329,
        4348
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "10432": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4329,
        4348
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "10434": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4329,
        4348
      ],
      "op": "DUP1",
      "path": "2"
    },
    "10435": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4329,
        4348
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "10436": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4329,
        4348
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "10437": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4329,
        4348
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "10439": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4329,
        4348
      ],
      "op": "REVERT",
      "path": "2"
    },
    "10440": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4329,
        4348
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10441": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4329,
        4348
      ],
      "op": "POP",
      "path": "2"
    },
    "10442": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4329,
        4348
      ],
      "op": "POP",
      "path": "2"
    },
    "10443": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4329,
        4348
      ],
      "op": "POP",
      "path": "2"
    },
    "10444": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4329,
        4348
      ],
      "op": "POP",
      "path": "2"
    },
    "10445": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4329,
        4348
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "10447": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4329,
        4348
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "10448": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4329,
        4348
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "10449": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4329,
        4348
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "10451": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4329,
        4348
      ],
      "op": "NOT",
      "path": "2"
    },
    "10452": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4329,
        4348
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "10454": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4329,
        4348
      ],
      "op": "DUP3",
      "path": "2"
    },
    "10455": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4329,
        4348
      ],
      "op": "ADD",
      "path": "2"
    },
    "10456": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4329,
        4348
      ],
      "op": "AND",
      "path": "2"
    },
    "10457": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4329,
        4348
      ],
      "op": "DUP3",
      "path": "2"
    },
    "10458": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4329,
        4348
      ],
      "op": "ADD",
      "path": "2"
    },
    "10459": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4329,
        4348
      ],
      "op": "DUP1",
      "path": "2"
    },
    "10460": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4329,
        4348
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "10462": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4329,
        4348
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10463": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4329,
        4348
      ],
      "op": "POP",
      "path": "2"
    },
    "10464": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4329,
        4348
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10465": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4329,
        4348
      ],
      "op": "ADD",
      "path": "2"
    },
    "10466": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4329,
        4348
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10467": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4329,
        4348
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x28EC"
    },
    "10470": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4329,
        4348
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "10471": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4329,
        4348
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10472": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4329,
        4348
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4CD8"
    },
    "10475": {
      "fn": "BaseLoot.castDF",
      "jump": "i",
      "offset": [
        4329,
        4348
      ],
      "op": "JUMP",
      "path": "2"
    },
    "10476": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4329,
        4348
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10477": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4308,
        4348
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10478": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4308,
        4348
      ],
      "op": "POP",
      "path": "2"
    },
    "10479": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4366,
        4377
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "10481": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4394,
        4403
      ],
      "op": "DUP5",
      "path": "2"
    },
    "10482": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4380,
        4385
      ],
      "op": "DUP3",
      "path": "2"
    },
    "10483": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4380,
        4391
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "10485": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4380,
        4391
      ],
      "op": "ADD",
      "path": "2"
    },
    "10486": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4380,
        4391
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "10487": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4380,
        4403
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2900"
    },
    "10490": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4380,
        4403
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "10491": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4380,
        4403
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10492": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4380,
        4403
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4DB0"
    },
    "10495": {
      "fn": "BaseLoot.castDF",
      "jump": "i",
      "offset": [
        4380,
        4403
      ],
      "op": "JUMP",
      "path": "2"
    },
    "10496": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4380,
        4403
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10497": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4448,
        4473
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "10499": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4448,
        4473
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "10500": {
      "op": "PUSH4",
      "value": "0xF7BDFED3"
    },
    "10505": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10507": {
      "op": "SHL"
    },
    "10508": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4448,
        4473
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10509": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4448,
        4473
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10510": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4448,
        4473
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "10512": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4448,
        4473
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10513": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4448,
        4473
      ],
      "op": "ADD",
      "path": "2"
    },
    "10514": {
      "op": "DUP14"
    },
    "10515": {
      "op": "SWAP1"
    },
    "10516": {
      "op": "MSTORE"
    },
    "10517": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4366,
        4403
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10518": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4366,
        4403
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "10519": {
      "op": "POP"
    },
    "10520": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4422,
        4445
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "10522": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4422,
        4445
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10523": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10525": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10527": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10529": {
      "op": "SHL"
    },
    "10530": {
      "op": "SUB"
    },
    "10531": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4448,
        4464
      ],
      "op": "DUP12",
      "path": "2"
    },
    "10532": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4448,
        4464
      ],
      "op": "AND",
      "path": "2"
    },
    "10533": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4448,
        4464
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10534": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4448,
        4464
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xF7BDFED3"
    },
    "10539": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4448,
        4464
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10540": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10542": {
      "op": "ADD"
    },
    "10543": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4448,
        4473
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xC0"
    },
    "10545": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4448,
        4473
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "10547": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4448,
        4473
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "10548": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4448,
        4473
      ],
      "op": "DUP1",
      "path": "2"
    },
    "10549": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4448,
        4473
      ],
      "op": "DUP4",
      "path": "2"
    },
    "10550": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4448,
        4473
      ],
      "op": "SUB",
      "path": "2"
    },
    "10551": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4448,
        4473
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10552": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4448,
        4473
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "10554": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4448,
        4473
      ],
      "op": "DUP8",
      "path": "2"
    },
    "10555": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4448,
        4473
      ],
      "op": "GAS",
      "path": "2"
    },
    "10556": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4448,
        4473
      ],
      "op": "CALL",
      "path": "2"
    },
    "10557": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4448,
        4473
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "10558": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4448,
        4473
      ],
      "op": "DUP1",
      "path": "2"
    },
    "10559": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4448,
        4473
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "10560": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4448,
        4473
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x294D"
    },
    "10563": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4448,
        4473
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "10564": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4448,
        4473
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "10565": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4448,
        4473
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "10567": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4448,
        4473
      ],
      "op": "DUP1",
      "path": "2"
    },
    "10568": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4448,
        4473
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "10569": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4448,
        4473
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "10570": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4448,
        4473
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "10572": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4448,
        4473
      ],
      "op": "REVERT",
      "path": "2"
    },
    "10573": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4448,
        4473
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10574": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4448,
        4473
      ],
      "op": "POP",
      "path": "2"
    },
    "10575": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4448,
        4473
      ],
      "op": "POP",
      "path": "2"
    },
    "10576": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4448,
        4473
      ],
      "op": "POP",
      "path": "2"
    },
    "10577": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4448,
        4473
      ],
      "op": "POP",
      "path": "2"
    },
    "10578": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4448,
        4473
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "10580": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4448,
        4473
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "10581": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4448,
        4473
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "10582": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4448,
        4473
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "10584": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4448,
        4473
      ],
      "op": "NOT",
      "path": "2"
    },
    "10585": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4448,
        4473
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "10587": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4448,
        4473
      ],
      "op": "DUP3",
      "path": "2"
    },
    "10588": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4448,
        4473
      ],
      "op": "ADD",
      "path": "2"
    },
    "10589": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4448,
        4473
      ],
      "op": "AND",
      "path": "2"
    },
    "10590": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4448,
        4473
      ],
      "op": "DUP3",
      "path": "2"
    },
    "10591": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4448,
        4473
      ],
      "op": "ADD",
      "path": "2"
    },
    "10592": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4448,
        4473
      ],
      "op": "DUP1",
      "path": "2"
    },
    "10593": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4448,
        4473
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "10595": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4448,
        4473
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10596": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4448,
        4473
      ],
      "op": "POP",
      "path": "2"
    },
    "10597": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4448,
        4473
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10598": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4448,
        4473
      ],
      "op": "ADD",
      "path": "2"
    },
    "10599": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4448,
        4473
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10600": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4448,
        4473
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2971"
    },
    "10603": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4448,
        4473
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "10604": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4448,
        4473
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10605": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4448,
        4473
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4E86"
    },
    "10608": {
      "fn": "BaseLoot.castDF",
      "jump": "i",
      "offset": [
        4448,
        4473
      ],
      "op": "JUMP",
      "path": "2"
    },
    "10609": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4448,
        4473
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10610": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4500,
        4506
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 72,
      "value": "0xFE"
    },
    "10612": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4500,
        4506
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "10613": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4527,
        4538
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "10615": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4527,
        4538
      ],
      "op": "DUP3",
      "path": "2"
    },
    "10616": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4527,
        4538
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10617": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4527,
        4538
      ],
      "op": "ADD",
      "path": "2"
    },
    "10618": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4527,
        4538
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "10619": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4500,
        4539
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10620": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4500,
        4539
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "10621": {
      "op": "PUSH4",
      "value": "0x43717931"
    },
    "10626": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10628": {
      "op": "SHL"
    },
    "10629": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4500,
        4539
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10630": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4500,
        4539
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10631": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4500,
        4539
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "10633": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4500,
        4539
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10634": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4500,
        4539
      ],
      "op": "ADD",
      "path": "2"
    },
    "10635": {
      "op": "DUP7"
    },
    "10636": {
      "op": "SWAP1"
    },
    "10637": {
      "op": "MSTORE"
    },
    "10638": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10640": {
      "op": "DUP2"
    },
    "10641": {
      "op": "ADD"
    },
    "10642": {
      "op": "SWAP2"
    },
    "10643": {
      "op": "SWAP1"
    },
    "10644": {
      "op": "SWAP2"
    },
    "10645": {
      "op": "MSTORE"
    },
    "10646": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4527,
        4538
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "10647": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4527,
        4538
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "10648": {
      "op": "POP"
    },
    "10649": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10651": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10653": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10655": {
      "op": "SHL"
    },
    "10656": {
      "op": "SUB"
    },
    "10657": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4500,
        4506
      ],
      "op": "AND",
      "path": "2"
    },
    "10658": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4500,
        4506
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10659": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4500,
        4518
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x43717931"
    },
    "10664": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4500,
        4518
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10665": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "10667": {
      "op": "ADD"
    },
    "10668": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4500,
        4539
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "10670": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4500,
        4539
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "10672": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4500,
        4539
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "10673": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4500,
        4539
      ],
      "op": "DUP1",
      "path": "2"
    },
    "10674": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4500,
        4539
      ],
      "op": "DUP4",
      "path": "2"
    },
    "10675": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4500,
        4539
      ],
      "op": "SUB",
      "path": "2"
    },
    "10676": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4500,
        4539
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10677": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4500,
        4539
      ],
      "op": "DUP7",
      "path": "2"
    },
    "10678": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4500,
        4539
      ],
      "op": "GAS",
      "path": "2"
    },
    "10679": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4500,
        4539
      ],
      "op": "STATICCALL",
      "path": "2"
    },
    "10680": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4500,
        4539
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "10681": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4500,
        4539
      ],
      "op": "DUP1",
      "path": "2"
    },
    "10682": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4500,
        4539
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "10683": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4500,
        4539
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x29C8"
    },
    "10686": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4500,
        4539
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "10687": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4500,
        4539
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "10688": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4500,
        4539
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "10690": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4500,
        4539
      ],
      "op": "DUP1",
      "path": "2"
    },
    "10691": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4500,
        4539
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "10692": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4500,
        4539
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "10693": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4500,
        4539
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "10695": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4500,
        4539
      ],
      "op": "REVERT",
      "path": "2"
    },
    "10696": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4500,
        4539
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10697": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4500,
        4539
      ],
      "op": "POP",
      "path": "2"
    },
    "10698": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4500,
        4539
      ],
      "op": "POP",
      "path": "2"
    },
    "10699": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4500,
        4539
      ],
      "op": "POP",
      "path": "2"
    },
    "10700": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4500,
        4539
      ],
      "op": "POP",
      "path": "2"
    },
    "10701": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4500,
        4539
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "10703": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4500,
        4539
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "10704": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4500,
        4539
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "10705": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4500,
        4539
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "10707": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4500,
        4539
      ],
      "op": "NOT",
      "path": "2"
    },
    "10708": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4500,
        4539
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "10710": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4500,
        4539
      ],
      "op": "DUP3",
      "path": "2"
    },
    "10711": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4500,
        4539
      ],
      "op": "ADD",
      "path": "2"
    },
    "10712": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4500,
        4539
      ],
      "op": "AND",
      "path": "2"
    },
    "10713": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4500,
        4539
      ],
      "op": "DUP3",
      "path": "2"
    },
    "10714": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4500,
        4539
      ],
      "op": "ADD",
      "path": "2"
    },
    "10715": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4500,
        4539
      ],
      "op": "DUP1",
      "path": "2"
    },
    "10716": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4500,
        4539
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "10718": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4500,
        4539
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10719": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4500,
        4539
      ],
      "op": "POP",
      "path": "2"
    },
    "10720": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4500,
        4539
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10721": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4500,
        4539
      ],
      "op": "ADD",
      "path": "2"
    },
    "10722": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4500,
        4539
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10723": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4500,
        4539
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x29EC"
    },
    "10726": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4500,
        4539
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "10727": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4500,
        4539
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10728": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4500,
        4539
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4E24"
    },
    "10731": {
      "fn": "BaseLoot.castDF",
      "jump": "i",
      "offset": [
        4500,
        4539
      ],
      "op": "JUMP",
      "path": "2"
    },
    "10732": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4500,
        4539
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10733": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4491,
        4539
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "10734": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4491,
        4539
      ],
      "op": "POP",
      "path": "2"
    },
    "10735": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4551,
        4557
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 73,
      "value": "0xFE"
    },
    "10737": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4551,
        4557
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "10739": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4551,
        4557
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10740": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4551,
        4557
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "10741": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4551,
        4557
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10742": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4551,
        4557
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "10745": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4551,
        4557
      ],
      "op": "EXP",
      "path": "2"
    },
    "10746": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4551,
        4557
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10747": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4551,
        4557
      ],
      "op": "DIV",
      "path": "2"
    },
    "10748": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10750": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10752": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10754": {
      "op": "SHL"
    },
    "10755": {
      "op": "SUB"
    },
    "10756": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4551,
        4557
      ],
      "op": "AND",
      "path": "2"
    },
    "10757": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10759": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10761": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10763": {
      "op": "SHL"
    },
    "10764": {
      "op": "SUB"
    },
    "10765": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4551,
        4565
      ],
      "op": "AND",
      "path": "2"
    },
    "10766": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4551,
        4565
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x7DF55498"
    },
    "10771": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4566,
        4571
      ],
      "op": "DUP16",
      "path": "2"
    },
    "10772": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4573,
        4580
      ],
      "op": "DUP15",
      "path": "2"
    },
    "10773": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4551,
        4581
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "10775": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4551,
        4581
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "10776": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4551,
        4581
      ],
      "op": "DUP4",
      "path": "2"
    },
    "10777": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4551,
        4581
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xFFFFFFFF"
    },
    "10782": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4551,
        4581
      ],
      "op": "AND",
      "path": "2"
    },
    "10783": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4551,
        4581
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE0"
    },
    "10785": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4551,
        4581
      ],
      "op": "SHL",
      "path": "2"
    },
    "10786": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4551,
        4581
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10787": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4551,
        4581
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10788": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4551,
        4581
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "10790": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4551,
        4581
      ],
      "op": "ADD",
      "path": "2"
    },
    "10791": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4551,
        4581
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2A45"
    },
    "10794": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4551,
        4581
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "10795": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4551,
        4581
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "10796": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4551,
        4581
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10797": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10799": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10801": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10803": {
      "op": "SHL"
    },
    "10804": {
      "op": "SUB"
    },
    "10805": {
      "op": "SWAP3"
    },
    "10806": {
      "op": "SWAP1"
    },
    "10807": {
      "op": "SWAP3"
    },
    "10808": {
      "op": "AND"
    },
    "10809": {
      "op": "DUP3"
    },
    "10810": {
      "op": "MSTORE"
    },
    "10811": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10813": {
      "op": "DUP3"
    },
    "10814": {
      "op": "ADD"
    },
    "10815": {
      "op": "MSTORE"
    },
    "10816": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10818": {
      "op": "ADD"
    },
    "10819": {
      "op": "SWAP1"
    },
    "10820": {
      "op": "JUMP"
    },
    "10821": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4551,
        4581
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10822": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4551,
        4581
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "10824": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4551,
        4581
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "10826": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4551,
        4581
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "10827": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4551,
        4581
      ],
      "op": "DUP1",
      "path": "2"
    },
    "10828": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4551,
        4581
      ],
      "op": "DUP4",
      "path": "2"
    },
    "10829": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4551,
        4581
      ],
      "op": "SUB",
      "path": "2"
    },
    "10830": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4551,
        4581
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10831": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4551,
        4581
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "10833": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4551,
        4581
      ],
      "op": "DUP8",
      "path": "2"
    },
    "10834": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4551,
        4581
      ],
      "op": "GAS",
      "path": "2"
    },
    "10835": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4551,
        4581
      ],
      "op": "CALL",
      "path": "2"
    },
    "10836": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4551,
        4581
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "10837": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4551,
        4581
      ],
      "op": "DUP1",
      "path": "2"
    },
    "10838": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4551,
        4581
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "10839": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4551,
        4581
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2A64"
    },
    "10842": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4551,
        4581
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "10843": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4551,
        4581
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "10844": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4551,
        4581
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "10846": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4551,
        4581
      ],
      "op": "DUP1",
      "path": "2"
    },
    "10847": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4551,
        4581
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "10848": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4551,
        4581
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "10849": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4551,
        4581
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "10851": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4551,
        4581
      ],
      "op": "REVERT",
      "path": "2"
    },
    "10852": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4551,
        4581
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10853": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4551,
        4581
      ],
      "op": "POP",
      "path": "2"
    },
    "10854": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4551,
        4581
      ],
      "op": "POP",
      "path": "2"
    },
    "10855": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4551,
        4581
      ],
      "op": "POP",
      "path": "2"
    },
    "10856": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4551,
        4581
      ],
      "op": "POP",
      "path": "2"
    },
    "10857": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4551,
        4581
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "10859": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4551,
        4581
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "10860": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4551,
        4581
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "10861": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4551,
        4581
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "10863": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4551,
        4581
      ],
      "op": "NOT",
      "path": "2"
    },
    "10864": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4551,
        4581
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "10866": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4551,
        4581
      ],
      "op": "DUP3",
      "path": "2"
    },
    "10867": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4551,
        4581
      ],
      "op": "ADD",
      "path": "2"
    },
    "10868": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4551,
        4581
      ],
      "op": "AND",
      "path": "2"
    },
    "10869": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4551,
        4581
      ],
      "op": "DUP3",
      "path": "2"
    },
    "10870": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4551,
        4581
      ],
      "op": "ADD",
      "path": "2"
    },
    "10871": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4551,
        4581
      ],
      "op": "DUP1",
      "path": "2"
    },
    "10872": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4551,
        4581
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "10874": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4551,
        4581
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10875": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4551,
        4581
      ],
      "op": "POP",
      "path": "2"
    },
    "10876": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4551,
        4581
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10877": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4551,
        4581
      ],
      "op": "ADD",
      "path": "2"
    },
    "10878": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4551,
        4581
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10879": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4551,
        4581
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2A88"
    },
    "10882": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4551,
        4581
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "10883": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4551,
        4581
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10884": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4551,
        4581
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4E24"
    },
    "10887": {
      "fn": "BaseLoot.castDF",
      "jump": "i",
      "offset": [
        4551,
        4581
      ],
      "op": "JUMP",
      "path": "2"
    },
    "10888": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4551,
        4581
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10889": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4543,
        4581
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "10890": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4543,
        4581
      ],
      "op": "POP",
      "path": "2"
    },
    "10891": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4660,
        4669
      ],
      "op": "PUSH8",
      "path": "2",
      "value": "0x6F05B59D3B20000"
    },
    "10900": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4652,
        4657
      ],
      "op": "DUP5",
      "path": "2"
    },
    "10901": {
      "branch": 199,
      "fn": "BaseLoot.castDF",
      "offset": [
        4652,
        4669
      ],
      "op": "GT",
      "path": "2"
    },
    "10902": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4649,
        4700
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "10903": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4649,
        4700
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2AA8"
    },
    "10906": {
      "branch": 199,
      "fn": "BaseLoot.castDF",
      "offset": [
        4649,
        4700
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "10907": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4685,
        4695
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 74,
      "value": "0x2AA5"
    },
    "10910": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4694,
        4695
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "10912": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4685,
        4691
      ],
      "op": "DUP4",
      "path": "2"
    },
    "10913": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4685,
        4695
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4EE4"
    },
    "10916": {
      "fn": "BaseLoot.castDF",
      "jump": "i",
      "offset": [
        4685,
        4695
      ],
      "op": "JUMP",
      "path": "2"
    },
    "10917": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4685,
        4695
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10918": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4676,
        4695
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "10919": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4676,
        4695
      ],
      "op": "POP",
      "path": "2"
    },
    "10920": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4649,
        4700
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10921": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4703,
        4709
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 75,
      "value": "0xFE"
    },
    "10923": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4703,
        4709
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "10924": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10926": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10928": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10930": {
      "op": "SHL"
    },
    "10931": {
      "op": "SUB"
    },
    "10932": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4703,
        4709
      ],
      "op": "AND",
      "path": "2"
    },
    "10933": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4703,
        4717
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x9DFE841"
    },
    "10938": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4718,
        4723
      ],
      "op": "DUP16",
      "path": "2"
    },
    "10939": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4725,
        4732
      ],
      "op": "DUP15",
      "path": "2"
    },
    "10940": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4734,
        4741
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2AC6"
    },
    "10943": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4740,
        4741
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "10945": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4734,
        4739
      ],
      "op": "DUP10",
      "path": "2"
    },
    "10946": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4734,
        4741
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4EE4"
    },
    "10949": {
      "fn": "BaseLoot.castDF",
      "jump": "i",
      "offset": [
        4734,
        4741
      ],
      "op": "JUMP",
      "path": "2"
    },
    "10950": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4734,
        4741
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10951": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4703,
        4742
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "10953": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4703,
        4742
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "10954": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4703,
        4742
      ],
      "op": "DUP5",
      "path": "2"
    },
    "10955": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4703,
        4742
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xFFFFFFFF"
    },
    "10960": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4703,
        4742
      ],
      "op": "AND",
      "path": "2"
    },
    "10961": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4703,
        4742
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE0"
    },
    "10963": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4703,
        4742
      ],
      "op": "SHL",
      "path": "2"
    },
    "10964": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4703,
        4742
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10965": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4703,
        4742
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10966": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4703,
        4742
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "10968": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4703,
        4742
      ],
      "op": "ADD",
      "path": "2"
    },
    "10969": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4703,
        4742
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2AE4"
    },
    "10972": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4703,
        4742
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "10973": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4703,
        4742
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "10974": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4703,
        4742
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "10975": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4703,
        4742
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10976": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4703,
        4742
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4C51"
    },
    "10979": {
      "fn": "BaseLoot.castDF",
      "jump": "i",
      "offset": [
        4703,
        4742
      ],
      "op": "JUMP",
      "path": "2"
    },
    "10980": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4703,
        4742
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10981": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4703,
        4742
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "10983": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4703,
        4742
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "10985": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4703,
        4742
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "10986": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4703,
        4742
      ],
      "op": "DUP1",
      "path": "2"
    },
    "10987": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4703,
        4742
      ],
      "op": "DUP4",
      "path": "2"
    },
    "10988": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4703,
        4742
      ],
      "op": "SUB",
      "path": "2"
    },
    "10989": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4703,
        4742
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10990": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4703,
        4742
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "10992": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4703,
        4742
      ],
      "op": "DUP8",
      "path": "2"
    },
    "10993": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4703,
        4742
      ],
      "op": "DUP1",
      "path": "2"
    },
    "10994": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4703,
        4742
      ],
      "op": "EXTCODESIZE",
      "path": "2"
    },
    "10995": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4703,
        4742
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "10996": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4703,
        4742
      ],
      "op": "DUP1",
      "path": "2"
    },
    "10997": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4703,
        4742
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "10998": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4703,
        4742
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2AFE"
    },
    "11001": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4703,
        4742
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "11002": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4703,
        4742
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "11004": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4703,
        4742
      ],
      "op": "DUP1",
      "path": "2"
    },
    "11005": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4703,
        4742
      ],
      "op": "REVERT",
      "path": "2"
    },
    "11006": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4703,
        4742
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11007": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4703,
        4742
      ],
      "op": "POP",
      "path": "2"
    },
    "11008": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4703,
        4742
      ],
      "op": "GAS",
      "path": "2"
    },
    "11009": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4703,
        4742
      ],
      "op": "CALL",
      "path": "2"
    },
    "11010": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4703,
        4742
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "11011": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4703,
        4742
      ],
      "op": "DUP1",
      "path": "2"
    },
    "11012": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4703,
        4742
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "11013": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4703,
        4742
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2B12"
    },
    "11016": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4703,
        4742
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "11017": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4703,
        4742
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "11018": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4703,
        4742
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "11020": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4703,
        4742
      ],
      "op": "DUP1",
      "path": "2"
    },
    "11021": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4703,
        4742
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "11022": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4703,
        4742
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "11023": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4703,
        4742
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "11025": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4703,
        4742
      ],
      "op": "REVERT",
      "path": "2"
    },
    "11026": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4703,
        4742
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11027": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4703,
        4742
      ],
      "op": "POP",
      "path": "2"
    },
    "11028": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4703,
        4742
      ],
      "op": "POP",
      "path": "2"
    },
    "11029": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4703,
        4742
      ],
      "op": "POP",
      "path": "2"
    },
    "11030": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4703,
        4742
      ],
      "op": "POP",
      "path": "2"
    },
    "11031": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4760,
        4764
      ],
      "op": "DUP10",
      "path": "2",
      "statement": 76
    },
    "11032": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11034": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11036": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11038": {
      "op": "SHL"
    },
    "11039": {
      "op": "SUB"
    },
    "11040": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4760,
        4771
      ],
      "op": "AND",
      "path": "2"
    },
    "11041": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4760,
        4771
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x995B08FC"
    },
    "11046": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4772,
        4776
      ],
      "op": "DUP15",
      "path": "2"
    },
    "11047": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4778,
        4785
      ],
      "op": "DUP15",
      "path": "2"
    },
    "11048": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4787,
        4793
      ],
      "op": "DUP6",
      "path": "2"
    },
    "11049": {
      "offset": [
        3917,
        3923
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "11051": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4801,
        4806
      ],
      "op": "DUP9",
      "path": "2"
    },
    "11052": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4801,
        4813
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "11054": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4801,
        4813
      ],
      "op": "ADD",
      "path": "2"
    },
    "11055": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4801,
        4813
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "11056": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4760,
        4814
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "11058": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4760,
        4814
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "11059": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4760,
        4814
      ],
      "op": "DUP7",
      "path": "2"
    },
    "11060": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4760,
        4814
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xFFFFFFFF"
    },
    "11065": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4760,
        4814
      ],
      "op": "AND",
      "path": "2"
    },
    "11066": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4760,
        4814
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE0"
    },
    "11068": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4760,
        4814
      ],
      "op": "SHL",
      "path": "2"
    },
    "11069": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4760,
        4814
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11070": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4760,
        4814
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "11071": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4760,
        4814
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "11073": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4760,
        4814
      ],
      "op": "ADD",
      "path": "2"
    },
    "11074": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4760,
        4814
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2B4F"
    },
    "11077": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4760,
        4814
      ],
      "op": "SWAP6",
      "path": "2"
    },
    "11078": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4760,
        4814
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "11079": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4760,
        4814
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "11080": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4760,
        4814
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "11081": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4760,
        4814
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "11082": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4760,
        4814
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11083": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4760,
        4814
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4BE9"
    },
    "11086": {
      "fn": "BaseLoot.castDF",
      "jump": "i",
      "offset": [
        4760,
        4814
      ],
      "op": "JUMP",
      "path": "2"
    },
    "11087": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4760,
        4814
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11088": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4760,
        4814
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "11090": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4760,
        4814
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "11092": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4760,
        4814
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "11093": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4760,
        4814
      ],
      "op": "DUP1",
      "path": "2"
    },
    "11094": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4760,
        4814
      ],
      "op": "DUP4",
      "path": "2"
    },
    "11095": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4760,
        4814
      ],
      "op": "SUB",
      "path": "2"
    },
    "11096": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4760,
        4814
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11097": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4760,
        4814
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "11099": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4760,
        4814
      ],
      "op": "DUP8",
      "path": "2"
    },
    "11100": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4760,
        4814
      ],
      "op": "DUP1",
      "path": "2"
    },
    "11101": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4760,
        4814
      ],
      "op": "EXTCODESIZE",
      "path": "2"
    },
    "11102": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4760,
        4814
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "11103": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4760,
        4814
      ],
      "op": "DUP1",
      "path": "2"
    },
    "11104": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4760,
        4814
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "11105": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4760,
        4814
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2B69"
    },
    "11108": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4760,
        4814
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "11109": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4760,
        4814
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "11111": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4760,
        4814
      ],
      "op": "DUP1",
      "path": "2"
    },
    "11112": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4760,
        4814
      ],
      "op": "REVERT",
      "path": "2"
    },
    "11113": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4760,
        4814
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11114": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4760,
        4814
      ],
      "op": "POP",
      "path": "2"
    },
    "11115": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4760,
        4814
      ],
      "op": "GAS",
      "path": "2"
    },
    "11116": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4760,
        4814
      ],
      "op": "CALL",
      "path": "2"
    },
    "11117": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4760,
        4814
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "11118": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4760,
        4814
      ],
      "op": "DUP1",
      "path": "2"
    },
    "11119": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4760,
        4814
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "11120": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4760,
        4814
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2B7D"
    },
    "11123": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4760,
        4814
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "11124": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4760,
        4814
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "11125": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4760,
        4814
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "11127": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4760,
        4814
      ],
      "op": "DUP1",
      "path": "2"
    },
    "11128": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4760,
        4814
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "11129": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4760,
        4814
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "11130": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4760,
        4814
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "11132": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4760,
        4814
      ],
      "op": "REVERT",
      "path": "2"
    },
    "11133": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4760,
        4814
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11134": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4760,
        4814
      ],
      "op": "POP",
      "path": "2"
    },
    "11135": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4760,
        4814
      ],
      "op": "POP",
      "path": "2"
    },
    "11136": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4760,
        4814
      ],
      "op": "POP",
      "path": "2"
    },
    "11137": {
      "fn": "BaseLoot.castDF",
      "offset": [
        4760,
        4814
      ],
      "op": "POP",
      "path": "2"
    },
    "11138": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3529,
        4825
      ],
      "op": "POP",
      "path": "2"
    },
    "11139": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3529,
        4825
      ],
      "op": "POP",
      "path": "2"
    },
    "11140": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3529,
        4825
      ],
      "op": "POP",
      "path": "2"
    },
    "11141": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3529,
        4825
      ],
      "op": "POP",
      "path": "2"
    },
    "11142": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3529,
        4825
      ],
      "op": "POP",
      "path": "2"
    },
    "11143": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3529,
        4825
      ],
      "op": "POP",
      "path": "2"
    },
    "11144": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3529,
        4825
      ],
      "op": "POP",
      "path": "2"
    },
    "11145": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3529,
        4825
      ],
      "op": "POP",
      "path": "2"
    },
    "11146": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3529,
        4825
      ],
      "op": "POP",
      "path": "2"
    },
    "11147": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3529,
        4825
      ],
      "op": "POP",
      "path": "2"
    },
    "11148": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3450,
        4825
      ],
      "op": "POP",
      "path": "2"
    },
    "11149": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3450,
        4825
      ],
      "op": "POP",
      "path": "2"
    },
    "11150": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3450,
        4825
      ],
      "op": "POP",
      "path": "2"
    },
    "11151": {
      "fn": "BaseLoot.castDF",
      "offset": [
        3450,
        4825
      ],
      "op": "POP",
      "path": "2"
    },
    "11152": {
      "fn": "BaseLoot.castDF",
      "jump": "o",
      "offset": [
        3450,
        4825
      ],
      "op": "JUMP",
      "path": "2"
    },
    "11153": {
      "fn": "ERC1155Upgradeable.setApprovalForAll",
      "offset": [
        3646,
        3801
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "11154": {
      "fn": "ERC1155Upgradeable.setApprovalForAll",
      "offset": [
        3741,
        3793
      ],
      "op": "PUSH2",
      "path": "32",
      "statement": 77,
      "value": "0x2B9C"
    },
    "11157": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        952,
        962
      ],
      "op": "CALLER",
      "path": "42"
    },
    "11158": {
      "fn": "ERC1155Upgradeable.setApprovalForAll",
      "offset": [
        3774,
        3782
      ],
      "op": "DUP4",
      "path": "32"
    },
    "11159": {
      "fn": "ERC1155Upgradeable.setApprovalForAll",
      "offset": [
        3784,
        3792
      ],
      "op": "DUP4",
      "path": "32"
    },
    "11160": {
      "fn": "ERC1155Upgradeable.setApprovalForAll",
      "offset": [
        3741,
        3759
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x3F18"
    },
    "11163": {
      "fn": "ERC1155Upgradeable.setApprovalForAll",
      "jump": "i",
      "offset": [
        3741,
        3793
      ],
      "op": "JUMP",
      "path": "32"
    },
    "11164": {
      "fn": "ERC1155Upgradeable.setApprovalForAll",
      "offset": [
        3741,
        3793
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "11165": {
      "fn": "ERC1155Upgradeable.setApprovalForAll",
      "offset": [
        3646,
        3801
      ],
      "op": "POP",
      "path": "32"
    },
    "11166": {
      "fn": "ERC1155Upgradeable.setApprovalForAll",
      "offset": [
        3646,
        3801
      ],
      "op": "POP",
      "path": "32"
    },
    "11167": {
      "fn": "ERC1155Upgradeable.setApprovalForAll",
      "jump": "o",
      "offset": [
        3646,
        3801
      ],
      "op": "JUMP",
      "path": "32"
    },
    "11168": {
      "fn": "BaseLoot.setLooted",
      "offset": [
        1515,
        1719
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11169": {
      "fn": "BaseLoot.setLooted",
      "offset": [
        1627,
        1630
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 78,
      "value": "0xFB"
    },
    "11171": {
      "fn": "BaseLoot.setLooted",
      "offset": [
        1627,
        1630
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "11172": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11174": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11176": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11178": {
      "op": "SHL"
    },
    "11179": {
      "op": "SUB"
    },
    "11180": {
      "fn": "BaseLoot.setLooted",
      "offset": [
        1627,
        1630
      ],
      "op": "AND",
      "path": "2"
    },
    "11181": {
      "fn": "BaseLoot.setLooted",
      "offset": [
        1613,
        1623
      ],
      "op": "CALLER",
      "path": "2"
    },
    "11182": {
      "fn": "BaseLoot.setLooted",
      "offset": [
        1613,
        1630
      ],
      "op": "EQ",
      "path": "2"
    },
    "11183": {
      "branch": 200,
      "fn": "BaseLoot.setLooted",
      "offset": [
        1613,
        1630
      ],
      "op": "DUP1",
      "path": "2"
    },
    "11184": {
      "fn": "BaseLoot.setLooted",
      "offset": [
        1613,
        1653
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2BC9"
    },
    "11187": {
      "branch": 200,
      "fn": "BaseLoot.setLooted",
      "offset": [
        1613,
        1653
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "11188": {
      "op": "POP"
    },
    "11189": {
      "fn": "BaseLoot.setLooted",
      "offset": [
        1642,
        1652
      ],
      "op": "CALLER",
      "path": "2"
    },
    "11190": {
      "fn": "BaseLoot.setLooted",
      "offset": [
        1634,
        1653
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "11192": {
      "fn": "BaseLoot.setLooted",
      "offset": [
        1634,
        1653
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11193": {
      "fn": "BaseLoot.setLooted",
      "offset": [
        1634,
        1653
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11194": {
      "fn": "BaseLoot.setLooted",
      "offset": [
        1634,
        1653
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "11195": {
      "fn": "BaseLoot.setLooted",
      "offset": [
        1634,
        1641
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "11198": {
      "fn": "BaseLoot.setLooted",
      "offset": [
        1634,
        1653
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "11200": {
      "fn": "BaseLoot.setLooted",
      "offset": [
        1634,
        1653
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "11201": {
      "fn": "BaseLoot.setLooted",
      "offset": [
        1634,
        1653
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "11203": {
      "fn": "BaseLoot.setLooted",
      "offset": [
        1634,
        1653
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11204": {
      "fn": "BaseLoot.setLooted",
      "offset": [
        1634,
        1653
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "11205": {
      "fn": "BaseLoot.setLooted",
      "offset": [
        1634,
        1653
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "11206": {
      "fn": "BaseLoot.setLooted",
      "offset": [
        1634,
        1653
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "11208": {
      "branch": 201,
      "fn": "BaseLoot.setLooted",
      "offset": [
        1634,
        1653
      ],
      "op": "AND",
      "path": "2"
    },
    "11209": {
      "fn": "BaseLoot.setLooted",
      "offset": [
        1613,
        1653
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11210": {
      "fn": "BaseLoot.setLooted",
      "offset": [
        1605,
        1680
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2C0E"
    },
    "11213": {
      "branch": 201,
      "fn": "BaseLoot.setLooted",
      "offset": [
        1605,
        1680
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "11214": {
      "fn": "BaseLoot.setLooted",
      "offset": [
        1605,
        1680
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "11216": {
      "fn": "BaseLoot.setLooted",
      "offset": [
        1605,
        1680
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "11217": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "11221": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "11223": {
      "op": "SHL"
    },
    "11224": {
      "fn": "BaseLoot.setLooted",
      "offset": [
        1605,
        1680
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11225": {
      "fn": "BaseLoot.setLooted",
      "offset": [
        1605,
        1680
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "11226": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11228": {
      "fn": "BaseLoot.setLooted",
      "offset": [
        1605,
        1680
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "11230": {
      "fn": "BaseLoot.setLooted",
      "offset": [
        1605,
        1680
      ],
      "op": "DUP3",
      "path": "2"
    },
    "11231": {
      "fn": "BaseLoot.setLooted",
      "offset": [
        1605,
        1680
      ],
      "op": "ADD",
      "path": "2"
    },
    "11232": {
      "op": "MSTORE"
    },
    "11233": {
      "op": "PUSH1",
      "value": "0x16"
    },
    "11235": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "11237": {
      "op": "DUP3"
    },
    "11238": {
      "op": "ADD"
    },
    "11239": {
      "op": "MSTORE"
    },
    "11240": {
      "op": "PUSH22",
      "value": "0x2CB7BA9031B0B73A1039B2BA103A3432903637B7BA17"
    },
    "11263": {
      "op": "PUSH1",
      "value": "0x51"
    },
    "11265": {
      "op": "SHL"
    },
    "11266": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "11268": {
      "op": "DUP3"
    },
    "11269": {
      "op": "ADD"
    },
    "11270": {
      "op": "MSTORE"
    },
    "11271": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "11273": {
      "op": "ADD"
    },
    "11274": {
      "fn": "BaseLoot.setLooted",
      "offset": [
        1605,
        1680
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x60F"
    },
    "11277": {
      "op": "JUMP"
    },
    "11278": {
      "fn": "BaseLoot.setLooted",
      "offset": [
        1605,
        1680
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11279": {
      "fn": "BaseLoot.setLooted",
      "offset": [
        1684,
        1698
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 79,
      "value": "0x0"
    },
    "11281": {
      "fn": "BaseLoot.setLooted",
      "offset": [
        1684,
        1698
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "11282": {
      "fn": "BaseLoot.setLooted",
      "offset": [
        1684,
        1698
      ],
      "op": "DUP4",
      "path": "2"
    },
    "11283": {
      "fn": "BaseLoot.setLooted",
      "offset": [
        1684,
        1698
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "11284": {
      "fn": "BaseLoot.setLooted",
      "offset": [
        1684,
        1692
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "11286": {
      "fn": "BaseLoot.setLooted",
      "offset": [
        1684,
        1698
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "11288": {
      "fn": "BaseLoot.setLooted",
      "offset": [
        1684,
        1698
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11289": {
      "fn": "BaseLoot.setLooted",
      "offset": [
        1684,
        1698
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11290": {
      "fn": "BaseLoot.setLooted",
      "offset": [
        1684,
        1698
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "11291": {
      "fn": "BaseLoot.setLooted",
      "offset": [
        1684,
        1698
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "11293": {
      "fn": "BaseLoot.setLooted",
      "offset": [
        1684,
        1698
      ],
      "op": "DUP1",
      "path": "2"
    },
    "11294": {
      "fn": "BaseLoot.setLooted",
      "offset": [
        1684,
        1698
      ],
      "op": "DUP6",
      "path": "2"
    },
    "11295": {
      "fn": "BaseLoot.setLooted",
      "offset": [
        1684,
        1698
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "11296": {
      "fn": "BaseLoot.setLooted",
      "offset": [
        1684,
        1707
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "11297": {
      "fn": "BaseLoot.setLooted",
      "offset": [
        1684,
        1707
      ],
      "op": "DUP6",
      "path": "2"
    },
    "11298": {
      "fn": "BaseLoot.setLooted",
      "offset": [
        1684,
        1707
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "11299": {
      "fn": "BaseLoot.setLooted",
      "offset": [
        1684,
        1707
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "11300": {
      "fn": "BaseLoot.setLooted",
      "offset": [
        1684,
        1707
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11301": {
      "fn": "BaseLoot.setLooted",
      "offset": [
        1684,
        1707
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "11302": {
      "fn": "BaseLoot.setLooted",
      "offset": [
        1684,
        1707
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "11303": {
      "fn": "BaseLoot.setLooted",
      "offset": [
        1684,
        1707
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "11304": {
      "fn": "BaseLoot.setLooted",
      "offset": [
        1684,
        1715
      ],
      "op": "DUP1",
      "path": "2"
    },
    "11305": {
      "fn": "BaseLoot.setLooted",
      "offset": [
        1684,
        1715
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "11306": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "11308": {
      "op": "NOT"
    },
    "11309": {
      "fn": "BaseLoot.setLooted",
      "offset": [
        1684,
        1715
      ],
      "op": "AND",
      "path": "2"
    },
    "11310": {
      "fn": "BaseLoot.setLooted",
      "offset": [
        1684,
        1715
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "11311": {
      "fn": "BaseLoot.setLooted",
      "offset": [
        1684,
        1715
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "11312": {
      "fn": "BaseLoot.setLooted",
      "offset": [
        1684,
        1715
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "11313": {
      "fn": "BaseLoot.setLooted",
      "offset": [
        1684,
        1715
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "11314": {
      "fn": "BaseLoot.setLooted",
      "offset": [
        1684,
        1715
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11315": {
      "fn": "BaseLoot.setLooted",
      "offset": [
        1684,
        1715
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "11316": {
      "fn": "BaseLoot.setLooted",
      "offset": [
        1684,
        1715
      ],
      "op": "OR",
      "path": "2"
    },
    "11317": {
      "fn": "BaseLoot.setLooted",
      "offset": [
        1684,
        1715
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11318": {
      "fn": "BaseLoot.setLooted",
      "offset": [
        1684,
        1715
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "11319": {
      "op": "POP"
    },
    "11320": {
      "fn": "BaseLoot.setLooted",
      "jump": "o",
      "offset": [
        1515,
        1719
      ],
      "op": "JUMP",
      "path": "2"
    },
    "11321": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6376,
        9208
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11322": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6481,
        6493
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2C41"
    },
    "11325": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6481,
        6493
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x43E4"
    },
    "11328": {
      "fn": "BaseLoot.activateAO",
      "jump": "i",
      "offset": [
        6481,
        6493
      ],
      "op": "JUMP",
      "path": "2"
    },
    "11329": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6481,
        6493
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11330": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6548,
        6566
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 80,
      "value": "0x40"
    },
    "11332": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6548,
        6566
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "11333": {
      "op": "PUSH4",
      "value": "0x31A9108F"
    },
    "11338": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "11340": {
      "op": "SHL"
    },
    "11341": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6548,
        6566
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11342": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6548,
        6566
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "11343": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6548,
        6566
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "11345": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6548,
        6566
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11346": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6548,
        6566
      ],
      "op": "ADD",
      "path": "2"
    },
    "11347": {
      "op": "DUP7"
    },
    "11348": {
      "op": "SWAP1"
    },
    "11349": {
      "op": "MSTORE"
    },
    "11350": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6516,
        6521
      ],
      "op": "DUP7",
      "path": "2"
    },
    "11351": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6516,
        6521
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11352": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6570,
        6580
      ],
      "op": "CALLER",
      "path": "2"
    },
    "11353": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6570,
        6580
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11354": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11356": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11358": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11360": {
      "op": "SHL"
    },
    "11361": {
      "op": "SUB"
    },
    "11362": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6548,
        6560
      ],
      "op": "DUP4",
      "path": "2"
    },
    "11363": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6548,
        6560
      ],
      "op": "AND",
      "path": "2"
    },
    "11364": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6548,
        6560
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11365": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6548,
        6560
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x6352211E"
    },
    "11370": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6548,
        6560
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11371": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "11373": {
      "op": "ADD"
    },
    "11374": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6548,
        6566
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "11376": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6548,
        6566
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "11378": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6548,
        6566
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "11379": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6548,
        6566
      ],
      "op": "DUP1",
      "path": "2"
    },
    "11380": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6548,
        6566
      ],
      "op": "DUP4",
      "path": "2"
    },
    "11381": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6548,
        6566
      ],
      "op": "SUB",
      "path": "2"
    },
    "11382": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6548,
        6566
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11383": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6548,
        6566
      ],
      "op": "DUP7",
      "path": "2"
    },
    "11384": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6548,
        6566
      ],
      "op": "GAS",
      "path": "2"
    },
    "11385": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6548,
        6566
      ],
      "op": "STATICCALL",
      "path": "2"
    },
    "11386": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6548,
        6566
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "11387": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6548,
        6566
      ],
      "op": "DUP1",
      "path": "2"
    },
    "11388": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6548,
        6566
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "11389": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6548,
        6566
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2C8A"
    },
    "11392": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6548,
        6566
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "11393": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6548,
        6566
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "11394": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6548,
        6566
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "11396": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6548,
        6566
      ],
      "op": "DUP1",
      "path": "2"
    },
    "11397": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6548,
        6566
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "11398": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6548,
        6566
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "11399": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6548,
        6566
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "11401": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6548,
        6566
      ],
      "op": "REVERT",
      "path": "2"
    },
    "11402": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6548,
        6566
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11403": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6548,
        6566
      ],
      "op": "POP",
      "path": "2"
    },
    "11404": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6548,
        6566
      ],
      "op": "POP",
      "path": "2"
    },
    "11405": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6548,
        6566
      ],
      "op": "POP",
      "path": "2"
    },
    "11406": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6548,
        6566
      ],
      "op": "POP",
      "path": "2"
    },
    "11407": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6548,
        6566
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "11409": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6548,
        6566
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "11410": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6548,
        6566
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "11411": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6548,
        6566
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "11413": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6548,
        6566
      ],
      "op": "NOT",
      "path": "2"
    },
    "11414": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6548,
        6566
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "11416": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6548,
        6566
      ],
      "op": "DUP3",
      "path": "2"
    },
    "11417": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6548,
        6566
      ],
      "op": "ADD",
      "path": "2"
    },
    "11418": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6548,
        6566
      ],
      "op": "AND",
      "path": "2"
    },
    "11419": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6548,
        6566
      ],
      "op": "DUP3",
      "path": "2"
    },
    "11420": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6548,
        6566
      ],
      "op": "ADD",
      "path": "2"
    },
    "11421": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6548,
        6566
      ],
      "op": "DUP1",
      "path": "2"
    },
    "11422": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6548,
        6566
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "11424": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6548,
        6566
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "11425": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6548,
        6566
      ],
      "op": "POP",
      "path": "2"
    },
    "11426": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6548,
        6566
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11427": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6548,
        6566
      ],
      "op": "ADD",
      "path": "2"
    },
    "11428": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6548,
        6566
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11429": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6548,
        6566
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2CAE"
    },
    "11432": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6548,
        6566
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "11433": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6548,
        6566
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11434": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6548,
        6566
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4C0C"
    },
    "11437": {
      "fn": "BaseLoot.activateAO",
      "jump": "i",
      "offset": [
        6548,
        6566
      ],
      "op": "JUMP",
      "path": "2"
    },
    "11438": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6548,
        6566
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11439": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11441": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11443": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11445": {
      "op": "SHL"
    },
    "11446": {
      "op": "SUB"
    },
    "11447": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6548,
        6580
      ],
      "op": "AND",
      "path": "2"
    },
    "11448": {
      "branch": 202,
      "fn": "BaseLoot.activateAO",
      "offset": [
        6548,
        6580
      ],
      "op": "EQ",
      "path": "2"
    },
    "11449": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6548,
        6603
      ],
      "op": "DUP1",
      "path": "2"
    },
    "11450": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6548,
        6603
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2CD3"
    },
    "11453": {
      "branch": 202,
      "fn": "BaseLoot.activateAO",
      "offset": [
        6548,
        6603
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "11454": {
      "op": "POP"
    },
    "11455": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6592,
        6602
      ],
      "op": "CALLER",
      "path": "2"
    },
    "11456": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6584,
        6603
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "11458": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6584,
        6603
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11459": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6584,
        6603
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11460": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6584,
        6603
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "11461": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6584,
        6591
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "11464": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6584,
        6603
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "11466": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6584,
        6603
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "11467": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6584,
        6603
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "11469": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6584,
        6603
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11470": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6584,
        6603
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "11471": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6584,
        6603
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "11472": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6584,
        6603
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "11474": {
      "branch": 203,
      "fn": "BaseLoot.activateAO",
      "offset": [
        6584,
        6603
      ],
      "op": "AND",
      "path": "2"
    },
    "11475": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6548,
        6603
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11476": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6540,
        6626
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2CEF"
    },
    "11479": {
      "branch": 203,
      "fn": "BaseLoot.activateAO",
      "offset": [
        6540,
        6626
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "11480": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6540,
        6626
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "11482": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6540,
        6626
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "11483": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "11487": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "11489": {
      "op": "SHL"
    },
    "11490": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6540,
        6626
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11491": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6540,
        6626
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "11492": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6540,
        6626
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "11494": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6540,
        6626
      ],
      "op": "ADD",
      "path": "2"
    },
    "11495": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6540,
        6626
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x60F"
    },
    "11498": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6540,
        6626
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11499": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6540,
        6626
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4C72"
    },
    "11502": {
      "fn": "BaseLoot.activateAO",
      "jump": "i",
      "offset": [
        6540,
        6626
      ],
      "op": "JUMP",
      "path": "2"
    },
    "11503": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6540,
        6626
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11504": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6651,
        6670
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "11506": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6651,
        6670
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "11507": {
      "op": "PUSH4",
      "value": "0x7B303965"
    },
    "11512": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "11514": {
      "op": "SHL"
    },
    "11515": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6651,
        6670
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11516": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6651,
        6670
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "11517": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6651,
        6670
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "11519": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6651,
        6670
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11520": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6651,
        6670
      ],
      "op": "ADD",
      "path": "2"
    },
    "11521": {
      "op": "DUP8"
    },
    "11522": {
      "op": "SWAP1"
    },
    "11523": {
      "op": "MSTORE"
    },
    "11524": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6630,
        6648
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "11526": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6630,
        6648
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11527": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11529": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11531": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11533": {
      "op": "SHL"
    },
    "11534": {
      "op": "SUB"
    },
    "11535": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6651,
        6664
      ],
      "op": "DUP4",
      "path": "2"
    },
    "11536": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6651,
        6664
      ],
      "op": "AND",
      "path": "2"
    },
    "11537": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6651,
        6664
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11538": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6651,
        6664
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x7B303965"
    },
    "11543": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6651,
        6664
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11544": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "11546": {
      "op": "ADD"
    },
    "11547": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6651,
        6670
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xC0"
    },
    "11549": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6651,
        6670
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "11551": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6651,
        6670
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "11552": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6651,
        6670
      ],
      "op": "DUP1",
      "path": "2"
    },
    "11553": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6651,
        6670
      ],
      "op": "DUP4",
      "path": "2"
    },
    "11554": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6651,
        6670
      ],
      "op": "SUB",
      "path": "2"
    },
    "11555": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6651,
        6670
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11556": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6651,
        6670
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "11558": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6651,
        6670
      ],
      "op": "DUP8",
      "path": "2"
    },
    "11559": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6651,
        6670
      ],
      "op": "GAS",
      "path": "2"
    },
    "11560": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6651,
        6670
      ],
      "op": "CALL",
      "path": "2"
    },
    "11561": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6651,
        6670
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "11562": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6651,
        6670
      ],
      "op": "DUP1",
      "path": "2"
    },
    "11563": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6651,
        6670
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "11564": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6651,
        6670
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2D39"
    },
    "11567": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6651,
        6670
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "11568": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6651,
        6670
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "11569": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6651,
        6670
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "11571": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6651,
        6670
      ],
      "op": "DUP1",
      "path": "2"
    },
    "11572": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6651,
        6670
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "11573": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6651,
        6670
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "11574": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6651,
        6670
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "11576": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6651,
        6670
      ],
      "op": "REVERT",
      "path": "2"
    },
    "11577": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6651,
        6670
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11578": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6651,
        6670
      ],
      "op": "POP",
      "path": "2"
    },
    "11579": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6651,
        6670
      ],
      "op": "POP",
      "path": "2"
    },
    "11580": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6651,
        6670
      ],
      "op": "POP",
      "path": "2"
    },
    "11581": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6651,
        6670
      ],
      "op": "POP",
      "path": "2"
    },
    "11582": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6651,
        6670
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "11584": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6651,
        6670
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "11585": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6651,
        6670
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "11586": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6651,
        6670
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "11588": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6651,
        6670
      ],
      "op": "NOT",
      "path": "2"
    },
    "11589": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6651,
        6670
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "11591": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6651,
        6670
      ],
      "op": "DUP3",
      "path": "2"
    },
    "11592": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6651,
        6670
      ],
      "op": "ADD",
      "path": "2"
    },
    "11593": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6651,
        6670
      ],
      "op": "AND",
      "path": "2"
    },
    "11594": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6651,
        6670
      ],
      "op": "DUP3",
      "path": "2"
    },
    "11595": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6651,
        6670
      ],
      "op": "ADD",
      "path": "2"
    },
    "11596": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6651,
        6670
      ],
      "op": "DUP1",
      "path": "2"
    },
    "11597": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6651,
        6670
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "11599": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6651,
        6670
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "11600": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6651,
        6670
      ],
      "op": "POP",
      "path": "2"
    },
    "11601": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6651,
        6670
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11602": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6651,
        6670
      ],
      "op": "ADD",
      "path": "2"
    },
    "11603": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6651,
        6670
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11604": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6651,
        6670
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2D5D"
    },
    "11607": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6651,
        6670
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "11608": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6651,
        6670
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11609": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6651,
        6670
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4CD8"
    },
    "11612": {
      "fn": "BaseLoot.activateAO",
      "jump": "i",
      "offset": [
        6651,
        6670
      ],
      "op": "JUMP",
      "path": "2"
    },
    "11613": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6651,
        6670
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11614": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6679,
        6717
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "11616": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6679,
        6717
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "11617": {
      "op": "PUSH4",
      "value": "0x1554EE07"
    },
    "11622": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "11624": {
      "op": "SHL"
    },
    "11625": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6679,
        6717
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11626": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6679,
        6717
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "11627": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6679,
        6717
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "11629": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6679,
        6717
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11630": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6679,
        6717
      ],
      "op": "ADD",
      "path": "2"
    },
    "11631": {
      "op": "DUP10"
    },
    "11632": {
      "op": "SWAP1"
    },
    "11633": {
      "op": "MSTORE"
    },
    "11634": {
      "offset": [
        1547,
        1548
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "11636": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "11638": {
      "op": "DUP3"
    },
    "11639": {
      "op": "ADD"
    },
    "11640": {
      "op": "MSTORE"
    },
    "11641": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "11643": {
      "op": "DUP2"
    },
    "11644": {
      "op": "ADD"
    },
    "11645": {
      "op": "DUP7"
    },
    "11646": {
      "op": "SWAP1"
    },
    "11647": {
      "op": "MSTORE"
    },
    "11648": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6630,
        6670
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11649": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6630,
        6670
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "11650": {
      "op": "POP"
    },
    "11651": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11653": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11655": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11657": {
      "op": "SHL"
    },
    "11658": {
      "op": "SUB"
    },
    "11659": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6679,
        6690
      ],
      "op": "DUP4",
      "path": "2"
    },
    "11660": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6679,
        6690
      ],
      "op": "AND",
      "path": "2"
    },
    "11661": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6679,
        6690
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11662": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6679,
        6690
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x5553B81C"
    },
    "11667": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6679,
        6690
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11668": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "11670": {
      "op": "ADD"
    },
    "11671": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6679,
        6717
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "11673": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6679,
        6717
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "11675": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6679,
        6717
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "11676": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6679,
        6717
      ],
      "op": "DUP1",
      "path": "2"
    },
    "11677": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6679,
        6717
      ],
      "op": "DUP4",
      "path": "2"
    },
    "11678": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6679,
        6717
      ],
      "op": "SUB",
      "path": "2"
    },
    "11679": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6679,
        6717
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11680": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6679,
        6717
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "11682": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6679,
        6717
      ],
      "op": "DUP8",
      "path": "2"
    },
    "11683": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6679,
        6717
      ],
      "op": "GAS",
      "path": "2"
    },
    "11684": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6679,
        6717
      ],
      "op": "CALL",
      "path": "2"
    },
    "11685": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6679,
        6717
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "11686": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6679,
        6717
      ],
      "op": "DUP1",
      "path": "2"
    },
    "11687": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6679,
        6717
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "11688": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6679,
        6717
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2DB5"
    },
    "11691": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6679,
        6717
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "11692": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6679,
        6717
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "11693": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6679,
        6717
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "11695": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6679,
        6717
      ],
      "op": "DUP1",
      "path": "2"
    },
    "11696": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6679,
        6717
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "11697": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6679,
        6717
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "11698": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6679,
        6717
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "11700": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6679,
        6717
      ],
      "op": "REVERT",
      "path": "2"
    },
    "11701": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6679,
        6717
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11702": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6679,
        6717
      ],
      "op": "POP",
      "path": "2"
    },
    "11703": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6679,
        6717
      ],
      "op": "POP",
      "path": "2"
    },
    "11704": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6679,
        6717
      ],
      "op": "POP",
      "path": "2"
    },
    "11705": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6679,
        6717
      ],
      "op": "POP",
      "path": "2"
    },
    "11706": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6679,
        6717
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "11708": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6679,
        6717
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "11709": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6679,
        6717
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "11710": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6679,
        6717
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "11712": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6679,
        6717
      ],
      "op": "NOT",
      "path": "2"
    },
    "11713": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6679,
        6717
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "11715": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6679,
        6717
      ],
      "op": "DUP3",
      "path": "2"
    },
    "11716": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6679,
        6717
      ],
      "op": "ADD",
      "path": "2"
    },
    "11717": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6679,
        6717
      ],
      "op": "AND",
      "path": "2"
    },
    "11718": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6679,
        6717
      ],
      "op": "DUP3",
      "path": "2"
    },
    "11719": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6679,
        6717
      ],
      "op": "ADD",
      "path": "2"
    },
    "11720": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6679,
        6717
      ],
      "op": "DUP1",
      "path": "2"
    },
    "11721": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6679,
        6717
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "11723": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6679,
        6717
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "11724": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6679,
        6717
      ],
      "op": "POP",
      "path": "2"
    },
    "11725": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6679,
        6717
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11726": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6679,
        6717
      ],
      "op": "ADD",
      "path": "2"
    },
    "11727": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6679,
        6717
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11728": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6679,
        6717
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2DD9"
    },
    "11731": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6679,
        6717
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "11732": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6679,
        6717
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11733": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6679,
        6717
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4BCC"
    },
    "11736": {
      "fn": "BaseLoot.activateAO",
      "jump": "i",
      "offset": [
        6679,
        6717
      ],
      "op": "JUMP",
      "path": "2"
    },
    "11737": {
      "branch": 204,
      "fn": "BaseLoot.activateAO",
      "offset": [
        6679,
        6717
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11738": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6675,
        6838
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2E55"
    },
    "11741": {
      "branch": 204,
      "fn": "BaseLoot.activateAO",
      "offset": [
        6675,
        6838
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "11742": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6725,
        6782
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 81,
      "value": "0x40"
    },
    "11744": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6725,
        6782
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "11745": {
      "op": "PUSH4",
      "value": "0x25B5E897"
    },
    "11750": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "11752": {
      "op": "SHL"
    },
    "11753": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6725,
        6782
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11754": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6725,
        6782
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "11755": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11757": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11759": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11761": {
      "op": "SHL"
    },
    "11762": {
      "op": "SUB"
    },
    "11763": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6725,
        6736
      ],
      "op": "DUP4",
      "path": "2"
    },
    "11764": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6725,
        6736
      ],
      "op": "AND",
      "path": "2"
    },
    "11765": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6725,
        6736
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11766": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6725,
        6736
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x4B6BD12E"
    },
    "11771": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6725,
        6736
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11772": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6725,
        6782
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2E12"
    },
    "11775": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6725,
        6782
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11776": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6737,
        6741
      ],
      "op": "DUP11",
      "path": "2"
    },
    "11777": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6737,
        6741
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11778": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6743,
        6750
      ],
      "op": "DUP11",
      "path": "2"
    },
    "11779": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6743,
        6750
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11780": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6752,
        6756
      ],
      "op": "DUP11",
      "path": "2"
    },
    "11781": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6752,
        6756
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11782": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6758,
        6765
      ],
      "op": "DUP11",
      "path": "2"
    },
    "11783": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6758,
        6765
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11784": {
      "offset": [
        4438,
        4439
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x7"
    },
    "11786": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        4438,
        4439
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "11787": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6725,
        6782
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "11789": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6725,
        6782
      ],
      "op": "ADD",
      "path": "2"
    },
    "11790": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6725,
        6782
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4BE9"
    },
    "11793": {
      "fn": "BaseLoot.activateAO",
      "jump": "i",
      "offset": [
        6725,
        6782
      ],
      "op": "JUMP",
      "path": "2"
    },
    "11794": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6725,
        6782
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11795": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6725,
        6782
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "11797": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6725,
        6782
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "11799": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6725,
        6782
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "11800": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6725,
        6782
      ],
      "op": "DUP1",
      "path": "2"
    },
    "11801": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6725,
        6782
      ],
      "op": "DUP4",
      "path": "2"
    },
    "11802": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6725,
        6782
      ],
      "op": "SUB",
      "path": "2"
    },
    "11803": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6725,
        6782
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11804": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6725,
        6782
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "11806": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6725,
        6782
      ],
      "op": "DUP8",
      "path": "2"
    },
    "11807": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6725,
        6782
      ],
      "op": "DUP1",
      "path": "2"
    },
    "11808": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6725,
        6782
      ],
      "op": "EXTCODESIZE",
      "path": "2"
    },
    "11809": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6725,
        6782
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "11810": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6725,
        6782
      ],
      "op": "DUP1",
      "path": "2"
    },
    "11811": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6725,
        6782
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "11812": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6725,
        6782
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2E2C"
    },
    "11815": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6725,
        6782
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "11816": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6725,
        6782
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "11818": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6725,
        6782
      ],
      "op": "DUP1",
      "path": "2"
    },
    "11819": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6725,
        6782
      ],
      "op": "REVERT",
      "path": "2"
    },
    "11820": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6725,
        6782
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11821": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6725,
        6782
      ],
      "op": "POP",
      "path": "2"
    },
    "11822": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6725,
        6782
      ],
      "op": "GAS",
      "path": "2"
    },
    "11823": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6725,
        6782
      ],
      "op": "CALL",
      "path": "2"
    },
    "11824": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6725,
        6782
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "11825": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6725,
        6782
      ],
      "op": "DUP1",
      "path": "2"
    },
    "11826": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6725,
        6782
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "11827": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6725,
        6782
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2E40"
    },
    "11830": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6725,
        6782
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "11831": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6725,
        6782
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "11832": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6725,
        6782
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "11834": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6725,
        6782
      ],
      "op": "DUP1",
      "path": "2"
    },
    "11835": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6725,
        6782
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "11836": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6725,
        6782
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "11837": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6725,
        6782
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "11839": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6725,
        6782
      ],
      "op": "REVERT",
      "path": "2"
    },
    "11840": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6725,
        6782
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11841": {
      "op": "POP"
    },
    "11842": {
      "op": "POP"
    },
    "11843": {
      "offset": [
        4438,
        4439
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x7"
    },
    "11845": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6787,
        6799
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 82,
      "value": "0xA0"
    },
    "11847": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6787,
        6799
      ],
      "op": "DUP5",
      "path": "2"
    },
    "11848": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6787,
        6799
      ],
      "op": "ADD",
      "path": "2"
    },
    "11849": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6787,
        6816
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "11850": {
      "op": "POP"
    },
    "11851": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6787,
        6792
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11852": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6787,
        6792
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "11853": {
      "op": "POP"
    },
    "11854": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6821,
        6833
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 83,
      "value": "0x38ED"
    },
    "11857": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6821,
        6833
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "11858": {
      "op": "POP"
    },
    "11859": {
      "op": "POP"
    },
    "11860": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6821,
        6833
      ],
      "op": "JUMP",
      "path": "2"
    },
    "11861": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6675,
        6838
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11862": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6888,
        6904
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "11864": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6888,
        6904
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "11865": {
      "op": "PUSH4",
      "value": "0x43E8C3F7"
    },
    "11870": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "11872": {
      "op": "SHL"
    },
    "11873": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6888,
        6904
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11874": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6888,
        6904
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "11875": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6888,
        6904
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "11877": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6888,
        6904
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11878": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6888,
        6904
      ],
      "op": "ADD",
      "path": "2"
    },
    "11879": {
      "op": "DUP9"
    },
    "11880": {
      "op": "SWAP1"
    },
    "11881": {
      "op": "MSTORE"
    },
    "11882": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6857,
        6868
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "11884": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6857,
        6868
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11885": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6857,
        6868
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11886": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6857,
        6868
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11887": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11889": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11891": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11893": {
      "op": "SHL"
    },
    "11894": {
      "op": "SUB"
    },
    "11895": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6888,
        6898
      ],
      "op": "DUP6",
      "path": "2"
    },
    "11896": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6888,
        6898
      ],
      "op": "AND",
      "path": "2"
    },
    "11897": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6888,
        6898
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11898": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6888,
        6898
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x87D187EE"
    },
    "11903": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6888,
        6898
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11904": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "11906": {
      "op": "ADD"
    },
    "11907": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6888,
        6904
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "11909": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6888,
        6904
      ],
      "op": "DUP1",
      "path": "2"
    },
    "11910": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6888,
        6904
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "11911": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6888,
        6904
      ],
      "op": "DUP1",
      "path": "2"
    },
    "11912": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6888,
        6904
      ],
      "op": "DUP4",
      "path": "2"
    },
    "11913": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6888,
        6904
      ],
      "op": "SUB",
      "path": "2"
    },
    "11914": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6888,
        6904
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11915": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6888,
        6904
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "11917": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6888,
        6904
      ],
      "op": "DUP8",
      "path": "2"
    },
    "11918": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6888,
        6904
      ],
      "op": "GAS",
      "path": "2"
    },
    "11919": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6888,
        6904
      ],
      "op": "CALL",
      "path": "2"
    },
    "11920": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6888,
        6904
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "11921": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6888,
        6904
      ],
      "op": "DUP1",
      "path": "2"
    },
    "11922": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6888,
        6904
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "11923": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6888,
        6904
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2EA0"
    },
    "11926": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6888,
        6904
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "11927": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6888,
        6904
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "11928": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6888,
        6904
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "11930": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6888,
        6904
      ],
      "op": "DUP1",
      "path": "2"
    },
    "11931": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6888,
        6904
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "11932": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6888,
        6904
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "11933": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6888,
        6904
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "11935": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6888,
        6904
      ],
      "op": "REVERT",
      "path": "2"
    },
    "11936": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6888,
        6904
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11937": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6888,
        6904
      ],
      "op": "POP",
      "path": "2"
    },
    "11938": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6888,
        6904
      ],
      "op": "POP",
      "path": "2"
    },
    "11939": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6888,
        6904
      ],
      "op": "POP",
      "path": "2"
    },
    "11940": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6888,
        6904
      ],
      "op": "POP",
      "path": "2"
    },
    "11941": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6888,
        6904
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "11943": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6888,
        6904
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "11944": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6888,
        6904
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "11945": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6888,
        6904
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "11947": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6888,
        6904
      ],
      "op": "NOT",
      "path": "2"
    },
    "11948": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6888,
        6904
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "11950": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6888,
        6904
      ],
      "op": "DUP3",
      "path": "2"
    },
    "11951": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6888,
        6904
      ],
      "op": "ADD",
      "path": "2"
    },
    "11952": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6888,
        6904
      ],
      "op": "AND",
      "path": "2"
    },
    "11953": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6888,
        6904
      ],
      "op": "DUP3",
      "path": "2"
    },
    "11954": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6888,
        6904
      ],
      "op": "ADD",
      "path": "2"
    },
    "11955": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6888,
        6904
      ],
      "op": "DUP1",
      "path": "2"
    },
    "11956": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6888,
        6904
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "11958": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6888,
        6904
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "11959": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6888,
        6904
      ],
      "op": "POP",
      "path": "2"
    },
    "11960": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6888,
        6904
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11961": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6888,
        6904
      ],
      "op": "ADD",
      "path": "2"
    },
    "11962": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6888,
        6904
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11963": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6888,
        6904
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2EC4"
    },
    "11966": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6888,
        6904
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "11967": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6888,
        6904
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11968": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6888,
        6904
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4BA8"
    },
    "11971": {
      "fn": "BaseLoot.activateAO",
      "jump": "i",
      "offset": [
        6888,
        6904
      ],
      "op": "JUMP",
      "path": "2"
    },
    "11972": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6888,
        6904
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11973": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6856,
        6904
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "11974": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6856,
        6904
      ],
      "op": "POP",
      "path": "2"
    },
    "11975": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6856,
        6904
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "11976": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6856,
        6904
      ],
      "op": "POP",
      "path": "2"
    },
    "11977": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6923,
        6933
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "11979": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6935,
        6946
      ],
      "op": "DUP1",
      "path": "2"
    },
    "11980": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6950,
        6954
      ],
      "op": "DUP6",
      "path": "2"
    },
    "11981": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11983": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11985": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11987": {
      "op": "SHL"
    },
    "11988": {
      "op": "SUB"
    },
    "11989": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6950,
        6960
      ],
      "op": "AND",
      "path": "2"
    },
    "11990": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6950,
        6960
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x87D187EE"
    },
    "11995": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6961,
        6968
      ],
      "op": "DUP12",
      "path": "2"
    },
    "11996": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6950,
        6969
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "11998": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6950,
        6969
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "11999": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6950,
        6969
      ],
      "op": "DUP3",
      "path": "2"
    },
    "12000": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6950,
        6969
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xFFFFFFFF"
    },
    "12005": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6950,
        6969
      ],
      "op": "AND",
      "path": "2"
    },
    "12006": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6950,
        6969
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE0"
    },
    "12008": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6950,
        6969
      ],
      "op": "SHL",
      "path": "2"
    },
    "12009": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6950,
        6969
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12010": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6950,
        6969
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "12011": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6950,
        6969
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "12013": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6950,
        6969
      ],
      "op": "ADD",
      "path": "2"
    },
    "12014": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6950,
        6969
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2EF9"
    },
    "12017": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6950,
        6969
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "12018": {
      "op": "DUP2"
    },
    "12019": {
      "op": "MSTORE"
    },
    "12020": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12022": {
      "op": "ADD"
    },
    "12023": {
      "op": "SWAP1"
    },
    "12024": {
      "op": "JUMP"
    },
    "12025": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6950,
        6969
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "12026": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6950,
        6969
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "12028": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6950,
        6969
      ],
      "op": "DUP1",
      "path": "2"
    },
    "12029": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6950,
        6969
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "12030": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6950,
        6969
      ],
      "op": "DUP1",
      "path": "2"
    },
    "12031": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6950,
        6969
      ],
      "op": "DUP4",
      "path": "2"
    },
    "12032": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6950,
        6969
      ],
      "op": "SUB",
      "path": "2"
    },
    "12033": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6950,
        6969
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12034": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6950,
        6969
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "12036": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6950,
        6969
      ],
      "op": "DUP8",
      "path": "2"
    },
    "12037": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6950,
        6969
      ],
      "op": "GAS",
      "path": "2"
    },
    "12038": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6950,
        6969
      ],
      "op": "CALL",
      "path": "2"
    },
    "12039": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6950,
        6969
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "12040": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6950,
        6969
      ],
      "op": "DUP1",
      "path": "2"
    },
    "12041": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6950,
        6969
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "12042": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6950,
        6969
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2F17"
    },
    "12045": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6950,
        6969
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "12046": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6950,
        6969
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "12047": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6950,
        6969
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "12049": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6950,
        6969
      ],
      "op": "DUP1",
      "path": "2"
    },
    "12050": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6950,
        6969
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "12051": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6950,
        6969
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "12052": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6950,
        6969
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "12054": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6950,
        6969
      ],
      "op": "REVERT",
      "path": "2"
    },
    "12055": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6950,
        6969
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "12056": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6950,
        6969
      ],
      "op": "POP",
      "path": "2"
    },
    "12057": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6950,
        6969
      ],
      "op": "POP",
      "path": "2"
    },
    "12058": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6950,
        6969
      ],
      "op": "POP",
      "path": "2"
    },
    "12059": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6950,
        6969
      ],
      "op": "POP",
      "path": "2"
    },
    "12060": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6950,
        6969
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "12062": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6950,
        6969
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "12063": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6950,
        6969
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "12064": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6950,
        6969
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "12066": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6950,
        6969
      ],
      "op": "NOT",
      "path": "2"
    },
    "12067": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6950,
        6969
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "12069": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6950,
        6969
      ],
      "op": "DUP3",
      "path": "2"
    },
    "12070": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6950,
        6969
      ],
      "op": "ADD",
      "path": "2"
    },
    "12071": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6950,
        6969
      ],
      "op": "AND",
      "path": "2"
    },
    "12072": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6950,
        6969
      ],
      "op": "DUP3",
      "path": "2"
    },
    "12073": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6950,
        6969
      ],
      "op": "ADD",
      "path": "2"
    },
    "12074": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6950,
        6969
      ],
      "op": "DUP1",
      "path": "2"
    },
    "12075": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6950,
        6969
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "12077": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6950,
        6969
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "12078": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6950,
        6969
      ],
      "op": "POP",
      "path": "2"
    },
    "12079": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6950,
        6969
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12080": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6950,
        6969
      ],
      "op": "ADD",
      "path": "2"
    },
    "12081": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6950,
        6969
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12082": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6950,
        6969
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2F3B"
    },
    "12085": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6950,
        6969
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "12086": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6950,
        6969
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12087": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6950,
        6969
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4BA8"
    },
    "12090": {
      "fn": "BaseLoot.activateAO",
      "jump": "i",
      "offset": [
        6950,
        6969
      ],
      "op": "JUMP",
      "path": "2"
    },
    "12091": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6950,
        6969
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "12092": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7004,
        7022
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "12094": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7004,
        7022
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "12095": {
      "op": "PUSH4",
      "value": "0x6573C787"
    },
    "12100": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "12102": {
      "op": "SHL"
    },
    "12103": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7004,
        7022
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12104": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7004,
        7022
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "12105": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7004,
        7022
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "12107": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7004,
        7022
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12108": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7004,
        7022
      ],
      "op": "ADD",
      "path": "2"
    },
    "12109": {
      "op": "DUP8"
    },
    "12110": {
      "op": "SWAP1"
    },
    "12111": {
      "op": "MSTORE"
    },
    "12112": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6922,
        6969
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "12113": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6922,
        6969
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "12114": {
      "op": "POP"
    },
    "12115": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6922,
        6969
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "12116": {
      "op": "POP"
    },
    "12117": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6987,
        7001
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "12119": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6987,
        7001
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12120": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12122": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12124": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12126": {
      "op": "SHL"
    },
    "12127": {
      "op": "SUB"
    },
    "12128": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7004,
        7014
      ],
      "op": "DUP9",
      "path": "2"
    },
    "12129": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7004,
        7014
      ],
      "op": "AND",
      "path": "2"
    },
    "12130": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7004,
        7014
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12131": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7004,
        7014
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x6573C787"
    },
    "12136": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7004,
        7014
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12137": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "12139": {
      "op": "ADD"
    },
    "12140": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7004,
        7022
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "12142": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7004,
        7022
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "12144": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7004,
        7022
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "12145": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7004,
        7022
      ],
      "op": "DUP1",
      "path": "2"
    },
    "12146": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7004,
        7022
      ],
      "op": "DUP4",
      "path": "2"
    },
    "12147": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7004,
        7022
      ],
      "op": "SUB",
      "path": "2"
    },
    "12148": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7004,
        7022
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12149": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7004,
        7022
      ],
      "op": "DUP7",
      "path": "2"
    },
    "12150": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7004,
        7022
      ],
      "op": "GAS",
      "path": "2"
    },
    "12151": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7004,
        7022
      ],
      "op": "STATICCALL",
      "path": "2"
    },
    "12152": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7004,
        7022
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "12153": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7004,
        7022
      ],
      "op": "DUP1",
      "path": "2"
    },
    "12154": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7004,
        7022
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "12155": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7004,
        7022
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2F88"
    },
    "12158": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7004,
        7022
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "12159": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7004,
        7022
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "12160": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7004,
        7022
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "12162": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7004,
        7022
      ],
      "op": "DUP1",
      "path": "2"
    },
    "12163": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7004,
        7022
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "12164": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7004,
        7022
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "12165": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7004,
        7022
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "12167": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7004,
        7022
      ],
      "op": "REVERT",
      "path": "2"
    },
    "12168": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7004,
        7022
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "12169": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7004,
        7022
      ],
      "op": "POP",
      "path": "2"
    },
    "12170": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7004,
        7022
      ],
      "op": "POP",
      "path": "2"
    },
    "12171": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7004,
        7022
      ],
      "op": "POP",
      "path": "2"
    },
    "12172": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7004,
        7022
      ],
      "op": "POP",
      "path": "2"
    },
    "12173": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7004,
        7022
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "12175": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7004,
        7022
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "12176": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7004,
        7022
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "12177": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7004,
        7022
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "12179": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7004,
        7022
      ],
      "op": "NOT",
      "path": "2"
    },
    "12180": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7004,
        7022
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "12182": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7004,
        7022
      ],
      "op": "DUP3",
      "path": "2"
    },
    "12183": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7004,
        7022
      ],
      "op": "ADD",
      "path": "2"
    },
    "12184": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7004,
        7022
      ],
      "op": "AND",
      "path": "2"
    },
    "12185": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7004,
        7022
      ],
      "op": "DUP3",
      "path": "2"
    },
    "12186": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7004,
        7022
      ],
      "op": "ADD",
      "path": "2"
    },
    "12187": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7004,
        7022
      ],
      "op": "DUP1",
      "path": "2"
    },
    "12188": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7004,
        7022
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "12190": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7004,
        7022
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "12191": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7004,
        7022
      ],
      "op": "POP",
      "path": "2"
    },
    "12192": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7004,
        7022
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12193": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7004,
        7022
      ],
      "op": "ADD",
      "path": "2"
    },
    "12194": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7004,
        7022
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12195": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7004,
        7022
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2FAC"
    },
    "12198": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7004,
        7022
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "12199": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7004,
        7022
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12200": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7004,
        7022
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4BCC"
    },
    "12203": {
      "fn": "BaseLoot.activateAO",
      "jump": "i",
      "offset": [
        7004,
        7022
      ],
      "op": "JUMP",
      "path": "2"
    },
    "12204": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7004,
        7022
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "12205": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7056,
        7073
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "12207": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7056,
        7073
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "12208": {
      "op": "PUSH4",
      "value": "0x6573C787"
    },
    "12213": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "12215": {
      "op": "SHL"
    },
    "12216": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7056,
        7073
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12217": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7056,
        7073
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "12218": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7056,
        7073
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "12220": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7056,
        7073
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12221": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7056,
        7073
      ],
      "op": "ADD",
      "path": "2"
    },
    "12222": {
      "op": "DUP6"
    },
    "12223": {
      "op": "SWAP1"
    },
    "12224": {
      "op": "MSTORE"
    },
    "12225": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6987,
        7022
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12226": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6987,
        7022
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "12227": {
      "op": "POP"
    },
    "12228": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7040,
        7053
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "12230": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7040,
        7053
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12231": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12233": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12235": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12237": {
      "op": "SHL"
    },
    "12238": {
      "op": "SUB"
    },
    "12239": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7056,
        7066
      ],
      "op": "DUP10",
      "path": "2"
    },
    "12240": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7056,
        7066
      ],
      "op": "AND",
      "path": "2"
    },
    "12241": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7056,
        7066
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12242": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7056,
        7066
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x6573C787"
    },
    "12247": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7056,
        7066
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12248": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "12250": {
      "op": "ADD"
    },
    "12251": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7056,
        7073
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "12253": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7056,
        7073
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "12255": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7056,
        7073
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "12256": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7056,
        7073
      ],
      "op": "DUP1",
      "path": "2"
    },
    "12257": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7056,
        7073
      ],
      "op": "DUP4",
      "path": "2"
    },
    "12258": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7056,
        7073
      ],
      "op": "SUB",
      "path": "2"
    },
    "12259": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7056,
        7073
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12260": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7056,
        7073
      ],
      "op": "DUP7",
      "path": "2"
    },
    "12261": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7056,
        7073
      ],
      "op": "GAS",
      "path": "2"
    },
    "12262": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7056,
        7073
      ],
      "op": "STATICCALL",
      "path": "2"
    },
    "12263": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7056,
        7073
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "12264": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7056,
        7073
      ],
      "op": "DUP1",
      "path": "2"
    },
    "12265": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7056,
        7073
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "12266": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7056,
        7073
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2FF7"
    },
    "12269": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7056,
        7073
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "12270": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7056,
        7073
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "12271": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7056,
        7073
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "12273": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7056,
        7073
      ],
      "op": "DUP1",
      "path": "2"
    },
    "12274": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7056,
        7073
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "12275": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7056,
        7073
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "12276": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7056,
        7073
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "12278": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7056,
        7073
      ],
      "op": "REVERT",
      "path": "2"
    },
    "12279": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7056,
        7073
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "12280": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7056,
        7073
      ],
      "op": "POP",
      "path": "2"
    },
    "12281": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7056,
        7073
      ],
      "op": "POP",
      "path": "2"
    },
    "12282": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7056,
        7073
      ],
      "op": "POP",
      "path": "2"
    },
    "12283": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7056,
        7073
      ],
      "op": "POP",
      "path": "2"
    },
    "12284": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7056,
        7073
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "12286": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7056,
        7073
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "12287": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7056,
        7073
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "12288": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7056,
        7073
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "12290": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7056,
        7073
      ],
      "op": "NOT",
      "path": "2"
    },
    "12291": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7056,
        7073
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "12293": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7056,
        7073
      ],
      "op": "DUP3",
      "path": "2"
    },
    "12294": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7056,
        7073
      ],
      "op": "ADD",
      "path": "2"
    },
    "12295": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7056,
        7073
      ],
      "op": "AND",
      "path": "2"
    },
    "12296": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7056,
        7073
      ],
      "op": "DUP3",
      "path": "2"
    },
    "12297": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7056,
        7073
      ],
      "op": "ADD",
      "path": "2"
    },
    "12298": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7056,
        7073
      ],
      "op": "DUP1",
      "path": "2"
    },
    "12299": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7056,
        7073
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "12301": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7056,
        7073
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "12302": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7056,
        7073
      ],
      "op": "POP",
      "path": "2"
    },
    "12303": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7056,
        7073
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12304": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7056,
        7073
      ],
      "op": "ADD",
      "path": "2"
    },
    "12305": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7056,
        7073
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12306": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7056,
        7073
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x301B"
    },
    "12309": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7056,
        7073
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "12310": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7056,
        7073
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12311": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7056,
        7073
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4BCC"
    },
    "12314": {
      "fn": "BaseLoot.activateAO",
      "jump": "i",
      "offset": [
        7056,
        7073
      ],
      "op": "JUMP",
      "path": "2"
    },
    "12315": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7056,
        7073
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "12316": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7040,
        7073
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12317": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7040,
        7073
      ],
      "op": "POP",
      "path": "2"
    },
    "12318": {
      "branch": 205,
      "fn": "BaseLoot.activateAO",
      "offset": [
        7082,
        7091
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12319": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7078,
        7205
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x30A0"
    },
    "12322": {
      "branch": 205,
      "fn": "BaseLoot.activateAO",
      "offset": [
        7078,
        7205
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "12323": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7098,
        7102
      ],
      "op": "DUP8",
      "path": "2",
      "statement": 84
    },
    "12324": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12326": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12328": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12330": {
      "op": "SHL"
    },
    "12331": {
      "op": "SUB"
    },
    "12332": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7098,
        7109
      ],
      "op": "AND",
      "path": "2"
    },
    "12333": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7098,
        7109
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x4B6BD12E"
    },
    "12338": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7110,
        7114
      ],
      "op": "DUP15",
      "path": "2"
    },
    "12339": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7116,
        7123
      ],
      "op": "DUP15",
      "path": "2"
    },
    "12340": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7125,
        7129
      ],
      "op": "DUP15",
      "path": "2"
    },
    "12341": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7131,
        7138
      ],
      "op": "DUP15",
      "path": "2"
    },
    "12342": {
      "offset": [
        4272,
        4273
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "12344": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7098,
        7152
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "12346": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7098,
        7152
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "12347": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7098,
        7152
      ],
      "op": "DUP7",
      "path": "2"
    },
    "12348": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7098,
        7152
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xFFFFFFFF"
    },
    "12353": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7098,
        7152
      ],
      "op": "AND",
      "path": "2"
    },
    "12354": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7098,
        7152
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE0"
    },
    "12356": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7098,
        7152
      ],
      "op": "SHL",
      "path": "2"
    },
    "12357": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7098,
        7152
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12358": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7098,
        7152
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "12359": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7098,
        7152
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "12361": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7098,
        7152
      ],
      "op": "ADD",
      "path": "2"
    },
    "12362": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7098,
        7152
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3057"
    },
    "12365": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7098,
        7152
      ],
      "op": "SWAP6",
      "path": "2"
    },
    "12366": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7098,
        7152
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "12367": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7098,
        7152
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "12368": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7098,
        7152
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "12369": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7098,
        7152
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "12370": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7098,
        7152
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12371": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7098,
        7152
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4BE9"
    },
    "12374": {
      "fn": "BaseLoot.activateAO",
      "jump": "i",
      "offset": [
        7098,
        7152
      ],
      "op": "JUMP",
      "path": "2"
    },
    "12375": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7098,
        7152
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "12376": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7098,
        7152
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "12378": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7098,
        7152
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "12380": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7098,
        7152
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "12381": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7098,
        7152
      ],
      "op": "DUP1",
      "path": "2"
    },
    "12382": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7098,
        7152
      ],
      "op": "DUP4",
      "path": "2"
    },
    "12383": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7098,
        7152
      ],
      "op": "SUB",
      "path": "2"
    },
    "12384": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7098,
        7152
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12385": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7098,
        7152
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "12387": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7098,
        7152
      ],
      "op": "DUP8",
      "path": "2"
    },
    "12388": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7098,
        7152
      ],
      "op": "DUP1",
      "path": "2"
    },
    "12389": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7098,
        7152
      ],
      "op": "EXTCODESIZE",
      "path": "2"
    },
    "12390": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7098,
        7152
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "12391": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7098,
        7152
      ],
      "op": "DUP1",
      "path": "2"
    },
    "12392": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7098,
        7152
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "12393": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7098,
        7152
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3071"
    },
    "12396": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7098,
        7152
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "12397": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7098,
        7152
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "12399": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7098,
        7152
      ],
      "op": "DUP1",
      "path": "2"
    },
    "12400": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7098,
        7152
      ],
      "op": "REVERT",
      "path": "2"
    },
    "12401": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7098,
        7152
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "12402": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7098,
        7152
      ],
      "op": "POP",
      "path": "2"
    },
    "12403": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7098,
        7152
      ],
      "op": "GAS",
      "path": "2"
    },
    "12404": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7098,
        7152
      ],
      "op": "CALL",
      "path": "2"
    },
    "12405": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7098,
        7152
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "12406": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7098,
        7152
      ],
      "op": "DUP1",
      "path": "2"
    },
    "12407": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7098,
        7152
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "12408": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7098,
        7152
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3085"
    },
    "12411": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7098,
        7152
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "12412": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7098,
        7152
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "12413": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7098,
        7152
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "12415": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7098,
        7152
      ],
      "op": "DUP1",
      "path": "2"
    },
    "12416": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7098,
        7152
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "12417": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7098,
        7152
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "12418": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7098,
        7152
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "12420": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7098,
        7152
      ],
      "op": "REVERT",
      "path": "2"
    },
    "12421": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7098,
        7152
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "12422": {
      "op": "POP"
    },
    "12423": {
      "op": "POP"
    },
    "12424": {
      "offset": [
        4272,
        4273
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "12426": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7157,
        7169
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 85,
      "value": "0xA0"
    },
    "12428": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7157,
        7169
      ],
      "op": "DUP11",
      "path": "2"
    },
    "12429": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7157,
        7169
      ],
      "op": "ADD",
      "path": "2"
    },
    "12430": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7157,
        7183
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "12431": {
      "op": "POP"
    },
    "12432": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7157,
        7162
      ],
      "op": "SWAP7",
      "path": "2"
    },
    "12433": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7157,
        7162
      ],
      "op": "SWAP9",
      "path": "2"
    },
    "12434": {
      "op": "POP"
    },
    "12435": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7188,
        7200
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 86,
      "value": "0x38ED"
    },
    "12438": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7188,
        7200
      ],
      "op": "SWAP8",
      "path": "2"
    },
    "12439": {
      "op": "POP"
    },
    "12440": {
      "op": "POP"
    },
    "12441": {
      "op": "POP"
    },
    "12442": {
      "op": "POP"
    },
    "12443": {
      "op": "POP"
    },
    "12444": {
      "op": "POP"
    },
    "12445": {
      "op": "POP"
    },
    "12446": {
      "op": "POP"
    },
    "12447": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7188,
        7200
      ],
      "op": "JUMP",
      "path": "2"
    },
    "12448": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7078,
        7205
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "12449": {
      "branch": 206,
      "fn": "BaseLoot.activateAO",
      "offset": [
        7213,
        7221
      ],
      "op": "DUP1",
      "path": "2"
    },
    "12450": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7209,
        7343
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3123"
    },
    "12453": {
      "branch": 206,
      "fn": "BaseLoot.activateAO",
      "offset": [
        7209,
        7343
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "12454": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7228,
        7232
      ],
      "op": "DUP8",
      "path": "2",
      "statement": 87
    },
    "12455": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12457": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12459": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12461": {
      "op": "SHL"
    },
    "12462": {
      "op": "SUB"
    },
    "12463": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7228,
        7239
      ],
      "op": "AND",
      "path": "2"
    },
    "12464": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7228,
        7239
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x4B6BD12E"
    },
    "12469": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7240,
        7244
      ],
      "op": "DUP15",
      "path": "2"
    },
    "12470": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7246,
        7253
      ],
      "op": "DUP15",
      "path": "2"
    },
    "12471": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7255,
        7259
      ],
      "op": "DUP15",
      "path": "2"
    },
    "12472": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7261,
        7268
      ],
      "op": "DUP15",
      "path": "2"
    },
    "12473": {
      "offset": [
        4308,
        4309
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x5"
    },
    "12475": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7228,
        7286
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "12477": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7228,
        7286
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "12478": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7228,
        7286
      ],
      "op": "DUP7",
      "path": "2"
    },
    "12479": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7228,
        7286
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xFFFFFFFF"
    },
    "12484": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7228,
        7286
      ],
      "op": "AND",
      "path": "2"
    },
    "12485": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7228,
        7286
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE0"
    },
    "12487": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7228,
        7286
      ],
      "op": "SHL",
      "path": "2"
    },
    "12488": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7228,
        7286
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12489": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7228,
        7286
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "12490": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7228,
        7286
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "12492": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7228,
        7286
      ],
      "op": "ADD",
      "path": "2"
    },
    "12493": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7228,
        7286
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x30DA"
    },
    "12496": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7228,
        7286
      ],
      "op": "SWAP6",
      "path": "2"
    },
    "12497": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7228,
        7286
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "12498": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7228,
        7286
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "12499": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7228,
        7286
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "12500": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7228,
        7286
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "12501": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7228,
        7286
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12502": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7228,
        7286
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4BE9"
    },
    "12505": {
      "fn": "BaseLoot.activateAO",
      "jump": "i",
      "offset": [
        7228,
        7286
      ],
      "op": "JUMP",
      "path": "2"
    },
    "12506": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7228,
        7286
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "12507": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7228,
        7286
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "12509": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7228,
        7286
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "12511": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7228,
        7286
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "12512": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7228,
        7286
      ],
      "op": "DUP1",
      "path": "2"
    },
    "12513": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7228,
        7286
      ],
      "op": "DUP4",
      "path": "2"
    },
    "12514": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7228,
        7286
      ],
      "op": "SUB",
      "path": "2"
    },
    "12515": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7228,
        7286
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12516": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7228,
        7286
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "12518": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7228,
        7286
      ],
      "op": "DUP8",
      "path": "2"
    },
    "12519": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7228,
        7286
      ],
      "op": "DUP1",
      "path": "2"
    },
    "12520": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7228,
        7286
      ],
      "op": "EXTCODESIZE",
      "path": "2"
    },
    "12521": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7228,
        7286
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "12522": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7228,
        7286
      ],
      "op": "DUP1",
      "path": "2"
    },
    "12523": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7228,
        7286
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "12524": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7228,
        7286
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x30F4"
    },
    "12527": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7228,
        7286
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "12528": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7228,
        7286
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "12530": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7228,
        7286
      ],
      "op": "DUP1",
      "path": "2"
    },
    "12531": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7228,
        7286
      ],
      "op": "REVERT",
      "path": "2"
    },
    "12532": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7228,
        7286
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "12533": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7228,
        7286
      ],
      "op": "POP",
      "path": "2"
    },
    "12534": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7228,
        7286
      ],
      "op": "GAS",
      "path": "2"
    },
    "12535": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7228,
        7286
      ],
      "op": "CALL",
      "path": "2"
    },
    "12536": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7228,
        7286
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "12537": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7228,
        7286
      ],
      "op": "DUP1",
      "path": "2"
    },
    "12538": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7228,
        7286
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "12539": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7228,
        7286
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3108"
    },
    "12542": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7228,
        7286
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "12543": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7228,
        7286
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "12544": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7228,
        7286
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "12546": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7228,
        7286
      ],
      "op": "DUP1",
      "path": "2"
    },
    "12547": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7228,
        7286
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "12548": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7228,
        7286
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "12549": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7228,
        7286
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "12551": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7228,
        7286
      ],
      "op": "REVERT",
      "path": "2"
    },
    "12552": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7228,
        7286
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "12553": {
      "op": "POP"
    },
    "12554": {
      "op": "POP"
    },
    "12555": {
      "offset": [
        4308,
        4309
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x5"
    },
    "12557": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7291,
        7303
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 88,
      "value": "0xA0"
    },
    "12559": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7291,
        7303
      ],
      "op": "DUP11",
      "path": "2"
    },
    "12560": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7291,
        7303
      ],
      "op": "ADD",
      "path": "2"
    },
    "12561": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7291,
        7321
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "12562": {
      "op": "POP"
    },
    "12563": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7291,
        7296
      ],
      "op": "SWAP7",
      "path": "2"
    },
    "12564": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7291,
        7296
      ],
      "op": "SWAP9",
      "path": "2"
    },
    "12565": {
      "op": "POP"
    },
    "12566": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7326,
        7338
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 89,
      "value": "0x38ED"
    },
    "12569": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7326,
        7338
      ],
      "op": "SWAP8",
      "path": "2"
    },
    "12570": {
      "op": "POP"
    },
    "12571": {
      "op": "POP"
    },
    "12572": {
      "op": "POP"
    },
    "12573": {
      "op": "POP"
    },
    "12574": {
      "op": "POP"
    },
    "12575": {
      "op": "POP"
    },
    "12576": {
      "op": "POP"
    },
    "12577": {
      "op": "POP"
    },
    "12578": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7326,
        7338
      ],
      "op": "JUMP",
      "path": "2"
    },
    "12579": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7209,
        7343
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "12580": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7365,
        7371
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFE"
    },
    "12582": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7365,
        7371
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "12584": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7365,
        7371
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12585": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7365,
        7371
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "12586": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7365,
        7371
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12587": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7365,
        7371
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "12590": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7365,
        7371
      ],
      "op": "EXP",
      "path": "2"
    },
    "12591": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7365,
        7371
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12592": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7365,
        7371
      ],
      "op": "DIV",
      "path": "2"
    },
    "12593": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12595": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12597": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12599": {
      "op": "SHL"
    },
    "12600": {
      "op": "SUB"
    },
    "12601": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7365,
        7371
      ],
      "op": "AND",
      "path": "2"
    },
    "12602": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12604": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12606": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12608": {
      "op": "SHL"
    },
    "12609": {
      "op": "SUB"
    },
    "12610": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7365,
        7382
      ],
      "op": "AND",
      "path": "2"
    },
    "12611": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7365,
        7382
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xAC4A61BE"
    },
    "12616": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7383,
        7388
      ],
      "op": "DUP16",
      "path": "2"
    },
    "12617": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7390,
        7394
      ],
      "op": "DUP16",
      "path": "2"
    },
    "12618": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7396,
        7403
      ],
      "op": "DUP16",
      "path": "2"
    },
    "12619": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7405,
        7406
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "12621": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7365,
        7407
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "12623": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7365,
        7407
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "12624": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7365,
        7407
      ],
      "op": "DUP6",
      "path": "2"
    },
    "12625": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7365,
        7407
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xFFFFFFFF"
    },
    "12630": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7365,
        7407
      ],
      "op": "AND",
      "path": "2"
    },
    "12631": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7365,
        7407
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE0"
    },
    "12633": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7365,
        7407
      ],
      "op": "SHL",
      "path": "2"
    },
    "12634": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7365,
        7407
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12635": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7365,
        7407
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "12636": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7365,
        7407
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "12638": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7365,
        7407
      ],
      "op": "ADD",
      "path": "2"
    },
    "12639": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7365,
        7407
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x316B"
    },
    "12642": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7365,
        7407
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "12643": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7365,
        7407
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "12644": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7365,
        7407
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "12645": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7365,
        7407
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "12646": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7365,
        7407
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12647": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7365,
        7407
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4DFE"
    },
    "12650": {
      "fn": "BaseLoot.activateAO",
      "jump": "i",
      "offset": [
        7365,
        7407
      ],
      "op": "JUMP",
      "path": "2"
    },
    "12651": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7365,
        7407
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "12652": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7365,
        7407
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "12654": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7365,
        7407
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "12656": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7365,
        7407
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "12657": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7365,
        7407
      ],
      "op": "DUP1",
      "path": "2"
    },
    "12658": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7365,
        7407
      ],
      "op": "DUP4",
      "path": "2"
    },
    "12659": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7365,
        7407
      ],
      "op": "SUB",
      "path": "2"
    },
    "12660": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7365,
        7407
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12661": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7365,
        7407
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "12663": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7365,
        7407
      ],
      "op": "DUP8",
      "path": "2"
    },
    "12664": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7365,
        7407
      ],
      "op": "GAS",
      "path": "2"
    },
    "12665": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7365,
        7407
      ],
      "op": "CALL",
      "path": "2"
    },
    "12666": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7365,
        7407
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "12667": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7365,
        7407
      ],
      "op": "DUP1",
      "path": "2"
    },
    "12668": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7365,
        7407
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "12669": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7365,
        7407
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x318A"
    },
    "12672": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7365,
        7407
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "12673": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7365,
        7407
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "12674": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7365,
        7407
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "12676": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7365,
        7407
      ],
      "op": "DUP1",
      "path": "2"
    },
    "12677": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7365,
        7407
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "12678": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7365,
        7407
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "12679": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7365,
        7407
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "12681": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7365,
        7407
      ],
      "op": "REVERT",
      "path": "2"
    },
    "12682": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7365,
        7407
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "12683": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7365,
        7407
      ],
      "op": "POP",
      "path": "2"
    },
    "12684": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7365,
        7407
      ],
      "op": "POP",
      "path": "2"
    },
    "12685": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7365,
        7407
      ],
      "op": "POP",
      "path": "2"
    },
    "12686": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7365,
        7407
      ],
      "op": "POP",
      "path": "2"
    },
    "12687": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7365,
        7407
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "12689": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7365,
        7407
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "12690": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7365,
        7407
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "12691": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7365,
        7407
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "12693": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7365,
        7407
      ],
      "op": "NOT",
      "path": "2"
    },
    "12694": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7365,
        7407
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "12696": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7365,
        7407
      ],
      "op": "DUP3",
      "path": "2"
    },
    "12697": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7365,
        7407
      ],
      "op": "ADD",
      "path": "2"
    },
    "12698": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7365,
        7407
      ],
      "op": "AND",
      "path": "2"
    },
    "12699": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7365,
        7407
      ],
      "op": "DUP3",
      "path": "2"
    },
    "12700": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7365,
        7407
      ],
      "op": "ADD",
      "path": "2"
    },
    "12701": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7365,
        7407
      ],
      "op": "DUP1",
      "path": "2"
    },
    "12702": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7365,
        7407
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "12704": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7365,
        7407
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "12705": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7365,
        7407
      ],
      "op": "POP",
      "path": "2"
    },
    "12706": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7365,
        7407
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12707": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7365,
        7407
      ],
      "op": "ADD",
      "path": "2"
    },
    "12708": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7365,
        7407
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12709": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7365,
        7407
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x31AE"
    },
    "12712": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7365,
        7407
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "12713": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7365,
        7407
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12714": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7365,
        7407
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4BCC"
    },
    "12717": {
      "fn": "BaseLoot.activateAO",
      "jump": "i",
      "offset": [
        7365,
        7407
      ],
      "op": "JUMP",
      "path": "2"
    },
    "12718": {
      "branch": 207,
      "fn": "BaseLoot.activateAO",
      "offset": [
        7365,
        7407
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "12719": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7361,
        7537
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3230"
    },
    "12722": {
      "branch": 207,
      "fn": "BaseLoot.activateAO",
      "offset": [
        7361,
        7537
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "12723": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7414,
        7418
      ],
      "op": "DUP8",
      "path": "2",
      "statement": 90
    },
    "12724": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12726": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12728": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12730": {
      "op": "SHL"
    },
    "12731": {
      "op": "SUB"
    },
    "12732": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7414,
        7425
      ],
      "op": "AND",
      "path": "2"
    },
    "12733": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7414,
        7425
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x4B6BD12E"
    },
    "12738": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7426,
        7430
      ],
      "op": "DUP15",
      "path": "2"
    },
    "12739": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7432,
        7439
      ],
      "op": "DUP15",
      "path": "2"
    },
    "12740": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7441,
        7445
      ],
      "op": "DUP15",
      "path": "2"
    },
    "12741": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7447,
        7454
      ],
      "op": "DUP15",
      "path": "2"
    },
    "12742": {
      "offset": [
        4206,
        4207
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "12744": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7414,
        7476
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "12746": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7414,
        7476
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "12747": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7414,
        7476
      ],
      "op": "DUP7",
      "path": "2"
    },
    "12748": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7414,
        7476
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xFFFFFFFF"
    },
    "12753": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7414,
        7476
      ],
      "op": "AND",
      "path": "2"
    },
    "12754": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7414,
        7476
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE0"
    },
    "12756": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7414,
        7476
      ],
      "op": "SHL",
      "path": "2"
    },
    "12757": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7414,
        7476
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12758": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7414,
        7476
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "12759": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7414,
        7476
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "12761": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7414,
        7476
      ],
      "op": "ADD",
      "path": "2"
    },
    "12762": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7414,
        7476
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x31E7"
    },
    "12765": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7414,
        7476
      ],
      "op": "SWAP6",
      "path": "2"
    },
    "12766": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7414,
        7476
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "12767": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7414,
        7476
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "12768": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7414,
        7476
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "12769": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7414,
        7476
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "12770": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7414,
        7476
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12771": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7414,
        7476
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4BE9"
    },
    "12774": {
      "fn": "BaseLoot.activateAO",
      "jump": "i",
      "offset": [
        7414,
        7476
      ],
      "op": "JUMP",
      "path": "2"
    },
    "12775": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7414,
        7476
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "12776": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7414,
        7476
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "12778": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7414,
        7476
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "12780": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7414,
        7476
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "12781": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7414,
        7476
      ],
      "op": "DUP1",
      "path": "2"
    },
    "12782": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7414,
        7476
      ],
      "op": "DUP4",
      "path": "2"
    },
    "12783": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7414,
        7476
      ],
      "op": "SUB",
      "path": "2"
    },
    "12784": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7414,
        7476
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12785": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7414,
        7476
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "12787": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7414,
        7476
      ],
      "op": "DUP8",
      "path": "2"
    },
    "12788": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7414,
        7476
      ],
      "op": "DUP1",
      "path": "2"
    },
    "12789": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7414,
        7476
      ],
      "op": "EXTCODESIZE",
      "path": "2"
    },
    "12790": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7414,
        7476
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "12791": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7414,
        7476
      ],
      "op": "DUP1",
      "path": "2"
    },
    "12792": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7414,
        7476
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "12793": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7414,
        7476
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3201"
    },
    "12796": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7414,
        7476
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "12797": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7414,
        7476
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "12799": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7414,
        7476
      ],
      "op": "DUP1",
      "path": "2"
    },
    "12800": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7414,
        7476
      ],
      "op": "REVERT",
      "path": "2"
    },
    "12801": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7414,
        7476
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "12802": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7414,
        7476
      ],
      "op": "POP",
      "path": "2"
    },
    "12803": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7414,
        7476
      ],
      "op": "GAS",
      "path": "2"
    },
    "12804": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7414,
        7476
      ],
      "op": "CALL",
      "path": "2"
    },
    "12805": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7414,
        7476
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "12806": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7414,
        7476
      ],
      "op": "DUP1",
      "path": "2"
    },
    "12807": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7414,
        7476
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "12808": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7414,
        7476
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3215"
    },
    "12811": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7414,
        7476
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "12812": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7414,
        7476
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "12813": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7414,
        7476
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "12815": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7414,
        7476
      ],
      "op": "DUP1",
      "path": "2"
    },
    "12816": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7414,
        7476
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "12817": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7414,
        7476
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "12818": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7414,
        7476
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "12820": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7414,
        7476
      ],
      "op": "REVERT",
      "path": "2"
    },
    "12821": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7414,
        7476
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "12822": {
      "op": "POP"
    },
    "12823": {
      "op": "POP"
    },
    "12824": {
      "offset": [
        4206,
        4207
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "12826": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7481,
        7493
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 91,
      "value": "0xA0"
    },
    "12828": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7481,
        7493
      ],
      "op": "DUP11",
      "path": "2"
    },
    "12829": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7481,
        7493
      ],
      "op": "ADD",
      "path": "2"
    },
    "12830": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7481,
        7515
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "12831": {
      "op": "POP"
    },
    "12832": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7481,
        7486
      ],
      "op": "SWAP7",
      "path": "2"
    },
    "12833": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7481,
        7486
      ],
      "op": "SWAP9",
      "path": "2"
    },
    "12834": {
      "op": "POP"
    },
    "12835": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7520,
        7532
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 92,
      "value": "0x38ED"
    },
    "12838": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7520,
        7532
      ],
      "op": "SWAP8",
      "path": "2"
    },
    "12839": {
      "op": "POP"
    },
    "12840": {
      "op": "POP"
    },
    "12841": {
      "op": "POP"
    },
    "12842": {
      "op": "POP"
    },
    "12843": {
      "op": "POP"
    },
    "12844": {
      "op": "POP"
    },
    "12845": {
      "op": "POP"
    },
    "12846": {
      "op": "POP"
    },
    "12847": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7520,
        7532
      ],
      "op": "JUMP",
      "path": "2"
    },
    "12848": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7361,
        7537
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "12849": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7558,
        7564
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFE"
    },
    "12851": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7558,
        7564
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "12853": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7558,
        7564
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12854": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7558,
        7564
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "12855": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7558,
        7564
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12856": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7558,
        7564
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "12859": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7558,
        7564
      ],
      "op": "EXP",
      "path": "2"
    },
    "12860": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7558,
        7564
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12861": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7558,
        7564
      ],
      "op": "DIV",
      "path": "2"
    },
    "12862": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12864": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12866": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12868": {
      "op": "SHL"
    },
    "12869": {
      "op": "SUB"
    },
    "12870": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7558,
        7564
      ],
      "op": "AND",
      "path": "2"
    },
    "12871": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12873": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12875": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12877": {
      "op": "SHL"
    },
    "12878": {
      "op": "SUB"
    },
    "12879": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7558,
        7571
      ],
      "op": "AND",
      "path": "2"
    },
    "12880": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7558,
        7571
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x42958036"
    },
    "12885": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7572,
        7577
      ],
      "op": "DUP16",
      "path": "2"
    },
    "12886": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7579,
        7583
      ],
      "op": "DUP16",
      "path": "2"
    },
    "12887": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7585,
        7592
      ],
      "op": "DUP16",
      "path": "2"
    },
    "12888": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7558,
        7593
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "12890": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7558,
        7593
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "12891": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7558,
        7593
      ],
      "op": "DUP5",
      "path": "2"
    },
    "12892": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7558,
        7593
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xFFFFFFFF"
    },
    "12897": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7558,
        7593
      ],
      "op": "AND",
      "path": "2"
    },
    "12898": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7558,
        7593
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE0"
    },
    "12900": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7558,
        7593
      ],
      "op": "SHL",
      "path": "2"
    },
    "12901": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7558,
        7593
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12902": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7558,
        7593
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "12903": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7558,
        7593
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "12905": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7558,
        7593
      ],
      "op": "ADD",
      "path": "2"
    },
    "12906": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7558,
        7593
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3275"
    },
    "12909": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7558,
        7593
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "12910": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7558,
        7593
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "12911": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7558,
        7593
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "12912": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7558,
        7593
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12913": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7558,
        7593
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4C51"
    },
    "12916": {
      "fn": "BaseLoot.activateAO",
      "jump": "i",
      "offset": [
        7558,
        7593
      ],
      "op": "JUMP",
      "path": "2"
    },
    "12917": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7558,
        7593
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "12918": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7558,
        7593
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "12920": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7558,
        7593
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "12922": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7558,
        7593
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "12923": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7558,
        7593
      ],
      "op": "DUP1",
      "path": "2"
    },
    "12924": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7558,
        7593
      ],
      "op": "DUP4",
      "path": "2"
    },
    "12925": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7558,
        7593
      ],
      "op": "SUB",
      "path": "2"
    },
    "12926": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7558,
        7593
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12927": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7558,
        7593
      ],
      "op": "DUP7",
      "path": "2"
    },
    "12928": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7558,
        7593
      ],
      "op": "GAS",
      "path": "2"
    },
    "12929": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7558,
        7593
      ],
      "op": "STATICCALL",
      "path": "2"
    },
    "12930": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7558,
        7593
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "12931": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7558,
        7593
      ],
      "op": "DUP1",
      "path": "2"
    },
    "12932": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7558,
        7593
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "12933": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7558,
        7593
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3292"
    },
    "12936": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7558,
        7593
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "12937": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7558,
        7593
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "12938": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7558,
        7593
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "12940": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7558,
        7593
      ],
      "op": "DUP1",
      "path": "2"
    },
    "12941": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7558,
        7593
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "12942": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7558,
        7593
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "12943": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7558,
        7593
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "12945": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7558,
        7593
      ],
      "op": "REVERT",
      "path": "2"
    },
    "12946": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7558,
        7593
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "12947": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7558,
        7593
      ],
      "op": "POP",
      "path": "2"
    },
    "12948": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7558,
        7593
      ],
      "op": "POP",
      "path": "2"
    },
    "12949": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7558,
        7593
      ],
      "op": "POP",
      "path": "2"
    },
    "12950": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7558,
        7593
      ],
      "op": "POP",
      "path": "2"
    },
    "12951": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7558,
        7593
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "12953": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7558,
        7593
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "12954": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7558,
        7593
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "12955": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7558,
        7593
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "12957": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7558,
        7593
      ],
      "op": "NOT",
      "path": "2"
    },
    "12958": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7558,
        7593
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "12960": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7558,
        7593
      ],
      "op": "DUP3",
      "path": "2"
    },
    "12961": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7558,
        7593
      ],
      "op": "ADD",
      "path": "2"
    },
    "12962": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7558,
        7593
      ],
      "op": "AND",
      "path": "2"
    },
    "12963": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7558,
        7593
      ],
      "op": "DUP3",
      "path": "2"
    },
    "12964": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7558,
        7593
      ],
      "op": "ADD",
      "path": "2"
    },
    "12965": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7558,
        7593
      ],
      "op": "DUP1",
      "path": "2"
    },
    "12966": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7558,
        7593
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "12968": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7558,
        7593
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "12969": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7558,
        7593
      ],
      "op": "POP",
      "path": "2"
    },
    "12970": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7558,
        7593
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12971": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7558,
        7593
      ],
      "op": "ADD",
      "path": "2"
    },
    "12972": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7558,
        7593
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12973": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7558,
        7593
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x32B6"
    },
    "12976": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7558,
        7593
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "12977": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7558,
        7593
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12978": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7558,
        7593
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4BCC"
    },
    "12981": {
      "fn": "BaseLoot.activateAO",
      "jump": "i",
      "offset": [
        7558,
        7593
      ],
      "op": "JUMP",
      "path": "2"
    },
    "12982": {
      "branch": 208,
      "fn": "BaseLoot.activateAO",
      "offset": [
        7558,
        7593
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "12983": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7554,
        7711
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3338"
    },
    "12986": {
      "branch": 208,
      "fn": "BaseLoot.activateAO",
      "offset": [
        7554,
        7711
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "12987": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7600,
        7604
      ],
      "op": "DUP8",
      "path": "2",
      "statement": 93
    },
    "12988": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12990": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12992": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12994": {
      "op": "SHL"
    },
    "12995": {
      "op": "SUB"
    },
    "12996": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7600,
        7611
      ],
      "op": "AND",
      "path": "2"
    },
    "12997": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7600,
        7611
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x4B6BD12E"
    },
    "13002": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7612,
        7616
      ],
      "op": "DUP15",
      "path": "2"
    },
    "13003": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7618,
        7625
      ],
      "op": "DUP15",
      "path": "2"
    },
    "13004": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7627,
        7631
      ],
      "op": "DUP15",
      "path": "2"
    },
    "13005": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7633,
        7640
      ],
      "op": "DUP15",
      "path": "2"
    },
    "13006": {
      "offset": [
        4240,
        4241
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3"
    },
    "13008": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7600,
        7656
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "13010": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7600,
        7656
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "13011": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7600,
        7656
      ],
      "op": "DUP7",
      "path": "2"
    },
    "13012": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7600,
        7656
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xFFFFFFFF"
    },
    "13017": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7600,
        7656
      ],
      "op": "AND",
      "path": "2"
    },
    "13018": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7600,
        7656
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE0"
    },
    "13020": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7600,
        7656
      ],
      "op": "SHL",
      "path": "2"
    },
    "13021": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7600,
        7656
      ],
      "op": "DUP2",
      "path": "2"
    },
    "13022": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7600,
        7656
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "13023": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7600,
        7656
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "13025": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7600,
        7656
      ],
      "op": "ADD",
      "path": "2"
    },
    "13026": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7600,
        7656
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x32EF"
    },
    "13029": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7600,
        7656
      ],
      "op": "SWAP6",
      "path": "2"
    },
    "13030": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7600,
        7656
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "13031": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7600,
        7656
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "13032": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7600,
        7656
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "13033": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7600,
        7656
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "13034": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7600,
        7656
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "13035": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7600,
        7656
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4BE9"
    },
    "13038": {
      "fn": "BaseLoot.activateAO",
      "jump": "i",
      "offset": [
        7600,
        7656
      ],
      "op": "JUMP",
      "path": "2"
    },
    "13039": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7600,
        7656
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "13040": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7600,
        7656
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "13042": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7600,
        7656
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "13044": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7600,
        7656
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "13045": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7600,
        7656
      ],
      "op": "DUP1",
      "path": "2"
    },
    "13046": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7600,
        7656
      ],
      "op": "DUP4",
      "path": "2"
    },
    "13047": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7600,
        7656
      ],
      "op": "SUB",
      "path": "2"
    },
    "13048": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7600,
        7656
      ],
      "op": "DUP2",
      "path": "2"
    },
    "13049": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7600,
        7656
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "13051": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7600,
        7656
      ],
      "op": "DUP8",
      "path": "2"
    },
    "13052": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7600,
        7656
      ],
      "op": "DUP1",
      "path": "2"
    },
    "13053": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7600,
        7656
      ],
      "op": "EXTCODESIZE",
      "path": "2"
    },
    "13054": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7600,
        7656
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "13055": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7600,
        7656
      ],
      "op": "DUP1",
      "path": "2"
    },
    "13056": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7600,
        7656
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "13057": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7600,
        7656
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3309"
    },
    "13060": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7600,
        7656
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "13061": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7600,
        7656
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "13063": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7600,
        7656
      ],
      "op": "DUP1",
      "path": "2"
    },
    "13064": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7600,
        7656
      ],
      "op": "REVERT",
      "path": "2"
    },
    "13065": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7600,
        7656
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "13066": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7600,
        7656
      ],
      "op": "POP",
      "path": "2"
    },
    "13067": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7600,
        7656
      ],
      "op": "GAS",
      "path": "2"
    },
    "13068": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7600,
        7656
      ],
      "op": "CALL",
      "path": "2"
    },
    "13069": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7600,
        7656
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "13070": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7600,
        7656
      ],
      "op": "DUP1",
      "path": "2"
    },
    "13071": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7600,
        7656
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "13072": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7600,
        7656
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x331D"
    },
    "13075": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7600,
        7656
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "13076": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7600,
        7656
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "13077": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7600,
        7656
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "13079": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7600,
        7656
      ],
      "op": "DUP1",
      "path": "2"
    },
    "13080": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7600,
        7656
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "13081": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7600,
        7656
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "13082": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7600,
        7656
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "13084": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7600,
        7656
      ],
      "op": "REVERT",
      "path": "2"
    },
    "13085": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7600,
        7656
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "13086": {
      "op": "POP"
    },
    "13087": {
      "op": "POP"
    },
    "13088": {
      "offset": [
        4240,
        4241
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3"
    },
    "13090": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7661,
        7673
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 94,
      "value": "0xA0"
    },
    "13092": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7661,
        7673
      ],
      "op": "DUP11",
      "path": "2"
    },
    "13093": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7661,
        7673
      ],
      "op": "ADD",
      "path": "2"
    },
    "13094": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7661,
        7689
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "13095": {
      "op": "POP"
    },
    "13096": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7661,
        7666
      ],
      "op": "SWAP7",
      "path": "2"
    },
    "13097": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7661,
        7666
      ],
      "op": "SWAP9",
      "path": "2"
    },
    "13098": {
      "op": "POP"
    },
    "13099": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7694,
        7706
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 95,
      "value": "0x38ED"
    },
    "13102": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7694,
        7706
      ],
      "op": "SWAP8",
      "path": "2"
    },
    "13103": {
      "op": "POP"
    },
    "13104": {
      "op": "POP"
    },
    "13105": {
      "op": "POP"
    },
    "13106": {
      "op": "POP"
    },
    "13107": {
      "op": "POP"
    },
    "13108": {
      "op": "POP"
    },
    "13109": {
      "op": "POP"
    },
    "13110": {
      "op": "POP"
    },
    "13111": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7694,
        7706
      ],
      "op": "JUMP",
      "path": "2"
    },
    "13112": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7554,
        7711
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "13113": {
      "offset": [
        3266,
        3269
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x96"
    },
    "13115": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7733,
        7737
      ],
      "op": "DUP12",
      "path": "2"
    },
    "13116": {
      "branch": 209,
      "fn": "BaseLoot.activateAO",
      "offset": [
        7733,
        7745
      ],
      "op": "SUB",
      "path": "2"
    },
    "13117": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7730,
        8034
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x349D"
    },
    "13120": {
      "branch": 209,
      "fn": "BaseLoot.activateAO",
      "offset": [
        7730,
        8034
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "13121": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7776,
        7800
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "13123": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7776,
        7800
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "13124": {
      "op": "PUSH4",
      "value": "0x6BFC324F"
    },
    "13129": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "13131": {
      "op": "SHL"
    },
    "13132": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7776,
        7800
      ],
      "op": "DUP2",
      "path": "2"
    },
    "13133": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7776,
        7800
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "13134": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7776,
        7800
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "13136": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7776,
        7800
      ],
      "op": "DUP2",
      "path": "2"
    },
    "13137": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7776,
        7800
      ],
      "op": "ADD",
      "path": "2"
    },
    "13138": {
      "op": "DUP15"
    },
    "13139": {
      "op": "SWAP1"
    },
    "13140": {
      "op": "MSTORE"
    },
    "13141": {
      "offset": [
        3266,
        3269
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x96"
    },
    "13143": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "13145": {
      "op": "DUP3"
    },
    "13146": {
      "op": "ADD"
    },
    "13147": {
      "op": "MSTORE"
    },
    "13148": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13150": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13152": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13154": {
      "op": "SHL"
    },
    "13155": {
      "op": "SUB"
    },
    "13156": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7776,
        7788
      ],
      "op": "DUP10",
      "path": "2"
    },
    "13157": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7776,
        7788
      ],
      "op": "AND",
      "path": "2"
    },
    "13158": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7776,
        7788
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "13159": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7776,
        7788
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x6BFC324F"
    },
    "13164": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7776,
        7788
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "13165": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "13167": {
      "op": "ADD"
    },
    "13168": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7776,
        7800
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "13170": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7776,
        7800
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "13172": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7776,
        7800
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "13173": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7776,
        7800
      ],
      "op": "DUP1",
      "path": "2"
    },
    "13174": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7776,
        7800
      ],
      "op": "DUP4",
      "path": "2"
    },
    "13175": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7776,
        7800
      ],
      "op": "SUB",
      "path": "2"
    },
    "13176": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7776,
        7800
      ],
      "op": "DUP2",
      "path": "2"
    },
    "13177": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7776,
        7800
      ],
      "op": "DUP7",
      "path": "2"
    },
    "13178": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7776,
        7800
      ],
      "op": "GAS",
      "path": "2"
    },
    "13179": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7776,
        7800
      ],
      "op": "STATICCALL",
      "path": "2"
    },
    "13180": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7776,
        7800
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "13181": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7776,
        7800
      ],
      "op": "DUP1",
      "path": "2"
    },
    "13182": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7776,
        7800
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "13183": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7776,
        7800
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x338C"
    },
    "13186": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7776,
        7800
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "13187": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7776,
        7800
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "13188": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7776,
        7800
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "13190": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7776,
        7800
      ],
      "op": "DUP1",
      "path": "2"
    },
    "13191": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7776,
        7800
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "13192": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7776,
        7800
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "13193": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7776,
        7800
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "13195": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7776,
        7800
      ],
      "op": "REVERT",
      "path": "2"
    },
    "13196": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7776,
        7800
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "13197": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7776,
        7800
      ],
      "op": "POP",
      "path": "2"
    },
    "13198": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7776,
        7800
      ],
      "op": "POP",
      "path": "2"
    },
    "13199": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7776,
        7800
      ],
      "op": "POP",
      "path": "2"
    },
    "13200": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7776,
        7800
      ],
      "op": "POP",
      "path": "2"
    },
    "13201": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7776,
        7800
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "13203": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7776,
        7800
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "13204": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7776,
        7800
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "13205": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7776,
        7800
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "13207": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7776,
        7800
      ],
      "op": "NOT",
      "path": "2"
    },
    "13208": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7776,
        7800
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "13210": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7776,
        7800
      ],
      "op": "DUP3",
      "path": "2"
    },
    "13211": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7776,
        7800
      ],
      "op": "ADD",
      "path": "2"
    },
    "13212": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7776,
        7800
      ],
      "op": "AND",
      "path": "2"
    },
    "13213": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7776,
        7800
      ],
      "op": "DUP3",
      "path": "2"
    },
    "13214": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7776,
        7800
      ],
      "op": "ADD",
      "path": "2"
    },
    "13215": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7776,
        7800
      ],
      "op": "DUP1",
      "path": "2"
    },
    "13216": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7776,
        7800
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "13218": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7776,
        7800
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "13219": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7776,
        7800
      ],
      "op": "POP",
      "path": "2"
    },
    "13220": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7776,
        7800
      ],
      "op": "DUP2",
      "path": "2"
    },
    "13221": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7776,
        7800
      ],
      "op": "ADD",
      "path": "2"
    },
    "13222": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7776,
        7800
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "13223": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7776,
        7800
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x33B0"
    },
    "13226": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7776,
        7800
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "13227": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7776,
        7800
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "13228": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7776,
        7800
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4BCC"
    },
    "13231": {
      "fn": "BaseLoot.activateAO",
      "jump": "i",
      "offset": [
        7776,
        7800
      ],
      "op": "JUMP",
      "path": "2"
    },
    "13232": {
      "branch": 210,
      "fn": "BaseLoot.activateAO",
      "offset": [
        7776,
        7800
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "13233": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7773,
        8030
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "13234": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7773,
        8030
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3436"
    },
    "13237": {
      "branch": 210,
      "fn": "BaseLoot.activateAO",
      "offset": [
        7773,
        8030
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "13238": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13240": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13242": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13244": {
      "op": "SHL"
    },
    "13245": {
      "op": "SUB"
    },
    "13246": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7829,
        7840
      ],
      "op": "DUP9",
      "path": "2",
      "statement": 96
    },
    "13247": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7829,
        7840
      ],
      "op": "AND",
      "path": "2"
    },
    "13248": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7829,
        7840
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xBC186C6E"
    },
    "13253": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7841,
        7845
      ],
      "op": "DUP15",
      "path": "2"
    },
    "13254": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7847,
        7854
      ],
      "op": "DUP15",
      "path": "2"
    },
    "13255": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7856,
        7873
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x33D8"
    },
    "13258": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7856,
        7863
      ],
      "op": "DUP15",
      "path": "2"
    },
    "13259": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7866,
        7873
      ],
      "op": "PUSH8",
      "path": "2",
      "value": "0xDE0B6B3A7640000"
    },
    "13268": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7856,
        7873
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4DB0"
    },
    "13271": {
      "fn": "BaseLoot.activateAO",
      "jump": "i",
      "offset": [
        7856,
        7873
      ],
      "op": "JUMP",
      "path": "2"
    },
    "13272": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7856,
        7873
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "13273": {
      "offset": [
        3980,
        3986
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "13275": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7881,
        7886
      ],
      "op": "DUP13",
      "path": "2"
    },
    "13276": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7881,
        7893
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "13278": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7881,
        7893
      ],
      "op": "ADD",
      "path": "2"
    },
    "13279": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7881,
        7893
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "13280": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7829,
        7894
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "13282": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7829,
        7894
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "13283": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7829,
        7894
      ],
      "op": "DUP7",
      "path": "2"
    },
    "13284": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7829,
        7894
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xFFFFFFFF"
    },
    "13289": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7829,
        7894
      ],
      "op": "AND",
      "path": "2"
    },
    "13290": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7829,
        7894
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE0"
    },
    "13292": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7829,
        7894
      ],
      "op": "SHL",
      "path": "2"
    },
    "13293": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7829,
        7894
      ],
      "op": "DUP2",
      "path": "2"
    },
    "13294": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7829,
        7894
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "13295": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7829,
        7894
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "13297": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7829,
        7894
      ],
      "op": "ADD",
      "path": "2"
    },
    "13298": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7829,
        7894
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x33FF"
    },
    "13301": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7829,
        7894
      ],
      "op": "SWAP6",
      "path": "2"
    },
    "13302": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7829,
        7894
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "13303": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7829,
        7894
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "13304": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7829,
        7894
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "13305": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7829,
        7894
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "13306": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7829,
        7894
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "13307": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7829,
        7894
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4BE9"
    },
    "13310": {
      "fn": "BaseLoot.activateAO",
      "jump": "i",
      "offset": [
        7829,
        7894
      ],
      "op": "JUMP",
      "path": "2"
    },
    "13311": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7829,
        7894
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "13312": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7829,
        7894
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "13314": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7829,
        7894
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "13316": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7829,
        7894
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "13317": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7829,
        7894
      ],
      "op": "DUP1",
      "path": "2"
    },
    "13318": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7829,
        7894
      ],
      "op": "DUP4",
      "path": "2"
    },
    "13319": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7829,
        7894
      ],
      "op": "SUB",
      "path": "2"
    },
    "13320": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7829,
        7894
      ],
      "op": "DUP2",
      "path": "2"
    },
    "13321": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7829,
        7894
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "13323": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7829,
        7894
      ],
      "op": "DUP8",
      "path": "2"
    },
    "13324": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7829,
        7894
      ],
      "op": "DUP1",
      "path": "2"
    },
    "13325": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7829,
        7894
      ],
      "op": "EXTCODESIZE",
      "path": "2"
    },
    "13326": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7829,
        7894
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "13327": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7829,
        7894
      ],
      "op": "DUP1",
      "path": "2"
    },
    "13328": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7829,
        7894
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "13329": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7829,
        7894
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3419"
    },
    "13332": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7829,
        7894
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "13333": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7829,
        7894
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "13335": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7829,
        7894
      ],
      "op": "DUP1",
      "path": "2"
    },
    "13336": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7829,
        7894
      ],
      "op": "REVERT",
      "path": "2"
    },
    "13337": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7829,
        7894
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "13338": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7829,
        7894
      ],
      "op": "POP",
      "path": "2"
    },
    "13339": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7829,
        7894
      ],
      "op": "GAS",
      "path": "2"
    },
    "13340": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7829,
        7894
      ],
      "op": "CALL",
      "path": "2"
    },
    "13341": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7829,
        7894
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "13342": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7829,
        7894
      ],
      "op": "DUP1",
      "path": "2"
    },
    "13343": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7829,
        7894
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "13344": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7829,
        7894
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x342D"
    },
    "13347": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7829,
        7894
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "13348": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7829,
        7894
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "13349": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7829,
        7894
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "13351": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7829,
        7894
      ],
      "op": "DUP1",
      "path": "2"
    },
    "13352": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7829,
        7894
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "13353": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7829,
        7894
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "13354": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7829,
        7894
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "13356": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7829,
        7894
      ],
      "op": "REVERT",
      "path": "2"
    },
    "13357": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7829,
        7894
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "13358": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7829,
        7894
      ],
      "op": "POP",
      "path": "2"
    },
    "13359": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7829,
        7894
      ],
      "op": "POP",
      "path": "2"
    },
    "13360": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7829,
        7894
      ],
      "op": "POP",
      "path": "2"
    },
    "13361": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7829,
        7894
      ],
      "op": "POP",
      "path": "2"
    },
    "13362": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7773,
        8030
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x349D"
    },
    "13365": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7773,
        8030
      ],
      "op": "JUMP",
      "path": "2"
    },
    "13366": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7773,
        8030
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "13367": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7974,
        7978
      ],
      "op": "DUP8",
      "path": "2",
      "statement": 97
    },
    "13368": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13370": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13372": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13374": {
      "op": "SHL"
    },
    "13375": {
      "op": "SUB"
    },
    "13376": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7974,
        7982
      ],
      "op": "AND",
      "path": "2"
    },
    "13377": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7974,
        7982
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x480A962B"
    },
    "13382": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7983,
        7993
      ],
      "op": "CALLER",
      "path": "2"
    },
    "13383": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7995,
        7999
      ],
      "op": "DUP16",
      "path": "2"
    },
    "13384": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8001,
        8008
      ],
      "op": "DUP16",
      "path": "2"
    },
    "13385": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8010,
        8014
      ],
      "op": "DUP16",
      "path": "2"
    },
    "13386": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8016,
        8023
      ],
      "op": "DUP16",
      "path": "2"
    },
    "13387": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7974,
        8024
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "13389": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7974,
        8024
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "13390": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7974,
        8024
      ],
      "op": "DUP7",
      "path": "2"
    },
    "13391": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7974,
        8024
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xFFFFFFFF"
    },
    "13396": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7974,
        8024
      ],
      "op": "AND",
      "path": "2"
    },
    "13397": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7974,
        8024
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE0"
    },
    "13399": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7974,
        8024
      ],
      "op": "SHL",
      "path": "2"
    },
    "13400": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7974,
        8024
      ],
      "op": "DUP2",
      "path": "2"
    },
    "13401": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7974,
        8024
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "13402": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7974,
        8024
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "13404": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7974,
        8024
      ],
      "op": "ADD",
      "path": "2"
    },
    "13405": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7974,
        8024
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x346A"
    },
    "13408": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7974,
        8024
      ],
      "op": "SWAP6",
      "path": "2"
    },
    "13409": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7974,
        8024
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "13410": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7974,
        8024
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "13411": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7974,
        8024
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "13412": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7974,
        8024
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "13413": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7974,
        8024
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "13414": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7974,
        8024
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4F06"
    },
    "13417": {
      "fn": "BaseLoot.activateAO",
      "jump": "i",
      "offset": [
        7974,
        8024
      ],
      "op": "JUMP",
      "path": "2"
    },
    "13418": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7974,
        8024
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "13419": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7974,
        8024
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "13421": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7974,
        8024
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "13423": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7974,
        8024
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "13424": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7974,
        8024
      ],
      "op": "DUP1",
      "path": "2"
    },
    "13425": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7974,
        8024
      ],
      "op": "DUP4",
      "path": "2"
    },
    "13426": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7974,
        8024
      ],
      "op": "SUB",
      "path": "2"
    },
    "13427": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7974,
        8024
      ],
      "op": "DUP2",
      "path": "2"
    },
    "13428": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7974,
        8024
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "13430": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7974,
        8024
      ],
      "op": "DUP8",
      "path": "2"
    },
    "13431": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7974,
        8024
      ],
      "op": "DUP1",
      "path": "2"
    },
    "13432": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7974,
        8024
      ],
      "op": "EXTCODESIZE",
      "path": "2"
    },
    "13433": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7974,
        8024
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "13434": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7974,
        8024
      ],
      "op": "DUP1",
      "path": "2"
    },
    "13435": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7974,
        8024
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "13436": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7974,
        8024
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3484"
    },
    "13439": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7974,
        8024
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "13440": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7974,
        8024
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "13442": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7974,
        8024
      ],
      "op": "DUP1",
      "path": "2"
    },
    "13443": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7974,
        8024
      ],
      "op": "REVERT",
      "path": "2"
    },
    "13444": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7974,
        8024
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "13445": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7974,
        8024
      ],
      "op": "POP",
      "path": "2"
    },
    "13446": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7974,
        8024
      ],
      "op": "GAS",
      "path": "2"
    },
    "13447": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7974,
        8024
      ],
      "op": "CALL",
      "path": "2"
    },
    "13448": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7974,
        8024
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "13449": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7974,
        8024
      ],
      "op": "DUP1",
      "path": "2"
    },
    "13450": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7974,
        8024
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "13451": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7974,
        8024
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3498"
    },
    "13454": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7974,
        8024
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "13455": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7974,
        8024
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "13456": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7974,
        8024
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "13458": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7974,
        8024
      ],
      "op": "DUP1",
      "path": "2"
    },
    "13459": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7974,
        8024
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "13460": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7974,
        8024
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "13461": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7974,
        8024
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "13463": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7974,
        8024
      ],
      "op": "REVERT",
      "path": "2"
    },
    "13464": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7974,
        8024
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "13465": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7974,
        8024
      ],
      "op": "POP",
      "path": "2"
    },
    "13466": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7974,
        8024
      ],
      "op": "POP",
      "path": "2"
    },
    "13467": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7974,
        8024
      ],
      "op": "POP",
      "path": "2"
    },
    "13468": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7974,
        8024
      ],
      "op": "POP",
      "path": "2"
    },
    "13469": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        7773,
        8030
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "13470": {
      "offset": [
        1547,
        1548
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "13472": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8056,
        8060
      ],
      "op": "DUP12",
      "path": "2"
    },
    "13473": {
      "branch": 211,
      "fn": "BaseLoot.activateAO",
      "offset": [
        8056,
        8074
      ],
      "op": "SUB",
      "path": "2"
    },
    "13474": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8052,
        9153
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3527"
    },
    "13477": {
      "branch": 211,
      "fn": "BaseLoot.activateAO",
      "offset": [
        8052,
        9153
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "13478": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8200,
        8204
      ],
      "op": "DUP8",
      "path": "2",
      "statement": 98
    },
    "13479": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13481": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13483": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13485": {
      "op": "SHL"
    },
    "13486": {
      "op": "SUB"
    },
    "13487": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8200,
        8211
      ],
      "op": "AND",
      "path": "2"
    },
    "13488": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8200,
        8211
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x995B08FC"
    },
    "13493": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8212,
        8216
      ],
      "op": "DUP15",
      "path": "2"
    },
    "13494": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8218,
        8225
      ],
      "op": "DUP15",
      "path": "2"
    },
    "13495": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8237,
        8259
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x34BF"
    },
    "13498": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8253,
        8258
      ],
      "op": "DUP12",
      "path": "2"
    },
    "13499": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8237,
        8252
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3FF8"
    },
    "13502": {
      "fn": "BaseLoot.activateAO",
      "jump": "i",
      "offset": [
        8237,
        8259
      ],
      "op": "JUMP",
      "path": "2"
    },
    "13503": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8237,
        8259
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "13504": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8227,
        8259
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x34C9"
    },
    "13507": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8227,
        8259
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "13508": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8227,
        8234
      ],
      "op": "DUP16",
      "path": "2"
    },
    "13509": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8227,
        8259
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4DB0"
    },
    "13512": {
      "fn": "BaseLoot.activateAO",
      "jump": "i",
      "offset": [
        8227,
        8259
      ],
      "op": "JUMP",
      "path": "2"
    },
    "13513": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8227,
        8259
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "13514": {
      "offset": [
        3980,
        3986
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "13516": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8267,
        8272
      ],
      "op": "DUP13",
      "path": "2"
    },
    "13517": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8267,
        8279
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "13519": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8267,
        8279
      ],
      "op": "ADD",
      "path": "2"
    },
    "13520": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8267,
        8279
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "13521": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8200,
        8280
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "13523": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8200,
        8280
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "13524": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8200,
        8280
      ],
      "op": "DUP7",
      "path": "2"
    },
    "13525": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8200,
        8280
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xFFFFFFFF"
    },
    "13530": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8200,
        8280
      ],
      "op": "AND",
      "path": "2"
    },
    "13531": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8200,
        8280
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE0"
    },
    "13533": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8200,
        8280
      ],
      "op": "SHL",
      "path": "2"
    },
    "13534": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8200,
        8280
      ],
      "op": "DUP2",
      "path": "2"
    },
    "13535": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8200,
        8280
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "13536": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8200,
        8280
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "13538": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8200,
        8280
      ],
      "op": "ADD",
      "path": "2"
    },
    "13539": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8200,
        8280
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x34F0"
    },
    "13542": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8200,
        8280
      ],
      "op": "SWAP6",
      "path": "2"
    },
    "13543": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8200,
        8280
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "13544": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8200,
        8280
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "13545": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8200,
        8280
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "13546": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8200,
        8280
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "13547": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8200,
        8280
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "13548": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8200,
        8280
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4BE9"
    },
    "13551": {
      "fn": "BaseLoot.activateAO",
      "jump": "i",
      "offset": [
        8200,
        8280
      ],
      "op": "JUMP",
      "path": "2"
    },
    "13552": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8200,
        8280
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "13553": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8200,
        8280
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "13555": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8200,
        8280
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "13557": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8200,
        8280
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "13558": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8200,
        8280
      ],
      "op": "DUP1",
      "path": "2"
    },
    "13559": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8200,
        8280
      ],
      "op": "DUP4",
      "path": "2"
    },
    "13560": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8200,
        8280
      ],
      "op": "SUB",
      "path": "2"
    },
    "13561": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8200,
        8280
      ],
      "op": "DUP2",
      "path": "2"
    },
    "13562": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8200,
        8280
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "13564": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8200,
        8280
      ],
      "op": "DUP8",
      "path": "2"
    },
    "13565": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8200,
        8280
      ],
      "op": "DUP1",
      "path": "2"
    },
    "13566": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8200,
        8280
      ],
      "op": "EXTCODESIZE",
      "path": "2"
    },
    "13567": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8200,
        8280
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "13568": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8200,
        8280
      ],
      "op": "DUP1",
      "path": "2"
    },
    "13569": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8200,
        8280
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "13570": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8200,
        8280
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x350A"
    },
    "13573": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8200,
        8280
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "13574": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8200,
        8280
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "13576": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8200,
        8280
      ],
      "op": "DUP1",
      "path": "2"
    },
    "13577": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8200,
        8280
      ],
      "op": "REVERT",
      "path": "2"
    },
    "13578": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8200,
        8280
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "13579": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8200,
        8280
      ],
      "op": "POP",
      "path": "2"
    },
    "13580": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8200,
        8280
      ],
      "op": "GAS",
      "path": "2"
    },
    "13581": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8200,
        8280
      ],
      "op": "CALL",
      "path": "2"
    },
    "13582": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8200,
        8280
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "13583": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8200,
        8280
      ],
      "op": "DUP1",
      "path": "2"
    },
    "13584": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8200,
        8280
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "13585": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8200,
        8280
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x351E"
    },
    "13588": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8200,
        8280
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "13589": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8200,
        8280
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "13590": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8200,
        8280
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "13592": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8200,
        8280
      ],
      "op": "DUP1",
      "path": "2"
    },
    "13593": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8200,
        8280
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "13594": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8200,
        8280
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "13595": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8200,
        8280
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "13597": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8200,
        8280
      ],
      "op": "REVERT",
      "path": "2"
    },
    "13598": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8200,
        8280
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "13599": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8200,
        8280
      ],
      "op": "POP",
      "path": "2"
    },
    "13600": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8200,
        8280
      ],
      "op": "POP",
      "path": "2"
    },
    "13601": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8200,
        8280
      ],
      "op": "POP",
      "path": "2"
    },
    "13602": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8200,
        8280
      ],
      "op": "POP",
      "path": "2"
    },
    "13603": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8052,
        9153
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x38DB"
    },
    "13606": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8052,
        9153
      ],
      "op": "JUMP",
      "path": "2"
    },
    "13607": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8052,
        9153
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "13608": {
      "offset": [
        1788,
        1790
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "13610": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8344,
        8348
      ],
      "op": "DUP12",
      "path": "2"
    },
    "13611": {
      "branch": 212,
      "fn": "BaseLoot.activateAO",
      "offset": [
        8344,
        8362
      ],
      "op": "SUB",
      "path": "2"
    },
    "13612": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8340,
        9153
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x36CE"
    },
    "13615": {
      "branch": 212,
      "fn": "BaseLoot.activateAO",
      "offset": [
        8340,
        9153
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "13616": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8393,
        8423
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "13618": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8393,
        8423
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "13619": {
      "op": "PUSH4",
      "value": "0x6BFC324F"
    },
    "13624": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "13626": {
      "op": "SHL"
    },
    "13627": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8393,
        8423
      ],
      "op": "DUP2",
      "path": "2"
    },
    "13628": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8393,
        8423
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "13629": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8393,
        8423
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "13631": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8393,
        8423
      ],
      "op": "DUP2",
      "path": "2"
    },
    "13632": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8393,
        8423
      ],
      "op": "ADD",
      "path": "2"
    },
    "13633": {
      "op": "DUP15"
    },
    "13634": {
      "op": "SWAP1"
    },
    "13635": {
      "op": "MSTORE"
    },
    "13636": {
      "offset": [
        1788,
        1790
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "13638": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "13640": {
      "op": "DUP3"
    },
    "13641": {
      "op": "ADD"
    },
    "13642": {
      "op": "MSTORE"
    },
    "13643": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13645": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13647": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13649": {
      "op": "SHL"
    },
    "13650": {
      "op": "SUB"
    },
    "13651": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8393,
        8405
      ],
      "op": "DUP10",
      "path": "2"
    },
    "13652": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8393,
        8405
      ],
      "op": "AND",
      "path": "2"
    },
    "13653": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8393,
        8405
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "13654": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8393,
        8405
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x6BFC324F"
    },
    "13659": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8393,
        8405
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "13660": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "13662": {
      "op": "ADD"
    },
    "13663": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8393,
        8423
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "13665": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8393,
        8423
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "13667": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8393,
        8423
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "13668": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8393,
        8423
      ],
      "op": "DUP1",
      "path": "2"
    },
    "13669": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8393,
        8423
      ],
      "op": "DUP4",
      "path": "2"
    },
    "13670": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8393,
        8423
      ],
      "op": "SUB",
      "path": "2"
    },
    "13671": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8393,
        8423
      ],
      "op": "DUP2",
      "path": "2"
    },
    "13672": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8393,
        8423
      ],
      "op": "DUP7",
      "path": "2"
    },
    "13673": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8393,
        8423
      ],
      "op": "GAS",
      "path": "2"
    },
    "13674": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8393,
        8423
      ],
      "op": "STATICCALL",
      "path": "2"
    },
    "13675": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8393,
        8423
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "13676": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8393,
        8423
      ],
      "op": "DUP1",
      "path": "2"
    },
    "13677": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8393,
        8423
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "13678": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8393,
        8423
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x357B"
    },
    "13681": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8393,
        8423
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "13682": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8393,
        8423
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "13683": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8393,
        8423
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "13685": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8393,
        8423
      ],
      "op": "DUP1",
      "path": "2"
    },
    "13686": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8393,
        8423
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "13687": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8393,
        8423
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "13688": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8393,
        8423
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "13690": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8393,
        8423
      ],
      "op": "REVERT",
      "path": "2"
    },
    "13691": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8393,
        8423
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "13692": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8393,
        8423
      ],
      "op": "POP",
      "path": "2"
    },
    "13693": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8393,
        8423
      ],
      "op": "POP",
      "path": "2"
    },
    "13694": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8393,
        8423
      ],
      "op": "POP",
      "path": "2"
    },
    "13695": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8393,
        8423
      ],
      "op": "POP",
      "path": "2"
    },
    "13696": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8393,
        8423
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "13698": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8393,
        8423
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "13699": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8393,
        8423
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "13700": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8393,
        8423
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "13702": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8393,
        8423
      ],
      "op": "NOT",
      "path": "2"
    },
    "13703": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8393,
        8423
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "13705": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8393,
        8423
      ],
      "op": "DUP3",
      "path": "2"
    },
    "13706": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8393,
        8423
      ],
      "op": "ADD",
      "path": "2"
    },
    "13707": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8393,
        8423
      ],
      "op": "AND",
      "path": "2"
    },
    "13708": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8393,
        8423
      ],
      "op": "DUP3",
      "path": "2"
    },
    "13709": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8393,
        8423
      ],
      "op": "ADD",
      "path": "2"
    },
    "13710": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8393,
        8423
      ],
      "op": "DUP1",
      "path": "2"
    },
    "13711": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8393,
        8423
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "13713": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8393,
        8423
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "13714": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8393,
        8423
      ],
      "op": "POP",
      "path": "2"
    },
    "13715": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8393,
        8423
      ],
      "op": "DUP2",
      "path": "2"
    },
    "13716": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8393,
        8423
      ],
      "op": "ADD",
      "path": "2"
    },
    "13717": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8393,
        8423
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "13718": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8393,
        8423
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x359F"
    },
    "13721": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8393,
        8423
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "13722": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8393,
        8423
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "13723": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8393,
        8423
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4BCC"
    },
    "13726": {
      "fn": "BaseLoot.activateAO",
      "jump": "i",
      "offset": [
        8393,
        8423
      ],
      "op": "JUMP",
      "path": "2"
    },
    "13727": {
      "branch": 213,
      "fn": "BaseLoot.activateAO",
      "offset": [
        8393,
        8423
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "13728": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8390,
        8668
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "13729": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8390,
        8668
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x369A"
    },
    "13732": {
      "branch": 213,
      "fn": "BaseLoot.activateAO",
      "offset": [
        8390,
        8668
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "13733": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8452,
        8456
      ],
      "op": "DUP8",
      "path": "2",
      "statement": 99
    },
    "13734": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13736": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13738": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13740": {
      "op": "SHL"
    },
    "13741": {
      "op": "SUB"
    },
    "13742": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8452,
        8463
      ],
      "op": "AND",
      "path": "2"
    },
    "13743": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8452,
        8463
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x995B08FC"
    },
    "13748": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8464,
        8468
      ],
      "op": "DUP15",
      "path": "2"
    },
    "13749": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8470,
        8477
      ],
      "op": "DUP15",
      "path": "2"
    },
    "13750": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8489,
        8511
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x35BE"
    },
    "13753": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8505,
        8510
      ],
      "op": "DUP12",
      "path": "2"
    },
    "13754": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8489,
        8504
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3FF8"
    },
    "13757": {
      "fn": "BaseLoot.activateAO",
      "jump": "i",
      "offset": [
        8489,
        8511
      ],
      "op": "JUMP",
      "path": "2"
    },
    "13758": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8489,
        8511
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "13759": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8479,
        8511
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x35C8"
    },
    "13762": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8479,
        8511
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "13763": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8479,
        8486
      ],
      "op": "DUP16",
      "path": "2"
    },
    "13764": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8479,
        8511
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4DB0"
    },
    "13767": {
      "fn": "BaseLoot.activateAO",
      "jump": "i",
      "offset": [
        8479,
        8511
      ],
      "op": "JUMP",
      "path": "2"
    },
    "13768": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8479,
        8511
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "13769": {
      "offset": [
        3917,
        3923
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "13771": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8519,
        8524
      ],
      "op": "DUP13",
      "path": "2"
    },
    "13772": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8519,
        8531
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "13774": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8519,
        8531
      ],
      "op": "ADD",
      "path": "2"
    },
    "13775": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8519,
        8531
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "13776": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8452,
        8532
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "13778": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8452,
        8532
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "13779": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8452,
        8532
      ],
      "op": "DUP7",
      "path": "2"
    },
    "13780": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8452,
        8532
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xFFFFFFFF"
    },
    "13785": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8452,
        8532
      ],
      "op": "AND",
      "path": "2"
    },
    "13786": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8452,
        8532
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE0"
    },
    "13788": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8452,
        8532
      ],
      "op": "SHL",
      "path": "2"
    },
    "13789": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8452,
        8532
      ],
      "op": "DUP2",
      "path": "2"
    },
    "13790": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8452,
        8532
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "13791": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8452,
        8532
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "13793": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8452,
        8532
      ],
      "op": "ADD",
      "path": "2"
    },
    "13794": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8452,
        8532
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x35EF"
    },
    "13797": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8452,
        8532
      ],
      "op": "SWAP6",
      "path": "2"
    },
    "13798": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8452,
        8532
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "13799": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8452,
        8532
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "13800": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8452,
        8532
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "13801": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8452,
        8532
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "13802": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8452,
        8532
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "13803": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8452,
        8532
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4BE9"
    },
    "13806": {
      "fn": "BaseLoot.activateAO",
      "jump": "i",
      "offset": [
        8452,
        8532
      ],
      "op": "JUMP",
      "path": "2"
    },
    "13807": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8452,
        8532
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "13808": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8452,
        8532
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "13810": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8452,
        8532
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "13812": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8452,
        8532
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "13813": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8452,
        8532
      ],
      "op": "DUP1",
      "path": "2"
    },
    "13814": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8452,
        8532
      ],
      "op": "DUP4",
      "path": "2"
    },
    "13815": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8452,
        8532
      ],
      "op": "SUB",
      "path": "2"
    },
    "13816": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8452,
        8532
      ],
      "op": "DUP2",
      "path": "2"
    },
    "13817": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8452,
        8532
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "13819": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8452,
        8532
      ],
      "op": "DUP8",
      "path": "2"
    },
    "13820": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8452,
        8532
      ],
      "op": "DUP1",
      "path": "2"
    },
    "13821": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8452,
        8532
      ],
      "op": "EXTCODESIZE",
      "path": "2"
    },
    "13822": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8452,
        8532
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "13823": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8452,
        8532
      ],
      "op": "DUP1",
      "path": "2"
    },
    "13824": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8452,
        8532
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "13825": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8452,
        8532
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3609"
    },
    "13828": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8452,
        8532
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "13829": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8452,
        8532
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "13831": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8452,
        8532
      ],
      "op": "DUP1",
      "path": "2"
    },
    "13832": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8452,
        8532
      ],
      "op": "REVERT",
      "path": "2"
    },
    "13833": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8452,
        8532
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "13834": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8452,
        8532
      ],
      "op": "POP",
      "path": "2"
    },
    "13835": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8452,
        8532
      ],
      "op": "GAS",
      "path": "2"
    },
    "13836": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8452,
        8532
      ],
      "op": "CALL",
      "path": "2"
    },
    "13837": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8452,
        8532
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "13838": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8452,
        8532
      ],
      "op": "DUP1",
      "path": "2"
    },
    "13839": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8452,
        8532
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "13840": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8452,
        8532
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x361D"
    },
    "13843": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8452,
        8532
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "13844": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8452,
        8532
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "13845": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8452,
        8532
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "13847": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8452,
        8532
      ],
      "op": "DUP1",
      "path": "2"
    },
    "13848": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8452,
        8532
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "13849": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8452,
        8532
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "13850": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8452,
        8532
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "13852": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8452,
        8532
      ],
      "op": "REVERT",
      "path": "2"
    },
    "13853": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8452,
        8532
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "13854": {
      "op": "POP"
    },
    "13855": {
      "op": "POP"
    },
    "13856": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8559,
        8585
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 100,
      "value": "0x40"
    },
    "13858": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8559,
        8585
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "13859": {
      "op": "PUSH4",
      "value": "0x17C57EDF"
    },
    "13864": {
      "op": "PUSH1",
      "value": "0xE3"
    },
    "13866": {
      "op": "SHL"
    },
    "13867": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8559,
        8585
      ],
      "op": "DUP2",
      "path": "2"
    },
    "13868": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8559,
        8585
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "13869": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8559,
        8585
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "13871": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8559,
        8585
      ],
      "op": "DUP2",
      "path": "2"
    },
    "13872": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8559,
        8585
      ],
      "op": "ADD",
      "path": "2"
    },
    "13873": {
      "op": "DUP16"
    },
    "13874": {
      "op": "SWAP1"
    },
    "13875": {
      "op": "MSTORE"
    },
    "13876": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8583,
        8584
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "13878": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "13880": {
      "op": "DUP3"
    },
    "13881": {
      "op": "ADD"
    },
    "13882": {
      "op": "MSTORE"
    },
    "13883": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13885": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13887": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13889": {
      "op": "SHL"
    },
    "13890": {
      "op": "SUB"
    },
    "13891": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8559,
        8573
      ],
      "op": "DUP12",
      "path": "2"
    },
    "13892": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8559,
        8573
      ],
      "op": "AND",
      "path": "2"
    },
    "13893": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8559,
        8573
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "13894": {
      "op": "POP"
    },
    "13895": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8559,
        8573
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xBE2BF6F8"
    },
    "13900": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8559,
        8573
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "13901": {
      "op": "POP"
    },
    "13902": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "13904": {
      "op": "ADD"
    },
    "13905": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8559,
        8585
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "13906": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8559,
        8585
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "13908": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8559,
        8585
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "13910": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8559,
        8585
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "13911": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8559,
        8585
      ],
      "op": "DUP1",
      "path": "2"
    },
    "13912": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8559,
        8585
      ],
      "op": "DUP4",
      "path": "2"
    },
    "13913": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8559,
        8585
      ],
      "op": "SUB",
      "path": "2"
    },
    "13914": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8559,
        8585
      ],
      "op": "DUP2",
      "path": "2"
    },
    "13915": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8559,
        8585
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "13917": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8559,
        8585
      ],
      "op": "DUP8",
      "path": "2"
    },
    "13918": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8559,
        8585
      ],
      "op": "GAS",
      "path": "2"
    },
    "13919": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8559,
        8585
      ],
      "op": "CALL",
      "path": "2"
    },
    "13920": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8559,
        8585
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "13921": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8559,
        8585
      ],
      "op": "DUP1",
      "path": "2"
    },
    "13922": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8559,
        8585
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "13923": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8559,
        8585
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3670"
    },
    "13926": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8559,
        8585
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "13927": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8559,
        8585
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "13928": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8559,
        8585
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "13930": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8559,
        8585
      ],
      "op": "DUP1",
      "path": "2"
    },
    "13931": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8559,
        8585
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "13932": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8559,
        8585
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "13933": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8559,
        8585
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "13935": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8559,
        8585
      ],
      "op": "REVERT",
      "path": "2"
    },
    "13936": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8559,
        8585
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "13937": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8559,
        8585
      ],
      "op": "POP",
      "path": "2"
    },
    "13938": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8559,
        8585
      ],
      "op": "POP",
      "path": "2"
    },
    "13939": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8559,
        8585
      ],
      "op": "POP",
      "path": "2"
    },
    "13940": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8559,
        8585
      ],
      "op": "POP",
      "path": "2"
    },
    "13941": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8559,
        8585
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "13943": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8559,
        8585
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "13944": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8559,
        8585
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "13945": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8559,
        8585
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "13947": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8559,
        8585
      ],
      "op": "NOT",
      "path": "2"
    },
    "13948": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8559,
        8585
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "13950": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8559,
        8585
      ],
      "op": "DUP3",
      "path": "2"
    },
    "13951": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8559,
        8585
      ],
      "op": "ADD",
      "path": "2"
    },
    "13952": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8559,
        8585
      ],
      "op": "AND",
      "path": "2"
    },
    "13953": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8559,
        8585
      ],
      "op": "DUP3",
      "path": "2"
    },
    "13954": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8559,
        8585
      ],
      "op": "ADD",
      "path": "2"
    },
    "13955": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8559,
        8585
      ],
      "op": "DUP1",
      "path": "2"
    },
    "13956": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8559,
        8585
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "13958": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8559,
        8585
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "13959": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8559,
        8585
      ],
      "op": "POP",
      "path": "2"
    },
    "13960": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8559,
        8585
      ],
      "op": "DUP2",
      "path": "2"
    },
    "13961": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8559,
        8585
      ],
      "op": "ADD",
      "path": "2"
    },
    "13962": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8559,
        8585
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "13963": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8559,
        8585
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3694"
    },
    "13966": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8559,
        8585
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "13967": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8559,
        8585
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "13968": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8559,
        8585
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4E24"
    },
    "13971": {
      "fn": "BaseLoot.activateAO",
      "jump": "i",
      "offset": [
        8559,
        8585
      ],
      "op": "JUMP",
      "path": "2"
    },
    "13972": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8559,
        8585
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "13973": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8559,
        8585
      ],
      "op": "POP",
      "path": "2"
    },
    "13974": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8340,
        9153
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x38DB"
    },
    "13977": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8340,
        9153
      ],
      "op": "JUMP",
      "path": "2"
    },
    "13978": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8390,
        8668
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "13979": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8612,
        8616
      ],
      "op": "DUP8",
      "path": "2",
      "statement": 101
    },
    "13980": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13982": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13984": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13986": {
      "op": "SHL"
    },
    "13987": {
      "op": "SUB"
    },
    "13988": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8612,
        8620
      ],
      "op": "AND",
      "path": "2"
    },
    "13989": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8612,
        8620
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x480A962B"
    },
    "13994": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8621,
        8631
      ],
      "op": "CALLER",
      "path": "2"
    },
    "13995": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8633,
        8637
      ],
      "op": "DUP16",
      "path": "2"
    },
    "13996": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8639,
        8646
      ],
      "op": "DUP16",
      "path": "2"
    },
    "13997": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8648,
        8652
      ],
      "op": "DUP16",
      "path": "2"
    },
    "13998": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8654,
        8661
      ],
      "op": "DUP16",
      "path": "2"
    },
    "13999": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8612,
        8662
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "14001": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8612,
        8662
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "14002": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8612,
        8662
      ],
      "op": "DUP7",
      "path": "2"
    },
    "14003": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8612,
        8662
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xFFFFFFFF"
    },
    "14008": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8612,
        8662
      ],
      "op": "AND",
      "path": "2"
    },
    "14009": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8612,
        8662
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE0"
    },
    "14011": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8612,
        8662
      ],
      "op": "SHL",
      "path": "2"
    },
    "14012": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8612,
        8662
      ],
      "op": "DUP2",
      "path": "2"
    },
    "14013": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8612,
        8662
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "14014": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8612,
        8662
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "14016": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8612,
        8662
      ],
      "op": "ADD",
      "path": "2"
    },
    "14017": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8612,
        8662
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x34F0"
    },
    "14020": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8612,
        8662
      ],
      "op": "SWAP6",
      "path": "2"
    },
    "14021": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8612,
        8662
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "14022": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8612,
        8662
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "14023": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8612,
        8662
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "14024": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8612,
        8662
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "14025": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8612,
        8662
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "14026": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8612,
        8662
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4F06"
    },
    "14029": {
      "fn": "BaseLoot.activateAO",
      "jump": "i",
      "offset": [
        8612,
        8662
      ],
      "op": "JUMP",
      "path": "2"
    },
    "14030": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8340,
        9153
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "14031": {
      "offset": [
        2222,
        2224
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3D"
    },
    "14033": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8696,
        8700
      ],
      "op": "DUP12",
      "path": "2"
    },
    "14034": {
      "branch": 214,
      "fn": "BaseLoot.activateAO",
      "offset": [
        8696,
        8709
      ],
      "op": "SUB",
      "path": "2"
    },
    "14035": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8692,
        9153
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3874"
    },
    "14038": {
      "branch": 214,
      "fn": "BaseLoot.activateAO",
      "offset": [
        8692,
        9153
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "14039": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8745,
        8770
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 102,
      "value": "0x40"
    },
    "14041": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8745,
        8770
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "14042": {
      "op": "PUSH4",
      "value": "0x6BFC324F"
    },
    "14047": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "14049": {
      "op": "SHL"
    },
    "14050": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8745,
        8770
      ],
      "op": "DUP2",
      "path": "2"
    },
    "14051": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8745,
        8770
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "14052": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8745,
        8770
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "14054": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8745,
        8770
      ],
      "op": "DUP2",
      "path": "2"
    },
    "14055": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8745,
        8770
      ],
      "op": "ADD",
      "path": "2"
    },
    "14056": {
      "op": "DUP15"
    },
    "14057": {
      "op": "SWAP1"
    },
    "14058": {
      "op": "MSTORE"
    },
    "14059": {
      "offset": [
        2222,
        2224
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3D"
    },
    "14061": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "14063": {
      "op": "DUP3"
    },
    "14064": {
      "op": "ADD"
    },
    "14065": {
      "op": "MSTORE"
    },
    "14066": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14068": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14070": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14072": {
      "op": "SHL"
    },
    "14073": {
      "op": "SUB"
    },
    "14074": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8745,
        8757
      ],
      "op": "DUP10",
      "path": "2"
    },
    "14075": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8745,
        8757
      ],
      "op": "AND",
      "path": "2"
    },
    "14076": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8745,
        8757
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "14077": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8745,
        8757
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x6BFC324F"
    },
    "14082": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8745,
        8757
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "14083": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "14085": {
      "op": "ADD"
    },
    "14086": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8745,
        8770
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "14088": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8745,
        8770
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "14090": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8745,
        8770
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "14091": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8745,
        8770
      ],
      "op": "DUP1",
      "path": "2"
    },
    "14092": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8745,
        8770
      ],
      "op": "DUP4",
      "path": "2"
    },
    "14093": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8745,
        8770
      ],
      "op": "SUB",
      "path": "2"
    },
    "14094": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8745,
        8770
      ],
      "op": "DUP2",
      "path": "2"
    },
    "14095": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8745,
        8770
      ],
      "op": "DUP7",
      "path": "2"
    },
    "14096": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8745,
        8770
      ],
      "op": "GAS",
      "path": "2"
    },
    "14097": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8745,
        8770
      ],
      "op": "STATICCALL",
      "path": "2"
    },
    "14098": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8745,
        8770
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "14099": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8745,
        8770
      ],
      "op": "DUP1",
      "path": "2"
    },
    "14100": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8745,
        8770
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "14101": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8745,
        8770
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3722"
    },
    "14104": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8745,
        8770
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "14105": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8745,
        8770
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "14106": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8745,
        8770
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "14108": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8745,
        8770
      ],
      "op": "DUP1",
      "path": "2"
    },
    "14109": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8745,
        8770
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "14110": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8745,
        8770
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "14111": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8745,
        8770
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "14113": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8745,
        8770
      ],
      "op": "REVERT",
      "path": "2"
    },
    "14114": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8745,
        8770
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "14115": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8745,
        8770
      ],
      "op": "POP",
      "path": "2"
    },
    "14116": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8745,
        8770
      ],
      "op": "POP",
      "path": "2"
    },
    "14117": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8745,
        8770
      ],
      "op": "POP",
      "path": "2"
    },
    "14118": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8745,
        8770
      ],
      "op": "POP",
      "path": "2"
    },
    "14119": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8745,
        8770
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "14121": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8745,
        8770
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "14122": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8745,
        8770
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "14123": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8745,
        8770
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "14125": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8745,
        8770
      ],
      "op": "NOT",
      "path": "2"
    },
    "14126": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8745,
        8770
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "14128": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8745,
        8770
      ],
      "op": "DUP3",
      "path": "2"
    },
    "14129": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8745,
        8770
      ],
      "op": "ADD",
      "path": "2"
    },
    "14130": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8745,
        8770
      ],
      "op": "AND",
      "path": "2"
    },
    "14131": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8745,
        8770
      ],
      "op": "DUP3",
      "path": "2"
    },
    "14132": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8745,
        8770
      ],
      "op": "ADD",
      "path": "2"
    },
    "14133": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8745,
        8770
      ],
      "op": "DUP1",
      "path": "2"
    },
    "14134": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8745,
        8770
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "14136": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8745,
        8770
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "14137": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8745,
        8770
      ],
      "op": "POP",
      "path": "2"
    },
    "14138": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8745,
        8770
      ],
      "op": "DUP2",
      "path": "2"
    },
    "14139": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8745,
        8770
      ],
      "op": "ADD",
      "path": "2"
    },
    "14140": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8745,
        8770
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "14141": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8745,
        8770
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3746"
    },
    "14144": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8745,
        8770
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "14145": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8745,
        8770
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "14146": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8745,
        8770
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4BCC"
    },
    "14149": {
      "fn": "BaseLoot.activateAO",
      "jump": "i",
      "offset": [
        8745,
        8770
      ],
      "op": "JUMP",
      "path": "2"
    },
    "14150": {
      "branch": 215,
      "fn": "BaseLoot.activateAO",
      "offset": [
        8745,
        8770
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "14151": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8737,
        8785
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x377F"
    },
    "14154": {
      "branch": 215,
      "fn": "BaseLoot.activateAO",
      "offset": [
        8737,
        8785
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "14155": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8737,
        8785
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "14157": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8737,
        8785
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "14158": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "14162": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "14164": {
      "op": "SHL"
    },
    "14165": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8737,
        8785
      ],
      "op": "DUP2",
      "path": "2"
    },
    "14166": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8737,
        8785
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "14167": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14169": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8737,
        8785
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "14171": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8737,
        8785
      ],
      "op": "DUP3",
      "path": "2"
    },
    "14172": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8737,
        8785
      ],
      "op": "ADD",
      "path": "2"
    },
    "14173": {
      "op": "MSTORE"
    },
    "14174": {
      "op": "PUSH1",
      "value": "0xA"
    },
    "14176": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "14178": {
      "op": "DUP3"
    },
    "14179": {
      "op": "ADD"
    },
    "14180": {
      "op": "MSTORE"
    },
    "14181": {
      "op": "PUSH10",
      "value": "0x28BAB4B2BA103CB7BA97"
    },
    "14192": {
      "op": "PUSH1",
      "value": "0xB1"
    },
    "14194": {
      "op": "SHL"
    },
    "14195": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "14197": {
      "op": "DUP3"
    },
    "14198": {
      "op": "ADD"
    },
    "14199": {
      "op": "MSTORE"
    },
    "14200": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "14202": {
      "op": "ADD"
    },
    "14203": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8737,
        8785
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x60F"
    },
    "14206": {
      "op": "JUMP"
    },
    "14207": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8737,
        8785
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "14208": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8814,
        8820
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFE"
    },
    "14210": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8814,
        8820
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "14212": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8814,
        8820
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "14213": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8814,
        8820
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "14214": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8814,
        8820
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "14215": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8814,
        8820
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "14218": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8814,
        8820
      ],
      "op": "EXP",
      "path": "2"
    },
    "14219": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8814,
        8820
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "14220": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8814,
        8820
      ],
      "op": "DIV",
      "path": "2"
    },
    "14221": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14223": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14225": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14227": {
      "op": "SHL"
    },
    "14228": {
      "op": "SUB"
    },
    "14229": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8814,
        8820
      ],
      "op": "AND",
      "path": "2"
    },
    "14230": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14232": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14234": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14236": {
      "op": "SHL"
    },
    "14237": {
      "op": "SUB"
    },
    "14238": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8814,
        8829
      ],
      "op": "AND",
      "path": "2"
    },
    "14239": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8814,
        8829
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x55A82FC4"
    },
    "14244": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8830,
        8835
      ],
      "op": "DUP16",
      "path": "2"
    },
    "14245": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8837,
        8844
      ],
      "op": "DUP15",
      "path": "2"
    },
    "14246": {
      "offset": [
        3476,
        3481
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2710"
    },
    "14249": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8814,
        8858
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "14251": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8814,
        8858
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "14252": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8814,
        8858
      ],
      "op": "DUP5",
      "path": "2"
    },
    "14253": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8814,
        8858
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xFFFFFFFF"
    },
    "14258": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8814,
        8858
      ],
      "op": "AND",
      "path": "2"
    },
    "14259": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8814,
        8858
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE0"
    },
    "14261": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8814,
        8858
      ],
      "op": "SHL",
      "path": "2"
    },
    "14262": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8814,
        8858
      ],
      "op": "DUP2",
      "path": "2"
    },
    "14263": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8814,
        8858
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "14264": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8814,
        8858
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "14266": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8814,
        8858
      ],
      "op": "ADD",
      "path": "2"
    },
    "14267": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8814,
        8858
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x37C6"
    },
    "14270": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8814,
        8858
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "14271": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8814,
        8858
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "14272": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8814,
        8858
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "14273": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8814,
        8858
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "14274": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8814,
        8858
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4C51"
    },
    "14277": {
      "fn": "BaseLoot.activateAO",
      "jump": "i",
      "offset": [
        8814,
        8858
      ],
      "op": "JUMP",
      "path": "2"
    },
    "14278": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8814,
        8858
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "14279": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8814,
        8858
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "14281": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8814,
        8858
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "14283": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8814,
        8858
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "14284": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8814,
        8858
      ],
      "op": "DUP1",
      "path": "2"
    },
    "14285": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8814,
        8858
      ],
      "op": "DUP4",
      "path": "2"
    },
    "14286": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8814,
        8858
      ],
      "op": "SUB",
      "path": "2"
    },
    "14287": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8814,
        8858
      ],
      "op": "DUP2",
      "path": "2"
    },
    "14288": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8814,
        8858
      ],
      "op": "DUP7",
      "path": "2"
    },
    "14289": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8814,
        8858
      ],
      "op": "GAS",
      "path": "2"
    },
    "14290": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8814,
        8858
      ],
      "op": "STATICCALL",
      "path": "2"
    },
    "14291": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8814,
        8858
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "14292": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8814,
        8858
      ],
      "op": "DUP1",
      "path": "2"
    },
    "14293": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8814,
        8858
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "14294": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8814,
        8858
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x37E3"
    },
    "14297": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8814,
        8858
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "14298": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8814,
        8858
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "14299": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8814,
        8858
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "14301": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8814,
        8858
      ],
      "op": "DUP1",
      "path": "2"
    },
    "14302": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8814,
        8858
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "14303": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8814,
        8858
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "14304": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8814,
        8858
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "14306": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8814,
        8858
      ],
      "op": "REVERT",
      "path": "2"
    },
    "14307": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8814,
        8858
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "14308": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8814,
        8858
      ],
      "op": "POP",
      "path": "2"
    },
    "14309": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8814,
        8858
      ],
      "op": "POP",
      "path": "2"
    },
    "14310": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8814,
        8858
      ],
      "op": "POP",
      "path": "2"
    },
    "14311": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8814,
        8858
      ],
      "op": "POP",
      "path": "2"
    },
    "14312": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8814,
        8858
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "14314": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8814,
        8858
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "14315": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8814,
        8858
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "14316": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8814,
        8858
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "14318": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8814,
        8858
      ],
      "op": "NOT",
      "path": "2"
    },
    "14319": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8814,
        8858
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "14321": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8814,
        8858
      ],
      "op": "DUP3",
      "path": "2"
    },
    "14322": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8814,
        8858
      ],
      "op": "ADD",
      "path": "2"
    },
    "14323": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8814,
        8858
      ],
      "op": "AND",
      "path": "2"
    },
    "14324": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8814,
        8858
      ],
      "op": "DUP3",
      "path": "2"
    },
    "14325": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8814,
        8858
      ],
      "op": "ADD",
      "path": "2"
    },
    "14326": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8814,
        8858
      ],
      "op": "DUP1",
      "path": "2"
    },
    "14327": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8814,
        8858
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "14329": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8814,
        8858
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "14330": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8814,
        8858
      ],
      "op": "POP",
      "path": "2"
    },
    "14331": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8814,
        8858
      ],
      "op": "DUP2",
      "path": "2"
    },
    "14332": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8814,
        8858
      ],
      "op": "ADD",
      "path": "2"
    },
    "14333": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8814,
        8858
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "14334": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8814,
        8858
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3807"
    },
    "14337": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8814,
        8858
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "14338": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8814,
        8858
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "14339": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8814,
        8858
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4BCC"
    },
    "14342": {
      "fn": "BaseLoot.activateAO",
      "jump": "i",
      "offset": [
        8814,
        8858
      ],
      "op": "JUMP",
      "path": "2"
    },
    "14343": {
      "branch": 216,
      "fn": "BaseLoot.activateAO",
      "offset": [
        8814,
        8858
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "14344": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8811,
        9034
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "14345": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8811,
        9034
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3840"
    },
    "14348": {
      "branch": 216,
      "fn": "BaseLoot.activateAO",
      "offset": [
        8811,
        9034
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "14349": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8893,
        8919
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 103,
      "value": "0x40"
    },
    "14351": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8893,
        8919
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "14352": {
      "op": "PUSH4",
      "value": "0x17C57EDF"
    },
    "14357": {
      "op": "PUSH1",
      "value": "0xE3"
    },
    "14359": {
      "op": "SHL"
    },
    "14360": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8893,
        8919
      ],
      "op": "DUP2",
      "path": "2"
    },
    "14361": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8893,
        8919
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "14362": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8893,
        8919
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "14364": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8893,
        8919
      ],
      "op": "DUP2",
      "path": "2"
    },
    "14365": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8893,
        8919
      ],
      "op": "ADD",
      "path": "2"
    },
    "14366": {
      "op": "DUP14"
    },
    "14367": {
      "op": "SWAP1"
    },
    "14368": {
      "op": "MSTORE"
    },
    "14369": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8917,
        8918
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "14371": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "14373": {
      "op": "DUP3"
    },
    "14374": {
      "op": "ADD"
    },
    "14375": {
      "op": "MSTORE"
    },
    "14376": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14378": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14380": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14382": {
      "op": "SHL"
    },
    "14383": {
      "op": "SUB"
    },
    "14384": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8893,
        8907
      ],
      "op": "DUP10",
      "path": "2"
    },
    "14385": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8893,
        8907
      ],
      "op": "AND",
      "path": "2"
    },
    "14386": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8893,
        8907
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "14387": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8893,
        8907
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xBE2BF6F8"
    },
    "14392": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8893,
        8907
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "14393": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "14395": {
      "op": "ADD"
    },
    "14396": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8893,
        8919
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3651"
    },
    "14399": {
      "op": "JUMP"
    },
    "14400": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8811,
        9034
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "14401": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8974,
        8998
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 104,
      "value": "0x40"
    },
    "14403": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8974,
        8998
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "14404": {
      "op": "PUSH4",
      "value": "0x33667DB7"
    },
    "14409": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "14411": {
      "op": "SHL"
    },
    "14412": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8974,
        8998
      ],
      "op": "DUP2",
      "path": "2"
    },
    "14413": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8974,
        8998
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "14414": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8974,
        8998
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "14416": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8974,
        8998
      ],
      "op": "DUP2",
      "path": "2"
    },
    "14417": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8974,
        8998
      ],
      "op": "ADD",
      "path": "2"
    },
    "14418": {
      "op": "DUP14"
    },
    "14419": {
      "op": "SWAP1"
    },
    "14420": {
      "op": "MSTORE"
    },
    "14421": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8996,
        8997
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "14423": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "14425": {
      "op": "DUP3"
    },
    "14426": {
      "op": "ADD"
    },
    "14427": {
      "op": "MSTORE"
    },
    "14428": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14430": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14432": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14434": {
      "op": "SHL"
    },
    "14435": {
      "op": "SUB"
    },
    "14436": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8974,
        8986
      ],
      "op": "DUP10",
      "path": "2"
    },
    "14437": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8974,
        8986
      ],
      "op": "AND",
      "path": "2"
    },
    "14438": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8974,
        8986
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "14439": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8974,
        8986
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x66CCFB6E"
    },
    "14444": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8974,
        8986
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "14445": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "14447": {
      "op": "ADD"
    },
    "14448": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8974,
        8998
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x34F0"
    },
    "14451": {
      "op": "JUMP"
    },
    "14452": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8692,
        9153
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "14453": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        9084,
        9088
      ],
      "op": "DUP8",
      "path": "2",
      "statement": 105
    },
    "14454": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14456": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14458": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14460": {
      "op": "SHL"
    },
    "14461": {
      "op": "SUB"
    },
    "14462": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        9084,
        9092
      ],
      "op": "AND",
      "path": "2"
    },
    "14463": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        9084,
        9092
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x480A962B"
    },
    "14468": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        9093,
        9103
      ],
      "op": "CALLER",
      "path": "2"
    },
    "14469": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        9105,
        9109
      ],
      "op": "DUP16",
      "path": "2"
    },
    "14470": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        9111,
        9118
      ],
      "op": "DUP16",
      "path": "2"
    },
    "14471": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        9120,
        9124
      ],
      "op": "DUP16",
      "path": "2"
    },
    "14472": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        9126,
        9133
      ],
      "op": "DUP16",
      "path": "2"
    },
    "14473": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        9084,
        9134
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "14475": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        9084,
        9134
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "14476": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        9084,
        9134
      ],
      "op": "DUP7",
      "path": "2"
    },
    "14477": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        9084,
        9134
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xFFFFFFFF"
    },
    "14482": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        9084,
        9134
      ],
      "op": "AND",
      "path": "2"
    },
    "14483": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        9084,
        9134
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE0"
    },
    "14485": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        9084,
        9134
      ],
      "op": "SHL",
      "path": "2"
    },
    "14486": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        9084,
        9134
      ],
      "op": "DUP2",
      "path": "2"
    },
    "14487": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        9084,
        9134
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "14488": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        9084,
        9134
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "14490": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        9084,
        9134
      ],
      "op": "ADD",
      "path": "2"
    },
    "14491": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        9084,
        9134
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x38A8"
    },
    "14494": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        9084,
        9134
      ],
      "op": "SWAP6",
      "path": "2"
    },
    "14495": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        9084,
        9134
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "14496": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        9084,
        9134
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "14497": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        9084,
        9134
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "14498": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        9084,
        9134
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "14499": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        9084,
        9134
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "14500": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        9084,
        9134
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4F06"
    },
    "14503": {
      "fn": "BaseLoot.activateAO",
      "jump": "i",
      "offset": [
        9084,
        9134
      ],
      "op": "JUMP",
      "path": "2"
    },
    "14504": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        9084,
        9134
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "14505": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        9084,
        9134
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "14507": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        9084,
        9134
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "14509": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        9084,
        9134
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "14510": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        9084,
        9134
      ],
      "op": "DUP1",
      "path": "2"
    },
    "14511": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        9084,
        9134
      ],
      "op": "DUP4",
      "path": "2"
    },
    "14512": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        9084,
        9134
      ],
      "op": "SUB",
      "path": "2"
    },
    "14513": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        9084,
        9134
      ],
      "op": "DUP2",
      "path": "2"
    },
    "14514": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        9084,
        9134
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "14516": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        9084,
        9134
      ],
      "op": "DUP8",
      "path": "2"
    },
    "14517": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        9084,
        9134
      ],
      "op": "DUP1",
      "path": "2"
    },
    "14518": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        9084,
        9134
      ],
      "op": "EXTCODESIZE",
      "path": "2"
    },
    "14519": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        9084,
        9134
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "14520": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        9084,
        9134
      ],
      "op": "DUP1",
      "path": "2"
    },
    "14521": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        9084,
        9134
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "14522": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        9084,
        9134
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x38C2"
    },
    "14525": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        9084,
        9134
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "14526": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        9084,
        9134
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "14528": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        9084,
        9134
      ],
      "op": "DUP1",
      "path": "2"
    },
    "14529": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        9084,
        9134
      ],
      "op": "REVERT",
      "path": "2"
    },
    "14530": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        9084,
        9134
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "14531": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        9084,
        9134
      ],
      "op": "POP",
      "path": "2"
    },
    "14532": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        9084,
        9134
      ],
      "op": "GAS",
      "path": "2"
    },
    "14533": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        9084,
        9134
      ],
      "op": "CALL",
      "path": "2"
    },
    "14534": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        9084,
        9134
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "14535": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        9084,
        9134
      ],
      "op": "DUP1",
      "path": "2"
    },
    "14536": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        9084,
        9134
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "14537": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        9084,
        9134
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x38D6"
    },
    "14540": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        9084,
        9134
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "14541": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        9084,
        9134
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "14542": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        9084,
        9134
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "14544": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        9084,
        9134
      ],
      "op": "DUP1",
      "path": "2"
    },
    "14545": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        9084,
        9134
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "14546": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        9084,
        9134
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "14547": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        9084,
        9134
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "14549": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        9084,
        9134
      ],
      "op": "REVERT",
      "path": "2"
    },
    "14550": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        9084,
        9134
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "14551": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        9084,
        9134
      ],
      "op": "POP",
      "path": "2"
    },
    "14552": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        9084,
        9134
      ],
      "op": "POP",
      "path": "2"
    },
    "14553": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        9084,
        9134
      ],
      "op": "POP",
      "path": "2"
    },
    "14554": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        9084,
        9134
      ],
      "op": "POP",
      "path": "2"
    },
    "14555": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        8692,
        9153
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "14556": {
      "op": "POP"
    },
    "14557": {
      "op": "POP"
    },
    "14558": {
      "offset": [
        4346,
        4347
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x6"
    },
    "14560": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        9156,
        9168
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 106,
      "value": "0xA0"
    },
    "14562": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        9156,
        9168
      ],
      "op": "DUP7",
      "path": "2"
    },
    "14563": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        9156,
        9168
      ],
      "op": "ADD",
      "path": "2"
    },
    "14564": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        9156,
        9188
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "14565": {
      "op": "POP"
    },
    "14566": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        9156,
        9161
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "14567": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        9156,
        9161
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "14568": {
      "op": "POP"
    },
    "14569": {
      "op": "POP"
    },
    "14570": {
      "op": "POP"
    },
    "14571": {
      "op": "POP"
    },
    "14572": {
      "op": "POP"
    },
    "14573": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6376,
        9208
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "14574": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6376,
        9208
      ],
      "op": "SWAP6",
      "path": "2"
    },
    "14575": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6376,
        9208
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "14576": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6376,
        9208
      ],
      "op": "POP",
      "path": "2"
    },
    "14577": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6376,
        9208
      ],
      "op": "POP",
      "path": "2"
    },
    "14578": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6376,
        9208
      ],
      "op": "POP",
      "path": "2"
    },
    "14579": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6376,
        9208
      ],
      "op": "POP",
      "path": "2"
    },
    "14580": {
      "fn": "BaseLoot.activateAO",
      "offset": [
        6376,
        9208
      ],
      "op": "POP",
      "path": "2"
    },
    "14581": {
      "fn": "BaseLoot.activateAO",
      "jump": "o",
      "offset": [
        6376,
        9208
      ],
      "op": "JUMP",
      "path": "2"
    },
    "14582": {
      "fn": "ERC1155Upgradeable.safeTransferFrom",
      "offset": [
        4113,
        4514
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "14583": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14585": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14587": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14589": {
      "op": "SHL"
    },
    "14590": {
      "op": "SUB"
    },
    "14591": {
      "fn": "ERC1155Upgradeable.safeTransferFrom",
      "offset": [
        4321,
        4341
      ],
      "op": "DUP6",
      "path": "32",
      "statement": 107
    },
    "14592": {
      "fn": "ERC1155Upgradeable.safeTransferFrom",
      "offset": [
        4321,
        4341
      ],
      "op": "AND",
      "path": "32"
    },
    "14593": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        952,
        962
      ],
      "op": "CALLER",
      "path": "42"
    },
    "14594": {
      "fn": "ERC1155Upgradeable.safeTransferFrom",
      "offset": [
        4321,
        4341
      ],
      "op": "EQ",
      "path": "32"
    },
    "14595": {
      "branch": 225,
      "fn": "ERC1155Upgradeable.safeTransferFrom",
      "offset": [
        4321,
        4341
      ],
      "op": "DUP1",
      "path": "32"
    },
    "14596": {
      "fn": "ERC1155Upgradeable.safeTransferFrom",
      "offset": [
        4321,
        4381
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x3912"
    },
    "14599": {
      "branch": 225,
      "fn": "ERC1155Upgradeable.safeTransferFrom",
      "offset": [
        4321,
        4381
      ],
      "op": "JUMPI",
      "path": "32"
    },
    "14600": {
      "op": "POP"
    },
    "14601": {
      "fn": "ERC1155Upgradeable.safeTransferFrom",
      "offset": [
        4345,
        4381
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x3912"
    },
    "14604": {
      "fn": "ERC1155Upgradeable.safeTransferFrom",
      "offset": [
        4362,
        4366
      ],
      "op": "DUP6",
      "path": "32"
    },
    "14605": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        952,
        962
      ],
      "op": "CALLER",
      "path": "42"
    },
    "14606": {
      "fn": "ERC1155Upgradeable.isApprovedForAll",
      "offset": [
        3873,
        4041
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x539"
    },
    "14609": {
      "fn": "ERC1155Upgradeable.isApprovedForAll",
      "jump": "i",
      "offset": [
        3873,
        4041
      ],
      "op": "JUMP",
      "path": "32"
    },
    "14610": {
      "branch": 226,
      "fn": "ERC1155Upgradeable.safeTransferFrom",
      "offset": [
        4345,
        4381
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "14611": {
      "fn": "ERC1155Upgradeable.safeTransferFrom",
      "offset": [
        4299,
        4450
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x392E"
    },
    "14614": {
      "branch": 226,
      "fn": "ERC1155Upgradeable.safeTransferFrom",
      "offset": [
        4299,
        4450
      ],
      "op": "JUMPI",
      "path": "32"
    },
    "14615": {
      "fn": "ERC1155Upgradeable.safeTransferFrom",
      "offset": [
        4299,
        4450
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x40"
    },
    "14617": {
      "fn": "ERC1155Upgradeable.safeTransferFrom",
      "offset": [
        4299,
        4450
      ],
      "op": "MLOAD",
      "path": "32"
    },
    "14618": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "14622": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "14624": {
      "op": "SHL"
    },
    "14625": {
      "fn": "ERC1155Upgradeable.safeTransferFrom",
      "offset": [
        4299,
        4450
      ],
      "op": "DUP2",
      "path": "32"
    },
    "14626": {
      "fn": "ERC1155Upgradeable.safeTransferFrom",
      "offset": [
        4299,
        4450
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "14627": {
      "fn": "ERC1155Upgradeable.safeTransferFrom",
      "offset": [
        4299,
        4450
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x4"
    },
    "14629": {
      "fn": "ERC1155Upgradeable.safeTransferFrom",
      "offset": [
        4299,
        4450
      ],
      "op": "ADD",
      "path": "32"
    },
    "14630": {
      "fn": "ERC1155Upgradeable.safeTransferFrom",
      "offset": [
        4299,
        4450
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x60F"
    },
    "14633": {
      "fn": "ERC1155Upgradeable.safeTransferFrom",
      "offset": [
        4299,
        4450
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "14634": {
      "fn": "ERC1155Upgradeable.safeTransferFrom",
      "offset": [
        4299,
        4450
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x4E3D"
    },
    "14637": {
      "fn": "ERC1155Upgradeable.safeTransferFrom",
      "jump": "i",
      "offset": [
        4299,
        4450
      ],
      "op": "JUMP",
      "path": "32"
    },
    "14638": {
      "fn": "ERC1155Upgradeable.safeTransferFrom",
      "offset": [
        4299,
        4450
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "14639": {
      "fn": "ERC1155Upgradeable.safeTransferFrom",
      "offset": [
        4461,
        4506
      ],
      "op": "PUSH2",
      "path": "32",
      "statement": 108,
      "value": "0xE41"
    },
    "14642": {
      "fn": "ERC1155Upgradeable.safeTransferFrom",
      "offset": [
        4479,
        4483
      ],
      "op": "DUP6",
      "path": "32"
    },
    "14643": {
      "fn": "ERC1155Upgradeable.safeTransferFrom",
      "offset": [
        4485,
        4487
      ],
      "op": "DUP6",
      "path": "32"
    },
    "14644": {
      "fn": "ERC1155Upgradeable.safeTransferFrom",
      "offset": [
        4489,
        4491
      ],
      "op": "DUP6",
      "path": "32"
    },
    "14645": {
      "fn": "ERC1155Upgradeable.safeTransferFrom",
      "offset": [
        4493,
        4499
      ],
      "op": "DUP6",
      "path": "32"
    },
    "14646": {
      "fn": "ERC1155Upgradeable.safeTransferFrom",
      "offset": [
        4501,
        4505
      ],
      "op": "DUP6",
      "path": "32"
    },
    "14647": {
      "fn": "ERC1155Upgradeable.safeTransferFrom",
      "offset": [
        4461,
        4478
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x4008"
    },
    "14650": {
      "fn": "ERC1155Upgradeable.safeTransferFrom",
      "jump": "i",
      "offset": [
        4461,
        4506
      ],
      "op": "JUMP",
      "path": "32"
    },
    "14651": {
      "fn": "ERC1155BurnableUpgradeable.burn",
      "offset": [
        665,
        986
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "14652": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14654": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14656": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14658": {
      "op": "SHL"
    },
    "14659": {
      "op": "SUB"
    },
    "14660": {
      "fn": "ERC1155BurnableUpgradeable.burn",
      "offset": [
        805,
        828
      ],
      "op": "DUP4",
      "path": "35",
      "statement": 109
    },
    "14661": {
      "fn": "ERC1155BurnableUpgradeable.burn",
      "offset": [
        805,
        828
      ],
      "op": "AND",
      "path": "35"
    },
    "14662": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        952,
        962
      ],
      "op": "CALLER",
      "path": "42"
    },
    "14663": {
      "fn": "ERC1155BurnableUpgradeable.burn",
      "offset": [
        805,
        828
      ],
      "op": "EQ",
      "path": "35"
    },
    "14664": {
      "branch": 219,
      "fn": "ERC1155BurnableUpgradeable.burn",
      "offset": [
        805,
        828
      ],
      "op": "DUP1",
      "path": "35"
    },
    "14665": {
      "fn": "ERC1155BurnableUpgradeable.burn",
      "offset": [
        805,
        871
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x3957"
    },
    "14668": {
      "branch": 219,
      "fn": "ERC1155BurnableUpgradeable.burn",
      "offset": [
        805,
        871
      ],
      "op": "JUMPI",
      "path": "35"
    },
    "14669": {
      "op": "POP"
    },
    "14670": {
      "fn": "ERC1155BurnableUpgradeable.burn",
      "offset": [
        832,
        871
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x3957"
    },
    "14673": {
      "fn": "ERC1155BurnableUpgradeable.burn",
      "offset": [
        849,
        856
      ],
      "op": "DUP4",
      "path": "35"
    },
    "14674": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        952,
        962
      ],
      "op": "CALLER",
      "path": "42"
    },
    "14675": {
      "fn": "ERC1155Upgradeable.isApprovedForAll",
      "offset": [
        3873,
        4041
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x539"
    },
    "14678": {
      "fn": "ERC1155Upgradeable.isApprovedForAll",
      "jump": "i",
      "offset": [
        3873,
        4041
      ],
      "op": "JUMP",
      "path": "32"
    },
    "14679": {
      "branch": 220,
      "fn": "ERC1155BurnableUpgradeable.burn",
      "offset": [
        832,
        871
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "14680": {
      "fn": "ERC1155BurnableUpgradeable.burn",
      "offset": [
        783,
        940
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0xD0E"
    },
    "14683": {
      "branch": 220,
      "fn": "ERC1155BurnableUpgradeable.burn",
      "offset": [
        783,
        940
      ],
      "op": "JUMPI",
      "path": "35"
    },
    "14684": {
      "fn": "ERC1155BurnableUpgradeable.burn",
      "offset": [
        783,
        940
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x40"
    },
    "14686": {
      "fn": "ERC1155BurnableUpgradeable.burn",
      "offset": [
        783,
        940
      ],
      "op": "MLOAD",
      "path": "35"
    },
    "14687": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "14691": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "14693": {
      "op": "SHL"
    },
    "14694": {
      "fn": "ERC1155BurnableUpgradeable.burn",
      "offset": [
        783,
        940
      ],
      "op": "DUP2",
      "path": "35"
    },
    "14695": {
      "fn": "ERC1155BurnableUpgradeable.burn",
      "offset": [
        783,
        940
      ],
      "op": "MSTORE",
      "path": "35"
    },
    "14696": {
      "fn": "ERC1155BurnableUpgradeable.burn",
      "offset": [
        783,
        940
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x4"
    },
    "14698": {
      "fn": "ERC1155BurnableUpgradeable.burn",
      "offset": [
        783,
        940
      ],
      "op": "ADD",
      "path": "35"
    },
    "14699": {
      "fn": "ERC1155BurnableUpgradeable.burn",
      "offset": [
        783,
        940
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x60F"
    },
    "14702": {
      "fn": "ERC1155BurnableUpgradeable.burn",
      "offset": [
        783,
        940
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "14703": {
      "fn": "ERC1155BurnableUpgradeable.burn",
      "offset": [
        783,
        940
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x4E3D"
    },
    "14706": {
      "fn": "ERC1155BurnableUpgradeable.burn",
      "jump": "i",
      "offset": [
        783,
        940
      ],
      "op": "JUMP",
      "path": "35"
    },
    "14707": {
      "fn": "ERC1155Upgradeable._burn",
      "offset": [
        11441,
        12249
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "14708": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14710": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14712": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14714": {
      "op": "SHL"
    },
    "14715": {
      "op": "SUB"
    },
    "14716": {
      "fn": "ERC1155Upgradeable._burn",
      "offset": [
        11568,
        11586
      ],
      "op": "DUP4",
      "path": "32",
      "statement": 110
    },
    "14717": {
      "branch": 227,
      "fn": "ERC1155Upgradeable._burn",
      "offset": [
        11568,
        11586
      ],
      "op": "AND",
      "path": "32"
    },
    "14718": {
      "fn": "ERC1155Upgradeable._burn",
      "offset": [
        11560,
        11626
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x3999"
    },
    "14721": {
      "branch": 227,
      "fn": "ERC1155Upgradeable._burn",
      "offset": [
        11560,
        11626
      ],
      "op": "JUMPI",
      "path": "32"
    },
    "14722": {
      "fn": "ERC1155Upgradeable._burn",
      "offset": [
        11560,
        11626
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x40"
    },
    "14724": {
      "fn": "ERC1155Upgradeable._burn",
      "offset": [
        11560,
        11626
      ],
      "op": "MLOAD",
      "path": "32"
    },
    "14725": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "14729": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "14731": {
      "op": "SHL"
    },
    "14732": {
      "fn": "ERC1155Upgradeable._burn",
      "offset": [
        11560,
        11626
      ],
      "op": "DUP2",
      "path": "32"
    },
    "14733": {
      "fn": "ERC1155Upgradeable._burn",
      "offset": [
        11560,
        11626
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "14734": {
      "fn": "ERC1155Upgradeable._burn",
      "offset": [
        11560,
        11626
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x4"
    },
    "14736": {
      "fn": "ERC1155Upgradeable._burn",
      "offset": [
        11560,
        11626
      ],
      "op": "ADD",
      "path": "32"
    },
    "14737": {
      "fn": "ERC1155Upgradeable._burn",
      "offset": [
        11560,
        11626
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x60F"
    },
    "14740": {
      "fn": "ERC1155Upgradeable._burn",
      "offset": [
        11560,
        11626
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "14741": {
      "fn": "ERC1155Upgradeable._burn",
      "offset": [
        11560,
        11626
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x4F34"
    },
    "14744": {
      "fn": "ERC1155Upgradeable._burn",
      "jump": "i",
      "offset": [
        11560,
        11626
      ],
      "op": "JUMP",
      "path": "32"
    },
    "14745": {
      "fn": "ERC1155Upgradeable._burn",
      "offset": [
        11560,
        11626
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "14746": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        952,
        962
      ],
      "op": "CALLER",
      "path": "42"
    },
    "14747": {
      "fn": "ERC1155Upgradeable._burn",
      "offset": [
        11639,
        11655
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x0"
    },
    "14749": {
      "fn": "ERC1155Upgradeable._burn",
      "offset": [
        11704,
        11725
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x39A5"
    },
    "14752": {
      "fn": "ERC1155Upgradeable._burn",
      "offset": [
        11722,
        11724
      ],
      "op": "DUP5",
      "path": "32"
    },
    "14753": {
      "fn": "ERC1155Upgradeable._burn",
      "offset": [
        11704,
        11721
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x4119"
    },
    "14756": {
      "fn": "ERC1155Upgradeable._burn",
      "jump": "i",
      "offset": [
        11704,
        11725
      ],
      "op": "JUMP",
      "path": "32"
    },
    "14757": {
      "fn": "ERC1155Upgradeable._burn",
      "offset": [
        11704,
        11725
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "14758": {
      "fn": "ERC1155Upgradeable._burn",
      "offset": [
        11681,
        11725
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "14759": {
      "fn": "ERC1155Upgradeable._burn",
      "offset": [
        11681,
        11725
      ],
      "op": "POP",
      "path": "32"
    },
    "14760": {
      "fn": "ERC1155Upgradeable._burn",
      "offset": [
        11736,
        11760
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x0"
    },
    "14762": {
      "fn": "ERC1155Upgradeable._burn",
      "offset": [
        11763,
        11788
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x39B2"
    },
    "14765": {
      "fn": "ERC1155Upgradeable._burn",
      "offset": [
        11781,
        11787
      ],
      "op": "DUP5",
      "path": "32"
    },
    "14766": {
      "fn": "ERC1155Upgradeable._burn",
      "offset": [
        11763,
        11780
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x4119"
    },
    "14769": {
      "fn": "ERC1155Upgradeable._burn",
      "jump": "i",
      "offset": [
        11763,
        11788
      ],
      "op": "JUMP",
      "path": "32"
    },
    "14770": {
      "fn": "ERC1155Upgradeable._burn",
      "offset": [
        11763,
        11788
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "14771": {
      "fn": "ERC1155Upgradeable._burn",
      "offset": [
        11801,
        11867
      ],
      "op": "PUSH1",
      "path": "32",
      "statement": 111,
      "value": "0x40"
    },
    "14773": {
      "fn": "ERC1155Upgradeable._burn",
      "offset": [
        11801,
        11867
      ],
      "op": "DUP1",
      "path": "32"
    },
    "14774": {
      "fn": "ERC1155Upgradeable._burn",
      "offset": [
        11801,
        11867
      ],
      "op": "MLOAD",
      "path": "32"
    },
    "14775": {
      "fn": "ERC1155Upgradeable._burn",
      "offset": [
        11801,
        11867
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x20"
    },
    "14777": {
      "fn": "ERC1155Upgradeable._burn",
      "offset": [
        11801,
        11867
      ],
      "op": "DUP1",
      "path": "32"
    },
    "14778": {
      "fn": "ERC1155Upgradeable._burn",
      "offset": [
        11801,
        11867
      ],
      "op": "DUP3",
      "path": "32"
    },
    "14779": {
      "fn": "ERC1155Upgradeable._burn",
      "offset": [
        11801,
        11867
      ],
      "op": "ADD",
      "path": "32"
    },
    "14780": {
      "fn": "ERC1155Upgradeable._burn",
      "offset": [
        11801,
        11867
      ],
      "op": "DUP4",
      "path": "32"
    },
    "14781": {
      "fn": "ERC1155Upgradeable._burn",
      "offset": [
        11801,
        11867
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "14782": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14784": {
      "fn": "ERC1155Upgradeable._burn",
      "offset": [
        11801,
        11867
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "14785": {
      "fn": "ERC1155Upgradeable._burn",
      "offset": [
        11801,
        11867
      ],
      "op": "DUP3",
      "path": "32"
    },
    "14786": {
      "fn": "ERC1155Upgradeable._burn",
      "offset": [
        11801,
        11867
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "14787": {
      "fn": "ERC1155Upgradeable._burn",
      "offset": [
        11801,
        11867
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "14788": {
      "fn": "ERC1155Upgradeable._burn",
      "offset": [
        11902,
        11915
      ],
      "op": "DUP9",
      "path": "32"
    },
    "14789": {
      "fn": "ERC1155Upgradeable._burn",
      "offset": [
        11902,
        11915
      ],
      "op": "DUP3",
      "path": "32"
    },
    "14790": {
      "fn": "ERC1155Upgradeable._burn",
      "offset": [
        11902,
        11915
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "14791": {
      "fn": "ERC1155Upgradeable._burn",
      "offset": [
        11902,
        11911
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x65"
    },
    "14793": {
      "fn": "ERC1155Upgradeable._burn",
      "offset": [
        11902,
        11915
      ],
      "op": "DUP2",
      "path": "32"
    },
    "14794": {
      "fn": "ERC1155Upgradeable._burn",
      "offset": [
        11902,
        11915
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "14795": {
      "fn": "ERC1155Upgradeable._burn",
      "offset": [
        11902,
        11915
      ],
      "op": "DUP3",
      "path": "32"
    },
    "14796": {
      "fn": "ERC1155Upgradeable._burn",
      "offset": [
        11902,
        11915
      ],
      "op": "DUP3",
      "path": "32"
    },
    "14797": {
      "fn": "ERC1155Upgradeable._burn",
      "offset": [
        11902,
        11915
      ],
      "op": "KECCAK256",
      "path": "32"
    },
    "14798": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14800": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14802": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14804": {
      "op": "SHL"
    },
    "14805": {
      "op": "SUB"
    },
    "14806": {
      "fn": "ERC1155Upgradeable._burn",
      "offset": [
        11902,
        11921
      ],
      "op": "DUP12",
      "path": "32"
    },
    "14807": {
      "fn": "ERC1155Upgradeable._burn",
      "offset": [
        11902,
        11921
      ],
      "op": "AND",
      "path": "32"
    },
    "14808": {
      "fn": "ERC1155Upgradeable._burn",
      "offset": [
        11902,
        11921
      ],
      "op": "DUP4",
      "path": "32"
    },
    "14809": {
      "fn": "ERC1155Upgradeable._burn",
      "offset": [
        11902,
        11921
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "14810": {
      "fn": "ERC1155Upgradeable._burn",
      "offset": [
        11902,
        11921
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "14811": {
      "fn": "ERC1155Upgradeable._burn",
      "offset": [
        11902,
        11921
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "14812": {
      "fn": "ERC1155Upgradeable._burn",
      "offset": [
        11902,
        11921
      ],
      "op": "KECCAK256",
      "path": "32"
    },
    "14813": {
      "fn": "ERC1155Upgradeable._burn",
      "offset": [
        11902,
        11921
      ],
      "op": "SLOAD",
      "path": "32"
    },
    "14814": {
      "fn": "ERC1155Upgradeable._burn",
      "offset": [
        11736,
        11788
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "14815": {
      "fn": "ERC1155Upgradeable._burn",
      "offset": [
        11736,
        11788
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "14816": {
      "op": "POP"
    },
    "14817": {
      "fn": "ERC1155Upgradeable._burn",
      "offset": [
        11940,
        11961
      ],
      "op": "DUP5",
      "path": "32",
      "statement": 112
    },
    "14818": {
      "fn": "ERC1155Upgradeable._burn",
      "offset": [
        11940,
        11961
      ],
      "op": "DUP2",
      "path": "32"
    },
    "14819": {
      "fn": "ERC1155Upgradeable._burn",
      "offset": [
        11940,
        11961
      ],
      "op": "LT",
      "path": "32"
    },
    "14820": {
      "branch": 228,
      "fn": "ERC1155Upgradeable._burn",
      "offset": [
        11940,
        11961
      ],
      "op": "ISZERO",
      "path": "32"
    },
    "14821": {
      "fn": "ERC1155Upgradeable._burn",
      "offset": [
        11932,
        12002
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x3A00"
    },
    "14824": {
      "branch": 228,
      "fn": "ERC1155Upgradeable._burn",
      "offset": [
        11932,
        12002
      ],
      "op": "JUMPI",
      "path": "32"
    },
    "14825": {
      "fn": "ERC1155Upgradeable._burn",
      "offset": [
        11932,
        12002
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x40"
    },
    "14827": {
      "fn": "ERC1155Upgradeable._burn",
      "offset": [
        11932,
        12002
      ],
      "op": "MLOAD",
      "path": "32"
    },
    "14828": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "14832": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "14834": {
      "op": "SHL"
    },
    "14835": {
      "fn": "ERC1155Upgradeable._burn",
      "offset": [
        11932,
        12002
      ],
      "op": "DUP2",
      "path": "32"
    },
    "14836": {
      "fn": "ERC1155Upgradeable._burn",
      "offset": [
        11932,
        12002
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "14837": {
      "fn": "ERC1155Upgradeable._burn",
      "offset": [
        11932,
        12002
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x4"
    },
    "14839": {
      "fn": "ERC1155Upgradeable._burn",
      "offset": [
        11932,
        12002
      ],
      "op": "ADD",
      "path": "32"
    },
    "14840": {
      "fn": "ERC1155Upgradeable._burn",
      "offset": [
        11932,
        12002
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x60F"
    },
    "14843": {
      "fn": "ERC1155Upgradeable._burn",
      "offset": [
        11932,
        12002
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "14844": {
      "fn": "ERC1155Upgradeable._burn",
      "offset": [
        11932,
        12002
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x4F77"
    },
    "14847": {
      "fn": "ERC1155Upgradeable._burn",
      "jump": "i",
      "offset": [
        11932,
        12002
      ],
      "op": "JUMP",
      "path": "32"
    },
    "14848": {
      "fn": "ERC1155Upgradeable._burn",
      "offset": [
        11932,
        12002
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "14849": {
      "fn": "ERC1155Upgradeable._burn",
      "offset": [
        12038,
        12051
      ],
      "op": "PUSH1",
      "path": "32",
      "statement": 113,
      "value": "0x0"
    },
    "14851": {
      "fn": "ERC1155Upgradeable._burn",
      "offset": [
        12038,
        12051
      ],
      "op": "DUP7",
      "path": "32"
    },
    "14852": {
      "fn": "ERC1155Upgradeable._burn",
      "offset": [
        12038,
        12051
      ],
      "op": "DUP2",
      "path": "32"
    },
    "14853": {
      "fn": "ERC1155Upgradeable._burn",
      "offset": [
        12038,
        12051
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "14854": {
      "fn": "ERC1155Upgradeable._burn",
      "offset": [
        12038,
        12047
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x65"
    },
    "14856": {
      "fn": "ERC1155Upgradeable._burn",
      "offset": [
        12038,
        12051
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x20"
    },
    "14858": {
      "fn": "ERC1155Upgradeable._burn",
      "offset": [
        12038,
        12051
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "14859": {
      "fn": "ERC1155Upgradeable._burn",
      "offset": [
        12038,
        12051
      ],
      "op": "DUP2",
      "path": "32"
    },
    "14860": {
      "fn": "ERC1155Upgradeable._burn",
      "offset": [
        12038,
        12051
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "14861": {
      "fn": "ERC1155Upgradeable._burn",
      "offset": [
        12038,
        12051
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x40"
    },
    "14863": {
      "fn": "ERC1155Upgradeable._burn",
      "offset": [
        12038,
        12051
      ],
      "op": "DUP1",
      "path": "32"
    },
    "14864": {
      "fn": "ERC1155Upgradeable._burn",
      "offset": [
        12038,
        12051
      ],
      "op": "DUP4",
      "path": "32"
    },
    "14865": {
      "fn": "ERC1155Upgradeable._burn",
      "offset": [
        12038,
        12051
      ],
      "op": "KECCAK256",
      "path": "32"
    },
    "14866": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14868": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14870": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14872": {
      "op": "SHL"
    },
    "14873": {
      "op": "SUB"
    },
    "14874": {
      "fn": "ERC1155Upgradeable._burn",
      "offset": [
        12038,
        12057
      ],
      "op": "DUP12",
      "path": "32"
    },
    "14875": {
      "fn": "ERC1155Upgradeable._burn",
      "offset": [
        12038,
        12057
      ],
      "op": "DUP2",
      "path": "32"
    },
    "14876": {
      "fn": "ERC1155Upgradeable._burn",
      "offset": [
        12038,
        12057
      ],
      "op": "AND",
      "path": "32"
    },
    "14877": {
      "fn": "ERC1155Upgradeable._burn",
      "offset": [
        12038,
        12057
      ],
      "op": "DUP1",
      "path": "32"
    },
    "14878": {
      "fn": "ERC1155Upgradeable._burn",
      "offset": [
        12038,
        12057
      ],
      "op": "DUP7",
      "path": "32"
    },
    "14879": {
      "fn": "ERC1155Upgradeable._burn",
      "offset": [
        12038,
        12057
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "14880": {
      "fn": "ERC1155Upgradeable._burn",
      "offset": [
        12038,
        12057
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "14881": {
      "fn": "ERC1155Upgradeable._burn",
      "offset": [
        12038,
        12057
      ],
      "op": "DUP5",
      "path": "32"
    },
    "14882": {
      "fn": "ERC1155Upgradeable._burn",
      "offset": [
        12038,
        12057
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "14883": {
      "fn": "ERC1155Upgradeable._burn",
      "offset": [
        12038,
        12057
      ],
      "op": "DUP3",
      "path": "32"
    },
    "14884": {
      "fn": "ERC1155Upgradeable._burn",
      "offset": [
        12038,
        12057
      ],
      "op": "DUP6",
      "path": "32"
    },
    "14885": {
      "fn": "ERC1155Upgradeable._burn",
      "offset": [
        12038,
        12057
      ],
      "op": "KECCAK256",
      "path": "32"
    },
    "14886": {
      "fn": "ERC1155Upgradeable._burn",
      "offset": [
        12060,
        12080
      ],
      "op": "DUP11",
      "path": "32"
    },
    "14887": {
      "fn": "ERC1155Upgradeable._burn",
      "offset": [
        12060,
        12080
      ],
      "op": "DUP8",
      "path": "32"
    },
    "14888": {
      "fn": "ERC1155Upgradeable._burn",
      "offset": [
        12060,
        12080
      ],
      "op": "SUB",
      "path": "32"
    },
    "14889": {
      "fn": "ERC1155Upgradeable._burn",
      "offset": [
        12038,
        12080
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "14890": {
      "fn": "ERC1155Upgradeable._burn",
      "offset": [
        12038,
        12080
      ],
      "op": "SSTORE",
      "path": "32"
    },
    "14891": {
      "fn": "ERC1155Upgradeable._burn",
      "offset": [
        12109,
        12163
      ],
      "op": "DUP3",
      "path": "32",
      "statement": 114
    },
    "14892": {
      "fn": "ERC1155Upgradeable._burn",
      "offset": [
        12109,
        12163
      ],
      "op": "MLOAD",
      "path": "32"
    },
    "14893": {
      "op": "DUP12"
    },
    "14894": {
      "op": "DUP2"
    },
    "14895": {
      "op": "MSTORE"
    },
    "14896": {
      "op": "SWAP4"
    },
    "14897": {
      "op": "DUP5"
    },
    "14898": {
      "op": "ADD"
    },
    "14899": {
      "op": "DUP11"
    },
    "14900": {
      "op": "SWAP1"
    },
    "14901": {
      "op": "MSTORE"
    },
    "14902": {
      "fn": "ERC1155Upgradeable._burn",
      "offset": [
        12038,
        12057
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "14903": {
      "fn": "ERC1155Upgradeable._burn",
      "offset": [
        12038,
        12057
      ],
      "op": "SWAP3",
      "path": "32"
    },
    "14904": {
      "fn": "ERC1155Upgradeable._burn",
      "offset": [
        12109,
        12163
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "14905": {
      "fn": "ERC1155Upgradeable._burn",
      "offset": [
        12109,
        12163
      ],
      "op": "DUP9",
      "path": "32"
    },
    "14906": {
      "fn": "ERC1155Upgradeable._burn",
      "offset": [
        12109,
        12163
      ],
      "op": "AND",
      "path": "32"
    },
    "14907": {
      "fn": "ERC1155Upgradeable._burn",
      "offset": [
        12109,
        12163
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "14908": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14910": {
      "op": "DUP1"
    },
    "14911": {
      "op": "MLOAD"
    },
    "14912": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14914": {
      "op": "PUSH2",
      "value": "0x53CD"
    },
    "14917": {
      "op": "DUP4"
    },
    "14918": {
      "op": "CODECOPY"
    },
    "14919": {
      "op": "DUP2"
    },
    "14920": {
      "op": "MLOAD"
    },
    "14921": {
      "op": "SWAP2"
    },
    "14922": {
      "op": "MSTORE"
    },
    "14923": {
      "fn": "ERC1155Upgradeable._burn",
      "offset": [
        12109,
        12163
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "14924": {
      "op": "ADD"
    },
    "14925": {
      "fn": "ERC1155Upgradeable._burn",
      "offset": [
        12109,
        12163
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x40"
    },
    "14927": {
      "fn": "ERC1155Upgradeable._burn",
      "offset": [
        12109,
        12163
      ],
      "op": "MLOAD",
      "path": "32"
    },
    "14928": {
      "fn": "ERC1155Upgradeable._burn",
      "offset": [
        12109,
        12163
      ],
      "op": "DUP1",
      "path": "32"
    },
    "14929": {
      "fn": "ERC1155Upgradeable._burn",
      "offset": [
        12109,
        12163
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "14930": {
      "fn": "ERC1155Upgradeable._burn",
      "offset": [
        12109,
        12163
      ],
      "op": "SUB",
      "path": "32"
    },
    "14931": {
      "fn": "ERC1155Upgradeable._burn",
      "offset": [
        12109,
        12163
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "14932": {
      "fn": "ERC1155Upgradeable._burn",
      "offset": [
        12109,
        12163
      ],
      "op": "LOG4",
      "path": "32"
    },
    "14933": {
      "fn": "ERC1155Upgradeable._burn",
      "offset": [
        12176,
        12241
      ],
      "op": "PUSH1",
      "path": "32",
      "statement": 115,
      "value": "0x40"
    },
    "14935": {
      "fn": "ERC1155Upgradeable._burn",
      "offset": [
        12176,
        12241
      ],
      "op": "DUP1",
      "path": "32"
    },
    "14936": {
      "fn": "ERC1155Upgradeable._burn",
      "offset": [
        12176,
        12241
      ],
      "op": "MLOAD",
      "path": "32"
    },
    "14937": {
      "fn": "ERC1155Upgradeable._burn",
      "offset": [
        12176,
        12241
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x20"
    },
    "14939": {
      "fn": "ERC1155Upgradeable._burn",
      "offset": [
        12176,
        12241
      ],
      "op": "DUP2",
      "path": "32"
    },
    "14940": {
      "fn": "ERC1155Upgradeable._burn",
      "offset": [
        12176,
        12241
      ],
      "op": "ADD",
      "path": "32"
    },
    "14941": {
      "fn": "ERC1155Upgradeable._burn",
      "offset": [
        12176,
        12241
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "14942": {
      "fn": "ERC1155Upgradeable._burn",
      "offset": [
        12176,
        12241
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "14943": {
      "fn": "ERC1155Upgradeable._burn",
      "offset": [
        12176,
        12241
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "14944": {
      "fn": "ERC1155Upgradeable._burn",
      "offset": [
        12220,
        12221
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x0"
    },
    "14946": {
      "fn": "ERC1155Upgradeable._burn",
      "offset": [
        12176,
        12241
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "14947": {
      "fn": "ERC1155Upgradeable._burn",
      "offset": [
        12176,
        12241
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "14948": {
      "fn": "ERC1155Upgradeable._burn",
      "offset": [
        12176,
        12241
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x2314"
    },
    "14951": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        6829,
        7975
      ],
      "op": "JUMP",
      "path": "32"
    },
    "14952": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        6829,
        7975
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "14953": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7056,
        7063
      ],
      "op": "DUP2",
      "path": "32",
      "statement": 116
    },
    "14954": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7056,
        7070
      ],
      "op": "MLOAD",
      "path": "32"
    },
    "14955": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7042,
        7045
      ],
      "op": "DUP4",
      "path": "32"
    },
    "14956": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7042,
        7052
      ],
      "op": "MLOAD",
      "path": "32"
    },
    "14957": {
      "branch": 229,
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7042,
        7070
      ],
      "op": "EQ",
      "path": "32"
    },
    "14958": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7034,
        7115
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x3A89"
    },
    "14961": {
      "branch": 229,
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7034,
        7115
      ],
      "op": "JUMPI",
      "path": "32"
    },
    "14962": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7034,
        7115
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x40"
    },
    "14964": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7034,
        7115
      ],
      "op": "MLOAD",
      "path": "32"
    },
    "14965": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "14969": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "14971": {
      "op": "SHL"
    },
    "14972": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7034,
        7115
      ],
      "op": "DUP2",
      "path": "32"
    },
    "14973": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7034,
        7115
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "14974": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7034,
        7115
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x4"
    },
    "14976": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7034,
        7115
      ],
      "op": "ADD",
      "path": "32"
    },
    "14977": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7034,
        7115
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x60F"
    },
    "14980": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7034,
        7115
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "14981": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7034,
        7115
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x4FBB"
    },
    "14984": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        7034,
        7115
      ],
      "op": "JUMP",
      "path": "32"
    },
    "14985": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7034,
        7115
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "14986": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14988": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14990": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14992": {
      "op": "SHL"
    },
    "14993": {
      "op": "SUB"
    },
    "14994": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7134,
        7150
      ],
      "op": "DUP5",
      "path": "32",
      "statement": 117
    },
    "14995": {
      "branch": 230,
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7134,
        7150
      ],
      "op": "AND",
      "path": "32"
    },
    "14996": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7126,
        7192
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x3AAF"
    },
    "14999": {
      "branch": 230,
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7126,
        7192
      ],
      "op": "JUMPI",
      "path": "32"
    },
    "15000": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7126,
        7192
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x40"
    },
    "15002": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7126,
        7192
      ],
      "op": "MLOAD",
      "path": "32"
    },
    "15003": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "15007": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "15009": {
      "op": "SHL"
    },
    "15010": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7126,
        7192
      ],
      "op": "DUP2",
      "path": "32"
    },
    "15011": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7126,
        7192
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "15012": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7126,
        7192
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x4"
    },
    "15014": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7126,
        7192
      ],
      "op": "ADD",
      "path": "32"
    },
    "15015": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7126,
        7192
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x60F"
    },
    "15018": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7126,
        7192
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "15019": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7126,
        7192
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x5003"
    },
    "15022": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        7126,
        7192
      ],
      "op": "JUMP",
      "path": "32"
    },
    "15023": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7126,
        7192
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "15024": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        952,
        962
      ],
      "op": "CALLER",
      "path": "42"
    },
    "15025": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7205,
        7221
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x0"
    },
    "15027": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7322,
        7743
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "15028": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7346,
        7349
      ],
      "op": "DUP5",
      "path": "32"
    },
    "15029": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7346,
        7356
      ],
      "op": "MLOAD",
      "path": "32"
    },
    "15030": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7342,
        7343
      ],
      "op": "DUP2",
      "path": "32"
    },
    "15031": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7342,
        7356
      ],
      "op": "LT",
      "path": "32"
    },
    "15032": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7322,
        7743
      ],
      "op": "ISZERO",
      "path": "32"
    },
    "15033": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7322,
        7743
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x3B99"
    },
    "15036": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7322,
        7743
      ],
      "op": "JUMPI",
      "path": "32"
    },
    "15037": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7378,
        7388
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x0"
    },
    "15039": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7391,
        7394
      ],
      "op": "DUP6",
      "path": "32"
    },
    "15040": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7395,
        7396
      ],
      "op": "DUP3",
      "path": "32"
    },
    "15041": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7391,
        7397
      ],
      "op": "DUP2",
      "path": "32"
    },
    "15042": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7391,
        7397
      ],
      "op": "MLOAD",
      "path": "32"
    },
    "15043": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7391,
        7397
      ],
      "op": "DUP2",
      "path": "32"
    },
    "15044": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7391,
        7397
      ],
      "op": "LT",
      "path": "32"
    },
    "15045": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7391,
        7397
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x3AD0"
    },
    "15048": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7391,
        7397
      ],
      "op": "JUMPI",
      "path": "32"
    },
    "15049": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7391,
        7397
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x3AD0"
    },
    "15052": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7391,
        7397
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x4DCF"
    },
    "15055": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        7391,
        7397
      ],
      "op": "JUMP",
      "path": "32"
    },
    "15056": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7391,
        7397
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "15057": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7391,
        7397
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x20"
    },
    "15059": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7391,
        7397
      ],
      "op": "MUL",
      "path": "32"
    },
    "15060": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7391,
        7397
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x20"
    },
    "15062": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7391,
        7397
      ],
      "op": "ADD",
      "path": "32"
    },
    "15063": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7391,
        7397
      ],
      "op": "ADD",
      "path": "32"
    },
    "15064": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7391,
        7397
      ],
      "op": "MLOAD",
      "path": "32"
    },
    "15065": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7378,
        7397
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "15066": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7378,
        7397
      ],
      "op": "POP",
      "path": "32"
    },
    "15067": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7412,
        7426
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x0"
    },
    "15069": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7429,
        7436
      ],
      "op": "DUP6",
      "path": "32"
    },
    "15070": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7437,
        7438
      ],
      "op": "DUP4",
      "path": "32"
    },
    "15071": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7429,
        7439
      ],
      "op": "DUP2",
      "path": "32"
    },
    "15072": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7429,
        7439
      ],
      "op": "MLOAD",
      "path": "32"
    },
    "15073": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7429,
        7439
      ],
      "op": "DUP2",
      "path": "32"
    },
    "15074": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7429,
        7439
      ],
      "op": "LT",
      "path": "32"
    },
    "15075": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7429,
        7439
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x3AEE"
    },
    "15078": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7429,
        7439
      ],
      "op": "JUMPI",
      "path": "32"
    },
    "15079": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7429,
        7439
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x3AEE"
    },
    "15082": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7429,
        7439
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x4DCF"
    },
    "15085": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        7429,
        7439
      ],
      "op": "JUMP",
      "path": "32"
    },
    "15086": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7429,
        7439
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "15087": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7429,
        7439
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x20"
    },
    "15089": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7429,
        7439
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "15090": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7429,
        7439
      ],
      "op": "DUP2",
      "path": "32"
    },
    "15091": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7429,
        7439
      ],
      "op": "MUL",
      "path": "32"
    },
    "15092": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7429,
        7439
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "15093": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7429,
        7439
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "15094": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7429,
        7439
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "15095": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7429,
        7439
      ],
      "op": "ADD",
      "path": "32"
    },
    "15096": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7429,
        7439
      ],
      "op": "DUP2",
      "path": "32"
    },
    "15097": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7429,
        7439
      ],
      "op": "ADD",
      "path": "32"
    },
    "15098": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7429,
        7439
      ],
      "op": "MLOAD",
      "path": "32"
    },
    "15099": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7456,
        7475
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x0"
    },
    "15101": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7478,
        7491
      ],
      "op": "DUP5",
      "path": "32"
    },
    "15102": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7478,
        7491
      ],
      "op": "DUP2",
      "path": "32"
    },
    "15103": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7478,
        7491
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "15104": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7478,
        7487
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x65"
    },
    "15106": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7478,
        7491
      ],
      "op": "DUP4",
      "path": "32"
    },
    "15107": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7478,
        7491
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "15108": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7478,
        7491
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x40"
    },
    "15110": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7478,
        7491
      ],
      "op": "DUP1",
      "path": "32"
    },
    "15111": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7478,
        7491
      ],
      "op": "DUP3",
      "path": "32"
    },
    "15112": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7478,
        7491
      ],
      "op": "KECCAK256",
      "path": "32"
    },
    "15113": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15115": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15117": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "15119": {
      "op": "SHL"
    },
    "15120": {
      "op": "SUB"
    },
    "15121": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7478,
        7497
      ],
      "op": "DUP15",
      "path": "32"
    },
    "15122": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7478,
        7497
      ],
      "op": "AND",
      "path": "32"
    },
    "15123": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7478,
        7497
      ],
      "op": "DUP4",
      "path": "32"
    },
    "15124": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7478,
        7497
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "15125": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7478,
        7497
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "15126": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7478,
        7497
      ],
      "op": "SWAP4",
      "path": "32"
    },
    "15127": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7478,
        7497
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "15128": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7478,
        7497
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "15129": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7478,
        7497
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "15130": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7478,
        7497
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "15131": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7478,
        7497
      ],
      "op": "KECCAK256",
      "path": "32"
    },
    "15132": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7478,
        7497
      ],
      "op": "SLOAD",
      "path": "32"
    },
    "15133": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7429,
        7439
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "15134": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7429,
        7439
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "15135": {
      "op": "POP"
    },
    "15136": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7520,
        7541
      ],
      "op": "DUP2",
      "path": "32",
      "statement": 118
    },
    "15137": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7520,
        7541
      ],
      "op": "DUP2",
      "path": "32"
    },
    "15138": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7520,
        7541
      ],
      "op": "LT",
      "path": "32"
    },
    "15139": {
      "branch": 231,
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7520,
        7541
      ],
      "op": "ISZERO",
      "path": "32"
    },
    "15140": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7512,
        7588
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x3B3F"
    },
    "15143": {
      "branch": 231,
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7512,
        7588
      ],
      "op": "JUMPI",
      "path": "32"
    },
    "15144": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7512,
        7588
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x40"
    },
    "15146": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7512,
        7588
      ],
      "op": "MLOAD",
      "path": "32"
    },
    "15147": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "15151": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "15153": {
      "op": "SHL"
    },
    "15154": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7512,
        7588
      ],
      "op": "DUP2",
      "path": "32"
    },
    "15155": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7512,
        7588
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "15156": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7512,
        7588
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x4"
    },
    "15158": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7512,
        7588
      ],
      "op": "ADD",
      "path": "32"
    },
    "15159": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7512,
        7588
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x60F"
    },
    "15162": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7512,
        7588
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "15163": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7512,
        7588
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x5048"
    },
    "15166": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        7512,
        7588
      ],
      "op": "JUMP",
      "path": "32"
    },
    "15167": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7512,
        7588
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "15168": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7632,
        7645
      ],
      "op": "PUSH1",
      "path": "32",
      "statement": 119,
      "value": "0x0"
    },
    "15170": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7632,
        7645
      ],
      "op": "DUP4",
      "path": "32"
    },
    "15171": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7632,
        7645
      ],
      "op": "DUP2",
      "path": "32"
    },
    "15172": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7632,
        7645
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "15173": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7632,
        7641
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x65"
    },
    "15175": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7632,
        7645
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x20"
    },
    "15177": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7632,
        7645
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "15178": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7632,
        7645
      ],
      "op": "DUP2",
      "path": "32"
    },
    "15179": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7632,
        7645
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "15180": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7632,
        7645
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x40"
    },
    "15182": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7632,
        7645
      ],
      "op": "DUP1",
      "path": "32"
    },
    "15183": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7632,
        7645
      ],
      "op": "DUP4",
      "path": "32"
    },
    "15184": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7632,
        7645
      ],
      "op": "KECCAK256",
      "path": "32"
    },
    "15185": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15187": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15189": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "15191": {
      "op": "SHL"
    },
    "15192": {
      "op": "SUB"
    },
    "15193": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7632,
        7651
      ],
      "op": "DUP15",
      "path": "32"
    },
    "15194": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7632,
        7651
      ],
      "op": "DUP2",
      "path": "32"
    },
    "15195": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7632,
        7651
      ],
      "op": "AND",
      "path": "32"
    },
    "15196": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7632,
        7651
      ],
      "op": "DUP6",
      "path": "32"
    },
    "15197": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7632,
        7651
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "15198": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7632,
        7651
      ],
      "op": "SWAP3",
      "path": "32"
    },
    "15199": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7632,
        7651
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "15200": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7632,
        7651
      ],
      "op": "DUP1",
      "path": "32"
    },
    "15201": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7632,
        7651
      ],
      "op": "DUP4",
      "path": "32"
    },
    "15202": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7632,
        7651
      ],
      "op": "KECCAK256",
      "path": "32"
    },
    "15203": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7654,
        7674
      ],
      "op": "DUP6",
      "path": "32"
    },
    "15204": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7654,
        7674
      ],
      "op": "DUP6",
      "path": "32"
    },
    "15205": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7654,
        7674
      ],
      "op": "SUB",
      "path": "32"
    },
    "15206": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7632,
        7674
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "15207": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7632,
        7674
      ],
      "op": "SSTORE",
      "path": "32"
    },
    "15208": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7704,
        7721
      ],
      "op": "SWAP1",
      "path": "32",
      "statement": 120
    },
    "15209": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7704,
        7721
      ],
      "op": "DUP12",
      "path": "32"
    },
    "15210": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7704,
        7721
      ],
      "op": "AND",
      "path": "32"
    },
    "15211": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7704,
        7721
      ],
      "op": "DUP3",
      "path": "32"
    },
    "15212": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7704,
        7721
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "15213": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7704,
        7721
      ],
      "op": "DUP2",
      "path": "32"
    },
    "15214": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7704,
        7721
      ],
      "op": "KECCAK256",
      "path": "32"
    },
    "15215": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7704,
        7731
      ],
      "op": "DUP1",
      "path": "32"
    },
    "15216": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7704,
        7731
      ],
      "op": "SLOAD",
      "path": "32"
    },
    "15217": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7654,
        7674
      ],
      "op": "DUP5",
      "path": "32"
    },
    "15218": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7654,
        7674
      ],
      "op": "SWAP3",
      "path": "32"
    },
    "15219": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7632,
        7645
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "15220": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7704,
        7731
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x3B7E"
    },
    "15223": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7704,
        7731
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "15224": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7654,
        7674
      ],
      "op": "DUP5",
      "path": "32"
    },
    "15225": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7654,
        7674
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "15226": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7704,
        7731
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x5092"
    },
    "15229": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        7704,
        7731
      ],
      "op": "JUMP",
      "path": "32"
    },
    "15230": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7704,
        7731
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "15231": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7704,
        7731
      ],
      "op": "SWAP3",
      "path": "32"
    },
    "15232": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7704,
        7731
      ],
      "op": "POP",
      "path": "32"
    },
    "15233": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7704,
        7731
      ],
      "op": "POP",
      "path": "32"
    },
    "15234": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7704,
        7731
      ],
      "op": "DUP2",
      "path": "32"
    },
    "15235": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7704,
        7731
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "15236": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7704,
        7731
      ],
      "op": "SSTORE",
      "path": "32"
    },
    "15237": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7704,
        7731
      ],
      "op": "POP",
      "path": "32"
    },
    "15238": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7363,
        7743
      ],
      "op": "POP",
      "path": "32"
    },
    "15239": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7363,
        7743
      ],
      "op": "POP",
      "path": "32"
    },
    "15240": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7363,
        7743
      ],
      "op": "POP",
      "path": "32"
    },
    "15241": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7358,
        7361
      ],
      "op": "DUP1",
      "path": "32",
      "statement": 121
    },
    "15242": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7358,
        7361
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x3B92"
    },
    "15245": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7358,
        7361
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "15246": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7358,
        7361
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x4DE5"
    },
    "15249": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        7358,
        7361
      ],
      "op": "JUMP",
      "path": "32"
    },
    "15250": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7358,
        7361
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "15251": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7358,
        7361
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "15252": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7358,
        7361
      ],
      "op": "POP",
      "path": "32"
    },
    "15253": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7322,
        7743
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x3AB3"
    },
    "15256": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7322,
        7743
      ],
      "op": "JUMP",
      "path": "32"
    },
    "15257": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7322,
        7743
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "15258": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7322,
        7743
      ],
      "op": "POP",
      "path": "32"
    },
    "15259": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7790,
        7792
      ],
      "op": "DUP5",
      "path": "32",
      "statement": 122
    },
    "15260": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15262": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15264": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "15266": {
      "op": "SHL"
    },
    "15267": {
      "op": "SUB"
    },
    "15268": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7760,
        7807
      ],
      "op": "AND",
      "path": "32"
    },
    "15269": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7784,
        7788
      ],
      "op": "DUP7",
      "path": "32"
    },
    "15270": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15272": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15274": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "15276": {
      "op": "SHL"
    },
    "15277": {
      "op": "SUB"
    },
    "15278": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7760,
        7807
      ],
      "op": "AND",
      "path": "32"
    },
    "15279": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7774,
        7782
      ],
      "op": "DUP3",
      "path": "32"
    },
    "15280": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15282": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15284": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "15286": {
      "op": "SHL"
    },
    "15287": {
      "op": "SUB"
    },
    "15288": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7760,
        7807
      ],
      "op": "AND",
      "path": "32"
    },
    "15289": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7760,
        7807
      ],
      "op": "PUSH32",
      "path": "32",
      "value": "0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB"
    },
    "15322": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7794,
        7797
      ],
      "op": "DUP8",
      "path": "32"
    },
    "15323": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7799,
        7806
      ],
      "op": "DUP8",
      "path": "32"
    },
    "15324": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7760,
        7807
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x40"
    },
    "15326": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7760,
        7807
      ],
      "op": "MLOAD",
      "path": "32"
    },
    "15327": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7760,
        7807
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x3BE9"
    },
    "15330": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7760,
        7807
      ],
      "op": "SWAP3",
      "path": "32"
    },
    "15331": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7760,
        7807
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "15332": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7760,
        7807
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "15333": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7760,
        7807
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x50AA"
    },
    "15336": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        7760,
        7807
      ],
      "op": "JUMP",
      "path": "32"
    },
    "15337": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7760,
        7807
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "15338": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7760,
        7807
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x40"
    },
    "15340": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7760,
        7807
      ],
      "op": "MLOAD",
      "path": "32"
    },
    "15341": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7760,
        7807
      ],
      "op": "DUP1",
      "path": "32"
    },
    "15342": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7760,
        7807
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "15343": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7760,
        7807
      ],
      "op": "SUB",
      "path": "32"
    },
    "15344": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7760,
        7807
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "15345": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7760,
        7807
      ],
      "op": "LOG4",
      "path": "32"
    },
    "15346": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7892,
        7967
      ],
      "op": "PUSH2",
      "path": "32",
      "statement": 123,
      "value": "0x3BFF"
    },
    "15349": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7928,
        7936
      ],
      "op": "DUP2",
      "path": "32"
    },
    "15350": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7938,
        7942
      ],
      "op": "DUP8",
      "path": "32"
    },
    "15351": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7944,
        7946
      ],
      "op": "DUP8",
      "path": "32"
    },
    "15352": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7948,
        7951
      ],
      "op": "DUP8",
      "path": "32"
    },
    "15353": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7953,
        7960
      ],
      "op": "DUP8",
      "path": "32"
    },
    "15354": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7962,
        7966
      ],
      "op": "DUP8",
      "path": "32"
    },
    "15355": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7892,
        7927
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x4164"
    },
    "15358": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        7892,
        7967
      ],
      "op": "JUMP",
      "path": "32"
    },
    "15359": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7892,
        7967
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "15360": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        7023,
        7975
      ],
      "op": "POP",
      "path": "32"
    },
    "15361": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        6829,
        7975
      ],
      "op": "POP",
      "path": "32"
    },
    "15362": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        6829,
        7975
      ],
      "op": "POP",
      "path": "32"
    },
    "15363": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        6829,
        7975
      ],
      "op": "POP",
      "path": "32"
    },
    "15364": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        6829,
        7975
      ],
      "op": "POP",
      "path": "32"
    },
    "15365": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        6829,
        7975
      ],
      "op": "POP",
      "path": "32"
    },
    "15366": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "jump": "o",
      "offset": [
        6829,
        7975
      ],
      "op": "JUMP",
      "path": "32"
    },
    "15367": {
      "fn": "ERC1155Upgradeable.__ERC1155_init",
      "offset": [
        1320,
        1439
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "15368": {
      "offset": [
        3024,
        3037
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x0"
    },
    "15370": {
      "fn": "ERC1155Upgradeable.__ERC1155_init",
      "offset": [
        3024,
        3037
      ],
      "op": "SLOAD",
      "path": "30"
    },
    "15371": {
      "fn": "ERC1155Upgradeable.__ERC1155_init",
      "offset": [
        3024,
        3037
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x100"
    },
    "15374": {
      "fn": "ERC1155Upgradeable.__ERC1155_init",
      "offset": [
        3024,
        3037
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "15375": {
      "fn": "ERC1155Upgradeable.__ERC1155_init",
      "offset": [
        3024,
        3037
      ],
      "op": "DIV",
      "path": "30"
    },
    "15376": {
      "fn": "ERC1155Upgradeable.__ERC1155_init",
      "offset": [
        3024,
        3037
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0xFF"
    },
    "15378": {
      "fn": "ERC1155Upgradeable.__ERC1155_init",
      "offset": [
        3024,
        3037
      ],
      "op": "AND",
      "path": "30"
    },
    "15379": {
      "offset": [
        3016,
        3085
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x3C2E"
    },
    "15382": {
      "offset": [
        3016,
        3085
      ],
      "op": "JUMPI",
      "path": "30"
    },
    "15383": {
      "fn": "ERC1155Upgradeable.__ERC1155_init",
      "offset": [
        3016,
        3085
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x40"
    },
    "15385": {
      "fn": "ERC1155Upgradeable.__ERC1155_init",
      "offset": [
        3016,
        3085
      ],
      "op": "MLOAD",
      "path": "30"
    },
    "15386": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "15390": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "15392": {
      "op": "SHL"
    },
    "15393": {
      "offset": [
        3016,
        3085
      ],
      "op": "DUP2",
      "path": "30"
    },
    "15394": {
      "fn": "ERC1155Upgradeable.__ERC1155_init",
      "offset": [
        3016,
        3085
      ],
      "op": "MSTORE",
      "path": "30"
    },
    "15395": {
      "fn": "ERC1155Upgradeable.__ERC1155_init",
      "offset": [
        3016,
        3085
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x4"
    },
    "15397": {
      "fn": "ERC1155Upgradeable.__ERC1155_init",
      "offset": [
        3016,
        3085
      ],
      "op": "ADD",
      "path": "30"
    },
    "15398": {
      "fn": "ERC1155Upgradeable.__ERC1155_init",
      "offset": [
        3016,
        3085
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x60F"
    },
    "15401": {
      "fn": "ERC1155Upgradeable.__ERC1155_init",
      "offset": [
        3016,
        3085
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "15402": {
      "fn": "ERC1155Upgradeable.__ERC1155_init",
      "offset": [
        3016,
        3085
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x50CF"
    },
    "15405": {
      "fn": "ERC1155Upgradeable.__ERC1155_init",
      "jump": "i",
      "offset": [
        3016,
        3085
      ],
      "op": "JUMP",
      "path": "30"
    },
    "15406": {
      "fn": "ERC1155Upgradeable.__ERC1155_init",
      "offset": [
        3016,
        3085
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "15407": {
      "fn": "ERC1155Upgradeable.__ERC1155_init",
      "offset": [
        1401,
        1431
      ],
      "op": "PUSH2",
      "path": "32",
      "statement": 124,
      "value": "0x3C37"
    },
    "15410": {
      "fn": "ERC1155Upgradeable.__ERC1155_init",
      "offset": [
        1426,
        1430
      ],
      "op": "DUP2",
      "path": "32"
    },
    "15411": {
      "fn": "ERC1155Upgradeable.__ERC1155_init",
      "offset": [
        1401,
        1425
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x42BF"
    },
    "15414": {
      "fn": "ERC1155Upgradeable.__ERC1155_init",
      "jump": "i",
      "offset": [
        1401,
        1431
      ],
      "op": "JUMP",
      "path": "32"
    },
    "15415": {
      "fn": "ERC1155Upgradeable.__ERC1155_init",
      "offset": [
        1401,
        1431
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "15416": {
      "fn": "ERC1155Upgradeable.__ERC1155_init",
      "offset": [
        1320,
        1439
      ],
      "op": "POP",
      "path": "32"
    },
    "15417": {
      "fn": "ERC1155Upgradeable.__ERC1155_init",
      "jump": "o",
      "offset": [
        1320,
        1439
      ],
      "op": "JUMP",
      "path": "32"
    },
    "15418": {
      "fn": "ERC1155BurnableUpgradeable.__ERC1155Burnable_init",
      "offset": [
        505,
        573
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "15419": {
      "offset": [
        3024,
        3037
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x0"
    },
    "15421": {
      "fn": "ERC1155BurnableUpgradeable.__ERC1155Burnable_init",
      "offset": [
        3024,
        3037
      ],
      "op": "SLOAD",
      "path": "30"
    },
    "15422": {
      "fn": "ERC1155BurnableUpgradeable.__ERC1155Burnable_init",
      "offset": [
        3024,
        3037
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x100"
    },
    "15425": {
      "fn": "ERC1155BurnableUpgradeable.__ERC1155Burnable_init",
      "offset": [
        3024,
        3037
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "15426": {
      "fn": "ERC1155BurnableUpgradeable.__ERC1155Burnable_init",
      "offset": [
        3024,
        3037
      ],
      "op": "DIV",
      "path": "30"
    },
    "15427": {
      "fn": "ERC1155BurnableUpgradeable.__ERC1155Burnable_init",
      "offset": [
        3024,
        3037
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0xFF"
    },
    "15429": {
      "fn": "ERC1155BurnableUpgradeable.__ERC1155Burnable_init",
      "offset": [
        3024,
        3037
      ],
      "op": "AND",
      "path": "30"
    },
    "15430": {
      "offset": [
        3016,
        3085
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x16C4"
    },
    "15433": {
      "offset": [
        3016,
        3085
      ],
      "op": "JUMPI",
      "path": "30"
    },
    "15434": {
      "fn": "ERC1155BurnableUpgradeable.__ERC1155Burnable_init",
      "offset": [
        3016,
        3085
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x40"
    },
    "15436": {
      "fn": "ERC1155BurnableUpgradeable.__ERC1155Burnable_init",
      "offset": [
        3016,
        3085
      ],
      "op": "MLOAD",
      "path": "30"
    },
    "15437": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "15441": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "15443": {
      "op": "SHL"
    },
    "15444": {
      "offset": [
        3016,
        3085
      ],
      "op": "DUP2",
      "path": "30"
    },
    "15445": {
      "fn": "ERC1155BurnableUpgradeable.__ERC1155Burnable_init",
      "offset": [
        3016,
        3085
      ],
      "op": "MSTORE",
      "path": "30"
    },
    "15446": {
      "fn": "ERC1155BurnableUpgradeable.__ERC1155Burnable_init",
      "offset": [
        3016,
        3085
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x4"
    },
    "15448": {
      "fn": "ERC1155BurnableUpgradeable.__ERC1155Burnable_init",
      "offset": [
        3016,
        3085
      ],
      "op": "ADD",
      "path": "30"
    },
    "15449": {
      "fn": "ERC1155BurnableUpgradeable.__ERC1155Burnable_init",
      "offset": [
        3016,
        3085
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x60F"
    },
    "15452": {
      "fn": "ERC1155BurnableUpgradeable.__ERC1155Burnable_init",
      "offset": [
        3016,
        3085
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "15453": {
      "fn": "ERC1155BurnableUpgradeable.__ERC1155Burnable_init",
      "offset": [
        3016,
        3085
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x50CF"
    },
    "15456": {
      "fn": "ERC1155BurnableUpgradeable.__ERC1155Burnable_init",
      "jump": "i",
      "offset": [
        3016,
        3085
      ],
      "op": "JUMP",
      "path": "30"
    },
    "15457": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init",
      "offset": [
        1892,
        2005
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "15458": {
      "offset": [
        3024,
        3037
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x0"
    },
    "15460": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init",
      "offset": [
        3024,
        3037
      ],
      "op": "SLOAD",
      "path": "30"
    },
    "15461": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init",
      "offset": [
        3024,
        3037
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x100"
    },
    "15464": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init",
      "offset": [
        3024,
        3037
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "15465": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init",
      "offset": [
        3024,
        3037
      ],
      "op": "DIV",
      "path": "30"
    },
    "15466": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init",
      "offset": [
        3024,
        3037
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0xFF"
    },
    "15468": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init",
      "offset": [
        3024,
        3037
      ],
      "op": "AND",
      "path": "30"
    },
    "15469": {
      "offset": [
        3016,
        3085
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x3C88"
    },
    "15472": {
      "offset": [
        3016,
        3085
      ],
      "op": "JUMPI",
      "path": "30"
    },
    "15473": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init",
      "offset": [
        3016,
        3085
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x40"
    },
    "15475": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init",
      "offset": [
        3016,
        3085
      ],
      "op": "MLOAD",
      "path": "30"
    },
    "15476": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "15480": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "15482": {
      "op": "SHL"
    },
    "15483": {
      "offset": [
        3016,
        3085
      ],
      "op": "DUP2",
      "path": "30"
    },
    "15484": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init",
      "offset": [
        3016,
        3085
      ],
      "op": "MSTORE",
      "path": "30"
    },
    "15485": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init",
      "offset": [
        3016,
        3085
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x4"
    },
    "15487": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init",
      "offset": [
        3016,
        3085
      ],
      "op": "ADD",
      "path": "30"
    },
    "15488": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init",
      "offset": [
        3016,
        3085
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x60F"
    },
    "15491": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init",
      "offset": [
        3016,
        3085
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "15492": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init",
      "offset": [
        3016,
        3085
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x50CF"
    },
    "15495": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init",
      "jump": "i",
      "offset": [
        3016,
        3085
      ],
      "op": "JUMP",
      "path": "30"
    },
    "15496": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init",
      "offset": [
        3016,
        3085
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "15497": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init",
      "offset": [
        1963,
        1997
      ],
      "op": "PUSH2",
      "path": "31",
      "statement": 125,
      "value": "0x16C4"
    },
    "15500": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init",
      "offset": [
        1963,
        1995
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x42EF"
    },
    "15503": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init",
      "jump": "i",
      "offset": [
        1963,
        1997
      ],
      "op": "JUMP",
      "path": "31"
    },
    "15504": {
      "fn": "ERC1155Upgradeable._mint",
      "offset": [
        9293,
        10022
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "15505": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15507": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15509": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "15511": {
      "op": "SHL"
    },
    "15512": {
      "op": "SUB"
    },
    "15513": {
      "fn": "ERC1155Upgradeable._mint",
      "offset": [
        9446,
        9462
      ],
      "op": "DUP5",
      "path": "32",
      "statement": 126
    },
    "15514": {
      "branch": 232,
      "fn": "ERC1155Upgradeable._mint",
      "offset": [
        9446,
        9462
      ],
      "op": "AND",
      "path": "32"
    },
    "15515": {
      "fn": "ERC1155Upgradeable._mint",
      "offset": [
        9438,
        9500
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x3CF0"
    },
    "15518": {
      "branch": 232,
      "fn": "ERC1155Upgradeable._mint",
      "offset": [
        9438,
        9500
      ],
      "op": "JUMPI",
      "path": "32"
    },
    "15519": {
      "fn": "ERC1155Upgradeable._mint",
      "offset": [
        9438,
        9500
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x40"
    },
    "15521": {
      "fn": "ERC1155Upgradeable._mint",
      "offset": [
        9438,
        9500
      ],
      "op": "MLOAD",
      "path": "32"
    },
    "15522": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "15526": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "15528": {
      "op": "SHL"
    },
    "15529": {
      "fn": "ERC1155Upgradeable._mint",
      "offset": [
        9438,
        9500
      ],
      "op": "DUP2",
      "path": "32"
    },
    "15530": {
      "fn": "ERC1155Upgradeable._mint",
      "offset": [
        9438,
        9500
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "15531": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15533": {
      "fn": "ERC1155Upgradeable._mint",
      "offset": [
        9438,
        9500
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x4"
    },
    "15535": {
      "fn": "ERC1155Upgradeable._mint",
      "offset": [
        9438,
        9500
      ],
      "op": "DUP3",
      "path": "32"
    },
    "15536": {
      "fn": "ERC1155Upgradeable._mint",
      "offset": [
        9438,
        9500
      ],
      "op": "ADD",
      "path": "32"
    },
    "15537": {
      "op": "MSTORE"
    },
    "15538": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "15540": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "15542": {
      "op": "DUP3"
    },
    "15543": {
      "op": "ADD"
    },
    "15544": {
      "op": "MSTORE"
    },
    "15545": {
      "op": "PUSH32",
      "value": "0x455243313135353A206D696E7420746F20746865207A65726F20616464726573"
    },
    "15578": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "15580": {
      "op": "DUP3"
    },
    "15581": {
      "op": "ADD"
    },
    "15582": {
      "op": "MSTORE"
    },
    "15583": {
      "op": "PUSH1",
      "value": "0x73"
    },
    "15585": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "15587": {
      "op": "SHL"
    },
    "15588": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "15590": {
      "op": "DUP3"
    },
    "15591": {
      "op": "ADD"
    },
    "15592": {
      "op": "MSTORE"
    },
    "15593": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "15595": {
      "op": "ADD"
    },
    "15596": {
      "fn": "ERC1155Upgradeable._mint",
      "offset": [
        9438,
        9500
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x60F"
    },
    "15599": {
      "op": "JUMP"
    },
    "15600": {
      "fn": "ERC1155Upgradeable._mint",
      "offset": [
        9438,
        9500
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "15601": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        952,
        962
      ],
      "op": "CALLER",
      "path": "42"
    },
    "15602": {
      "fn": "ERC1155Upgradeable._mint",
      "offset": [
        9513,
        9529
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x0"
    },
    "15604": {
      "fn": "ERC1155Upgradeable._mint",
      "offset": [
        9578,
        9599
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x3CFC"
    },
    "15607": {
      "fn": "ERC1155Upgradeable._mint",
      "offset": [
        9596,
        9598
      ],
      "op": "DUP6",
      "path": "32"
    },
    "15608": {
      "fn": "ERC1155Upgradeable._mint",
      "offset": [
        9578,
        9595
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x4119"
    },
    "15611": {
      "fn": "ERC1155Upgradeable._mint",
      "jump": "i",
      "offset": [
        9578,
        9599
      ],
      "op": "JUMP",
      "path": "32"
    },
    "15612": {
      "fn": "ERC1155Upgradeable._mint",
      "offset": [
        9578,
        9599
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "15613": {
      "fn": "ERC1155Upgradeable._mint",
      "offset": [
        9555,
        9599
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "15614": {
      "fn": "ERC1155Upgradeable._mint",
      "offset": [
        9555,
        9599
      ],
      "op": "POP",
      "path": "32"
    },
    "15615": {
      "fn": "ERC1155Upgradeable._mint",
      "offset": [
        9610,
        9634
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x0"
    },
    "15617": {
      "fn": "ERC1155Upgradeable._mint",
      "offset": [
        9637,
        9662
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x3D09"
    },
    "15620": {
      "fn": "ERC1155Upgradeable._mint",
      "offset": [
        9655,
        9661
      ],
      "op": "DUP6",
      "path": "32"
    },
    "15621": {
      "fn": "ERC1155Upgradeable._mint",
      "offset": [
        9637,
        9654
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x4119"
    },
    "15624": {
      "fn": "ERC1155Upgradeable._mint",
      "jump": "i",
      "offset": [
        9637,
        9662
      ],
      "op": "JUMP",
      "path": "32"
    },
    "15625": {
      "fn": "ERC1155Upgradeable._mint",
      "offset": [
        9637,
        9662
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "15626": {
      "fn": "ERC1155Upgradeable._mint",
      "offset": [
        9610,
        9662
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "15627": {
      "fn": "ERC1155Upgradeable._mint",
      "offset": [
        9610,
        9662
      ],
      "op": "POP",
      "path": "32"
    },
    "15628": {
      "fn": "ERC1155Upgradeable._mint",
      "offset": [
        9754,
        9767
      ],
      "op": "PUSH1",
      "path": "32",
      "statement": 127,
      "value": "0x0"
    },
    "15630": {
      "fn": "ERC1155Upgradeable._mint",
      "offset": [
        9754,
        9767
      ],
      "op": "DUP7",
      "path": "32"
    },
    "15631": {
      "fn": "ERC1155Upgradeable._mint",
      "offset": [
        9754,
        9767
      ],
      "op": "DUP2",
      "path": "32"
    },
    "15632": {
      "fn": "ERC1155Upgradeable._mint",
      "offset": [
        9754,
        9767
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "15633": {
      "fn": "ERC1155Upgradeable._mint",
      "offset": [
        9754,
        9763
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x65"
    },
    "15635": {
      "fn": "ERC1155Upgradeable._mint",
      "offset": [
        9754,
        9767
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x20"
    },
    "15637": {
      "fn": "ERC1155Upgradeable._mint",
      "offset": [
        9754,
        9767
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "15638": {
      "fn": "ERC1155Upgradeable._mint",
      "offset": [
        9754,
        9767
      ],
      "op": "DUP2",
      "path": "32"
    },
    "15639": {
      "fn": "ERC1155Upgradeable._mint",
      "offset": [
        9754,
        9767
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "15640": {
      "fn": "ERC1155Upgradeable._mint",
      "offset": [
        9754,
        9767
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x40"
    },
    "15642": {
      "fn": "ERC1155Upgradeable._mint",
      "offset": [
        9754,
        9767
      ],
      "op": "DUP1",
      "path": "32"
    },
    "15643": {
      "fn": "ERC1155Upgradeable._mint",
      "offset": [
        9754,
        9767
      ],
      "op": "DUP4",
      "path": "32"
    },
    "15644": {
      "fn": "ERC1155Upgradeable._mint",
      "offset": [
        9754,
        9767
      ],
      "op": "KECCAK256",
      "path": "32"
    },
    "15645": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15647": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15649": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "15651": {
      "op": "SHL"
    },
    "15652": {
      "op": "SUB"
    },
    "15653": {
      "fn": "ERC1155Upgradeable._mint",
      "offset": [
        9754,
        9771
      ],
      "op": "DUP12",
      "path": "32"
    },
    "15654": {
      "fn": "ERC1155Upgradeable._mint",
      "offset": [
        9754,
        9771
      ],
      "op": "AND",
      "path": "32"
    },
    "15655": {
      "fn": "ERC1155Upgradeable._mint",
      "offset": [
        9754,
        9771
      ],
      "op": "DUP5",
      "path": "32"
    },
    "15656": {
      "fn": "ERC1155Upgradeable._mint",
      "offset": [
        9754,
        9771
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "15657": {
      "fn": "ERC1155Upgradeable._mint",
      "offset": [
        9754,
        9771
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "15658": {
      "fn": "ERC1155Upgradeable._mint",
      "offset": [
        9754,
        9771
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "15659": {
      "fn": "ERC1155Upgradeable._mint",
      "offset": [
        9754,
        9771
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "15660": {
      "fn": "ERC1155Upgradeable._mint",
      "offset": [
        9754,
        9771
      ],
      "op": "DUP2",
      "path": "32"
    },
    "15661": {
      "fn": "ERC1155Upgradeable._mint",
      "offset": [
        9754,
        9771
      ],
      "op": "KECCAK256",
      "path": "32"
    },
    "15662": {
      "fn": "ERC1155Upgradeable._mint",
      "offset": [
        9754,
        9781
      ],
      "op": "DUP1",
      "path": "32"
    },
    "15663": {
      "fn": "ERC1155Upgradeable._mint",
      "offset": [
        9754,
        9781
      ],
      "op": "SLOAD",
      "path": "32"
    },
    "15664": {
      "fn": "ERC1155Upgradeable._mint",
      "offset": [
        9775,
        9781
      ],
      "op": "DUP8",
      "path": "32"
    },
    "15665": {
      "fn": "ERC1155Upgradeable._mint",
      "offset": [
        9775,
        9781
      ],
      "op": "SWAP3",
      "path": "32"
    },
    "15666": {
      "fn": "ERC1155Upgradeable._mint",
      "offset": [
        9754,
        9767
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "15667": {
      "fn": "ERC1155Upgradeable._mint",
      "offset": [
        9754,
        9781
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x3D3D"
    },
    "15670": {
      "fn": "ERC1155Upgradeable._mint",
      "offset": [
        9754,
        9781
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "15671": {
      "fn": "ERC1155Upgradeable._mint",
      "offset": [
        9775,
        9781
      ],
      "op": "DUP5",
      "path": "32"
    },
    "15672": {
      "fn": "ERC1155Upgradeable._mint",
      "offset": [
        9775,
        9781
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "15673": {
      "fn": "ERC1155Upgradeable._mint",
      "offset": [
        9754,
        9781
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x5092"
    },
    "15676": {
      "fn": "ERC1155Upgradeable._mint",
      "jump": "i",
      "offset": [
        9754,
        9781
      ],
      "op": "JUMP",
      "path": "32"
    },
    "15677": {
      "fn": "ERC1155Upgradeable._mint",
      "offset": [
        9754,
        9781
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "15678": {
      "fn": "ERC1155Upgradeable._mint",
      "offset": [
        9754,
        9781
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "15679": {
      "fn": "ERC1155Upgradeable._mint",
      "offset": [
        9754,
        9781
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "15680": {
      "fn": "ERC1155Upgradeable._mint",
      "offset": [
        9754,
        9781
      ],
      "op": "SSTORE",
      "path": "32"
    },
    "15681": {
      "op": "POP"
    },
    "15682": {
      "op": "POP"
    },
    "15683": {
      "fn": "ERC1155Upgradeable._mint",
      "offset": [
        9797,
        9849
      ],
      "op": "PUSH1",
      "path": "32",
      "statement": 128,
      "value": "0x40"
    },
    "15685": {
      "fn": "ERC1155Upgradeable._mint",
      "offset": [
        9797,
        9849
      ],
      "op": "DUP1",
      "path": "32"
    },
    "15686": {
      "fn": "ERC1155Upgradeable._mint",
      "offset": [
        9797,
        9849
      ],
      "op": "MLOAD",
      "path": "32"
    },
    "15687": {
      "op": "DUP8"
    },
    "15688": {
      "op": "DUP2"
    },
    "15689": {
      "op": "MSTORE"
    },
    "15690": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15692": {
      "op": "DUP2"
    },
    "15693": {
      "op": "ADD"
    },
    "15694": {
      "op": "DUP8"
    },
    "15695": {
      "op": "SWAP1"
    },
    "15696": {
      "op": "MSTORE"
    },
    "15697": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15699": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15701": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "15703": {
      "op": "SHL"
    },
    "15704": {
      "op": "SUB"
    },
    "15705": {
      "fn": "ERC1155Upgradeable._mint",
      "offset": [
        9797,
        9849
      ],
      "op": "DUP1",
      "path": "32"
    },
    "15706": {
      "fn": "ERC1155Upgradeable._mint",
      "offset": [
        9797,
        9849
      ],
      "op": "DUP11",
      "path": "32"
    },
    "15707": {
      "fn": "ERC1155Upgradeable._mint",
      "offset": [
        9797,
        9849
      ],
      "op": "AND",
      "path": "32"
    },
    "15708": {
      "fn": "ERC1155Upgradeable._mint",
      "offset": [
        9797,
        9849
      ],
      "op": "SWAP3",
      "path": "32"
    },
    "15709": {
      "fn": "ERC1155Upgradeable._mint",
      "offset": [
        9830,
        9831
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x0"
    },
    "15711": {
      "fn": "ERC1155Upgradeable._mint",
      "offset": [
        9830,
        9831
      ],
      "op": "SWAP3",
      "path": "32"
    },
    "15712": {
      "fn": "ERC1155Upgradeable._mint",
      "offset": [
        9797,
        9849
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "15713": {
      "fn": "ERC1155Upgradeable._mint",
      "offset": [
        9797,
        9849
      ],
      "op": "DUP8",
      "path": "32"
    },
    "15714": {
      "fn": "ERC1155Upgradeable._mint",
      "offset": [
        9797,
        9849
      ],
      "op": "AND",
      "path": "32"
    },
    "15715": {
      "fn": "ERC1155Upgradeable._mint",
      "offset": [
        9797,
        9849
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "15716": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15718": {
      "op": "DUP1"
    },
    "15719": {
      "op": "MLOAD"
    },
    "15720": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15722": {
      "op": "PUSH2",
      "value": "0x53CD"
    },
    "15725": {
      "op": "DUP4"
    },
    "15726": {
      "op": "CODECOPY"
    },
    "15727": {
      "op": "DUP2"
    },
    "15728": {
      "op": "MLOAD"
    },
    "15729": {
      "op": "SWAP2"
    },
    "15730": {
      "op": "MSTORE"
    },
    "15731": {
      "fn": "ERC1155Upgradeable._mint",
      "offset": [
        9797,
        9849
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "15732": {
      "op": "ADD"
    },
    "15733": {
      "fn": "ERC1155Upgradeable._mint",
      "offset": [
        9797,
        9849
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x40"
    },
    "15735": {
      "fn": "ERC1155Upgradeable._mint",
      "offset": [
        9797,
        9849
      ],
      "op": "MLOAD",
      "path": "32"
    },
    "15736": {
      "fn": "ERC1155Upgradeable._mint",
      "offset": [
        9797,
        9849
      ],
      "op": "DUP1",
      "path": "32"
    },
    "15737": {
      "fn": "ERC1155Upgradeable._mint",
      "offset": [
        9797,
        9849
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "15738": {
      "fn": "ERC1155Upgradeable._mint",
      "offset": [
        9797,
        9849
      ],
      "op": "SUB",
      "path": "32"
    },
    "15739": {
      "fn": "ERC1155Upgradeable._mint",
      "offset": [
        9797,
        9849
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "15740": {
      "fn": "ERC1155Upgradeable._mint",
      "offset": [
        9797,
        9849
      ],
      "op": "LOG4",
      "path": "32"
    },
    "15741": {
      "fn": "ERC1155Upgradeable._mint",
      "offset": [
        9940,
        10014
      ],
      "op": "PUSH2",
      "path": "32",
      "statement": 129,
      "value": "0x2314"
    },
    "15744": {
      "fn": "ERC1155Upgradeable._mint",
      "offset": [
        9971,
        9979
      ],
      "op": "DUP4",
      "path": "32"
    },
    "15745": {
      "fn": "ERC1155Upgradeable._mint",
      "offset": [
        9989,
        9990
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x0"
    },
    "15747": {
      "fn": "ERC1155Upgradeable._mint",
      "offset": [
        9993,
        9995
      ],
      "op": "DUP10",
      "path": "32"
    },
    "15748": {
      "fn": "ERC1155Upgradeable._mint",
      "offset": [
        9997,
        9999
      ],
      "op": "DUP10",
      "path": "32"
    },
    "15749": {
      "fn": "ERC1155Upgradeable._mint",
      "offset": [
        10001,
        10007
      ],
      "op": "DUP10",
      "path": "32"
    },
    "15750": {
      "fn": "ERC1155Upgradeable._mint",
      "offset": [
        10009,
        10013
      ],
      "op": "DUP10",
      "path": "32"
    },
    "15751": {
      "fn": "ERC1155Upgradeable._mint",
      "offset": [
        9940,
        9970
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x431D"
    },
    "15754": {
      "fn": "ERC1155Upgradeable._mint",
      "jump": "i",
      "offset": [
        9940,
        10014
      ],
      "op": "JUMP",
      "path": "32"
    },
    "15755": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        12452,
        13421
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "15756": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15758": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15760": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "15762": {
      "op": "SHL"
    },
    "15763": {
      "op": "SUB"
    },
    "15764": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        12604,
        12622
      ],
      "op": "DUP4",
      "path": "32",
      "statement": 130
    },
    "15765": {
      "branch": 233,
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        12604,
        12622
      ],
      "op": "AND",
      "path": "32"
    },
    "15766": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        12596,
        12662
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x3DB1"
    },
    "15769": {
      "branch": 233,
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        12596,
        12662
      ],
      "op": "JUMPI",
      "path": "32"
    },
    "15770": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        12596,
        12662
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x40"
    },
    "15772": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        12596,
        12662
      ],
      "op": "MLOAD",
      "path": "32"
    },
    "15773": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "15777": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "15779": {
      "op": "SHL"
    },
    "15780": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        12596,
        12662
      ],
      "op": "DUP2",
      "path": "32"
    },
    "15781": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        12596,
        12662
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "15782": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        12596,
        12662
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x4"
    },
    "15784": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        12596,
        12662
      ],
      "op": "ADD",
      "path": "32"
    },
    "15785": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        12596,
        12662
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x60F"
    },
    "15788": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        12596,
        12662
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "15789": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        12596,
        12662
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x4F34"
    },
    "15792": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "jump": "i",
      "offset": [
        12596,
        12662
      ],
      "op": "JUMP",
      "path": "32"
    },
    "15793": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        12596,
        12662
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "15794": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        12695,
        12702
      ],
      "op": "DUP1",
      "path": "32",
      "statement": 131
    },
    "15795": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        12695,
        12709
      ],
      "op": "MLOAD",
      "path": "32"
    },
    "15796": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        12681,
        12684
      ],
      "op": "DUP3",
      "path": "32"
    },
    "15797": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        12681,
        12691
      ],
      "op": "MLOAD",
      "path": "32"
    },
    "15798": {
      "branch": 234,
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        12681,
        12709
      ],
      "op": "EQ",
      "path": "32"
    },
    "15799": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        12673,
        12754
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x3DD2"
    },
    "15802": {
      "branch": 234,
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        12673,
        12754
      ],
      "op": "JUMPI",
      "path": "32"
    },
    "15803": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        12673,
        12754
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x40"
    },
    "15805": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        12673,
        12754
      ],
      "op": "MLOAD",
      "path": "32"
    },
    "15806": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "15810": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "15812": {
      "op": "SHL"
    },
    "15813": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        12673,
        12754
      ],
      "op": "DUP2",
      "path": "32"
    },
    "15814": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        12673,
        12754
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "15815": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        12673,
        12754
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x4"
    },
    "15817": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        12673,
        12754
      ],
      "op": "ADD",
      "path": "32"
    },
    "15818": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        12673,
        12754
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x60F"
    },
    "15821": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        12673,
        12754
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "15822": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        12673,
        12754
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x4FBB"
    },
    "15825": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "jump": "i",
      "offset": [
        12673,
        12754
      ],
      "op": "JUMP",
      "path": "32"
    },
    "15826": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        12673,
        12754
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "15827": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        12811,
        12877
      ],
      "op": "PUSH1",
      "path": "32",
      "statement": 132,
      "value": "0x40"
    },
    "15829": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        12811,
        12877
      ],
      "op": "DUP1",
      "path": "32"
    },
    "15830": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        12811,
        12877
      ],
      "op": "MLOAD",
      "path": "32"
    },
    "15831": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        12811,
        12877
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x20"
    },
    "15833": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        12811,
        12877
      ],
      "op": "DUP2",
      "path": "32"
    },
    "15834": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        12811,
        12877
      ],
      "op": "ADD",
      "path": "32"
    },
    "15835": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        12811,
        12877
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "15836": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        12811,
        12877
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "15837": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        12811,
        12877
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "15838": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        12767,
        12783
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x0"
    },
    "15840": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        12811,
        12877
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "15841": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        12811,
        12877
      ],
      "op": "DUP2",
      "path": "32"
    },
    "15842": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        12811,
        12877
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "15843": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        12811,
        12877
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "15844": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        952,
        962
      ],
      "op": "CALLER",
      "path": "42"
    },
    "15845": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        952,
        962
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "15846": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        12890,
        13263
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "15847": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        12914,
        12917
      ],
      "op": "DUP4",
      "path": "32"
    },
    "15848": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        12914,
        12924
      ],
      "op": "MLOAD",
      "path": "32"
    },
    "15849": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        12910,
        12911
      ],
      "op": "DUP2",
      "path": "32"
    },
    "15850": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        12910,
        12924
      ],
      "op": "LT",
      "path": "32"
    },
    "15851": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        12890,
        13263
      ],
      "op": "ISZERO",
      "path": "32"
    },
    "15852": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        12890,
        13263
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x3EAB"
    },
    "15855": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        12890,
        13263
      ],
      "op": "JUMPI",
      "path": "32"
    },
    "15856": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        12946,
        12956
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x0"
    },
    "15858": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        12959,
        12962
      ],
      "op": "DUP5",
      "path": "32"
    },
    "15859": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        12963,
        12964
      ],
      "op": "DUP3",
      "path": "32"
    },
    "15860": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        12959,
        12965
      ],
      "op": "DUP2",
      "path": "32"
    },
    "15861": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        12959,
        12965
      ],
      "op": "MLOAD",
      "path": "32"
    },
    "15862": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        12959,
        12965
      ],
      "op": "DUP2",
      "path": "32"
    },
    "15863": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        12959,
        12965
      ],
      "op": "LT",
      "path": "32"
    },
    "15864": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        12959,
        12965
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x3E03"
    },
    "15867": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        12959,
        12965
      ],
      "op": "JUMPI",
      "path": "32"
    },
    "15868": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        12959,
        12965
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x3E03"
    },
    "15871": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        12959,
        12965
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x4DCF"
    },
    "15874": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "jump": "i",
      "offset": [
        12959,
        12965
      ],
      "op": "JUMP",
      "path": "32"
    },
    "15875": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        12959,
        12965
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "15876": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        12959,
        12965
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x20"
    },
    "15878": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        12959,
        12965
      ],
      "op": "MUL",
      "path": "32"
    },
    "15879": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        12959,
        12965
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x20"
    },
    "15881": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        12959,
        12965
      ],
      "op": "ADD",
      "path": "32"
    },
    "15882": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        12959,
        12965
      ],
      "op": "ADD",
      "path": "32"
    },
    "15883": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        12959,
        12965
      ],
      "op": "MLOAD",
      "path": "32"
    },
    "15884": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        12946,
        12965
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "15885": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        12946,
        12965
      ],
      "op": "POP",
      "path": "32"
    },
    "15886": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        12980,
        12994
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x0"
    },
    "15888": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        12997,
        13004
      ],
      "op": "DUP5",
      "path": "32"
    },
    "15889": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        13005,
        13006
      ],
      "op": "DUP4",
      "path": "32"
    },
    "15890": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        12997,
        13007
      ],
      "op": "DUP2",
      "path": "32"
    },
    "15891": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        12997,
        13007
      ],
      "op": "MLOAD",
      "path": "32"
    },
    "15892": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        12997,
        13007
      ],
      "op": "DUP2",
      "path": "32"
    },
    "15893": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        12997,
        13007
      ],
      "op": "LT",
      "path": "32"
    },
    "15894": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        12997,
        13007
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x3E21"
    },
    "15897": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        12997,
        13007
      ],
      "op": "JUMPI",
      "path": "32"
    },
    "15898": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        12997,
        13007
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x3E21"
    },
    "15901": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        12997,
        13007
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x4DCF"
    },
    "15904": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "jump": "i",
      "offset": [
        12997,
        13007
      ],
      "op": "JUMP",
      "path": "32"
    },
    "15905": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        12997,
        13007
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "15906": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        12997,
        13007
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x20"
    },
    "15908": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        12997,
        13007
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "15909": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        12997,
        13007
      ],
      "op": "DUP2",
      "path": "32"
    },
    "15910": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        12997,
        13007
      ],
      "op": "MUL",
      "path": "32"
    },
    "15911": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        12997,
        13007
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "15912": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        12997,
        13007
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "15913": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        12997,
        13007
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "15914": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        12997,
        13007
      ],
      "op": "ADD",
      "path": "32"
    },
    "15915": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        12997,
        13007
      ],
      "op": "DUP2",
      "path": "32"
    },
    "15916": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        12997,
        13007
      ],
      "op": "ADD",
      "path": "32"
    },
    "15917": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        12997,
        13007
      ],
      "op": "MLOAD",
      "path": "32"
    },
    "15918": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        13024,
        13043
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x0"
    },
    "15920": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        13046,
        13059
      ],
      "op": "DUP5",
      "path": "32"
    },
    "15921": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        13046,
        13059
      ],
      "op": "DUP2",
      "path": "32"
    },
    "15922": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        13046,
        13059
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "15923": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        13046,
        13055
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x65"
    },
    "15925": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        13046,
        13059
      ],
      "op": "DUP4",
      "path": "32"
    },
    "15926": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        13046,
        13059
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "15927": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        13046,
        13059
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x40"
    },
    "15929": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        13046,
        13059
      ],
      "op": "DUP1",
      "path": "32"
    },
    "15930": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        13046,
        13059
      ],
      "op": "DUP3",
      "path": "32"
    },
    "15931": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        13046,
        13059
      ],
      "op": "KECCAK256",
      "path": "32"
    },
    "15932": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15934": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15936": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "15938": {
      "op": "SHL"
    },
    "15939": {
      "op": "SUB"
    },
    "15940": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        13046,
        13065
      ],
      "op": "DUP13",
      "path": "32"
    },
    "15941": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        13046,
        13065
      ],
      "op": "AND",
      "path": "32"
    },
    "15942": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        13046,
        13065
      ],
      "op": "DUP4",
      "path": "32"
    },
    "15943": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        13046,
        13065
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "15944": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        13046,
        13065
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "15945": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        13046,
        13065
      ],
      "op": "SWAP4",
      "path": "32"
    },
    "15946": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        13046,
        13065
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "15947": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        13046,
        13065
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "15948": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        13046,
        13065
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "15949": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        13046,
        13065
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "15950": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        13046,
        13065
      ],
      "op": "KECCAK256",
      "path": "32"
    },
    "15951": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        13046,
        13065
      ],
      "op": "SLOAD",
      "path": "32"
    },
    "15952": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        12997,
        13007
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "15953": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        12997,
        13007
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "15954": {
      "op": "POP"
    },
    "15955": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        13088,
        13109
      ],
      "op": "DUP2",
      "path": "32",
      "statement": 133
    },
    "15956": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        13088,
        13109
      ],
      "op": "DUP2",
      "path": "32"
    },
    "15957": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        13088,
        13109
      ],
      "op": "LT",
      "path": "32"
    },
    "15958": {
      "branch": 235,
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        13088,
        13109
      ],
      "op": "ISZERO",
      "path": "32"
    },
    "15959": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        13080,
        13150
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x3E72"
    },
    "15962": {
      "branch": 235,
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        13080,
        13150
      ],
      "op": "JUMPI",
      "path": "32"
    },
    "15963": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        13080,
        13150
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x40"
    },
    "15965": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        13080,
        13150
      ],
      "op": "MLOAD",
      "path": "32"
    },
    "15966": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "15970": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "15972": {
      "op": "SHL"
    },
    "15973": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        13080,
        13150
      ],
      "op": "DUP2",
      "path": "32"
    },
    "15974": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        13080,
        13150
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "15975": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        13080,
        13150
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x4"
    },
    "15977": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        13080,
        13150
      ],
      "op": "ADD",
      "path": "32"
    },
    "15978": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        13080,
        13150
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x60F"
    },
    "15981": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        13080,
        13150
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "15982": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        13080,
        13150
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x4F77"
    },
    "15985": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "jump": "i",
      "offset": [
        13080,
        13150
      ],
      "op": "JUMP",
      "path": "32"
    },
    "15986": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        13080,
        13150
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "15987": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        13194,
        13207
      ],
      "op": "PUSH1",
      "path": "32",
      "statement": 134,
      "value": "0x0"
    },
    "15989": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        13194,
        13207
      ],
      "op": "SWAP3",
      "path": "32"
    },
    "15990": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        13194,
        13207
      ],
      "op": "DUP4",
      "path": "32"
    },
    "15991": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        13194,
        13207
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "15992": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        13194,
        13203
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x65"
    },
    "15994": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        13194,
        13207
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x20"
    },
    "15996": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        13194,
        13207
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "15997": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        13194,
        13207
      ],
      "op": "DUP2",
      "path": "32"
    },
    "15998": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        13194,
        13207
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "15999": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        13194,
        13207
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x40"
    },
    "16001": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        13194,
        13207
      ],
      "op": "DUP1",
      "path": "32"
    },
    "16002": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        13194,
        13207
      ],
      "op": "DUP6",
      "path": "32"
    },
    "16003": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        13194,
        13207
      ],
      "op": "KECCAK256",
      "path": "32"
    },
    "16004": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16006": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16008": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "16010": {
      "op": "SHL"
    },
    "16011": {
      "op": "SUB"
    },
    "16012": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        13194,
        13213
      ],
      "op": "DUP12",
      "path": "32"
    },
    "16013": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        13194,
        13213
      ],
      "op": "AND",
      "path": "32"
    },
    "16014": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        13194,
        13213
      ],
      "op": "DUP7",
      "path": "32"
    },
    "16015": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        13194,
        13213
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "16016": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        13194,
        13213
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "16017": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        13194,
        13213
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "16018": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        13194,
        13213
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "16019": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        13194,
        13213
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "16020": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        13194,
        13213
      ],
      "op": "SWAP3",
      "path": "32"
    },
    "16021": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        13194,
        13213
      ],
      "op": "KECCAK256",
      "path": "32"
    },
    "16022": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        13216,
        13236
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "16023": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        13216,
        13236
      ],
      "op": "SUB",
      "path": "32"
    },
    "16024": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        13194,
        13236
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "16025": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        13194,
        13236
      ],
      "op": "SSTORE",
      "path": "32"
    },
    "16026": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        12926,
        12929
      ],
      "op": "DUP1",
      "path": "32",
      "statement": 135
    },
    "16027": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        12926,
        12929
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x3EA3"
    },
    "16030": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        12926,
        12929
      ],
      "op": "DUP2",
      "path": "32"
    },
    "16031": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        12926,
        12929
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x4DE5"
    },
    "16034": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "jump": "i",
      "offset": [
        12926,
        12929
      ],
      "op": "JUMP",
      "path": "32"
    },
    "16035": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        12926,
        12929
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "16036": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        12926,
        12929
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "16037": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        12926,
        12929
      ],
      "op": "POP",
      "path": "32"
    },
    "16038": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        12926,
        12929
      ],
      "op": "POP",
      "path": "32"
    },
    "16039": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        12890,
        13263
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x3DE6"
    },
    "16042": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        12890,
        13263
      ],
      "op": "JUMP",
      "path": "32"
    },
    "16043": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        12890,
        13263
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "16044": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        12890,
        13263
      ],
      "op": "POP",
      "path": "32"
    },
    "16045": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        13318,
        13319
      ],
      "op": "PUSH1",
      "path": "32",
      "statement": 136,
      "value": "0x0"
    },
    "16047": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16049": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16051": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "16053": {
      "op": "SHL"
    },
    "16054": {
      "op": "SUB"
    },
    "16055": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        13280,
        13335
      ],
      "op": "AND",
      "path": "32"
    },
    "16056": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        13304,
        13308
      ],
      "op": "DUP5",
      "path": "32"
    },
    "16057": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16059": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16061": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "16063": {
      "op": "SHL"
    },
    "16064": {
      "op": "SUB"
    },
    "16065": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        13280,
        13335
      ],
      "op": "AND",
      "path": "32"
    },
    "16066": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        13294,
        13302
      ],
      "op": "DUP3",
      "path": "32"
    },
    "16067": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16069": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16071": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "16073": {
      "op": "SHL"
    },
    "16074": {
      "op": "SUB"
    },
    "16075": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        13280,
        13335
      ],
      "op": "AND",
      "path": "32"
    },
    "16076": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        13280,
        13335
      ],
      "op": "PUSH32",
      "path": "32",
      "value": "0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB"
    },
    "16109": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        13322,
        13325
      ],
      "op": "DUP7",
      "path": "32"
    },
    "16110": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        13327,
        13334
      ],
      "op": "DUP7",
      "path": "32"
    },
    "16111": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        13280,
        13335
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x40"
    },
    "16113": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        13280,
        13335
      ],
      "op": "MLOAD",
      "path": "32"
    },
    "16114": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        13280,
        13335
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x3EFC"
    },
    "16117": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        13280,
        13335
      ],
      "op": "SWAP3",
      "path": "32"
    },
    "16118": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        13280,
        13335
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "16119": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        13280,
        13335
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "16120": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        13280,
        13335
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x50AA"
    },
    "16123": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "jump": "i",
      "offset": [
        13280,
        13335
      ],
      "op": "JUMP",
      "path": "32"
    },
    "16124": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        13280,
        13335
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "16125": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        13280,
        13335
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x40"
    },
    "16127": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        13280,
        13335
      ],
      "op": "MLOAD",
      "path": "32"
    },
    "16128": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        13280,
        13335
      ],
      "op": "DUP1",
      "path": "32"
    },
    "16129": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        13280,
        13335
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "16130": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        13280,
        13335
      ],
      "op": "SUB",
      "path": "32"
    },
    "16131": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        13280,
        13335
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "16132": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        13280,
        13335
      ],
      "op": "LOG4",
      "path": "32"
    },
    "16133": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        13348,
        13413
      ],
      "op": "PUSH1",
      "path": "32",
      "statement": 137,
      "value": "0x40"
    },
    "16135": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        13348,
        13413
      ],
      "op": "DUP1",
      "path": "32"
    },
    "16136": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        13348,
        13413
      ],
      "op": "MLOAD",
      "path": "32"
    },
    "16137": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        13348,
        13413
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x20"
    },
    "16139": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        13348,
        13413
      ],
      "op": "DUP2",
      "path": "32"
    },
    "16140": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        13348,
        13413
      ],
      "op": "ADD",
      "path": "32"
    },
    "16141": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        13348,
        13413
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "16142": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        13348,
        13413
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "16143": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        13348,
        13413
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "16144": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        13392,
        13393
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x0"
    },
    "16146": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        13348,
        13413
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "16147": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        13348,
        13413
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "16148": {
      "fn": "ERC1155Upgradeable._burnBatch",
      "offset": [
        13348,
        13413
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x23A4"
    },
    "16151": {
      "fn": "ERC1155Upgradeable._safeBatchTransferFrom",
      "offset": [
        6829,
        7975
      ],
      "op": "JUMP",
      "path": "32"
    },
    "16152": {
      "fn": "ERC1155Upgradeable._setApprovalForAll",
      "offset": [
        13563,
        13894
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "16153": {
      "fn": "ERC1155Upgradeable._setApprovalForAll",
      "offset": [
        13718,
        13726
      ],
      "op": "DUP2",
      "path": "32",
      "statement": 138
    },
    "16154": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16156": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16158": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "16160": {
      "op": "SHL"
    },
    "16161": {
      "op": "SUB"
    },
    "16162": {
      "fn": "ERC1155Upgradeable._setApprovalForAll",
      "offset": [
        13709,
        13726
      ],
      "op": "AND",
      "path": "32"
    },
    "16163": {
      "fn": "ERC1155Upgradeable._setApprovalForAll",
      "offset": [
        13709,
        13714
      ],
      "op": "DUP4",
      "path": "32"
    },
    "16164": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16166": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16168": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "16170": {
      "op": "SHL"
    },
    "16171": {
      "op": "SUB"
    },
    "16172": {
      "fn": "ERC1155Upgradeable._setApprovalForAll",
      "offset": [
        13709,
        13726
      ],
      "op": "AND",
      "path": "32"
    },
    "16173": {
      "branch": 236,
      "fn": "ERC1155Upgradeable._setApprovalForAll",
      "offset": [
        13709,
        13726
      ],
      "op": "SUB",
      "path": "32"
    },
    "16174": {
      "fn": "ERC1155Upgradeable._setApprovalForAll",
      "offset": [
        13701,
        13772
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x3F8B"
    },
    "16177": {
      "branch": 236,
      "fn": "ERC1155Upgradeable._setApprovalForAll",
      "offset": [
        13701,
        13772
      ],
      "op": "JUMPI",
      "path": "32"
    },
    "16178": {
      "fn": "ERC1155Upgradeable._setApprovalForAll",
      "offset": [
        13701,
        13772
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x40"
    },
    "16180": {
      "fn": "ERC1155Upgradeable._setApprovalForAll",
      "offset": [
        13701,
        13772
      ],
      "op": "MLOAD",
      "path": "32"
    },
    "16181": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "16185": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "16187": {
      "op": "SHL"
    },
    "16188": {
      "fn": "ERC1155Upgradeable._setApprovalForAll",
      "offset": [
        13701,
        13772
      ],
      "op": "DUP2",
      "path": "32"
    },
    "16189": {
      "fn": "ERC1155Upgradeable._setApprovalForAll",
      "offset": [
        13701,
        13772
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "16190": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16192": {
      "fn": "ERC1155Upgradeable._setApprovalForAll",
      "offset": [
        13701,
        13772
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x4"
    },
    "16194": {
      "fn": "ERC1155Upgradeable._setApprovalForAll",
      "offset": [
        13701,
        13772
      ],
      "op": "DUP3",
      "path": "32"
    },
    "16195": {
      "fn": "ERC1155Upgradeable._setApprovalForAll",
      "offset": [
        13701,
        13772
      ],
      "op": "ADD",
      "path": "32"
    },
    "16196": {
      "op": "MSTORE"
    },
    "16197": {
      "op": "PUSH1",
      "value": "0x29"
    },
    "16199": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "16201": {
      "op": "DUP3"
    },
    "16202": {
      "op": "ADD"
    },
    "16203": {
      "op": "MSTORE"
    },
    "16204": {
      "op": "PUSH32",
      "value": "0x455243313135353A2073657474696E6720617070726F76616C20737461747573"
    },
    "16237": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "16239": {
      "op": "DUP3"
    },
    "16240": {
      "op": "ADD"
    },
    "16241": {
      "op": "MSTORE"
    },
    "16242": {
      "op": "PUSH9",
      "value": "0x103337B91039B2B633"
    },
    "16252": {
      "op": "PUSH1",
      "value": "0xB9"
    },
    "16254": {
      "op": "SHL"
    },
    "16255": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "16257": {
      "op": "DUP3"
    },
    "16258": {
      "op": "ADD"
    },
    "16259": {
      "op": "MSTORE"
    },
    "16260": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "16262": {
      "op": "ADD"
    },
    "16263": {
      "fn": "ERC1155Upgradeable._setApprovalForAll",
      "offset": [
        13701,
        13772
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x60F"
    },
    "16266": {
      "op": "JUMP"
    },
    "16267": {
      "fn": "ERC1155Upgradeable._setApprovalForAll",
      "offset": [
        13701,
        13772
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "16268": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16270": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16272": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "16274": {
      "op": "SHL"
    },
    "16275": {
      "op": "SUB"
    },
    "16276": {
      "fn": "ERC1155Upgradeable._setApprovalForAll",
      "offset": [
        13783,
        13808
      ],
      "op": "DUP4",
      "path": "32",
      "statement": 139
    },
    "16277": {
      "fn": "ERC1155Upgradeable._setApprovalForAll",
      "offset": [
        13783,
        13808
      ],
      "op": "DUP2",
      "path": "32"
    },
    "16278": {
      "fn": "ERC1155Upgradeable._setApprovalForAll",
      "offset": [
        13783,
        13808
      ],
      "op": "AND",
      "path": "32"
    },
    "16279": {
      "fn": "ERC1155Upgradeable._setApprovalForAll",
      "offset": [
        13783,
        13808
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x0"
    },
    "16281": {
      "fn": "ERC1155Upgradeable._setApprovalForAll",
      "offset": [
        13783,
        13808
      ],
      "op": "DUP2",
      "path": "32"
    },
    "16282": {
      "fn": "ERC1155Upgradeable._setApprovalForAll",
      "offset": [
        13783,
        13808
      ],
      "op": "DUP2",
      "path": "32"
    },
    "16283": {
      "fn": "ERC1155Upgradeable._setApprovalForAll",
      "offset": [
        13783,
        13808
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "16284": {
      "fn": "ERC1155Upgradeable._setApprovalForAll",
      "offset": [
        13783,
        13801
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x66"
    },
    "16286": {
      "fn": "ERC1155Upgradeable._setApprovalForAll",
      "offset": [
        13783,
        13808
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x20"
    },
    "16288": {
      "fn": "ERC1155Upgradeable._setApprovalForAll",
      "offset": [
        13783,
        13808
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "16289": {
      "fn": "ERC1155Upgradeable._setApprovalForAll",
      "offset": [
        13783,
        13808
      ],
      "op": "DUP2",
      "path": "32"
    },
    "16290": {
      "fn": "ERC1155Upgradeable._setApprovalForAll",
      "offset": [
        13783,
        13808
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "16291": {
      "fn": "ERC1155Upgradeable._setApprovalForAll",
      "offset": [
        13783,
        13808
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x40"
    },
    "16293": {
      "fn": "ERC1155Upgradeable._setApprovalForAll",
      "offset": [
        13783,
        13808
      ],
      "op": "DUP1",
      "path": "32"
    },
    "16294": {
      "fn": "ERC1155Upgradeable._setApprovalForAll",
      "offset": [
        13783,
        13808
      ],
      "op": "DUP4",
      "path": "32"
    },
    "16295": {
      "fn": "ERC1155Upgradeable._setApprovalForAll",
      "offset": [
        13783,
        13808
      ],
      "op": "KECCAK256",
      "path": "32"
    },
    "16296": {
      "fn": "ERC1155Upgradeable._setApprovalForAll",
      "offset": [
        13783,
        13818
      ],
      "op": "SWAP5",
      "path": "32"
    },
    "16297": {
      "fn": "ERC1155Upgradeable._setApprovalForAll",
      "offset": [
        13783,
        13818
      ],
      "op": "DUP8",
      "path": "32"
    },
    "16298": {
      "fn": "ERC1155Upgradeable._setApprovalForAll",
      "offset": [
        13783,
        13818
      ],
      "op": "AND",
      "path": "32"
    },
    "16299": {
      "fn": "ERC1155Upgradeable._setApprovalForAll",
      "offset": [
        13783,
        13818
      ],
      "op": "DUP1",
      "path": "32"
    },
    "16300": {
      "fn": "ERC1155Upgradeable._setApprovalForAll",
      "offset": [
        13783,
        13818
      ],
      "op": "DUP5",
      "path": "32"
    },
    "16301": {
      "fn": "ERC1155Upgradeable._setApprovalForAll",
      "offset": [
        13783,
        13818
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "16302": {
      "fn": "ERC1155Upgradeable._setApprovalForAll",
      "offset": [
        13783,
        13818
      ],
      "op": "SWAP5",
      "path": "32"
    },
    "16303": {
      "fn": "ERC1155Upgradeable._setApprovalForAll",
      "offset": [
        13783,
        13818
      ],
      "op": "DUP3",
      "path": "32"
    },
    "16304": {
      "fn": "ERC1155Upgradeable._setApprovalForAll",
      "offset": [
        13783,
        13818
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "16305": {
      "fn": "ERC1155Upgradeable._setApprovalForAll",
      "offset": [
        13783,
        13818
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "16306": {
      "fn": "ERC1155Upgradeable._setApprovalForAll",
      "offset": [
        13783,
        13818
      ],
      "op": "DUP3",
      "path": "32"
    },
    "16307": {
      "fn": "ERC1155Upgradeable._setApprovalForAll",
      "offset": [
        13783,
        13818
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "16308": {
      "fn": "ERC1155Upgradeable._setApprovalForAll",
      "offset": [
        13783,
        13818
      ],
      "op": "KECCAK256",
      "path": "32"
    },
    "16309": {
      "fn": "ERC1155Upgradeable._setApprovalForAll",
      "offset": [
        13783,
        13829
      ],
      "op": "DUP1",
      "path": "32"
    },
    "16310": {
      "fn": "ERC1155Upgradeable._setApprovalForAll",
      "offset": [
        13783,
        13829
      ],
      "op": "SLOAD",
      "path": "32"
    },
    "16311": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "16313": {
      "op": "NOT"
    },
    "16314": {
      "fn": "ERC1155Upgradeable._setApprovalForAll",
      "offset": [
        13783,
        13829
      ],
      "op": "AND",
      "path": "32"
    },
    "16315": {
      "fn": "ERC1155Upgradeable._setApprovalForAll",
      "offset": [
        13783,
        13829
      ],
      "op": "DUP7",
      "path": "32"
    },
    "16316": {
      "fn": "ERC1155Upgradeable._setApprovalForAll",
      "offset": [
        13783,
        13829
      ],
      "op": "ISZERO",
      "path": "32"
    },
    "16317": {
      "fn": "ERC1155Upgradeable._setApprovalForAll",
      "offset": [
        13783,
        13829
      ],
      "op": "ISZERO",
      "path": "32"
    },
    "16318": {
      "fn": "ERC1155Upgradeable._setApprovalForAll",
      "offset": [
        13783,
        13829
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "16319": {
      "fn": "ERC1155Upgradeable._setApprovalForAll",
      "offset": [
        13783,
        13829
      ],
      "op": "DUP2",
      "path": "32"
    },
    "16320": {
      "fn": "ERC1155Upgradeable._setApprovalForAll",
      "offset": [
        13783,
        13829
      ],
      "op": "OR",
      "path": "32"
    },
    "16321": {
      "fn": "ERC1155Upgradeable._setApprovalForAll",
      "offset": [
        13783,
        13829
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "16322": {
      "fn": "ERC1155Upgradeable._setApprovalForAll",
      "offset": [
        13783,
        13829
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "16323": {
      "fn": "ERC1155Upgradeable._setApprovalForAll",
      "offset": [
        13783,
        13829
      ],
      "op": "SSTORE",
      "path": "32"
    },
    "16324": {
      "fn": "ERC1155Upgradeable._setApprovalForAll",
      "offset": [
        13845,
        13886
      ],
      "op": "SWAP2",
      "path": "32",
      "statement": 140
    },
    "16325": {
      "fn": "ERC1155Upgradeable._setApprovalForAll",
      "offset": [
        13845,
        13886
      ],
      "op": "MLOAD",
      "path": "32"
    },
    "16326": {
      "op": "SWAP2"
    },
    "16327": {
      "op": "DUP3"
    },
    "16328": {
      "op": "MSTORE"
    },
    "16329": {
      "fn": "ERC1155Upgradeable._setApprovalForAll",
      "offset": [
        13845,
        13886
      ],
      "op": "PUSH32",
      "path": "32",
      "value": "0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
    },
    "16362": {
      "fn": "ERC1155Upgradeable._setApprovalForAll",
      "offset": [
        13845,
        13886
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "16363": {
      "op": "ADD"
    },
    "16364": {
      "fn": "ERC1155Upgradeable._setApprovalForAll",
      "offset": [
        13845,
        13886
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x40"
    },
    "16366": {
      "fn": "ERC1155Upgradeable._setApprovalForAll",
      "offset": [
        13845,
        13886
      ],
      "op": "MLOAD",
      "path": "32"
    },
    "16367": {
      "fn": "ERC1155Upgradeable._setApprovalForAll",
      "offset": [
        13845,
        13886
      ],
      "op": "DUP1",
      "path": "32"
    },
    "16368": {
      "fn": "ERC1155Upgradeable._setApprovalForAll",
      "offset": [
        13845,
        13886
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "16369": {
      "fn": "ERC1155Upgradeable._setApprovalForAll",
      "offset": [
        13845,
        13886
      ],
      "op": "SUB",
      "path": "32"
    },
    "16370": {
      "fn": "ERC1155Upgradeable._setApprovalForAll",
      "offset": [
        13845,
        13886
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "16371": {
      "fn": "ERC1155Upgradeable._setApprovalForAll",
      "offset": [
        13845,
        13886
      ],
      "op": "LOG3",
      "path": "32"
    },
    "16372": {
      "fn": "ERC1155Upgradeable._setApprovalForAll",
      "offset": [
        13563,
        13894
      ],
      "op": "POP",
      "path": "32"
    },
    "16373": {
      "fn": "ERC1155Upgradeable._setApprovalForAll",
      "offset": [
        13563,
        13894
      ],
      "op": "POP",
      "path": "32"
    },
    "16374": {
      "fn": "ERC1155Upgradeable._setApprovalForAll",
      "offset": [
        13563,
        13894
      ],
      "op": "POP",
      "path": "32"
    },
    "16375": {
      "fn": "ERC1155Upgradeable._setApprovalForAll",
      "jump": "o",
      "offset": [
        13563,
        13894
      ],
      "op": "JUMP",
      "path": "32"
    },
    "16376": {
      "fn": "BaseLoot._getSpellDamage",
      "offset": [
        9210,
        9313
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "16377": {
      "fn": "BaseLoot._getSpellDamage",
      "offset": [
        9294,
        9305
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 141
    },
    "16378": {
      "fn": "BaseLoot._getSpellDamage",
      "offset": [
        9294,
        9305
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "16379": {
      "fn": "BaseLoot._getSpellDamage",
      "offset": [
        9277,
        9281
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "16381": {
      "fn": "BaseLoot._getSpellDamage",
      "offset": [
        9277,
        9281
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "16382": {
      "fn": "BaseLoot._getSpellDamage",
      "offset": [
        9294,
        9309
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x68C"
    },
    "16385": {
      "fn": "BaseLoot._getSpellDamage",
      "offset": [
        9294,
        9309
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "16386": {
      "fn": "BaseLoot._getSpellDamage",
      "offset": [
        9308,
        9309
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "16388": {
      "fn": "BaseLoot._getSpellDamage",
      "offset": [
        9294,
        9309
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5092"
    },
    "16391": {
      "fn": "BaseLoot._getSpellDamage",
      "jump": "i",
      "offset": [
        9294,
        9309
      ],
      "op": "JUMP",
      "path": "2"
    },
    "16392": {
      "fn": "ERC1155Upgradeable._safeTransferFrom",
      "offset": [
        5497,
        6471
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "16393": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16395": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16397": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "16399": {
      "op": "SHL"
    },
    "16400": {
      "op": "SUB"
    },
    "16401": {
      "fn": "ERC1155Upgradeable._safeTransferFrom",
      "offset": [
        5685,
        5701
      ],
      "op": "DUP5",
      "path": "32",
      "statement": 142
    },
    "16402": {
      "branch": 237,
      "fn": "ERC1155Upgradeable._safeTransferFrom",
      "offset": [
        5685,
        5701
      ],
      "op": "AND",
      "path": "32"
    },
    "16403": {
      "fn": "ERC1155Upgradeable._safeTransferFrom",
      "offset": [
        5677,
        5743
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x402E"
    },
    "16406": {
      "branch": 237,
      "fn": "ERC1155Upgradeable._safeTransferFrom",
      "offset": [
        5677,
        5743
      ],
      "op": "JUMPI",
      "path": "32"
    },
    "16407": {
      "fn": "ERC1155Upgradeable._safeTransferFrom",
      "offset": [
        5677,
        5743
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x40"
    },
    "16409": {
      "fn": "ERC1155Upgradeable._safeTransferFrom",
      "offset": [
        5677,
        5743
      ],
      "op": "MLOAD",
      "path": "32"
    },
    "16410": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "16414": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "16416": {
      "op": "SHL"
    },
    "16417": {
      "fn": "ERC1155Upgradeable._safeTransferFrom",
      "offset": [
        5677,
        5743
      ],
      "op": "DUP2",
      "path": "32"
    },
    "16418": {
      "fn": "ERC1155Upgradeable._safeTransferFrom",
      "offset": [
        5677,
        5743
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "16419": {
      "fn": "ERC1155Upgradeable._safeTransferFrom",
      "offset": [
        5677,
        5743
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x4"
    },
    "16421": {
      "fn": "ERC1155Upgradeable._safeTransferFrom",
      "offset": [
        5677,
        5743
      ],
      "op": "ADD",
      "path": "32"
    },
    "16422": {
      "fn": "ERC1155Upgradeable._safeTransferFrom",
      "offset": [
        5677,
        5743
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x60F"
    },
    "16425": {
      "fn": "ERC1155Upgradeable._safeTransferFrom",
      "offset": [
        5677,
        5743
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "16426": {
      "fn": "ERC1155Upgradeable._safeTransferFrom",
      "offset": [
        5677,
        5743
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x5003"
    },
    "16429": {
      "fn": "ERC1155Upgradeable._safeTransferFrom",
      "jump": "i",
      "offset": [
        5677,
        5743
      ],
      "op": "JUMP",
      "path": "32"
    },
    "16430": {
      "fn": "ERC1155Upgradeable._safeTransferFrom",
      "offset": [
        5677,
        5743
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "16431": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        952,
        962
      ],
      "op": "CALLER",
      "path": "42"
    },
    "16432": {
      "fn": "ERC1155Upgradeable._safeTransferFrom",
      "offset": [
        5756,
        5772
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x0"
    },
    "16434": {
      "fn": "ERC1155Upgradeable._safeTransferFrom",
      "offset": [
        5821,
        5842
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x403A"
    },
    "16437": {
      "fn": "ERC1155Upgradeable._safeTransferFrom",
      "offset": [
        5839,
        5841
      ],
      "op": "DUP6",
      "path": "32"
    },
    "16438": {
      "fn": "ERC1155Upgradeable._safeTransferFrom",
      "offset": [
        5821,
        5838
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x4119"
    },
    "16441": {
      "fn": "ERC1155Upgradeable._safeTransferFrom",
      "jump": "i",
      "offset": [
        5821,
        5842
      ],
      "op": "JUMP",
      "path": "32"
    },
    "16442": {
      "fn": "ERC1155Upgradeable._safeTransferFrom",
      "offset": [
        5821,
        5842
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "16443": {
      "fn": "ERC1155Upgradeable._safeTransferFrom",
      "offset": [
        5798,
        5842
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "16444": {
      "fn": "ERC1155Upgradeable._safeTransferFrom",
      "offset": [
        5798,
        5842
      ],
      "op": "POP",
      "path": "32"
    },
    "16445": {
      "fn": "ERC1155Upgradeable._safeTransferFrom",
      "offset": [
        5853,
        5877
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x0"
    },
    "16447": {
      "fn": "ERC1155Upgradeable._safeTransferFrom",
      "offset": [
        5880,
        5905
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x4047"
    },
    "16450": {
      "fn": "ERC1155Upgradeable._safeTransferFrom",
      "offset": [
        5898,
        5904
      ],
      "op": "DUP6",
      "path": "32"
    },
    "16451": {
      "fn": "ERC1155Upgradeable._safeTransferFrom",
      "offset": [
        5880,
        5897
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x4119"
    },
    "16454": {
      "fn": "ERC1155Upgradeable._safeTransferFrom",
      "jump": "i",
      "offset": [
        5880,
        5905
      ],
      "op": "JUMP",
      "path": "32"
    },
    "16455": {
      "fn": "ERC1155Upgradeable._safeTransferFrom",
      "offset": [
        5880,
        5905
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "16456": {
      "fn": "ERC1155Upgradeable._safeTransferFrom",
      "offset": [
        5853,
        5905
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "16457": {
      "fn": "ERC1155Upgradeable._safeTransferFrom",
      "offset": [
        5853,
        5905
      ],
      "op": "POP",
      "path": "32"
    },
    "16458": {
      "fn": "ERC1155Upgradeable._safeTransferFrom",
      "offset": [
        5991,
        6010
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x0"
    },
    "16460": {
      "fn": "ERC1155Upgradeable._safeTransferFrom",
      "offset": [
        6013,
        6026
      ],
      "op": "DUP7",
      "path": "32"
    },
    "16461": {
      "fn": "ERC1155Upgradeable._safeTransferFrom",
      "offset": [
        6013,
        6026
      ],
      "op": "DUP2",
      "path": "32"
    },
    "16462": {
      "fn": "ERC1155Upgradeable._safeTransferFrom",
      "offset": [
        6013,
        6026
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "16463": {
      "fn": "ERC1155Upgradeable._safeTransferFrom",
      "offset": [
        6013,
        6022
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x65"
    },
    "16465": {
      "fn": "ERC1155Upgradeable._safeTransferFrom",
      "offset": [
        6013,
        6026
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x20"
    },
    "16467": {
      "fn": "ERC1155Upgradeable._safeTransferFrom",
      "offset": [
        6013,
        6026
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "16468": {
      "fn": "ERC1155Upgradeable._safeTransferFrom",
      "offset": [
        6013,
        6026
      ],
      "op": "DUP2",
      "path": "32"
    },
    "16469": {
      "fn": "ERC1155Upgradeable._safeTransferFrom",
      "offset": [
        6013,
        6026
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "16470": {
      "fn": "ERC1155Upgradeable._safeTransferFrom",
      "offset": [
        6013,
        6026
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x40"
    },
    "16472": {
      "fn": "ERC1155Upgradeable._safeTransferFrom",
      "offset": [
        6013,
        6026
      ],
      "op": "DUP1",
      "path": "32"
    },
    "16473": {
      "fn": "ERC1155Upgradeable._safeTransferFrom",
      "offset": [
        6013,
        6026
      ],
      "op": "DUP4",
      "path": "32"
    },
    "16474": {
      "fn": "ERC1155Upgradeable._safeTransferFrom",
      "offset": [
        6013,
        6026
      ],
      "op": "KECCAK256",
      "path": "32"
    },
    "16475": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16477": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16479": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "16481": {
      "op": "SHL"
    },
    "16482": {
      "op": "SUB"
    },
    "16483": {
      "fn": "ERC1155Upgradeable._safeTransferFrom",
      "offset": [
        6013,
        6032
      ],
      "op": "DUP13",
      "path": "32"
    },
    "16484": {
      "fn": "ERC1155Upgradeable._safeTransferFrom",
      "offset": [
        6013,
        6032
      ],
      "op": "AND",
      "path": "32"
    },
    "16485": {
      "fn": "ERC1155Upgradeable._safeTransferFrom",
      "offset": [
        6013,
        6032
      ],
      "op": "DUP5",
      "path": "32"
    },
    "16486": {
      "fn": "ERC1155Upgradeable._safeTransferFrom",
      "offset": [
        6013,
        6032
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "16487": {
      "fn": "ERC1155Upgradeable._safeTransferFrom",
      "offset": [
        6013,
        6032
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "16488": {
      "fn": "ERC1155Upgradeable._safeTransferFrom",
      "offset": [
        6013,
        6032
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "16489": {
      "fn": "ERC1155Upgradeable._safeTransferFrom",
      "offset": [
        6013,
        6032
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "16490": {
      "fn": "ERC1155Upgradeable._safeTransferFrom",
      "offset": [
        6013,
        6032
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "16491": {
      "fn": "ERC1155Upgradeable._safeTransferFrom",
      "offset": [
        6013,
        6032
      ],
      "op": "KECCAK256",
      "path": "32"
    },
    "16492": {
      "fn": "ERC1155Upgradeable._safeTransferFrom",
      "offset": [
        6013,
        6032
      ],
      "op": "SLOAD",
      "path": "32"
    },
    "16493": {
      "fn": "ERC1155Upgradeable._safeTransferFrom",
      "offset": [
        6051,
        6072
      ],
      "op": "DUP6",
      "path": "32",
      "statement": 143
    },
    "16494": {
      "fn": "ERC1155Upgradeable._safeTransferFrom",
      "offset": [
        6051,
        6072
      ],
      "op": "DUP2",
      "path": "32"
    },
    "16495": {
      "fn": "ERC1155Upgradeable._safeTransferFrom",
      "offset": [
        6051,
        6072
      ],
      "op": "LT",
      "path": "32"
    },
    "16496": {
      "branch": 238,
      "fn": "ERC1155Upgradeable._safeTransferFrom",
      "offset": [
        6051,
        6072
      ],
      "op": "ISZERO",
      "path": "32"
    },
    "16497": {
      "fn": "ERC1155Upgradeable._safeTransferFrom",
      "offset": [
        6043,
        6119
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x408C"
    },
    "16500": {
      "branch": 238,
      "fn": "ERC1155Upgradeable._safeTransferFrom",
      "offset": [
        6043,
        6119
      ],
      "op": "JUMPI",
      "path": "32"
    },
    "16501": {
      "fn": "ERC1155Upgradeable._safeTransferFrom",
      "offset": [
        6043,
        6119
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x40"
    },
    "16503": {
      "fn": "ERC1155Upgradeable._safeTransferFrom",
      "offset": [
        6043,
        6119
      ],
      "op": "MLOAD",
      "path": "32"
    },
    "16504": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "16508": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "16510": {
      "op": "SHL"
    },
    "16511": {
      "fn": "ERC1155Upgradeable._safeTransferFrom",
      "offset": [
        6043,
        6119
      ],
      "op": "DUP2",
      "path": "32"
    },
    "16512": {
      "fn": "ERC1155Upgradeable._safeTransferFrom",
      "offset": [
        6043,
        6119
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "16513": {
      "fn": "ERC1155Upgradeable._safeTransferFrom",
      "offset": [
        6043,
        6119
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x4"
    },
    "16515": {
      "fn": "ERC1155Upgradeable._safeTransferFrom",
      "offset": [
        6043,
        6119
      ],
      "op": "ADD",
      "path": "32"
    },
    "16516": {
      "fn": "ERC1155Upgradeable._safeTransferFrom",
      "offset": [
        6043,
        6119
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x60F"
    },
    "16519": {
      "fn": "ERC1155Upgradeable._safeTransferFrom",
      "offset": [
        6043,
        6119
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "16520": {
      "fn": "ERC1155Upgradeable._safeTransferFrom",
      "offset": [
        6043,
        6119
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x5048"
    },
    "16523": {
      "fn": "ERC1155Upgradeable._safeTransferFrom",
      "jump": "i",
      "offset": [
        6043,
        6119
      ],
      "op": "JUMP",
      "path": "32"
    },
    "16524": {
      "fn": "ERC1155Upgradeable._safeTransferFrom",
      "offset": [
        6043,
        6119
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "16525": {
      "fn": "ERC1155Upgradeable._safeTransferFrom",
      "offset": [
        6155,
        6168
      ],
      "op": "PUSH1",
      "path": "32",
      "statement": 144,
      "value": "0x0"
    },
    "16527": {
      "fn": "ERC1155Upgradeable._safeTransferFrom",
      "offset": [
        6155,
        6168
      ],
      "op": "DUP8",
      "path": "32"
    },
    "16528": {
      "fn": "ERC1155Upgradeable._safeTransferFrom",
      "offset": [
        6155,
        6168
      ],
      "op": "DUP2",
      "path": "32"
    },
    "16529": {
      "fn": "ERC1155Upgradeable._safeTransferFrom",
      "offset": [
        6155,
        6168
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "16530": {
      "fn": "ERC1155Upgradeable._safeTransferFrom",
      "offset": [
        6155,
        6164
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x65"
    },
    "16532": {
      "fn": "ERC1155Upgradeable._safeTransferFrom",
      "offset": [
        6155,
        6168
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x20"
    },
    "16534": {
      "fn": "ERC1155Upgradeable._safeTransferFrom",
      "offset": [
        6155,
        6168
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "16535": {
      "fn": "ERC1155Upgradeable._safeTransferFrom",
      "offset": [
        6155,
        6168
      ],
      "op": "DUP2",
      "path": "32"
    },
    "16536": {
      "fn": "ERC1155Upgradeable._safeTransferFrom",
      "offset": [
        6155,
        6168
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "16537": {
      "fn": "ERC1155Upgradeable._safeTransferFrom",
      "offset": [
        6155,
        6168
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x40"
    },
    "16539": {
      "fn": "ERC1155Upgradeable._safeTransferFrom",
      "offset": [
        6155,
        6168
      ],
      "op": "DUP1",
      "path": "32"
    },
    "16540": {
      "fn": "ERC1155Upgradeable._safeTransferFrom",
      "offset": [
        6155,
        6168
      ],
      "op": "DUP4",
      "path": "32"
    },
    "16541": {
      "fn": "ERC1155Upgradeable._safeTransferFrom",
      "offset": [
        6155,
        6168
      ],
      "op": "KECCAK256",
      "path": "32"
    },
    "16542": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16544": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16546": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "16548": {
      "op": "SHL"
    },
    "16549": {
      "op": "SUB"
    },
    "16550": {
      "fn": "ERC1155Upgradeable._safeTransferFrom",
      "offset": [
        6155,
        6174
      ],
      "op": "DUP14",
      "path": "32"
    },
    "16551": {
      "fn": "ERC1155Upgradeable._safeTransferFrom",
      "offset": [
        6155,
        6174
      ],
      "op": "DUP2",
      "path": "32"
    },
    "16552": {
      "fn": "ERC1155Upgradeable._safeTransferFrom",
      "offset": [
        6155,
        6174
      ],
      "op": "AND",
      "path": "32"
    },
    "16553": {
      "fn": "ERC1155Upgradeable._safeTransferFrom",
      "offset": [
        6155,
        6174
      ],
      "op": "DUP6",
      "path": "32"
    },
    "16554": {
      "fn": "ERC1155Upgradeable._safeTransferFrom",
      "offset": [
        6155,
        6174
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "16555": {
      "fn": "ERC1155Upgradeable._safeTransferFrom",
      "offset": [
        6155,
        6174
      ],
      "op": "SWAP3",
      "path": "32"
    },
    "16556": {
      "fn": "ERC1155Upgradeable._safeTransferFrom",
      "offset": [
        6155,
        6174
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "16557": {
      "fn": "ERC1155Upgradeable._safeTransferFrom",
      "offset": [
        6155,
        6174
      ],
      "op": "DUP1",
      "path": "32"
    },
    "16558": {
      "fn": "ERC1155Upgradeable._safeTransferFrom",
      "offset": [
        6155,
        6174
      ],
      "op": "DUP4",
      "path": "32"
    },
    "16559": {
      "fn": "ERC1155Upgradeable._safeTransferFrom",
      "offset": [
        6155,
        6174
      ],
      "op": "KECCAK256",
      "path": "32"
    },
    "16560": {
      "fn": "ERC1155Upgradeable._safeTransferFrom",
      "offset": [
        6177,
        6197
      ],
      "op": "DUP10",
      "path": "32"
    },
    "16561": {
      "fn": "ERC1155Upgradeable._safeTransferFrom",
      "offset": [
        6177,
        6197
      ],
      "op": "DUP6",
      "path": "32"
    },
    "16562": {
      "fn": "ERC1155Upgradeable._safeTransferFrom",
      "offset": [
        6177,
        6197
      ],
      "op": "SUB",
      "path": "32"
    },
    "16563": {
      "fn": "ERC1155Upgradeable._safeTransferFrom",
      "offset": [
        6155,
        6197
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "16564": {
      "fn": "ERC1155Upgradeable._safeTransferFrom",
      "offset": [
        6155,
        6197
      ],
      "op": "SSTORE",
      "path": "32"
    },
    "16565": {
      "fn": "ERC1155Upgradeable._safeTransferFrom",
      "offset": [
        6219,
        6236
      ],
      "op": "SWAP1",
      "path": "32",
      "statement": 145
    },
    "16566": {
      "fn": "ERC1155Upgradeable._safeTransferFrom",
      "offset": [
        6219,
        6236
      ],
      "op": "DUP11",
      "path": "32"
    },
    "16567": {
      "fn": "ERC1155Upgradeable._safeTransferFrom",
      "offset": [
        6219,
        6236
      ],
      "op": "AND",
      "path": "32"
    },
    "16568": {
      "fn": "ERC1155Upgradeable._safeTransferFrom",
      "offset": [
        6219,
        6236
      ],
      "op": "DUP3",
      "path": "32"
    },
    "16569": {
      "fn": "ERC1155Upgradeable._safeTransferFrom",
      "offset": [
        6219,
        6236
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "16570": {
      "fn": "ERC1155Upgradeable._safeTransferFrom",
      "offset": [
        6219,
        6236
      ],
      "op": "DUP2",
      "path": "32"
    },
    "16571": {
      "fn": "ERC1155Upgradeable._safeTransferFrom",
      "offset": [
        6219,
        6236
      ],
      "op": "KECCAK256",
      "path": "32"
    },
    "16572": {
      "fn": "ERC1155Upgradeable._safeTransferFrom",
      "offset": [
        6219,
        6246
      ],
      "op": "DUP1",
      "path": "32"
    },
    "16573": {
      "fn": "ERC1155Upgradeable._safeTransferFrom",
      "offset": [
        6219,
        6246
      ],
      "op": "SLOAD",
      "path": "32"
    },
    "16574": {
      "fn": "ERC1155Upgradeable._safeTransferFrom",
      "offset": [
        6177,
        6197
      ],
      "op": "DUP9",
      "path": "32"
    },
    "16575": {
      "fn": "ERC1155Upgradeable._safeTransferFrom",
      "offset": [
        6177,
        6197
      ],
      "op": "SWAP3",
      "path": "32"
    },
    "16576": {
      "fn": "ERC1155Upgradeable._safeTransferFrom",
      "offset": [
        6155,
        6168
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "16577": {
      "fn": "ERC1155Upgradeable._safeTransferFrom",
      "offset": [
        6219,
        6246
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x40CB"
    },
    "16580": {
      "fn": "ERC1155Upgradeable._safeTransferFrom",
      "offset": [
        6219,
        6246
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "16581": {
      "fn": "ERC1155Upgradeable._safeTransferFrom",
      "offset": [
        6177,
        6197
      ],
      "op": "DUP5",
      "path": "32"
    },
    "16582": {
      "fn": "ERC1155Upgradeable._safeTransferFrom",
      "offset": [
        6177,
        6197
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "16583": {
      "fn": "ERC1155Upgradeable._safeTransferFrom",
      "offset": [
        6219,
        6246
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x5092"
    },
    "16586": {
      "fn": "ERC1155Upgradeable._safeTransferFrom",
      "jump": "i",
      "offset": [
        6219,
        6246
      ],
      "op": "JUMP",
      "path": "32"
    },
    "16587": {
      "fn": "ERC1155Upgradeable._safeTransferFrom",
      "offset": [
        6219,
        6246
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "16588": {
      "fn": "ERC1155Upgradeable._safeTransferFrom",
      "offset": [
        6219,
        6246
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "16589": {
      "fn": "ERC1155Upgradeable._safeTransferFrom",
      "offset": [
        6219,
        6246
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "16590": {
      "fn": "ERC1155Upgradeable._safeTransferFrom",
      "offset": [
        6219,
        6246
      ],
      "op": "SSTORE",
      "path": "32"
    },
    "16591": {
      "op": "POP"
    },
    "16592": {
      "op": "POP"
    },
    "16593": {
      "fn": "ERC1155Upgradeable._safeTransferFrom",
      "offset": [
        6264,
        6310
      ],
      "op": "PUSH1",
      "path": "32",
      "statement": 146,
      "value": "0x40"
    },
    "16595": {
      "fn": "ERC1155Upgradeable._safeTransferFrom",
      "offset": [
        6264,
        6310
      ],
      "op": "DUP1",
      "path": "32"
    },
    "16596": {
      "fn": "ERC1155Upgradeable._safeTransferFrom",
      "offset": [
        6264,
        6310
      ],
      "op": "MLOAD",
      "path": "32"
    },
    "16597": {
      "op": "DUP9"
    },
    "16598": {
      "op": "DUP2"
    },
    "16599": {
      "op": "MSTORE"
    },
    "16600": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16602": {
      "op": "DUP2"
    },
    "16603": {
      "op": "ADD"
    },
    "16604": {
      "op": "DUP9"
    },
    "16605": {
      "op": "SWAP1"
    },
    "16606": {
      "op": "MSTORE"
    },
    "16607": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16609": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16611": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "16613": {
      "op": "SHL"
    },
    "16614": {
      "op": "SUB"
    },
    "16615": {
      "fn": "ERC1155Upgradeable._safeTransferFrom",
      "offset": [
        6264,
        6310
      ],
      "op": "DUP1",
      "path": "32"
    },
    "16616": {
      "fn": "ERC1155Upgradeable._safeTransferFrom",
      "offset": [
        6264,
        6310
      ],
      "op": "DUP12",
      "path": "32"
    },
    "16617": {
      "fn": "ERC1155Upgradeable._safeTransferFrom",
      "offset": [
        6264,
        6310
      ],
      "op": "AND",
      "path": "32"
    },
    "16618": {
      "fn": "ERC1155Upgradeable._safeTransferFrom",
      "offset": [
        6264,
        6310
      ],
      "op": "SWAP3",
      "path": "32"
    },
    "16619": {
      "fn": "ERC1155Upgradeable._safeTransferFrom",
      "offset": [
        6264,
        6310
      ],
      "op": "DUP13",
      "path": "32"
    },
    "16620": {
      "fn": "ERC1155Upgradeable._safeTransferFrom",
      "offset": [
        6264,
        6310
      ],
      "op": "DUP3",
      "path": "32"
    },
    "16621": {
      "fn": "ERC1155Upgradeable._safeTransferFrom",
      "offset": [
        6264,
        6310
      ],
      "op": "AND",
      "path": "32"
    },
    "16622": {
      "fn": "ERC1155Upgradeable._safeTransferFrom",
      "offset": [
        6264,
        6310
      ],
      "op": "SWAP3",
      "path": "32"
    },
    "16623": {
      "fn": "ERC1155Upgradeable._safeTransferFrom",
      "offset": [
        6264,
        6310
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "16624": {
      "fn": "ERC1155Upgradeable._safeTransferFrom",
      "offset": [
        6264,
        6310
      ],
      "op": "DUP9",
      "path": "32"
    },
    "16625": {
      "fn": "ERC1155Upgradeable._safeTransferFrom",
      "offset": [
        6264,
        6310
      ],
      "op": "AND",
      "path": "32"
    },
    "16626": {
      "fn": "ERC1155Upgradeable._safeTransferFrom",
      "offset": [
        6264,
        6310
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "16627": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16629": {
      "op": "DUP1"
    },
    "16630": {
      "op": "MLOAD"
    },
    "16631": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16633": {
      "op": "PUSH2",
      "value": "0x53CD"
    },
    "16636": {
      "op": "DUP4"
    },
    "16637": {
      "op": "CODECOPY"
    },
    "16638": {
      "op": "DUP2"
    },
    "16639": {
      "op": "MLOAD"
    },
    "16640": {
      "op": "SWAP2"
    },
    "16641": {
      "op": "MSTORE"
    },
    "16642": {
      "fn": "ERC1155Upgradeable._safeTransferFrom",
      "offset": [
        6264,
        6310
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "16643": {
      "op": "ADD"
    },
    "16644": {
      "fn": "ERC1155Upgradeable._safeTransferFrom",
      "offset": [
        6264,
        6310
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x40"
    },
    "16646": {
      "fn": "ERC1155Upgradeable._safeTransferFrom",
      "offset": [
        6264,
        6310
      ],
      "op": "MLOAD",
      "path": "32"
    },
    "16647": {
      "fn": "ERC1155Upgradeable._safeTransferFrom",
      "offset": [
        6264,
        6310
      ],
      "op": "DUP1",
      "path": "32"
    },
    "16648": {
      "fn": "ERC1155Upgradeable._safeTransferFrom",
      "offset": [
        6264,
        6310
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "16649": {
      "fn": "ERC1155Upgradeable._safeTransferFrom",
      "offset": [
        6264,
        6310
      ],
      "op": "SUB",
      "path": "32"
    },
    "16650": {
      "fn": "ERC1155Upgradeable._safeTransferFrom",
      "offset": [
        6264,
        6310
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "16651": {
      "fn": "ERC1155Upgradeable._safeTransferFrom",
      "offset": [
        6264,
        6310
      ],
      "op": "LOG4",
      "path": "32"
    },
    "16652": {
      "fn": "ERC1155Upgradeable._safeTransferFrom",
      "offset": [
        6395,
        6463
      ],
      "op": "PUSH2",
      "path": "32",
      "statement": 147,
      "value": "0xC0F"
    },
    "16655": {
      "fn": "ERC1155Upgradeable._safeTransferFrom",
      "offset": [
        6426,
        6434
      ],
      "op": "DUP5",
      "path": "32"
    },
    "16656": {
      "fn": "ERC1155Upgradeable._safeTransferFrom",
      "offset": [
        6436,
        6440
      ],
      "op": "DUP11",
      "path": "32"
    },
    "16657": {
      "fn": "ERC1155Upgradeable._safeTransferFrom",
      "offset": [
        6442,
        6444
      ],
      "op": "DUP11",
      "path": "32"
    },
    "16658": {
      "fn": "ERC1155Upgradeable._safeTransferFrom",
      "offset": [
        6446,
        6448
      ],
      "op": "DUP11",
      "path": "32"
    },
    "16659": {
      "fn": "ERC1155Upgradeable._safeTransferFrom",
      "offset": [
        6450,
        6456
      ],
      "op": "DUP11",
      "path": "32"
    },
    "16660": {
      "fn": "ERC1155Upgradeable._safeTransferFrom",
      "offset": [
        6458,
        6462
      ],
      "op": "DUP11",
      "path": "32"
    },
    "16661": {
      "fn": "ERC1155Upgradeable._safeTransferFrom",
      "offset": [
        6395,
        6425
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x431D"
    },
    "16664": {
      "fn": "ERC1155Upgradeable._safeTransferFrom",
      "jump": "i",
      "offset": [
        6395,
        6463
      ],
      "op": "JUMP",
      "path": "32"
    },
    "16665": {
      "fn": "ERC1155Upgradeable._asSingletonArray",
      "offset": [
        17871,
        18069
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "16666": {
      "fn": "ERC1155Upgradeable._asSingletonArray",
      "offset": [
        17991,
        18007
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x40"
    },
    "16668": {
      "fn": "ERC1155Upgradeable._asSingletonArray",
      "offset": [
        17991,
        18007
      ],
      "op": "DUP1",
      "path": "32"
    },
    "16669": {
      "fn": "ERC1155Upgradeable._asSingletonArray",
      "offset": [
        17991,
        18007
      ],
      "op": "MLOAD",
      "path": "32"
    },
    "16670": {
      "fn": "ERC1155Upgradeable._asSingletonArray",
      "offset": [
        18005,
        18006
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x1"
    },
    "16672": {
      "fn": "ERC1155Upgradeable._asSingletonArray",
      "offset": [
        17991,
        18007
      ],
      "op": "DUP1",
      "path": "32"
    },
    "16673": {
      "fn": "ERC1155Upgradeable._asSingletonArray",
      "offset": [
        17991,
        18007
      ],
      "op": "DUP3",
      "path": "32"
    },
    "16674": {
      "fn": "ERC1155Upgradeable._asSingletonArray",
      "offset": [
        17991,
        18007
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "16675": {
      "fn": "ERC1155Upgradeable._asSingletonArray",
      "offset": [
        17991,
        18007
      ],
      "op": "DUP2",
      "path": "32"
    },
    "16676": {
      "fn": "ERC1155Upgradeable._asSingletonArray",
      "offset": [
        17991,
        18007
      ],
      "op": "DUP4",
      "path": "32"
    },
    "16677": {
      "fn": "ERC1155Upgradeable._asSingletonArray",
      "offset": [
        17991,
        18007
      ],
      "op": "ADD",
      "path": "32"
    },
    "16678": {
      "fn": "ERC1155Upgradeable._asSingletonArray",
      "offset": [
        17991,
        18007
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "16679": {
      "fn": "ERC1155Upgradeable._asSingletonArray",
      "offset": [
        17991,
        18007
      ],
      "op": "SWAP3",
      "path": "32"
    },
    "16680": {
      "fn": "ERC1155Upgradeable._asSingletonArray",
      "offset": [
        17991,
        18007
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "16681": {
      "fn": "ERC1155Upgradeable._asSingletonArray",
      "offset": [
        17937,
        17953
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x60"
    },
    "16683": {
      "fn": "ERC1155Upgradeable._asSingletonArray",
      "offset": [
        17937,
        17953
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "16684": {
      "fn": "ERC1155Upgradeable._asSingletonArray",
      "offset": [
        17966,
        17988
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x0"
    },
    "16686": {
      "fn": "ERC1155Upgradeable._asSingletonArray",
      "offset": [
        17966,
        17988
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "16687": {
      "fn": "ERC1155Upgradeable._asSingletonArray",
      "offset": [
        17991,
        18007
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "16688": {
      "fn": "ERC1155Upgradeable._asSingletonArray",
      "offset": [
        17991,
        18007
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x20"
    },
    "16690": {
      "fn": "ERC1155Upgradeable._asSingletonArray",
      "offset": [
        17991,
        18007
      ],
      "op": "DUP1",
      "path": "32"
    },
    "16691": {
      "fn": "ERC1155Upgradeable._asSingletonArray",
      "offset": [
        17991,
        18007
      ],
      "op": "DUP4",
      "path": "32"
    },
    "16692": {
      "fn": "ERC1155Upgradeable._asSingletonArray",
      "offset": [
        17991,
        18007
      ],
      "op": "ADD",
      "path": "32"
    },
    "16693": {
      "fn": "ERC1155Upgradeable._asSingletonArray",
      "offset": [
        17991,
        18007
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "16694": {
      "fn": "ERC1155Upgradeable._asSingletonArray",
      "offset": [
        17991,
        18007
      ],
      "op": "DUP1",
      "path": "32"
    },
    "16695": {
      "fn": "ERC1155Upgradeable._asSingletonArray",
      "offset": [
        17991,
        18007
      ],
      "op": "CALLDATASIZE",
      "path": "32"
    },
    "16696": {
      "fn": "ERC1155Upgradeable._asSingletonArray",
      "offset": [
        17991,
        18007
      ],
      "op": "DUP4",
      "path": "32"
    },
    "16697": {
      "fn": "ERC1155Upgradeable._asSingletonArray",
      "offset": [
        17991,
        18007
      ],
      "op": "CALLDATACOPY",
      "path": "32"
    },
    "16698": {
      "fn": "ERC1155Upgradeable._asSingletonArray",
      "offset": [
        17991,
        18007
      ],
      "op": "ADD",
      "path": "32"
    },
    "16699": {
      "fn": "ERC1155Upgradeable._asSingletonArray",
      "offset": [
        17991,
        18007
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "16700": {
      "op": "POP"
    },
    "16701": {
      "fn": "ERC1155Upgradeable._asSingletonArray",
      "offset": [
        17991,
        18007
      ],
      "op": "POP",
      "path": "32"
    },
    "16702": {
      "fn": "ERC1155Upgradeable._asSingletonArray",
      "offset": [
        17966,
        18007
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "16703": {
      "fn": "ERC1155Upgradeable._asSingletonArray",
      "offset": [
        17966,
        18007
      ],
      "op": "POP",
      "path": "32"
    },
    "16704": {
      "fn": "ERC1155Upgradeable._asSingletonArray",
      "offset": [
        18029,
        18036
      ],
      "op": "DUP3",
      "path": "32",
      "statement": 148
    },
    "16705": {
      "fn": "ERC1155Upgradeable._asSingletonArray",
      "offset": [
        18018,
        18023
      ],
      "op": "DUP2",
      "path": "32"
    },
    "16706": {
      "fn": "ERC1155Upgradeable._asSingletonArray",
      "offset": [
        18024,
        18025
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x0"
    },
    "16708": {
      "fn": "ERC1155Upgradeable._asSingletonArray",
      "offset": [
        18018,
        18026
      ],
      "op": "DUP2",
      "path": "32"
    },
    "16709": {
      "fn": "ERC1155Upgradeable._asSingletonArray",
      "offset": [
        18018,
        18026
      ],
      "op": "MLOAD",
      "path": "32"
    },
    "16710": {
      "fn": "ERC1155Upgradeable._asSingletonArray",
      "offset": [
        18018,
        18026
      ],
      "op": "DUP2",
      "path": "32"
    },
    "16711": {
      "fn": "ERC1155Upgradeable._asSingletonArray",
      "offset": [
        18018,
        18026
      ],
      "op": "LT",
      "path": "32"
    },
    "16712": {
      "fn": "ERC1155Upgradeable._asSingletonArray",
      "offset": [
        18018,
        18026
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x4153"
    },
    "16715": {
      "fn": "ERC1155Upgradeable._asSingletonArray",
      "offset": [
        18018,
        18026
      ],
      "op": "JUMPI",
      "path": "32"
    },
    "16716": {
      "fn": "ERC1155Upgradeable._asSingletonArray",
      "offset": [
        18018,
        18026
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x4153"
    },
    "16719": {
      "fn": "ERC1155Upgradeable._asSingletonArray",
      "offset": [
        18018,
        18026
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x4DCF"
    },
    "16722": {
      "fn": "ERC1155Upgradeable._asSingletonArray",
      "jump": "i",
      "offset": [
        18018,
        18026
      ],
      "op": "JUMP",
      "path": "32"
    },
    "16723": {
      "fn": "ERC1155Upgradeable._asSingletonArray",
      "offset": [
        18018,
        18026
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "16724": {
      "fn": "ERC1155Upgradeable._asSingletonArray",
      "offset": [
        18018,
        18026
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x20"
    },
    "16726": {
      "fn": "ERC1155Upgradeable._asSingletonArray",
      "offset": [
        18018,
        18026
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "16727": {
      "fn": "ERC1155Upgradeable._asSingletonArray",
      "offset": [
        18018,
        18026
      ],
      "op": "DUP2",
      "path": "32"
    },
    "16728": {
      "fn": "ERC1155Upgradeable._asSingletonArray",
      "offset": [
        18018,
        18026
      ],
      "op": "MUL",
      "path": "32"
    },
    "16729": {
      "fn": "ERC1155Upgradeable._asSingletonArray",
      "offset": [
        18018,
        18026
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "16730": {
      "fn": "ERC1155Upgradeable._asSingletonArray",
      "offset": [
        18018,
        18026
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "16731": {
      "fn": "ERC1155Upgradeable._asSingletonArray",
      "offset": [
        18018,
        18026
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "16732": {
      "fn": "ERC1155Upgradeable._asSingletonArray",
      "offset": [
        18018,
        18026
      ],
      "op": "ADD",
      "path": "32"
    },
    "16733": {
      "fn": "ERC1155Upgradeable._asSingletonArray",
      "offset": [
        18018,
        18026
      ],
      "op": "ADD",
      "path": "32"
    },
    "16734": {
      "fn": "ERC1155Upgradeable._asSingletonArray",
      "offset": [
        18018,
        18036
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "16735": {
      "fn": "ERC1155Upgradeable._asSingletonArray",
      "offset": [
        18056,
        18061
      ],
      "op": "SWAP3",
      "path": "32",
      "statement": 149
    },
    "16736": {
      "fn": "ERC1155Upgradeable._asSingletonArray",
      "offset": [
        17871,
        18069
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "16737": {
      "op": "POP"
    },
    "16738": {
      "op": "POP"
    },
    "16739": {
      "fn": "ERC1155Upgradeable._asSingletonArray",
      "jump": "o",
      "offset": [
        17871,
        18069
      ],
      "op": "JUMP",
      "path": "32"
    },
    "16740": {
      "fn": "ERC1155Upgradeable._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        17028,
        17863
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "16741": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16743": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16745": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "16747": {
      "op": "SHL"
    },
    "16748": {
      "op": "SUB"
    },
    "16749": {
      "fn": "ERC1155Upgradeable._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        17268,
        17281
      ],
      "op": "DUP5",
      "path": "32"
    },
    "16750": {
      "fn": "ERC1155Upgradeable._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        17268,
        17281
      ],
      "op": "AND",
      "path": "32"
    },
    "16751": {
      "op": "EXTCODESIZE"
    },
    "16752": {
      "op": "ISZERO"
    },
    "16753": {
      "fn": "ERC1155Upgradeable._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        17264,
        17856
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x3BFF"
    },
    "16756": {
      "fn": "ERC1155Upgradeable._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        17264,
        17856
      ],
      "op": "JUMPI",
      "path": "32"
    },
    "16757": {
      "fn": "ERC1155Upgradeable._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        17304,
        17394
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x40"
    },
    "16759": {
      "fn": "ERC1155Upgradeable._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        17304,
        17394
      ],
      "op": "MLOAD",
      "path": "32"
    },
    "16760": {
      "op": "PUSH4",
      "value": "0xBC197C81"
    },
    "16765": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "16767": {
      "op": "SHL"
    },
    "16768": {
      "fn": "ERC1155Upgradeable._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        17304,
        17394
      ],
      "op": "DUP2",
      "path": "32"
    },
    "16769": {
      "fn": "ERC1155Upgradeable._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        17304,
        17394
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "16770": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16772": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16774": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "16776": {
      "op": "SHL"
    },
    "16777": {
      "op": "SUB"
    },
    "16778": {
      "fn": "ERC1155Upgradeable._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        17304,
        17358
      ],
      "op": "DUP6",
      "path": "32"
    },
    "16779": {
      "fn": "ERC1155Upgradeable._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        17304,
        17358
      ],
      "op": "AND",
      "path": "32"
    },
    "16780": {
      "fn": "ERC1155Upgradeable._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        17304,
        17358
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "16781": {
      "fn": "ERC1155Upgradeable._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        17304,
        17358
      ],
      "op": "PUSH4",
      "path": "32",
      "value": "0xBC197C81"
    },
    "16786": {
      "fn": "ERC1155Upgradeable._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        17304,
        17358
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "16787": {
      "fn": "ERC1155Upgradeable._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        17304,
        17394
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x41A8"
    },
    "16790": {
      "fn": "ERC1155Upgradeable._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        17304,
        17394
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "16791": {
      "fn": "ERC1155Upgradeable._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        17359,
        17367
      ],
      "op": "DUP10",
      "path": "32"
    },
    "16792": {
      "fn": "ERC1155Upgradeable._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        17359,
        17367
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "16793": {
      "fn": "ERC1155Upgradeable._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        17369,
        17373
      ],
      "op": "DUP10",
      "path": "32"
    },
    "16794": {
      "fn": "ERC1155Upgradeable._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        17369,
        17373
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "16795": {
      "fn": "ERC1155Upgradeable._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        17375,
        17378
      ],
      "op": "DUP9",
      "path": "32"
    },
    "16796": {
      "fn": "ERC1155Upgradeable._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        17375,
        17378
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "16797": {
      "fn": "ERC1155Upgradeable._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        17380,
        17387
      ],
      "op": "DUP9",
      "path": "32"
    },
    "16798": {
      "fn": "ERC1155Upgradeable._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        17380,
        17387
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "16799": {
      "fn": "ERC1155Upgradeable._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        17389,
        17393
      ],
      "op": "DUP9",
      "path": "32"
    },
    "16800": {
      "fn": "ERC1155Upgradeable._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        17389,
        17393
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "16801": {
      "fn": "ERC1155Upgradeable._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        17304,
        17394
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x4"
    },
    "16803": {
      "fn": "ERC1155Upgradeable._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        17304,
        17394
      ],
      "op": "ADD",
      "path": "32"
    },
    "16804": {
      "fn": "ERC1155Upgradeable._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        17304,
        17394
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x511A"
    },
    "16807": {
      "fn": "ERC1155Upgradeable._doSafeBatchTransferAcceptanceCheck",
      "jump": "i",
      "offset": [
        17304,
        17394
      ],
      "op": "JUMP",
      "path": "32"
    },
    "16808": {
      "fn": "ERC1155Upgradeable._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        17304,
        17394
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "16809": {
      "fn": "ERC1155Upgradeable._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        17304,
        17394
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x20"
    },
    "16811": {
      "fn": "ERC1155Upgradeable._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        17304,
        17394
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x40"
    },
    "16813": {
      "fn": "ERC1155Upgradeable._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        17304,
        17394
      ],
      "op": "MLOAD",
      "path": "32"
    },
    "16814": {
      "fn": "ERC1155Upgradeable._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        17304,
        17394
      ],
      "op": "DUP1",
      "path": "32"
    },
    "16815": {
      "fn": "ERC1155Upgradeable._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        17304,
        17394
      ],
      "op": "DUP4",
      "path": "32"
    },
    "16816": {
      "fn": "ERC1155Upgradeable._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        17304,
        17394
      ],
      "op": "SUB",
      "path": "32"
    },
    "16817": {
      "fn": "ERC1155Upgradeable._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        17304,
        17394
      ],
      "op": "DUP2",
      "path": "32"
    },
    "16818": {
      "fn": "ERC1155Upgradeable._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        17304,
        17394
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x0"
    },
    "16820": {
      "fn": "ERC1155Upgradeable._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        17304,
        17394
      ],
      "op": "DUP8",
      "path": "32"
    },
    "16821": {
      "fn": "ERC1155Upgradeable._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        17304,
        17394
      ],
      "op": "GAS",
      "path": "32"
    },
    "16822": {
      "fn": "ERC1155Upgradeable._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        17304,
        17394
      ],
      "op": "CALL",
      "path": "32"
    },
    "16823": {
      "fn": "ERC1155Upgradeable._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        17304,
        17394
      ],
      "op": "SWAP3",
      "path": "32"
    },
    "16824": {
      "fn": "ERC1155Upgradeable._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        17304,
        17394
      ],
      "op": "POP",
      "path": "32"
    },
    "16825": {
      "fn": "ERC1155Upgradeable._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        17304,
        17394
      ],
      "op": "POP",
      "path": "32"
    },
    "16826": {
      "fn": "ERC1155Upgradeable._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        17304,
        17394
      ],
      "op": "POP",
      "path": "32"
    },
    "16827": {
      "fn": "ERC1155Upgradeable._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        17304,
        17394
      ],
      "op": "DUP1",
      "path": "32"
    },
    "16828": {
      "fn": "ERC1155Upgradeable._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        17304,
        17394
      ],
      "op": "ISZERO",
      "path": "32"
    },
    "16829": {
      "fn": "ERC1155Upgradeable._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        17304,
        17394
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x41E3"
    },
    "16832": {
      "fn": "ERC1155Upgradeable._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        17304,
        17394
      ],
      "op": "JUMPI",
      "path": "32"
    },
    "16833": {
      "op": "POP"
    },
    "16834": {
      "fn": "ERC1155Upgradeable._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        17304,
        17394
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x40"
    },
    "16836": {
      "fn": "ERC1155Upgradeable._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        17304,
        17394
      ],
      "op": "DUP1",
      "path": "32"
    },
    "16837": {
      "fn": "ERC1155Upgradeable._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        17304,
        17394
      ],
      "op": "MLOAD",
      "path": "32"
    },
    "16838": {
      "fn": "ERC1155Upgradeable._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        17304,
        17394
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x1F"
    },
    "16840": {
      "fn": "ERC1155Upgradeable._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        17304,
        17394
      ],
      "op": "RETURNDATASIZE",
      "path": "32"
    },
    "16841": {
      "fn": "ERC1155Upgradeable._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        17304,
        17394
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "16842": {
      "fn": "ERC1155Upgradeable._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        17304,
        17394
      ],
      "op": "DUP2",
      "path": "32"
    },
    "16843": {
      "fn": "ERC1155Upgradeable._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        17304,
        17394
      ],
      "op": "ADD",
      "path": "32"
    },
    "16844": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "16846": {
      "op": "NOT"
    },
    "16847": {
      "fn": "ERC1155Upgradeable._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        17304,
        17394
      ],
      "op": "AND",
      "path": "32"
    },
    "16848": {
      "fn": "ERC1155Upgradeable._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        17304,
        17394
      ],
      "op": "DUP3",
      "path": "32"
    },
    "16849": {
      "fn": "ERC1155Upgradeable._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        17304,
        17394
      ],
      "op": "ADD",
      "path": "32"
    },
    "16850": {
      "fn": "ERC1155Upgradeable._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        17304,
        17394
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "16851": {
      "fn": "ERC1155Upgradeable._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        17304,
        17394
      ],
      "op": "SWAP3",
      "path": "32"
    },
    "16852": {
      "fn": "ERC1155Upgradeable._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        17304,
        17394
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "16853": {
      "fn": "ERC1155Upgradeable._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        17304,
        17394
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x41E0"
    },
    "16856": {
      "fn": "ERC1155Upgradeable._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        17304,
        17394
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "16857": {
      "fn": "ERC1155Upgradeable._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        17304,
        17394
      ],
      "op": "DUP2",
      "path": "32"
    },
    "16858": {
      "fn": "ERC1155Upgradeable._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        17304,
        17394
      ],
      "op": "ADD",
      "path": "32"
    },
    "16859": {
      "fn": "ERC1155Upgradeable._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        17304,
        17394
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "16860": {
      "fn": "ERC1155Upgradeable._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        17304,
        17394
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x5178"
    },
    "16863": {
      "fn": "ERC1155Upgradeable._doSafeBatchTransferAcceptanceCheck",
      "jump": "i",
      "offset": [
        17304,
        17394
      ],
      "op": "JUMP",
      "path": "32"
    },
    "16864": {
      "fn": "ERC1155Upgradeable._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        17304,
        17394
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "16865": {
      "fn": "ERC1155Upgradeable._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        17304,
        17394
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x1"
    },
    "16867": {
      "fn": "ERC1155Upgradeable._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        17304,
        17394
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "16868": {
      "fn": "ERC1155Upgradeable._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        17300,
        17845
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x428F"
    },
    "16871": {
      "fn": "ERC1155Upgradeable._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        17300,
        17845
      ],
      "op": "JUMPI",
      "path": "32"
    },
    "16872": {
      "fn": "ERC1155Upgradeable._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        17300,
        17845
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x41EF"
    },
    "16875": {
      "fn": "ERC1155Upgradeable._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        17300,
        17845
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x5195"
    },
    "16878": {
      "fn": "ERC1155Upgradeable._doSafeBatchTransferAcceptanceCheck",
      "jump": "i",
      "offset": [
        17300,
        17845
      ],
      "op": "JUMP",
      "path": "32"
    },
    "16879": {
      "fn": "ERC1155Upgradeable._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        17300,
        17845
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "16880": {
      "fn": "ERC1155Upgradeable._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        17300,
        17845
      ],
      "op": "DUP1",
      "path": "32"
    },
    "16881": {
      "fn": "ERC1155Upgradeable._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        17300,
        17845
      ],
      "op": "PUSH4",
      "path": "32",
      "value": "0x8C379A0"
    },
    "16886": {
      "fn": "ERC1155Upgradeable._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        17300,
        17845
      ],
      "op": "SUB",
      "path": "32"
    },
    "16887": {
      "fn": "ERC1155Upgradeable._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        17300,
        17845
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x4228"
    },
    "16890": {
      "fn": "ERC1155Upgradeable._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        17300,
        17845
      ],
      "op": "JUMPI",
      "path": "32"
    },
    "16891": {
      "fn": "ERC1155Upgradeable._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        17300,
        17845
      ],
      "op": "POP",
      "path": "32"
    },
    "16892": {
      "fn": "ERC1155Upgradeable._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        17300,
        17845
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x4203"
    },
    "16895": {
      "fn": "ERC1155Upgradeable._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        17300,
        17845
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x51B1"
    },
    "16898": {
      "fn": "ERC1155Upgradeable._doSafeBatchTransferAcceptanceCheck",
      "jump": "i",
      "offset": [
        17300,
        17845
      ],
      "op": "JUMP",
      "path": "32"
    },
    "16899": {
      "fn": "ERC1155Upgradeable._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        17300,
        17845
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "16900": {
      "fn": "ERC1155Upgradeable._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        17300,
        17845
      ],
      "op": "DUP1",
      "path": "32"
    },
    "16901": {
      "fn": "ERC1155Upgradeable._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        17300,
        17845
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x420E"
    },
    "16904": {
      "fn": "ERC1155Upgradeable._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        17300,
        17845
      ],
      "op": "JUMPI",
      "path": "32"
    },
    "16905": {
      "fn": "ERC1155Upgradeable._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        17300,
        17845
      ],
      "op": "POP",
      "path": "32"
    },
    "16906": {
      "fn": "ERC1155Upgradeable._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        17300,
        17845
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x422A"
    },
    "16909": {
      "fn": "ERC1155Upgradeable._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        17300,
        17845
      ],
      "op": "JUMP",
      "path": "32"
    },
    "16910": {
      "fn": "ERC1155Upgradeable._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        17300,
        17845
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "16911": {
      "fn": "ERC1155Upgradeable._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        17718,
        17724
      ],
      "op": "DUP1",
      "path": "32",
      "statement": 150
    },
    "16912": {
      "fn": "ERC1155Upgradeable._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        17711,
        17725
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x40"
    },
    "16914": {
      "fn": "ERC1155Upgradeable._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        17711,
        17725
      ],
      "op": "MLOAD",
      "path": "32"
    },
    "16915": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "16919": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "16921": {
      "op": "SHL"
    },
    "16922": {
      "fn": "ERC1155Upgradeable._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        17711,
        17725
      ],
      "op": "DUP2",
      "path": "32"
    },
    "16923": {
      "fn": "ERC1155Upgradeable._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        17711,
        17725
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "16924": {
      "fn": "ERC1155Upgradeable._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        17711,
        17725
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x4"
    },
    "16926": {
      "fn": "ERC1155Upgradeable._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        17711,
        17725
      ],
      "op": "ADD",
      "path": "32"
    },
    "16927": {
      "fn": "ERC1155Upgradeable._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        17711,
        17725
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x60F"
    },
    "16930": {
      "fn": "ERC1155Upgradeable._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        17711,
        17725
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "16931": {
      "fn": "ERC1155Upgradeable._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        17711,
        17725
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "16932": {
      "fn": "ERC1155Upgradeable._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        17711,
        17725
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x454A"
    },
    "16935": {
      "fn": "ERC1155Upgradeable._doSafeBatchTransferAcceptanceCheck",
      "jump": "i",
      "offset": [
        17711,
        17725
      ],
      "op": "JUMP",
      "path": "32"
    },
    "16936": {
      "fn": "ERC1155Upgradeable._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        17300,
        17845
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "16937": {
      "fn": "ERC1155Upgradeable._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        17300,
        17845
      ],
      "op": "POP",
      "path": "32"
    },
    "16938": {
      "fn": "ERC1155Upgradeable._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        17300,
        17845
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "16939": {
      "fn": "ERC1155Upgradeable._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        17767,
        17829
      ],
      "op": "PUSH1",
      "path": "32",
      "statement": 151,
      "value": "0x40"
    },
    "16941": {
      "fn": "ERC1155Upgradeable._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        17767,
        17829
      ],
      "op": "MLOAD",
      "path": "32"
    },
    "16942": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "16946": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "16948": {
      "op": "SHL"
    },
    "16949": {
      "fn": "ERC1155Upgradeable._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        17767,
        17829
      ],
      "op": "DUP2",
      "path": "32"
    },
    "16950": {
      "fn": "ERC1155Upgradeable._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        17767,
        17829
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "16951": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16953": {
      "fn": "ERC1155Upgradeable._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        17767,
        17829
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x4"
    },
    "16955": {
      "fn": "ERC1155Upgradeable._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        17767,
        17829
      ],
      "op": "DUP3",
      "path": "32"
    },
    "16956": {
      "fn": "ERC1155Upgradeable._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        17767,
        17829
      ],
      "op": "ADD",
      "path": "32"
    },
    "16957": {
      "op": "MSTORE"
    },
    "16958": {
      "op": "PUSH1",
      "value": "0x34"
    },
    "16960": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "16962": {
      "op": "DUP3"
    },
    "16963": {
      "op": "ADD"
    },
    "16964": {
      "op": "MSTORE"
    },
    "16965": {
      "op": "PUSH32",
      "value": "0x455243313135353A207472616E7366657220746F206E6F6E2045524331313535"
    },
    "16998": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "17000": {
      "op": "DUP3"
    },
    "17001": {
      "op": "ADD"
    },
    "17002": {
      "op": "MSTORE"
    },
    "17003": {
      "op": "PUSH20",
      "value": "0x2932B1B2B4BB32B91034B6B83632B6B2B73A32B9"
    },
    "17024": {
      "op": "PUSH1",
      "value": "0x61"
    },
    "17026": {
      "op": "SHL"
    },
    "17027": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "17029": {
      "op": "DUP3"
    },
    "17030": {
      "op": "ADD"
    },
    "17031": {
      "op": "MSTORE"
    },
    "17032": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "17034": {
      "op": "ADD"
    },
    "17035": {
      "fn": "ERC1155Upgradeable._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        17767,
        17829
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x60F"
    },
    "17038": {
      "op": "JUMP"
    },
    "17039": {
      "fn": "ERC1155Upgradeable._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        17300,
        17845
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "17040": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17042": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17044": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "17046": {
      "op": "SHL"
    },
    "17047": {
      "op": "SUB"
    },
    "17048": {
      "op": "NOT"
    },
    "17049": {
      "fn": "ERC1155Upgradeable._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        17476,
        17547
      ],
      "op": "DUP2",
      "path": "32"
    },
    "17050": {
      "fn": "ERC1155Upgradeable._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        17476,
        17547
      ],
      "op": "AND",
      "path": "32"
    },
    "17051": {
      "op": "PUSH4",
      "value": "0xBC197C81"
    },
    "17056": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "17058": {
      "op": "SHL"
    },
    "17059": {
      "branch": 239,
      "fn": "ERC1155Upgradeable._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        17476,
        17547
      ],
      "op": "EQ",
      "path": "32"
    },
    "17060": {
      "fn": "ERC1155Upgradeable._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        17472,
        17642
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x2314"
    },
    "17063": {
      "branch": 239,
      "fn": "ERC1155Upgradeable._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        17472,
        17642
      ],
      "op": "JUMPI",
      "path": "32"
    },
    "17064": {
      "fn": "ERC1155Upgradeable._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        17572,
        17622
      ],
      "op": "PUSH1",
      "path": "32",
      "statement": 152,
      "value": "0x40"
    },
    "17066": {
      "fn": "ERC1155Upgradeable._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        17572,
        17622
      ],
      "op": "MLOAD",
      "path": "32"
    },
    "17067": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "17071": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "17073": {
      "op": "SHL"
    },
    "17074": {
      "fn": "ERC1155Upgradeable._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        17572,
        17622
      ],
      "op": "DUP2",
      "path": "32"
    },
    "17075": {
      "fn": "ERC1155Upgradeable._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        17572,
        17622
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "17076": {
      "fn": "ERC1155Upgradeable._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        17572,
        17622
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x4"
    },
    "17078": {
      "fn": "ERC1155Upgradeable._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        17572,
        17622
      ],
      "op": "ADD",
      "path": "32"
    },
    "17079": {
      "fn": "ERC1155Upgradeable._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        17572,
        17622
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x60F"
    },
    "17082": {
      "fn": "ERC1155Upgradeable._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        17572,
        17622
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "17083": {
      "fn": "ERC1155Upgradeable._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        17572,
        17622
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x523A"
    },
    "17086": {
      "fn": "ERC1155Upgradeable._doSafeBatchTransferAcceptanceCheck",
      "jump": "i",
      "offset": [
        17572,
        17622
      ],
      "op": "JUMP",
      "path": "32"
    },
    "17087": {
      "fn": "ERC1155Upgradeable.__ERC1155_init_unchained",
      "offset": [
        1447,
        1559
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "17088": {
      "offset": [
        3024,
        3037
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x0"
    },
    "17090": {
      "fn": "ERC1155Upgradeable.__ERC1155_init_unchained",
      "offset": [
        3024,
        3037
      ],
      "op": "SLOAD",
      "path": "30"
    },
    "17091": {
      "fn": "ERC1155Upgradeable.__ERC1155_init_unchained",
      "offset": [
        3024,
        3037
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x100"
    },
    "17094": {
      "fn": "ERC1155Upgradeable.__ERC1155_init_unchained",
      "offset": [
        3024,
        3037
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "17095": {
      "fn": "ERC1155Upgradeable.__ERC1155_init_unchained",
      "offset": [
        3024,
        3037
      ],
      "op": "DIV",
      "path": "30"
    },
    "17096": {
      "fn": "ERC1155Upgradeable.__ERC1155_init_unchained",
      "offset": [
        3024,
        3037
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0xFF"
    },
    "17098": {
      "fn": "ERC1155Upgradeable.__ERC1155_init_unchained",
      "offset": [
        3024,
        3037
      ],
      "op": "AND",
      "path": "30"
    },
    "17099": {
      "offset": [
        3016,
        3085
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x42E6"
    },
    "17102": {
      "offset": [
        3016,
        3085
      ],
      "op": "JUMPI",
      "path": "30"
    },
    "17103": {
      "fn": "ERC1155Upgradeable.__ERC1155_init_unchained",
      "offset": [
        3016,
        3085
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x40"
    },
    "17105": {
      "fn": "ERC1155Upgradeable.__ERC1155_init_unchained",
      "offset": [
        3016,
        3085
      ],
      "op": "MLOAD",
      "path": "30"
    },
    "17106": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "17110": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "17112": {
      "op": "SHL"
    },
    "17113": {
      "offset": [
        3016,
        3085
      ],
      "op": "DUP2",
      "path": "30"
    },
    "17114": {
      "fn": "ERC1155Upgradeable.__ERC1155_init_unchained",
      "offset": [
        3016,
        3085
      ],
      "op": "MSTORE",
      "path": "30"
    },
    "17115": {
      "fn": "ERC1155Upgradeable.__ERC1155_init_unchained",
      "offset": [
        3016,
        3085
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x4"
    },
    "17117": {
      "fn": "ERC1155Upgradeable.__ERC1155_init_unchained",
      "offset": [
        3016,
        3085
      ],
      "op": "ADD",
      "path": "30"
    },
    "17118": {
      "fn": "ERC1155Upgradeable.__ERC1155_init_unchained",
      "offset": [
        3016,
        3085
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x60F"
    },
    "17121": {
      "fn": "ERC1155Upgradeable.__ERC1155_init_unchained",
      "offset": [
        3016,
        3085
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "17122": {
      "fn": "ERC1155Upgradeable.__ERC1155_init_unchained",
      "offset": [
        3016,
        3085
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x50CF"
    },
    "17125": {
      "fn": "ERC1155Upgradeable.__ERC1155_init_unchained",
      "jump": "i",
      "offset": [
        3016,
        3085
      ],
      "op": "JUMP",
      "path": "30"
    },
    "17126": {
      "fn": "ERC1155Upgradeable.__ERC1155_init_unchained",
      "offset": [
        3016,
        3085
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "17127": {
      "fn": "ERC1155Upgradeable.__ERC1155_init_unchained",
      "offset": [
        1538,
        1551
      ],
      "op": "PUSH2",
      "path": "32",
      "statement": 153,
      "value": "0x3C37"
    },
    "17130": {
      "fn": "ERC1155Upgradeable.__ERC1155_init_unchained",
      "offset": [
        1546,
        1550
      ],
      "op": "DUP2",
      "path": "32"
    },
    "17131": {
      "fn": "ERC1155Upgradeable.__ERC1155_init_unchained",
      "offset": [
        1538,
        1545
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x43D8"
    },
    "17134": {
      "fn": "ERC1155Upgradeable.__ERC1155_init_unchained",
      "jump": "i",
      "offset": [
        1538,
        1551
      ],
      "op": "JUMP",
      "path": "32"
    },
    "17135": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init_unchained",
      "offset": [
        2013,
        2124
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "17136": {
      "offset": [
        3024,
        3037
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x0"
    },
    "17138": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init_unchained",
      "offset": [
        3024,
        3037
      ],
      "op": "SLOAD",
      "path": "30"
    },
    "17139": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init_unchained",
      "offset": [
        3024,
        3037
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x100"
    },
    "17142": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init_unchained",
      "offset": [
        3024,
        3037
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "17143": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init_unchained",
      "offset": [
        3024,
        3037
      ],
      "op": "DIV",
      "path": "30"
    },
    "17144": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init_unchained",
      "offset": [
        3024,
        3037
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0xFF"
    },
    "17146": {
      "branch": 243,
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init_unchained",
      "offset": [
        3024,
        3037
      ],
      "op": "AND",
      "path": "30"
    },
    "17147": {
      "offset": [
        3016,
        3085
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x4316"
    },
    "17150": {
      "branch": 243,
      "offset": [
        3016,
        3085
      ],
      "op": "JUMPI",
      "path": "30"
    },
    "17151": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init_unchained",
      "offset": [
        3016,
        3085
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x40"
    },
    "17153": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init_unchained",
      "offset": [
        3016,
        3085
      ],
      "op": "MLOAD",
      "path": "30"
    },
    "17154": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "17158": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "17160": {
      "op": "SHL"
    },
    "17161": {
      "offset": [
        3016,
        3085
      ],
      "op": "DUP2",
      "path": "30"
    },
    "17162": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init_unchained",
      "offset": [
        3016,
        3085
      ],
      "op": "MSTORE",
      "path": "30"
    },
    "17163": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init_unchained",
      "offset": [
        3016,
        3085
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x4"
    },
    "17165": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init_unchained",
      "offset": [
        3016,
        3085
      ],
      "op": "ADD",
      "path": "30"
    },
    "17166": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init_unchained",
      "offset": [
        3016,
        3085
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x60F"
    },
    "17169": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init_unchained",
      "offset": [
        3016,
        3085
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "17170": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init_unchained",
      "offset": [
        3016,
        3085
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x50CF"
    },
    "17173": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init_unchained",
      "jump": "i",
      "offset": [
        3016,
        3085
      ],
      "op": "JUMP",
      "path": "30"
    },
    "17174": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init_unchained",
      "offset": [
        3016,
        3085
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "17175": {
      "offset": [
        1806,
        1807
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x1"
    },
    "17177": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init_unchained",
      "offset": [
        2094,
        2101
      ],
      "op": "PUSH1",
      "path": "31",
      "statement": 154,
      "value": "0xC9"
    },
    "17179": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init_unchained",
      "offset": [
        2094,
        2116
      ],
      "op": "SSTORE",
      "path": "31"
    },
    "17180": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init_unchained",
      "jump": "o",
      "offset": [
        2013,
        2124
      ],
      "op": "JUMP",
      "path": "31"
    },
    "17181": {
      "fn": "ERC1155Upgradeable._doSafeTransferAcceptanceCheck",
      "offset": [
        16254,
        17020
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "17182": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17184": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17186": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "17188": {
      "op": "SHL"
    },
    "17189": {
      "op": "SUB"
    },
    "17190": {
      "fn": "ERC1155Upgradeable._doSafeTransferAcceptanceCheck",
      "offset": [
        16469,
        16482
      ],
      "op": "DUP5",
      "path": "32"
    },
    "17191": {
      "fn": "ERC1155Upgradeable._doSafeTransferAcceptanceCheck",
      "offset": [
        16469,
        16482
      ],
      "op": "AND",
      "path": "32"
    },
    "17192": {
      "op": "EXTCODESIZE"
    },
    "17193": {
      "op": "ISZERO"
    },
    "17194": {
      "fn": "ERC1155Upgradeable._doSafeTransferAcceptanceCheck",
      "offset": [
        16465,
        17013
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x3BFF"
    },
    "17197": {
      "fn": "ERC1155Upgradeable._doSafeTransferAcceptanceCheck",
      "offset": [
        16465,
        17013
      ],
      "op": "JUMPI",
      "path": "32"
    },
    "17198": {
      "fn": "ERC1155Upgradeable._doSafeTransferAcceptanceCheck",
      "offset": [
        16505,
        16588
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x40"
    },
    "17200": {
      "fn": "ERC1155Upgradeable._doSafeTransferAcceptanceCheck",
      "offset": [
        16505,
        16588
      ],
      "op": "MLOAD",
      "path": "32"
    },
    "17201": {
      "op": "PUSH4",
      "value": "0xF23A6E61"
    },
    "17206": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "17208": {
      "op": "SHL"
    },
    "17209": {
      "fn": "ERC1155Upgradeable._doSafeTransferAcceptanceCheck",
      "offset": [
        16505,
        16588
      ],
      "op": "DUP2",
      "path": "32"
    },
    "17210": {
      "fn": "ERC1155Upgradeable._doSafeTransferAcceptanceCheck",
      "offset": [
        16505,
        16588
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "17211": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17213": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17215": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "17217": {
      "op": "SHL"
    },
    "17218": {
      "op": "SUB"
    },
    "17219": {
      "fn": "ERC1155Upgradeable._doSafeTransferAcceptanceCheck",
      "offset": [
        16505,
        16554
      ],
      "op": "DUP6",
      "path": "32"
    },
    "17220": {
      "fn": "ERC1155Upgradeable._doSafeTransferAcceptanceCheck",
      "offset": [
        16505,
        16554
      ],
      "op": "AND",
      "path": "32"
    },
    "17221": {
      "fn": "ERC1155Upgradeable._doSafeTransferAcceptanceCheck",
      "offset": [
        16505,
        16554
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "17222": {
      "fn": "ERC1155Upgradeable._doSafeTransferAcceptanceCheck",
      "offset": [
        16505,
        16554
      ],
      "op": "PUSH4",
      "path": "32",
      "value": "0xF23A6E61"
    },
    "17227": {
      "fn": "ERC1155Upgradeable._doSafeTransferAcceptanceCheck",
      "offset": [
        16505,
        16554
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "17228": {
      "fn": "ERC1155Upgradeable._doSafeTransferAcceptanceCheck",
      "offset": [
        16505,
        16588
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x4361"
    },
    "17231": {
      "fn": "ERC1155Upgradeable._doSafeTransferAcceptanceCheck",
      "offset": [
        16505,
        16588
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "17232": {
      "fn": "ERC1155Upgradeable._doSafeTransferAcceptanceCheck",
      "offset": [
        16555,
        16563
      ],
      "op": "DUP10",
      "path": "32"
    },
    "17233": {
      "fn": "ERC1155Upgradeable._doSafeTransferAcceptanceCheck",
      "offset": [
        16555,
        16563
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "17234": {
      "fn": "ERC1155Upgradeable._doSafeTransferAcceptanceCheck",
      "offset": [
        16565,
        16569
      ],
      "op": "DUP10",
      "path": "32"
    },
    "17235": {
      "fn": "ERC1155Upgradeable._doSafeTransferAcceptanceCheck",
      "offset": [
        16565,
        16569
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "17236": {
      "fn": "ERC1155Upgradeable._doSafeTransferAcceptanceCheck",
      "offset": [
        16571,
        16573
      ],
      "op": "DUP9",
      "path": "32"
    },
    "17237": {
      "fn": "ERC1155Upgradeable._doSafeTransferAcceptanceCheck",
      "offset": [
        16571,
        16573
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "17238": {
      "fn": "ERC1155Upgradeable._doSafeTransferAcceptanceCheck",
      "offset": [
        16575,
        16581
      ],
      "op": "DUP9",
      "path": "32"
    },
    "17239": {
      "fn": "ERC1155Upgradeable._doSafeTransferAcceptanceCheck",
      "offset": [
        16575,
        16581
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "17240": {
      "fn": "ERC1155Upgradeable._doSafeTransferAcceptanceCheck",
      "offset": [
        16583,
        16587
      ],
      "op": "DUP9",
      "path": "32"
    },
    "17241": {
      "fn": "ERC1155Upgradeable._doSafeTransferAcceptanceCheck",
      "offset": [
        16583,
        16587
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "17242": {
      "fn": "ERC1155Upgradeable._doSafeTransferAcceptanceCheck",
      "offset": [
        16505,
        16588
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x4"
    },
    "17244": {
      "fn": "ERC1155Upgradeable._doSafeTransferAcceptanceCheck",
      "offset": [
        16505,
        16588
      ],
      "op": "ADD",
      "path": "32"
    },
    "17245": {
      "fn": "ERC1155Upgradeable._doSafeTransferAcceptanceCheck",
      "offset": [
        16505,
        16588
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x5282"
    },
    "17248": {
      "fn": "ERC1155Upgradeable._doSafeTransferAcceptanceCheck",
      "jump": "i",
      "offset": [
        16505,
        16588
      ],
      "op": "JUMP",
      "path": "32"
    },
    "17249": {
      "fn": "ERC1155Upgradeable._doSafeTransferAcceptanceCheck",
      "offset": [
        16505,
        16588
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "17250": {
      "fn": "ERC1155Upgradeable._doSafeTransferAcceptanceCheck",
      "offset": [
        16505,
        16588
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x20"
    },
    "17252": {
      "fn": "ERC1155Upgradeable._doSafeTransferAcceptanceCheck",
      "offset": [
        16505,
        16588
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x40"
    },
    "17254": {
      "fn": "ERC1155Upgradeable._doSafeTransferAcceptanceCheck",
      "offset": [
        16505,
        16588
      ],
      "op": "MLOAD",
      "path": "32"
    },
    "17255": {
      "fn": "ERC1155Upgradeable._doSafeTransferAcceptanceCheck",
      "offset": [
        16505,
        16588
      ],
      "op": "DUP1",
      "path": "32"
    },
    "17256": {
      "fn": "ERC1155Upgradeable._doSafeTransferAcceptanceCheck",
      "offset": [
        16505,
        16588
      ],
      "op": "DUP4",
      "path": "32"
    },
    "17257": {
      "fn": "ERC1155Upgradeable._doSafeTransferAcceptanceCheck",
      "offset": [
        16505,
        16588
      ],
      "op": "SUB",
      "path": "32"
    },
    "17258": {
      "fn": "ERC1155Upgradeable._doSafeTransferAcceptanceCheck",
      "offset": [
        16505,
        16588
      ],
      "op": "DUP2",
      "path": "32"
    },
    "17259": {
      "fn": "ERC1155Upgradeable._doSafeTransferAcceptanceCheck",
      "offset": [
        16505,
        16588
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x0"
    },
    "17261": {
      "fn": "ERC1155Upgradeable._doSafeTransferAcceptanceCheck",
      "offset": [
        16505,
        16588
      ],
      "op": "DUP8",
      "path": "32"
    },
    "17262": {
      "fn": "ERC1155Upgradeable._doSafeTransferAcceptanceCheck",
      "offset": [
        16505,
        16588
      ],
      "op": "GAS",
      "path": "32"
    },
    "17263": {
      "fn": "ERC1155Upgradeable._doSafeTransferAcceptanceCheck",
      "offset": [
        16505,
        16588
      ],
      "op": "CALL",
      "path": "32"
    },
    "17264": {
      "fn": "ERC1155Upgradeable._doSafeTransferAcceptanceCheck",
      "offset": [
        16505,
        16588
      ],
      "op": "SWAP3",
      "path": "32"
    },
    "17265": {
      "fn": "ERC1155Upgradeable._doSafeTransferAcceptanceCheck",
      "offset": [
        16505,
        16588
      ],
      "op": "POP",
      "path": "32"
    },
    "17266": {
      "fn": "ERC1155Upgradeable._doSafeTransferAcceptanceCheck",
      "offset": [
        16505,
        16588
      ],
      "op": "POP",
      "path": "32"
    },
    "17267": {
      "fn": "ERC1155Upgradeable._doSafeTransferAcceptanceCheck",
      "offset": [
        16505,
        16588
      ],
      "op": "POP",
      "path": "32"
    },
    "17268": {
      "fn": "ERC1155Upgradeable._doSafeTransferAcceptanceCheck",
      "offset": [
        16505,
        16588
      ],
      "op": "DUP1",
      "path": "32"
    },
    "17269": {
      "fn": "ERC1155Upgradeable._doSafeTransferAcceptanceCheck",
      "offset": [
        16505,
        16588
      ],
      "op": "ISZERO",
      "path": "32"
    },
    "17270": {
      "fn": "ERC1155Upgradeable._doSafeTransferAcceptanceCheck",
      "offset": [
        16505,
        16588
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x439C"
    },
    "17273": {
      "fn": "ERC1155Upgradeable._doSafeTransferAcceptanceCheck",
      "offset": [
        16505,
        16588
      ],
      "op": "JUMPI",
      "path": "32"
    },
    "17274": {
      "op": "POP"
    },
    "17275": {
      "fn": "ERC1155Upgradeable._doSafeTransferAcceptanceCheck",
      "offset": [
        16505,
        16588
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x40"
    },
    "17277": {
      "fn": "ERC1155Upgradeable._doSafeTransferAcceptanceCheck",
      "offset": [
        16505,
        16588
      ],
      "op": "DUP1",
      "path": "32"
    },
    "17278": {
      "fn": "ERC1155Upgradeable._doSafeTransferAcceptanceCheck",
      "offset": [
        16505,
        16588
      ],
      "op": "MLOAD",
      "path": "32"
    },
    "17279": {
      "fn": "ERC1155Upgradeable._doSafeTransferAcceptanceCheck",
      "offset": [
        16505,
        16588
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x1F"
    },
    "17281": {
      "fn": "ERC1155Upgradeable._doSafeTransferAcceptanceCheck",
      "offset": [
        16505,
        16588
      ],
      "op": "RETURNDATASIZE",
      "path": "32"
    },
    "17282": {
      "fn": "ERC1155Upgradeable._doSafeTransferAcceptanceCheck",
      "offset": [
        16505,
        16588
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "17283": {
      "fn": "ERC1155Upgradeable._doSafeTransferAcceptanceCheck",
      "offset": [
        16505,
        16588
      ],
      "op": "DUP2",
      "path": "32"
    },
    "17284": {
      "fn": "ERC1155Upgradeable._doSafeTransferAcceptanceCheck",
      "offset": [
        16505,
        16588
      ],
      "op": "ADD",
      "path": "32"
    },
    "17285": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "17287": {
      "op": "NOT"
    },
    "17288": {
      "fn": "ERC1155Upgradeable._doSafeTransferAcceptanceCheck",
      "offset": [
        16505,
        16588
      ],
      "op": "AND",
      "path": "32"
    },
    "17289": {
      "fn": "ERC1155Upgradeable._doSafeTransferAcceptanceCheck",
      "offset": [
        16505,
        16588
      ],
      "op": "DUP3",
      "path": "32"
    },
    "17290": {
      "fn": "ERC1155Upgradeable._doSafeTransferAcceptanceCheck",
      "offset": [
        16505,
        16588
      ],
      "op": "ADD",
      "path": "32"
    },
    "17291": {
      "fn": "ERC1155Upgradeable._doSafeTransferAcceptanceCheck",
      "offset": [
        16505,
        16588
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "17292": {
      "fn": "ERC1155Upgradeable._doSafeTransferAcceptanceCheck",
      "offset": [
        16505,
        16588
      ],
      "op": "SWAP3",
      "path": "32"
    },
    "17293": {
      "fn": "ERC1155Upgradeable._doSafeTransferAcceptanceCheck",
      "offset": [
        16505,
        16588
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "17294": {
      "fn": "ERC1155Upgradeable._doSafeTransferAcceptanceCheck",
      "offset": [
        16505,
        16588
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x4399"
    },
    "17297": {
      "fn": "ERC1155Upgradeable._doSafeTransferAcceptanceCheck",
      "offset": [
        16505,
        16588
      ],
      "op": "SWAP2",
      "path": "32"
    },
    "17298": {
      "fn": "ERC1155Upgradeable._doSafeTransferAcceptanceCheck",
      "offset": [
        16505,
        16588
      ],
      "op": "DUP2",
      "path": "32"
    },
    "17299": {
      "fn": "ERC1155Upgradeable._doSafeTransferAcceptanceCheck",
      "offset": [
        16505,
        16588
      ],
      "op": "ADD",
      "path": "32"
    },
    "17300": {
      "fn": "ERC1155Upgradeable._doSafeTransferAcceptanceCheck",
      "offset": [
        16505,
        16588
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "17301": {
      "fn": "ERC1155Upgradeable._doSafeTransferAcceptanceCheck",
      "offset": [
        16505,
        16588
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x5178"
    },
    "17304": {
      "fn": "ERC1155Upgradeable._doSafeTransferAcceptanceCheck",
      "jump": "i",
      "offset": [
        16505,
        16588
      ],
      "op": "JUMP",
      "path": "32"
    },
    "17305": {
      "fn": "ERC1155Upgradeable._doSafeTransferAcceptanceCheck",
      "offset": [
        16505,
        16588
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "17306": {
      "fn": "ERC1155Upgradeable._doSafeTransferAcceptanceCheck",
      "offset": [
        16505,
        16588
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x1"
    },
    "17308": {
      "fn": "ERC1155Upgradeable._doSafeTransferAcceptanceCheck",
      "offset": [
        16505,
        16588
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "17309": {
      "fn": "ERC1155Upgradeable._doSafeTransferAcceptanceCheck",
      "offset": [
        16501,
        17002
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x43A8"
    },
    "17312": {
      "fn": "ERC1155Upgradeable._doSafeTransferAcceptanceCheck",
      "offset": [
        16501,
        17002
      ],
      "op": "JUMPI",
      "path": "32"
    },
    "17313": {
      "fn": "ERC1155Upgradeable._doSafeTransferAcceptanceCheck",
      "offset": [
        16501,
        17002
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x41EF"
    },
    "17316": {
      "fn": "ERC1155Upgradeable._doSafeTransferAcceptanceCheck",
      "offset": [
        16501,
        17002
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x5195"
    },
    "17319": {
      "fn": "ERC1155Upgradeable._doSafeTransferAcceptanceCheck",
      "jump": "i",
      "offset": [
        16501,
        17002
      ],
      "op": "JUMP",
      "path": "32"
    },
    "17320": {
      "fn": "ERC1155Upgradeable._doSafeTransferAcceptanceCheck",
      "offset": [
        16501,
        17002
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "17321": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17323": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17325": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "17327": {
      "op": "SHL"
    },
    "17328": {
      "op": "SUB"
    },
    "17329": {
      "op": "NOT"
    },
    "17330": {
      "fn": "ERC1155Upgradeable._doSafeTransferAcceptanceCheck",
      "offset": [
        16638,
        16704
      ],
      "op": "DUP2",
      "path": "32"
    },
    "17331": {
      "fn": "ERC1155Upgradeable._doSafeTransferAcceptanceCheck",
      "offset": [
        16638,
        16704
      ],
      "op": "AND",
      "path": "32"
    },
    "17332": {
      "op": "PUSH4",
      "value": "0xF23A6E61"
    },
    "17337": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "17339": {
      "op": "SHL"
    },
    "17340": {
      "branch": 240,
      "fn": "ERC1155Upgradeable._doSafeTransferAcceptanceCheck",
      "offset": [
        16638,
        16704
      ],
      "op": "EQ",
      "path": "32"
    },
    "17341": {
      "fn": "ERC1155Upgradeable._doSafeTransferAcceptanceCheck",
      "offset": [
        16634,
        16799
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x2314"
    },
    "17344": {
      "branch": 240,
      "fn": "ERC1155Upgradeable._doSafeTransferAcceptanceCheck",
      "offset": [
        16634,
        16799
      ],
      "op": "JUMPI",
      "path": "32"
    },
    "17345": {
      "fn": "ERC1155Upgradeable._doSafeTransferAcceptanceCheck",
      "offset": [
        16729,
        16779
      ],
      "op": "PUSH1",
      "path": "32",
      "statement": 155,
      "value": "0x40"
    },
    "17347": {
      "fn": "ERC1155Upgradeable._doSafeTransferAcceptanceCheck",
      "offset": [
        16729,
        16779
      ],
      "op": "MLOAD",
      "path": "32"
    },
    "17348": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "17352": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "17354": {
      "op": "SHL"
    },
    "17355": {
      "fn": "ERC1155Upgradeable._doSafeTransferAcceptanceCheck",
      "offset": [
        16729,
        16779
      ],
      "op": "DUP2",
      "path": "32"
    },
    "17356": {
      "fn": "ERC1155Upgradeable._doSafeTransferAcceptanceCheck",
      "offset": [
        16729,
        16779
      ],
      "op": "MSTORE",
      "path": "32"
    },
    "17357": {
      "fn": "ERC1155Upgradeable._doSafeTransferAcceptanceCheck",
      "offset": [
        16729,
        16779
      ],
      "op": "PUSH1",
      "path": "32",
      "value": "0x4"
    },
    "17359": {
      "fn": "ERC1155Upgradeable._doSafeTransferAcceptanceCheck",
      "offset": [
        16729,
        16779
      ],
      "op": "ADD",
      "path": "32"
    },
    "17360": {
      "fn": "ERC1155Upgradeable._doSafeTransferAcceptanceCheck",
      "offset": [
        16729,
        16779
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x60F"
    },
    "17363": {
      "fn": "ERC1155Upgradeable._doSafeTransferAcceptanceCheck",
      "offset": [
        16729,
        16779
      ],
      "op": "SWAP1",
      "path": "32"
    },
    "17364": {
      "fn": "ERC1155Upgradeable._doSafeTransferAcceptanceCheck",
      "offset": [
        16729,
        16779
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x523A"
    },
    "17367": {
      "fn": "ERC1155Upgradeable._doSafeTransferAcceptanceCheck",
      "jump": "i",
      "offset": [
        16729,
        16779
      ],
      "op": "JUMP",
      "path": "32"
    },
    "17368": {
      "fn": "ERC1155Upgradeable._setURI",
      "offset": [
        8819,
        8907
      ],
      "op": "JUMPDEST",
      "path": "32"
    },
    "17369": {
      "fn": "ERC1155Upgradeable._setURI",
      "offset": [
        8886,
        8890
      ],
      "op": "PUSH1",
      "path": "32",
      "statement": 156,
      "value": "0x67"
    },
    "17371": {
      "fn": "ERC1155Upgradeable._setURI",
      "offset": [
        8886,
        8899
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x2B9C"
    },
    "17374": {
      "fn": "ERC1155Upgradeable._setURI",
      "offset": [
        8893,
        8899
      ],
      "op": "DUP3",
      "path": "32"
    },
    "17375": {
      "fn": "ERC1155Upgradeable._setURI",
      "offset": [
        8886,
        8890
      ],
      "op": "DUP3",
      "path": "32"
    },
    "17376": {
      "fn": "ERC1155Upgradeable._setURI",
      "offset": [
        8886,
        8899
      ],
      "op": "PUSH2",
      "path": "32",
      "value": "0x530D"
    },
    "17379": {
      "fn": "ERC1155Upgradeable._setURI",
      "jump": "i",
      "offset": [
        8886,
        8899
      ],
      "op": "JUMP",
      "path": "32"
    },
    "17380": {
      "op": "JUMPDEST"
    },
    "17381": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "17383": {
      "op": "MLOAD"
    },
    "17384": {
      "op": "DUP1"
    },
    "17385": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "17387": {
      "op": "ADD"
    },
    "17388": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "17390": {
      "op": "MSTORE"
    },
    "17391": {
      "op": "DUP1"
    },
    "17392": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17394": {
      "op": "DUP2"
    },
    "17395": {
      "op": "MSTORE"
    },
    "17396": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17398": {
      "op": "ADD"
    },
    "17399": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17401": {
      "op": "DUP2"
    },
    "17402": {
      "op": "MSTORE"
    },
    "17403": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17405": {
      "op": "ADD"
    },
    "17406": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17408": {
      "op": "DUP2"
    },
    "17409": {
      "op": "MSTORE"
    },
    "17410": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17412": {
      "op": "ADD"
    },
    "17413": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17415": {
      "op": "DUP2"
    },
    "17416": {
      "op": "MSTORE"
    },
    "17417": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17419": {
      "op": "ADD"
    },
    "17420": {
      "op": "PUSH2",
      "value": "0x4421"
    },
    "17423": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "17425": {
      "op": "MLOAD"
    },
    "17426": {
      "op": "DUP1"
    },
    "17427": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17429": {
      "op": "ADD"
    },
    "17430": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "17432": {
      "op": "MSTORE"
    },
    "17433": {
      "op": "DUP1"
    },
    "17434": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17436": {
      "op": "DUP2"
    },
    "17437": {
      "op": "MSTORE"
    },
    "17438": {
      "op": "POP"
    },
    "17439": {
      "op": "SWAP1"
    },
    "17440": {
      "op": "JUMP"
    },
    "17441": {
      "op": "JUMPDEST"
    },
    "17442": {
      "op": "DUP2"
    },
    "17443": {
      "op": "MSTORE"
    },
    "17444": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17446": {
      "op": "ADD"
    },
    "17447": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17449": {
      "op": "DUP2"
    },
    "17450": {
      "op": "MSTORE"
    },
    "17451": {
      "op": "POP"
    },
    "17452": {
      "op": "SWAP1"
    },
    "17453": {
      "jump": "o",
      "op": "JUMP"
    },
    "17454": {
      "op": "JUMPDEST"
    },
    "17455": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17457": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17459": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "17461": {
      "op": "SHL"
    },
    "17462": {
      "op": "SUB"
    },
    "17463": {
      "op": "DUP2"
    },
    "17464": {
      "op": "AND"
    },
    "17465": {
      "op": "DUP2"
    },
    "17466": {
      "op": "EQ"
    },
    "17467": {
      "op": "PUSH2",
      "value": "0x3C37"
    },
    "17470": {
      "op": "JUMPI"
    },
    "17471": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17473": {
      "op": "DUP1"
    },
    "17474": {
      "op": "REVERT"
    },
    "17475": {
      "op": "JUMPDEST"
    },
    "17476": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17478": {
      "op": "DUP1"
    },
    "17479": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "17481": {
      "op": "DUP4"
    },
    "17482": {
      "op": "DUP6"
    },
    "17483": {
      "op": "SUB"
    },
    "17484": {
      "op": "SLT"
    },
    "17485": {
      "op": "ISZERO"
    },
    "17486": {
      "op": "PUSH2",
      "value": "0x4456"
    },
    "17489": {
      "op": "JUMPI"
    },
    "17490": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17492": {
      "op": "DUP1"
    },
    "17493": {
      "op": "REVERT"
    },
    "17494": {
      "op": "JUMPDEST"
    },
    "17495": {
      "op": "DUP3"
    },
    "17496": {
      "op": "CALLDATALOAD"
    },
    "17497": {
      "op": "PUSH2",
      "value": "0x4461"
    },
    "17500": {
      "op": "DUP2"
    },
    "17501": {
      "op": "PUSH2",
      "value": "0x442E"
    },
    "17504": {
      "jump": "i",
      "op": "JUMP"
    },
    "17505": {
      "op": "JUMPDEST"
    },
    "17506": {
      "op": "SWAP5"
    },
    "17507": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17509": {
      "op": "SWAP4"
    },
    "17510": {
      "op": "SWAP1"
    },
    "17511": {
      "op": "SWAP4"
    },
    "17512": {
      "op": "ADD"
    },
    "17513": {
      "op": "CALLDATALOAD"
    },
    "17514": {
      "op": "SWAP4"
    },
    "17515": {
      "op": "POP"
    },
    "17516": {
      "op": "POP"
    },
    "17517": {
      "op": "POP"
    },
    "17518": {
      "jump": "o",
      "op": "JUMP"
    },
    "17519": {
      "op": "JUMPDEST"
    },
    "17520": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17522": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17524": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "17526": {
      "op": "SHL"
    },
    "17527": {
      "op": "SUB"
    },
    "17528": {
      "op": "NOT"
    },
    "17529": {
      "op": "DUP2"
    },
    "17530": {
      "op": "AND"
    },
    "17531": {
      "op": "DUP2"
    },
    "17532": {
      "op": "EQ"
    },
    "17533": {
      "op": "PUSH2",
      "value": "0x3C37"
    },
    "17536": {
      "op": "JUMPI"
    },
    "17537": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17539": {
      "op": "DUP1"
    },
    "17540": {
      "op": "REVERT"
    },
    "17541": {
      "op": "JUMPDEST"
    },
    "17542": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17544": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17546": {
      "op": "DUP3"
    },
    "17547": {
      "op": "DUP5"
    },
    "17548": {
      "op": "SUB"
    },
    "17549": {
      "op": "SLT"
    },
    "17550": {
      "op": "ISZERO"
    },
    "17551": {
      "op": "PUSH2",
      "value": "0x4497"
    },
    "17554": {
      "op": "JUMPI"
    },
    "17555": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17557": {
      "op": "DUP1"
    },
    "17558": {
      "op": "REVERT"
    },
    "17559": {
      "op": "JUMPDEST"
    },
    "17560": {
      "op": "DUP2"
    },
    "17561": {
      "op": "CALLDATALOAD"
    },
    "17562": {
      "op": "PUSH2",
      "value": "0x44A2"
    },
    "17565": {
      "op": "DUP2"
    },
    "17566": {
      "op": "PUSH2",
      "value": "0x446F"
    },
    "17569": {
      "jump": "i",
      "op": "JUMP"
    },
    "17570": {
      "op": "JUMPDEST"
    },
    "17571": {
      "op": "SWAP4"
    },
    "17572": {
      "op": "SWAP3"
    },
    "17573": {
      "op": "POP"
    },
    "17574": {
      "op": "POP"
    },
    "17575": {
      "op": "POP"
    },
    "17576": {
      "jump": "o",
      "op": "JUMP"
    },
    "17577": {
      "op": "JUMPDEST"
    },
    "17578": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17580": {
      "op": "DUP1"
    },
    "17581": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17583": {
      "op": "DUP1"
    },
    "17584": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "17586": {
      "op": "DUP6"
    },
    "17587": {
      "op": "DUP8"
    },
    "17588": {
      "op": "SUB"
    },
    "17589": {
      "op": "SLT"
    },
    "17590": {
      "op": "ISZERO"
    },
    "17591": {
      "op": "PUSH2",
      "value": "0x44BF"
    },
    "17594": {
      "op": "JUMPI"
    },
    "17595": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17597": {
      "op": "DUP1"
    },
    "17598": {
      "op": "REVERT"
    },
    "17599": {
      "op": "JUMPDEST"
    },
    "17600": {
      "op": "DUP5"
    },
    "17601": {
      "op": "CALLDATALOAD"
    },
    "17602": {
      "op": "PUSH2",
      "value": "0x44CA"
    },
    "17605": {
      "op": "DUP2"
    },
    "17606": {
      "op": "PUSH2",
      "value": "0x442E"
    },
    "17609": {
      "jump": "i",
      "op": "JUMP"
    },
    "17610": {
      "op": "JUMPDEST"
    },
    "17611": {
      "op": "SWAP7"
    },
    "17612": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17614": {
      "op": "DUP7"
    },
    "17615": {
      "op": "ADD"
    },
    "17616": {
      "op": "CALLDATALOAD"
    },
    "17617": {
      "op": "SWAP7"
    },
    "17618": {
      "op": "POP"
    },
    "17619": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "17621": {
      "op": "DUP7"
    },
    "17622": {
      "op": "ADD"
    },
    "17623": {
      "op": "CALLDATALOAD"
    },
    "17624": {
      "op": "SWAP6"
    },
    "17625": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "17627": {
      "op": "ADD"
    },
    "17628": {
      "op": "CALLDATALOAD"
    },
    "17629": {
      "op": "SWAP5"
    },
    "17630": {
      "op": "POP"
    },
    "17631": {
      "op": "SWAP3"
    },
    "17632": {
      "op": "POP"
    },
    "17633": {
      "op": "POP"
    },
    "17634": {
      "op": "POP"
    },
    "17635": {
      "jump": "o",
      "op": "JUMP"
    },
    "17636": {
      "op": "JUMPDEST"
    },
    "17637": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17639": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17641": {
      "op": "DUP3"
    },
    "17642": {
      "op": "DUP5"
    },
    "17643": {
      "op": "SUB"
    },
    "17644": {
      "op": "SLT"
    },
    "17645": {
      "op": "ISZERO"
    },
    "17646": {
      "op": "PUSH2",
      "value": "0x44F6"
    },
    "17649": {
      "op": "JUMPI"
    },
    "17650": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17652": {
      "op": "DUP1"
    },
    "17653": {
      "op": "REVERT"
    },
    "17654": {
      "op": "JUMPDEST"
    },
    "17655": {
      "op": "POP"
    },
    "17656": {
      "op": "CALLDATALOAD"
    },
    "17657": {
      "op": "SWAP2"
    },
    "17658": {
      "op": "SWAP1"
    },
    "17659": {
      "op": "POP"
    },
    "17660": {
      "jump": "o",
      "op": "JUMP"
    },
    "17661": {
      "op": "JUMPDEST"
    },
    "17662": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17664": {
      "op": "DUP2"
    },
    "17665": {
      "op": "MLOAD"
    },
    "17666": {
      "op": "DUP1"
    },
    "17667": {
      "op": "DUP5"
    },
    "17668": {
      "op": "MSTORE"
    },
    "17669": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17671": {
      "op": "JUMPDEST"
    },
    "17672": {
      "op": "DUP2"
    },
    "17673": {
      "op": "DUP2"
    },
    "17674": {
      "op": "LT"
    },
    "17675": {
      "op": "ISZERO"
    },
    "17676": {
      "op": "PUSH2",
      "value": "0x4523"
    },
    "17679": {
      "op": "JUMPI"
    },
    "17680": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17682": {
      "op": "DUP2"
    },
    "17683": {
      "op": "DUP6"
    },
    "17684": {
      "op": "ADD"
    },
    "17685": {
      "op": "DUP2"
    },
    "17686": {
      "op": "ADD"
    },
    "17687": {
      "op": "MLOAD"
    },
    "17688": {
      "op": "DUP7"
    },
    "17689": {
      "op": "DUP4"
    },
    "17690": {
      "op": "ADD"
    },
    "17691": {
      "op": "DUP3"
    },
    "17692": {
      "op": "ADD"
    },
    "17693": {
      "op": "MSTORE"
    },
    "17694": {
      "op": "ADD"
    },
    "17695": {
      "op": "PUSH2",
      "value": "0x4507"
    },
    "17698": {
      "op": "JUMP"
    },
    "17699": {
      "op": "JUMPDEST"
    },
    "17700": {
      "op": "DUP2"
    },
    "17701": {
      "op": "DUP2"
    },
    "17702": {
      "op": "GT"
    },
    "17703": {
      "op": "ISZERO"
    },
    "17704": {
      "op": "PUSH2",
      "value": "0x4535"
    },
    "17707": {
      "op": "JUMPI"
    },
    "17708": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17710": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17712": {
      "op": "DUP4"
    },
    "17713": {
      "op": "DUP8"
    },
    "17714": {
      "op": "ADD"
    },
    "17715": {
      "op": "ADD"
    },
    "17716": {
      "op": "MSTORE"
    },
    "17717": {
      "op": "JUMPDEST"
    },
    "17718": {
      "op": "POP"
    },
    "17719": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "17721": {
      "op": "ADD"
    },
    "17722": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "17724": {
      "op": "NOT"
    },
    "17725": {
      "op": "AND"
    },
    "17726": {
      "op": "SWAP3"
    },
    "17727": {
      "op": "SWAP1"
    },
    "17728": {
      "op": "SWAP3"
    },
    "17729": {
      "op": "ADD"
    },
    "17730": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17732": {
      "op": "ADD"
    },
    "17733": {
      "op": "SWAP3"
    },
    "17734": {
      "op": "SWAP2"
    },
    "17735": {
      "op": "POP"
    },
    "17736": {
      "op": "POP"
    },
    "17737": {
      "jump": "o",
      "op": "JUMP"
    },
    "17738": {
      "op": "JUMPDEST"
    },
    "17739": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17741": {
      "op": "DUP2"
    },
    "17742": {
      "op": "MSTORE"
    },
    "17743": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17745": {
      "op": "PUSH2",
      "value": "0x44A2"
    },
    "17748": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17750": {
      "op": "DUP4"
    },
    "17751": {
      "op": "ADD"
    },
    "17752": {
      "op": "DUP5"
    },
    "17753": {
      "op": "PUSH2",
      "value": "0x44FD"
    },
    "17756": {
      "jump": "i",
      "op": "JUMP"
    },
    "17757": {
      "op": "JUMPDEST"
    },
    "17758": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17760": {
      "op": "DUP1"
    },
    "17761": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17763": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "17765": {
      "op": "DUP5"
    },
    "17766": {
      "op": "DUP7"
    },
    "17767": {
      "op": "SUB"
    },
    "17768": {
      "op": "SLT"
    },
    "17769": {
      "op": "ISZERO"
    },
    "17770": {
      "op": "PUSH2",
      "value": "0x4572"
    },
    "17773": {
      "op": "JUMPI"
    },
    "17774": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17776": {
      "op": "DUP1"
    },
    "17777": {
      "op": "REVERT"
    },
    "17778": {
      "op": "JUMPDEST"
    },
    "17779": {
      "op": "DUP4"
    },
    "17780": {
      "op": "CALLDATALOAD"
    },
    "17781": {
      "op": "PUSH2",
      "value": "0x457D"
    },
    "17784": {
      "op": "DUP2"
    },
    "17785": {
      "op": "PUSH2",
      "value": "0x442E"
    },
    "17788": {
      "jump": "i",
      "op": "JUMP"
    },
    "17789": {
      "op": "JUMPDEST"
    },
    "17790": {
      "op": "SWAP6"
    },
    "17791": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17793": {
      "op": "DUP6"
    },
    "17794": {
      "op": "ADD"
    },
    "17795": {
      "op": "CALLDATALOAD"
    },
    "17796": {
      "op": "SWAP6"
    },
    "17797": {
      "op": "POP"
    },
    "17798": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "17800": {
      "op": "SWAP1"
    },
    "17801": {
      "op": "SWAP5"
    },
    "17802": {
      "op": "ADD"
    },
    "17803": {
      "op": "CALLDATALOAD"
    },
    "17804": {
      "op": "SWAP4"
    },
    "17805": {
      "op": "SWAP3"
    },
    "17806": {
      "op": "POP"
    },
    "17807": {
      "op": "POP"
    },
    "17808": {
      "op": "POP"
    },
    "17809": {
      "jump": "o",
      "op": "JUMP"
    },
    "17810": {
      "op": "JUMPDEST"
    },
    "17811": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "17816": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "17818": {
      "op": "SHL"
    },
    "17819": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17821": {
      "op": "MSTORE"
    },
    "17822": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "17824": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "17826": {
      "op": "MSTORE"
    },
    "17827": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "17829": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17831": {
      "op": "REVERT"
    },
    "17832": {
      "op": "JUMPDEST"
    },
    "17833": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "17835": {
      "op": "DUP2"
    },
    "17836": {
      "op": "ADD"
    },
    "17837": {
      "op": "DUP2"
    },
    "17838": {
      "op": "DUP2"
    },
    "17839": {
      "op": "LT"
    },
    "17840": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17842": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17844": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "17846": {
      "op": "SHL"
    },
    "17847": {
      "op": "SUB"
    },
    "17848": {
      "op": "DUP3"
    },
    "17849": {
      "op": "GT"
    },
    "17850": {
      "op": "OR"
    },
    "17851": {
      "op": "ISZERO"
    },
    "17852": {
      "op": "PUSH2",
      "value": "0x45C7"
    },
    "17855": {
      "op": "JUMPI"
    },
    "17856": {
      "op": "PUSH2",
      "value": "0x45C7"
    },
    "17859": {
      "op": "PUSH2",
      "value": "0x4592"
    },
    "17862": {
      "jump": "i",
      "op": "JUMP"
    },
    "17863": {
      "op": "JUMPDEST"
    },
    "17864": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "17866": {
      "op": "MSTORE"
    },
    "17867": {
      "op": "POP"
    },
    "17868": {
      "jump": "o",
      "op": "JUMP"
    },
    "17869": {
      "op": "JUMPDEST"
    },
    "17870": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "17872": {
      "op": "DUP3"
    },
    "17873": {
      "op": "ADD"
    },
    "17874": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "17876": {
      "op": "NOT"
    },
    "17877": {
      "op": "AND"
    },
    "17878": {
      "op": "DUP2"
    },
    "17879": {
      "op": "ADD"
    },
    "17880": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17882": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17884": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "17886": {
      "op": "SHL"
    },
    "17887": {
      "op": "SUB"
    },
    "17888": {
      "op": "DUP2"
    },
    "17889": {
      "op": "GT"
    },
    "17890": {
      "op": "DUP3"
    },
    "17891": {
      "op": "DUP3"
    },
    "17892": {
      "op": "LT"
    },
    "17893": {
      "op": "OR"
    },
    "17894": {
      "op": "ISZERO"
    },
    "17895": {
      "op": "PUSH2",
      "value": "0x45F2"
    },
    "17898": {
      "op": "JUMPI"
    },
    "17899": {
      "op": "PUSH2",
      "value": "0x45F2"
    },
    "17902": {
      "op": "PUSH2",
      "value": "0x4592"
    },
    "17905": {
      "jump": "i",
      "op": "JUMP"
    },
    "17906": {
      "op": "JUMPDEST"
    },
    "17907": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "17909": {
      "op": "MSTORE"
    },
    "17910": {
      "op": "POP"
    },
    "17911": {
      "op": "POP"
    },
    "17912": {
      "jump": "o",
      "op": "JUMP"
    },
    "17913": {
      "op": "JUMPDEST"
    },
    "17914": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17916": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17918": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17920": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "17922": {
      "op": "SHL"
    },
    "17923": {
      "op": "SUB"
    },
    "17924": {
      "op": "DUP3"
    },
    "17925": {
      "op": "GT"
    },
    "17926": {
      "op": "ISZERO"
    },
    "17927": {
      "op": "PUSH2",
      "value": "0x4612"
    },
    "17930": {
      "op": "JUMPI"
    },
    "17931": {
      "op": "PUSH2",
      "value": "0x4612"
    },
    "17934": {
      "op": "PUSH2",
      "value": "0x4592"
    },
    "17937": {
      "jump": "i",
      "op": "JUMP"
    },
    "17938": {
      "op": "JUMPDEST"
    },
    "17939": {
      "op": "POP"
    },
    "17940": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "17942": {
      "op": "SHL"
    },
    "17943": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17945": {
      "op": "ADD"
    },
    "17946": {
      "op": "SWAP1"
    },
    "17947": {
      "jump": "o",
      "op": "JUMP"
    },
    "17948": {
      "op": "JUMPDEST"
    },
    "17949": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17951": {
      "op": "DUP3"
    },
    "17952": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "17954": {
      "op": "DUP4"
    },
    "17955": {
      "op": "ADD"
    },
    "17956": {
      "op": "SLT"
    },
    "17957": {
      "op": "PUSH2",
      "value": "0x462D"
    },
    "17960": {
      "op": "JUMPI"
    },
    "17961": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17963": {
      "op": "DUP1"
    },
    "17964": {
      "op": "REVERT"
    },
    "17965": {
      "op": "JUMPDEST"
    },
    "17966": {
      "op": "DUP2"
    },
    "17967": {
      "op": "CALLDATALOAD"
    },
    "17968": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17970": {
      "op": "PUSH2",
      "value": "0x463A"
    },
    "17973": {
      "op": "DUP3"
    },
    "17974": {
      "op": "PUSH2",
      "value": "0x45F9"
    },
    "17977": {
      "jump": "i",
      "op": "JUMP"
    },
    "17978": {
      "op": "JUMPDEST"
    },
    "17979": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "17981": {
      "op": "MLOAD"
    },
    "17982": {
      "op": "PUSH2",
      "value": "0x4647"
    },
    "17985": {
      "op": "DUP3"
    },
    "17986": {
      "op": "DUP3"
    },
    "17987": {
      "op": "PUSH2",
      "value": "0x45CD"
    },
    "17990": {
      "jump": "i",
      "op": "JUMP"
    },
    "17991": {
      "op": "JUMPDEST"
    },
    "17992": {
      "op": "DUP4"
    },
    "17993": {
      "op": "DUP2"
    },
    "17994": {
      "op": "MSTORE"
    },
    "17995": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "17997": {
      "op": "SWAP4"
    },
    "17998": {
      "op": "SWAP1"
    },
    "17999": {
      "op": "SWAP4"
    },
    "18000": {
      "op": "SHL"
    },
    "18001": {
      "op": "DUP6"
    },
    "18002": {
      "op": "ADD"
    },
    "18003": {
      "op": "DUP3"
    },
    "18004": {
      "op": "ADD"
    },
    "18005": {
      "op": "SWAP3"
    },
    "18006": {
      "op": "DUP3"
    },
    "18007": {
      "op": "DUP2"
    },
    "18008": {
      "op": "ADD"
    },
    "18009": {
      "op": "SWAP2"
    },
    "18010": {
      "op": "POP"
    },
    "18011": {
      "op": "DUP7"
    },
    "18012": {
      "op": "DUP5"
    },
    "18013": {
      "op": "GT"
    },
    "18014": {
      "op": "ISZERO"
    },
    "18015": {
      "op": "PUSH2",
      "value": "0x4667"
    },
    "18018": {
      "op": "JUMPI"
    },
    "18019": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18021": {
      "op": "DUP1"
    },
    "18022": {
      "op": "REVERT"
    },
    "18023": {
      "op": "JUMPDEST"
    },
    "18024": {
      "op": "DUP3"
    },
    "18025": {
      "op": "DUP7"
    },
    "18026": {
      "op": "ADD"
    },
    "18027": {
      "op": "JUMPDEST"
    },
    "18028": {
      "op": "DUP5"
    },
    "18029": {
      "op": "DUP2"
    },
    "18030": {
      "op": "LT"
    },
    "18031": {
      "op": "ISZERO"
    },
    "18032": {
      "op": "PUSH2",
      "value": "0x4682"
    },
    "18035": {
      "op": "JUMPI"
    },
    "18036": {
      "op": "DUP1"
    },
    "18037": {
      "op": "CALLDATALOAD"
    },
    "18038": {
      "op": "DUP4"
    },
    "18039": {
      "op": "MSTORE"
    },
    "18040": {
      "op": "SWAP2"
    },
    "18041": {
      "op": "DUP4"
    },
    "18042": {
      "op": "ADD"
    },
    "18043": {
      "op": "SWAP2"
    },
    "18044": {
      "op": "DUP4"
    },
    "18045": {
      "op": "ADD"
    },
    "18046": {
      "op": "PUSH2",
      "value": "0x466B"
    },
    "18049": {
      "op": "JUMP"
    },
    "18050": {
      "op": "JUMPDEST"
    },
    "18051": {
      "op": "POP"
    },
    "18052": {
      "op": "SWAP7"
    },
    "18053": {
      "op": "SWAP6"
    },
    "18054": {
      "op": "POP"
    },
    "18055": {
      "op": "POP"
    },
    "18056": {
      "op": "POP"
    },
    "18057": {
      "op": "POP"
    },
    "18058": {
      "op": "POP"
    },
    "18059": {
      "op": "POP"
    },
    "18060": {
      "jump": "o",
      "op": "JUMP"
    },
    "18061": {
      "op": "JUMPDEST"
    },
    "18062": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18064": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18066": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18068": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "18070": {
      "op": "SHL"
    },
    "18071": {
      "op": "SUB"
    },
    "18072": {
      "op": "DUP4"
    },
    "18073": {
      "op": "GT"
    },
    "18074": {
      "op": "ISZERO"
    },
    "18075": {
      "op": "PUSH2",
      "value": "0x46A6"
    },
    "18078": {
      "op": "JUMPI"
    },
    "18079": {
      "op": "PUSH2",
      "value": "0x46A6"
    },
    "18082": {
      "op": "PUSH2",
      "value": "0x4592"
    },
    "18085": {
      "jump": "i",
      "op": "JUMP"
    },
    "18086": {
      "op": "JUMPDEST"
    },
    "18087": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "18089": {
      "op": "MLOAD"
    },
    "18090": {
      "op": "PUSH2",
      "value": "0x46BD"
    },
    "18093": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "18095": {
      "op": "DUP6"
    },
    "18096": {
      "op": "ADD"
    },
    "18097": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "18099": {
      "op": "NOT"
    },
    "18100": {
      "op": "AND"
    },
    "18101": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "18103": {
      "op": "ADD"
    },
    "18104": {
      "op": "DUP3"
    },
    "18105": {
      "op": "PUSH2",
      "value": "0x45CD"
    },
    "18108": {
      "jump": "i",
      "op": "JUMP"
    },
    "18109": {
      "op": "JUMPDEST"
    },
    "18110": {
      "op": "DUP1"
    },
    "18111": {
      "op": "SWAP2"
    },
    "18112": {
      "op": "POP"
    },
    "18113": {
      "op": "DUP4"
    },
    "18114": {
      "op": "DUP2"
    },
    "18115": {
      "op": "MSTORE"
    },
    "18116": {
      "op": "DUP5"
    },
    "18117": {
      "op": "DUP5"
    },
    "18118": {
      "op": "DUP5"
    },
    "18119": {
      "op": "ADD"
    },
    "18120": {
      "op": "GT"
    },
    "18121": {
      "op": "ISZERO"
    },
    "18122": {
      "op": "PUSH2",
      "value": "0x46D2"
    },
    "18125": {
      "op": "JUMPI"
    },
    "18126": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18128": {
      "op": "DUP1"
    },
    "18129": {
      "op": "REVERT"
    },
    "18130": {
      "op": "JUMPDEST"
    },
    "18131": {
      "op": "DUP4"
    },
    "18132": {
      "op": "DUP4"
    },
    "18133": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "18135": {
      "op": "DUP4"
    },
    "18136": {
      "op": "ADD"
    },
    "18137": {
      "op": "CALLDATACOPY"
    },
    "18138": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18140": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "18142": {
      "op": "DUP6"
    },
    "18143": {
      "op": "DUP4"
    },
    "18144": {
      "op": "ADD"
    },
    "18145": {
      "op": "ADD"
    },
    "18146": {
      "op": "MSTORE"
    },
    "18147": {
      "op": "POP"
    },
    "18148": {
      "op": "SWAP4"
    },
    "18149": {
      "op": "SWAP3"
    },
    "18150": {
      "op": "POP"
    },
    "18151": {
      "op": "POP"
    },
    "18152": {
      "op": "POP"
    },
    "18153": {
      "jump": "o",
      "op": "JUMP"
    },
    "18154": {
      "op": "JUMPDEST"
    },
    "18155": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18157": {
      "op": "DUP3"
    },
    "18158": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "18160": {
      "op": "DUP4"
    },
    "18161": {
      "op": "ADD"
    },
    "18162": {
      "op": "SLT"
    },
    "18163": {
      "op": "PUSH2",
      "value": "0x46FB"
    },
    "18166": {
      "op": "JUMPI"
    },
    "18167": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18169": {
      "op": "DUP1"
    },
    "18170": {
      "op": "REVERT"
    },
    "18171": {
      "op": "JUMPDEST"
    },
    "18172": {
      "op": "PUSH2",
      "value": "0x44A2"
    },
    "18175": {
      "op": "DUP4"
    },
    "18176": {
      "op": "DUP4"
    },
    "18177": {
      "op": "CALLDATALOAD"
    },
    "18178": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "18180": {
      "op": "DUP6"
    },
    "18181": {
      "op": "ADD"
    },
    "18182": {
      "op": "PUSH2",
      "value": "0x468D"
    },
    "18185": {
      "jump": "i",
      "op": "JUMP"
    },
    "18186": {
      "op": "JUMPDEST"
    },
    "18187": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18189": {
      "op": "DUP1"
    },
    "18190": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18192": {
      "op": "DUP1"
    },
    "18193": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18195": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "18197": {
      "op": "DUP7"
    },
    "18198": {
      "op": "DUP9"
    },
    "18199": {
      "op": "SUB"
    },
    "18200": {
      "op": "SLT"
    },
    "18201": {
      "op": "ISZERO"
    },
    "18202": {
      "op": "PUSH2",
      "value": "0x4722"
    },
    "18205": {
      "op": "JUMPI"
    },
    "18206": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18208": {
      "op": "DUP1"
    },
    "18209": {
      "op": "REVERT"
    },
    "18210": {
      "op": "JUMPDEST"
    },
    "18211": {
      "op": "DUP6"
    },
    "18212": {
      "op": "CALLDATALOAD"
    },
    "18213": {
      "op": "PUSH2",
      "value": "0x472D"
    },
    "18216": {
      "op": "DUP2"
    },
    "18217": {
      "op": "PUSH2",
      "value": "0x442E"
    },
    "18220": {
      "jump": "i",
      "op": "JUMP"
    },
    "18221": {
      "op": "JUMPDEST"
    },
    "18222": {
      "op": "SWAP5"
    },
    "18223": {
      "op": "POP"
    },
    "18224": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "18226": {
      "op": "DUP7"
    },
    "18227": {
      "op": "ADD"
    },
    "18228": {
      "op": "CALLDATALOAD"
    },
    "18229": {
      "op": "PUSH2",
      "value": "0x473D"
    },
    "18232": {
      "op": "DUP2"
    },
    "18233": {
      "op": "PUSH2",
      "value": "0x442E"
    },
    "18236": {
      "jump": "i",
      "op": "JUMP"
    },
    "18237": {
      "op": "JUMPDEST"
    },
    "18238": {
      "op": "SWAP4"
    },
    "18239": {
      "op": "POP"
    },
    "18240": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "18242": {
      "op": "DUP7"
    },
    "18243": {
      "op": "ADD"
    },
    "18244": {
      "op": "CALLDATALOAD"
    },
    "18245": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18247": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18249": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "18251": {
      "op": "SHL"
    },
    "18252": {
      "op": "SUB"
    },
    "18253": {
      "op": "DUP1"
    },
    "18254": {
      "op": "DUP3"
    },
    "18255": {
      "op": "GT"
    },
    "18256": {
      "op": "ISZERO"
    },
    "18257": {
      "op": "PUSH2",
      "value": "0x4759"
    },
    "18260": {
      "op": "JUMPI"
    },
    "18261": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18263": {
      "op": "DUP1"
    },
    "18264": {
      "op": "REVERT"
    },
    "18265": {
      "op": "JUMPDEST"
    },
    "18266": {
      "op": "PUSH2",
      "value": "0x4765"
    },
    "18269": {
      "op": "DUP10"
    },
    "18270": {
      "op": "DUP4"
    },
    "18271": {
      "op": "DUP11"
    },
    "18272": {
      "op": "ADD"
    },
    "18273": {
      "op": "PUSH2",
      "value": "0x461C"
    },
    "18276": {
      "jump": "i",
      "op": "JUMP"
    },
    "18277": {
      "op": "JUMPDEST"
    },
    "18278": {
      "op": "SWAP5"
    },
    "18279": {
      "op": "POP"
    },
    "18280": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "18282": {
      "op": "DUP9"
    },
    "18283": {
      "op": "ADD"
    },
    "18284": {
      "op": "CALLDATALOAD"
    },
    "18285": {
      "op": "SWAP2"
    },
    "18286": {
      "op": "POP"
    },
    "18287": {
      "op": "DUP1"
    },
    "18288": {
      "op": "DUP3"
    },
    "18289": {
      "op": "GT"
    },
    "18290": {
      "op": "ISZERO"
    },
    "18291": {
      "op": "PUSH2",
      "value": "0x477B"
    },
    "18294": {
      "op": "JUMPI"
    },
    "18295": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18297": {
      "op": "DUP1"
    },
    "18298": {
      "op": "REVERT"
    },
    "18299": {
      "op": "JUMPDEST"
    },
    "18300": {
      "op": "PUSH2",
      "value": "0x4787"
    },
    "18303": {
      "op": "DUP10"
    },
    "18304": {
      "op": "DUP4"
    },
    "18305": {
      "op": "DUP11"
    },
    "18306": {
      "op": "ADD"
    },
    "18307": {
      "op": "PUSH2",
      "value": "0x461C"
    },
    "18310": {
      "jump": "i",
      "op": "JUMP"
    },
    "18311": {
      "op": "JUMPDEST"
    },
    "18312": {
      "op": "SWAP4"
    },
    "18313": {
      "op": "POP"
    },
    "18314": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "18316": {
      "op": "DUP9"
    },
    "18317": {
      "op": "ADD"
    },
    "18318": {
      "op": "CALLDATALOAD"
    },
    "18319": {
      "op": "SWAP2"
    },
    "18320": {
      "op": "POP"
    },
    "18321": {
      "op": "DUP1"
    },
    "18322": {
      "op": "DUP3"
    },
    "18323": {
      "op": "GT"
    },
    "18324": {
      "op": "ISZERO"
    },
    "18325": {
      "op": "PUSH2",
      "value": "0x479D"
    },
    "18328": {
      "op": "JUMPI"
    },
    "18329": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18331": {
      "op": "DUP1"
    },
    "18332": {
      "op": "REVERT"
    },
    "18333": {
      "op": "JUMPDEST"
    },
    "18334": {
      "op": "POP"
    },
    "18335": {
      "op": "PUSH2",
      "value": "0x47AA"
    },
    "18338": {
      "op": "DUP9"
    },
    "18339": {
      "op": "DUP3"
    },
    "18340": {
      "op": "DUP10"
    },
    "18341": {
      "op": "ADD"
    },
    "18342": {
      "op": "PUSH2",
      "value": "0x46EA"
    },
    "18345": {
      "jump": "i",
      "op": "JUMP"
    },
    "18346": {
      "op": "JUMPDEST"
    },
    "18347": {
      "op": "SWAP2"
    },
    "18348": {
      "op": "POP"
    },
    "18349": {
      "op": "POP"
    },
    "18350": {
      "op": "SWAP3"
    },
    "18351": {
      "op": "SWAP6"
    },
    "18352": {
      "op": "POP"
    },
    "18353": {
      "op": "SWAP3"
    },
    "18354": {
      "op": "SWAP6"
    },
    "18355": {
      "op": "SWAP1"
    },
    "18356": {
      "op": "SWAP4"
    },
    "18357": {
      "op": "POP"
    },
    "18358": {
      "jump": "o",
      "op": "JUMP"
    },
    "18359": {
      "op": "JUMPDEST"
    },
    "18360": {
      "op": "DUP1"
    },
    "18361": {
      "op": "ISZERO"
    },
    "18362": {
      "op": "ISZERO"
    },
    "18363": {
      "op": "DUP2"
    },
    "18364": {
      "op": "EQ"
    },
    "18365": {
      "op": "PUSH2",
      "value": "0x3C37"
    },
    "18368": {
      "op": "JUMPI"
    },
    "18369": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18371": {
      "op": "DUP1"
    },
    "18372": {
      "op": "REVERT"
    },
    "18373": {
      "op": "JUMPDEST"
    },
    "18374": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18376": {
      "op": "DUP1"
    },
    "18377": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18379": {
      "op": "DUP1"
    },
    "18380": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18382": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "18384": {
      "op": "DUP7"
    },
    "18385": {
      "op": "DUP9"
    },
    "18386": {
      "op": "SUB"
    },
    "18387": {
      "op": "SLT"
    },
    "18388": {
      "op": "ISZERO"
    },
    "18389": {
      "op": "PUSH2",
      "value": "0x47DD"
    },
    "18392": {
      "op": "JUMPI"
    },
    "18393": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18395": {
      "op": "DUP1"
    },
    "18396": {
      "op": "REVERT"
    },
    "18397": {
      "op": "JUMPDEST"
    },
    "18398": {
      "op": "DUP6"
    },
    "18399": {
      "op": "CALLDATALOAD"
    },
    "18400": {
      "op": "PUSH2",
      "value": "0x47E8"
    },
    "18403": {
      "op": "DUP2"
    },
    "18404": {
      "op": "PUSH2",
      "value": "0x442E"
    },
    "18407": {
      "jump": "i",
      "op": "JUMP"
    },
    "18408": {
      "op": "JUMPDEST"
    },
    "18409": {
      "op": "SWAP5"
    },
    "18410": {
      "op": "POP"
    },
    "18411": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "18413": {
      "op": "DUP7"
    },
    "18414": {
      "op": "ADD"
    },
    "18415": {
      "op": "CALLDATALOAD"
    },
    "18416": {
      "op": "SWAP4"
    },
    "18417": {
      "op": "POP"
    },
    "18418": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "18420": {
      "op": "DUP7"
    },
    "18421": {
      "op": "ADD"
    },
    "18422": {
      "op": "CALLDATALOAD"
    },
    "18423": {
      "op": "SWAP3"
    },
    "18424": {
      "op": "POP"
    },
    "18425": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "18427": {
      "op": "DUP7"
    },
    "18428": {
      "op": "ADD"
    },
    "18429": {
      "op": "CALLDATALOAD"
    },
    "18430": {
      "op": "PUSH2",
      "value": "0x4806"
    },
    "18433": {
      "op": "DUP2"
    },
    "18434": {
      "op": "PUSH2",
      "value": "0x47B7"
    },
    "18437": {
      "jump": "i",
      "op": "JUMP"
    },
    "18438": {
      "op": "JUMPDEST"
    },
    "18439": {
      "op": "SWAP5"
    },
    "18440": {
      "op": "SWAP8"
    },
    "18441": {
      "op": "SWAP4"
    },
    "18442": {
      "op": "SWAP7"
    },
    "18443": {
      "op": "POP"
    },
    "18444": {
      "op": "SWAP2"
    },
    "18445": {
      "op": "SWAP5"
    },
    "18446": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "18448": {
      "op": "ADD"
    },
    "18449": {
      "op": "CALLDATALOAD"
    },
    "18450": {
      "op": "SWAP3"
    },
    "18451": {
      "op": "SWAP2"
    },
    "18452": {
      "op": "POP"
    },
    "18453": {
      "op": "POP"
    },
    "18454": {
      "jump": "o",
      "op": "JUMP"
    },
    "18455": {
      "op": "JUMPDEST"
    },
    "18456": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18458": {
      "op": "DUP1"
    },
    "18459": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "18461": {
      "op": "DUP4"
    },
    "18462": {
      "op": "DUP6"
    },
    "18463": {
      "op": "SUB"
    },
    "18464": {
      "op": "SLT"
    },
    "18465": {
      "op": "ISZERO"
    },
    "18466": {
      "op": "PUSH2",
      "value": "0x482A"
    },
    "18469": {
      "op": "JUMPI"
    },
    "18470": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18472": {
      "op": "DUP1"
    },
    "18473": {
      "op": "REVERT"
    },
    "18474": {
      "op": "JUMPDEST"
    },
    "18475": {
      "op": "DUP3"
    },
    "18476": {
      "op": "CALLDATALOAD"
    },
    "18477": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18479": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18481": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "18483": {
      "op": "SHL"
    },
    "18484": {
      "op": "SUB"
    },
    "18485": {
      "op": "DUP1"
    },
    "18486": {
      "op": "DUP3"
    },
    "18487": {
      "op": "GT"
    },
    "18488": {
      "op": "ISZERO"
    },
    "18489": {
      "op": "PUSH2",
      "value": "0x4841"
    },
    "18492": {
      "op": "JUMPI"
    },
    "18493": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18495": {
      "op": "DUP1"
    },
    "18496": {
      "op": "REVERT"
    },
    "18497": {
      "op": "JUMPDEST"
    },
    "18498": {
      "op": "DUP2"
    },
    "18499": {
      "op": "DUP6"
    },
    "18500": {
      "op": "ADD"
    },
    "18501": {
      "op": "SWAP2"
    },
    "18502": {
      "op": "POP"
    },
    "18503": {
      "op": "DUP6"
    },
    "18504": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "18506": {
      "op": "DUP4"
    },
    "18507": {
      "op": "ADD"
    },
    "18508": {
      "op": "SLT"
    },
    "18509": {
      "op": "PUSH2",
      "value": "0x4855"
    },
    "18512": {
      "op": "JUMPI"
    },
    "18513": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18515": {
      "op": "DUP1"
    },
    "18516": {
      "op": "REVERT"
    },
    "18517": {
      "op": "JUMPDEST"
    },
    "18518": {
      "op": "DUP2"
    },
    "18519": {
      "op": "CALLDATALOAD"
    },
    "18520": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "18522": {
      "op": "PUSH2",
      "value": "0x4862"
    },
    "18525": {
      "op": "DUP3"
    },
    "18526": {
      "op": "PUSH2",
      "value": "0x45F9"
    },
    "18529": {
      "jump": "i",
      "op": "JUMP"
    },
    "18530": {
      "op": "JUMPDEST"
    },
    "18531": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "18533": {
      "op": "MLOAD"
    },
    "18534": {
      "op": "PUSH2",
      "value": "0x486F"
    },
    "18537": {
      "op": "DUP3"
    },
    "18538": {
      "op": "DUP3"
    },
    "18539": {
      "op": "PUSH2",
      "value": "0x45CD"
    },
    "18542": {
      "jump": "i",
      "op": "JUMP"
    },
    "18543": {
      "op": "JUMPDEST"
    },
    "18544": {
      "op": "DUP4"
    },
    "18545": {
      "op": "DUP2"
    },
    "18546": {
      "op": "MSTORE"
    },
    "18547": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "18549": {
      "op": "SWAP4"
    },
    "18550": {
      "op": "SWAP1"
    },
    "18551": {
      "op": "SWAP4"
    },
    "18552": {
      "op": "SHL"
    },
    "18553": {
      "op": "DUP6"
    },
    "18554": {
      "op": "ADD"
    },
    "18555": {
      "op": "DUP3"
    },
    "18556": {
      "op": "ADD"
    },
    "18557": {
      "op": "SWAP3"
    },
    "18558": {
      "op": "DUP3"
    },
    "18559": {
      "op": "DUP2"
    },
    "18560": {
      "op": "ADD"
    },
    "18561": {
      "op": "SWAP2"
    },
    "18562": {
      "op": "POP"
    },
    "18563": {
      "op": "DUP10"
    },
    "18564": {
      "op": "DUP5"
    },
    "18565": {
      "op": "GT"
    },
    "18566": {
      "op": "ISZERO"
    },
    "18567": {
      "op": "PUSH2",
      "value": "0x488F"
    },
    "18570": {
      "op": "JUMPI"
    },
    "18571": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18573": {
      "op": "DUP1"
    },
    "18574": {
      "op": "REVERT"
    },
    "18575": {
      "op": "JUMPDEST"
    },
    "18576": {
      "op": "SWAP5"
    },
    "18577": {
      "op": "DUP3"
    },
    "18578": {
      "op": "ADD"
    },
    "18579": {
      "op": "SWAP5"
    },
    "18580": {
      "op": "JUMPDEST"
    },
    "18581": {
      "op": "DUP4"
    },
    "18582": {
      "op": "DUP7"
    },
    "18583": {
      "op": "LT"
    },
    "18584": {
      "op": "ISZERO"
    },
    "18585": {
      "op": "PUSH2",
      "value": "0x48B6"
    },
    "18588": {
      "op": "JUMPI"
    },
    "18589": {
      "op": "DUP6"
    },
    "18590": {
      "op": "CALLDATALOAD"
    },
    "18591": {
      "op": "PUSH2",
      "value": "0x48A7"
    },
    "18594": {
      "op": "DUP2"
    },
    "18595": {
      "op": "PUSH2",
      "value": "0x442E"
    },
    "18598": {
      "jump": "i",
      "op": "JUMP"
    },
    "18599": {
      "op": "JUMPDEST"
    },
    "18600": {
      "op": "DUP3"
    },
    "18601": {
      "op": "MSTORE"
    },
    "18602": {
      "op": "SWAP5"
    },
    "18603": {
      "op": "DUP3"
    },
    "18604": {
      "op": "ADD"
    },
    "18605": {
      "op": "SWAP5"
    },
    "18606": {
      "op": "SWAP1"
    },
    "18607": {
      "op": "DUP3"
    },
    "18608": {
      "op": "ADD"
    },
    "18609": {
      "op": "SWAP1"
    },
    "18610": {
      "op": "PUSH2",
      "value": "0x4894"
    },
    "18613": {
      "op": "JUMP"
    },
    "18614": {
      "op": "JUMPDEST"
    },
    "18615": {
      "op": "SWAP7"
    },
    "18616": {
      "op": "POP"
    },
    "18617": {
      "op": "POP"
    },
    "18618": {
      "op": "DUP7"
    },
    "18619": {
      "op": "ADD"
    },
    "18620": {
      "op": "CALLDATALOAD"
    },
    "18621": {
      "op": "SWAP3"
    },
    "18622": {
      "op": "POP"
    },
    "18623": {
      "op": "POP"
    },
    "18624": {
      "op": "DUP1"
    },
    "18625": {
      "op": "DUP3"
    },
    "18626": {
      "op": "GT"
    },
    "18627": {
      "op": "ISZERO"
    },
    "18628": {
      "op": "PUSH2",
      "value": "0x48CC"
    },
    "18631": {
      "op": "JUMPI"
    },
    "18632": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18634": {
      "op": "DUP1"
    },
    "18635": {
      "op": "REVERT"
    },
    "18636": {
      "op": "JUMPDEST"
    },
    "18637": {
      "op": "POP"
    },
    "18638": {
      "op": "PUSH2",
      "value": "0x48D9"
    },
    "18641": {
      "op": "DUP6"
    },
    "18642": {
      "op": "DUP3"
    },
    "18643": {
      "op": "DUP7"
    },
    "18644": {
      "op": "ADD"
    },
    "18645": {
      "op": "PUSH2",
      "value": "0x461C"
    },
    "18648": {
      "jump": "i",
      "op": "JUMP"
    },
    "18649": {
      "op": "JUMPDEST"
    },
    "18650": {
      "op": "SWAP2"
    },
    "18651": {
      "op": "POP"
    },
    "18652": {
      "op": "POP"
    },
    "18653": {
      "op": "SWAP3"
    },
    "18654": {
      "op": "POP"
    },
    "18655": {
      "op": "SWAP3"
    },
    "18656": {
      "op": "SWAP1"
    },
    "18657": {
      "op": "POP"
    },
    "18658": {
      "jump": "o",
      "op": "JUMP"
    },
    "18659": {
      "op": "JUMPDEST"
    },
    "18660": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18662": {
      "op": "DUP2"
    },
    "18663": {
      "op": "MLOAD"
    },
    "18664": {
      "op": "DUP1"
    },
    "18665": {
      "op": "DUP5"
    },
    "18666": {
      "op": "MSTORE"
    },
    "18667": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "18669": {
      "op": "DUP1"
    },
    "18670": {
      "op": "DUP6"
    },
    "18671": {
      "op": "ADD"
    },
    "18672": {
      "op": "SWAP5"
    },
    "18673": {
      "op": "POP"
    },
    "18674": {
      "op": "DUP1"
    },
    "18675": {
      "op": "DUP5"
    },
    "18676": {
      "op": "ADD"
    },
    "18677": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18679": {
      "op": "JUMPDEST"
    },
    "18680": {
      "op": "DUP4"
    },
    "18681": {
      "op": "DUP2"
    },
    "18682": {
      "op": "LT"
    },
    "18683": {
      "op": "ISZERO"
    },
    "18684": {
      "op": "PUSH2",
      "value": "0x4913"
    },
    "18687": {
      "op": "JUMPI"
    },
    "18688": {
      "op": "DUP2"
    },
    "18689": {
      "op": "MLOAD"
    },
    "18690": {
      "op": "DUP8"
    },
    "18691": {
      "op": "MSTORE"
    },
    "18692": {
      "op": "SWAP6"
    },
    "18693": {
      "op": "DUP3"
    },
    "18694": {
      "op": "ADD"
    },
    "18695": {
      "op": "SWAP6"
    },
    "18696": {
      "op": "SWAP1"
    },
    "18697": {
      "op": "DUP3"
    },
    "18698": {
      "op": "ADD"
    },
    "18699": {
      "op": "SWAP1"
    },
    "18700": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18702": {
      "op": "ADD"
    },
    "18703": {
      "op": "PUSH2",
      "value": "0x48F7"
    },
    "18706": {
      "op": "JUMP"
    },
    "18707": {
      "op": "JUMPDEST"
    },
    "18708": {
      "op": "POP"
    },
    "18709": {
      "op": "SWAP5"
    },
    "18710": {
      "op": "SWAP6"
    },
    "18711": {
      "op": "SWAP5"
    },
    "18712": {
      "op": "POP"
    },
    "18713": {
      "op": "POP"
    },
    "18714": {
      "op": "POP"
    },
    "18715": {
      "op": "POP"
    },
    "18716": {
      "op": "POP"
    },
    "18717": {
      "jump": "o",
      "op": "JUMP"
    },
    "18718": {
      "op": "JUMPDEST"
    },
    "18719": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "18721": {
      "op": "DUP2"
    },
    "18722": {
      "op": "MSTORE"
    },
    "18723": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18725": {
      "op": "PUSH2",
      "value": "0x44A2"
    },
    "18728": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "18730": {
      "op": "DUP4"
    },
    "18731": {
      "op": "ADD"
    },
    "18732": {
      "op": "DUP5"
    },
    "18733": {
      "op": "PUSH2",
      "value": "0x48E3"
    },
    "18736": {
      "jump": "i",
      "op": "JUMP"
    },
    "18737": {
      "op": "JUMPDEST"
    },
    "18738": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18740": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "18742": {
      "op": "DUP3"
    },
    "18743": {
      "op": "DUP5"
    },
    "18744": {
      "op": "SUB"
    },
    "18745": {
      "op": "SLT"
    },
    "18746": {
      "op": "ISZERO"
    },
    "18747": {
      "op": "PUSH2",
      "value": "0x4943"
    },
    "18750": {
      "op": "JUMPI"
    },
    "18751": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18753": {
      "op": "DUP1"
    },
    "18754": {
      "op": "REVERT"
    },
    "18755": {
      "op": "JUMPDEST"
    },
    "18756": {
      "op": "DUP2"
    },
    "18757": {
      "op": "CALLDATALOAD"
    },
    "18758": {
      "op": "PUSH2",
      "value": "0x44A2"
    },
    "18761": {
      "op": "DUP2"
    },
    "18762": {
      "op": "PUSH2",
      "value": "0x442E"
    },
    "18765": {
      "jump": "i",
      "op": "JUMP"
    },
    "18766": {
      "op": "JUMPDEST"
    },
    "18767": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18769": {
      "op": "DUP1"
    },
    "18770": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18772": {
      "op": "DUP1"
    },
    "18773": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "18775": {
      "op": "DUP6"
    },
    "18776": {
      "op": "DUP8"
    },
    "18777": {
      "op": "SUB"
    },
    "18778": {
      "op": "SLT"
    },
    "18779": {
      "op": "ISZERO"
    },
    "18780": {
      "op": "PUSH2",
      "value": "0x4964"
    },
    "18783": {
      "op": "JUMPI"
    },
    "18784": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18786": {
      "op": "DUP1"
    },
    "18787": {
      "op": "REVERT"
    },
    "18788": {
      "op": "JUMPDEST"
    },
    "18789": {
      "op": "DUP5"
    },
    "18790": {
      "op": "CALLDATALOAD"
    },
    "18791": {
      "op": "PUSH2",
      "value": "0x496F"
    },
    "18794": {
      "op": "DUP2"
    },
    "18795": {
      "op": "PUSH2",
      "value": "0x442E"
    },
    "18798": {
      "jump": "i",
      "op": "JUMP"
    },
    "18799": {
      "op": "JUMPDEST"
    },
    "18800": {
      "op": "SWAP4"
    },
    "18801": {
      "op": "POP"
    },
    "18802": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "18804": {
      "op": "DUP6"
    },
    "18805": {
      "op": "ADD"
    },
    "18806": {
      "op": "CALLDATALOAD"
    },
    "18807": {
      "op": "PUSH2",
      "value": "0x497F"
    },
    "18810": {
      "op": "DUP2"
    },
    "18811": {
      "op": "PUSH2",
      "value": "0x442E"
    },
    "18814": {
      "jump": "i",
      "op": "JUMP"
    },
    "18815": {
      "op": "JUMPDEST"
    },
    "18816": {
      "op": "SWAP3"
    },
    "18817": {
      "op": "POP"
    },
    "18818": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "18820": {
      "op": "DUP6"
    },
    "18821": {
      "op": "ADD"
    },
    "18822": {
      "op": "CALLDATALOAD"
    },
    "18823": {
      "op": "PUSH2",
      "value": "0x498F"
    },
    "18826": {
      "op": "DUP2"
    },
    "18827": {
      "op": "PUSH2",
      "value": "0x442E"
    },
    "18830": {
      "jump": "i",
      "op": "JUMP"
    },
    "18831": {
      "op": "JUMPDEST"
    },
    "18832": {
      "op": "SWAP2"
    },
    "18833": {
      "op": "POP"
    },
    "18834": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "18836": {
      "op": "DUP6"
    },
    "18837": {
      "op": "ADD"
    },
    "18838": {
      "op": "CALLDATALOAD"
    },
    "18839": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18841": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18843": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "18845": {
      "op": "SHL"
    },
    "18846": {
      "op": "SUB"
    },
    "18847": {
      "op": "DUP2"
    },
    "18848": {
      "op": "GT"
    },
    "18849": {
      "op": "ISZERO"
    },
    "18850": {
      "op": "PUSH2",
      "value": "0x49AA"
    },
    "18853": {
      "op": "JUMPI"
    },
    "18854": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18856": {
      "op": "DUP1"
    },
    "18857": {
      "op": "REVERT"
    },
    "18858": {
      "op": "JUMPDEST"
    },
    "18859": {
      "op": "DUP6"
    },
    "18860": {
      "op": "ADD"
    },
    "18861": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "18863": {
      "op": "DUP2"
    },
    "18864": {
      "op": "ADD"
    },
    "18865": {
      "op": "DUP8"
    },
    "18866": {
      "op": "SGT"
    },
    "18867": {
      "op": "PUSH2",
      "value": "0x49BB"
    },
    "18870": {
      "op": "JUMPI"
    },
    "18871": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18873": {
      "op": "DUP1"
    },
    "18874": {
      "op": "REVERT"
    },
    "18875": {
      "op": "JUMPDEST"
    },
    "18876": {
      "op": "PUSH2",
      "value": "0x49CA"
    },
    "18879": {
      "op": "DUP8"
    },
    "18880": {
      "op": "DUP3"
    },
    "18881": {
      "op": "CALLDATALOAD"
    },
    "18882": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "18884": {
      "op": "DUP5"
    },
    "18885": {
      "op": "ADD"
    },
    "18886": {
      "op": "PUSH2",
      "value": "0x468D"
    },
    "18889": {
      "jump": "i",
      "op": "JUMP"
    },
    "18890": {
      "op": "JUMPDEST"
    },
    "18891": {
      "op": "SWAP2"
    },
    "18892": {
      "op": "POP"
    },
    "18893": {
      "op": "POP"
    },
    "18894": {
      "op": "SWAP3"
    },
    "18895": {
      "op": "SWAP6"
    },
    "18896": {
      "op": "SWAP2"
    },
    "18897": {
      "op": "SWAP5"
    },
    "18898": {
      "op": "POP"
    },
    "18899": {
      "op": "SWAP3"
    },
    "18900": {
      "op": "POP"
    },
    "18901": {
      "jump": "o",
      "op": "JUMP"
    },
    "18902": {
      "op": "JUMPDEST"
    },
    "18903": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18905": {
      "op": "DUP1"
    },
    "18906": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18908": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "18910": {
      "op": "DUP5"
    },
    "18911": {
      "op": "DUP7"
    },
    "18912": {
      "op": "SUB"
    },
    "18913": {
      "op": "SLT"
    },
    "18914": {
      "op": "ISZERO"
    },
    "18915": {
      "op": "PUSH2",
      "value": "0x49EB"
    },
    "18918": {
      "op": "JUMPI"
    },
    "18919": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18921": {
      "op": "DUP1"
    },
    "18922": {
      "op": "REVERT"
    },
    "18923": {
      "op": "JUMPDEST"
    },
    "18924": {
      "op": "DUP4"
    },
    "18925": {
      "op": "CALLDATALOAD"
    },
    "18926": {
      "op": "PUSH2",
      "value": "0x49F6"
    },
    "18929": {
      "op": "DUP2"
    },
    "18930": {
      "op": "PUSH2",
      "value": "0x442E"
    },
    "18933": {
      "jump": "i",
      "op": "JUMP"
    },
    "18934": {
      "op": "JUMPDEST"
    },
    "18935": {
      "op": "SWAP3"
    },
    "18936": {
      "op": "POP"
    },
    "18937": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "18939": {
      "op": "DUP5"
    },
    "18940": {
      "op": "ADD"
    },
    "18941": {
      "op": "CALLDATALOAD"
    },
    "18942": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18944": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18946": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "18948": {
      "op": "SHL"
    },
    "18949": {
      "op": "SUB"
    },
    "18950": {
      "op": "DUP1"
    },
    "18951": {
      "op": "DUP3"
    },
    "18952": {
      "op": "GT"
    },
    "18953": {
      "op": "ISZERO"
    },
    "18954": {
      "op": "PUSH2",
      "value": "0x4A12"
    },
    "18957": {
      "op": "JUMPI"
    },
    "18958": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18960": {
      "op": "DUP1"
    },
    "18961": {
      "op": "REVERT"
    },
    "18962": {
      "op": "JUMPDEST"
    },
    "18963": {
      "op": "PUSH2",
      "value": "0x4A1E"
    },
    "18966": {
      "op": "DUP8"
    },
    "18967": {
      "op": "DUP4"
    },
    "18968": {
      "op": "DUP9"
    },
    "18969": {
      "op": "ADD"
    },
    "18970": {
      "op": "PUSH2",
      "value": "0x461C"
    },
    "18973": {
      "jump": "i",
      "op": "JUMP"
    },
    "18974": {
      "op": "JUMPDEST"
    },
    "18975": {
      "op": "SWAP4"
    },
    "18976": {
      "op": "POP"
    },
    "18977": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "18979": {
      "op": "DUP7"
    },
    "18980": {
      "op": "ADD"
    },
    "18981": {
      "op": "CALLDATALOAD"
    },
    "18982": {
      "op": "SWAP2"
    },
    "18983": {
      "op": "POP"
    },
    "18984": {
      "op": "DUP1"
    },
    "18985": {
      "op": "DUP3"
    },
    "18986": {
      "op": "GT"
    },
    "18987": {
      "op": "ISZERO"
    },
    "18988": {
      "op": "PUSH2",
      "value": "0x4A34"
    },
    "18991": {
      "op": "JUMPI"
    },
    "18992": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18994": {
      "op": "DUP1"
    },
    "18995": {
      "op": "REVERT"
    },
    "18996": {
      "op": "JUMPDEST"
    },
    "18997": {
      "op": "POP"
    },
    "18998": {
      "op": "PUSH2",
      "value": "0x4A41"
    },
    "19001": {
      "op": "DUP7"
    },
    "19002": {
      "op": "DUP3"
    },
    "19003": {
      "op": "DUP8"
    },
    "19004": {
      "op": "ADD"
    },
    "19005": {
      "op": "PUSH2",
      "value": "0x461C"
    },
    "19008": {
      "jump": "i",
      "op": "JUMP"
    },
    "19009": {
      "op": "JUMPDEST"
    },
    "19010": {
      "op": "SWAP2"
    },
    "19011": {
      "op": "POP"
    },
    "19012": {
      "op": "POP"
    },
    "19013": {
      "op": "SWAP3"
    },
    "19014": {
      "op": "POP"
    },
    "19015": {
      "op": "SWAP3"
    },
    "19016": {
      "op": "POP"
    },
    "19017": {
      "op": "SWAP3"
    },
    "19018": {
      "jump": "o",
      "op": "JUMP"
    },
    "19019": {
      "op": "JUMPDEST"
    },
    "19020": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "19022": {
      "op": "DUP1"
    },
    "19023": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "19025": {
      "op": "DUP4"
    },
    "19026": {
      "op": "DUP6"
    },
    "19027": {
      "op": "SUB"
    },
    "19028": {
      "op": "SLT"
    },
    "19029": {
      "op": "ISZERO"
    },
    "19030": {
      "op": "PUSH2",
      "value": "0x4A5E"
    },
    "19033": {
      "op": "JUMPI"
    },
    "19034": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "19036": {
      "op": "DUP1"
    },
    "19037": {
      "op": "REVERT"
    },
    "19038": {
      "op": "JUMPDEST"
    },
    "19039": {
      "op": "DUP3"
    },
    "19040": {
      "op": "CALLDATALOAD"
    },
    "19041": {
      "op": "PUSH2",
      "value": "0x4A69"
    },
    "19044": {
      "op": "DUP2"
    },
    "19045": {
      "op": "PUSH2",
      "value": "0x442E"
    },
    "19048": {
      "jump": "i",
      "op": "JUMP"
    },
    "19049": {
      "op": "JUMPDEST"
    },
    "19050": {
      "op": "SWAP2"
    },
    "19051": {
      "op": "POP"
    },
    "19052": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "19054": {
      "op": "DUP4"
    },
    "19055": {
      "op": "ADD"
    },
    "19056": {
      "op": "CALLDATALOAD"
    },
    "19057": {
      "op": "PUSH2",
      "value": "0x4A79"
    },
    "19060": {
      "op": "DUP2"
    },
    "19061": {
      "op": "PUSH2",
      "value": "0x47B7"
    },
    "19064": {
      "jump": "i",
      "op": "JUMP"
    },
    "19065": {
      "op": "JUMPDEST"
    },
    "19066": {
      "op": "DUP1"
    },
    "19067": {
      "op": "SWAP2"
    },
    "19068": {
      "op": "POP"
    },
    "19069": {
      "op": "POP"
    },
    "19070": {
      "op": "SWAP3"
    },
    "19071": {
      "op": "POP"
    },
    "19072": {
      "op": "SWAP3"
    },
    "19073": {
      "op": "SWAP1"
    },
    "19074": {
      "op": "POP"
    },
    "19075": {
      "jump": "o",
      "op": "JUMP"
    },
    "19076": {
      "op": "JUMPDEST"
    },
    "19077": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "19079": {
      "op": "DUP1"
    },
    "19080": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "19082": {
      "op": "DUP1"
    },
    "19083": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "19085": {
      "op": "DUP6"
    },
    "19086": {
      "op": "DUP8"
    },
    "19087": {
      "op": "SUB"
    },
    "19088": {
      "op": "SLT"
    },
    "19089": {
      "op": "ISZERO"
    },
    "19090": {
      "op": "PUSH2",
      "value": "0x4A9A"
    },
    "19093": {
      "op": "JUMPI"
    },
    "19094": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "19096": {
      "op": "DUP1"
    },
    "19097": {
      "op": "REVERT"
    },
    "19098": {
      "op": "JUMPDEST"
    },
    "19099": {
      "op": "DUP5"
    },
    "19100": {
      "op": "CALLDATALOAD"
    },
    "19101": {
      "op": "PUSH2",
      "value": "0x4AA5"
    },
    "19104": {
      "op": "DUP2"
    },
    "19105": {
      "op": "PUSH2",
      "value": "0x442E"
    },
    "19108": {
      "jump": "i",
      "op": "JUMP"
    },
    "19109": {
      "op": "JUMPDEST"
    },
    "19110": {
      "op": "SWAP4"
    },
    "19111": {
      "op": "POP"
    },
    "19112": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "19114": {
      "op": "DUP6"
    },
    "19115": {
      "op": "ADD"
    },
    "19116": {
      "op": "CALLDATALOAD"
    },
    "19117": {
      "op": "SWAP3"
    },
    "19118": {
      "op": "POP"
    },
    "19119": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "19121": {
      "op": "DUP6"
    },
    "19122": {
      "op": "ADD"
    },
    "19123": {
      "op": "CALLDATALOAD"
    },
    "19124": {
      "op": "SWAP2"
    },
    "19125": {
      "op": "POP"
    },
    "19126": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "19128": {
      "op": "DUP6"
    },
    "19129": {
      "op": "ADD"
    },
    "19130": {
      "op": "CALLDATALOAD"
    },
    "19131": {
      "op": "PUSH2",
      "value": "0x4AC3"
    },
    "19134": {
      "op": "DUP2"
    },
    "19135": {
      "op": "PUSH2",
      "value": "0x47B7"
    },
    "19138": {
      "jump": "i",
      "op": "JUMP"
    },
    "19139": {
      "op": "JUMPDEST"
    },
    "19140": {
      "op": "SWAP4"
    },
    "19141": {
      "op": "SWAP7"
    },
    "19142": {
      "op": "SWAP3"
    },
    "19143": {
      "op": "SWAP6"
    },
    "19144": {
      "op": "POP"
    },
    "19145": {
      "op": "SWAP1"
    },
    "19146": {
      "op": "SWAP4"
    },
    "19147": {
      "op": "POP"
    },
    "19148": {
      "op": "POP"
    },
    "19149": {
      "jump": "o",
      "op": "JUMP"
    },
    "19150": {
      "op": "JUMPDEST"
    },
    "19151": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "19153": {
      "op": "DUP1"
    },
    "19154": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "19156": {
      "op": "DUP1"
    },
    "19157": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "19159": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "19161": {
      "op": "DUP7"
    },
    "19162": {
      "op": "DUP9"
    },
    "19163": {
      "op": "SUB"
    },
    "19164": {
      "op": "SLT"
    },
    "19165": {
      "op": "ISZERO"
    },
    "19166": {
      "op": "PUSH2",
      "value": "0x4AE6"
    },
    "19169": {
      "op": "JUMPI"
    },
    "19170": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "19172": {
      "op": "DUP1"
    },
    "19173": {
      "op": "REVERT"
    },
    "19174": {
      "op": "JUMPDEST"
    },
    "19175": {
      "op": "DUP6"
    },
    "19176": {
      "op": "CALLDATALOAD"
    },
    "19177": {
      "op": "PUSH2",
      "value": "0x4AF1"
    },
    "19180": {
      "op": "DUP2"
    },
    "19181": {
      "op": "PUSH2",
      "value": "0x442E"
    },
    "19184": {
      "jump": "i",
      "op": "JUMP"
    },
    "19185": {
      "op": "JUMPDEST"
    },
    "19186": {
      "op": "SWAP8"
    },
    "19187": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "19189": {
      "op": "DUP8"
    },
    "19190": {
      "op": "ADD"
    },
    "19191": {
      "op": "CALLDATALOAD"
    },
    "19192": {
      "op": "SWAP8"
    },
    "19193": {
      "op": "POP"
    },
    "19194": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "19196": {
      "op": "DUP8"
    },
    "19197": {
      "op": "ADD"
    },
    "19198": {
      "op": "CALLDATALOAD"
    },
    "19199": {
      "op": "SWAP7"
    },
    "19200": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "19202": {
      "op": "DUP2"
    },
    "19203": {
      "op": "ADD"
    },
    "19204": {
      "op": "CALLDATALOAD"
    },
    "19205": {
      "op": "SWAP7"
    },
    "19206": {
      "op": "POP"
    },
    "19207": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "19209": {
      "op": "ADD"
    },
    "19210": {
      "op": "CALLDATALOAD"
    },
    "19211": {
      "op": "SWAP5"
    },
    "19212": {
      "op": "POP"
    },
    "19213": {
      "op": "SWAP3"
    },
    "19214": {
      "op": "POP"
    },
    "19215": {
      "op": "POP"
    },
    "19216": {
      "op": "POP"
    },
    "19217": {
      "jump": "o",
      "op": "JUMP"
    },
    "19218": {
      "op": "JUMPDEST"
    },
    "19219": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "19221": {
      "op": "DUP1"
    },
    "19222": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "19224": {
      "op": "DUP4"
    },
    "19225": {
      "op": "DUP6"
    },
    "19226": {
      "op": "SUB"
    },
    "19227": {
      "op": "SLT"
    },
    "19228": {
      "op": "ISZERO"
    },
    "19229": {
      "op": "PUSH2",
      "value": "0x4B25"
    },
    "19232": {
      "op": "JUMPI"
    },
    "19233": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "19235": {
      "op": "DUP1"
    },
    "19236": {
      "op": "REVERT"
    },
    "19237": {
      "op": "JUMPDEST"
    },
    "19238": {
      "op": "DUP3"
    },
    "19239": {
      "op": "CALLDATALOAD"
    },
    "19240": {
      "op": "PUSH2",
      "value": "0x4B30"
    },
    "19243": {
      "op": "DUP2"
    },
    "19244": {
      "op": "PUSH2",
      "value": "0x442E"
    },
    "19247": {
      "jump": "i",
      "op": "JUMP"
    },
    "19248": {
      "op": "JUMPDEST"
    },
    "19249": {
      "op": "SWAP2"
    },
    "19250": {
      "op": "POP"
    },
    "19251": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "19253": {
      "op": "DUP4"
    },
    "19254": {
      "op": "ADD"
    },
    "19255": {
      "op": "CALLDATALOAD"
    },
    "19256": {
      "op": "PUSH2",
      "value": "0x4A79"
    },
    "19259": {
      "op": "DUP2"
    },
    "19260": {
      "op": "PUSH2",
      "value": "0x442E"
    },
    "19263": {
      "jump": "i",
      "op": "JUMP"
    },
    "19264": {
      "op": "JUMPDEST"
    },
    "19265": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "19267": {
      "op": "DUP1"
    },
    "19268": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "19270": {
      "op": "DUP1"
    },
    "19271": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "19273": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "19275": {
      "op": "DUP7"
    },
    "19276": {
      "op": "DUP9"
    },
    "19277": {
      "op": "SUB"
    },
    "19278": {
      "op": "SLT"
    },
    "19279": {
      "op": "ISZERO"
    },
    "19280": {
      "op": "PUSH2",
      "value": "0x4B58"
    },
    "19283": {
      "op": "JUMPI"
    },
    "19284": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "19286": {
      "op": "DUP1"
    },
    "19287": {
      "op": "REVERT"
    },
    "19288": {
      "op": "JUMPDEST"
    },
    "19289": {
      "op": "DUP6"
    },
    "19290": {
      "op": "CALLDATALOAD"
    },
    "19291": {
      "op": "PUSH2",
      "value": "0x4B63"
    },
    "19294": {
      "op": "DUP2"
    },
    "19295": {
      "op": "PUSH2",
      "value": "0x442E"
    },
    "19298": {
      "jump": "i",
      "op": "JUMP"
    },
    "19299": {
      "op": "JUMPDEST"
    },
    "19300": {
      "op": "SWAP5"
    },
    "19301": {
      "op": "POP"
    },
    "19302": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "19304": {
      "op": "DUP7"
    },
    "19305": {
      "op": "ADD"
    },
    "19306": {
      "op": "CALLDATALOAD"
    },
    "19307": {
      "op": "PUSH2",
      "value": "0x4B73"
    },
    "19310": {
      "op": "DUP2"
    },
    "19311": {
      "op": "PUSH2",
      "value": "0x442E"
    },
    "19314": {
      "jump": "i",
      "op": "JUMP"
    },
    "19315": {
      "op": "JUMPDEST"
    },
    "19316": {
      "op": "SWAP4"
    },
    "19317": {
      "op": "POP"
    },
    "19318": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "19320": {
      "op": "DUP7"
    },
    "19321": {
      "op": "ADD"
    },
    "19322": {
      "op": "CALLDATALOAD"
    },
    "19323": {
      "op": "SWAP3"
    },
    "19324": {
      "op": "POP"
    },
    "19325": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "19327": {
      "op": "DUP7"
    },
    "19328": {
      "op": "ADD"
    },
    "19329": {
      "op": "CALLDATALOAD"
    },
    "19330": {
      "op": "SWAP2"
    },
    "19331": {
      "op": "POP"
    },
    "19332": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "19334": {
      "op": "DUP7"
    },
    "19335": {
      "op": "ADD"
    },
    "19336": {
      "op": "CALLDATALOAD"
    },
    "19337": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "19339": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "19341": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "19343": {
      "op": "SHL"
    },
    "19344": {
      "op": "SUB"
    },
    "19345": {
      "op": "DUP2"
    },
    "19346": {
      "op": "GT"
    },
    "19347": {
      "op": "ISZERO"
    },
    "19348": {
      "op": "PUSH2",
      "value": "0x4B9C"
    },
    "19351": {
      "op": "JUMPI"
    },
    "19352": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "19354": {
      "op": "DUP1"
    },
    "19355": {
      "op": "REVERT"
    },
    "19356": {
      "op": "JUMPDEST"
    },
    "19357": {
      "op": "PUSH2",
      "value": "0x47AA"
    },
    "19360": {
      "op": "DUP9"
    },
    "19361": {
      "op": "DUP3"
    },
    "19362": {
      "op": "DUP10"
    },
    "19363": {
      "op": "ADD"
    },
    "19364": {
      "op": "PUSH2",
      "value": "0x46EA"
    },
    "19367": {
      "jump": "i",
      "op": "JUMP"
    },
    "19368": {
      "op": "JUMPDEST"
    },
    "19369": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "19371": {
      "op": "DUP1"
    },
    "19372": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "19374": {
      "op": "DUP4"
    },
    "19375": {
      "op": "DUP6"
    },
    "19376": {
      "op": "SUB"
    },
    "19377": {
      "op": "SLT"
    },
    "19378": {
      "op": "ISZERO"
    },
    "19379": {
      "op": "PUSH2",
      "value": "0x4BBB"
    },
    "19382": {
      "op": "JUMPI"
    },
    "19383": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "19385": {
      "op": "DUP1"
    },
    "19386": {
      "op": "REVERT"
    },
    "19387": {
      "op": "JUMPDEST"
    },
    "19388": {
      "op": "POP"
    },
    "19389": {
      "op": "POP"
    },
    "19390": {
      "op": "DUP1"
    },
    "19391": {
      "op": "MLOAD"
    },
    "19392": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "19394": {
      "op": "SWAP1"
    },
    "19395": {
      "op": "SWAP2"
    },
    "19396": {
      "op": "ADD"
    },
    "19397": {
      "op": "MLOAD"
    },
    "19398": {
      "op": "SWAP1"
    },
    "19399": {
      "op": "SWAP3"
    },
    "19400": {
      "op": "SWAP1"
    },
    "19401": {
      "op": "SWAP2"
    },
    "19402": {
      "op": "POP"
    },
    "19403": {
      "jump": "o",
      "op": "JUMP"
    },
    "19404": {
      "op": "JUMPDEST"
    },
    "19405": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "19407": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "19409": {
      "op": "DUP3"
    },
    "19410": {
      "op": "DUP5"
    },
    "19411": {
      "op": "SUB"
    },
    "19412": {
      "op": "SLT"
    },
    "19413": {
      "op": "ISZERO"
    },
    "19414": {
      "op": "PUSH2",
      "value": "0x4BDE"
    },
    "19417": {
      "op": "JUMPI"
    },
    "19418": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "19420": {
      "op": "DUP1"
    },
    "19421": {
      "op": "REVERT"
    },
    "19422": {
      "op": "JUMPDEST"
    },
    "19423": {
      "op": "DUP2"
    },
    "19424": {
      "op": "MLOAD"
    },
    "19425": {
      "op": "PUSH2",
      "value": "0x44A2"
    },
    "19428": {
      "op": "DUP2"
    },
    "19429": {
      "op": "PUSH2",
      "value": "0x47B7"
    },
    "19432": {
      "jump": "i",
      "op": "JUMP"
    },
    "19433": {
      "op": "JUMPDEST"
    },
    "19434": {
      "op": "SWAP5"
    },
    "19435": {
      "op": "DUP6"
    },
    "19436": {
      "op": "MSTORE"
    },
    "19437": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "19439": {
      "op": "DUP6"
    },
    "19440": {
      "op": "ADD"
    },
    "19441": {
      "op": "SWAP4"
    },
    "19442": {
      "op": "SWAP1"
    },
    "19443": {
      "op": "SWAP4"
    },
    "19444": {
      "op": "MSTORE"
    },
    "19445": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "19447": {
      "op": "DUP5"
    },
    "19448": {
      "op": "ADD"
    },
    "19449": {
      "op": "SWAP2"
    },
    "19450": {
      "op": "SWAP1"
    },
    "19451": {
      "op": "SWAP2"
    },
    "19452": {
      "op": "MSTORE"
    },
    "19453": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "19455": {
      "op": "DUP4"
    },
    "19456": {
      "op": "ADD"
    },
    "19457": {
      "op": "MSTORE"
    },
    "19458": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "19460": {
      "op": "DUP3"
    },
    "19461": {
      "op": "ADD"
    },
    "19462": {
      "op": "MSTORE"
    },
    "19463": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "19465": {
      "op": "ADD"
    },
    "19466": {
      "op": "SWAP1"
    },
    "19467": {
      "jump": "o",
      "op": "JUMP"
    },
    "19468": {
      "op": "JUMPDEST"
    },
    "19469": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "19471": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "19473": {
      "op": "DUP3"
    },
    "19474": {
      "op": "DUP5"
    },
    "19475": {
      "op": "SUB"
    },
    "19476": {
      "op": "SLT"
    },
    "19477": {
      "op": "ISZERO"
    },
    "19478": {
      "op": "PUSH2",
      "value": "0x4C1E"
    },
    "19481": {
      "op": "JUMPI"
    },
    "19482": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "19484": {
      "op": "DUP1"
    },
    "19485": {
      "op": "REVERT"
    },
    "19486": {
      "op": "JUMPDEST"
    },
    "19487": {
      "op": "DUP2"
    },
    "19488": {
      "op": "MLOAD"
    },
    "19489": {
      "op": "PUSH2",
      "value": "0x44A2"
    },
    "19492": {
      "op": "DUP2"
    },
    "19493": {
      "op": "PUSH2",
      "value": "0x442E"
    },
    "19496": {
      "jump": "i",
      "op": "JUMP"
    },
    "19497": {
      "op": "JUMPDEST"
    },
    "19498": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "19500": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "19502": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "19504": {
      "op": "SHL"
    },
    "19505": {
      "op": "SUB"
    },
    "19506": {
      "op": "SWAP5"
    },
    "19507": {
      "op": "SWAP1"
    },
    "19508": {
      "op": "SWAP5"
    },
    "19509": {
      "op": "AND"
    },
    "19510": {
      "op": "DUP5"
    },
    "19511": {
      "op": "MSTORE"
    },
    "19512": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "19514": {
      "op": "DUP5"
    },
    "19515": {
      "op": "ADD"
    },
    "19516": {
      "op": "SWAP3"
    },
    "19517": {
      "op": "SWAP1"
    },
    "19518": {
      "op": "SWAP3"
    },
    "19519": {
      "op": "MSTORE"
    },
    "19520": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "19522": {
      "op": "DUP4"
    },
    "19523": {
      "op": "ADD"
    },
    "19524": {
      "op": "MSTORE"
    },
    "19525": {
      "op": "ISZERO"
    },
    "19526": {
      "op": "ISZERO"
    },
    "19527": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "19529": {
      "op": "DUP3"
    },
    "19530": {
      "op": "ADD"
    },
    "19531": {
      "op": "MSTORE"
    },
    "19532": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "19534": {
      "op": "ADD"
    },
    "19535": {
      "op": "SWAP1"
    },
    "19536": {
      "jump": "o",
      "op": "JUMP"
    },
    "19537": {
      "op": "JUMPDEST"
    },
    "19538": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "19540": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "19542": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "19544": {
      "op": "SHL"
    },
    "19545": {
      "op": "SUB"
    },
    "19546": {
      "op": "SWAP4"
    },
    "19547": {
      "op": "SWAP1"
    },
    "19548": {
      "op": "SWAP4"
    },
    "19549": {
      "op": "AND"
    },
    "19550": {
      "op": "DUP4"
    },
    "19551": {
      "op": "MSTORE"
    },
    "19552": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "19554": {
      "op": "DUP4"
    },
    "19555": {
      "op": "ADD"
    },
    "19556": {
      "op": "SWAP2"
    },
    "19557": {
      "op": "SWAP1"
    },
    "19558": {
      "op": "SWAP2"
    },
    "19559": {
      "op": "MSTORE"
    },
    "19560": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "19562": {
      "op": "DUP3"
    },
    "19563": {
      "op": "ADD"
    },
    "19564": {
      "op": "MSTORE"
    },
    "19565": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "19567": {
      "op": "ADD"
    },
    "19568": {
      "op": "SWAP1"
    },
    "19569": {
      "jump": "o",
      "op": "JUMP"
    },
    "19570": {
      "op": "JUMPDEST"
    },
    "19571": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "19573": {
      "op": "DUP1"
    },
    "19574": {
      "op": "DUP3"
    },
    "19575": {
      "op": "MSTORE"
    },
    "19576": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "19578": {
      "op": "SWAP1"
    },
    "19579": {
      "op": "DUP3"
    },
    "19580": {
      "op": "ADD"
    },
    "19581": {
      "op": "MSTORE"
    },
    "19582": {
      "op": "PUSH18",
      "value": "0x2CB7BA9031B0B713BA103237903A3430BA17"
    },
    "19601": {
      "op": "PUSH1",
      "value": "0x71"
    },
    "19603": {
      "op": "SHL"
    },
    "19604": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "19606": {
      "op": "DUP3"
    },
    "19607": {
      "op": "ADD"
    },
    "19608": {
      "op": "MSTORE"
    },
    "19609": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "19611": {
      "op": "ADD"
    },
    "19612": {
      "op": "SWAP1"
    },
    "19613": {
      "jump": "o",
      "op": "JUMP"
    },
    "19614": {
      "op": "JUMPDEST"
    },
    "19615": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "19617": {
      "op": "DUP2"
    },
    "19618": {
      "op": "DUP2"
    },
    "19619": {
      "op": "SHR"
    },
    "19620": {
      "op": "SWAP1"
    },
    "19621": {
      "op": "DUP3"
    },
    "19622": {
      "op": "AND"
    },
    "19623": {
      "op": "DUP1"
    },
    "19624": {
      "op": "PUSH2",
      "value": "0x4CB2"
    },
    "19627": {
      "op": "JUMPI"
    },
    "19628": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "19630": {
      "op": "DUP3"
    },
    "19631": {
      "op": "AND"
    },
    "19632": {
      "op": "SWAP2"
    },
    "19633": {
      "op": "POP"
    },
    "19634": {
      "op": "JUMPDEST"
    },
    "19635": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "19637": {
      "op": "DUP3"
    },
    "19638": {
      "op": "LT"
    },
    "19639": {
      "op": "DUP2"
    },
    "19640": {
      "op": "SUB"
    },
    "19641": {
      "op": "PUSH2",
      "value": "0x4CD2"
    },
    "19644": {
      "op": "JUMPI"
    },
    "19645": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "19650": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "19652": {
      "op": "SHL"
    },
    "19653": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "19655": {
      "op": "MSTORE"
    },
    "19656": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "19658": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "19660": {
      "op": "MSTORE"
    },
    "19661": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "19663": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "19665": {
      "op": "REVERT"
    },
    "19666": {
      "op": "JUMPDEST"
    },
    "19667": {
      "op": "POP"
    },
    "19668": {
      "op": "SWAP2"
    },
    "19669": {
      "op": "SWAP1"
    },
    "19670": {
      "op": "POP"
    },
    "19671": {
      "jump": "o",
      "op": "JUMP"
    },
    "19672": {
      "op": "JUMPDEST"
    },
    "19673": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "19675": {
      "op": "DUP2"
    },
    "19676": {
      "op": "DUP4"
    },
    "19677": {
      "op": "SUB"
    },
    "19678": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "19680": {
      "op": "DUP2"
    },
    "19681": {
      "op": "SLT"
    },
    "19682": {
      "op": "ISZERO"
    },
    "19683": {
      "op": "PUSH2",
      "value": "0x4CEB"
    },
    "19686": {
      "op": "JUMPI"
    },
    "19687": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "19689": {
      "op": "DUP1"
    },
    "19690": {
      "op": "REVERT"
    },
    "19691": {
      "op": "JUMPDEST"
    },
    "19692": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "19694": {
      "op": "MLOAD"
    },
    "19695": {
      "op": "PUSH2",
      "value": "0x4CF7"
    },
    "19698": {
      "op": "DUP2"
    },
    "19699": {
      "op": "PUSH2",
      "value": "0x45A8"
    },
    "19702": {
      "jump": "i",
      "op": "JUMP"
    },
    "19703": {
      "op": "JUMPDEST"
    },
    "19704": {
      "op": "DUP4"
    },
    "19705": {
      "op": "MLOAD"
    },
    "19706": {
      "op": "DUP2"
    },
    "19707": {
      "op": "MSTORE"
    },
    "19708": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "19710": {
      "op": "DUP5"
    },
    "19711": {
      "op": "ADD"
    },
    "19712": {
      "op": "MLOAD"
    },
    "19713": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "19715": {
      "op": "DUP3"
    },
    "19716": {
      "op": "ADD"
    },
    "19717": {
      "op": "MSTORE"
    },
    "19718": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "19720": {
      "op": "DUP5"
    },
    "19721": {
      "op": "ADD"
    },
    "19722": {
      "op": "MLOAD"
    },
    "19723": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "19725": {
      "op": "DUP3"
    },
    "19726": {
      "op": "ADD"
    },
    "19727": {
      "op": "MSTORE"
    },
    "19728": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "19730": {
      "op": "DUP5"
    },
    "19731": {
      "op": "ADD"
    },
    "19732": {
      "op": "MLOAD"
    },
    "19733": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "19735": {
      "op": "DUP3"
    },
    "19736": {
      "op": "ADD"
    },
    "19737": {
      "op": "MSTORE"
    },
    "19738": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "19740": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "19742": {
      "op": "NOT"
    },
    "19743": {
      "op": "DUP4"
    },
    "19744": {
      "op": "ADD"
    },
    "19745": {
      "op": "SLT"
    },
    "19746": {
      "op": "ISZERO"
    },
    "19747": {
      "op": "PUSH2",
      "value": "0x4D2B"
    },
    "19750": {
      "op": "JUMPI"
    },
    "19751": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "19753": {
      "op": "DUP1"
    },
    "19754": {
      "op": "REVERT"
    },
    "19755": {
      "op": "JUMPDEST"
    },
    "19756": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "19758": {
      "op": "MLOAD"
    },
    "19759": {
      "op": "SWAP2"
    },
    "19760": {
      "op": "POP"
    },
    "19761": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "19763": {
      "op": "DUP3"
    },
    "19764": {
      "op": "ADD"
    },
    "19765": {
      "op": "DUP3"
    },
    "19766": {
      "op": "DUP2"
    },
    "19767": {
      "op": "LT"
    },
    "19768": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "19770": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "19772": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "19774": {
      "op": "SHL"
    },
    "19775": {
      "op": "SUB"
    },
    "19776": {
      "op": "DUP3"
    },
    "19777": {
      "op": "GT"
    },
    "19778": {
      "op": "OR"
    },
    "19779": {
      "op": "ISZERO"
    },
    "19780": {
      "op": "PUSH2",
      "value": "0x4D4F"
    },
    "19783": {
      "op": "JUMPI"
    },
    "19784": {
      "op": "PUSH2",
      "value": "0x4D4F"
    },
    "19787": {
      "op": "PUSH2",
      "value": "0x4592"
    },
    "19790": {
      "jump": "i",
      "op": "JUMP"
    },
    "19791": {
      "op": "JUMPDEST"
    },
    "19792": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "19794": {
      "op": "MSTORE"
    },
    "19795": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "19797": {
      "op": "DUP5"
    },
    "19798": {
      "op": "DUP2"
    },
    "19799": {
      "op": "ADD"
    },
    "19800": {
      "op": "MLOAD"
    },
    "19801": {
      "op": "DUP4"
    },
    "19802": {
      "op": "MSTORE"
    },
    "19803": {
      "op": "DUP2"
    },
    "19804": {
      "op": "ADD"
    },
    "19805": {
      "op": "SWAP2"
    },
    "19806": {
      "op": "SWAP1"
    },
    "19807": {
      "op": "SWAP2"
    },
    "19808": {
      "op": "MSTORE"
    },
    "19809": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "19811": {
      "op": "SWAP3"
    },
    "19812": {
      "op": "DUP4"
    },
    "19813": {
      "op": "ADD"
    },
    "19814": {
      "op": "MLOAD"
    },
    "19815": {
      "op": "SWAP3"
    },
    "19816": {
      "op": "DUP2"
    },
    "19817": {
      "op": "ADD"
    },
    "19818": {
      "op": "SWAP3"
    },
    "19819": {
      "op": "SWAP1"
    },
    "19820": {
      "op": "SWAP3"
    },
    "19821": {
      "op": "MSTORE"
    },
    "19822": {
      "op": "POP"
    },
    "19823": {
      "op": "SWAP2"
    },
    "19824": {
      "op": "SWAP1"
    },
    "19825": {
      "op": "POP"
    },
    "19826": {
      "jump": "o",
      "op": "JUMP"
    },
    "19827": {
      "op": "JUMPDEST"
    },
    "19828": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "19830": {
      "op": "DUP1"
    },
    "19831": {
      "op": "DUP3"
    },
    "19832": {
      "op": "MSTORE"
    },
    "19833": {
      "op": "PUSH1",
      "value": "0xD"
    },
    "19835": {
      "op": "SWAP1"
    },
    "19836": {
      "op": "DUP3"
    },
    "19837": {
      "op": "ADD"
    },
    "19838": {
      "op": "MSTORE"
    },
    "19839": {
      "op": "PUSH13",
      "value": "0x2CB7BA9030B932903232B0B217"
    },
    "19853": {
      "op": "PUSH1",
      "value": "0x99"
    },
    "19855": {
      "op": "SHL"
    },
    "19856": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "19858": {
      "op": "DUP3"
    },
    "19859": {
      "op": "ADD"
    },
    "19860": {
      "op": "MSTORE"
    },
    "19861": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "19863": {
      "op": "ADD"
    },
    "19864": {
      "op": "SWAP1"
    },
    "19865": {
      "jump": "o",
      "op": "JUMP"
    },
    "19866": {
      "op": "JUMPDEST"
    },
    "19867": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "19872": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "19874": {
      "op": "SHL"
    },
    "19875": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "19877": {
      "op": "MSTORE"
    },
    "19878": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "19880": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "19882": {
      "op": "MSTORE"
    },
    "19883": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "19885": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "19887": {
      "op": "REVERT"
    },
    "19888": {
      "op": "JUMPDEST"
    },
    "19889": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "19891": {
      "op": "DUP2"
    },
    "19892": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "19894": {
      "op": "NOT"
    },
    "19895": {
      "op": "DIV"
    },
    "19896": {
      "op": "DUP4"
    },
    "19897": {
      "op": "GT"
    },
    "19898": {
      "op": "DUP3"
    },
    "19899": {
      "op": "ISZERO"
    },
    "19900": {
      "op": "ISZERO"
    },
    "19901": {
      "op": "AND"
    },
    "19902": {
      "op": "ISZERO"
    },
    "19903": {
      "op": "PUSH2",
      "value": "0x4DCA"
    },
    "19906": {
      "op": "JUMPI"
    },
    "19907": {
      "op": "PUSH2",
      "value": "0x4DCA"
    },
    "19910": {
      "op": "PUSH2",
      "value": "0x4D9A"
    },
    "19913": {
      "jump": "i",
      "op": "JUMP"
    },
    "19914": {
      "op": "JUMPDEST"
    },
    "19915": {
      "op": "POP"
    },
    "19916": {
      "op": "MUL"
    },
    "19917": {
      "op": "SWAP1"
    },
    "19918": {
      "jump": "o",
      "op": "JUMP"
    },
    "19919": {
      "op": "JUMPDEST"
    },
    "19920": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "19925": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "19927": {
      "op": "SHL"
    },
    "19928": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "19930": {
      "op": "MSTORE"
    },
    "19931": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "19933": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "19935": {
      "op": "MSTORE"
    },
    "19936": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "19938": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "19940": {
      "op": "REVERT"
    },
    "19941": {
      "op": "JUMPDEST"
    },
    "19942": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "19944": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "19946": {
      "op": "DUP3"
    },
    "19947": {
      "op": "ADD"
    },
    "19948": {
      "op": "PUSH2",
      "value": "0x4DF7"
    },
    "19951": {
      "op": "JUMPI"
    },
    "19952": {
      "op": "PUSH2",
      "value": "0x4DF7"
    },
    "19955": {
      "op": "PUSH2",
      "value": "0x4D9A"
    },
    "19958": {
      "jump": "i",
      "op": "JUMP"
    },
    "19959": {
      "op": "JUMPDEST"
    },
    "19960": {
      "op": "POP"
    },
    "19961": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "19963": {
      "op": "ADD"
    },
    "19964": {
      "op": "SWAP1"
    },
    "19965": {
      "jump": "o",
      "op": "JUMP"
    },
    "19966": {
      "op": "JUMPDEST"
    },
    "19967": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "19969": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "19971": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "19973": {
      "op": "SHL"
    },
    "19974": {
      "op": "SUB"
    },
    "19975": {
      "op": "SWAP5"
    },
    "19976": {
      "op": "SWAP1"
    },
    "19977": {
      "op": "SWAP5"
    },
    "19978": {
      "op": "AND"
    },
    "19979": {
      "op": "DUP5"
    },
    "19980": {
      "op": "MSTORE"
    },
    "19981": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "19983": {
      "op": "DUP5"
    },
    "19984": {
      "op": "ADD"
    },
    "19985": {
      "op": "SWAP3"
    },
    "19986": {
      "op": "SWAP1"
    },
    "19987": {
      "op": "SWAP3"
    },
    "19988": {
      "op": "MSTORE"
    },
    "19989": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "19991": {
      "op": "DUP4"
    },
    "19992": {
      "op": "ADD"
    },
    "19993": {
      "op": "MSTORE"
    },
    "19994": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "19996": {
      "op": "DUP3"
    },
    "19997": {
      "op": "ADD"
    },
    "19998": {
      "op": "MSTORE"
    },
    "19999": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "20001": {
      "op": "ADD"
    },
    "20002": {
      "op": "SWAP1"
    },
    "20003": {
      "jump": "o",
      "op": "JUMP"
    },
    "20004": {
      "op": "JUMPDEST"
    },
    "20005": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "20007": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "20009": {
      "op": "DUP3"
    },
    "20010": {
      "op": "DUP5"
    },
    "20011": {
      "op": "SUB"
    },
    "20012": {
      "op": "SLT"
    },
    "20013": {
      "op": "ISZERO"
    },
    "20014": {
      "op": "PUSH2",
      "value": "0x4E36"
    },
    "20017": {
      "op": "JUMPI"
    },
    "20018": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "20020": {
      "op": "DUP1"
    },
    "20021": {
      "op": "REVERT"
    },
    "20022": {
      "op": "JUMPDEST"
    },
    "20023": {
      "op": "POP"
    },
    "20024": {
      "op": "MLOAD"
    },
    "20025": {
      "op": "SWAP2"
    },
    "20026": {
      "op": "SWAP1"
    },
    "20027": {
      "op": "POP"
    },
    "20028": {
      "jump": "o",
      "op": "JUMP"
    },
    "20029": {
      "op": "JUMPDEST"
    },
    "20030": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "20032": {
      "op": "DUP1"
    },
    "20033": {
      "op": "DUP3"
    },
    "20034": {
      "op": "MSTORE"
    },
    "20035": {
      "op": "PUSH1",
      "value": "0x29"
    },
    "20037": {
      "op": "SWAP1"
    },
    "20038": {
      "op": "DUP3"
    },
    "20039": {
      "op": "ADD"
    },
    "20040": {
      "op": "MSTORE"
    },
    "20041": {
      "op": "PUSH32",
      "value": "0x455243313135353A2063616C6C6572206973206E6F74206F776E6572206E6F72"
    },
    "20074": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "20076": {
      "op": "DUP3"
    },
    "20077": {
      "op": "ADD"
    },
    "20078": {
      "op": "MSTORE"
    },
    "20079": {
      "op": "PUSH9",
      "value": "0x8185C1C1C9BDD9959"
    },
    "20089": {
      "op": "PUSH1",
      "value": "0xBA"
    },
    "20091": {
      "op": "SHL"
    },
    "20092": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "20094": {
      "op": "DUP3"
    },
    "20095": {
      "op": "ADD"
    },
    "20096": {
      "op": "MSTORE"
    },
    "20097": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "20099": {
      "op": "ADD"
    },
    "20100": {
      "op": "SWAP1"
    },
    "20101": {
      "jump": "o",
      "op": "JUMP"
    },
    "20102": {
      "op": "JUMPDEST"
    },
    "20103": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "20105": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "20107": {
      "op": "DUP3"
    },
    "20108": {
      "op": "DUP5"
    },
    "20109": {
      "op": "SUB"
    },
    "20110": {
      "op": "SLT"
    },
    "20111": {
      "op": "ISZERO"
    },
    "20112": {
      "op": "PUSH2",
      "value": "0x4E98"
    },
    "20115": {
      "op": "JUMPI"
    },
    "20116": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "20118": {
      "op": "DUP1"
    },
    "20119": {
      "op": "REVERT"
    },
    "20120": {
      "op": "JUMPDEST"
    },
    "20121": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "20123": {
      "op": "MLOAD"
    },
    "20124": {
      "op": "PUSH2",
      "value": "0x4EA4"
    },
    "20127": {
      "op": "DUP2"
    },
    "20128": {
      "op": "PUSH2",
      "value": "0x45A8"
    },
    "20131": {
      "jump": "i",
      "op": "JUMP"
    },
    "20132": {
      "op": "JUMPDEST"
    },
    "20133": {
      "op": "DUP3"
    },
    "20134": {
      "op": "MLOAD"
    },
    "20135": {
      "op": "DUP2"
    },
    "20136": {
      "op": "MSTORE"
    },
    "20137": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "20139": {
      "op": "DUP4"
    },
    "20140": {
      "op": "ADD"
    },
    "20141": {
      "op": "MLOAD"
    },
    "20142": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "20144": {
      "op": "DUP3"
    },
    "20145": {
      "op": "ADD"
    },
    "20146": {
      "op": "MSTORE"
    },
    "20147": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "20149": {
      "op": "DUP4"
    },
    "20150": {
      "op": "ADD"
    },
    "20151": {
      "op": "MLOAD"
    },
    "20152": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "20154": {
      "op": "DUP3"
    },
    "20155": {
      "op": "ADD"
    },
    "20156": {
      "op": "MSTORE"
    },
    "20157": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "20159": {
      "op": "DUP4"
    },
    "20160": {
      "op": "ADD"
    },
    "20161": {
      "op": "MLOAD"
    },
    "20162": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "20164": {
      "op": "DUP3"
    },
    "20165": {
      "op": "ADD"
    },
    "20166": {
      "op": "MSTORE"
    },
    "20167": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "20169": {
      "op": "DUP4"
    },
    "20170": {
      "op": "ADD"
    },
    "20171": {
      "op": "MLOAD"
    },
    "20172": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "20174": {
      "op": "DUP3"
    },
    "20175": {
      "op": "ADD"
    },
    "20176": {
      "op": "MSTORE"
    },
    "20177": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "20179": {
      "op": "DUP4"
    },
    "20180": {
      "op": "ADD"
    },
    "20181": {
      "op": "MLOAD"
    },
    "20182": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "20184": {
      "op": "DUP3"
    },
    "20185": {
      "op": "ADD"
    },
    "20186": {
      "op": "MSTORE"
    },
    "20187": {
      "op": "DUP1"
    },
    "20188": {
      "op": "SWAP2"
    },
    "20189": {
      "op": "POP"
    },
    "20190": {
      "op": "POP"
    },
    "20191": {
      "op": "SWAP3"
    },
    "20192": {
      "op": "SWAP2"
    },
    "20193": {
      "op": "POP"
    },
    "20194": {
      "op": "POP"
    },
    "20195": {
      "jump": "o",
      "op": "JUMP"
    },
    "20196": {
      "op": "JUMPDEST"
    },
    "20197": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "20199": {
      "op": "DUP3"
    },
    "20200": {
      "op": "PUSH2",
      "value": "0x4F01"
    },
    "20203": {
      "op": "JUMPI"
    },
    "20204": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "20209": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "20211": {
      "op": "SHL"
    },
    "20212": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "20214": {
      "op": "MSTORE"
    },
    "20215": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "20217": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "20219": {
      "op": "MSTORE"
    },
    "20220": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "20222": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "20224": {
      "op": "REVERT"
    },
    "20225": {
      "op": "JUMPDEST"
    },
    "20226": {
      "op": "POP"
    },
    "20227": {
      "op": "DIV"
    },
    "20228": {
      "op": "SWAP1"
    },
    "20229": {
      "jump": "o",
      "op": "JUMP"
    },
    "20230": {
      "op": "JUMPDEST"
    },
    "20231": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "20233": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "20235": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "20237": {
      "op": "SHL"
    },
    "20238": {
      "op": "SUB"
    },
    "20239": {
      "op": "SWAP6"
    },
    "20240": {
      "op": "SWAP1"
    },
    "20241": {
      "op": "SWAP6"
    },
    "20242": {
      "op": "AND"
    },
    "20243": {
      "op": "DUP6"
    },
    "20244": {
      "op": "MSTORE"
    },
    "20245": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "20247": {
      "op": "DUP6"
    },
    "20248": {
      "op": "ADD"
    },
    "20249": {
      "op": "SWAP4"
    },
    "20250": {
      "op": "SWAP1"
    },
    "20251": {
      "op": "SWAP4"
    },
    "20252": {
      "op": "MSTORE"
    },
    "20253": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "20255": {
      "op": "DUP5"
    },
    "20256": {
      "op": "ADD"
    },
    "20257": {
      "op": "SWAP2"
    },
    "20258": {
      "op": "SWAP1"
    },
    "20259": {
      "op": "SWAP2"
    },
    "20260": {
      "op": "MSTORE"
    },
    "20261": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "20263": {
      "op": "DUP4"
    },
    "20264": {
      "op": "ADD"
    },
    "20265": {
      "op": "MSTORE"
    },
    "20266": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "20268": {
      "op": "DUP3"
    },
    "20269": {
      "op": "ADD"
    },
    "20270": {
      "op": "MSTORE"
    },
    "20271": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "20273": {
      "op": "ADD"
    },
    "20274": {
      "op": "SWAP1"
    },
    "20275": {
      "jump": "o",
      "op": "JUMP"
    },
    "20276": {
      "op": "JUMPDEST"
    },
    "20277": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "20279": {
      "op": "DUP1"
    },
    "20280": {
      "op": "DUP3"
    },
    "20281": {
      "op": "MSTORE"
    },
    "20282": {
      "op": "PUSH1",
      "value": "0x23"
    },
    "20284": {
      "op": "SWAP1"
    },
    "20285": {
      "op": "DUP3"
    },
    "20286": {
      "op": "ADD"
    },
    "20287": {
      "op": "MSTORE"
    },
    "20288": {
      "op": "PUSH32",
      "value": "0x455243313135353A206275726E2066726F6D20746865207A65726F2061646472"
    },
    "20321": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "20323": {
      "op": "DUP3"
    },
    "20324": {
      "op": "ADD"
    },
    "20325": {
      "op": "MSTORE"
    },
    "20326": {
      "op": "PUSH3",
      "value": "0x657373"
    },
    "20330": {
      "op": "PUSH1",
      "value": "0xE8"
    },
    "20332": {
      "op": "SHL"
    },
    "20333": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "20335": {
      "op": "DUP3"
    },
    "20336": {
      "op": "ADD"
    },
    "20337": {
      "op": "MSTORE"
    },
    "20338": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "20340": {
      "op": "ADD"
    },
    "20341": {
      "op": "SWAP1"
    },
    "20342": {
      "jump": "o",
      "op": "JUMP"
    },
    "20343": {
      "op": "JUMPDEST"
    },
    "20344": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "20346": {
      "op": "DUP1"
    },
    "20347": {
      "op": "DUP3"
    },
    "20348": {
      "op": "MSTORE"
    },
    "20349": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "20351": {
      "op": "SWAP1"
    },
    "20352": {
      "op": "DUP3"
    },
    "20353": {
      "op": "ADD"
    },
    "20354": {
      "op": "MSTORE"
    },
    "20355": {
      "op": "PUSH32",
      "value": "0x455243313135353A206275726E20616D6F756E7420657863656564732062616C"
    },
    "20388": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "20390": {
      "op": "DUP3"
    },
    "20391": {
      "op": "ADD"
    },
    "20392": {
      "op": "MSTORE"
    },
    "20393": {
      "op": "PUSH4",
      "value": "0x616E6365"
    },
    "20398": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "20400": {
      "op": "SHL"
    },
    "20401": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "20403": {
      "op": "DUP3"
    },
    "20404": {
      "op": "ADD"
    },
    "20405": {
      "op": "MSTORE"
    },
    "20406": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "20408": {
      "op": "ADD"
    },
    "20409": {
      "op": "SWAP1"
    },
    "20410": {
      "jump": "o",
      "op": "JUMP"
    },
    "20411": {
      "op": "JUMPDEST"
    },
    "20412": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "20414": {
      "op": "DUP1"
    },
    "20415": {
      "op": "DUP3"
    },
    "20416": {
      "op": "MSTORE"
    },
    "20417": {
      "op": "PUSH1",
      "value": "0x28"
    },
    "20419": {
      "op": "SWAP1"
    },
    "20420": {
      "op": "DUP3"
    },
    "20421": {
      "op": "ADD"
    },
    "20422": {
      "op": "MSTORE"
    },
    "20423": {
      "op": "PUSH32",
      "value": "0x455243313135353A2069647320616E6420616D6F756E7473206C656E67746820"
    },
    "20456": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "20458": {
      "op": "DUP3"
    },
    "20459": {
      "op": "ADD"
    },
    "20460": {
      "op": "MSTORE"
    },
    "20461": {
      "op": "PUSH8",
      "value": "0xDAD2E6DAC2E8C6D"
    },
    "20470": {
      "op": "PUSH1",
      "value": "0xC3"
    },
    "20472": {
      "op": "SHL"
    },
    "20473": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "20475": {
      "op": "DUP3"
    },
    "20476": {
      "op": "ADD"
    },
    "20477": {
      "op": "MSTORE"
    },
    "20478": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "20480": {
      "op": "ADD"
    },
    "20481": {
      "op": "SWAP1"
    },
    "20482": {
      "jump": "o",
      "op": "JUMP"
    },
    "20483": {
      "op": "JUMPDEST"
    },
    "20484": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "20486": {
      "op": "DUP1"
    },
    "20487": {
      "op": "DUP3"
    },
    "20488": {
      "op": "MSTORE"
    },
    "20489": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "20491": {
      "op": "SWAP1"
    },
    "20492": {
      "op": "DUP3"
    },
    "20493": {
      "op": "ADD"
    },
    "20494": {
      "op": "MSTORE"
    },
    "20495": {
      "op": "PUSH32",
      "value": "0x455243313135353A207472616E7366657220746F20746865207A65726F206164"
    },
    "20528": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "20530": {
      "op": "DUP3"
    },
    "20531": {
      "op": "ADD"
    },
    "20532": {
      "op": "MSTORE"
    },
    "20533": {
      "op": "PUSH5",
      "value": "0x6472657373"
    },
    "20539": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "20541": {
      "op": "SHL"
    },
    "20542": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "20544": {
      "op": "DUP3"
    },
    "20545": {
      "op": "ADD"
    },
    "20546": {
      "op": "MSTORE"
    },
    "20547": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "20549": {
      "op": "ADD"
    },
    "20550": {
      "op": "SWAP1"
    },
    "20551": {
      "jump": "o",
      "op": "JUMP"
    },
    "20552": {
      "op": "JUMPDEST"
    },
    "20553": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "20555": {
      "op": "DUP1"
    },
    "20556": {
      "op": "DUP3"
    },
    "20557": {
      "op": "MSTORE"
    },
    "20558": {
      "op": "PUSH1",
      "value": "0x2A"
    },
    "20560": {
      "op": "SWAP1"
    },
    "20561": {
      "op": "DUP3"
    },
    "20562": {
      "op": "ADD"
    },
    "20563": {
      "op": "MSTORE"
    },
    "20564": {
      "op": "PUSH32",
      "value": "0x455243313135353A20696E73756666696369656E742062616C616E636520666F"
    },
    "20597": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "20599": {
      "op": "DUP3"
    },
    "20600": {
      "op": "ADD"
    },
    "20601": {
      "op": "MSTORE"
    },
    "20602": {
      "op": "PUSH10",
      "value": "0x39103A3930B739B332B9"
    },
    "20613": {
      "op": "PUSH1",
      "value": "0xB1"
    },
    "20615": {
      "op": "SHL"
    },
    "20616": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "20618": {
      "op": "DUP3"
    },
    "20619": {
      "op": "ADD"
    },
    "20620": {
      "op": "MSTORE"
    },
    "20621": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "20623": {
      "op": "ADD"
    },
    "20624": {
      "op": "SWAP1"
    },
    "20625": {
      "jump": "o",
      "op": "JUMP"
    },
    "20626": {
      "op": "JUMPDEST"
    },
    "20627": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "20629": {
      "op": "DUP3"
    },
    "20630": {
      "op": "NOT"
    },
    "20631": {
      "op": "DUP3"
    },
    "20632": {
      "op": "GT"
    },
    "20633": {
      "op": "ISZERO"
    },
    "20634": {
      "op": "PUSH2",
      "value": "0x50A5"
    },
    "20637": {
      "op": "JUMPI"
    },
    "20638": {
      "op": "PUSH2",
      "value": "0x50A5"
    },
    "20641": {
      "op": "PUSH2",
      "value": "0x4D9A"
    },
    "20644": {
      "jump": "i",
      "op": "JUMP"
    },
    "20645": {
      "op": "JUMPDEST"
    },
    "20646": {
      "op": "POP"
    },
    "20647": {
      "op": "ADD"
    },
    "20648": {
      "op": "SWAP1"
    },
    "20649": {
      "jump": "o",
      "op": "JUMP"
    },
    "20650": {
      "op": "JUMPDEST"
    },
    "20651": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "20653": {
      "op": "DUP2"
    },
    "20654": {
      "op": "MSTORE"
    },
    "20655": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "20657": {
      "op": "PUSH2",
      "value": "0x50BD"
    },
    "20660": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "20662": {
      "op": "DUP4"
    },
    "20663": {
      "op": "ADD"
    },
    "20664": {
      "op": "DUP6"
    },
    "20665": {
      "op": "PUSH2",
      "value": "0x48E3"
    },
    "20668": {
      "jump": "i",
      "op": "JUMP"
    },
    "20669": {
      "op": "JUMPDEST"
    },
    "20670": {
      "op": "DUP3"
    },
    "20671": {
      "op": "DUP2"
    },
    "20672": {
      "op": "SUB"
    },
    "20673": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "20675": {
      "op": "DUP5"
    },
    "20676": {
      "op": "ADD"
    },
    "20677": {
      "op": "MSTORE"
    },
    "20678": {
      "op": "PUSH2",
      "value": "0x38ED"
    },
    "20681": {
      "op": "DUP2"
    },
    "20682": {
      "op": "DUP6"
    },
    "20683": {
      "op": "PUSH2",
      "value": "0x48E3"
    },
    "20686": {
      "jump": "i",
      "op": "JUMP"
    },
    "20687": {
      "op": "JUMPDEST"
    },
    "20688": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "20690": {
      "op": "DUP1"
    },
    "20691": {
      "op": "DUP3"
    },
    "20692": {
      "op": "MSTORE"
    },
    "20693": {
      "op": "PUSH1",
      "value": "0x2B"
    },
    "20695": {
      "op": "SWAP1"
    },
    "20696": {
      "op": "DUP3"
    },
    "20697": {
      "op": "ADD"
    },
    "20698": {
      "op": "MSTORE"
    },
    "20699": {
      "op": "PUSH32",
      "value": "0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069"
    },
    "20732": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "20734": {
      "op": "DUP3"
    },
    "20735": {
      "op": "ADD"
    },
    "20736": {
      "op": "MSTORE"
    },
    "20737": {
      "op": "PUSH11",
      "value": "0x6E697469616C697A696E67"
    },
    "20749": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "20751": {
      "op": "SHL"
    },
    "20752": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "20754": {
      "op": "DUP3"
    },
    "20755": {
      "op": "ADD"
    },
    "20756": {
      "op": "MSTORE"
    },
    "20757": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "20759": {
      "op": "ADD"
    },
    "20760": {
      "op": "SWAP1"
    },
    "20761": {
      "jump": "o",
      "op": "JUMP"
    },
    "20762": {
      "op": "JUMPDEST"
    },
    "20763": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "20765": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "20767": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "20769": {
      "op": "SHL"
    },
    "20770": {
      "op": "SUB"
    },
    "20771": {
      "op": "DUP7"
    },
    "20772": {
      "op": "DUP2"
    },
    "20773": {
      "op": "AND"
    },
    "20774": {
      "op": "DUP3"
    },
    "20775": {
      "op": "MSTORE"
    },
    "20776": {
      "op": "DUP6"
    },
    "20777": {
      "op": "AND"
    },
    "20778": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "20780": {
      "op": "DUP3"
    },
    "20781": {
      "op": "ADD"
    },
    "20782": {
      "op": "MSTORE"
    },
    "20783": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "20785": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "20787": {
      "op": "DUP3"
    },
    "20788": {
      "op": "ADD"
    },
    "20789": {
      "op": "DUP2"
    },
    "20790": {
      "op": "SWAP1"
    },
    "20791": {
      "op": "MSTORE"
    },
    "20792": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "20794": {
      "op": "SWAP1"
    },
    "20795": {
      "op": "PUSH2",
      "value": "0x5146"
    },
    "20798": {
      "op": "SWAP1"
    },
    "20799": {
      "op": "DUP4"
    },
    "20800": {
      "op": "ADD"
    },
    "20801": {
      "op": "DUP7"
    },
    "20802": {
      "op": "PUSH2",
      "value": "0x48E3"
    },
    "20805": {
      "jump": "i",
      "op": "JUMP"
    },
    "20806": {
      "op": "JUMPDEST"
    },
    "20807": {
      "op": "DUP3"
    },
    "20808": {
      "op": "DUP2"
    },
    "20809": {
      "op": "SUB"
    },
    "20810": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "20812": {
      "op": "DUP5"
    },
    "20813": {
      "op": "ADD"
    },
    "20814": {
      "op": "MSTORE"
    },
    "20815": {
      "op": "PUSH2",
      "value": "0x5158"
    },
    "20818": {
      "op": "DUP2"
    },
    "20819": {
      "op": "DUP7"
    },
    "20820": {
      "op": "PUSH2",
      "value": "0x48E3"
    },
    "20823": {
      "jump": "i",
      "op": "JUMP"
    },
    "20824": {
      "op": "JUMPDEST"
    },
    "20825": {
      "op": "SWAP1"
    },
    "20826": {
      "op": "POP"
    },
    "20827": {
      "op": "DUP3"
    },
    "20828": {
      "op": "DUP2"
    },
    "20829": {
      "op": "SUB"
    },
    "20830": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "20832": {
      "op": "DUP5"
    },
    "20833": {
      "op": "ADD"
    },
    "20834": {
      "op": "MSTORE"
    },
    "20835": {
      "op": "PUSH2",
      "value": "0x516C"
    },
    "20838": {
      "op": "DUP2"
    },
    "20839": {
      "op": "DUP6"
    },
    "20840": {
      "op": "PUSH2",
      "value": "0x44FD"
    },
    "20843": {
      "jump": "i",
      "op": "JUMP"
    },
    "20844": {
      "op": "JUMPDEST"
    },
    "20845": {
      "op": "SWAP9"
    },
    "20846": {
      "op": "SWAP8"
    },
    "20847": {
      "op": "POP"
    },
    "20848": {
      "op": "POP"
    },
    "20849": {
      "op": "POP"
    },
    "20850": {
      "op": "POP"
    },
    "20851": {
      "op": "POP"
    },
    "20852": {
      "op": "POP"
    },
    "20853": {
      "op": "POP"
    },
    "20854": {
      "op": "POP"
    },
    "20855": {
      "jump": "o",
      "op": "JUMP"
    },
    "20856": {
      "op": "JUMPDEST"
    },
    "20857": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "20859": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "20861": {
      "op": "DUP3"
    },
    "20862": {
      "op": "DUP5"
    },
    "20863": {
      "op": "SUB"
    },
    "20864": {
      "op": "SLT"
    },
    "20865": {
      "op": "ISZERO"
    },
    "20866": {
      "op": "PUSH2",
      "value": "0x518A"
    },
    "20869": {
      "op": "JUMPI"
    },
    "20870": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "20872": {
      "op": "DUP1"
    },
    "20873": {
      "op": "REVERT"
    },
    "20874": {
      "op": "JUMPDEST"
    },
    "20875": {
      "op": "DUP2"
    },
    "20876": {
      "op": "MLOAD"
    },
    "20877": {
      "op": "PUSH2",
      "value": "0x44A2"
    },
    "20880": {
      "op": "DUP2"
    },
    "20881": {
      "op": "PUSH2",
      "value": "0x446F"
    },
    "20884": {
      "jump": "i",
      "op": "JUMP"
    },
    "20885": {
      "op": "JUMPDEST"
    },
    "20886": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "20888": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "20890": {
      "op": "RETURNDATASIZE"
    },
    "20891": {
      "op": "GT"
    },
    "20892": {
      "op": "ISZERO"
    },
    "20893": {
      "op": "PUSH2",
      "value": "0x51AE"
    },
    "20896": {
      "op": "JUMPI"
    },
    "20897": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "20899": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "20901": {
      "op": "DUP1"
    },
    "20902": {
      "op": "RETURNDATACOPY"
    },
    "20903": {
      "op": "POP"
    },
    "20904": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "20906": {
      "op": "MLOAD"
    },
    "20907": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "20909": {
      "op": "SHR"
    },
    "20910": {
      "op": "JUMPDEST"
    },
    "20911": {
      "op": "SWAP1"
    },
    "20912": {
      "jump": "o",
      "op": "JUMP"
    },
    "20913": {
      "op": "JUMPDEST"
    },
    "20914": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "20916": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "20918": {
      "op": "RETURNDATASIZE"
    },
    "20919": {
      "op": "LT"
    },
    "20920": {
      "op": "ISZERO"
    },
    "20921": {
      "op": "PUSH2",
      "value": "0x51BF"
    },
    "20924": {
      "op": "JUMPI"
    },
    "20925": {
      "op": "SWAP1"
    },
    "20926": {
      "jump": "o",
      "op": "JUMP"
    },
    "20927": {
      "op": "JUMPDEST"
    },
    "20928": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "20930": {
      "op": "MLOAD"
    },
    "20931": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "20933": {
      "op": "NOT"
    },
    "20934": {
      "op": "RETURNDATASIZE"
    },
    "20935": {
      "op": "DUP2"
    },
    "20936": {
      "op": "ADD"
    },
    "20937": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "20939": {
      "op": "DUP4"
    },
    "20940": {
      "op": "RETURNDATACOPY"
    },
    "20941": {
      "op": "DUP2"
    },
    "20942": {
      "op": "MLOAD"
    },
    "20943": {
      "op": "RETURNDATASIZE"
    },
    "20944": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "20946": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "20948": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "20950": {
      "op": "SHL"
    },
    "20951": {
      "op": "SUB"
    },
    "20952": {
      "op": "DUP2"
    },
    "20953": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "20955": {
      "op": "DUP5"
    },
    "20956": {
      "op": "ADD"
    },
    "20957": {
      "op": "GT"
    },
    "20958": {
      "op": "DUP2"
    },
    "20959": {
      "op": "DUP5"
    },
    "20960": {
      "op": "GT"
    },
    "20961": {
      "op": "OR"
    },
    "20962": {
      "op": "ISZERO"
    },
    "20963": {
      "op": "PUSH2",
      "value": "0x51EE"
    },
    "20966": {
      "op": "JUMPI"
    },
    "20967": {
      "op": "POP"
    },
    "20968": {
      "op": "POP"
    },
    "20969": {
      "op": "POP"
    },
    "20970": {
      "op": "POP"
    },
    "20971": {
      "op": "POP"
    },
    "20972": {
      "op": "SWAP1"
    },
    "20973": {
      "jump": "o",
      "op": "JUMP"
    },
    "20974": {
      "op": "JUMPDEST"
    },
    "20975": {
      "op": "DUP3"
    },
    "20976": {
      "op": "DUP6"
    },
    "20977": {
      "op": "ADD"
    },
    "20978": {
      "op": "SWAP2"
    },
    "20979": {
      "op": "POP"
    },
    "20980": {
      "op": "DUP2"
    },
    "20981": {
      "op": "MLOAD"
    },
    "20982": {
      "op": "DUP2"
    },
    "20983": {
      "op": "DUP2"
    },
    "20984": {
      "op": "GT"
    },
    "20985": {
      "op": "ISZERO"
    },
    "20986": {
      "op": "PUSH2",
      "value": "0x5206"
    },
    "20989": {
      "op": "JUMPI"
    },
    "20990": {
      "op": "POP"
    },
    "20991": {
      "op": "POP"
    },
    "20992": {
      "op": "POP"
    },
    "20993": {
      "op": "POP"
    },
    "20994": {
      "op": "POP"
    },
    "20995": {
      "op": "POP"
    },
    "20996": {
      "op": "SWAP1"
    },
    "20997": {
      "jump": "o",
      "op": "JUMP"
    },
    "20998": {
      "op": "JUMPDEST"
    },
    "20999": {
      "op": "DUP5"
    },
    "21000": {
      "op": "RETURNDATASIZE"
    },
    "21001": {
      "op": "DUP8"
    },
    "21002": {
      "op": "ADD"
    },
    "21003": {
      "op": "ADD"
    },
    "21004": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "21006": {
      "op": "DUP3"
    },
    "21007": {
      "op": "DUP6"
    },
    "21008": {
      "op": "ADD"
    },
    "21009": {
      "op": "ADD"
    },
    "21010": {
      "op": "GT"
    },
    "21011": {
      "op": "ISZERO"
    },
    "21012": {
      "op": "PUSH2",
      "value": "0x5220"
    },
    "21015": {
      "op": "JUMPI"
    },
    "21016": {
      "op": "POP"
    },
    "21017": {
      "op": "POP"
    },
    "21018": {
      "op": "POP"
    },
    "21019": {
      "op": "POP"
    },
    "21020": {
      "op": "POP"
    },
    "21021": {
      "op": "POP"
    },
    "21022": {
      "op": "SWAP1"
    },
    "21023": {
      "jump": "o",
      "op": "JUMP"
    },
    "21024": {
      "op": "JUMPDEST"
    },
    "21025": {
      "op": "PUSH2",
      "value": "0x522F"
    },
    "21028": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "21030": {
      "op": "DUP3"
    },
    "21031": {
      "op": "DUP7"
    },
    "21032": {
      "op": "ADD"
    },
    "21033": {
      "op": "ADD"
    },
    "21034": {
      "op": "DUP8"
    },
    "21035": {
      "op": "PUSH2",
      "value": "0x45CD"
    },
    "21038": {
      "jump": "i",
      "op": "JUMP"
    },
    "21039": {
      "op": "JUMPDEST"
    },
    "21040": {
      "op": "POP"
    },
    "21041": {
      "op": "SWAP1"
    },
    "21042": {
      "op": "SWAP6"
    },
    "21043": {
      "op": "SWAP5"
    },
    "21044": {
      "op": "POP"
    },
    "21045": {
      "op": "POP"
    },
    "21046": {
      "op": "POP"
    },
    "21047": {
      "op": "POP"
    },
    "21048": {
      "op": "POP"
    },
    "21049": {
      "jump": "o",
      "op": "JUMP"
    },
    "21050": {
      "op": "JUMPDEST"
    },
    "21051": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "21053": {
      "op": "DUP1"
    },
    "21054": {
      "op": "DUP3"
    },
    "21055": {
      "op": "MSTORE"
    },
    "21056": {
      "op": "PUSH1",
      "value": "0x28"
    },
    "21058": {
      "op": "SWAP1"
    },
    "21059": {
      "op": "DUP3"
    },
    "21060": {
      "op": "ADD"
    },
    "21061": {
      "op": "MSTORE"
    },
    "21062": {
      "op": "PUSH32",
      "value": "0x455243313135353A204552433131353552656365697665722072656A65637465"
    },
    "21095": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "21097": {
      "op": "DUP3"
    },
    "21098": {
      "op": "ADD"
    },
    "21099": {
      "op": "MSTORE"
    },
    "21100": {
      "op": "PUSH8",
      "value": "0x6420746F6B656E73"
    },
    "21109": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "21111": {
      "op": "SHL"
    },
    "21112": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "21114": {
      "op": "DUP3"
    },
    "21115": {
      "op": "ADD"
    },
    "21116": {
      "op": "MSTORE"
    },
    "21117": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "21119": {
      "op": "ADD"
    },
    "21120": {
      "op": "SWAP1"
    },
    "21121": {
      "jump": "o",
      "op": "JUMP"
    },
    "21122": {
      "op": "JUMPDEST"
    },
    "21123": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "21125": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "21127": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "21129": {
      "op": "SHL"
    },
    "21130": {
      "op": "SUB"
    },
    "21131": {
      "op": "DUP7"
    },
    "21132": {
      "op": "DUP2"
    },
    "21133": {
      "op": "AND"
    },
    "21134": {
      "op": "DUP3"
    },
    "21135": {
      "op": "MSTORE"
    },
    "21136": {
      "op": "DUP6"
    },
    "21137": {
      "op": "AND"
    },
    "21138": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "21140": {
      "op": "DUP3"
    },
    "21141": {
      "op": "ADD"
    },
    "21142": {
      "op": "MSTORE"
    },
    "21143": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "21145": {
      "op": "DUP2"
    },
    "21146": {
      "op": "ADD"
    },
    "21147": {
      "op": "DUP5"
    },
    "21148": {
      "op": "SWAP1"
    },
    "21149": {
      "op": "MSTORE"
    },
    "21150": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "21152": {
      "op": "DUP2"
    },
    "21153": {
      "op": "ADD"
    },
    "21154": {
      "op": "DUP4"
    },
    "21155": {
      "op": "SWAP1"
    },
    "21156": {
      "op": "MSTORE"
    },
    "21157": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "21159": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "21161": {
      "op": "DUP3"
    },
    "21162": {
      "op": "ADD"
    },
    "21163": {
      "op": "DUP2"
    },
    "21164": {
      "op": "SWAP1"
    },
    "21165": {
      "op": "MSTORE"
    },
    "21166": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "21168": {
      "op": "SWAP1"
    },
    "21169": {
      "op": "PUSH2",
      "value": "0x52BC"
    },
    "21172": {
      "op": "SWAP1"
    },
    "21173": {
      "op": "DUP4"
    },
    "21174": {
      "op": "ADD"
    },
    "21175": {
      "op": "DUP5"
    },
    "21176": {
      "op": "PUSH2",
      "value": "0x44FD"
    },
    "21179": {
      "jump": "i",
      "op": "JUMP"
    },
    "21180": {
      "op": "JUMPDEST"
    },
    "21181": {
      "op": "SWAP8"
    },
    "21182": {
      "op": "SWAP7"
    },
    "21183": {
      "op": "POP"
    },
    "21184": {
      "op": "POP"
    },
    "21185": {
      "op": "POP"
    },
    "21186": {
      "op": "POP"
    },
    "21187": {
      "op": "POP"
    },
    "21188": {
      "op": "POP"
    },
    "21189": {
      "op": "POP"
    },
    "21190": {
      "jump": "o",
      "op": "JUMP"
    },
    "21191": {
      "op": "JUMPDEST"
    },
    "21192": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "21194": {
      "op": "DUP3"
    },
    "21195": {
      "op": "GT"
    },
    "21196": {
      "op": "ISZERO"
    },
    "21197": {
      "op": "PUSH2",
      "value": "0xD19"
    },
    "21200": {
      "op": "JUMPI"
    },
    "21201": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "21203": {
      "op": "DUP2"
    },
    "21204": {
      "op": "DUP2"
    },
    "21205": {
      "op": "MSTORE"
    },
    "21206": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "21208": {
      "op": "DUP2"
    },
    "21209": {
      "op": "KECCAK256"
    },
    "21210": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "21212": {
      "op": "DUP6"
    },
    "21213": {
      "op": "ADD"
    },
    "21214": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "21216": {
      "op": "SHR"
    },
    "21217": {
      "op": "DUP2"
    },
    "21218": {
      "op": "ADD"
    },
    "21219": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "21221": {
      "op": "DUP7"
    },
    "21222": {
      "op": "LT"
    },
    "21223": {
      "op": "ISZERO"
    },
    "21224": {
      "op": "PUSH2",
      "value": "0x52EE"
    },
    "21227": {
      "op": "JUMPI"
    },
    "21228": {
      "op": "POP"
    },
    "21229": {
      "op": "DUP1"
    },
    "21230": {
      "op": "JUMPDEST"
    },
    "21231": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "21233": {
      "op": "DUP6"
    },
    "21234": {
      "op": "ADD"
    },
    "21235": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "21237": {
      "op": "SHR"
    },
    "21238": {
      "op": "DUP3"
    },
    "21239": {
      "op": "ADD"
    },
    "21240": {
      "op": "SWAP2"
    },
    "21241": {
      "op": "POP"
    },
    "21242": {
      "op": "JUMPDEST"
    },
    "21243": {
      "op": "DUP2"
    },
    "21244": {
      "op": "DUP2"
    },
    "21245": {
      "op": "LT"
    },
    "21246": {
      "op": "ISZERO"
    },
    "21247": {
      "op": "PUSH2",
      "value": "0x3BFF"
    },
    "21250": {
      "op": "JUMPI"
    },
    "21251": {
      "op": "DUP3"
    },
    "21252": {
      "op": "DUP2"
    },
    "21253": {
      "op": "SSTORE"
    },
    "21254": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "21256": {
      "op": "ADD"
    },
    "21257": {
      "op": "PUSH2",
      "value": "0x52FA"
    },
    "21260": {
      "op": "JUMP"
    },
    "21261": {
      "op": "JUMPDEST"
    },
    "21262": {
      "op": "DUP2"
    },
    "21263": {
      "op": "MLOAD"
    },
    "21264": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "21266": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "21268": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "21270": {
      "op": "SHL"
    },
    "21271": {
      "op": "SUB"
    },
    "21272": {
      "op": "DUP2"
    },
    "21273": {
      "op": "GT"
    },
    "21274": {
      "op": "ISZERO"
    },
    "21275": {
      "op": "PUSH2",
      "value": "0x5326"
    },
    "21278": {
      "op": "JUMPI"
    },
    "21279": {
      "op": "PUSH2",
      "value": "0x5326"
    },
    "21282": {
      "op": "PUSH2",
      "value": "0x4592"
    },
    "21285": {
      "jump": "i",
      "op": "JUMP"
    },
    "21286": {
      "op": "JUMPDEST"
    },
    "21287": {
      "op": "PUSH2",
      "value": "0x533A"
    },
    "21290": {
      "op": "DUP2"
    },
    "21291": {
      "op": "PUSH2",
      "value": "0x5334"
    },
    "21294": {
      "op": "DUP5"
    },
    "21295": {
      "op": "SLOAD"
    },
    "21296": {
      "op": "PUSH2",
      "value": "0x4C9E"
    },
    "21299": {
      "jump": "i",
      "op": "JUMP"
    },
    "21300": {
      "op": "JUMPDEST"
    },
    "21301": {
      "op": "DUP5"
    },
    "21302": {
      "op": "PUSH2",
      "value": "0x52C7"
    },
    "21305": {
      "jump": "i",
      "op": "JUMP"
    },
    "21306": {
      "op": "JUMPDEST"
    },
    "21307": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "21309": {
      "op": "DUP1"
    },
    "21310": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "21312": {
      "op": "DUP4"
    },
    "21313": {
      "op": "GT"
    },
    "21314": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "21316": {
      "op": "DUP2"
    },
    "21317": {
      "op": "EQ"
    },
    "21318": {
      "op": "PUSH2",
      "value": "0x536F"
    },
    "21321": {
      "op": "JUMPI"
    },
    "21322": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "21324": {
      "op": "DUP5"
    },
    "21325": {
      "op": "ISZERO"
    },
    "21326": {
      "op": "PUSH2",
      "value": "0x5357"
    },
    "21329": {
      "op": "JUMPI"
    },
    "21330": {
      "op": "POP"
    },
    "21331": {
      "op": "DUP6"
    },
    "21332": {
      "op": "DUP4"
    },
    "21333": {
      "op": "ADD"
    },
    "21334": {
      "op": "MLOAD"
    },
    "21335": {
      "op": "JUMPDEST"
    },
    "21336": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "21338": {
      "op": "NOT"
    },
    "21339": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "21341": {
      "op": "DUP7"
    },
    "21342": {
      "op": "SWAP1"
    },
    "21343": {
      "op": "SHL"
    },
    "21344": {
      "op": "SHR"
    },
    "21345": {
      "op": "NOT"
    },
    "21346": {
      "op": "AND"
    },
    "21347": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "21349": {
      "op": "DUP6"
    },
    "21350": {
      "op": "SWAP1"
    },
    "21351": {
      "op": "SHL"
    },
    "21352": {
      "op": "OR"
    },
    "21353": {
      "op": "DUP6"
    },
    "21354": {
      "op": "SSTORE"
    },
    "21355": {
      "op": "PUSH2",
      "value": "0x3BFF"
    },
    "21358": {
      "op": "JUMP"
    },
    "21359": {
      "op": "JUMPDEST"
    },
    "21360": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "21362": {
      "op": "DUP6"
    },
    "21363": {
      "op": "DUP2"
    },
    "21364": {
      "op": "MSTORE"
    },
    "21365": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "21367": {
      "op": "DUP2"
    },
    "21368": {
      "op": "KECCAK256"
    },
    "21369": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "21371": {
      "op": "NOT"
    },
    "21372": {
      "op": "DUP7"
    },
    "21373": {
      "op": "AND"
    },
    "21374": {
      "op": "SWAP2"
    },
    "21375": {
      "op": "JUMPDEST"
    },
    "21376": {
      "op": "DUP3"
    },
    "21377": {
      "op": "DUP2"
    },
    "21378": {
      "op": "LT"
    },
    "21379": {
      "op": "ISZERO"
    },
    "21380": {
      "op": "PUSH2",
      "value": "0x539E"
    },
    "21383": {
      "op": "JUMPI"
    },
    "21384": {
      "op": "DUP9"
    },
    "21385": {
      "op": "DUP7"
    },
    "21386": {
      "op": "ADD"
    },
    "21387": {
      "op": "MLOAD"
    },
    "21388": {
      "op": "DUP3"
    },
    "21389": {
      "op": "SSTORE"
    },
    "21390": {
      "op": "SWAP5"
    },
    "21391": {
      "op": "DUP5"
    },
    "21392": {
      "op": "ADD"
    },
    "21393": {
      "op": "SWAP5"
    },
    "21394": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "21396": {
      "op": "SWAP1"
    },
    "21397": {
      "op": "SWAP2"
    },
    "21398": {
      "op": "ADD"
    },
    "21399": {
      "op": "SWAP1"
    },
    "21400": {
      "op": "DUP5"
    },
    "21401": {
      "op": "ADD"
    },
    "21402": {
      "op": "PUSH2",
      "value": "0x537F"
    },
    "21405": {
      "op": "JUMP"
    },
    "21406": {
      "op": "JUMPDEST"
    },
    "21407": {
      "op": "POP"
    },
    "21408": {
      "op": "DUP6"
    },
    "21409": {
      "op": "DUP3"
    },
    "21410": {
      "op": "LT"
    },
    "21411": {
      "op": "ISZERO"
    },
    "21412": {
      "op": "PUSH2",
      "value": "0x53BC"
    },
    "21415": {
      "op": "JUMPI"
    },
    "21416": {
      "op": "DUP8"
    },
    "21417": {
      "op": "DUP6"
    },
    "21418": {
      "op": "ADD"
    },
    "21419": {
      "op": "MLOAD"
    },
    "21420": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "21422": {
      "op": "NOT"
    },
    "21423": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "21425": {
      "op": "DUP9"
    },
    "21426": {
      "op": "SWAP1"
    },
    "21427": {
      "op": "SHL"
    },
    "21428": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "21430": {
      "op": "AND"
    },
    "21431": {
      "op": "SHR"
    },
    "21432": {
      "op": "NOT"
    },
    "21433": {
      "op": "AND"
    },
    "21434": {
      "op": "DUP2"
    },
    "21435": {
      "op": "SSTORE"
    },
    "21436": {
      "op": "JUMPDEST"
    },
    "21437": {
      "op": "POP"
    },
    "21438": {
      "op": "POP"
    },
    "21439": {
      "op": "POP"
    },
    "21440": {
      "op": "POP"
    },
    "21441": {
      "op": "POP"
    },
    "21442": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "21444": {
      "op": "SWAP1"
    },
    "21445": {
      "op": "DUP2"
    },
    "21446": {
      "op": "SHL"
    },
    "21447": {
      "op": "ADD"
    },
    "21448": {
      "op": "SWAP1"
    },
    "21449": {
      "op": "SSTORE"
    },
    "21450": {
      "op": "POP"
    },
    "21451": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "a919a1a55af76678a18a29c2281d197229b74f35",
  "source": "// SPDX-License-Identifier:        UNLICENSED\n\npragma solidity ^0.8.0;\n\nimport \"./Constants.sol\";\nimport \"./Base.sol\";\nimport \"./BaseSpells.sol\";\nimport \"./Hero.sol\";\nimport \"./CultureCoin.sol\";\n\ncontract BaseLoot is Base {\n\n        address private cCA;\n        address private baseSpells;\n        CultureCoin CC;\n        BaseSpells private spells;\n\tmapping(uint256 => mapping(uint256 => bool)) private isLooted;\n\n\tmapping(address => bool) public isAddon;\n\n\tuint256 private _unused;\n\n        function initialize (address _cCA, address _cultureCoin, address _baseSpells, string memory _uri) external initializer {\n                __ERC1155_init(_uri);\n                __ERC1155Burnable_init();\n                __ReentrancyGuard_init();\n\n                cCA = _cCA;\n                CC = CultureCoin(_cultureCoin);\n                baseSpells = _baseSpells;\n                spells = BaseSpells(baseSpells);\n        }\n\tfunction getAddon(address _addon) external view returns(bool) {\n        \treturn isAddon[_addon];\n    \t}\n\tfunction setAddon(address _addon, bool _onOff) public {\n                require(msg.sender == cCA, \"Only admins may set addon.\");\n                isAddon[_addon] = _onOff;\n        }\n\tfunction addLoot(Hero hero, uint256 _hId, uint256 _target) public {\n\t\trequire(msg.sender == cCA || isAddon[msg.sender], \"You can't add the loot.\");\n\t\tisLooted[_hId][_target] = false;\n\t}\n\tfunction looted(Hero hero, uint256 _hId, uint256 _target) internal view returns(bool) {\n\t\treturn isLooted[_hId][_target];\n\t}\n\tfunction setLooted(address _hero, uint256 _hId, uint256 _target, bool _flag) external {\n\t\trequire(msg.sender == cCA || isAddon[msg.sender], \"You cant set the loot.\");\n\t\tisLooted[_hId][_target] = _flag;\n\t}\n\tfunction _setLooted(Hero hero , uint256 _hId, uint256 _target, bool _flag) internal {\n\t\tisLooted[_hId][_target] = _flag;\n\t}\n\tfunction lootTo(address _hero, uint256 _hId, uint256 _target, uint _amount) public {\n\t\trequire(cCA == msg.sender || isAddon[msg.sender], \"lootTo\");\n\t\t_mint(_hero, _hId, 1, \"loot\");\n\t}\n\tfunction burnFrom(address _sender, uint _what, uint _amount) public {\n\t\trequire(cCA == msg.sender || isAddon[msg.sender], \"burnFrom\");\n\t\t_burn(_sender, _what, _amount);\n\t}\n\tfunction loot(address _hero, uint256 _hId, uint256 _target) external returns(uint) {\n\t        Hero hero = Hero(_hero);\n                (uint heroHp, uint heroPower) = hero.getHP(_hId);\n                (uint tarHp, uint tarPow) = hero.getHP(_target);\n                bool heroAlive = hero.alive(heroHp);\n                bool tarAlive = hero.alive(tarHp);\n\n\t\trequire(!tarAlive, \"Target is alive still.\");\n\t\trequire(heroAlive, \"You are dead.\");\n\n\t\t//require(spells.tagged(_hero, _hId, _target), \"That has no loot for you.\");\t// FIXME: Loot is Free for all.. Chaos!\n\n                require(hero.ownerOf(_hId) == msg.sender || msg.sender == cCA, \"You can't do that.\");\n                require(spells.xyzInRange(_hero, _hId, _target, 1), \"loot is OOR\");\n                require(spells.hasLOS(_hero, _hId, _target), \"loot lacks LOS\");\n\t\trequire(spells.getState(_hero, _target, FLAG_IS_NPC), \"Can't loot that.\");\n\t\trequire(!looted(hero, _hId, _target), \"Already looted.\");\n\n\t\t_mint(msg.sender, _target, 9, \"loot9\");\t\t// Player gets the loot...\n\t\t_mint(BookTradable(hero.getNBT()).ownerOf(hero.getSpawn(_hId)), _target, 1, \"loot1\");\n\n\t\t_setLooted(hero, _hId, _target, true);\n\n\t\treturn spells.addExperience(_hero, _hId, _target);\n\t}\n\t// Druidfire\n        function castDF(address _hero, uint256 _hId, uint256 _target, uint _id) public {\n                Hero hero = Hero(_hero);\n                require(hero.canCast(_hId, DRUID_FIRE), \"Hero can't cast druid fire.\");\n                require(hero.ownerOf(_hId) == msg.sender || isAddon[msg.sender], \"You can't do that.\");\n\n                (uint heroHp, uint heroPower) = hero.getHP(_hId);\n                bool heroAlive = hero.alive(heroHp);\n                require(heroAlive, \"You are dead.\");\n\n                uint heroLevel = spells.getLevel(_hero, _hId);\n                uint cost = heroLevel * 0.1 ether;\n                require(cost <= heroPower, \"You lack the power to do that.\");\n                hero.powerDown(_hId, cost);\n\n                (uint tarHp,) = hero.getHP(_target);\n                require(hero.alive(tarHp), \"Target is dead.\");\n\n                Stats memory stats = hero.getStats(_hId);\n                uint amount = stats.intel * heroLevel;\n\n                HPSummary memory tarSum = hero.getHPSumary(_target);\n                amount = spells.damageFloor(amount, tarSum.fire);\n\t\ttarHp = spells.getSkin(_hero, _target);\t\t// Reusing tarHp for the skin amouint because solidity is bad.\n\t\tif(tarHp > 0.5 ether) {\n\t\t\tamount = amount / 2;\n\t\t}\n\t\tspells.setSkin(_hero, _target, tarHp/2);\n                hero.hurtBy(_hId, _target, amount, FIRE, stats.effect);\n        }\n\tfunction activateIS(address _hero, uint256 _hId) public {\n\t\tHero hero = Hero(_hero);\n                (uint heroHp, uint heroPower) = hero.getHP(_hId);\n                bool heroAlive = hero.alive(heroHp);\n\n                if(!heroAlive) {\n                        hero.fizzle(_hId, _hId, IRON_SKIN, 1, FIZZLE_DEAD);\n                        return;\n                }\n\n                if(hero.ownerOf(_hId) != msg.sender && msg.sender != cCA) {\n                        hero.fizzle(_hId, _hId, IRON_SKIN, 1, FIZZLE_NOT_OWNER);\n                        return;\n                }\n\n                hero.unCast(_hId, IRON_SKIN, 1);\n\t\tspells.setState(_hero, _hId, IRON_SKIN, true);\n\t\tspells.setSkin(_hero, _hId, 1 ether);\n\t}\n\t// Iron Skin\n        function castIS(address _hero, uint256 _hId) public {\n                Hero hero = Hero(_hero);\n                require(hero.ownerOf(_hId) == msg.sender || isAddon[msg.sender], \"You can't do that.\");\n                require(hero.canCast(_hId, IRON_SKIN), \"Hero can't cast iron skin.\");\n\n                spells.castTo(_hero, _hId, IRON_SKIN, 1);\n        }\n\t// Ghost Wolf\n        function castGW(address _hero, uint256 _hId, uint oldToken, uint ccAmount) public {\n                Hero hero = Hero(_hero);\n                require(hero.ownerOf(_hId) == msg.sender || isAddon[msg.sender], \"You can't do that.\");\n                require(hero.canCast(_hId, GHOST_WOLF), \"Hero can't cast ghost wolf.\");\n                spells.setState(_hero, _hId, GHOST_WOLF, !spells.getState(_hero, _hId, GHOST_WOLF));\n        }\n        function activateAO(address _hero, uint256 _hId, uint256 _target, int _how, uint _amount) public returns(Stats memory) {\n\t\tHero hero = Hero(_hero);\n                require(hero.ownerOf(_hId) == msg.sender || isAddon[msg.sender], \"You can't do that.\");\n\t\tStats memory stats = hero.getStats(_hId);\n\n\t\tif(!hero.unCast(_hId, ARCANE_ORB, _amount) ) {\n\t\t\thero.fizzle(_hId, _target, _how, _amount, FIZZLE_NO_BUFF);\n\t\t\tstats.fizzle = FIZZLE_NO_BUFF;\n\t\t\treturn stats;\n\t\t}\n\n                (uint heroHp, uint heroPower) = hero.getHP(_hId);\n                (uint tarHp, uint tarPow) = hero.getHP(_target);\n                bool heroAlive = hero.alive(heroHp);\n                bool tarAlive = hero.alive(tarHp);\n\n\t\tif(!heroAlive) {\n\t\t\thero.fizzle(_hId, _target, _how, _amount, FIZZLE_DEAD);\n\t\t\tstats.fizzle = FIZZLE_DEAD;\n\t\t\treturn stats;\n\t\t}\n\n\t\tif(!tarAlive) {\n\t\t\thero.fizzle(_hId, _target, _how, _amount, FIZZLE_TAR_DEAD);\n\t\t\tstats.fizzle = FIZZLE_TAR_DEAD;\n\t\t\treturn stats;\n\t\t}\n\n               \tif(!spells.xyzInRange(_hero, _hId, _target, 1)) {\n\t\t\thero.fizzle(_hId, _target, _how, _amount, FIZZLE_NOT_IN_RANGE);\n\t\t\tstats.fizzle = FIZZLE_NOT_IN_RANGE;\n\t\t\treturn stats;\n\t\t}\n               \tif(!spells.hasLOS(_hero, _hId, _target)) {\n\t\t\thero.fizzle(_hId, _target, _how, _amount, FIZZLE_NO_LOS);\n\t\t\tstats.fizzle = FIZZLE_NO_LOS;\n\t\t\treturn stats;\n\t\t}\n\n\n                if(_how == HEAL) {\n                        if(hero.canCast(_hId, HEAL)) {\n                        \thero.healBy(_hId, _target, _amount * 1 ether, META, stats.effect);\t// FIXME. Need to figure out spell costs.\n\t\t\t} else {\n                      \t\thero.bug(msg.sender, _hId, _target, _how, _amount);\n\t\t\t}\n\t\t}\n\n                if (_how == ARCANE_ORB) {\n\t\t\t// The power and danger of arcane orb is that it can do damage for anyone not just the caster.\n                        hero.hurtBy(_hId, _target, _amount * _getSpellDamage(stats), META, stats.effect);\t\t//FIXME fire but say we are meta?\n                } else if (_how == DRUID_FIRE) {\n                        if(hero.canCast(_hId, DRUID_FIRE)) {\n                        \thero.hurtBy(_hId, _target, _amount * _getSpellDamage(stats), FIRE, stats.effect);\n                        \thero.powerDown(_target, 1); // FIXME\n\t\t\t} else {\n\t\t\t\thero.bug(msg.sender, _hId, _target, _how, _amount);\n\t\t\t}\n                } else if (_how == TAUNT) {\n                        require(hero.canCast(_hId, TAUNT), \"Quiet you.\");\n                        if(spells.getState(_hero, _target, FLAG_IS_NPC)) {\n                               hero.powerDown(_target, 1); // FIXME\n\t\t\t}  else {\n                               hero.powerUp(_target, 1); // FIXME\n                        }\n                } else {\n                        hero.bug(msg.sender, _hId, _target, _how, _amount);\n                }\n\t\tstats.fizzle = FIZZLE_FIRE_WORKS;\n\t\treturn stats;\n\t}\n\tfunction _getSpellDamage(Stats memory stats) pure internal returns(uint) {\n\t\treturn stats.intel + 1;\n\t}\n\t// Life Steal\n        function castLS() public {\n        }\n\t// Charm Beast\n        function castCB(address _hero, uint256 _hId, uint256 _target, bool _charm, uint ccAmount) public {\n                Hero hero = Hero(_hero);\n                require(hero.ownerOf(_hId) == msg.sender || isAddon[msg.sender], \"You can't do that.\");\n                require(hero.canCast(_hId, CHARM_BEAST), \"Hero can't cast charm beast.\");\n                require(spells.getState(_hero, _hId, FLAG_IS_NPC), \"Can't charm that.\");\n\n                spells.setState(_hero, _target, CHARM_BEAST, _charm);\n        }\n\tfunction castRES(address _hero, uint256 _hId, uint256 _target) public returns(uint) {\n                Hero hero = Hero(_hero);\n                Stats memory stats = hero.getStats(_hId);\n                require(hero.canCast(_hId, RESURECTION), \"Hero can't cast res.\");\n                require(hero.ownerOf(_hId) == msg.sender || isAddon[msg.sender], \"You can't do that.\");\n\n                (uint heroHp, uint heroPower) = hero.getHP(_hId);\n                bool heroAlive = hero.alive(heroHp);\n                require(heroAlive || stats.talent.talent & (1 << uint(SELF_RES)) > 0, \"You are dead.\");\n                uint heroLevel = 1;// + getLevel(_hero, _hId);\n                uint cost = heroLevel * 0.1 ether;\n                //require(cost <= heroPower, \"You lack the power to do that.\");         // FIXME : Turn oun power use...?\n\n                if(!hero.canCast(_hId, ANCESTRAL_KNOWLEDGE)) {\n                        //hero.powerDown(_hId, cost);\n                }\n\n                (uint tarHp, uint tarPow) = hero.getHP(_target);\n                if(hero.alive(tarHp)) {\n                } else {\n                        hero.healByPercent(_hId, _target, 0.5 ether, META, stats.effect);\n                }\n                require(spells.getState(_hero, _target, FLAG_IS_ENEMY) == spells.getState(_hero, _hId, FLAG_IS_ENEMY), \"Not pals.\");\n        }\n}\n\n",
  "sourceMap": "196:11057:2:-:0;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/BaseLoot.sol",
  "type": "contract"
}