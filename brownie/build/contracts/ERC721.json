{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name_",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol_",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "27": "openzeppelin-solidity/contracts/token/ERC721/ERC721.sol",
    "28": "openzeppelin-solidity/contracts/token/ERC721/IERC721.sol",
    "29": "openzeppelin-solidity/contracts/token/ERC721/IERC721Receiver.sol",
    "32": "openzeppelin-solidity/contracts/token/ERC721/extensions/IERC721Metadata.sol",
    "33": "openzeppelin-solidity/contracts/utils/Address.sol",
    "34": "openzeppelin-solidity/contracts/utils/Context.sol",
    "35": "openzeppelin-solidity/contracts/utils/Strings.sol",
    "36": "openzeppelin-solidity/contracts/utils/introspection/ERC165.sol",
    "37": "openzeppelin-solidity/contracts/utils/introspection/IERC165.sol"
  },
  "ast": {
    "absolutePath": "openzeppelin-solidity/contracts/token/ERC721/ERC721.sol",
    "exportedSymbols": {
      "Address": [
        7810
      ],
      "Context": [
        8905
      ],
      "ERC165": [
        9090
      ],
      "ERC721": [
        6661
      ],
      "IERC165": [
        9178
      ],
      "IERC721": [
        9021
      ],
      "IERC721Metadata": [
        9066
      ],
      "IERC721Receiver": [
        9039
      ],
      "Strings": [
        7202
      ]
    },
    "id": 6662,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 5845,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "35:23:27"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC721/IERC721.sol",
        "file": "./IERC721.sol",
        "id": 5846,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 6662,
        "sourceUnit": 9022,
        "src": "62:23:27",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC721/IERC721Receiver.sol",
        "file": "./IERC721Receiver.sol",
        "id": 5847,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 6662,
        "sourceUnit": 9040,
        "src": "87:31:27",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        "file": "./extensions/IERC721Metadata.sol",
        "id": 5848,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 6662,
        "sourceUnit": 9067,
        "src": "120:42:27",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/utils/Address.sol",
        "file": "../../utils/Address.sol",
        "id": 5849,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 6662,
        "sourceUnit": 7811,
        "src": "164:33:27",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/utils/Context.sol",
        "file": "../../utils/Context.sol",
        "id": 5850,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 6662,
        "sourceUnit": 8906,
        "src": "199:33:27",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/utils/Strings.sol",
        "file": "../../utils/Strings.sol",
        "id": 5851,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 6662,
        "sourceUnit": 7203,
        "src": "234:33:27",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/utils/introspection/ERC165.sol",
        "file": "../../utils/introspection/ERC165.sol",
        "id": 5852,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 6662,
        "sourceUnit": 9091,
        "src": "269:46:27",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 5854,
              "name": "Context",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 8905,
              "src": "590:7:27"
            },
            "id": 5855,
            "nodeType": "InheritanceSpecifier",
            "src": "590:7:27"
          },
          {
            "baseName": {
              "id": 5856,
              "name": "ERC165",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 9090,
              "src": "599:6:27"
            },
            "id": 5857,
            "nodeType": "InheritanceSpecifier",
            "src": "599:6:27"
          },
          {
            "baseName": {
              "id": 5858,
              "name": "IERC721",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 9021,
              "src": "607:7:27"
            },
            "id": 5859,
            "nodeType": "InheritanceSpecifier",
            "src": "607:7:27"
          },
          {
            "baseName": {
              "id": 5860,
              "name": "IERC721Metadata",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 9066,
              "src": "616:15:27"
            },
            "id": 5861,
            "nodeType": "InheritanceSpecifier",
            "src": "616:15:27"
          }
        ],
        "canonicalName": "ERC721",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 5853,
          "nodeType": "StructuredDocumentation",
          "src": "319:250:27",
          "text": " @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."
        },
        "fullyImplemented": true,
        "id": 6661,
        "linearizedBaseContracts": [
          6661,
          9066,
          9021,
          9090,
          9178,
          8905
        ],
        "name": "ERC721",
        "nameLocation": "580:6:27",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 5864,
            "libraryName": {
              "id": 5862,
              "name": "Address",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 7810,
              "src": "645:7:27"
            },
            "nodeType": "UsingForDirective",
            "src": "639:26:27",
            "typeName": {
              "id": 5863,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "657:7:27",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            }
          },
          {
            "id": 5867,
            "libraryName": {
              "id": 5865,
              "name": "Strings",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 7202,
              "src": "677:7:27"
            },
            "nodeType": "UsingForDirective",
            "src": "671:26:27",
            "typeName": {
              "id": 5866,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "689:7:27",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "id": 5869,
            "mutability": "mutable",
            "name": "_name",
            "nameLocation": "739:5:27",
            "nodeType": "VariableDeclaration",
            "scope": 6661,
            "src": "724:20:27",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 5868,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "724:6:27",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 5871,
            "mutability": "mutable",
            "name": "_symbol",
            "nameLocation": "789:7:27",
            "nodeType": "VariableDeclaration",
            "scope": 6661,
            "src": "774:22:27",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 5870,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "774:6:27",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 5875,
            "mutability": "mutable",
            "name": "_owners",
            "nameLocation": "889:7:27",
            "nodeType": "VariableDeclaration",
            "scope": 6661,
            "src": "852:44:27",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
              "typeString": "mapping(uint256 => address)"
            },
            "typeName": {
              "id": 5874,
              "keyType": {
                "id": 5872,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "861:7:27",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "852:28:27",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                "typeString": "mapping(uint256 => address)"
              },
              "valueType": {
                "id": 5873,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "872:7:27",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 5879,
            "mutability": "mutable",
            "name": "_balances",
            "nameLocation": "987:9:27",
            "nodeType": "VariableDeclaration",
            "scope": 6661,
            "src": "950:46:27",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 5878,
              "keyType": {
                "id": 5876,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "959:7:27",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "950:28:27",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 5877,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "970:7:27",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 5883,
            "mutability": "mutable",
            "name": "_tokenApprovals",
            "nameLocation": "1092:15:27",
            "nodeType": "VariableDeclaration",
            "scope": 6661,
            "src": "1055:52:27",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
              "typeString": "mapping(uint256 => address)"
            },
            "typeName": {
              "id": 5882,
              "keyType": {
                "id": 5880,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1064:7:27",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1055:28:27",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                "typeString": "mapping(uint256 => address)"
              },
              "valueType": {
                "id": 5881,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1075:7:27",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 5889,
            "mutability": "mutable",
            "name": "_operatorApprovals",
            "nameLocation": "1220:18:27",
            "nodeType": "VariableDeclaration",
            "scope": 6661,
            "src": "1165:73:27",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
              "typeString": "mapping(address => mapping(address => bool))"
            },
            "typeName": {
              "id": 5888,
              "keyType": {
                "id": 5884,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1174:7:27",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1165:46:27",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                "typeString": "mapping(address => mapping(address => bool))"
              },
              "valueType": {
                "id": 5887,
                "keyType": {
                  "id": 5885,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1194:7:27",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "1185:25:27",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                  "typeString": "mapping(address => bool)"
                },
                "valueType": {
                  "id": 5886,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "1205:4:27",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                }
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 5905,
              "nodeType": "Block",
              "src": "1420:60:27",
              "statements": [
                {
                  "expression": {
                    "id": 5899,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 5897,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5869,
                      "src": "1431:5:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 5898,
                      "name": "name_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5892,
                      "src": "1439:5:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1431:13:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 5900,
                  "nodeType": "ExpressionStatement",
                  "src": "1431:13:27"
                },
                {
                  "expression": {
                    "id": 5903,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 5901,
                      "name": "_symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5871,
                      "src": "1455:7:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 5902,
                      "name": "symbol_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5894,
                      "src": "1465:7:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1455:17:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 5904,
                  "nodeType": "ExpressionStatement",
                  "src": "1455:17:27"
                }
              ]
            },
            "documentation": {
              "id": 5890,
              "nodeType": "StructuredDocumentation",
              "src": "1247:110:27",
              "text": " @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."
            },
            "id": 5906,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5895,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5892,
                  "mutability": "mutable",
                  "name": "name_",
                  "nameLocation": "1390:5:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 5906,
                  "src": "1376:19:27",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 5891,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1376:6:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5894,
                  "mutability": "mutable",
                  "name": "symbol_",
                  "nameLocation": "1411:7:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 5906,
                  "src": "1397:21:27",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 5893,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1397:6:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1375:44:27"
            },
            "returnParameters": {
              "id": 5896,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1420:0:27"
            },
            "scope": 6661,
            "src": "1363:117:27",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              9089,
              9177
            ],
            "body": {
              "id": 5936,
              "nodeType": "Block",
              "src": "1660:184:27",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 5934,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 5929,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "id": 5922,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 5917,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5909,
                          "src": "1678:11:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 5919,
                                "name": "IERC721",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9021,
                                "src": "1698:7:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC721_$9021_$",
                                  "typeString": "type(contract IERC721)"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_type$_t_contract$_IERC721_$9021_$",
                                  "typeString": "type(contract IERC721)"
                                }
                              ],
                              "id": 5918,
                              "name": "type",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -27,
                              "src": "1693:4:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 5920,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1693:13:27",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_meta_type_t_contract$_IERC721_$9021",
                              "typeString": "type(contract IERC721)"
                            }
                          },
                          "id": 5921,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "interfaceId",
                          "nodeType": "MemberAccess",
                          "src": "1693:25:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "src": "1678:40:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "||",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "id": 5928,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 5923,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5909,
                          "src": "1735:11:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 5925,
                                "name": "IERC721Metadata",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9066,
                                "src": "1755:15:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$9066_$",
                                  "typeString": "type(contract IERC721Metadata)"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$9066_$",
                                  "typeString": "type(contract IERC721Metadata)"
                                }
                              ],
                              "id": 5924,
                              "name": "type",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -27,
                              "src": "1750:4:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 5926,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1750:21:27",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_meta_type_t_contract$_IERC721Metadata_$9066",
                              "typeString": "type(contract IERC721Metadata)"
                            }
                          },
                          "id": 5927,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "interfaceId",
                          "nodeType": "MemberAccess",
                          "src": "1750:33:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "src": "1735:48:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "1678:105:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 5932,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5909,
                          "src": "1824:11:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        ],
                        "expression": {
                          "id": 5930,
                          "name": "super",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -25,
                          "src": "1800:5:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_super$_ERC721_$6661_$",
                            "typeString": "type(contract super ERC721)"
                          }
                        },
                        "id": 5931,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "supportsInterface",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9089,
                        "src": "1800:23:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
                          "typeString": "function (bytes4) view returns (bool)"
                        }
                      },
                      "id": 5933,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1800:36:27",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "1678:158:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 5916,
                  "id": 5935,
                  "nodeType": "Return",
                  "src": "1671:165:27"
                }
              ]
            },
            "documentation": {
              "id": 5907,
              "nodeType": "StructuredDocumentation",
              "src": "1488:58:27",
              "text": " @dev See {IERC165-supportsInterface}."
            },
            "functionSelector": "01ffc9a7",
            "id": 5937,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nameLocation": "1561:17:27",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 5913,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 5911,
                  "name": "ERC165",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 9090,
                  "src": "1628:6:27"
                },
                {
                  "id": 5912,
                  "name": "IERC165",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 9178,
                  "src": "1636:7:27"
                }
              ],
              "src": "1619:25:27"
            },
            "parameters": {
              "id": 5910,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5909,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "1586:11:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 5937,
                  "src": "1579:18:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 5908,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "1579:6:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1578:20:27"
            },
            "returnParameters": {
              "id": 5916,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5915,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5937,
                  "src": "1654:4:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 5914,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1654:4:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1653:6:27"
            },
            "scope": 6661,
            "src": "1552:292:27",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              8946
            ],
            "body": {
              "id": 5960,
              "nodeType": "Block",
              "src": "1989:127:27",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 5952,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 5947,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5940,
                          "src": "2008:5:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 5950,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2025:1:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 5949,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2017:7:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 5948,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2017:7:27",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 5951,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2017:10:27",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2008:19:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a2062616c616e636520717565727920666f7220746865207a65726f2061646472657373",
                        "id": 5953,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2029:44:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba",
                          "typeString": "literal_string \"ERC721: balance query for the zero address\""
                        },
                        "value": "ERC721: balance query for the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba",
                          "typeString": "literal_string \"ERC721: balance query for the zero address\""
                        }
                      ],
                      "id": 5946,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2000:7:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5954,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2000:74:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5955,
                  "nodeType": "ExpressionStatement",
                  "src": "2000:74:27"
                },
                {
                  "expression": {
                    "baseExpression": {
                      "id": 5956,
                      "name": "_balances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5879,
                      "src": "2092:9:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 5958,
                    "indexExpression": {
                      "id": 5957,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5940,
                      "src": "2102:5:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2092:16:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 5945,
                  "id": 5959,
                  "nodeType": "Return",
                  "src": "2085:23:27"
                }
              ]
            },
            "documentation": {
              "id": 5938,
              "nodeType": "StructuredDocumentation",
              "src": "1852:50:27",
              "text": " @dev See {IERC721-balanceOf}."
            },
            "functionSelector": "70a08231",
            "id": 5961,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nameLocation": "1917:9:27",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 5942,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1962:8:27"
            },
            "parameters": {
              "id": 5941,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5940,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "1935:5:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 5961,
                  "src": "1927:13:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5939,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1927:7:27",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1926:15:27"
            },
            "returnParameters": {
              "id": 5945,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5944,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5961,
                  "src": "1980:7:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5943,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1980:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1979:9:27"
            },
            "scope": 6661,
            "src": "1908:208:27",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              8954
            ],
            "body": {
              "id": 5988,
              "nodeType": "Block",
              "src": "2259:158:27",
              "statements": [
                {
                  "assignments": [
                    5971
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5971,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "2278:5:27",
                      "nodeType": "VariableDeclaration",
                      "scope": 5988,
                      "src": "2270:13:27",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 5970,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2270:7:27",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5975,
                  "initialValue": {
                    "baseExpression": {
                      "id": 5972,
                      "name": "_owners",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5875,
                      "src": "2286:7:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                        "typeString": "mapping(uint256 => address)"
                      }
                    },
                    "id": 5974,
                    "indexExpression": {
                      "id": 5973,
                      "name": "tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5964,
                      "src": "2294:7:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2286:16:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2270:32:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 5982,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 5977,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5971,
                          "src": "2321:5:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 5980,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2338:1:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 5979,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2330:7:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 5978,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2330:7:27",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 5981,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2330:10:27",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2321:19:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656e",
                        "id": 5983,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2342:43:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397",
                          "typeString": "literal_string \"ERC721: owner query for nonexistent token\""
                        },
                        "value": "ERC721: owner query for nonexistent token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397",
                          "typeString": "literal_string \"ERC721: owner query for nonexistent token\""
                        }
                      ],
                      "id": 5976,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2313:7:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5984,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2313:73:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5985,
                  "nodeType": "ExpressionStatement",
                  "src": "2313:73:27"
                },
                {
                  "expression": {
                    "id": 5986,
                    "name": "owner",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5971,
                    "src": "2404:5:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 5969,
                  "id": 5987,
                  "nodeType": "Return",
                  "src": "2397:12:27"
                }
              ]
            },
            "documentation": {
              "id": 5962,
              "nodeType": "StructuredDocumentation",
              "src": "2124:48:27",
              "text": " @dev See {IERC721-ownerOf}."
            },
            "functionSelector": "6352211e",
            "id": 5989,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "ownerOf",
            "nameLocation": "2187:7:27",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 5966,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2232:8:27"
            },
            "parameters": {
              "id": 5965,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5964,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "2203:7:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 5989,
                  "src": "2195:15:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5963,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2195:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2194:17:27"
            },
            "returnParameters": {
              "id": 5969,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5968,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5989,
                  "src": "2250:7:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5967,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2250:7:27",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2249:9:27"
            },
            "scope": 6661,
            "src": "2178:239:27",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              9051
            ],
            "body": {
              "id": 5998,
              "nodeType": "Block",
              "src": "2553:31:27",
              "statements": [
                {
                  "expression": {
                    "id": 5996,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5869,
                    "src": "2571:5:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 5995,
                  "id": 5997,
                  "nodeType": "Return",
                  "src": "2564:12:27"
                }
              ]
            },
            "documentation": {
              "id": 5990,
              "nodeType": "StructuredDocumentation",
              "src": "2425:53:27",
              "text": " @dev See {IERC721Metadata-name}."
            },
            "functionSelector": "06fdde03",
            "id": 5999,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "name",
            "nameLocation": "2493:4:27",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 5992,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2520:8:27"
            },
            "parameters": {
              "id": 5991,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2497:2:27"
            },
            "returnParameters": {
              "id": 5995,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5994,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5999,
                  "src": "2538:13:27",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 5993,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2538:6:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2537:15:27"
            },
            "scope": 6661,
            "src": "2484:100:27",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              9057
            ],
            "body": {
              "id": 6008,
              "nodeType": "Block",
              "src": "2724:33:27",
              "statements": [
                {
                  "expression": {
                    "id": 6006,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5871,
                    "src": "2742:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 6005,
                  "id": 6007,
                  "nodeType": "Return",
                  "src": "2735:14:27"
                }
              ]
            },
            "documentation": {
              "id": 6000,
              "nodeType": "StructuredDocumentation",
              "src": "2592:55:27",
              "text": " @dev See {IERC721Metadata-symbol}."
            },
            "functionSelector": "95d89b41",
            "id": 6009,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "symbol",
            "nameLocation": "2662:6:27",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 6002,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2691:8:27"
            },
            "parameters": {
              "id": 6001,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2668:2:27"
            },
            "returnParameters": {
              "id": 6005,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6004,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 6009,
                  "src": "2709:13:27",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 6003,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2709:6:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2708:15:27"
            },
            "scope": 6661,
            "src": "2653:104:27",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              9065
            ],
            "body": {
              "id": 6050,
              "nodeType": "Block",
              "src": "2916:272:27",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 6020,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6012,
                            "src": "2943:7:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 6019,
                          "name": "_exists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6299,
                          "src": "2935:7:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 6021,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2935:16:27",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732314d657461646174613a2055524920717565727920666f72206e6f6e6578697374656e7420746f6b656e",
                        "id": 6022,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2953:49:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb",
                          "typeString": "literal_string \"ERC721Metadata: URI query for nonexistent token\""
                        },
                        "value": "ERC721Metadata: URI query for nonexistent token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb",
                          "typeString": "literal_string \"ERC721Metadata: URI query for nonexistent token\""
                        }
                      ],
                      "id": 6018,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2927:7:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6023,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2927:76:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6024,
                  "nodeType": "ExpressionStatement",
                  "src": "2927:76:27"
                },
                {
                  "assignments": [
                    6026
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6026,
                      "mutability": "mutable",
                      "name": "baseURI",
                      "nameLocation": "3030:7:27",
                      "nodeType": "VariableDeclaration",
                      "scope": 6050,
                      "src": "3016:21:27",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 6025,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "3016:6:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 6029,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 6027,
                      "name": "_baseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6060,
                      "src": "3040:8:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
                        "typeString": "function () view returns (string memory)"
                      }
                    },
                    "id": 6028,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3040:10:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3016:34:27"
                },
                {
                  "expression": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 6036,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "arguments": [
                            {
                              "id": 6032,
                              "name": "baseURI",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6026,
                              "src": "3074:7:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 6031,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3068:5:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                              "typeString": "type(bytes storage pointer)"
                            },
                            "typeName": {
                              "id": 6030,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "3068:5:27",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 6033,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3068:14:27",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "id": 6034,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "3068:21:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 6035,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3092:1:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "3068:25:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "hexValue": "",
                      "id": 6047,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3178:2:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                        "typeString": "literal_string \"\""
                      },
                      "value": ""
                    },
                    "id": 6048,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "3068:112:27",
                    "trueExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 6041,
                              "name": "baseURI",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6026,
                              "src": "3133:7:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 6042,
                                  "name": "tokenId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6012,
                                  "src": "3142:7:27",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 6043,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "toString",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 7084,
                                "src": "3142:16:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256) pure returns (string memory)"
                                }
                              },
                              "id": 6044,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3142:18:27",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "expression": {
                              "id": 6039,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "3116:3:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 6040,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "encodePacked",
                            "nodeType": "MemberAccess",
                            "src": "3116:16:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function () pure returns (bytes memory)"
                            }
                          },
                          "id": 6045,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3116:45:27",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 6038,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3109:6:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                          "typeString": "type(string storage pointer)"
                        },
                        "typeName": {
                          "id": 6037,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "3109:6:27",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 6046,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3109:53:27",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 6017,
                  "id": 6049,
                  "nodeType": "Return",
                  "src": "3061:119:27"
                }
              ]
            },
            "documentation": {
              "id": 6010,
              "nodeType": "StructuredDocumentation",
              "src": "2765:57:27",
              "text": " @dev See {IERC721Metadata-tokenURI}."
            },
            "functionSelector": "c87b56dd",
            "id": 6051,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenURI",
            "nameLocation": "2837:8:27",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 6014,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2883:8:27"
            },
            "parameters": {
              "id": 6013,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6012,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "2854:7:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 6051,
                  "src": "2846:15:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6011,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2846:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2845:17:27"
            },
            "returnParameters": {
              "id": 6017,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6016,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 6051,
                  "src": "2901:13:27",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 6015,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2901:6:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2900:15:27"
            },
            "scope": 6661,
            "src": "2828:360:27",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 6059,
              "nodeType": "Block",
              "src": "3391:28:27",
              "statements": [
                {
                  "expression": {
                    "hexValue": "",
                    "id": 6057,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3409:2:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                      "typeString": "literal_string \"\""
                    },
                    "value": ""
                  },
                  "functionReturnParameters": 6056,
                  "id": 6058,
                  "nodeType": "Return",
                  "src": "3402:9:27"
                }
              ]
            },
            "documentation": {
              "id": 6052,
              "nodeType": "StructuredDocumentation",
              "src": "3196:123:27",
              "text": " @dev Base URI for computing {tokenURI}. Empty by default, can be overriden\n in child contracts."
            },
            "id": 6060,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_baseURI",
            "nameLocation": "3334:8:27",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6053,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3342:2:27"
            },
            "returnParameters": {
              "id": 6056,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6055,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 6060,
                  "src": "3376:13:27",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 6054,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3376:6:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3375:15:27"
            },
            "scope": 6661,
            "src": "3325:94:27",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              8982
            ],
            "body": {
              "id": 6102,
              "nodeType": "Block",
              "src": "3551:327:27",
              "statements": [
                {
                  "assignments": [
                    6070
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6070,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "3570:5:27",
                      "nodeType": "VariableDeclaration",
                      "scope": 6102,
                      "src": "3562:13:27",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 6069,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3562:7:27",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 6075,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 6073,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6065,
                        "src": "3593:7:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 6071,
                        "name": "ERC721",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6661,
                        "src": "3578:6:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721_$6661_$",
                          "typeString": "type(contract ERC721)"
                        }
                      },
                      "id": 6072,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "ownerOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5989,
                      "src": "3578:14:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view returns (address)"
                      }
                    },
                    "id": 6074,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3578:23:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3562:39:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 6079,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 6077,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6063,
                          "src": "3620:2:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 6078,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6070,
                          "src": "3626:5:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3620:11:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a20617070726f76616c20746f2063757272656e74206f776e6572",
                        "id": 6080,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3633:35:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942",
                          "typeString": "literal_string \"ERC721: approval to current owner\""
                        },
                        "value": "ERC721: approval to current owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942",
                          "typeString": "literal_string \"ERC721: approval to current owner\""
                        }
                      ],
                      "id": 6076,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3612:7:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6081,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3612:57:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6082,
                  "nodeType": "ExpressionStatement",
                  "src": "3612:57:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 6093,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 6087,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 6084,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8893,
                              "src": "3690:10:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 6085,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3690:12:27",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 6086,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6070,
                            "src": "3706:5:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3690:21:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 6089,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6070,
                              "src": "3732:5:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 6090,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8893,
                                "src": "3739:10:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 6091,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3739:12:27",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 6088,
                            "name": "isApprovedForAll",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6176,
                            "src": "3715:16:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address,address) view returns (bool)"
                            }
                          },
                          "id": 6092,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3715:37:27",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "3690:62:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a20617070726f76652063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c",
                        "id": 6094,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3767:58:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d",
                          "typeString": "literal_string \"ERC721: approve caller is not owner nor approved for all\""
                        },
                        "value": "ERC721: approve caller is not owner nor approved for all"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d",
                          "typeString": "literal_string \"ERC721: approve caller is not owner nor approved for all\""
                        }
                      ],
                      "id": 6083,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3682:7:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6095,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3682:154:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6096,
                  "nodeType": "ExpressionStatement",
                  "src": "3682:154:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 6098,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6063,
                        "src": "3858:2:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6099,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6065,
                        "src": "3862:7:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 6097,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6585,
                      "src": "3849:8:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 6100,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3849:21:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6101,
                  "nodeType": "ExpressionStatement",
                  "src": "3849:21:27"
                }
              ]
            },
            "documentation": {
              "id": 6061,
              "nodeType": "StructuredDocumentation",
              "src": "3427:48:27",
              "text": " @dev See {IERC721-approve}."
            },
            "functionSelector": "095ea7b3",
            "id": 6103,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "approve",
            "nameLocation": "3490:7:27",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 6067,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3542:8:27"
            },
            "parameters": {
              "id": 6066,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6063,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "3506:2:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 6103,
                  "src": "3498:10:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6062,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3498:7:27",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6065,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "3518:7:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 6103,
                  "src": "3510:15:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6064,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3510:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3497:29:27"
            },
            "returnParameters": {
              "id": 6068,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3551:0:27"
            },
            "scope": 6661,
            "src": "3481:397:27",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              8990
            ],
            "body": {
              "id": 6123,
              "nodeType": "Block",
              "src": "4029:136:27",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 6114,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6106,
                            "src": "4056:7:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 6113,
                          "name": "_exists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6299,
                          "src": "4048:7:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 6115,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4048:16:27",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a20617070726f76656420717565727920666f72206e6f6e6578697374656e7420746f6b656e",
                        "id": 6116,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4066:46:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d",
                          "typeString": "literal_string \"ERC721: approved query for nonexistent token\""
                        },
                        "value": "ERC721: approved query for nonexistent token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d",
                          "typeString": "literal_string \"ERC721: approved query for nonexistent token\""
                        }
                      ],
                      "id": 6112,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4040:7:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6117,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4040:73:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6118,
                  "nodeType": "ExpressionStatement",
                  "src": "4040:73:27"
                },
                {
                  "expression": {
                    "baseExpression": {
                      "id": 6119,
                      "name": "_tokenApprovals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5883,
                      "src": "4133:15:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                        "typeString": "mapping(uint256 => address)"
                      }
                    },
                    "id": 6121,
                    "indexExpression": {
                      "id": 6120,
                      "name": "tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6106,
                      "src": "4149:7:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4133:24:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 6111,
                  "id": 6122,
                  "nodeType": "Return",
                  "src": "4126:31:27"
                }
              ]
            },
            "documentation": {
              "id": 6104,
              "nodeType": "StructuredDocumentation",
              "src": "3886:52:27",
              "text": " @dev See {IERC721-getApproved}."
            },
            "functionSelector": "081812fc",
            "id": 6124,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getApproved",
            "nameLocation": "3953:11:27",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 6108,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4002:8:27"
            },
            "parameters": {
              "id": 6107,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6106,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "3973:7:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 6124,
                  "src": "3965:15:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6105,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3965:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3964:17:27"
            },
            "returnParameters": {
              "id": 6111,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6110,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 6124,
                  "src": "4020:7:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6109,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4020:7:27",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4019:9:27"
            },
            "scope": 6661,
            "src": "3944:221:27",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              8998
            ],
            "body": {
              "id": 6157,
              "nodeType": "Block",
              "src": "4321:211:27",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 6137,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 6134,
                          "name": "operator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6127,
                          "src": "4340:8:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 6135,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8893,
                            "src": "4352:10:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 6136,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4352:12:27",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4340:24:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a20617070726f766520746f2063616c6c6572",
                        "id": 6138,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4366:27:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05",
                          "typeString": "literal_string \"ERC721: approve to caller\""
                        },
                        "value": "ERC721: approve to caller"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05",
                          "typeString": "literal_string \"ERC721: approve to caller\""
                        }
                      ],
                      "id": 6133,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4332:7:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6139,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4332:62:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6140,
                  "nodeType": "ExpressionStatement",
                  "src": "4332:62:27"
                },
                {
                  "expression": {
                    "id": 6148,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 6141,
                          "name": "_operatorApprovals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5889,
                          "src": "4407:18:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                            "typeString": "mapping(address => mapping(address => bool))"
                          }
                        },
                        "id": 6145,
                        "indexExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 6142,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8893,
                            "src": "4426:10:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 6143,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4426:12:27",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4407:32:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 6146,
                      "indexExpression": {
                        "id": 6144,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6127,
                        "src": "4440:8:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4407:42:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 6147,
                      "name": "approved",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6129,
                      "src": "4452:8:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "4407:53:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 6149,
                  "nodeType": "ExpressionStatement",
                  "src": "4407:53:27"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 6151,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8893,
                          "src": "4491:10:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 6152,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4491:12:27",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6153,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6127,
                        "src": "4505:8:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6154,
                        "name": "approved",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6129,
                        "src": "4515:8:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 6150,
                      "name": "ApprovalForAll",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8938,
                      "src": "4476:14:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,address,bool)"
                      }
                    },
                    "id": 6155,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4476:48:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6156,
                  "nodeType": "EmitStatement",
                  "src": "4471:53:27"
                }
              ]
            },
            "documentation": {
              "id": 6125,
              "nodeType": "StructuredDocumentation",
              "src": "4173:58:27",
              "text": " @dev See {IERC721-setApprovalForAll}."
            },
            "functionSelector": "a22cb465",
            "id": 6158,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setApprovalForAll",
            "nameLocation": "4246:17:27",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 6131,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4312:8:27"
            },
            "parameters": {
              "id": 6130,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6127,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "4272:8:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 6158,
                  "src": "4264:16:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6126,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4264:7:27",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6129,
                  "mutability": "mutable",
                  "name": "approved",
                  "nameLocation": "4287:8:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 6158,
                  "src": "4282:13:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 6128,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4282:4:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4263:33:27"
            },
            "returnParameters": {
              "id": 6132,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4321:0:27"
            },
            "scope": 6661,
            "src": "4237:295:27",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              9008
            ],
            "body": {
              "id": 6175,
              "nodeType": "Block",
              "src": "4706:61:27",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 6169,
                        "name": "_operatorApprovals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5889,
                        "src": "4724:18:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                          "typeString": "mapping(address => mapping(address => bool))"
                        }
                      },
                      "id": 6171,
                      "indexExpression": {
                        "id": 6170,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6161,
                        "src": "4743:5:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "4724:25:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 6173,
                    "indexExpression": {
                      "id": 6172,
                      "name": "operator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6163,
                      "src": "4750:8:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4724:35:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 6168,
                  "id": 6174,
                  "nodeType": "Return",
                  "src": "4717:42:27"
                }
              ]
            },
            "documentation": {
              "id": 6159,
              "nodeType": "StructuredDocumentation",
              "src": "4540:57:27",
              "text": " @dev See {IERC721-isApprovedForAll}."
            },
            "functionSelector": "e985e9c5",
            "id": 6176,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isApprovedForAll",
            "nameLocation": "4612:16:27",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 6165,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4682:8:27"
            },
            "parameters": {
              "id": 6164,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6161,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "4637:5:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 6176,
                  "src": "4629:13:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6160,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4629:7:27",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6163,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "4652:8:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 6176,
                  "src": "4644:16:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6162,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4644:7:27",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4628:33:27"
            },
            "returnParameters": {
              "id": 6168,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6167,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 6176,
                  "src": "4700:4:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 6166,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4700:4:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4699:6:27"
            },
            "scope": 6661,
            "src": "4603:164:27",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              8974
            ],
            "body": {
              "id": 6202,
              "nodeType": "Block",
              "src": "4923:216:27",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 6189,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8893,
                              "src": "5014:10:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 6190,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5014:12:27",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 6191,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6183,
                            "src": "5028:7:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 6188,
                          "name": "_isApprovedOrOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6340,
                          "src": "4995:18:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) view returns (bool)"
                          }
                        },
                        "id": 6192,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4995:41:27",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
                        "id": 6193,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5038:51:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2",
                          "typeString": "literal_string \"ERC721: transfer caller is not owner nor approved\""
                        },
                        "value": "ERC721: transfer caller is not owner nor approved"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2",
                          "typeString": "literal_string \"ERC721: transfer caller is not owner nor approved\""
                        }
                      ],
                      "id": 6187,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4987:7:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6194,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4987:103:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6195,
                  "nodeType": "ExpressionStatement",
                  "src": "4987:103:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 6197,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6179,
                        "src": "5113:4:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6198,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6181,
                        "src": "5119:2:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6199,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6183,
                        "src": "5123:7:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 6196,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6561,
                      "src": "5103:9:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 6200,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5103:28:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6201,
                  "nodeType": "ExpressionStatement",
                  "src": "5103:28:27"
                }
              ]
            },
            "documentation": {
              "id": 6177,
              "nodeType": "StructuredDocumentation",
              "src": "4775:53:27",
              "text": " @dev See {IERC721-transferFrom}."
            },
            "functionSelector": "23b872dd",
            "id": 6203,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nameLocation": "4843:12:27",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 6185,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4914:8:27"
            },
            "parameters": {
              "id": 6184,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6179,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "4864:4:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 6203,
                  "src": "4856:12:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6178,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4856:7:27",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6181,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "4878:2:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 6203,
                  "src": "4870:10:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6180,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4870:7:27",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6183,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "4890:7:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 6203,
                  "src": "4882:15:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6182,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4882:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4855:43:27"
            },
            "returnParameters": {
              "id": 6186,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4923:0:27"
            },
            "scope": 6661,
            "src": "4834:305:27",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              8964
            ],
            "body": {
              "id": 6221,
              "nodeType": "Block",
              "src": "5303:58:27",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 6215,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6206,
                        "src": "5331:4:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6216,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6208,
                        "src": "5337:2:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6217,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6210,
                        "src": "5341:7:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 6218,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5350:2:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 6214,
                      "name": "safeTransferFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6222,
                        6252
                      ],
                      "referencedDeclaration": 6252,
                      "src": "5314:16:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,bytes memory)"
                      }
                    },
                    "id": 6219,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5314:39:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6220,
                  "nodeType": "ExpressionStatement",
                  "src": "5314:39:27"
                }
              ]
            },
            "documentation": {
              "id": 6204,
              "nodeType": "StructuredDocumentation",
              "src": "5147:57:27",
              "text": " @dev See {IERC721-safeTransferFrom}."
            },
            "functionSelector": "42842e0e",
            "id": 6222,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "safeTransferFrom",
            "nameLocation": "5219:16:27",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 6212,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5294:8:27"
            },
            "parameters": {
              "id": 6211,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6206,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "5244:4:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 6222,
                  "src": "5236:12:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6205,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5236:7:27",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6208,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "5258:2:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 6222,
                  "src": "5250:10:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6207,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5250:7:27",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6210,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "5270:7:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 6222,
                  "src": "5262:15:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6209,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5262:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5235:43:27"
            },
            "returnParameters": {
              "id": 6213,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5303:0:27"
            },
            "scope": 6661,
            "src": "5210:151:27",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              9020
            ],
            "body": {
              "id": 6251,
              "nodeType": "Block",
              "src": "5545:172:27",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 6237,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8893,
                              "src": "5583:10:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 6238,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5583:12:27",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 6239,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6229,
                            "src": "5597:7:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 6236,
                          "name": "_isApprovedOrOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6340,
                          "src": "5564:18:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) view returns (bool)"
                          }
                        },
                        "id": 6240,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5564:41:27",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
                        "id": 6241,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5607:51:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2",
                          "typeString": "literal_string \"ERC721: transfer caller is not owner nor approved\""
                        },
                        "value": "ERC721: transfer caller is not owner nor approved"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2",
                          "typeString": "literal_string \"ERC721: transfer caller is not owner nor approved\""
                        }
                      ],
                      "id": 6235,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5556:7:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6242,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5556:103:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6243,
                  "nodeType": "ExpressionStatement",
                  "src": "5556:103:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 6245,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6225,
                        "src": "5684:4:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6246,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6227,
                        "src": "5690:2:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6247,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6229,
                        "src": "5694:7:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 6248,
                        "name": "_data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6231,
                        "src": "5703:5:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 6244,
                      "name": "_safeTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6281,
                      "src": "5670:13:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,bytes memory)"
                      }
                    },
                    "id": 6249,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5670:39:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6250,
                  "nodeType": "ExpressionStatement",
                  "src": "5670:39:27"
                }
              ]
            },
            "documentation": {
              "id": 6223,
              "nodeType": "StructuredDocumentation",
              "src": "5369:57:27",
              "text": " @dev See {IERC721-safeTransferFrom}."
            },
            "functionSelector": "b88d4fde",
            "id": 6252,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "safeTransferFrom",
            "nameLocation": "5441:16:27",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 6233,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5536:8:27"
            },
            "parameters": {
              "id": 6232,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6225,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "5466:4:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 6252,
                  "src": "5458:12:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6224,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5458:7:27",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6227,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "5480:2:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 6252,
                  "src": "5472:10:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6226,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5472:7:27",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6229,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "5492:7:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 6252,
                  "src": "5484:15:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6228,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5484:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6231,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "5514:5:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 6252,
                  "src": "5501:18:27",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 6230,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "5501:5:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5457:63:27"
            },
            "returnParameters": {
              "id": 6234,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5545:0:27"
            },
            "scope": 6661,
            "src": "5432:285:27",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 6280,
              "nodeType": "Block",
              "src": "6702:169:27",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 6265,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6255,
                        "src": "6723:4:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6266,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6257,
                        "src": "6729:2:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6267,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6259,
                        "src": "6733:7:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 6264,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6561,
                      "src": "6713:9:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 6268,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6713:28:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6269,
                  "nodeType": "ExpressionStatement",
                  "src": "6713:28:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 6272,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6255,
                            "src": "6783:4:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 6273,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6257,
                            "src": "6789:2:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 6274,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6259,
                            "src": "6793:7:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 6275,
                            "name": "_data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6261,
                            "src": "6802:5:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 6271,
                          "name": "_checkOnERC721Received",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6649,
                          "src": "6760:22:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
                            "typeString": "function (address,address,uint256,bytes memory) returns (bool)"
                          }
                        },
                        "id": 6276,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6760:48:27",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
                        "id": 6277,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6810:52:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
                          "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
                        },
                        "value": "ERC721: transfer to non ERC721Receiver implementer"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
                          "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
                        }
                      ],
                      "id": 6270,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6752:7:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6278,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6752:111:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6279,
                  "nodeType": "ExpressionStatement",
                  "src": "6752:111:27"
                }
              ]
            },
            "documentation": {
              "id": 6253,
              "nodeType": "StructuredDocumentation",
              "src": "5725:868:27",
              "text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n `_data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
            },
            "id": 6281,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_safeTransfer",
            "nameLocation": "6608:13:27",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6262,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6255,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "6630:4:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 6281,
                  "src": "6622:12:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6254,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6622:7:27",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6257,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "6644:2:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 6281,
                  "src": "6636:10:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6256,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6636:7:27",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6259,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "6656:7:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 6281,
                  "src": "6648:15:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6258,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6648:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6261,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "6678:5:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 6281,
                  "src": "6665:18:27",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 6260,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "6665:5:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6621:63:27"
            },
            "returnParameters": {
              "id": 6263,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6702:0:27"
            },
            "scope": 6661,
            "src": "6599:272:27",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 6298,
              "nodeType": "Block",
              "src": "7255:56:27",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 6296,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 6289,
                        "name": "_owners",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5875,
                        "src": "7273:7:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 6291,
                      "indexExpression": {
                        "id": 6290,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6284,
                        "src": "7281:7:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "7273:16:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 6294,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7301:1:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 6293,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "7293:7:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 6292,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7293:7:27",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 6295,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7293:10:27",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "7273:30:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 6288,
                  "id": 6297,
                  "nodeType": "Return",
                  "src": "7266:37:27"
                }
              ]
            },
            "documentation": {
              "id": 6282,
              "nodeType": "StructuredDocumentation",
              "src": "6879:299:27",
              "text": " @dev Returns whether `tokenId` exists.\n Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n Tokens start existing when they are minted (`_mint`),\n and stop existing when they are burned (`_burn`)."
            },
            "id": 6299,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_exists",
            "nameLocation": "7193:7:27",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6285,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6284,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "7209:7:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 6299,
                  "src": "7201:15:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6283,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7201:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7200:17:27"
            },
            "returnParameters": {
              "id": 6288,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6287,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 6299,
                  "src": "7249:4:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 6286,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7249:4:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7248:6:27"
            },
            "scope": 6661,
            "src": "7184:127:27",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 6339,
              "nodeType": "Block",
              "src": "7577:249:27",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 6311,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6304,
                            "src": "7604:7:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 6310,
                          "name": "_exists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6299,
                          "src": "7596:7:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 6312,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7596:16:27",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a206f70657261746f7220717565727920666f72206e6f6e6578697374656e7420746f6b656e",
                        "id": 6313,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7614:46:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c",
                          "typeString": "literal_string \"ERC721: operator query for nonexistent token\""
                        },
                        "value": "ERC721: operator query for nonexistent token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c",
                          "typeString": "literal_string \"ERC721: operator query for nonexistent token\""
                        }
                      ],
                      "id": 6309,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7588:7:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6314,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7588:73:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6315,
                  "nodeType": "ExpressionStatement",
                  "src": "7588:73:27"
                },
                {
                  "assignments": [
                    6317
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6317,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "7680:5:27",
                      "nodeType": "VariableDeclaration",
                      "scope": 6339,
                      "src": "7672:13:27",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 6316,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "7672:7:27",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 6322,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 6320,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6304,
                        "src": "7703:7:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 6318,
                        "name": "ERC721",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6661,
                        "src": "7688:6:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721_$6661_$",
                          "typeString": "type(contract ERC721)"
                        }
                      },
                      "id": 6319,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "ownerOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5989,
                      "src": "7688:14:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view returns (address)"
                      }
                    },
                    "id": 6321,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7688:23:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7672:39:27"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 6336,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 6331,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 6325,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 6323,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6302,
                              "src": "7730:7:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "id": 6324,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6317,
                              "src": "7741:5:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "7730:16:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 6330,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "arguments": [
                                {
                                  "id": 6327,
                                  "name": "tokenId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6304,
                                  "src": "7762:7:27",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 6326,
                                "name": "getApproved",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6124,
                                "src": "7750:11:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                                  "typeString": "function (uint256) view returns (address)"
                                }
                              },
                              "id": 6328,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7750:20:27",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "id": 6329,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6302,
                              "src": "7774:7:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "7750:31:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "7730:51:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 6333,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6317,
                              "src": "7802:5:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 6334,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6302,
                              "src": "7809:7:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 6332,
                            "name": "isApprovedForAll",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6176,
                            "src": "7785:16:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address,address) view returns (bool)"
                            }
                          },
                          "id": 6335,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7785:32:27",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "7730:87:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "id": 6337,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "7729:89:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 6308,
                  "id": 6338,
                  "nodeType": "Return",
                  "src": "7722:96:27"
                }
              ]
            },
            "documentation": {
              "id": 6300,
              "nodeType": "StructuredDocumentation",
              "src": "7319:153:27",
              "text": " @dev Returns whether `spender` is allowed to manage `tokenId`.\n Requirements:\n - `tokenId` must exist."
            },
            "id": 6340,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_isApprovedOrOwner",
            "nameLocation": "7487:18:27",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6305,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6302,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "7514:7:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 6340,
                  "src": "7506:15:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6301,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7506:7:27",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6304,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "7531:7:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 6340,
                  "src": "7523:15:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6303,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7523:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7505:34:27"
            },
            "returnParameters": {
              "id": 6308,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6307,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 6340,
                  "src": "7571:4:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 6306,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7571:4:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7570:6:27"
            },
            "scope": 6661,
            "src": "7478:348:27",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 6354,
              "nodeType": "Block",
              "src": "8233:45:27",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 6349,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6343,
                        "src": "8254:2:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6350,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6345,
                        "src": "8258:7:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 6351,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8267:2:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 6348,
                      "name": "_safeMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6355,
                        6384
                      ],
                      "referencedDeclaration": 6384,
                      "src": "8244:9:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,bytes memory)"
                      }
                    },
                    "id": 6352,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8244:26:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6353,
                  "nodeType": "ExpressionStatement",
                  "src": "8244:26:27"
                }
              ]
            },
            "documentation": {
              "id": 6341,
              "nodeType": "StructuredDocumentation",
              "src": "7834:328:27",
              "text": " @dev Safely mints `tokenId` and transfers it to `to`.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
            },
            "id": 6355,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_safeMint",
            "nameLocation": "8177:9:27",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6346,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6343,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "8195:2:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 6355,
                  "src": "8187:10:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6342,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8187:7:27",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6345,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "8207:7:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 6355,
                  "src": "8199:15:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6344,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8199:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8186:29:27"
            },
            "returnParameters": {
              "id": 6347,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8233:0:27"
            },
            "scope": 6661,
            "src": "8168:110:27",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 6383,
              "nodeType": "Block",
              "src": "8590:165:27",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 6366,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6358,
                        "src": "8607:2:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6367,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6360,
                        "src": "8611:7:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 6365,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6441,
                      "src": "8601:5:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 6368,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8601:18:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6369,
                  "nodeType": "ExpressionStatement",
                  "src": "8601:18:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 6374,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8669:1:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 6373,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "8661:7:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 6372,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "8661:7:27",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 6375,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8661:10:27",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 6376,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6358,
                            "src": "8673:2:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 6377,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6360,
                            "src": "8677:7:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 6378,
                            "name": "_data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6362,
                            "src": "8686:5:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 6371,
                          "name": "_checkOnERC721Received",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6649,
                          "src": "8638:22:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
                            "typeString": "function (address,address,uint256,bytes memory) returns (bool)"
                          }
                        },
                        "id": 6379,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8638:54:27",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
                        "id": 6380,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8694:52:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
                          "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
                        },
                        "value": "ERC721: transfer to non ERC721Receiver implementer"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
                          "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
                        }
                      ],
                      "id": 6370,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8630:7:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6381,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8630:117:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6382,
                  "nodeType": "ExpressionStatement",
                  "src": "8630:117:27"
                }
              ]
            },
            "documentation": {
              "id": 6356,
              "nodeType": "StructuredDocumentation",
              "src": "8286:213:27",
              "text": " @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
            },
            "id": 6384,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_safeMint",
            "nameLocation": "8514:9:27",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6363,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6358,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "8532:2:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 6384,
                  "src": "8524:10:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6357,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8524:7:27",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6360,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "8544:7:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 6384,
                  "src": "8536:15:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6359,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8536:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6362,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "8566:5:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 6384,
                  "src": "8553:18:27",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 6361,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "8553:5:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8523:49:27"
            },
            "returnParameters": {
              "id": 6364,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8590:0:27"
            },
            "scope": 6661,
            "src": "8505:250:27",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 6440,
              "nodeType": "Block",
              "src": "9152:321:27",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 6398,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 6393,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6387,
                          "src": "9171:2:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 6396,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9185:1:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 6395,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "9177:7:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 6394,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "9177:7:27",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 6397,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9177:10:27",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "9171:16:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a206d696e7420746f20746865207a65726f2061646472657373",
                        "id": 6399,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9189:34:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6",
                          "typeString": "literal_string \"ERC721: mint to the zero address\""
                        },
                        "value": "ERC721: mint to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6",
                          "typeString": "literal_string \"ERC721: mint to the zero address\""
                        }
                      ],
                      "id": 6392,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9163:7:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6400,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9163:61:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6401,
                  "nodeType": "ExpressionStatement",
                  "src": "9163:61:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 6406,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "9243:17:27",
                        "subExpression": {
                          "arguments": [
                            {
                              "id": 6404,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6389,
                              "src": "9252:7:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 6403,
                            "name": "_exists",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6299,
                            "src": "9244:7:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (uint256) view returns (bool)"
                            }
                          },
                          "id": 6405,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9244:16:27",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a20746f6b656e20616c7265616479206d696e746564",
                        "id": 6407,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9262:30:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57",
                          "typeString": "literal_string \"ERC721: token already minted\""
                        },
                        "value": "ERC721: token already minted"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57",
                          "typeString": "literal_string \"ERC721: token already minted\""
                        }
                      ],
                      "id": 6402,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9235:7:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6408,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9235:58:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6409,
                  "nodeType": "ExpressionStatement",
                  "src": "9235:58:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 6413,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9335:1:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 6412,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9327:7:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 6411,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9327:7:27",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 6414,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9327:10:27",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6415,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6387,
                        "src": "9339:2:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6416,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6389,
                        "src": "9343:7:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 6410,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6660,
                      "src": "9306:20:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 6417,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9306:45:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6418,
                  "nodeType": "ExpressionStatement",
                  "src": "9306:45:27"
                },
                {
                  "expression": {
                    "id": 6423,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 6419,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5879,
                        "src": "9364:9:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 6421,
                      "indexExpression": {
                        "id": 6420,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6387,
                        "src": "9374:2:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "9364:13:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 6422,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9381:1:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "9364:18:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 6424,
                  "nodeType": "ExpressionStatement",
                  "src": "9364:18:27"
                },
                {
                  "expression": {
                    "id": 6429,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 6425,
                        "name": "_owners",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5875,
                        "src": "9393:7:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 6427,
                      "indexExpression": {
                        "id": 6426,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6389,
                        "src": "9401:7:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "9393:16:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 6428,
                      "name": "to",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6387,
                      "src": "9412:2:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "9393:21:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 6430,
                  "nodeType": "ExpressionStatement",
                  "src": "9393:21:27"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 6434,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9449:1:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 6433,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9441:7:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 6432,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9441:7:27",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 6435,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9441:10:27",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6436,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6387,
                        "src": "9453:2:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6437,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6389,
                        "src": "9457:7:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 6431,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8920,
                      "src": "9432:8:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 6438,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9432:33:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6439,
                  "nodeType": "EmitStatement",
                  "src": "9427:38:27"
                }
              ]
            },
            "documentation": {
              "id": 6385,
              "nodeType": "StructuredDocumentation",
              "src": "8763:322:27",
              "text": " @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."
            },
            "id": 6441,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_mint",
            "nameLocation": "9100:5:27",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6390,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6387,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "9114:2:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 6441,
                  "src": "9106:10:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6386,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9106:7:27",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6389,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "9126:7:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 6441,
                  "src": "9118:15:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6388,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9118:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9105:29:27"
            },
            "returnParameters": {
              "id": 6391,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9152:0:27"
            },
            "scope": 6661,
            "src": "9091:382:27",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 6491,
              "nodeType": "Block",
              "src": "9751:311:27",
              "statements": [
                {
                  "assignments": [
                    6448
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6448,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "9770:5:27",
                      "nodeType": "VariableDeclaration",
                      "scope": 6491,
                      "src": "9762:13:27",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 6447,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "9762:7:27",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 6453,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 6451,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6444,
                        "src": "9793:7:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 6449,
                        "name": "ERC721",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6661,
                        "src": "9778:6:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721_$6661_$",
                          "typeString": "type(contract ERC721)"
                        }
                      },
                      "id": 6450,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "ownerOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5989,
                      "src": "9778:14:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view returns (address)"
                      }
                    },
                    "id": 6452,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9778:23:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9762:39:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 6455,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6448,
                        "src": "9835:5:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 6458,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9850:1:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 6457,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9842:7:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 6456,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9842:7:27",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 6459,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9842:10:27",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6460,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6444,
                        "src": "9854:7:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 6454,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6660,
                      "src": "9814:20:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 6461,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9814:48:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6462,
                  "nodeType": "ExpressionStatement",
                  "src": "9814:48:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 6466,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9920:1:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 6465,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9912:7:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 6464,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9912:7:27",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 6467,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9912:10:27",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6468,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6444,
                        "src": "9924:7:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 6463,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6585,
                      "src": "9903:8:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 6469,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9903:29:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6470,
                  "nodeType": "ExpressionStatement",
                  "src": "9903:29:27"
                },
                {
                  "expression": {
                    "id": 6475,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 6471,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5879,
                        "src": "9945:9:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 6473,
                      "indexExpression": {
                        "id": 6472,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6448,
                        "src": "9955:5:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "9945:16:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 6474,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9965:1:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "9945:21:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 6476,
                  "nodeType": "ExpressionStatement",
                  "src": "9945:21:27"
                },
                {
                  "expression": {
                    "id": 6480,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "9977:23:27",
                    "subExpression": {
                      "baseExpression": {
                        "id": 6477,
                        "name": "_owners",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5875,
                        "src": "9984:7:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 6479,
                      "indexExpression": {
                        "id": 6478,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6444,
                        "src": "9992:7:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "9984:16:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6481,
                  "nodeType": "ExpressionStatement",
                  "src": "9977:23:27"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 6483,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6448,
                        "src": "10027:5:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 6486,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10042:1:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 6485,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10034:7:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 6484,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10034:7:27",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 6487,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10034:10:27",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6488,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6444,
                        "src": "10046:7:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 6482,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8920,
                      "src": "10018:8:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 6489,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10018:36:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6490,
                  "nodeType": "EmitStatement",
                  "src": "10013:41:27"
                }
              ]
            },
            "documentation": {
              "id": 6442,
              "nodeType": "StructuredDocumentation",
              "src": "9481:215:27",
              "text": " @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."
            },
            "id": 6492,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_burn",
            "nameLocation": "9711:5:27",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6445,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6444,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "9725:7:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 6492,
                  "src": "9717:15:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6443,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9717:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9716:17:27"
            },
            "returnParameters": {
              "id": 6446,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9751:0:27"
            },
            "scope": 6661,
            "src": "9702:360:27",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 6560,
              "nodeType": "Block",
              "src": "10478:465:27",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 6508,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 6505,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6499,
                              "src": "10512:7:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 6503,
                              "name": "ERC721",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6661,
                              "src": "10497:6:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_ERC721_$6661_$",
                                "typeString": "type(contract ERC721)"
                              }
                            },
                            "id": 6504,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "ownerOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5989,
                            "src": "10497:14:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view returns (address)"
                            }
                          },
                          "id": 6506,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10497:23:27",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 6507,
                          "name": "from",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6495,
                          "src": "10524:4:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "10497:31:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a207472616e73666572206f6620746f6b656e2074686174206973206e6f74206f776e",
                        "id": 6509,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10530:43:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a01073130a885d6c1c1af6ac75fc3b1c4f9403c235362962bbf528e2bd87d950",
                          "typeString": "literal_string \"ERC721: transfer of token that is not own\""
                        },
                        "value": "ERC721: transfer of token that is not own"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a01073130a885d6c1c1af6ac75fc3b1c4f9403c235362962bbf528e2bd87d950",
                          "typeString": "literal_string \"ERC721: transfer of token that is not own\""
                        }
                      ],
                      "id": 6502,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10489:7:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6510,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10489:85:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6511,
                  "nodeType": "ExpressionStatement",
                  "src": "10489:85:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 6518,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 6513,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6497,
                          "src": "10593:2:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 6516,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10607:1:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 6515,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "10599:7:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 6514,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "10599:7:27",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 6517,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10599:10:27",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "10593:16:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a207472616e7366657220746f20746865207a65726f2061646472657373",
                        "id": 6519,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10611:38:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4",
                          "typeString": "literal_string \"ERC721: transfer to the zero address\""
                        },
                        "value": "ERC721: transfer to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4",
                          "typeString": "literal_string \"ERC721: transfer to the zero address\""
                        }
                      ],
                      "id": 6512,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10585:7:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6520,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10585:65:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6521,
                  "nodeType": "ExpressionStatement",
                  "src": "10585:65:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 6523,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6495,
                        "src": "10684:4:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6524,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6497,
                        "src": "10690:2:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6525,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6499,
                        "src": "10694:7:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 6522,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6660,
                      "src": "10663:20:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 6526,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10663:39:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6527,
                  "nodeType": "ExpressionStatement",
                  "src": "10663:39:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 6531,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10784:1:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 6530,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10776:7:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 6529,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10776:7:27",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 6532,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10776:10:27",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6533,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6499,
                        "src": "10788:7:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 6528,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6585,
                      "src": "10767:8:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 6534,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10767:29:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6535,
                  "nodeType": "ExpressionStatement",
                  "src": "10767:29:27"
                },
                {
                  "expression": {
                    "id": 6540,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 6536,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5879,
                        "src": "10809:9:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 6538,
                      "indexExpression": {
                        "id": 6537,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6495,
                        "src": "10819:4:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "10809:15:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 6539,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10828:1:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "10809:20:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 6541,
                  "nodeType": "ExpressionStatement",
                  "src": "10809:20:27"
                },
                {
                  "expression": {
                    "id": 6546,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 6542,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5879,
                        "src": "10840:9:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 6544,
                      "indexExpression": {
                        "id": 6543,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6497,
                        "src": "10850:2:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "10840:13:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 6545,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10857:1:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "10840:18:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 6547,
                  "nodeType": "ExpressionStatement",
                  "src": "10840:18:27"
                },
                {
                  "expression": {
                    "id": 6552,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 6548,
                        "name": "_owners",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5875,
                        "src": "10869:7:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 6550,
                      "indexExpression": {
                        "id": 6549,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6499,
                        "src": "10877:7:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "10869:16:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 6551,
                      "name": "to",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6497,
                      "src": "10888:2:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "10869:21:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 6553,
                  "nodeType": "ExpressionStatement",
                  "src": "10869:21:27"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 6555,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6495,
                        "src": "10917:4:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6556,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6497,
                        "src": "10923:2:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6557,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6499,
                        "src": "10927:7:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 6554,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8920,
                      "src": "10908:8:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 6558,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10908:27:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6559,
                  "nodeType": "EmitStatement",
                  "src": "10903:32:27"
                }
              ]
            },
            "documentation": {
              "id": 6493,
              "nodeType": "StructuredDocumentation",
              "src": "10070:323:27",
              "text": " @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."
            },
            "id": 6561,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_transfer",
            "nameLocation": "10408:9:27",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6500,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6495,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "10426:4:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 6561,
                  "src": "10418:12:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6494,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10418:7:27",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6497,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "10440:2:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 6561,
                  "src": "10432:10:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6496,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10432:7:27",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6499,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "10452:7:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 6561,
                  "src": "10444:15:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6498,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10444:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10417:43:27"
            },
            "returnParameters": {
              "id": 6501,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10478:0:27"
            },
            "scope": 6661,
            "src": "10399:544:27",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 6584,
              "nodeType": "Block",
              "src": "11125:110:27",
              "statements": [
                {
                  "expression": {
                    "id": 6573,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 6569,
                        "name": "_tokenApprovals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5883,
                        "src": "11136:15:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 6571,
                      "indexExpression": {
                        "id": 6570,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6566,
                        "src": "11152:7:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "11136:24:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 6572,
                      "name": "to",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6564,
                      "src": "11163:2:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "11136:29:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 6574,
                  "nodeType": "ExpressionStatement",
                  "src": "11136:29:27"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 6578,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6566,
                            "src": "11205:7:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 6576,
                            "name": "ERC721",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6661,
                            "src": "11190:6:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ERC721_$6661_$",
                              "typeString": "type(contract ERC721)"
                            }
                          },
                          "id": 6577,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "ownerOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5989,
                          "src": "11190:14:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                            "typeString": "function (uint256) view returns (address)"
                          }
                        },
                        "id": 6579,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11190:23:27",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6580,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6564,
                        "src": "11215:2:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6581,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6566,
                        "src": "11219:7:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 6575,
                      "name": "Approval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8929,
                      "src": "11181:8:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 6582,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11181:46:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6583,
                  "nodeType": "EmitStatement",
                  "src": "11176:51:27"
                }
              ]
            },
            "documentation": {
              "id": 6562,
              "nodeType": "StructuredDocumentation",
              "src": "10951:104:27",
              "text": " @dev Approve `to` to operate on `tokenId`\n Emits a {Approval} event."
            },
            "id": 6585,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_approve",
            "nameLocation": "11070:8:27",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6567,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6564,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "11087:2:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 6585,
                  "src": "11079:10:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6563,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11079:7:27",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6566,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "11099:7:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 6585,
                  "src": "11091:15:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6565,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11091:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11078:29:27"
            },
            "returnParameters": {
              "id": 6568,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11125:0:27"
            },
            "scope": 6661,
            "src": "11061:174:27",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 6648,
              "nodeType": "Block",
              "src": "11932:711:27",
              "statements": [
                {
                  "condition": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 6599,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6590,
                        "src": "11947:2:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 6600,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "isContract",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7534,
                      "src": "11947:13:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
                        "typeString": "function (address) view returns (bool)"
                      }
                    },
                    "id": 6601,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11947:15:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 6646,
                    "nodeType": "Block",
                    "src": "12598:38:27",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 6644,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "12620:4:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 6598,
                        "id": 6645,
                        "nodeType": "Return",
                        "src": "12613:11:27"
                      }
                    ]
                  },
                  "id": 6647,
                  "nodeType": "IfStatement",
                  "src": "11943:693:27",
                  "trueBody": {
                    "id": 6643,
                    "nodeType": "Block",
                    "src": "11964:628:27",
                    "statements": [
                      {
                        "clauses": [
                          {
                            "block": {
                              "id": 6623,
                              "nodeType": "Block",
                              "src": "12080:97:27",
                              "statements": [
                                {
                                  "expression": {
                                    "commonType": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    },
                                    "id": 6621,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 6615,
                                      "name": "retval",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 6613,
                                      "src": "12106:6:27",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "==",
                                    "rightExpression": {
                                      "expression": {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "id": 6617,
                                              "name": "to",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 6590,
                                              "src": "12132:2:27",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            ],
                                            "id": 6616,
                                            "name": "IERC721Receiver",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 9039,
                                            "src": "12116:15:27",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$9039_$",
                                              "typeString": "type(contract IERC721Receiver)"
                                            }
                                          },
                                          "id": 6618,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "typeConversion",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "12116:19:27",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_IERC721Receiver_$9039",
                                            "typeString": "contract IERC721Receiver"
                                          }
                                        },
                                        "id": 6619,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "onERC721Received",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 9038,
                                        "src": "12116:36:27",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
                                          "typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
                                        }
                                      },
                                      "id": 6620,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "selector",
                                      "nodeType": "MemberAccess",
                                      "src": "12116:45:27",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      }
                                    },
                                    "src": "12106:55:27",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "functionReturnParameters": 6598,
                                  "id": 6622,
                                  "nodeType": "Return",
                                  "src": "12099:62:27"
                                }
                              ]
                            },
                            "errorName": "",
                            "id": 6624,
                            "nodeType": "TryCatchClause",
                            "parameters": {
                              "id": 6614,
                              "nodeType": "ParameterList",
                              "parameters": [
                                {
                                  "constant": false,
                                  "id": 6613,
                                  "mutability": "mutable",
                                  "name": "retval",
                                  "nameLocation": "12072:6:27",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 6624,
                                  "src": "12065:13:27",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  },
                                  "typeName": {
                                    "id": 6612,
                                    "name": "bytes4",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "12065:6:27",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "src": "12064:15:27"
                            },
                            "src": "12056:121:27"
                          },
                          {
                            "block": {
                              "id": 6640,
                              "nodeType": "Block",
                              "src": "12206:375:27",
                              "statements": [
                                {
                                  "condition": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 6631,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "id": 6628,
                                        "name": "reason",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 6626,
                                        "src": "12229:6:27",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes_memory_ptr",
                                          "typeString": "bytes memory"
                                        }
                                      },
                                      "id": 6629,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "length",
                                      "nodeType": "MemberAccess",
                                      "src": "12229:13:27",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "==",
                                    "rightExpression": {
                                      "hexValue": "30",
                                      "id": 6630,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "12246:1:27",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    },
                                    "src": "12229:18:27",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "falseBody": {
                                    "id": 6638,
                                    "nodeType": "Block",
                                    "src": "12358:208:27",
                                    "statements": [
                                      {
                                        "AST": {
                                          "nodeType": "YulBlock",
                                          "src": "12459:88:27",
                                          "statements": [
                                            {
                                              "expression": {
                                                "arguments": [
                                                  {
                                                    "arguments": [
                                                      {
                                                        "kind": "number",
                                                        "nodeType": "YulLiteral",
                                                        "src": "12497:2:27",
                                                        "type": "",
                                                        "value": "32"
                                                      },
                                                      {
                                                        "name": "reason",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "12501:6:27"
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "add",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "12493:3:27"
                                                    },
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "12493:15:27"
                                                  },
                                                  {
                                                    "arguments": [
                                                      {
                                                        "name": "reason",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "12516:6:27"
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "mload",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "12510:5:27"
                                                    },
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "12510:13:27"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "revert",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "12486:6:27"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "12486:38:27"
                                              },
                                              "nodeType": "YulExpressionStatement",
                                              "src": "12486:38:27"
                                            }
                                          ]
                                        },
                                        "evmVersion": "istanbul",
                                        "externalReferences": [
                                          {
                                            "declaration": 6626,
                                            "isOffset": false,
                                            "isSlot": false,
                                            "src": "12501:6:27",
                                            "valueSize": 1
                                          },
                                          {
                                            "declaration": 6626,
                                            "isOffset": false,
                                            "isSlot": false,
                                            "src": "12516:6:27",
                                            "valueSize": 1
                                          }
                                        ],
                                        "id": 6637,
                                        "nodeType": "InlineAssembly",
                                        "src": "12450:97:27"
                                      }
                                    ]
                                  },
                                  "id": 6639,
                                  "nodeType": "IfStatement",
                                  "src": "12225:341:27",
                                  "trueBody": {
                                    "id": 6636,
                                    "nodeType": "Block",
                                    "src": "12249:103:27",
                                    "statements": [
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "hexValue": "4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
                                              "id": 6633,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "string",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "12279:52:27",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
                                                "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
                                              },
                                              "value": "ERC721: transfer to non ERC721Receiver implementer"
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
                                                "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
                                              }
                                            ],
                                            "id": 6632,
                                            "name": "revert",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                              -19,
                                              -19
                                            ],
                                            "referencedDeclaration": -19,
                                            "src": "12272:6:27",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                              "typeString": "function (string memory) pure"
                                            }
                                          },
                                          "id": 6634,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "12272:60:27",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                          }
                                        },
                                        "id": 6635,
                                        "nodeType": "ExpressionStatement",
                                        "src": "12272:60:27"
                                      }
                                    ]
                                  }
                                }
                              ]
                            },
                            "errorName": "",
                            "id": 6641,
                            "nodeType": "TryCatchClause",
                            "parameters": {
                              "id": 6627,
                              "nodeType": "ParameterList",
                              "parameters": [
                                {
                                  "constant": false,
                                  "id": 6626,
                                  "mutability": "mutable",
                                  "name": "reason",
                                  "nameLocation": "12198:6:27",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 6641,
                                  "src": "12185:19:27",
                                  "stateVariable": false,
                                  "storageLocation": "memory",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes"
                                  },
                                  "typeName": {
                                    "id": 6625,
                                    "name": "bytes",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "12185:5:27",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_storage_ptr",
                                      "typeString": "bytes"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "src": "12184:21:27"
                            },
                            "src": "12178:403:27"
                          }
                        ],
                        "externalCall": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 6606,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8893,
                                "src": "12020:10:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 6607,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "12020:12:27",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 6608,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6588,
                              "src": "12034:4:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 6609,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6592,
                              "src": "12040:7:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 6610,
                              "name": "_data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6594,
                              "src": "12049:5:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 6603,
                                  "name": "to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6590,
                                  "src": "11999:2:27",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 6602,
                                "name": "IERC721Receiver",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9039,
                                "src": "11983:15:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$9039_$",
                                  "typeString": "type(contract IERC721Receiver)"
                                }
                              },
                              "id": 6604,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11983:19:27",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC721Receiver_$9039",
                                "typeString": "contract IERC721Receiver"
                              }
                            },
                            "id": 6605,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "onERC721Received",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 9038,
                            "src": "11983:36:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
                              "typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
                            }
                          },
                          "id": 6611,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11983:72:27",
                          "tryCall": true,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "id": 6642,
                        "nodeType": "TryStatement",
                        "src": "11979:602:27"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 6586,
              "nodeType": "StructuredDocumentation",
              "src": "11243:551:27",
              "text": " @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n The call is not executed if the target address is not a contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param _data bytes optional data to send along with the call\n @return bool whether the call correctly returned the expected magic value"
            },
            "id": 6649,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_checkOnERC721Received",
            "nameLocation": "11809:22:27",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6595,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6588,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "11840:4:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 6649,
                  "src": "11832:12:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6587,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11832:7:27",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6590,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "11854:2:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 6649,
                  "src": "11846:10:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6589,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11846:7:27",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6592,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "11866:7:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 6649,
                  "src": "11858:15:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6591,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11858:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6594,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "11888:5:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 6649,
                  "src": "11875:18:27",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 6593,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "11875:5:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11831:63:27"
            },
            "returnParameters": {
              "id": 6598,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6597,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 6649,
                  "src": "11921:4:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 6596,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "11921:4:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11920:6:27"
            },
            "scope": 6661,
            "src": "11800:843:27",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 6659,
              "nodeType": "Block",
              "src": "13346:3:27",
              "statements": []
            },
            "documentation": {
              "id": 6650,
              "nodeType": "StructuredDocumentation",
              "src": "12651:599:27",
              "text": " @dev Hook that is called before any token transfer. This includes minting\n and burning.\n Calling conditions:\n - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\n transferred to `to`.\n - When `from` is zero, `tokenId` will be minted for `to`.\n - When `to` is zero, ``from``'s `tokenId` will be burned.\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
            },
            "id": 6660,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeTokenTransfer",
            "nameLocation": "13265:20:27",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6657,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6652,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "13294:4:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 6660,
                  "src": "13286:12:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6651,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13286:7:27",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6654,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "13308:2:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 6660,
                  "src": "13300:10:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6653,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13300:7:27",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6656,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "13320:7:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 6660,
                  "src": "13312:15:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6655,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13312:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13285:43:27"
            },
            "returnParameters": {
              "id": 6658,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13346:0:27"
            },
            "scope": 6661,
            "src": "13256:93:27",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "scope": 6662,
        "src": "571:12781:27",
        "usedErrors": []
      }
    ],
    "src": "35:13319:27"
  },
  "bytecode": "60806040523480156200001157600080fd5b5060405162001497380380620014978339810160408190526200003491620001db565b81516200004990600090602085019062000068565b5080516200005f90600190602084019062000068565b50505062000282565b828054620000769062000245565b90600052602060002090601f0160209004810192826200009a5760008555620000e5565b82601f10620000b557805160ff1916838001178555620000e5565b82800160010185558215620000e5579182015b82811115620000e5578251825591602001919060010190620000c8565b50620000f3929150620000f7565b5090565b5b80821115620000f35760008155600101620000f8565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200013657600080fd5b81516001600160401b03808211156200015357620001536200010e565b604051601f8301601f19908116603f011681019082821181831017156200017e576200017e6200010e565b816040528381526020925086838588010111156200019b57600080fd5b600091505b83821015620001bf5785820183015181830184015290820190620001a0565b83821115620001d15760008385830101525b9695505050505050565b60008060408385031215620001ef57600080fd5b82516001600160401b03808211156200020757600080fd5b620002158683870162000124565b935060208501519150808211156200022c57600080fd5b506200023b8582860162000124565b9150509250929050565b600181811c908216806200025a57607f821691505b602082108114156200027c57634e487b7160e01b600052602260045260246000fd5b50919050565b61120580620002926000396000f3fe608060405234801561001057600080fd5b50600436106100bf5760003560e01c80636352211e1161007c5780636352211e1461016757806370a082311461017a57806395d89b411461019b578063a22cb465146101a3578063b88d4fde146101b6578063c87b56dd146101c9578063e985e9c5146101dc57600080fd5b806301ffc9a7146100c457806306fdde03146100ec578063081812fc14610101578063095ea7b31461012c57806323b872dd1461014157806342842e0e14610154575b600080fd5b6100d76100d2366004610d15565b6101ef565b60405190151581526020015b60405180910390f35b6100f4610241565b6040516100e39190610d8a565b61011461010f366004610d9d565b6102d3565b6040516001600160a01b0390911681526020016100e3565b61013f61013a366004610dd2565b610360565b005b61013f61014f366004610dfc565b610471565b61013f610162366004610dfc565b6104a2565b610114610175366004610d9d565b6104bd565b61018d610188366004610e38565b610534565b6040519081526020016100e3565b6100f46105bb565b61013f6101b1366004610e53565b6105ca565b61013f6101c4366004610ea5565b61068b565b6100f46101d7366004610d9d565b6106c3565b6100d76101ea366004610f81565b61079b565b60006001600160e01b031982166380ac58cd60e01b148061022057506001600160e01b03198216635b5e139f60e01b145b8061023b57506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606000805461025090610fb4565b80601f016020809104026020016040519081016040528092919081815260200182805461027c90610fb4565b80156102c95780601f1061029e576101008083540402835291602001916102c9565b820191906000526020600020905b8154815290600101906020018083116102ac57829003601f168201915b5050505050905090565b60006102de826107c9565b6103445760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b600061036b826104bd565b9050806001600160a01b0316836001600160a01b031614156103d95760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b606482015260840161033b565b336001600160a01b03821614806103f557506103f5813361079b565b6104625760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f776044820152771b995c881b9bdc88185c1c1c9bdd995908199bdc88185b1b60421b606482015260840161033b565b61046c83836107e6565b505050565b61047b3382610854565b6104975760405162461bcd60e51b815260040161033b90610fef565b61046c83838361091e565b61046c8383836040518060200160405280600081525061068b565b6000818152600260205260408120546001600160a01b03168061023b5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b606482015260840161033b565b60006001600160a01b03821661059f5760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b606482015260840161033b565b506001600160a01b031660009081526003602052604090205490565b60606001805461025090610fb4565b6001600160a01b03821633141561061f5760405162461bcd60e51b815260206004820152601960248201527822a9219b99189d1030b8383937bb32903a379031b0b63632b960391b604482015260640161033b565b3360008181526005602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b6106953383610854565b6106b15760405162461bcd60e51b815260040161033b90610fef565b6106bd84848484610abe565b50505050565b60606106ce826107c9565b6107325760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b606482015260840161033b565b600061074960408051602081019091526000815290565b905060008151116107695760405180602001604052806000815250610794565b8061077384610af1565b604051602001610784929190611040565b6040516020818303038152906040525b9392505050565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b6000908152600260205260409020546001600160a01b0316151590565b600081815260046020526040902080546001600160a01b0319166001600160a01b038416908117909155819061081b826104bd565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600061085f826107c9565b6108c05760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b606482015260840161033b565b60006108cb836104bd565b9050806001600160a01b0316846001600160a01b031614806109065750836001600160a01b03166108fb846102d3565b6001600160a01b0316145b806109165750610916818561079b565b949350505050565b826001600160a01b0316610931826104bd565b6001600160a01b0316146109995760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201526839903737ba1037bbb760b91b606482015260840161033b565b6001600160a01b0382166109fb5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b606482015260840161033b565b610a066000826107e6565b6001600160a01b0383166000908152600360205260408120805460019290610a2f908490611085565b90915550506001600160a01b0382166000908152600360205260408120805460019290610a5d90849061109c565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b610ac984848461091e565b610ad584848484610bef565b6106bd5760405162461bcd60e51b815260040161033b906110b4565b606081610b155750506040805180820190915260018152600360fc1b602082015290565b8160005b8115610b3f5780610b2981611106565b9150610b389050600a83611137565b9150610b19565b60008167ffffffffffffffff811115610b5a57610b5a610e8f565b6040519080825280601f01601f191660200182016040528015610b84576020820181803683370190505b5090505b841561091657610b99600183611085565b9150610ba6600a8661114b565b610bb190603061109c565b60f81b818381518110610bc657610bc661115f565b60200101906001600160f81b031916908160001a905350610be8600a86611137565b9450610b88565b60006001600160a01b0384163b15610cf157604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290610c33903390899088908890600401611175565b602060405180830381600087803b158015610c4d57600080fd5b505af1925050508015610c7d575060408051601f3d908101601f19168201909252610c7a918101906111b2565b60015b610cd7573d808015610cab576040519150601f19603f3d011682016040523d82523d6000602084013e610cb0565b606091505b508051610ccf5760405162461bcd60e51b815260040161033b906110b4565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610916565b506001949350505050565b6001600160e01b031981168114610d1257600080fd5b50565b600060208284031215610d2757600080fd5b813561079481610cfc565b60005b83811015610d4d578181015183820152602001610d35565b838111156106bd5750506000910152565b60008151808452610d76816020860160208601610d32565b601f01601f19169290920160200192915050565b6020815260006107946020830184610d5e565b600060208284031215610daf57600080fd5b5035919050565b80356001600160a01b0381168114610dcd57600080fd5b919050565b60008060408385031215610de557600080fd5b610dee83610db6565b946020939093013593505050565b600080600060608486031215610e1157600080fd5b610e1a84610db6565b9250610e2860208501610db6565b9150604084013590509250925092565b600060208284031215610e4a57600080fd5b61079482610db6565b60008060408385031215610e6657600080fd5b610e6f83610db6565b915060208301358015158114610e8457600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b60008060008060808587031215610ebb57600080fd5b610ec485610db6565b9350610ed260208601610db6565b925060408501359150606085013567ffffffffffffffff80821115610ef657600080fd5b818701915087601f830112610f0a57600080fd5b813581811115610f1c57610f1c610e8f565b604051601f8201601f19908116603f01168101908382118183101715610f4457610f44610e8f565b816040528281528a6020848701011115610f5d57600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b60008060408385031215610f9457600080fd5b610f9d83610db6565b9150610fab60208401610db6565b90509250929050565b600181811c90821680610fc857607f821691505b60208210811415610fe957634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b60008351611052818460208801610d32565b835190830190611066818360208801610d32565b01949350505050565b634e487b7160e01b600052601160045260246000fd5b6000828210156110975761109761106f565b500390565b600082198211156110af576110af61106f565b500190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b600060001982141561111a5761111a61106f565b5060010190565b634e487b7160e01b600052601260045260246000fd5b60008261114657611146611121565b500490565b60008261115a5761115a611121565b500690565b634e487b7160e01b600052603260045260246000fd5b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906111a890830184610d5e565b9695505050505050565b6000602082840312156111c457600080fd5b815161079481610cfc56fea26469706673582212202f7463cf26af89ecff6b67dc564754133df09c7510171f99384a7aa42666a81964736f6c63430008090033",
  "bytecodeSha1": "47070f545037c024b57816c43977df2e4760edaf",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 100
    },
    "version": "0.8.9+commit.e5eed63a"
  },
  "contractName": "ERC721",
  "coverageMap": {
    "branches": {
      "27": {
        "ERC721._isApprovedOrOwner": {
          "60": [
            7596,
            7612,
            true
          ]
        },
        "ERC721._safeTransfer": {
          "63": [
            6760,
            6808,
            true
          ]
        },
        "ERC721._transfer": {
          "61": [
            10497,
            10528,
            true
          ],
          "62": [
            10593,
            10609,
            true
          ]
        },
        "ERC721.approve": {
          "50": [
            3620,
            3631,
            true
          ],
          "51": [
            3690,
            3711,
            true
          ],
          "52": [
            3715,
            3752,
            true
          ]
        },
        "ERC721.balanceOf": {
          "55": [
            2008,
            2027,
            true
          ]
        },
        "ERC721.getApproved": {
          "49": [
            4048,
            4064,
            true
          ]
        },
        "ERC721.ownerOf": {
          "54": [
            2321,
            2340,
            true
          ]
        },
        "ERC721.safeTransferFrom": {
          "57": [
            5564,
            5605,
            true
          ]
        },
        "ERC721.setApprovalForAll": {
          "56": [
            4340,
            4364,
            true
          ]
        },
        "ERC721.tokenURI": {
          "58": [
            2935,
            2951,
            true
          ],
          "59": [
            3068,
            3093,
            true
          ]
        },
        "ERC721.transferFrom": {
          "53": [
            4995,
            5036,
            true
          ]
        }
      },
      "28": {},
      "29": {},
      "32": {},
      "33": {},
      "34": {},
      "35": {
        "Strings.toString": {
          "64": [
            561,
            571,
            false
          ]
        }
      },
      "36": {},
      "37": {}
    },
    "statements": {
      "27": {
        "ERC721._approve": {
          "26": [
            11136,
            11165
          ],
          "27": [
            11176,
            11227
          ]
        },
        "ERC721._baseURI": {
          "22": [
            3402,
            3411
          ]
        },
        "ERC721._checkOnERC721Received": {
          "46": [
            12272,
            12332
          ],
          "47": [
            12099,
            12161
          ],
          "48": [
            12613,
            12624
          ]
        },
        "ERC721._exists": {
          "25": [
            7266,
            7303
          ]
        },
        "ERC721._isApprovedOrOwner": {
          "28": [
            7588,
            7661
          ],
          "29": [
            7722,
            7818
          ]
        },
        "ERC721._safeTransfer": {
          "37": [
            6713,
            6741
          ],
          "38": [
            6752,
            6863
          ]
        },
        "ERC721._transfer": {
          "30": [
            10489,
            10574
          ],
          "31": [
            10585,
            10650
          ],
          "32": [
            10767,
            10796
          ],
          "33": [
            10809,
            10829
          ],
          "34": [
            10840,
            10858
          ],
          "35": [
            10869,
            10890
          ],
          "36": [
            10903,
            10935
          ]
        },
        "ERC721.approve": {
          "5": [
            3612,
            3669
          ],
          "7": [
            3682,
            3836
          ],
          "8": [
            3849,
            3870
          ]
        },
        "ERC721.balanceOf": {
          "13": [
            2000,
            2074
          ],
          "14": [
            2085,
            2108
          ]
        },
        "ERC721.getApproved": {
          "3": [
            4040,
            4113
          ],
          "4": [
            4126,
            4157
          ]
        },
        "ERC721.isApprovedForAll": {
          "24": [
            4717,
            4759
          ]
        },
        "ERC721.name": {
          "2": [
            2564,
            2576
          ]
        },
        "ERC721.ownerOf": {
          "12": [
            2313,
            2386
          ]
        },
        "ERC721.safeTransferFrom": {
          "11": [
            5314,
            5353
          ],
          "19": [
            5556,
            5659
          ],
          "20": [
            5670,
            5709
          ]
        },
        "ERC721.setApprovalForAll": {
          "16": [
            4332,
            4394
          ],
          "17": [
            4407,
            4460
          ],
          "18": [
            4471,
            4524
          ]
        },
        "ERC721.supportsInterface": {
          "0": [
            1671,
            1836
          ]
        },
        "ERC721.symbol": {
          "15": [
            2735,
            2749
          ]
        },
        "ERC721.tokenURI": {
          "21": [
            2927,
            3003
          ],
          "23": [
            3061,
            3180
          ]
        },
        "ERC721.transferFrom": {
          "9": [
            4987,
            5090
          ],
          "10": [
            5103,
            5131
          ]
        }
      },
      "28": {},
      "29": {},
      "32": {},
      "33": {
        "Address.isContract": {
          "45": [
            1142,
            1157
          ]
        }
      },
      "34": {
        "Context._msgSender": {
          "6": [
            674,
            691
          ]
        }
      },
      "35": {
        "Strings.toString": {
          "39": [
            588,
            598
          ],
          "40": [
            709,
            717
          ],
          "41": [
            732,
            742
          ],
          "42": [
            848,
            859
          ],
          "43": [
            874,
            930
          ],
          "44": [
            945,
            956
          ]
        }
      },
      "36": {
        "ERC165.supportsInterface": {
          "1": [
            889,
            936
          ]
        }
      },
      "37": {}
    }
  },
  "dependencies": [
    "Address",
    "Context",
    "ERC165",
    "IERC165",
    "IERC721",
    "IERC721Metadata",
    "IERC721Receiver",
    "Strings"
  ],
  "deployedBytecode": "",
  "deployedSourceMap": "571:12781:27:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1552:292;;;;;;:::i;:::-;;:::i;:::-;;;565:14:39;;558:22;540:41;;528:2;513:18;1552:292:27;;;;;;;;2484:100;;;:::i;:::-;;;;;;;:::i;3944:221::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1692:32:39;;;1674:51;;1662:2;1647:18;3944:221:27;1528:203:39;3481:397:27;;;;;;:::i;:::-;;:::i;:::-;;4834:305;;;;;;:::i;:::-;;:::i;5210:151::-;;;;;;:::i;:::-;;:::i;2178:239::-;;;;;;:::i;:::-;;:::i;1908:208::-;;;;;;:::i;:::-;;:::i;:::-;;;2843:25:39;;;2831:2;2816:18;1908:208:27;2697:177:39;2653:104:27;;;:::i;4237:295::-;;;;;;:::i;:::-;;:::i;5432:285::-;;;;;;:::i;:::-;;:::i;2828:360::-;;;;;;:::i;:::-;;:::i;4603:164::-;;;;;;:::i;:::-;;:::i;1552:292::-;1654:4;-1:-1:-1;;;;;;1678:40:27;;-1:-1:-1;;;1678:40:27;;:105;;-1:-1:-1;;;;;;;1735:48:27;;-1:-1:-1;;;1735:48:27;1678:105;:158;;;-1:-1:-1;;;;;;;;;;896:40:36;;;1800:36:27;1671:165;1552:292;-1:-1:-1;;1552:292:27:o;2484:100::-;2538:13;2571:5;2564:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2484:100;:::o;3944:221::-;4020:7;4048:16;4056:7;4048;:16::i;:::-;4040:73;;;;-1:-1:-1;;;4040:73:27;;5358:2:39;4040:73:27;;;5340:21:39;5397:2;5377:18;;;5370:30;5436:34;5416:18;;;5409:62;-1:-1:-1;;;5487:18:39;;;5480:42;5539:19;;4040:73:27;;;;;;;;;-1:-1:-1;4133:24:27;;;;:15;:24;;;;;;-1:-1:-1;;;;;4133:24:27;;3944:221::o;3481:397::-;3562:13;3578:23;3593:7;3578:14;:23::i;:::-;3562:39;;3626:5;-1:-1:-1;;;;;3620:11:27;:2;-1:-1:-1;;;;;3620:11:27;;;3612:57;;;;-1:-1:-1;;;3612:57:27;;5771:2:39;3612:57:27;;;5753:21:39;5810:2;5790:18;;;5783:30;5849:34;5829:18;;;5822:62;-1:-1:-1;;;5900:18:39;;;5893:31;5941:19;;3612:57:27;5569:397:39;3612:57:27;681:10:34;-1:-1:-1;;;;;3690:21:27;;;;:62;;-1:-1:-1;3715:37:27;3732:5;681:10:34;4603:164:27;:::i;3715:37::-;3682:154;;;;-1:-1:-1;;;3682:154:27;;6173:2:39;3682:154:27;;;6155:21:39;6212:2;6192:18;;;6185:30;6251:34;6231:18;;;6224:62;-1:-1:-1;;;6302:18:39;;;6295:54;6366:19;;3682:154:27;5971:420:39;3682:154:27;3849:21;3858:2;3862:7;3849:8;:21::i;:::-;3551:327;3481:397;;:::o;4834:305::-;4995:41;681:10:34;5028:7:27;4995:18;:41::i;:::-;4987:103;;;;-1:-1:-1;;;4987:103:27;;;;;;;:::i;:::-;5103:28;5113:4;5119:2;5123:7;5103:9;:28::i;5210:151::-;5314:39;5331:4;5337:2;5341:7;5314:39;;;;;;;;;;;;:16;:39::i;2178:239::-;2250:7;2286:16;;;:7;:16;;;;;;-1:-1:-1;;;;;2286:16:27;2321:19;2313:73;;;;-1:-1:-1;;;2313:73:27;;7016:2:39;2313:73:27;;;6998:21:39;7055:2;7035:18;;;7028:30;7094:34;7074:18;;;7067:62;-1:-1:-1;;;7145:18:39;;;7138:39;7194:19;;2313:73:27;6814:405:39;1908:208:27;1980:7;-1:-1:-1;;;;;2008:19:27;;2000:74;;;;-1:-1:-1;;;2000:74:27;;7426:2:39;2000:74:27;;;7408:21:39;7465:2;7445:18;;;7438:30;7504:34;7484:18;;;7477:62;-1:-1:-1;;;7555:18:39;;;7548:40;7605:19;;2000:74:27;7224:406:39;2000:74:27;-1:-1:-1;;;;;;2092:16:27;;;;;:9;:16;;;;;;;1908:208::o;2653:104::-;2709:13;2742:7;2735:14;;;;;:::i;4237:295::-;-1:-1:-1;;;;;4340:24:27;;681:10:34;4340:24:27;;4332:62;;;;-1:-1:-1;;;4332:62:27;;7837:2:39;4332:62:27;;;7819:21:39;7876:2;7856:18;;;7849:30;-1:-1:-1;;;7895:18:39;;;7888:55;7960:18;;4332:62:27;7635:349:39;4332:62:27;681:10:34;4407:32:27;;;;:18;:32;;;;;;;;-1:-1:-1;;;;;4407:42:27;;;;;;;;;;;;:53;;-1:-1:-1;;4407:53:27;;;;;;;;;;4476:48;;540:41:39;;;4407:42:27;;681:10:34;4476:48:27;;513:18:39;4476:48:27;;;;;;;4237:295;;:::o;5432:285::-;5564:41;681:10:34;5597:7:27;5564:18;:41::i;:::-;5556:103;;;;-1:-1:-1;;;5556:103:27;;;;;;;:::i;:::-;5670:39;5684:4;5690:2;5694:7;5703:5;5670:13;:39::i;:::-;5432:285;;;;:::o;2828:360::-;2901:13;2935:16;2943:7;2935;:16::i;:::-;2927:76;;;;-1:-1:-1;;;2927:76:27;;8191:2:39;2927:76:27;;;8173:21:39;8230:2;8210:18;;;8203:30;8269:34;8249:18;;;8242:62;-1:-1:-1;;;8320:18:39;;;8313:45;8375:19;;2927:76:27;7989:411:39;2927:76:27;3016:21;3040:10;3402:9;;;;;;;;;-1:-1:-1;3402:9:27;;;3325:94;3040:10;3016:34;;3092:1;3074:7;3068:21;:25;:112;;;;;;;;;;;;;;;;;3133:7;3142:18;:7;:16;:18::i;:::-;3116:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3068:112;3061:119;2828:360;-1:-1:-1;;;2828:360:27:o;4603:164::-;-1:-1:-1;;;;;4724:25:27;;;4700:4;4724:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;4603:164::o;7184:127::-;7249:4;7273:16;;;:7;:16;;;;;;-1:-1:-1;;;;;7273:16:27;:30;;;7184:127::o;11061:174::-;11136:24;;;;:15;:24;;;;;:29;;-1:-1:-1;;;;;;11136:29:27;-1:-1:-1;;;;;11136:29:27;;;;;;;;:24;;11190:23;11136:24;11190:14;:23::i;:::-;-1:-1:-1;;;;;11181:46:27;;;;;;;;;;;11061:174;;:::o;7478:348::-;7571:4;7596:16;7604:7;7596;:16::i;:::-;7588:73;;;;-1:-1:-1;;;7588:73:27;;9082:2:39;7588:73:27;;;9064:21:39;9121:2;9101:18;;;9094:30;9160:34;9140:18;;;9133:62;-1:-1:-1;;;9211:18:39;;;9204:42;9263:19;;7588:73:27;8880:408:39;7588:73:27;7672:13;7688:23;7703:7;7688:14;:23::i;:::-;7672:39;;7741:5;-1:-1:-1;;;;;7730:16:27;:7;-1:-1:-1;;;;;7730:16:27;;:51;;;;7774:7;-1:-1:-1;;;;;7750:31:27;:20;7762:7;7750:11;:20::i;:::-;-1:-1:-1;;;;;7750:31:27;;7730:51;:87;;;;7785:32;7802:5;7809:7;7785:16;:32::i;:::-;7722:96;7478:348;-1:-1:-1;;;;7478:348:27:o;10399:544::-;10524:4;-1:-1:-1;;;;;10497:31:27;:23;10512:7;10497:14;:23::i;:::-;-1:-1:-1;;;;;10497:31:27;;10489:85;;;;-1:-1:-1;;;10489:85:27;;9495:2:39;10489:85:27;;;9477:21:39;9534:2;9514:18;;;9507:30;9573:34;9553:18;;;9546:62;-1:-1:-1;;;9624:18:39;;;9617:39;9673:19;;10489:85:27;9293:405:39;10489:85:27;-1:-1:-1;;;;;10593:16:27;;10585:65;;;;-1:-1:-1;;;10585:65:27;;9905:2:39;10585:65:27;;;9887:21:39;9944:2;9924:18;;;9917:30;9983:34;9963:18;;;9956:62;-1:-1:-1;;;10034:18:39;;;10027:34;10078:19;;10585:65:27;9703:400:39;10585:65:27;10767:29;10784:1;10788:7;10767:8;:29::i;:::-;-1:-1:-1;;;;;10809:15:27;;;;;;:9;:15;;;;;:20;;10828:1;;10809:15;:20;;10828:1;;10809:20;:::i;:::-;;;;-1:-1:-1;;;;;;;10840:13:27;;;;;;:9;:13;;;;;:18;;10857:1;;10840:13;:18;;10857:1;;10840:18;:::i;:::-;;;;-1:-1:-1;;10869:16:27;;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;10869:21:27;-1:-1:-1;;;;;10869:21:27;;;;;;;;;10908:27;;10869:16;;10908:27;;;;;;;10399:544;;;:::o;6599:272::-;6713:28;6723:4;6729:2;6733:7;6713:9;:28::i;:::-;6760:48;6783:4;6789:2;6793:7;6802:5;6760:22;:48::i;:::-;6752:111;;;;-1:-1:-1;;;6752:111:27;;;;;;;:::i;284:723:35:-;340:13;561:10;557:53;;-1:-1:-1;;588:10:35;;;;;;;;;;;;-1:-1:-1;;;588:10:35;;;;;284:723::o;557:53::-;635:5;620:12;676:78;683:9;;676:78;;709:8;;;;:::i;:::-;;-1:-1:-1;732:10:35;;-1:-1:-1;740:2:35;732:10;;:::i;:::-;;;676:78;;;764:19;796:6;786:17;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;786:17:35;;764:39;;814:154;821:10;;814:154;;848:11;858:1;848:11;;:::i;:::-;;-1:-1:-1;917:10:35;925:2;917:5;:10;:::i;:::-;904:24;;:2;:24;:::i;:::-;891:39;;874:6;881;874:14;;;;;;;;:::i;:::-;;;;:56;-1:-1:-1;;;;;874:56:35;;;;;;;;-1:-1:-1;945:11:35;954:2;945:11;;:::i;:::-;;;814:154;;11800:843:27;11921:4;-1:-1:-1;;;;;11947:13:27;;1110:20:33;1149:8;11943:693:27;;11983:72;;-1:-1:-1;;;11983:72:27;;-1:-1:-1;;;;;11983:36:27;;;;;:72;;681:10:34;;12034:4:27;;12040:7;;12049:5;;11983:72;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;11983:72:27;;;;;;;;-1:-1:-1;;11983:72:27;;;;;;;;;;;;:::i;:::-;;;11979:602;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12229:13:27;;12225:341;;12272:60;;-1:-1:-1;;;12272:60:27;;;;;;;:::i;12225:341::-;12516:6;12510:13;12501:6;12497:2;12493:15;12486:38;11979:602;-1:-1:-1;;;;;;12106:55:27;-1:-1:-1;;;12106:55:27;;-1:-1:-1;12099:62:27;;11943:693;-1:-1:-1;12620:4:27;11800:843;;;;;;:::o;14:131:39:-;-1:-1:-1;;;;;;88:32:39;;78:43;;68:71;;135:1;132;125:12;68:71;14:131;:::o;150:245::-;208:6;261:2;249:9;240:7;236:23;232:32;229:52;;;277:1;274;267:12;229:52;316:9;303:23;335:30;359:5;335:30;:::i;592:258::-;664:1;674:113;688:6;685:1;682:13;674:113;;;764:11;;;758:18;745:11;;;738:39;710:2;703:10;674:113;;;805:6;802:1;799:13;796:48;;;-1:-1:-1;;840:1:39;822:16;;815:27;592:258::o;855:::-;897:3;935:5;929:12;962:6;957:3;950:19;978:63;1034:6;1027:4;1022:3;1018:14;1011:4;1004:5;1000:16;978:63;:::i;:::-;1095:2;1074:15;-1:-1:-1;;1070:29:39;1061:39;;;;1102:4;1057:50;;855:258;-1:-1:-1;;855:258:39:o;1118:220::-;1267:2;1256:9;1249:21;1230:4;1287:45;1328:2;1317:9;1313:18;1305:6;1287:45;:::i;1343:180::-;1402:6;1455:2;1443:9;1434:7;1430:23;1426:32;1423:52;;;1471:1;1468;1461:12;1423:52;-1:-1:-1;1494:23:39;;1343:180;-1:-1:-1;1343:180:39:o;1736:173::-;1804:20;;-1:-1:-1;;;;;1853:31:39;;1843:42;;1833:70;;1899:1;1896;1889:12;1833:70;1736:173;;;:::o;1914:254::-;1982:6;1990;2043:2;2031:9;2022:7;2018:23;2014:32;2011:52;;;2059:1;2056;2049:12;2011:52;2082:29;2101:9;2082:29;:::i;:::-;2072:39;2158:2;2143:18;;;;2130:32;;-1:-1:-1;;;1914:254:39:o;2173:328::-;2250:6;2258;2266;2319:2;2307:9;2298:7;2294:23;2290:32;2287:52;;;2335:1;2332;2325:12;2287:52;2358:29;2377:9;2358:29;:::i;:::-;2348:39;;2406:38;2440:2;2429:9;2425:18;2406:38;:::i;:::-;2396:48;;2491:2;2480:9;2476:18;2463:32;2453:42;;2173:328;;;;;:::o;2506:186::-;2565:6;2618:2;2606:9;2597:7;2593:23;2589:32;2586:52;;;2634:1;2631;2624:12;2586:52;2657:29;2676:9;2657:29;:::i;2879:347::-;2944:6;2952;3005:2;2993:9;2984:7;2980:23;2976:32;2973:52;;;3021:1;3018;3011:12;2973:52;3044:29;3063:9;3044:29;:::i;:::-;3034:39;;3123:2;3112:9;3108:18;3095:32;3170:5;3163:13;3156:21;3149:5;3146:32;3136:60;;3192:1;3189;3182:12;3136:60;3215:5;3205:15;;;2879:347;;;;;:::o;3231:127::-;3292:10;3287:3;3283:20;3280:1;3273:31;3323:4;3320:1;3313:15;3347:4;3344:1;3337:15;3363:1138;3458:6;3466;3474;3482;3535:3;3523:9;3514:7;3510:23;3506:33;3503:53;;;3552:1;3549;3542:12;3503:53;3575:29;3594:9;3575:29;:::i;:::-;3565:39;;3623:38;3657:2;3646:9;3642:18;3623:38;:::i;:::-;3613:48;;3708:2;3697:9;3693:18;3680:32;3670:42;;3763:2;3752:9;3748:18;3735:32;3786:18;3827:2;3819:6;3816:14;3813:34;;;3843:1;3840;3833:12;3813:34;3881:6;3870:9;3866:22;3856:32;;3926:7;3919:4;3915:2;3911:13;3907:27;3897:55;;3948:1;3945;3938:12;3897:55;3984:2;3971:16;4006:2;4002;3999:10;3996:36;;;4012:18;;:::i;:::-;4087:2;4081:9;4055:2;4141:13;;-1:-1:-1;;4137:22:39;;;4161:2;4133:31;4129:40;4117:53;;;4185:18;;;4205:22;;;4182:46;4179:72;;;4231:18;;:::i;:::-;4271:10;4267:2;4260:22;4306:2;4298:6;4291:18;4346:7;4341:2;4336;4332;4328:11;4324:20;4321:33;4318:53;;;4367:1;4364;4357:12;4318:53;4423:2;4418;4414;4410:11;4405:2;4397:6;4393:15;4380:46;4468:1;4463:2;4458;4450:6;4446:15;4442:24;4435:35;4489:6;4479:16;;;;;;;3363:1138;;;;;;;:::o;4506:260::-;4574:6;4582;4635:2;4623:9;4614:7;4610:23;4606:32;4603:52;;;4651:1;4648;4641:12;4603:52;4674:29;4693:9;4674:29;:::i;:::-;4664:39;;4722:38;4756:2;4745:9;4741:18;4722:38;:::i;:::-;4712:48;;4506:260;;;;;:::o;4771:380::-;4850:1;4846:12;;;;4893;;;4914:61;;4968:4;4960:6;4956:17;4946:27;;4914:61;5021:2;5013:6;5010:14;4990:18;4987:38;4984:161;;;5067:10;5062:3;5058:20;5055:1;5048:31;5102:4;5099:1;5092:15;5130:4;5127:1;5120:15;4984:161;;4771:380;;;:::o;6396:413::-;6598:2;6580:21;;;6637:2;6617:18;;;6610:30;6676:34;6671:2;6656:18;;6649:62;-1:-1:-1;;;6742:2:39;6727:18;;6720:47;6799:3;6784:19;;6396:413::o;8405:470::-;8584:3;8622:6;8616:13;8638:53;8684:6;8679:3;8672:4;8664:6;8660:17;8638:53;:::i;:::-;8754:13;;8713:16;;;;8776:57;8754:13;8713:16;8810:4;8798:17;;8776:57;:::i;:::-;8849:20;;8405:470;-1:-1:-1;;;;8405:470:39:o;10108:127::-;10169:10;10164:3;10160:20;10157:1;10150:31;10200:4;10197:1;10190:15;10224:4;10221:1;10214:15;10240:125;10280:4;10308:1;10305;10302:8;10299:34;;;10313:18;;:::i;:::-;-1:-1:-1;10350:9:39;;10240:125::o;10370:128::-;10410:3;10441:1;10437:6;10434:1;10431:13;10428:39;;;10447:18;;:::i;:::-;-1:-1:-1;10483:9:39;;10370:128::o;10503:414::-;10705:2;10687:21;;;10744:2;10724:18;;;10717:30;10783:34;10778:2;10763:18;;10756:62;-1:-1:-1;;;10849:2:39;10834:18;;10827:48;10907:3;10892:19;;10503:414::o;10922:135::-;10961:3;-1:-1:-1;;10982:17:39;;10979:43;;;11002:18;;:::i;:::-;-1:-1:-1;11049:1:39;11038:13;;10922:135::o;11062:127::-;11123:10;11118:3;11114:20;11111:1;11104:31;11154:4;11151:1;11144:15;11178:4;11175:1;11168:15;11194:120;11234:1;11260;11250:35;;11265:18;;:::i;:::-;-1:-1:-1;11299:9:39;;11194:120::o;11319:112::-;11351:1;11377;11367:35;;11382:18;;:::i;:::-;-1:-1:-1;11416:9:39;;11319:112::o;11436:127::-;11497:10;11492:3;11488:20;11485:1;11478:31;11528:4;11525:1;11518:15;11552:4;11549:1;11542:15;11568:489;-1:-1:-1;;;;;11837:15:39;;;11819:34;;11889:15;;11884:2;11869:18;;11862:43;11936:2;11921:18;;11914:34;;;11984:3;11979:2;11964:18;;11957:31;;;11762:4;;12005:46;;12031:19;;12023:6;12005:46;:::i;:::-;11997:54;11568:489;-1:-1:-1;;;;;;11568:489:39:o;12062:249::-;12131:6;12184:2;12172:9;12163:7;12159:23;12155:32;12152:52;;;12200:1;12197;12190:12;12152:52;12232:9;12226:16;12251:30;12275:5;12251:30;:::i",
  "language": "Solidity",
  "natspec": {
    "details": "Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.",
    "kind": "dev",
    "methods": {
      "approve(address,uint256)": {
        "details": "See {IERC721-approve}."
      },
      "balanceOf(address)": {
        "details": "See {IERC721-balanceOf}."
      },
      "constructor": {
        "details": "Initializes the contract by setting a `name` and a `symbol` to the token collection."
      },
      "getApproved(uint256)": {
        "details": "See {IERC721-getApproved}."
      },
      "isApprovedForAll(address,address)": {
        "details": "See {IERC721-isApprovedForAll}."
      },
      "name()": {
        "details": "See {IERC721Metadata-name}."
      },
      "ownerOf(uint256)": {
        "details": "See {IERC721-ownerOf}."
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "See {IERC721-safeTransferFrom}."
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "See {IERC721-safeTransferFrom}."
      },
      "setApprovalForAll(address,bool)": {
        "details": "See {IERC721-setApprovalForAll}."
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}."
      },
      "symbol()": {
        "details": "See {IERC721Metadata-symbol}."
      },
      "tokenURI(uint256)": {
        "details": "See {IERC721Metadata-tokenURI}."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC721-transferFrom}."
      }
    },
    "version": 1
  },
  "offset": [
    571,
    13352
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xBF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x7C JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x19B JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x1A3 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x1B6 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x1C9 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x1DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xC4 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xEC JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x12C JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x141 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x154 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD7 PUSH2 0xD2 CALLDATASIZE PUSH1 0x4 PUSH2 0xD15 JUMP JUMPDEST PUSH2 0x1EF JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF4 PUSH2 0x241 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE3 SWAP2 SWAP1 PUSH2 0xD8A JUMP JUMPDEST PUSH2 0x114 PUSH2 0x10F CALLDATASIZE PUSH1 0x4 PUSH2 0xD9D JUMP JUMPDEST PUSH2 0x2D3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE3 JUMP JUMPDEST PUSH2 0x13F PUSH2 0x13A CALLDATASIZE PUSH1 0x4 PUSH2 0xDD2 JUMP JUMPDEST PUSH2 0x360 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x13F PUSH2 0x14F CALLDATASIZE PUSH1 0x4 PUSH2 0xDFC JUMP JUMPDEST PUSH2 0x471 JUMP JUMPDEST PUSH2 0x13F PUSH2 0x162 CALLDATASIZE PUSH1 0x4 PUSH2 0xDFC JUMP JUMPDEST PUSH2 0x4A2 JUMP JUMPDEST PUSH2 0x114 PUSH2 0x175 CALLDATASIZE PUSH1 0x4 PUSH2 0xD9D JUMP JUMPDEST PUSH2 0x4BD JUMP JUMPDEST PUSH2 0x18D PUSH2 0x188 CALLDATASIZE PUSH1 0x4 PUSH2 0xE38 JUMP JUMPDEST PUSH2 0x534 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE3 JUMP JUMPDEST PUSH2 0xF4 PUSH2 0x5BB JUMP JUMPDEST PUSH2 0x13F PUSH2 0x1B1 CALLDATASIZE PUSH1 0x4 PUSH2 0xE53 JUMP JUMPDEST PUSH2 0x5CA JUMP JUMPDEST PUSH2 0x13F PUSH2 0x1C4 CALLDATASIZE PUSH1 0x4 PUSH2 0xEA5 JUMP JUMPDEST PUSH2 0x68B JUMP JUMPDEST PUSH2 0xF4 PUSH2 0x1D7 CALLDATASIZE PUSH1 0x4 PUSH2 0xD9D JUMP JUMPDEST PUSH2 0x6C3 JUMP JUMPDEST PUSH2 0xD7 PUSH2 0x1EA CALLDATASIZE PUSH1 0x4 PUSH2 0xF81 JUMP JUMPDEST PUSH2 0x79B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x220 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x23B JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x250 SWAP1 PUSH2 0xFB4 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x27C SWAP1 PUSH2 0xFB4 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2C9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x29E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2C9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2AC JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2DE DUP3 PUSH2 0x7C9 JUMP JUMPDEST PUSH2 0x344 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76656420717565727920666F72206E6F6E6578 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x34B9BA32B73A103A37B5B2B7 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x36B DUP3 PUSH2 0x4BD JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x3D9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x33B JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ DUP1 PUSH2 0x3F5 JUMPI POP PUSH2 0x3F5 DUP2 CALLER PUSH2 0x79B JUMP JUMPDEST PUSH2 0x462 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F74206F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH24 0x1B995C881B9BDC88185C1C1C9BDD995908199BDC88185B1B PUSH1 0x42 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x33B JUMP JUMPDEST PUSH2 0x46C DUP4 DUP4 PUSH2 0x7E6 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x47B CALLER DUP3 PUSH2 0x854 JUMP JUMPDEST PUSH2 0x497 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x33B SWAP1 PUSH2 0xFEF JUMP JUMPDEST PUSH2 0x46C DUP4 DUP4 DUP4 PUSH2 0x91E JUMP JUMPDEST PUSH2 0x46C DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x68B JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x23B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206F776E657220717565727920666F72206E6F6E6578697374 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x32B73A103A37B5B2B7 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x33B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x59F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A2062616C616E636520717565727920666F7220746865207A65 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x726F2061646472657373 PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x33B JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x250 SWAP1 PUSH2 0xFB4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND CALLER EQ ISZERO PUSH2 0x61F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH25 0x22A9219B99189D1030B8383937BB32903A379031B0B63632B9 PUSH1 0x39 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x33B JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD SWAP1 DUP2 MSTORE SWAP2 SWAP3 SWAP2 PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x695 CALLER DUP4 PUSH2 0x854 JUMP JUMPDEST PUSH2 0x6B1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x33B SWAP1 PUSH2 0xFEF JUMP JUMPDEST PUSH2 0x6BD DUP5 DUP5 DUP5 DUP5 PUSH2 0xABE JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x6CE DUP3 PUSH2 0x7C9 JUMP JUMPDEST PUSH2 0x732 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732314D657461646174613A2055524920717565727920666F72206E6F PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x3732BC34B9BA32B73A103A37B5B2B7 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x33B JUMP JUMPDEST PUSH1 0x0 PUSH2 0x749 PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x769 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x794 JUMP JUMPDEST DUP1 PUSH2 0x773 DUP5 PUSH2 0xAF1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x784 SWAP3 SWAP2 SWAP1 PUSH2 0x1040 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH2 0x81B DUP3 PUSH2 0x4BD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x85F DUP3 PUSH2 0x7C9 JUMP JUMPDEST PUSH2 0x8C0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206F70657261746F7220717565727920666F72206E6F6E6578 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x34B9BA32B73A103A37B5B2B7 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x33B JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8CB DUP4 PUSH2 0x4BD JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x906 JUMPI POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x8FB DUP5 PUSH2 0x2D3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST DUP1 PUSH2 0x916 JUMPI POP PUSH2 0x916 DUP2 DUP6 PUSH2 0x79B JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x931 DUP3 PUSH2 0x4BD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x999 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E73666572206F6620746F6B656E20746861742069 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x39903737BA1037BBB7 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x33B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x9FB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x33B JUMP JUMPDEST PUSH2 0xA06 PUSH1 0x0 DUP3 PUSH2 0x7E6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0xA2F SWAP1 DUP5 SWAP1 PUSH2 0x1085 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0xA5D SWAP1 DUP5 SWAP1 PUSH2 0x109C JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP5 SWAP4 SWAP2 DUP8 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 POP POP POP JUMP JUMPDEST PUSH2 0xAC9 DUP5 DUP5 DUP5 PUSH2 0x91E JUMP JUMPDEST PUSH2 0xAD5 DUP5 DUP5 DUP5 DUP5 PUSH2 0xBEF JUMP JUMPDEST PUSH2 0x6BD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x33B SWAP1 PUSH2 0x10B4 JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH2 0xB15 JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x3 PUSH1 0xFC SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x0 JUMPDEST DUP2 ISZERO PUSH2 0xB3F JUMPI DUP1 PUSH2 0xB29 DUP2 PUSH2 0x1106 JUMP JUMPDEST SWAP2 POP PUSH2 0xB38 SWAP1 POP PUSH1 0xA DUP4 PUSH2 0x1137 JUMP JUMPDEST SWAP2 POP PUSH2 0xB19 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xB5A JUMPI PUSH2 0xB5A PUSH2 0xE8F JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xB84 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST DUP5 ISZERO PUSH2 0x916 JUMPI PUSH2 0xB99 PUSH1 0x1 DUP4 PUSH2 0x1085 JUMP JUMPDEST SWAP2 POP PUSH2 0xBA6 PUSH1 0xA DUP7 PUSH2 0x114B JUMP JUMPDEST PUSH2 0xBB1 SWAP1 PUSH1 0x30 PUSH2 0x109C JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xBC6 JUMPI PUSH2 0xBC6 PUSH2 0x115F JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH2 0xBE8 PUSH1 0xA DUP7 PUSH2 0x1137 JUMP JUMPDEST SWAP5 POP PUSH2 0xB88 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0xCF1 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0xC33 SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1175 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC4D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xC7D JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xC7A SWAP2 DUP2 ADD SWAP1 PUSH2 0x11B2 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xCD7 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0xCAB JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xCB0 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH2 0xCCF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x33B SWAP1 PUSH2 0x10B4 JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP1 POP PUSH2 0x916 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xD12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD27 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x794 DUP2 PUSH2 0xCFC JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xD4D JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xD35 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x6BD JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0xD76 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0xD32 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x794 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xD5E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDAF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xDCD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xDE5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDEE DUP4 PUSH2 0xDB6 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xE11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE1A DUP5 PUSH2 0xDB6 JUMP JUMPDEST SWAP3 POP PUSH2 0xE28 PUSH1 0x20 DUP6 ADD PUSH2 0xDB6 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE4A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x794 DUP3 PUSH2 0xDB6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE66 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE6F DUP4 PUSH2 0xDB6 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xE84 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xEBB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEC4 DUP6 PUSH2 0xDB6 JUMP JUMPDEST SWAP4 POP PUSH2 0xED2 PUSH1 0x20 DUP7 ADD PUSH2 0xDB6 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xEF6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xF0A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0xF1C JUMPI PUSH2 0xF1C PUSH2 0xE8F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0xF44 JUMPI PUSH2 0xF44 PUSH2 0xE8F JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP11 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0xF5D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF94 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF9D DUP4 PUSH2 0xDB6 JUMP JUMPDEST SWAP2 POP PUSH2 0xFAB PUSH1 0x20 DUP5 ADD PUSH2 0xDB6 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xFC8 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0xFE9 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x31 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722063616C6C6572206973206E6F74206F PUSH1 0x40 DUP3 ADD MSTORE PUSH17 0x1DDB995C881B9BDC88185C1C1C9BDD9959 PUSH1 0x7A SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0x1052 DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0xD32 JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0x1066 DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0xD32 JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x1097 JUMPI PUSH2 0x1097 PUSH2 0x106F JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x10AF JUMPI PUSH2 0x10AF PUSH2 0x106F JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x32 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x40 DUP3 ADD MSTORE PUSH18 0x31B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x71 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x111A JUMPI PUSH2 0x111A PUSH2 0x106F JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1146 JUMPI PUSH2 0x1146 PUSH2 0x1121 JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x115A JUMPI PUSH2 0x115A PUSH2 0x1121 JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x11A8 SWAP1 DUP4 ADD DUP5 PUSH2 0xD5E JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x794 DUP2 PUSH2 0xCFC JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2F PUSH21 0x63CF26AF89ECFF6B67DC564754133DF09C7510171F SWAP10 CODESIZE 0x4A PUSH27 0xA42666A81964736F6C634300080900330000000000000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        571,
        13352
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        571,
        13352
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        571,
        13352
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "5": {
      "fn": null,
      "offset": [
        571,
        13352
      ],
      "op": "CALLVALUE",
      "path": "27"
    },
    "6": {
      "fn": null,
      "offset": [
        571,
        13352
      ],
      "op": "DUP1",
      "path": "27"
    },
    "7": {
      "fn": null,
      "offset": [
        571,
        13352
      ],
      "op": "ISZERO",
      "path": "27"
    },
    "8": {
      "fn": null,
      "offset": [
        571,
        13352
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        571,
        13352
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "12": {
      "fn": null,
      "offset": [
        571,
        13352
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        571,
        13352
      ],
      "op": "DUP1",
      "path": "27"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        571,
        13352
      ],
      "op": "REVERT",
      "path": "27"
    },
    "16": {
      "fn": null,
      "offset": [
        571,
        13352
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "17": {
      "fn": null,
      "offset": [
        571,
        13352
      ],
      "op": "POP",
      "path": "27"
    },
    "18": {
      "fn": null,
      "offset": [
        571,
        13352
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        571,
        13352
      ],
      "op": "CALLDATASIZE",
      "path": "27"
    },
    "21": {
      "fn": null,
      "offset": [
        571,
        13352
      ],
      "op": "LT",
      "path": "27"
    },
    "22": {
      "fn": null,
      "offset": [
        571,
        13352
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0xBF"
    },
    "25": {
      "fn": null,
      "offset": [
        571,
        13352
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "26": {
      "fn": null,
      "offset": [
        571,
        13352
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        571,
        13352
      ],
      "op": "CALLDATALOAD",
      "path": "27"
    },
    "29": {
      "fn": null,
      "offset": [
        571,
        13352
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        571,
        13352
      ],
      "op": "SHR",
      "path": "27"
    },
    "32": {
      "fn": null,
      "offset": [
        571,
        13352
      ],
      "op": "DUP1",
      "path": "27"
    },
    "33": {
      "fn": null,
      "offset": [
        571,
        13352
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0x6352211E"
    },
    "38": {
      "fn": null,
      "offset": [
        571,
        13352
      ],
      "op": "GT",
      "path": "27"
    },
    "39": {
      "fn": null,
      "offset": [
        571,
        13352
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x7C"
    },
    "42": {
      "fn": null,
      "offset": [
        571,
        13352
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "43": {
      "fn": null,
      "offset": [
        571,
        13352
      ],
      "op": "DUP1",
      "path": "27"
    },
    "44": {
      "fn": null,
      "offset": [
        571,
        13352
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0x6352211E"
    },
    "49": {
      "fn": null,
      "offset": [
        571,
        13352
      ],
      "op": "EQ",
      "path": "27"
    },
    "50": {
      "fn": null,
      "offset": [
        571,
        13352
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x167"
    },
    "53": {
      "fn": null,
      "offset": [
        571,
        13352
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "54": {
      "fn": null,
      "offset": [
        571,
        13352
      ],
      "op": "DUP1",
      "path": "27"
    },
    "55": {
      "fn": null,
      "offset": [
        571,
        13352
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0x70A08231"
    },
    "60": {
      "fn": null,
      "offset": [
        571,
        13352
      ],
      "op": "EQ",
      "path": "27"
    },
    "61": {
      "fn": null,
      "offset": [
        571,
        13352
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x17A"
    },
    "64": {
      "fn": null,
      "offset": [
        571,
        13352
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "65": {
      "fn": null,
      "offset": [
        571,
        13352
      ],
      "op": "DUP1",
      "path": "27"
    },
    "66": {
      "fn": null,
      "offset": [
        571,
        13352
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0x95D89B41"
    },
    "71": {
      "fn": null,
      "offset": [
        571,
        13352
      ],
      "op": "EQ",
      "path": "27"
    },
    "72": {
      "fn": null,
      "offset": [
        571,
        13352
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x19B"
    },
    "75": {
      "fn": null,
      "offset": [
        571,
        13352
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "76": {
      "fn": null,
      "offset": [
        571,
        13352
      ],
      "op": "DUP1",
      "path": "27"
    },
    "77": {
      "fn": null,
      "offset": [
        571,
        13352
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0xA22CB465"
    },
    "82": {
      "fn": null,
      "offset": [
        571,
        13352
      ],
      "op": "EQ",
      "path": "27"
    },
    "83": {
      "fn": null,
      "offset": [
        571,
        13352
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1A3"
    },
    "86": {
      "fn": null,
      "offset": [
        571,
        13352
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "87": {
      "fn": null,
      "offset": [
        571,
        13352
      ],
      "op": "DUP1",
      "path": "27"
    },
    "88": {
      "fn": null,
      "offset": [
        571,
        13352
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0xB88D4FDE"
    },
    "93": {
      "fn": null,
      "offset": [
        571,
        13352
      ],
      "op": "EQ",
      "path": "27"
    },
    "94": {
      "fn": null,
      "offset": [
        571,
        13352
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1B6"
    },
    "97": {
      "fn": null,
      "offset": [
        571,
        13352
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "98": {
      "fn": null,
      "offset": [
        571,
        13352
      ],
      "op": "DUP1",
      "path": "27"
    },
    "99": {
      "fn": null,
      "offset": [
        571,
        13352
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0xC87B56DD"
    },
    "104": {
      "fn": null,
      "offset": [
        571,
        13352
      ],
      "op": "EQ",
      "path": "27"
    },
    "105": {
      "fn": null,
      "offset": [
        571,
        13352
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1C9"
    },
    "108": {
      "fn": null,
      "offset": [
        571,
        13352
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "109": {
      "fn": null,
      "offset": [
        571,
        13352
      ],
      "op": "DUP1",
      "path": "27"
    },
    "110": {
      "fn": null,
      "offset": [
        571,
        13352
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0xE985E9C5"
    },
    "115": {
      "fn": null,
      "offset": [
        571,
        13352
      ],
      "op": "EQ",
      "path": "27"
    },
    "116": {
      "fn": null,
      "offset": [
        571,
        13352
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1DC"
    },
    "119": {
      "fn": null,
      "offset": [
        571,
        13352
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "120": {
      "fn": null,
      "offset": [
        571,
        13352
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "122": {
      "fn": null,
      "offset": [
        571,
        13352
      ],
      "op": "DUP1",
      "path": "27"
    },
    "123": {
      "fn": null,
      "offset": [
        571,
        13352
      ],
      "op": "REVERT",
      "path": "27"
    },
    "124": {
      "fn": null,
      "offset": [
        571,
        13352
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "125": {
      "fn": null,
      "offset": [
        571,
        13352
      ],
      "op": "DUP1",
      "path": "27"
    },
    "126": {
      "fn": null,
      "offset": [
        571,
        13352
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0x1FFC9A7"
    },
    "131": {
      "fn": null,
      "offset": [
        571,
        13352
      ],
      "op": "EQ",
      "path": "27"
    },
    "132": {
      "fn": null,
      "offset": [
        571,
        13352
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0xC4"
    },
    "135": {
      "fn": null,
      "offset": [
        571,
        13352
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "136": {
      "fn": null,
      "offset": [
        571,
        13352
      ],
      "op": "DUP1",
      "path": "27"
    },
    "137": {
      "fn": null,
      "offset": [
        571,
        13352
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0x6FDDE03"
    },
    "142": {
      "fn": null,
      "offset": [
        571,
        13352
      ],
      "op": "EQ",
      "path": "27"
    },
    "143": {
      "fn": null,
      "offset": [
        571,
        13352
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0xEC"
    },
    "146": {
      "fn": null,
      "offset": [
        571,
        13352
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "147": {
      "fn": null,
      "offset": [
        571,
        13352
      ],
      "op": "DUP1",
      "path": "27"
    },
    "148": {
      "fn": null,
      "offset": [
        571,
        13352
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0x81812FC"
    },
    "153": {
      "fn": null,
      "offset": [
        571,
        13352
      ],
      "op": "EQ",
      "path": "27"
    },
    "154": {
      "fn": null,
      "offset": [
        571,
        13352
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x101"
    },
    "157": {
      "fn": null,
      "offset": [
        571,
        13352
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "158": {
      "fn": null,
      "offset": [
        571,
        13352
      ],
      "op": "DUP1",
      "path": "27"
    },
    "159": {
      "fn": null,
      "offset": [
        571,
        13352
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0x95EA7B3"
    },
    "164": {
      "fn": null,
      "offset": [
        571,
        13352
      ],
      "op": "EQ",
      "path": "27"
    },
    "165": {
      "fn": null,
      "offset": [
        571,
        13352
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x12C"
    },
    "168": {
      "fn": null,
      "offset": [
        571,
        13352
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "169": {
      "fn": null,
      "offset": [
        571,
        13352
      ],
      "op": "DUP1",
      "path": "27"
    },
    "170": {
      "fn": null,
      "offset": [
        571,
        13352
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0x23B872DD"
    },
    "175": {
      "fn": null,
      "offset": [
        571,
        13352
      ],
      "op": "EQ",
      "path": "27"
    },
    "176": {
      "fn": null,
      "offset": [
        571,
        13352
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x141"
    },
    "179": {
      "fn": null,
      "offset": [
        571,
        13352
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "180": {
      "fn": null,
      "offset": [
        571,
        13352
      ],
      "op": "DUP1",
      "path": "27"
    },
    "181": {
      "fn": null,
      "offset": [
        571,
        13352
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0x42842E0E"
    },
    "186": {
      "fn": null,
      "offset": [
        571,
        13352
      ],
      "op": "EQ",
      "path": "27"
    },
    "187": {
      "fn": null,
      "offset": [
        571,
        13352
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x154"
    },
    "190": {
      "fn": null,
      "offset": [
        571,
        13352
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "191": {
      "fn": null,
      "offset": [
        571,
        13352
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "192": {
      "fn": null,
      "offset": [
        571,
        13352
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "194": {
      "fn": null,
      "offset": [
        571,
        13352
      ],
      "op": "DUP1",
      "path": "27"
    },
    "195": {
      "first_revert": true,
      "fn": null,
      "offset": [
        571,
        13352
      ],
      "op": "REVERT",
      "path": "27"
    },
    "196": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1552,
        1844
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "197": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1552,
        1844
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0xD7"
    },
    "200": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1552,
        1844
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0xD2"
    },
    "203": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1552,
        1844
      ],
      "op": "CALLDATASIZE",
      "path": "27"
    },
    "204": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1552,
        1844
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "206": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1552,
        1844
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0xD15"
    },
    "209": {
      "fn": "ERC721.supportsInterface",
      "jump": "i",
      "offset": [
        1552,
        1844
      ],
      "op": "JUMP",
      "path": "27"
    },
    "210": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1552,
        1844
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "211": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1552,
        1844
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1EF"
    },
    "214": {
      "fn": "ERC721.supportsInterface",
      "jump": "i",
      "offset": [
        1552,
        1844
      ],
      "op": "JUMP",
      "path": "27"
    },
    "215": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1552,
        1844
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "216": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1552,
        1844
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "218": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1552,
        1844
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "219": {
      "op": "SWAP1"
    },
    "220": {
      "op": "ISZERO"
    },
    "221": {
      "op": "ISZERO"
    },
    "222": {
      "op": "DUP2"
    },
    "223": {
      "op": "MSTORE"
    },
    "224": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "226": {
      "op": "ADD"
    },
    "227": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1552,
        1844
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "228": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1552,
        1844
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "230": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1552,
        1844
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "231": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1552,
        1844
      ],
      "op": "DUP1",
      "path": "27"
    },
    "232": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1552,
        1844
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "233": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1552,
        1844
      ],
      "op": "SUB",
      "path": "27"
    },
    "234": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1552,
        1844
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "235": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1552,
        1844
      ],
      "op": "RETURN",
      "path": "27"
    },
    "236": {
      "fn": "ERC721.name",
      "offset": [
        2484,
        2584
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "237": {
      "fn": "ERC721.name",
      "offset": [
        2484,
        2584
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0xF4"
    },
    "240": {
      "fn": "ERC721.name",
      "offset": [
        2484,
        2584
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x241"
    },
    "243": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        2484,
        2584
      ],
      "op": "JUMP",
      "path": "27"
    },
    "244": {
      "fn": "ERC721.name",
      "offset": [
        2484,
        2584
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "245": {
      "fn": "ERC721.name",
      "offset": [
        2484,
        2584
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "247": {
      "fn": "ERC721.name",
      "offset": [
        2484,
        2584
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "248": {
      "fn": "ERC721.name",
      "offset": [
        2484,
        2584
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0xE3"
    },
    "251": {
      "fn": "ERC721.name",
      "offset": [
        2484,
        2584
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "252": {
      "fn": "ERC721.name",
      "offset": [
        2484,
        2584
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "253": {
      "fn": "ERC721.name",
      "offset": [
        2484,
        2584
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0xD8A"
    },
    "256": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        2484,
        2584
      ],
      "op": "JUMP",
      "path": "27"
    },
    "257": {
      "fn": "ERC721.getApproved",
      "offset": [
        3944,
        4165
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "258": {
      "fn": "ERC721.getApproved",
      "offset": [
        3944,
        4165
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x114"
    },
    "261": {
      "fn": "ERC721.getApproved",
      "offset": [
        3944,
        4165
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x10F"
    },
    "264": {
      "fn": "ERC721.getApproved",
      "offset": [
        3944,
        4165
      ],
      "op": "CALLDATASIZE",
      "path": "27"
    },
    "265": {
      "fn": "ERC721.getApproved",
      "offset": [
        3944,
        4165
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "267": {
      "fn": "ERC721.getApproved",
      "offset": [
        3944,
        4165
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0xD9D"
    },
    "270": {
      "fn": "ERC721.getApproved",
      "jump": "i",
      "offset": [
        3944,
        4165
      ],
      "op": "JUMP",
      "path": "27"
    },
    "271": {
      "fn": "ERC721.getApproved",
      "offset": [
        3944,
        4165
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "272": {
      "fn": "ERC721.getApproved",
      "offset": [
        3944,
        4165
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x2D3"
    },
    "275": {
      "fn": "ERC721.getApproved",
      "jump": "i",
      "offset": [
        3944,
        4165
      ],
      "op": "JUMP",
      "path": "27"
    },
    "276": {
      "fn": "ERC721.getApproved",
      "offset": [
        3944,
        4165
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "277": {
      "fn": "ERC721.getApproved",
      "offset": [
        3944,
        4165
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "279": {
      "fn": "ERC721.getApproved",
      "offset": [
        3944,
        4165
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "280": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "282": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "284": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "286": {
      "op": "SHL"
    },
    "287": {
      "op": "SUB"
    },
    "288": {
      "op": "SWAP1"
    },
    "289": {
      "op": "SWAP2"
    },
    "290": {
      "op": "AND"
    },
    "291": {
      "op": "DUP2"
    },
    "292": {
      "op": "MSTORE"
    },
    "293": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "295": {
      "op": "ADD"
    },
    "296": {
      "fn": "ERC721.getApproved",
      "offset": [
        3944,
        4165
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0xE3"
    },
    "299": {
      "op": "JUMP"
    },
    "300": {
      "fn": "ERC721.approve",
      "offset": [
        3481,
        3878
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "301": {
      "fn": "ERC721.approve",
      "offset": [
        3481,
        3878
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x13F"
    },
    "304": {
      "fn": "ERC721.approve",
      "offset": [
        3481,
        3878
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x13A"
    },
    "307": {
      "fn": "ERC721.approve",
      "offset": [
        3481,
        3878
      ],
      "op": "CALLDATASIZE",
      "path": "27"
    },
    "308": {
      "fn": "ERC721.approve",
      "offset": [
        3481,
        3878
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "310": {
      "fn": "ERC721.approve",
      "offset": [
        3481,
        3878
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0xDD2"
    },
    "313": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3481,
        3878
      ],
      "op": "JUMP",
      "path": "27"
    },
    "314": {
      "fn": "ERC721.approve",
      "offset": [
        3481,
        3878
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "315": {
      "fn": "ERC721.approve",
      "offset": [
        3481,
        3878
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x360"
    },
    "318": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3481,
        3878
      ],
      "op": "JUMP",
      "path": "27"
    },
    "319": {
      "fn": "ERC721.approve",
      "offset": [
        3481,
        3878
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "320": {
      "fn": "ERC721.approve",
      "offset": [
        3481,
        3878
      ],
      "op": "STOP",
      "path": "27"
    },
    "321": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4834,
        5139
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "322": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4834,
        5139
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x13F"
    },
    "325": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4834,
        5139
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x14F"
    },
    "328": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4834,
        5139
      ],
      "op": "CALLDATASIZE",
      "path": "27"
    },
    "329": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4834,
        5139
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "331": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4834,
        5139
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0xDFC"
    },
    "334": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        4834,
        5139
      ],
      "op": "JUMP",
      "path": "27"
    },
    "335": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4834,
        5139
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "336": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4834,
        5139
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x471"
    },
    "339": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        4834,
        5139
      ],
      "op": "JUMP",
      "path": "27"
    },
    "340": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5210,
        5361
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "341": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5210,
        5361
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x13F"
    },
    "344": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5210,
        5361
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x162"
    },
    "347": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5210,
        5361
      ],
      "op": "CALLDATASIZE",
      "path": "27"
    },
    "348": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5210,
        5361
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "350": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5210,
        5361
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0xDFC"
    },
    "353": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5210,
        5361
      ],
      "op": "JUMP",
      "path": "27"
    },
    "354": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5210,
        5361
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "355": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5210,
        5361
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x4A2"
    },
    "358": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5210,
        5361
      ],
      "op": "JUMP",
      "path": "27"
    },
    "359": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2178,
        2417
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "360": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2178,
        2417
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x114"
    },
    "363": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2178,
        2417
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x175"
    },
    "366": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2178,
        2417
      ],
      "op": "CALLDATASIZE",
      "path": "27"
    },
    "367": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2178,
        2417
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "369": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2178,
        2417
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0xD9D"
    },
    "372": {
      "fn": "ERC721.ownerOf",
      "jump": "i",
      "offset": [
        2178,
        2417
      ],
      "op": "JUMP",
      "path": "27"
    },
    "373": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2178,
        2417
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "374": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2178,
        2417
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x4BD"
    },
    "377": {
      "fn": "ERC721.ownerOf",
      "jump": "i",
      "offset": [
        2178,
        2417
      ],
      "op": "JUMP",
      "path": "27"
    },
    "378": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1908,
        2116
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "379": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1908,
        2116
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x18D"
    },
    "382": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1908,
        2116
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x188"
    },
    "385": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1908,
        2116
      ],
      "op": "CALLDATASIZE",
      "path": "27"
    },
    "386": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1908,
        2116
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "388": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1908,
        2116
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0xE38"
    },
    "391": {
      "fn": "ERC721.balanceOf",
      "jump": "i",
      "offset": [
        1908,
        2116
      ],
      "op": "JUMP",
      "path": "27"
    },
    "392": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1908,
        2116
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "393": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1908,
        2116
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x534"
    },
    "396": {
      "fn": "ERC721.balanceOf",
      "jump": "i",
      "offset": [
        1908,
        2116
      ],
      "op": "JUMP",
      "path": "27"
    },
    "397": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1908,
        2116
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "398": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1908,
        2116
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "400": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1908,
        2116
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "401": {
      "op": "SWAP1"
    },
    "402": {
      "op": "DUP2"
    },
    "403": {
      "op": "MSTORE"
    },
    "404": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "406": {
      "op": "ADD"
    },
    "407": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1908,
        2116
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0xE3"
    },
    "410": {
      "op": "JUMP"
    },
    "411": {
      "fn": "ERC721.symbol",
      "offset": [
        2653,
        2757
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "412": {
      "fn": "ERC721.symbol",
      "offset": [
        2653,
        2757
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0xF4"
    },
    "415": {
      "fn": "ERC721.symbol",
      "offset": [
        2653,
        2757
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x5BB"
    },
    "418": {
      "fn": "ERC721.symbol",
      "jump": "i",
      "offset": [
        2653,
        2757
      ],
      "op": "JUMP",
      "path": "27"
    },
    "419": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4237,
        4532
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "420": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4237,
        4532
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x13F"
    },
    "423": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4237,
        4532
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1B1"
    },
    "426": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4237,
        4532
      ],
      "op": "CALLDATASIZE",
      "path": "27"
    },
    "427": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4237,
        4532
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "429": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4237,
        4532
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0xE53"
    },
    "432": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "i",
      "offset": [
        4237,
        4532
      ],
      "op": "JUMP",
      "path": "27"
    },
    "433": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4237,
        4532
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "434": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4237,
        4532
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x5CA"
    },
    "437": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "i",
      "offset": [
        4237,
        4532
      ],
      "op": "JUMP",
      "path": "27"
    },
    "438": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5432,
        5717
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "439": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5432,
        5717
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x13F"
    },
    "442": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5432,
        5717
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1C4"
    },
    "445": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5432,
        5717
      ],
      "op": "CALLDATASIZE",
      "path": "27"
    },
    "446": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5432,
        5717
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "448": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5432,
        5717
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0xEA5"
    },
    "451": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5432,
        5717
      ],
      "op": "JUMP",
      "path": "27"
    },
    "452": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5432,
        5717
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "453": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5432,
        5717
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x68B"
    },
    "456": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5432,
        5717
      ],
      "op": "JUMP",
      "path": "27"
    },
    "457": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2828,
        3188
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "458": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2828,
        3188
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0xF4"
    },
    "461": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2828,
        3188
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1D7"
    },
    "464": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2828,
        3188
      ],
      "op": "CALLDATASIZE",
      "path": "27"
    },
    "465": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2828,
        3188
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "467": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2828,
        3188
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0xD9D"
    },
    "470": {
      "fn": "ERC721.tokenURI",
      "jump": "i",
      "offset": [
        2828,
        3188
      ],
      "op": "JUMP",
      "path": "27"
    },
    "471": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2828,
        3188
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "472": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2828,
        3188
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x6C3"
    },
    "475": {
      "fn": "ERC721.tokenURI",
      "jump": "i",
      "offset": [
        2828,
        3188
      ],
      "op": "JUMP",
      "path": "27"
    },
    "476": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4603,
        4767
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "477": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4603,
        4767
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0xD7"
    },
    "480": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4603,
        4767
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1EA"
    },
    "483": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4603,
        4767
      ],
      "op": "CALLDATASIZE",
      "path": "27"
    },
    "484": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4603,
        4767
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "486": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4603,
        4767
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0xF81"
    },
    "489": {
      "fn": "ERC721.isApprovedForAll",
      "jump": "i",
      "offset": [
        4603,
        4767
      ],
      "op": "JUMP",
      "path": "27"
    },
    "490": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4603,
        4767
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "491": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4603,
        4767
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x79B"
    },
    "494": {
      "fn": "ERC721.isApprovedForAll",
      "jump": "i",
      "offset": [
        4603,
        4767
      ],
      "op": "JUMP",
      "path": "27"
    },
    "495": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1552,
        1844
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "496": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1654,
        1658
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "498": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "500": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "502": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "504": {
      "op": "SHL"
    },
    "505": {
      "op": "SUB"
    },
    "506": {
      "op": "NOT"
    },
    "507": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1678,
        1718
      ],
      "op": "DUP3",
      "path": "27",
      "statement": 0
    },
    "508": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1678,
        1718
      ],
      "op": "AND",
      "path": "27"
    },
    "509": {
      "op": "PUSH4",
      "value": "0x80AC58CD"
    },
    "514": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "516": {
      "op": "SHL"
    },
    "517": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1678,
        1718
      ],
      "op": "EQ",
      "path": "27"
    },
    "518": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1678,
        1718
      ],
      "op": "DUP1",
      "path": "27"
    },
    "519": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1678,
        1783
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x220"
    },
    "522": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1678,
        1783
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "523": {
      "op": "POP"
    },
    "524": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "526": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "528": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "530": {
      "op": "SHL"
    },
    "531": {
      "op": "SUB"
    },
    "532": {
      "op": "NOT"
    },
    "533": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1735,
        1783
      ],
      "op": "DUP3",
      "path": "27"
    },
    "534": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1735,
        1783
      ],
      "op": "AND",
      "path": "27"
    },
    "535": {
      "op": "PUSH4",
      "value": "0x5B5E139F"
    },
    "540": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "542": {
      "op": "SHL"
    },
    "543": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1735,
        1783
      ],
      "op": "EQ",
      "path": "27"
    },
    "544": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1678,
        1783
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "545": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1678,
        1836
      ],
      "op": "DUP1",
      "path": "27"
    },
    "546": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1678,
        1836
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x23B"
    },
    "549": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1678,
        1836
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "550": {
      "op": "POP"
    },
    "551": {
      "op": "PUSH4",
      "value": "0x1FFC9A7"
    },
    "556": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "558": {
      "op": "SHL"
    },
    "559": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "561": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "563": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "565": {
      "op": "SHL"
    },
    "566": {
      "op": "SUB"
    },
    "567": {
      "op": "NOT"
    },
    "568": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        896,
        936
      ],
      "op": "DUP4",
      "path": "36",
      "statement": 1
    },
    "569": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        896,
        936
      ],
      "op": "AND",
      "path": "36"
    },
    "570": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        896,
        936
      ],
      "op": "EQ",
      "path": "36"
    },
    "571": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1800,
        1836
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "572": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1671,
        1836
      ],
      "op": "SWAP3",
      "path": "27"
    },
    "573": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1552,
        1844
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "574": {
      "op": "POP"
    },
    "575": {
      "op": "POP"
    },
    "576": {
      "fn": "ERC721.supportsInterface",
      "jump": "o",
      "offset": [
        1552,
        1844
      ],
      "op": "JUMP",
      "path": "27"
    },
    "577": {
      "fn": "ERC721.name",
      "offset": [
        2484,
        2584
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "578": {
      "fn": "ERC721.name",
      "offset": [
        2538,
        2551
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x60"
    },
    "580": {
      "fn": "ERC721.name",
      "offset": [
        2571,
        2576
      ],
      "op": "PUSH1",
      "path": "27",
      "statement": 2,
      "value": "0x0"
    },
    "582": {
      "fn": "ERC721.name",
      "offset": [
        2564,
        2576
      ],
      "op": "DUP1",
      "path": "27"
    },
    "583": {
      "fn": "ERC721.name",
      "offset": [
        2564,
        2576
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "584": {
      "fn": "ERC721.name",
      "offset": [
        2564,
        2576
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x250"
    },
    "587": {
      "fn": "ERC721.name",
      "offset": [
        2564,
        2576
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "588": {
      "fn": "ERC721.name",
      "offset": [
        2564,
        2576
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0xFB4"
    },
    "591": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        2564,
        2576
      ],
      "op": "JUMP",
      "path": "27"
    },
    "592": {
      "fn": "ERC721.name",
      "offset": [
        2564,
        2576
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "593": {
      "fn": "ERC721.name",
      "offset": [
        2564,
        2576
      ],
      "op": "DUP1",
      "path": "27"
    },
    "594": {
      "fn": "ERC721.name",
      "offset": [
        2564,
        2576
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x1F"
    },
    "596": {
      "fn": "ERC721.name",
      "offset": [
        2564,
        2576
      ],
      "op": "ADD",
      "path": "27"
    },
    "597": {
      "fn": "ERC721.name",
      "offset": [
        2564,
        2576
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "599": {
      "fn": "ERC721.name",
      "offset": [
        2564,
        2576
      ],
      "op": "DUP1",
      "path": "27"
    },
    "600": {
      "fn": "ERC721.name",
      "offset": [
        2564,
        2576
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "601": {
      "fn": "ERC721.name",
      "offset": [
        2564,
        2576
      ],
      "op": "DIV",
      "path": "27"
    },
    "602": {
      "fn": "ERC721.name",
      "offset": [
        2564,
        2576
      ],
      "op": "MUL",
      "path": "27"
    },
    "603": {
      "fn": "ERC721.name",
      "offset": [
        2564,
        2576
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "605": {
      "fn": "ERC721.name",
      "offset": [
        2564,
        2576
      ],
      "op": "ADD",
      "path": "27"
    },
    "606": {
      "fn": "ERC721.name",
      "offset": [
        2564,
        2576
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "608": {
      "fn": "ERC721.name",
      "offset": [
        2564,
        2576
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "609": {
      "fn": "ERC721.name",
      "offset": [
        2564,
        2576
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "610": {
      "fn": "ERC721.name",
      "offset": [
        2564,
        2576
      ],
      "op": "DUP2",
      "path": "27"
    },
    "611": {
      "fn": "ERC721.name",
      "offset": [
        2564,
        2576
      ],
      "op": "ADD",
      "path": "27"
    },
    "612": {
      "fn": "ERC721.name",
      "offset": [
        2564,
        2576
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "614": {
      "fn": "ERC721.name",
      "offset": [
        2564,
        2576
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "615": {
      "fn": "ERC721.name",
      "offset": [
        2564,
        2576
      ],
      "op": "DUP1",
      "path": "27"
    },
    "616": {
      "fn": "ERC721.name",
      "offset": [
        2564,
        2576
      ],
      "op": "SWAP3",
      "path": "27"
    },
    "617": {
      "fn": "ERC721.name",
      "offset": [
        2564,
        2576
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "618": {
      "fn": "ERC721.name",
      "offset": [
        2564,
        2576
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "619": {
      "fn": "ERC721.name",
      "offset": [
        2564,
        2576
      ],
      "op": "DUP2",
      "path": "27"
    },
    "620": {
      "fn": "ERC721.name",
      "offset": [
        2564,
        2576
      ],
      "op": "DUP2",
      "path": "27"
    },
    "621": {
      "fn": "ERC721.name",
      "offset": [
        2564,
        2576
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "622": {
      "fn": "ERC721.name",
      "offset": [
        2564,
        2576
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "624": {
      "fn": "ERC721.name",
      "offset": [
        2564,
        2576
      ],
      "op": "ADD",
      "path": "27"
    },
    "625": {
      "fn": "ERC721.name",
      "offset": [
        2564,
        2576
      ],
      "op": "DUP3",
      "path": "27"
    },
    "626": {
      "fn": "ERC721.name",
      "offset": [
        2564,
        2576
      ],
      "op": "DUP1",
      "path": "27"
    },
    "627": {
      "fn": "ERC721.name",
      "offset": [
        2564,
        2576
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "628": {
      "fn": "ERC721.name",
      "offset": [
        2564,
        2576
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x27C"
    },
    "631": {
      "fn": "ERC721.name",
      "offset": [
        2564,
        2576
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "632": {
      "fn": "ERC721.name",
      "offset": [
        2564,
        2576
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0xFB4"
    },
    "635": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        2564,
        2576
      ],
      "op": "JUMP",
      "path": "27"
    },
    "636": {
      "fn": "ERC721.name",
      "offset": [
        2564,
        2576
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "637": {
      "fn": "ERC721.name",
      "offset": [
        2564,
        2576
      ],
      "op": "DUP1",
      "path": "27"
    },
    "638": {
      "fn": "ERC721.name",
      "offset": [
        2564,
        2576
      ],
      "op": "ISZERO",
      "path": "27"
    },
    "639": {
      "fn": "ERC721.name",
      "offset": [
        2564,
        2576
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x2C9"
    },
    "642": {
      "fn": "ERC721.name",
      "offset": [
        2564,
        2576
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "643": {
      "fn": "ERC721.name",
      "offset": [
        2564,
        2576
      ],
      "op": "DUP1",
      "path": "27"
    },
    "644": {
      "fn": "ERC721.name",
      "offset": [
        2564,
        2576
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x1F"
    },
    "646": {
      "fn": "ERC721.name",
      "offset": [
        2564,
        2576
      ],
      "op": "LT",
      "path": "27"
    },
    "647": {
      "fn": "ERC721.name",
      "offset": [
        2564,
        2576
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x29E"
    },
    "650": {
      "fn": "ERC721.name",
      "offset": [
        2564,
        2576
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "651": {
      "fn": "ERC721.name",
      "offset": [
        2564,
        2576
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x100"
    },
    "654": {
      "fn": "ERC721.name",
      "offset": [
        2564,
        2576
      ],
      "op": "DUP1",
      "path": "27"
    },
    "655": {
      "fn": "ERC721.name",
      "offset": [
        2564,
        2576
      ],
      "op": "DUP4",
      "path": "27"
    },
    "656": {
      "fn": "ERC721.name",
      "offset": [
        2564,
        2576
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "657": {
      "fn": "ERC721.name",
      "offset": [
        2564,
        2576
      ],
      "op": "DIV",
      "path": "27"
    },
    "658": {
      "fn": "ERC721.name",
      "offset": [
        2564,
        2576
      ],
      "op": "MUL",
      "path": "27"
    },
    "659": {
      "fn": "ERC721.name",
      "offset": [
        2564,
        2576
      ],
      "op": "DUP4",
      "path": "27"
    },
    "660": {
      "fn": "ERC721.name",
      "offset": [
        2564,
        2576
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "661": {
      "fn": "ERC721.name",
      "offset": [
        2564,
        2576
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "662": {
      "fn": "ERC721.name",
      "offset": [
        2564,
        2576
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "664": {
      "fn": "ERC721.name",
      "offset": [
        2564,
        2576
      ],
      "op": "ADD",
      "path": "27"
    },
    "665": {
      "fn": "ERC721.name",
      "offset": [
        2564,
        2576
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "666": {
      "fn": "ERC721.name",
      "offset": [
        2564,
        2576
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x2C9"
    },
    "669": {
      "fn": "ERC721.name",
      "offset": [
        2564,
        2576
      ],
      "op": "JUMP",
      "path": "27"
    },
    "670": {
      "fn": "ERC721.name",
      "offset": [
        2564,
        2576
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "671": {
      "fn": "ERC721.name",
      "offset": [
        2564,
        2576
      ],
      "op": "DUP3",
      "path": "27"
    },
    "672": {
      "fn": "ERC721.name",
      "offset": [
        2564,
        2576
      ],
      "op": "ADD",
      "path": "27"
    },
    "673": {
      "fn": "ERC721.name",
      "offset": [
        2564,
        2576
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "674": {
      "fn": "ERC721.name",
      "offset": [
        2564,
        2576
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "675": {
      "fn": "ERC721.name",
      "offset": [
        2564,
        2576
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "677": {
      "fn": "ERC721.name",
      "offset": [
        2564,
        2576
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "678": {
      "fn": "ERC721.name",
      "offset": [
        2564,
        2576
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "680": {
      "fn": "ERC721.name",
      "offset": [
        2564,
        2576
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "682": {
      "fn": "ERC721.name",
      "offset": [
        2564,
        2576
      ],
      "op": "KECCAK256",
      "path": "27"
    },
    "683": {
      "fn": "ERC721.name",
      "offset": [
        2564,
        2576
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "684": {
      "fn": "ERC721.name",
      "offset": [
        2564,
        2576
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "685": {
      "fn": "ERC721.name",
      "offset": [
        2564,
        2576
      ],
      "op": "DUP2",
      "path": "27"
    },
    "686": {
      "fn": "ERC721.name",
      "offset": [
        2564,
        2576
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "687": {
      "fn": "ERC721.name",
      "offset": [
        2564,
        2576
      ],
      "op": "DUP2",
      "path": "27"
    },
    "688": {
      "fn": "ERC721.name",
      "offset": [
        2564,
        2576
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "689": {
      "fn": "ERC721.name",
      "offset": [
        2564,
        2576
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "690": {
      "fn": "ERC721.name",
      "offset": [
        2564,
        2576
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x1"
    },
    "692": {
      "fn": "ERC721.name",
      "offset": [
        2564,
        2576
      ],
      "op": "ADD",
      "path": "27"
    },
    "693": {
      "fn": "ERC721.name",
      "offset": [
        2564,
        2576
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "694": {
      "fn": "ERC721.name",
      "offset": [
        2564,
        2576
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "696": {
      "fn": "ERC721.name",
      "offset": [
        2564,
        2576
      ],
      "op": "ADD",
      "path": "27"
    },
    "697": {
      "fn": "ERC721.name",
      "offset": [
        2564,
        2576
      ],
      "op": "DUP1",
      "path": "27"
    },
    "698": {
      "fn": "ERC721.name",
      "offset": [
        2564,
        2576
      ],
      "op": "DUP4",
      "path": "27"
    },
    "699": {
      "fn": "ERC721.name",
      "offset": [
        2564,
        2576
      ],
      "op": "GT",
      "path": "27"
    },
    "700": {
      "fn": "ERC721.name",
      "offset": [
        2564,
        2576
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x2AC"
    },
    "703": {
      "fn": "ERC721.name",
      "offset": [
        2564,
        2576
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "704": {
      "fn": "ERC721.name",
      "offset": [
        2564,
        2576
      ],
      "op": "DUP3",
      "path": "27"
    },
    "705": {
      "fn": "ERC721.name",
      "offset": [
        2564,
        2576
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "706": {
      "fn": "ERC721.name",
      "offset": [
        2564,
        2576
      ],
      "op": "SUB",
      "path": "27"
    },
    "707": {
      "fn": "ERC721.name",
      "offset": [
        2564,
        2576
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x1F"
    },
    "709": {
      "fn": "ERC721.name",
      "offset": [
        2564,
        2576
      ],
      "op": "AND",
      "path": "27"
    },
    "710": {
      "fn": "ERC721.name",
      "offset": [
        2564,
        2576
      ],
      "op": "DUP3",
      "path": "27"
    },
    "711": {
      "fn": "ERC721.name",
      "offset": [
        2564,
        2576
      ],
      "op": "ADD",
      "path": "27"
    },
    "712": {
      "fn": "ERC721.name",
      "offset": [
        2564,
        2576
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "713": {
      "fn": "ERC721.name",
      "offset": [
        2564,
        2576
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "714": {
      "fn": "ERC721.name",
      "offset": [
        2564,
        2576
      ],
      "op": "POP",
      "path": "27"
    },
    "715": {
      "fn": "ERC721.name",
      "offset": [
        2564,
        2576
      ],
      "op": "POP",
      "path": "27"
    },
    "716": {
      "fn": "ERC721.name",
      "offset": [
        2564,
        2576
      ],
      "op": "POP",
      "path": "27"
    },
    "717": {
      "fn": "ERC721.name",
      "offset": [
        2564,
        2576
      ],
      "op": "POP",
      "path": "27"
    },
    "718": {
      "fn": "ERC721.name",
      "offset": [
        2564,
        2576
      ],
      "op": "POP",
      "path": "27"
    },
    "719": {
      "fn": "ERC721.name",
      "offset": [
        2564,
        2576
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "720": {
      "fn": "ERC721.name",
      "offset": [
        2564,
        2576
      ],
      "op": "POP",
      "path": "27"
    },
    "721": {
      "fn": "ERC721.name",
      "offset": [
        2484,
        2584
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "722": {
      "fn": "ERC721.name",
      "jump": "o",
      "offset": [
        2484,
        2584
      ],
      "op": "JUMP",
      "path": "27"
    },
    "723": {
      "fn": "ERC721.getApproved",
      "offset": [
        3944,
        4165
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "724": {
      "fn": "ERC721.getApproved",
      "offset": [
        4020,
        4027
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "726": {
      "fn": "ERC721.getApproved",
      "offset": [
        4048,
        4064
      ],
      "op": "PUSH2",
      "path": "27",
      "statement": 3,
      "value": "0x2DE"
    },
    "729": {
      "fn": "ERC721.getApproved",
      "offset": [
        4056,
        4063
      ],
      "op": "DUP3",
      "path": "27"
    },
    "730": {
      "fn": "ERC721.getApproved",
      "offset": [
        4048,
        4055
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x7C9"
    },
    "733": {
      "fn": "ERC721.getApproved",
      "jump": "i",
      "offset": [
        4048,
        4064
      ],
      "op": "JUMP",
      "path": "27"
    },
    "734": {
      "branch": 49,
      "fn": "ERC721.getApproved",
      "offset": [
        4048,
        4064
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "735": {
      "fn": "ERC721.getApproved",
      "offset": [
        4040,
        4113
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x344"
    },
    "738": {
      "branch": 49,
      "fn": "ERC721.getApproved",
      "offset": [
        4040,
        4113
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "739": {
      "fn": "ERC721.getApproved",
      "offset": [
        4040,
        4113
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "741": {
      "fn": "ERC721.getApproved",
      "offset": [
        4040,
        4113
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "742": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "746": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "748": {
      "op": "SHL"
    },
    "749": {
      "fn": "ERC721.getApproved",
      "offset": [
        4040,
        4113
      ],
      "op": "DUP2",
      "path": "27"
    },
    "750": {
      "fn": "ERC721.getApproved",
      "offset": [
        4040,
        4113
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "751": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "753": {
      "fn": "ERC721.getApproved",
      "offset": [
        4040,
        4113
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "755": {
      "fn": "ERC721.getApproved",
      "offset": [
        4040,
        4113
      ],
      "op": "DUP3",
      "path": "27"
    },
    "756": {
      "fn": "ERC721.getApproved",
      "offset": [
        4040,
        4113
      ],
      "op": "ADD",
      "path": "27"
    },
    "757": {
      "op": "MSTORE"
    },
    "758": {
      "op": "PUSH1",
      "value": "0x2C"
    },
    "760": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "762": {
      "op": "DUP3"
    },
    "763": {
      "op": "ADD"
    },
    "764": {
      "op": "MSTORE"
    },
    "765": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F76656420717565727920666F72206E6F6E6578"
    },
    "798": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "800": {
      "op": "DUP3"
    },
    "801": {
      "op": "ADD"
    },
    "802": {
      "op": "MSTORE"
    },
    "803": {
      "op": "PUSH12",
      "value": "0x34B9BA32B73A103A37B5B2B7"
    },
    "816": {
      "op": "PUSH1",
      "value": "0xA1"
    },
    "818": {
      "op": "SHL"
    },
    "819": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "821": {
      "op": "DUP3"
    },
    "822": {
      "op": "ADD"
    },
    "823": {
      "op": "MSTORE"
    },
    "824": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "826": {
      "op": "ADD"
    },
    "827": {
      "fn": "ERC721.getApproved",
      "offset": [
        4040,
        4113
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "828": {
      "fn": "ERC721.getApproved",
      "offset": [
        4040,
        4113
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "830": {
      "fn": "ERC721.getApproved",
      "offset": [
        4040,
        4113
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "831": {
      "fn": "ERC721.getApproved",
      "offset": [
        4040,
        4113
      ],
      "op": "DUP1",
      "path": "27"
    },
    "832": {
      "fn": "ERC721.getApproved",
      "offset": [
        4040,
        4113
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "833": {
      "fn": "ERC721.getApproved",
      "offset": [
        4040,
        4113
      ],
      "op": "SUB",
      "path": "27"
    },
    "834": {
      "fn": "ERC721.getApproved",
      "offset": [
        4040,
        4113
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "835": {
      "fn": "ERC721.getApproved",
      "offset": [
        4040,
        4113
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "27"
    },
    "836": {
      "fn": "ERC721.getApproved",
      "offset": [
        4040,
        4113
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "837": {
      "op": "POP"
    },
    "838": {
      "fn": "ERC721.getApproved",
      "offset": [
        4133,
        4157
      ],
      "op": "PUSH1",
      "path": "27",
      "statement": 4,
      "value": "0x0"
    },
    "840": {
      "fn": "ERC721.getApproved",
      "offset": [
        4133,
        4157
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "841": {
      "fn": "ERC721.getApproved",
      "offset": [
        4133,
        4157
      ],
      "op": "DUP2",
      "path": "27"
    },
    "842": {
      "fn": "ERC721.getApproved",
      "offset": [
        4133,
        4157
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "843": {
      "fn": "ERC721.getApproved",
      "offset": [
        4133,
        4148
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "845": {
      "fn": "ERC721.getApproved",
      "offset": [
        4133,
        4157
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "847": {
      "fn": "ERC721.getApproved",
      "offset": [
        4133,
        4157
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "848": {
      "fn": "ERC721.getApproved",
      "offset": [
        4133,
        4157
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "850": {
      "fn": "ERC721.getApproved",
      "offset": [
        4133,
        4157
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "851": {
      "fn": "ERC721.getApproved",
      "offset": [
        4133,
        4157
      ],
      "op": "KECCAK256",
      "path": "27"
    },
    "852": {
      "fn": "ERC721.getApproved",
      "offset": [
        4133,
        4157
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "853": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "855": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "857": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "859": {
      "op": "SHL"
    },
    "860": {
      "op": "SUB"
    },
    "861": {
      "fn": "ERC721.getApproved",
      "offset": [
        4133,
        4157
      ],
      "op": "AND",
      "path": "27"
    },
    "862": {
      "fn": "ERC721.getApproved",
      "offset": [
        4133,
        4157
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "863": {
      "fn": "ERC721.getApproved",
      "jump": "o",
      "offset": [
        3944,
        4165
      ],
      "op": "JUMP",
      "path": "27"
    },
    "864": {
      "fn": "ERC721.approve",
      "offset": [
        3481,
        3878
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "865": {
      "fn": "ERC721.approve",
      "offset": [
        3562,
        3575
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "867": {
      "fn": "ERC721.approve",
      "offset": [
        3578,
        3601
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x36B"
    },
    "870": {
      "fn": "ERC721.approve",
      "offset": [
        3593,
        3600
      ],
      "op": "DUP3",
      "path": "27"
    },
    "871": {
      "fn": "ERC721.approve",
      "offset": [
        3578,
        3592
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x4BD"
    },
    "874": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3578,
        3601
      ],
      "op": "JUMP",
      "path": "27"
    },
    "875": {
      "fn": "ERC721.approve",
      "offset": [
        3578,
        3601
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "876": {
      "fn": "ERC721.approve",
      "offset": [
        3562,
        3601
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "877": {
      "fn": "ERC721.approve",
      "offset": [
        3562,
        3601
      ],
      "op": "POP",
      "path": "27"
    },
    "878": {
      "fn": "ERC721.approve",
      "offset": [
        3626,
        3631
      ],
      "op": "DUP1",
      "path": "27",
      "statement": 5
    },
    "879": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "881": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "883": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "885": {
      "op": "SHL"
    },
    "886": {
      "op": "SUB"
    },
    "887": {
      "fn": "ERC721.approve",
      "offset": [
        3620,
        3631
      ],
      "op": "AND",
      "path": "27"
    },
    "888": {
      "fn": "ERC721.approve",
      "offset": [
        3620,
        3622
      ],
      "op": "DUP4",
      "path": "27"
    },
    "889": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "891": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "893": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "895": {
      "op": "SHL"
    },
    "896": {
      "op": "SUB"
    },
    "897": {
      "fn": "ERC721.approve",
      "offset": [
        3620,
        3631
      ],
      "op": "AND",
      "path": "27"
    },
    "898": {
      "fn": "ERC721.approve",
      "offset": [
        3620,
        3631
      ],
      "op": "EQ",
      "path": "27"
    },
    "899": {
      "branch": 50,
      "fn": "ERC721.approve",
      "offset": [
        3620,
        3631
      ],
      "op": "ISZERO",
      "path": "27"
    },
    "900": {
      "fn": "ERC721.approve",
      "offset": [
        3612,
        3669
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x3D9"
    },
    "903": {
      "branch": 50,
      "fn": "ERC721.approve",
      "offset": [
        3612,
        3669
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "904": {
      "fn": "ERC721.approve",
      "offset": [
        3612,
        3669
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "906": {
      "fn": "ERC721.approve",
      "offset": [
        3612,
        3669
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "907": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "911": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "913": {
      "op": "SHL"
    },
    "914": {
      "fn": "ERC721.approve",
      "offset": [
        3612,
        3669
      ],
      "op": "DUP2",
      "path": "27"
    },
    "915": {
      "fn": "ERC721.approve",
      "offset": [
        3612,
        3669
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "916": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "918": {
      "fn": "ERC721.approve",
      "offset": [
        3612,
        3669
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "920": {
      "fn": "ERC721.approve",
      "offset": [
        3612,
        3669
      ],
      "op": "DUP3",
      "path": "27"
    },
    "921": {
      "fn": "ERC721.approve",
      "offset": [
        3612,
        3669
      ],
      "op": "ADD",
      "path": "27"
    },
    "922": {
      "op": "MSTORE"
    },
    "923": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "925": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "927": {
      "op": "DUP3"
    },
    "928": {
      "op": "ADD"
    },
    "929": {
      "op": "MSTORE"
    },
    "930": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65"
    },
    "963": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "965": {
      "op": "DUP3"
    },
    "966": {
      "op": "ADD"
    },
    "967": {
      "op": "MSTORE"
    },
    "968": {
      "op": "PUSH1",
      "value": "0x39"
    },
    "970": {
      "op": "PUSH1",
      "value": "0xF9"
    },
    "972": {
      "op": "SHL"
    },
    "973": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "975": {
      "op": "DUP3"
    },
    "976": {
      "op": "ADD"
    },
    "977": {
      "op": "MSTORE"
    },
    "978": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "980": {
      "op": "ADD"
    },
    "981": {
      "fn": "ERC721.approve",
      "offset": [
        3612,
        3669
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x33B"
    },
    "984": {
      "op": "JUMP"
    },
    "985": {
      "fn": "ERC721.approve",
      "offset": [
        3612,
        3669
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "986": {
      "fn": "Context._msgSender",
      "offset": [
        681,
        691
      ],
      "op": "CALLER",
      "path": "34",
      "statement": 6
    },
    "987": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "989": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "991": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "993": {
      "op": "SHL"
    },
    "994": {
      "op": "SUB"
    },
    "995": {
      "fn": "ERC721.approve",
      "offset": [
        3690,
        3711
      ],
      "op": "DUP3",
      "path": "27",
      "statement": 7
    },
    "996": {
      "fn": "ERC721.approve",
      "offset": [
        3690,
        3711
      ],
      "op": "AND",
      "path": "27"
    },
    "997": {
      "fn": "ERC721.approve",
      "offset": [
        3690,
        3711
      ],
      "op": "EQ",
      "path": "27"
    },
    "998": {
      "branch": 51,
      "fn": "ERC721.approve",
      "offset": [
        3690,
        3711
      ],
      "op": "DUP1",
      "path": "27"
    },
    "999": {
      "fn": "ERC721.approve",
      "offset": [
        3690,
        3752
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x3F5"
    },
    "1002": {
      "branch": 51,
      "fn": "ERC721.approve",
      "offset": [
        3690,
        3752
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "1003": {
      "op": "POP"
    },
    "1004": {
      "fn": "ERC721.approve",
      "offset": [
        3715,
        3752
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x3F5"
    },
    "1007": {
      "fn": "ERC721.approve",
      "offset": [
        3732,
        3737
      ],
      "op": "DUP2",
      "path": "27"
    },
    "1008": {
      "fn": "Context._msgSender",
      "offset": [
        681,
        691
      ],
      "op": "CALLER",
      "path": "34"
    },
    "1009": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4603,
        4767
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x79B"
    },
    "1012": {
      "fn": "ERC721.isApprovedForAll",
      "jump": "i",
      "offset": [
        4603,
        4767
      ],
      "op": "JUMP",
      "path": "27"
    },
    "1013": {
      "branch": 52,
      "fn": "ERC721.approve",
      "offset": [
        3715,
        3752
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "1014": {
      "fn": "ERC721.approve",
      "offset": [
        3682,
        3836
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x462"
    },
    "1017": {
      "branch": 52,
      "fn": "ERC721.approve",
      "offset": [
        3682,
        3836
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "1018": {
      "fn": "ERC721.approve",
      "offset": [
        3682,
        3836
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "1020": {
      "fn": "ERC721.approve",
      "offset": [
        3682,
        3836
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "1021": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1025": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1027": {
      "op": "SHL"
    },
    "1028": {
      "fn": "ERC721.approve",
      "offset": [
        3682,
        3836
      ],
      "op": "DUP2",
      "path": "27"
    },
    "1029": {
      "fn": "ERC721.approve",
      "offset": [
        3682,
        3836
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "1030": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1032": {
      "fn": "ERC721.approve",
      "offset": [
        3682,
        3836
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "1034": {
      "fn": "ERC721.approve",
      "offset": [
        3682,
        3836
      ],
      "op": "DUP3",
      "path": "27"
    },
    "1035": {
      "fn": "ERC721.approve",
      "offset": [
        3682,
        3836
      ],
      "op": "ADD",
      "path": "27"
    },
    "1036": {
      "op": "MSTORE"
    },
    "1037": {
      "op": "PUSH1",
      "value": "0x38"
    },
    "1039": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1041": {
      "op": "DUP3"
    },
    "1042": {
      "op": "ADD"
    },
    "1043": {
      "op": "MSTORE"
    },
    "1044": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F76652063616C6C6572206973206E6F74206F77"
    },
    "1077": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1079": {
      "op": "DUP3"
    },
    "1080": {
      "op": "ADD"
    },
    "1081": {
      "op": "MSTORE"
    },
    "1082": {
      "op": "PUSH24",
      "value": "0x1B995C881B9BDC88185C1C1C9BDD995908199BDC88185B1B"
    },
    "1107": {
      "op": "PUSH1",
      "value": "0x42"
    },
    "1109": {
      "op": "SHL"
    },
    "1110": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1112": {
      "op": "DUP3"
    },
    "1113": {
      "op": "ADD"
    },
    "1114": {
      "op": "MSTORE"
    },
    "1115": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1117": {
      "op": "ADD"
    },
    "1118": {
      "fn": "ERC721.approve",
      "offset": [
        3682,
        3836
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x33B"
    },
    "1121": {
      "op": "JUMP"
    },
    "1122": {
      "fn": "ERC721.approve",
      "offset": [
        3682,
        3836
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "1123": {
      "fn": "ERC721.approve",
      "offset": [
        3849,
        3870
      ],
      "op": "PUSH2",
      "path": "27",
      "statement": 8,
      "value": "0x46C"
    },
    "1126": {
      "fn": "ERC721.approve",
      "offset": [
        3858,
        3860
      ],
      "op": "DUP4",
      "path": "27"
    },
    "1127": {
      "fn": "ERC721.approve",
      "offset": [
        3862,
        3869
      ],
      "op": "DUP4",
      "path": "27"
    },
    "1128": {
      "fn": "ERC721.approve",
      "offset": [
        3849,
        3857
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x7E6"
    },
    "1131": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3849,
        3870
      ],
      "op": "JUMP",
      "path": "27"
    },
    "1132": {
      "fn": "ERC721.approve",
      "offset": [
        3849,
        3870
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "1133": {
      "fn": "ERC721.approve",
      "offset": [
        3551,
        3878
      ],
      "op": "POP",
      "path": "27"
    },
    "1134": {
      "fn": "ERC721.approve",
      "offset": [
        3481,
        3878
      ],
      "op": "POP",
      "path": "27"
    },
    "1135": {
      "fn": "ERC721.approve",
      "offset": [
        3481,
        3878
      ],
      "op": "POP",
      "path": "27"
    },
    "1136": {
      "fn": "ERC721.approve",
      "jump": "o",
      "offset": [
        3481,
        3878
      ],
      "op": "JUMP",
      "path": "27"
    },
    "1137": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4834,
        5139
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "1138": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4995,
        5036
      ],
      "op": "PUSH2",
      "path": "27",
      "statement": 9,
      "value": "0x47B"
    },
    "1141": {
      "fn": "Context._msgSender",
      "offset": [
        681,
        691
      ],
      "op": "CALLER",
      "path": "34"
    },
    "1142": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5028,
        5035
      ],
      "op": "DUP3",
      "path": "27"
    },
    "1143": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4995,
        5013
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x854"
    },
    "1146": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        4995,
        5036
      ],
      "op": "JUMP",
      "path": "27"
    },
    "1147": {
      "branch": 53,
      "fn": "ERC721.transferFrom",
      "offset": [
        4995,
        5036
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "1148": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4987,
        5090
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x497"
    },
    "1151": {
      "branch": 53,
      "fn": "ERC721.transferFrom",
      "offset": [
        4987,
        5090
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "1152": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4987,
        5090
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "1154": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4987,
        5090
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "1155": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1159": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1161": {
      "op": "SHL"
    },
    "1162": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4987,
        5090
      ],
      "op": "DUP2",
      "path": "27"
    },
    "1163": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4987,
        5090
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "1164": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4987,
        5090
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "1166": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4987,
        5090
      ],
      "op": "ADD",
      "path": "27"
    },
    "1167": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4987,
        5090
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x33B"
    },
    "1170": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4987,
        5090
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "1171": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4987,
        5090
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0xFEF"
    },
    "1174": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        4987,
        5090
      ],
      "op": "JUMP",
      "path": "27"
    },
    "1175": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4987,
        5090
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "1176": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5103,
        5131
      ],
      "op": "PUSH2",
      "path": "27",
      "statement": 10,
      "value": "0x46C"
    },
    "1179": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5113,
        5117
      ],
      "op": "DUP4",
      "path": "27"
    },
    "1180": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5119,
        5121
      ],
      "op": "DUP4",
      "path": "27"
    },
    "1181": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5123,
        5130
      ],
      "op": "DUP4",
      "path": "27"
    },
    "1182": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5103,
        5112
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x91E"
    },
    "1185": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        5103,
        5131
      ],
      "op": "JUMP",
      "path": "27"
    },
    "1186": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5210,
        5361
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "1187": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5314,
        5353
      ],
      "op": "PUSH2",
      "path": "27",
      "statement": 11,
      "value": "0x46C"
    },
    "1190": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5331,
        5335
      ],
      "op": "DUP4",
      "path": "27"
    },
    "1191": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5337,
        5339
      ],
      "op": "DUP4",
      "path": "27"
    },
    "1192": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5341,
        5348
      ],
      "op": "DUP4",
      "path": "27"
    },
    "1193": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5314,
        5353
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "1195": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5314,
        5353
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "1196": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5314,
        5353
      ],
      "op": "DUP1",
      "path": "27"
    },
    "1197": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5314,
        5353
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "1199": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5314,
        5353
      ],
      "op": "ADD",
      "path": "27"
    },
    "1200": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5314,
        5353
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "1202": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5314,
        5353
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "1203": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5314,
        5353
      ],
      "op": "DUP1",
      "path": "27"
    },
    "1204": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5314,
        5353
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "1206": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5314,
        5353
      ],
      "op": "DUP2",
      "path": "27"
    },
    "1207": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5314,
        5353
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "1208": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5314,
        5353
      ],
      "op": "POP",
      "path": "27"
    },
    "1209": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5314,
        5330
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x68B"
    },
    "1212": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5314,
        5353
      ],
      "op": "JUMP",
      "path": "27"
    },
    "1213": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2178,
        2417
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "1214": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2250,
        2257
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "1216": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2286,
        2302
      ],
      "op": "DUP2",
      "path": "27"
    },
    "1217": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2286,
        2302
      ],
      "op": "DUP2",
      "path": "27"
    },
    "1218": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2286,
        2302
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "1219": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2286,
        2293
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x2"
    },
    "1221": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2286,
        2302
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "1223": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2286,
        2302
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "1224": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2286,
        2302
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "1226": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2286,
        2302
      ],
      "op": "DUP2",
      "path": "27"
    },
    "1227": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2286,
        2302
      ],
      "op": "KECCAK256",
      "path": "27"
    },
    "1228": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2286,
        2302
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "1229": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1231": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1233": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1235": {
      "op": "SHL"
    },
    "1236": {
      "op": "SUB"
    },
    "1237": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2286,
        2302
      ],
      "op": "AND",
      "path": "27"
    },
    "1238": {
      "branch": 54,
      "fn": "ERC721.ownerOf",
      "offset": [
        2321,
        2340
      ],
      "op": "DUP1",
      "path": "27",
      "statement": 12
    },
    "1239": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2313,
        2386
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x23B"
    },
    "1242": {
      "branch": 54,
      "fn": "ERC721.ownerOf",
      "offset": [
        2313,
        2386
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "1243": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2313,
        2386
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "1245": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2313,
        2386
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "1246": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1250": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1252": {
      "op": "SHL"
    },
    "1253": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2313,
        2386
      ],
      "op": "DUP2",
      "path": "27"
    },
    "1254": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2313,
        2386
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "1255": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1257": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2313,
        2386
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "1259": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2313,
        2386
      ],
      "op": "DUP3",
      "path": "27"
    },
    "1260": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2313,
        2386
      ],
      "op": "ADD",
      "path": "27"
    },
    "1261": {
      "op": "MSTORE"
    },
    "1262": {
      "op": "PUSH1",
      "value": "0x29"
    },
    "1264": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1266": {
      "op": "DUP3"
    },
    "1267": {
      "op": "ADD"
    },
    "1268": {
      "op": "MSTORE"
    },
    "1269": {
      "op": "PUSH32",
      "value": "0x4552433732313A206F776E657220717565727920666F72206E6F6E6578697374"
    },
    "1302": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1304": {
      "op": "DUP3"
    },
    "1305": {
      "op": "ADD"
    },
    "1306": {
      "op": "MSTORE"
    },
    "1307": {
      "op": "PUSH9",
      "value": "0x32B73A103A37B5B2B7"
    },
    "1317": {
      "op": "PUSH1",
      "value": "0xB9"
    },
    "1319": {
      "op": "SHL"
    },
    "1320": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1322": {
      "op": "DUP3"
    },
    "1323": {
      "op": "ADD"
    },
    "1324": {
      "op": "MSTORE"
    },
    "1325": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1327": {
      "op": "ADD"
    },
    "1328": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2313,
        2386
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x33B"
    },
    "1331": {
      "op": "JUMP"
    },
    "1332": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1908,
        2116
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "1333": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1980,
        1987
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "1335": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1337": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1339": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1341": {
      "op": "SHL"
    },
    "1342": {
      "op": "SUB"
    },
    "1343": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2008,
        2027
      ],
      "op": "DUP3",
      "path": "27",
      "statement": 13
    },
    "1344": {
      "branch": 55,
      "fn": "ERC721.balanceOf",
      "offset": [
        2008,
        2027
      ],
      "op": "AND",
      "path": "27"
    },
    "1345": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2000,
        2074
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x59F"
    },
    "1348": {
      "branch": 55,
      "fn": "ERC721.balanceOf",
      "offset": [
        2000,
        2074
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "1349": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2000,
        2074
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "1351": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2000,
        2074
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "1352": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1356": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1358": {
      "op": "SHL"
    },
    "1359": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2000,
        2074
      ],
      "op": "DUP2",
      "path": "27"
    },
    "1360": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2000,
        2074
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "1361": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1363": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2000,
        2074
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "1365": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2000,
        2074
      ],
      "op": "DUP3",
      "path": "27"
    },
    "1366": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2000,
        2074
      ],
      "op": "ADD",
      "path": "27"
    },
    "1367": {
      "op": "MSTORE"
    },
    "1368": {
      "op": "PUSH1",
      "value": "0x2A"
    },
    "1370": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1372": {
      "op": "DUP3"
    },
    "1373": {
      "op": "ADD"
    },
    "1374": {
      "op": "MSTORE"
    },
    "1375": {
      "op": "PUSH32",
      "value": "0x4552433732313A2062616C616E636520717565727920666F7220746865207A65"
    },
    "1408": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1410": {
      "op": "DUP3"
    },
    "1411": {
      "op": "ADD"
    },
    "1412": {
      "op": "MSTORE"
    },
    "1413": {
      "op": "PUSH10",
      "value": "0x726F2061646472657373"
    },
    "1424": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "1426": {
      "op": "SHL"
    },
    "1427": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1429": {
      "op": "DUP3"
    },
    "1430": {
      "op": "ADD"
    },
    "1431": {
      "op": "MSTORE"
    },
    "1432": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1434": {
      "op": "ADD"
    },
    "1435": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2000,
        2074
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x33B"
    },
    "1438": {
      "op": "JUMP"
    },
    "1439": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2000,
        2074
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "1440": {
      "op": "POP"
    },
    "1441": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1443": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1445": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1447": {
      "op": "SHL"
    },
    "1448": {
      "op": "SUB"
    },
    "1449": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2092,
        2108
      ],
      "op": "AND",
      "path": "27",
      "statement": 14
    },
    "1450": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2092,
        2108
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "1452": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2092,
        2108
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "1453": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2092,
        2108
      ],
      "op": "DUP2",
      "path": "27"
    },
    "1454": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2092,
        2108
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "1455": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2092,
        2101
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x3"
    },
    "1457": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2092,
        2108
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "1459": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2092,
        2108
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "1460": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2092,
        2108
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "1462": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2092,
        2108
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "1463": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2092,
        2108
      ],
      "op": "KECCAK256",
      "path": "27"
    },
    "1464": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2092,
        2108
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "1465": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2092,
        2108
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "1466": {
      "fn": "ERC721.balanceOf",
      "jump": "o",
      "offset": [
        1908,
        2116
      ],
      "op": "JUMP",
      "path": "27"
    },
    "1467": {
      "fn": "ERC721.symbol",
      "offset": [
        2653,
        2757
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "1468": {
      "fn": "ERC721.symbol",
      "offset": [
        2709,
        2722
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x60"
    },
    "1470": {
      "fn": "ERC721.symbol",
      "offset": [
        2742,
        2749
      ],
      "op": "PUSH1",
      "path": "27",
      "statement": 15,
      "value": "0x1"
    },
    "1472": {
      "fn": "ERC721.symbol",
      "offset": [
        2735,
        2749
      ],
      "op": "DUP1",
      "path": "27"
    },
    "1473": {
      "fn": "ERC721.symbol",
      "offset": [
        2735,
        2749
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "1474": {
      "fn": "ERC721.symbol",
      "offset": [
        2735,
        2749
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x250"
    },
    "1477": {
      "fn": "ERC721.symbol",
      "offset": [
        2735,
        2749
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "1478": {
      "fn": "ERC721.symbol",
      "offset": [
        2735,
        2749
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0xFB4"
    },
    "1481": {
      "fn": "ERC721.symbol",
      "jump": "i",
      "offset": [
        2735,
        2749
      ],
      "op": "JUMP",
      "path": "27"
    },
    "1482": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4237,
        4532
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "1483": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1485": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1487": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1489": {
      "op": "SHL"
    },
    "1490": {
      "op": "SUB"
    },
    "1491": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4340,
        4364
      ],
      "op": "DUP3",
      "path": "27",
      "statement": 16
    },
    "1492": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4340,
        4364
      ],
      "op": "AND",
      "path": "27"
    },
    "1493": {
      "fn": "Context._msgSender",
      "offset": [
        681,
        691
      ],
      "op": "CALLER",
      "path": "34"
    },
    "1494": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4340,
        4364
      ],
      "op": "EQ",
      "path": "27"
    },
    "1495": {
      "branch": 56,
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4340,
        4364
      ],
      "op": "ISZERO",
      "path": "27"
    },
    "1496": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4332,
        4394
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x61F"
    },
    "1499": {
      "branch": 56,
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4332,
        4394
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "1500": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4332,
        4394
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "1502": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4332,
        4394
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "1503": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1507": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1509": {
      "op": "SHL"
    },
    "1510": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4332,
        4394
      ],
      "op": "DUP2",
      "path": "27"
    },
    "1511": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4332,
        4394
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "1512": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1514": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4332,
        4394
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "1516": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4332,
        4394
      ],
      "op": "DUP3",
      "path": "27"
    },
    "1517": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4332,
        4394
      ],
      "op": "ADD",
      "path": "27"
    },
    "1518": {
      "op": "MSTORE"
    },
    "1519": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "1521": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1523": {
      "op": "DUP3"
    },
    "1524": {
      "op": "ADD"
    },
    "1525": {
      "op": "MSTORE"
    },
    "1526": {
      "op": "PUSH25",
      "value": "0x22A9219B99189D1030B8383937BB32903A379031B0B63632B9"
    },
    "1552": {
      "op": "PUSH1",
      "value": "0x39"
    },
    "1554": {
      "op": "SHL"
    },
    "1555": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1557": {
      "op": "DUP3"
    },
    "1558": {
      "op": "ADD"
    },
    "1559": {
      "op": "MSTORE"
    },
    "1560": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1562": {
      "op": "ADD"
    },
    "1563": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4332,
        4394
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x33B"
    },
    "1566": {
      "op": "JUMP"
    },
    "1567": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4332,
        4394
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "1568": {
      "fn": "Context._msgSender",
      "offset": [
        681,
        691
      ],
      "op": "CALLER",
      "path": "34"
    },
    "1569": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4407,
        4439
      ],
      "op": "PUSH1",
      "path": "27",
      "statement": 17,
      "value": "0x0"
    },
    "1571": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4407,
        4439
      ],
      "op": "DUP2",
      "path": "27"
    },
    "1572": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4407,
        4439
      ],
      "op": "DUP2",
      "path": "27"
    },
    "1573": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4407,
        4439
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "1574": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4407,
        4425
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x5"
    },
    "1576": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4407,
        4439
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "1578": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4407,
        4439
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "1579": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4407,
        4439
      ],
      "op": "DUP2",
      "path": "27"
    },
    "1580": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4407,
        4439
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "1581": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4407,
        4439
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "1583": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4407,
        4439
      ],
      "op": "DUP1",
      "path": "27"
    },
    "1584": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4407,
        4439
      ],
      "op": "DUP4",
      "path": "27"
    },
    "1585": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4407,
        4439
      ],
      "op": "KECCAK256",
      "path": "27"
    },
    "1586": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1588": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1590": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1592": {
      "op": "SHL"
    },
    "1593": {
      "op": "SUB"
    },
    "1594": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4407,
        4449
      ],
      "op": "DUP8",
      "path": "27"
    },
    "1595": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4407,
        4449
      ],
      "op": "AND",
      "path": "27"
    },
    "1596": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4407,
        4449
      ],
      "op": "DUP1",
      "path": "27"
    },
    "1597": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4407,
        4449
      ],
      "op": "DUP6",
      "path": "27"
    },
    "1598": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4407,
        4449
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "1599": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4407,
        4449
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "1600": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4407,
        4449
      ],
      "op": "DUP4",
      "path": "27"
    },
    "1601": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4407,
        4449
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "1602": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4407,
        4449
      ],
      "op": "SWAP3",
      "path": "27"
    },
    "1603": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4407,
        4449
      ],
      "op": "DUP2",
      "path": "27"
    },
    "1604": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4407,
        4449
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "1605": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4407,
        4449
      ],
      "op": "KECCAK256",
      "path": "27"
    },
    "1606": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4407,
        4460
      ],
      "op": "DUP1",
      "path": "27"
    },
    "1607": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4407,
        4460
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "1608": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1610": {
      "op": "NOT"
    },
    "1611": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4407,
        4460
      ],
      "op": "AND",
      "path": "27"
    },
    "1612": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4407,
        4460
      ],
      "op": "DUP7",
      "path": "27"
    },
    "1613": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4407,
        4460
      ],
      "op": "ISZERO",
      "path": "27"
    },
    "1614": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4407,
        4460
      ],
      "op": "ISZERO",
      "path": "27"
    },
    "1615": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4407,
        4460
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "1616": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4407,
        4460
      ],
      "op": "DUP2",
      "path": "27"
    },
    "1617": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4407,
        4460
      ],
      "op": "OR",
      "path": "27"
    },
    "1618": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4407,
        4460
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "1619": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4407,
        4460
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "1620": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4407,
        4460
      ],
      "op": "SSTORE",
      "path": "27"
    },
    "1621": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4476,
        4524
      ],
      "op": "SWAP1",
      "path": "27",
      "statement": 18
    },
    "1622": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4476,
        4524
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "1623": {
      "op": "SWAP1"
    },
    "1624": {
      "op": "DUP2"
    },
    "1625": {
      "op": "MSTORE"
    },
    "1626": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4407,
        4449
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "1627": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4407,
        4449
      ],
      "op": "SWAP3",
      "path": "27"
    },
    "1628": {
      "fn": "Context._msgSender",
      "offset": [
        681,
        691
      ],
      "op": "SWAP2",
      "path": "34"
    },
    "1629": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4476,
        4524
      ],
      "op": "PUSH32",
      "path": "27",
      "value": "0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
    },
    "1662": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4476,
        4524
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "1663": {
      "op": "ADD"
    },
    "1664": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4476,
        4524
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "1666": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4476,
        4524
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "1667": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4476,
        4524
      ],
      "op": "DUP1",
      "path": "27"
    },
    "1668": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4476,
        4524
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "1669": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4476,
        4524
      ],
      "op": "SUB",
      "path": "27"
    },
    "1670": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4476,
        4524
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "1671": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4476,
        4524
      ],
      "op": "LOG3",
      "path": "27"
    },
    "1672": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4237,
        4532
      ],
      "op": "POP",
      "path": "27"
    },
    "1673": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4237,
        4532
      ],
      "op": "POP",
      "path": "27"
    },
    "1674": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "o",
      "offset": [
        4237,
        4532
      ],
      "op": "JUMP",
      "path": "27"
    },
    "1675": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5432,
        5717
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "1676": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5564,
        5605
      ],
      "op": "PUSH2",
      "path": "27",
      "statement": 19,
      "value": "0x695"
    },
    "1679": {
      "fn": "Context._msgSender",
      "offset": [
        681,
        691
      ],
      "op": "CALLER",
      "path": "34"
    },
    "1680": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5597,
        5604
      ],
      "op": "DUP4",
      "path": "27"
    },
    "1681": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5564,
        5582
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x854"
    },
    "1684": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5564,
        5605
      ],
      "op": "JUMP",
      "path": "27"
    },
    "1685": {
      "branch": 57,
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5564,
        5605
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "1686": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5556,
        5659
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x6B1"
    },
    "1689": {
      "branch": 57,
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5556,
        5659
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "1690": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5556,
        5659
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "1692": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5556,
        5659
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "1693": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1697": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1699": {
      "op": "SHL"
    },
    "1700": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5556,
        5659
      ],
      "op": "DUP2",
      "path": "27"
    },
    "1701": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5556,
        5659
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "1702": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5556,
        5659
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "1704": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5556,
        5659
      ],
      "op": "ADD",
      "path": "27"
    },
    "1705": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5556,
        5659
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x33B"
    },
    "1708": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5556,
        5659
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "1709": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5556,
        5659
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0xFEF"
    },
    "1712": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5556,
        5659
      ],
      "op": "JUMP",
      "path": "27"
    },
    "1713": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5556,
        5659
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "1714": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5670,
        5709
      ],
      "op": "PUSH2",
      "path": "27",
      "statement": 20,
      "value": "0x6BD"
    },
    "1717": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5684,
        5688
      ],
      "op": "DUP5",
      "path": "27"
    },
    "1718": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5690,
        5692
      ],
      "op": "DUP5",
      "path": "27"
    },
    "1719": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5694,
        5701
      ],
      "op": "DUP5",
      "path": "27"
    },
    "1720": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5703,
        5708
      ],
      "op": "DUP5",
      "path": "27"
    },
    "1721": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5670,
        5683
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0xABE"
    },
    "1724": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5670,
        5709
      ],
      "op": "JUMP",
      "path": "27"
    },
    "1725": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5670,
        5709
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "1726": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5432,
        5717
      ],
      "op": "POP",
      "path": "27"
    },
    "1727": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5432,
        5717
      ],
      "op": "POP",
      "path": "27"
    },
    "1728": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5432,
        5717
      ],
      "op": "POP",
      "path": "27"
    },
    "1729": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5432,
        5717
      ],
      "op": "POP",
      "path": "27"
    },
    "1730": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "o",
      "offset": [
        5432,
        5717
      ],
      "op": "JUMP",
      "path": "27"
    },
    "1731": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2828,
        3188
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "1732": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2901,
        2914
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x60"
    },
    "1734": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2935,
        2951
      ],
      "op": "PUSH2",
      "path": "27",
      "statement": 21,
      "value": "0x6CE"
    },
    "1737": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2943,
        2950
      ],
      "op": "DUP3",
      "path": "27"
    },
    "1738": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2935,
        2942
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x7C9"
    },
    "1741": {
      "fn": "ERC721.tokenURI",
      "jump": "i",
      "offset": [
        2935,
        2951
      ],
      "op": "JUMP",
      "path": "27"
    },
    "1742": {
      "branch": 58,
      "fn": "ERC721.tokenURI",
      "offset": [
        2935,
        2951
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "1743": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2927,
        3003
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x732"
    },
    "1746": {
      "branch": 58,
      "fn": "ERC721.tokenURI",
      "offset": [
        2927,
        3003
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "1747": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2927,
        3003
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "1749": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2927,
        3003
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "1750": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1754": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1756": {
      "op": "SHL"
    },
    "1757": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2927,
        3003
      ],
      "op": "DUP2",
      "path": "27"
    },
    "1758": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2927,
        3003
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "1759": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1761": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2927,
        3003
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "1763": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2927,
        3003
      ],
      "op": "DUP3",
      "path": "27"
    },
    "1764": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2927,
        3003
      ],
      "op": "ADD",
      "path": "27"
    },
    "1765": {
      "op": "MSTORE"
    },
    "1766": {
      "op": "PUSH1",
      "value": "0x2F"
    },
    "1768": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1770": {
      "op": "DUP3"
    },
    "1771": {
      "op": "ADD"
    },
    "1772": {
      "op": "MSTORE"
    },
    "1773": {
      "op": "PUSH32",
      "value": "0x4552433732314D657461646174613A2055524920717565727920666F72206E6F"
    },
    "1806": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1808": {
      "op": "DUP3"
    },
    "1809": {
      "op": "ADD"
    },
    "1810": {
      "op": "MSTORE"
    },
    "1811": {
      "op": "PUSH15",
      "value": "0x3732BC34B9BA32B73A103A37B5B2B7"
    },
    "1827": {
      "op": "PUSH1",
      "value": "0x89"
    },
    "1829": {
      "op": "SHL"
    },
    "1830": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1832": {
      "op": "DUP3"
    },
    "1833": {
      "op": "ADD"
    },
    "1834": {
      "op": "MSTORE"
    },
    "1835": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1837": {
      "op": "ADD"
    },
    "1838": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2927,
        3003
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x33B"
    },
    "1841": {
      "op": "JUMP"
    },
    "1842": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2927,
        3003
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "1843": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3016,
        3037
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "1845": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3040,
        3050
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x749"
    },
    "1848": {
      "fn": "ERC721._baseURI",
      "offset": [
        3402,
        3411
      ],
      "op": "PUSH1",
      "path": "27",
      "statement": 22,
      "value": "0x40"
    },
    "1850": {
      "fn": "ERC721._baseURI",
      "offset": [
        3402,
        3411
      ],
      "op": "DUP1",
      "path": "27"
    },
    "1851": {
      "fn": "ERC721._baseURI",
      "offset": [
        3402,
        3411
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "1852": {
      "fn": "ERC721._baseURI",
      "offset": [
        3402,
        3411
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "1854": {
      "fn": "ERC721._baseURI",
      "offset": [
        3402,
        3411
      ],
      "op": "DUP2",
      "path": "27"
    },
    "1855": {
      "fn": "ERC721._baseURI",
      "offset": [
        3402,
        3411
      ],
      "op": "ADD",
      "path": "27"
    },
    "1856": {
      "fn": "ERC721._baseURI",
      "offset": [
        3402,
        3411
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "1857": {
      "fn": "ERC721._baseURI",
      "offset": [
        3402,
        3411
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "1858": {
      "fn": "ERC721._baseURI",
      "offset": [
        3402,
        3411
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "1859": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1861": {
      "fn": "ERC721._baseURI",
      "offset": [
        3402,
        3411
      ],
      "op": "DUP2",
      "path": "27"
    },
    "1862": {
      "fn": "ERC721._baseURI",
      "offset": [
        3402,
        3411
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "1863": {
      "fn": "ERC721._baseURI",
      "offset": [
        3402,
        3411
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "1864": {
      "fn": "ERC721._baseURI",
      "offset": [
        3325,
        3419
      ],
      "op": "JUMP",
      "path": "27"
    },
    "1865": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3040,
        3050
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "1866": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3016,
        3050
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "1867": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3016,
        3050
      ],
      "op": "POP",
      "path": "27"
    },
    "1868": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3092,
        3093
      ],
      "op": "PUSH1",
      "path": "27",
      "statement": 23,
      "value": "0x0"
    },
    "1870": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3074,
        3081
      ],
      "op": "DUP2",
      "path": "27"
    },
    "1871": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3068,
        3089
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "1872": {
      "branch": 59,
      "fn": "ERC721.tokenURI",
      "offset": [
        3068,
        3093
      ],
      "op": "GT",
      "path": "27"
    },
    "1873": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3068,
        3180
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x769"
    },
    "1876": {
      "branch": 59,
      "fn": "ERC721.tokenURI",
      "offset": [
        3068,
        3180
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "1877": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3068,
        3180
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "1879": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3068,
        3180
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "1880": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3068,
        3180
      ],
      "op": "DUP1",
      "path": "27"
    },
    "1881": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3068,
        3180
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "1883": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3068,
        3180
      ],
      "op": "ADD",
      "path": "27"
    },
    "1884": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3068,
        3180
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "1886": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3068,
        3180
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "1887": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3068,
        3180
      ],
      "op": "DUP1",
      "path": "27"
    },
    "1888": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3068,
        3180
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "1890": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3068,
        3180
      ],
      "op": "DUP2",
      "path": "27"
    },
    "1891": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3068,
        3180
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "1892": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3068,
        3180
      ],
      "op": "POP",
      "path": "27"
    },
    "1893": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3068,
        3180
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x794"
    },
    "1896": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3068,
        3180
      ],
      "op": "JUMP",
      "path": "27"
    },
    "1897": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3068,
        3180
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "1898": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3133,
        3140
      ],
      "op": "DUP1",
      "path": "27"
    },
    "1899": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3142,
        3160
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x773"
    },
    "1902": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3142,
        3149
      ],
      "op": "DUP5",
      "path": "27"
    },
    "1903": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3142,
        3158
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0xAF1"
    },
    "1906": {
      "fn": "ERC721.tokenURI",
      "jump": "i",
      "offset": [
        3142,
        3160
      ],
      "op": "JUMP",
      "path": "27"
    },
    "1907": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3142,
        3160
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "1908": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3116,
        3161
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "1910": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3116,
        3161
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "1911": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3116,
        3161
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "1913": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3116,
        3161
      ],
      "op": "ADD",
      "path": "27"
    },
    "1914": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3116,
        3161
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x784"
    },
    "1917": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3116,
        3161
      ],
      "op": "SWAP3",
      "path": "27"
    },
    "1918": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3116,
        3161
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "1919": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3116,
        3161
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "1920": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3116,
        3161
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1040"
    },
    "1923": {
      "fn": "ERC721.tokenURI",
      "jump": "i",
      "offset": [
        3116,
        3161
      ],
      "op": "JUMP",
      "path": "27"
    },
    "1924": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3116,
        3161
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "1925": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3116,
        3161
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "1927": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3116,
        3161
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "1928": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3116,
        3161
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "1930": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3116,
        3161
      ],
      "op": "DUP2",
      "path": "27"
    },
    "1931": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3116,
        3161
      ],
      "op": "DUP4",
      "path": "27"
    },
    "1932": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3116,
        3161
      ],
      "op": "SUB",
      "path": "27"
    },
    "1933": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3116,
        3161
      ],
      "op": "SUB",
      "path": "27"
    },
    "1934": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3116,
        3161
      ],
      "op": "DUP2",
      "path": "27"
    },
    "1935": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3116,
        3161
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "1936": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3116,
        3161
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "1937": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3116,
        3161
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "1939": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3116,
        3161
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "1940": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3068,
        3180
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "1941": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3061,
        3180
      ],
      "op": "SWAP4",
      "path": "27"
    },
    "1942": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2828,
        3188
      ],
      "op": "SWAP3",
      "path": "27"
    },
    "1943": {
      "op": "POP"
    },
    "1944": {
      "op": "POP"
    },
    "1945": {
      "op": "POP"
    },
    "1946": {
      "fn": "ERC721.tokenURI",
      "jump": "o",
      "offset": [
        2828,
        3188
      ],
      "op": "JUMP",
      "path": "27"
    },
    "1947": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4603,
        4767
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "1948": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1950": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1952": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1954": {
      "op": "SHL"
    },
    "1955": {
      "op": "SUB"
    },
    "1956": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4724,
        4749
      ],
      "op": "SWAP2",
      "path": "27",
      "statement": 24
    },
    "1957": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4724,
        4749
      ],
      "op": "DUP3",
      "path": "27"
    },
    "1958": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4724,
        4749
      ],
      "op": "AND",
      "path": "27"
    },
    "1959": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4700,
        4704
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "1961": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4724,
        4749
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "1962": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4724,
        4749
      ],
      "op": "DUP2",
      "path": "27"
    },
    "1963": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4724,
        4749
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "1964": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4724,
        4742
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x5"
    },
    "1966": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4724,
        4749
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "1968": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4724,
        4749
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "1969": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4724,
        4749
      ],
      "op": "DUP2",
      "path": "27"
    },
    "1970": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4724,
        4749
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "1971": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4724,
        4749
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "1973": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4724,
        4749
      ],
      "op": "DUP1",
      "path": "27"
    },
    "1974": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4724,
        4749
      ],
      "op": "DUP4",
      "path": "27"
    },
    "1975": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4724,
        4749
      ],
      "op": "KECCAK256",
      "path": "27"
    },
    "1976": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4724,
        4759
      ],
      "op": "SWAP4",
      "path": "27"
    },
    "1977": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4724,
        4759
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "1978": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4724,
        4759
      ],
      "op": "SWAP5",
      "path": "27"
    },
    "1979": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4724,
        4759
      ],
      "op": "AND",
      "path": "27"
    },
    "1980": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4724,
        4759
      ],
      "op": "DUP3",
      "path": "27"
    },
    "1981": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4724,
        4759
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "1982": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4724,
        4759
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "1983": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4724,
        4759
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "1984": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4724,
        4759
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "1985": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4724,
        4759
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "1986": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4724,
        4759
      ],
      "op": "KECCAK256",
      "path": "27"
    },
    "1987": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4724,
        4759
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "1988": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4724,
        4759
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0xFF"
    },
    "1990": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4724,
        4759
      ],
      "op": "AND",
      "path": "27"
    },
    "1991": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4724,
        4759
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "1992": {
      "fn": "ERC721.isApprovedForAll",
      "jump": "o",
      "offset": [
        4603,
        4767
      ],
      "op": "JUMP",
      "path": "27"
    },
    "1993": {
      "fn": "ERC721._exists",
      "offset": [
        7184,
        7311
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "1994": {
      "fn": "ERC721._exists",
      "offset": [
        7249,
        7253
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "1996": {
      "fn": "ERC721._exists",
      "offset": [
        7273,
        7289
      ],
      "op": "SWAP1",
      "path": "27",
      "statement": 25
    },
    "1997": {
      "fn": "ERC721._exists",
      "offset": [
        7273,
        7289
      ],
      "op": "DUP2",
      "path": "27"
    },
    "1998": {
      "fn": "ERC721._exists",
      "offset": [
        7273,
        7289
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "1999": {
      "fn": "ERC721._exists",
      "offset": [
        7273,
        7280
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x2"
    },
    "2001": {
      "fn": "ERC721._exists",
      "offset": [
        7273,
        7289
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "2003": {
      "fn": "ERC721._exists",
      "offset": [
        7273,
        7289
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "2004": {
      "fn": "ERC721._exists",
      "offset": [
        7273,
        7289
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "2006": {
      "fn": "ERC721._exists",
      "offset": [
        7273,
        7289
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "2007": {
      "fn": "ERC721._exists",
      "offset": [
        7273,
        7289
      ],
      "op": "KECCAK256",
      "path": "27"
    },
    "2008": {
      "fn": "ERC721._exists",
      "offset": [
        7273,
        7289
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "2009": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2011": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2013": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2015": {
      "op": "SHL"
    },
    "2016": {
      "op": "SUB"
    },
    "2017": {
      "fn": "ERC721._exists",
      "offset": [
        7273,
        7289
      ],
      "op": "AND",
      "path": "27"
    },
    "2018": {
      "fn": "ERC721._exists",
      "offset": [
        7273,
        7303
      ],
      "op": "ISZERO",
      "path": "27"
    },
    "2019": {
      "fn": "ERC721._exists",
      "offset": [
        7273,
        7303
      ],
      "op": "ISZERO",
      "path": "27"
    },
    "2020": {
      "fn": "ERC721._exists",
      "offset": [
        7273,
        7303
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "2021": {
      "fn": "ERC721._exists",
      "jump": "o",
      "offset": [
        7184,
        7311
      ],
      "op": "JUMP",
      "path": "27"
    },
    "2022": {
      "fn": "ERC721._approve",
      "offset": [
        11061,
        11235
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "2023": {
      "fn": "ERC721._approve",
      "offset": [
        11136,
        11160
      ],
      "op": "PUSH1",
      "path": "27",
      "statement": 26,
      "value": "0x0"
    },
    "2025": {
      "fn": "ERC721._approve",
      "offset": [
        11136,
        11160
      ],
      "op": "DUP2",
      "path": "27"
    },
    "2026": {
      "fn": "ERC721._approve",
      "offset": [
        11136,
        11160
      ],
      "op": "DUP2",
      "path": "27"
    },
    "2027": {
      "fn": "ERC721._approve",
      "offset": [
        11136,
        11160
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "2028": {
      "fn": "ERC721._approve",
      "offset": [
        11136,
        11151
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "2030": {
      "fn": "ERC721._approve",
      "offset": [
        11136,
        11160
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "2032": {
      "fn": "ERC721._approve",
      "offset": [
        11136,
        11160
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "2033": {
      "fn": "ERC721._approve",
      "offset": [
        11136,
        11160
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "2035": {
      "fn": "ERC721._approve",
      "offset": [
        11136,
        11160
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "2036": {
      "fn": "ERC721._approve",
      "offset": [
        11136,
        11160
      ],
      "op": "KECCAK256",
      "path": "27"
    },
    "2037": {
      "fn": "ERC721._approve",
      "offset": [
        11136,
        11165
      ],
      "op": "DUP1",
      "path": "27"
    },
    "2038": {
      "fn": "ERC721._approve",
      "offset": [
        11136,
        11165
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "2039": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2041": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2043": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2045": {
      "op": "SHL"
    },
    "2046": {
      "op": "SUB"
    },
    "2047": {
      "op": "NOT"
    },
    "2048": {
      "fn": "ERC721._approve",
      "offset": [
        11136,
        11165
      ],
      "op": "AND",
      "path": "27"
    },
    "2049": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2051": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2053": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2055": {
      "op": "SHL"
    },
    "2056": {
      "op": "SUB"
    },
    "2057": {
      "fn": "ERC721._approve",
      "offset": [
        11136,
        11165
      ],
      "op": "DUP5",
      "path": "27"
    },
    "2058": {
      "fn": "ERC721._approve",
      "offset": [
        11136,
        11165
      ],
      "op": "AND",
      "path": "27"
    },
    "2059": {
      "fn": "ERC721._approve",
      "offset": [
        11136,
        11165
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "2060": {
      "fn": "ERC721._approve",
      "offset": [
        11136,
        11165
      ],
      "op": "DUP2",
      "path": "27"
    },
    "2061": {
      "fn": "ERC721._approve",
      "offset": [
        11136,
        11165
      ],
      "op": "OR",
      "path": "27"
    },
    "2062": {
      "fn": "ERC721._approve",
      "offset": [
        11136,
        11165
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "2063": {
      "fn": "ERC721._approve",
      "offset": [
        11136,
        11165
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "2064": {
      "fn": "ERC721._approve",
      "offset": [
        11136,
        11165
      ],
      "op": "SSTORE",
      "path": "27"
    },
    "2065": {
      "fn": "ERC721._approve",
      "offset": [
        11136,
        11160
      ],
      "op": "DUP2",
      "path": "27"
    },
    "2066": {
      "fn": "ERC721._approve",
      "offset": [
        11136,
        11160
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "2067": {
      "fn": "ERC721._approve",
      "offset": [
        11190,
        11213
      ],
      "op": "PUSH2",
      "path": "27",
      "statement": 27,
      "value": "0x81B"
    },
    "2070": {
      "fn": "ERC721._approve",
      "offset": [
        11136,
        11160
      ],
      "op": "DUP3",
      "path": "27"
    },
    "2071": {
      "fn": "ERC721._approve",
      "offset": [
        11190,
        11204
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x4BD"
    },
    "2074": {
      "fn": "ERC721._approve",
      "jump": "i",
      "offset": [
        11190,
        11213
      ],
      "op": "JUMP",
      "path": "27"
    },
    "2075": {
      "fn": "ERC721._approve",
      "offset": [
        11190,
        11213
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "2076": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2078": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2080": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2082": {
      "op": "SHL"
    },
    "2083": {
      "op": "SUB"
    },
    "2084": {
      "fn": "ERC721._approve",
      "offset": [
        11181,
        11227
      ],
      "op": "AND",
      "path": "27"
    },
    "2085": {
      "fn": "ERC721._approve",
      "offset": [
        11181,
        11227
      ],
      "op": "PUSH32",
      "path": "27",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "2118": {
      "fn": "ERC721._approve",
      "offset": [
        11181,
        11227
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "2120": {
      "fn": "ERC721._approve",
      "offset": [
        11181,
        11227
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "2121": {
      "fn": "ERC721._approve",
      "offset": [
        11181,
        11227
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "2123": {
      "fn": "ERC721._approve",
      "offset": [
        11181,
        11227
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "2124": {
      "fn": "ERC721._approve",
      "offset": [
        11181,
        11227
      ],
      "op": "DUP1",
      "path": "27"
    },
    "2125": {
      "fn": "ERC721._approve",
      "offset": [
        11181,
        11227
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "2126": {
      "fn": "ERC721._approve",
      "offset": [
        11181,
        11227
      ],
      "op": "SUB",
      "path": "27"
    },
    "2127": {
      "fn": "ERC721._approve",
      "offset": [
        11181,
        11227
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "2128": {
      "fn": "ERC721._approve",
      "offset": [
        11181,
        11227
      ],
      "op": "LOG4",
      "path": "27"
    },
    "2129": {
      "fn": "ERC721._approve",
      "offset": [
        11061,
        11235
      ],
      "op": "POP",
      "path": "27"
    },
    "2130": {
      "fn": "ERC721._approve",
      "offset": [
        11061,
        11235
      ],
      "op": "POP",
      "path": "27"
    },
    "2131": {
      "fn": "ERC721._approve",
      "jump": "o",
      "offset": [
        11061,
        11235
      ],
      "op": "JUMP",
      "path": "27"
    },
    "2132": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7478,
        7826
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "2133": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7571,
        7575
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "2135": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7596,
        7612
      ],
      "op": "PUSH2",
      "path": "27",
      "statement": 28,
      "value": "0x85F"
    },
    "2138": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7604,
        7611
      ],
      "op": "DUP3",
      "path": "27"
    },
    "2139": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7596,
        7603
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x7C9"
    },
    "2142": {
      "fn": "ERC721._isApprovedOrOwner",
      "jump": "i",
      "offset": [
        7596,
        7612
      ],
      "op": "JUMP",
      "path": "27"
    },
    "2143": {
      "branch": 60,
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7596,
        7612
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "2144": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7588,
        7661
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x8C0"
    },
    "2147": {
      "branch": 60,
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7588,
        7661
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "2148": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7588,
        7661
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "2150": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7588,
        7661
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "2151": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2155": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2157": {
      "op": "SHL"
    },
    "2158": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7588,
        7661
      ],
      "op": "DUP2",
      "path": "27"
    },
    "2159": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7588,
        7661
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "2160": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2162": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7588,
        7661
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "2164": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7588,
        7661
      ],
      "op": "DUP3",
      "path": "27"
    },
    "2165": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7588,
        7661
      ],
      "op": "ADD",
      "path": "27"
    },
    "2166": {
      "op": "MSTORE"
    },
    "2167": {
      "op": "PUSH1",
      "value": "0x2C"
    },
    "2169": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2171": {
      "op": "DUP3"
    },
    "2172": {
      "op": "ADD"
    },
    "2173": {
      "op": "MSTORE"
    },
    "2174": {
      "op": "PUSH32",
      "value": "0x4552433732313A206F70657261746F7220717565727920666F72206E6F6E6578"
    },
    "2207": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2209": {
      "op": "DUP3"
    },
    "2210": {
      "op": "ADD"
    },
    "2211": {
      "op": "MSTORE"
    },
    "2212": {
      "op": "PUSH12",
      "value": "0x34B9BA32B73A103A37B5B2B7"
    },
    "2225": {
      "op": "PUSH1",
      "value": "0xA1"
    },
    "2227": {
      "op": "SHL"
    },
    "2228": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2230": {
      "op": "DUP3"
    },
    "2231": {
      "op": "ADD"
    },
    "2232": {
      "op": "MSTORE"
    },
    "2233": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2235": {
      "op": "ADD"
    },
    "2236": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7588,
        7661
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x33B"
    },
    "2239": {
      "op": "JUMP"
    },
    "2240": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7588,
        7661
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "2241": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7672,
        7685
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "2243": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7688,
        7711
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x8CB"
    },
    "2246": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7703,
        7710
      ],
      "op": "DUP4",
      "path": "27"
    },
    "2247": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7688,
        7702
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x4BD"
    },
    "2250": {
      "fn": "ERC721._isApprovedOrOwner",
      "jump": "i",
      "offset": [
        7688,
        7711
      ],
      "op": "JUMP",
      "path": "27"
    },
    "2251": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7688,
        7711
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "2252": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7672,
        7711
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "2253": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7672,
        7711
      ],
      "op": "POP",
      "path": "27"
    },
    "2254": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7741,
        7746
      ],
      "op": "DUP1",
      "path": "27",
      "statement": 29
    },
    "2255": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2257": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2259": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2261": {
      "op": "SHL"
    },
    "2262": {
      "op": "SUB"
    },
    "2263": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7730,
        7746
      ],
      "op": "AND",
      "path": "27"
    },
    "2264": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7730,
        7737
      ],
      "op": "DUP5",
      "path": "27"
    },
    "2265": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2267": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2269": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2271": {
      "op": "SHL"
    },
    "2272": {
      "op": "SUB"
    },
    "2273": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7730,
        7746
      ],
      "op": "AND",
      "path": "27"
    },
    "2274": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7730,
        7746
      ],
      "op": "EQ",
      "path": "27"
    },
    "2275": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7730,
        7781
      ],
      "op": "DUP1",
      "path": "27"
    },
    "2276": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7730,
        7781
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x906"
    },
    "2279": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7730,
        7781
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "2280": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7730,
        7781
      ],
      "op": "POP",
      "path": "27"
    },
    "2281": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7774,
        7781
      ],
      "op": "DUP4",
      "path": "27"
    },
    "2282": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2284": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2286": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2288": {
      "op": "SHL"
    },
    "2289": {
      "op": "SUB"
    },
    "2290": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7750,
        7781
      ],
      "op": "AND",
      "path": "27"
    },
    "2291": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7750,
        7770
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x8FB"
    },
    "2294": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7762,
        7769
      ],
      "op": "DUP5",
      "path": "27"
    },
    "2295": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7750,
        7761
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x2D3"
    },
    "2298": {
      "fn": "ERC721._isApprovedOrOwner",
      "jump": "i",
      "offset": [
        7750,
        7770
      ],
      "op": "JUMP",
      "path": "27"
    },
    "2299": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7750,
        7770
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "2300": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2302": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2304": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2306": {
      "op": "SHL"
    },
    "2307": {
      "op": "SUB"
    },
    "2308": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7750,
        7781
      ],
      "op": "AND",
      "path": "27"
    },
    "2309": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7750,
        7781
      ],
      "op": "EQ",
      "path": "27"
    },
    "2310": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7730,
        7781
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "2311": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7730,
        7817
      ],
      "op": "DUP1",
      "path": "27"
    },
    "2312": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7730,
        7817
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x916"
    },
    "2315": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7730,
        7817
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "2316": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7730,
        7817
      ],
      "op": "POP",
      "path": "27"
    },
    "2317": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7785,
        7817
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x916"
    },
    "2320": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7802,
        7807
      ],
      "op": "DUP2",
      "path": "27"
    },
    "2321": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7809,
        7816
      ],
      "op": "DUP6",
      "path": "27"
    },
    "2322": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7785,
        7801
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x79B"
    },
    "2325": {
      "fn": "ERC721._isApprovedOrOwner",
      "jump": "i",
      "offset": [
        7785,
        7817
      ],
      "op": "JUMP",
      "path": "27"
    },
    "2326": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7785,
        7817
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "2327": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7722,
        7818
      ],
      "op": "SWAP5",
      "path": "27"
    },
    "2328": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7478,
        7826
      ],
      "op": "SWAP4",
      "path": "27"
    },
    "2329": {
      "op": "POP"
    },
    "2330": {
      "op": "POP"
    },
    "2331": {
      "op": "POP"
    },
    "2332": {
      "op": "POP"
    },
    "2333": {
      "fn": "ERC721._isApprovedOrOwner",
      "jump": "o",
      "offset": [
        7478,
        7826
      ],
      "op": "JUMP",
      "path": "27"
    },
    "2334": {
      "fn": "ERC721._transfer",
      "offset": [
        10399,
        10943
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "2335": {
      "fn": "ERC721._transfer",
      "offset": [
        10524,
        10528
      ],
      "op": "DUP3",
      "path": "27",
      "statement": 30
    },
    "2336": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2338": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2340": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2342": {
      "op": "SHL"
    },
    "2343": {
      "op": "SUB"
    },
    "2344": {
      "fn": "ERC721._transfer",
      "offset": [
        10497,
        10528
      ],
      "op": "AND",
      "path": "27"
    },
    "2345": {
      "fn": "ERC721._transfer",
      "offset": [
        10497,
        10520
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x931"
    },
    "2348": {
      "fn": "ERC721._transfer",
      "offset": [
        10512,
        10519
      ],
      "op": "DUP3",
      "path": "27"
    },
    "2349": {
      "fn": "ERC721._transfer",
      "offset": [
        10497,
        10511
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x4BD"
    },
    "2352": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        10497,
        10520
      ],
      "op": "JUMP",
      "path": "27"
    },
    "2353": {
      "fn": "ERC721._transfer",
      "offset": [
        10497,
        10520
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "2354": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2356": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2358": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2360": {
      "op": "SHL"
    },
    "2361": {
      "op": "SUB"
    },
    "2362": {
      "fn": "ERC721._transfer",
      "offset": [
        10497,
        10528
      ],
      "op": "AND",
      "path": "27"
    },
    "2363": {
      "branch": 61,
      "fn": "ERC721._transfer",
      "offset": [
        10497,
        10528
      ],
      "op": "EQ",
      "path": "27"
    },
    "2364": {
      "fn": "ERC721._transfer",
      "offset": [
        10489,
        10574
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x999"
    },
    "2367": {
      "branch": 61,
      "fn": "ERC721._transfer",
      "offset": [
        10489,
        10574
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "2368": {
      "fn": "ERC721._transfer",
      "offset": [
        10489,
        10574
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "2370": {
      "fn": "ERC721._transfer",
      "offset": [
        10489,
        10574
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "2371": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2375": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2377": {
      "op": "SHL"
    },
    "2378": {
      "fn": "ERC721._transfer",
      "offset": [
        10489,
        10574
      ],
      "op": "DUP2",
      "path": "27"
    },
    "2379": {
      "fn": "ERC721._transfer",
      "offset": [
        10489,
        10574
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "2380": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2382": {
      "fn": "ERC721._transfer",
      "offset": [
        10489,
        10574
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "2384": {
      "fn": "ERC721._transfer",
      "offset": [
        10489,
        10574
      ],
      "op": "DUP3",
      "path": "27"
    },
    "2385": {
      "fn": "ERC721._transfer",
      "offset": [
        10489,
        10574
      ],
      "op": "ADD",
      "path": "27"
    },
    "2386": {
      "op": "MSTORE"
    },
    "2387": {
      "op": "PUSH1",
      "value": "0x29"
    },
    "2389": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2391": {
      "op": "DUP3"
    },
    "2392": {
      "op": "ADD"
    },
    "2393": {
      "op": "MSTORE"
    },
    "2394": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E73666572206F6620746F6B656E20746861742069"
    },
    "2427": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2429": {
      "op": "DUP3"
    },
    "2430": {
      "op": "ADD"
    },
    "2431": {
      "op": "MSTORE"
    },
    "2432": {
      "op": "PUSH9",
      "value": "0x39903737BA1037BBB7"
    },
    "2442": {
      "op": "PUSH1",
      "value": "0xB9"
    },
    "2444": {
      "op": "SHL"
    },
    "2445": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2447": {
      "op": "DUP3"
    },
    "2448": {
      "op": "ADD"
    },
    "2449": {
      "op": "MSTORE"
    },
    "2450": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2452": {
      "op": "ADD"
    },
    "2453": {
      "fn": "ERC721._transfer",
      "offset": [
        10489,
        10574
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x33B"
    },
    "2456": {
      "op": "JUMP"
    },
    "2457": {
      "fn": "ERC721._transfer",
      "offset": [
        10489,
        10574
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "2458": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2460": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2462": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2464": {
      "op": "SHL"
    },
    "2465": {
      "op": "SUB"
    },
    "2466": {
      "fn": "ERC721._transfer",
      "offset": [
        10593,
        10609
      ],
      "op": "DUP3",
      "path": "27",
      "statement": 31
    },
    "2467": {
      "branch": 62,
      "fn": "ERC721._transfer",
      "offset": [
        10593,
        10609
      ],
      "op": "AND",
      "path": "27"
    },
    "2468": {
      "fn": "ERC721._transfer",
      "offset": [
        10585,
        10650
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x9FB"
    },
    "2471": {
      "branch": 62,
      "fn": "ERC721._transfer",
      "offset": [
        10585,
        10650
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "2472": {
      "fn": "ERC721._transfer",
      "offset": [
        10585,
        10650
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "2474": {
      "fn": "ERC721._transfer",
      "offset": [
        10585,
        10650
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "2475": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2479": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2481": {
      "op": "SHL"
    },
    "2482": {
      "fn": "ERC721._transfer",
      "offset": [
        10585,
        10650
      ],
      "op": "DUP2",
      "path": "27"
    },
    "2483": {
      "fn": "ERC721._transfer",
      "offset": [
        10585,
        10650
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "2484": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2486": {
      "fn": "ERC721._transfer",
      "offset": [
        10585,
        10650
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "2488": {
      "fn": "ERC721._transfer",
      "offset": [
        10585,
        10650
      ],
      "op": "DUP3",
      "path": "27"
    },
    "2489": {
      "fn": "ERC721._transfer",
      "offset": [
        10585,
        10650
      ],
      "op": "ADD",
      "path": "27"
    },
    "2490": {
      "op": "MSTORE"
    },
    "2491": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2493": {
      "op": "DUP1"
    },
    "2494": {
      "op": "DUP3"
    },
    "2495": {
      "op": "ADD"
    },
    "2496": {
      "op": "MSTORE"
    },
    "2497": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E7366657220746F20746865207A65726F20616464"
    },
    "2530": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2532": {
      "op": "DUP3"
    },
    "2533": {
      "op": "ADD"
    },
    "2534": {
      "op": "MSTORE"
    },
    "2535": {
      "op": "PUSH4",
      "value": "0x72657373"
    },
    "2540": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2542": {
      "op": "SHL"
    },
    "2543": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2545": {
      "op": "DUP3"
    },
    "2546": {
      "op": "ADD"
    },
    "2547": {
      "op": "MSTORE"
    },
    "2548": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2550": {
      "op": "ADD"
    },
    "2551": {
      "fn": "ERC721._transfer",
      "offset": [
        10585,
        10650
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x33B"
    },
    "2554": {
      "op": "JUMP"
    },
    "2555": {
      "fn": "ERC721._transfer",
      "offset": [
        10585,
        10650
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "2556": {
      "fn": "ERC721._transfer",
      "offset": [
        10767,
        10796
      ],
      "op": "PUSH2",
      "path": "27",
      "statement": 32,
      "value": "0xA06"
    },
    "2559": {
      "fn": "ERC721._transfer",
      "offset": [
        10784,
        10785
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "2561": {
      "fn": "ERC721._transfer",
      "offset": [
        10788,
        10795
      ],
      "op": "DUP3",
      "path": "27"
    },
    "2562": {
      "fn": "ERC721._transfer",
      "offset": [
        10767,
        10775
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x7E6"
    },
    "2565": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        10767,
        10796
      ],
      "op": "JUMP",
      "path": "27"
    },
    "2566": {
      "fn": "ERC721._transfer",
      "offset": [
        10767,
        10796
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "2567": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2569": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2571": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2573": {
      "op": "SHL"
    },
    "2574": {
      "op": "SUB"
    },
    "2575": {
      "fn": "ERC721._transfer",
      "offset": [
        10809,
        10824
      ],
      "op": "DUP4",
      "path": "27",
      "statement": 33
    },
    "2576": {
      "fn": "ERC721._transfer",
      "offset": [
        10809,
        10824
      ],
      "op": "AND",
      "path": "27"
    },
    "2577": {
      "fn": "ERC721._transfer",
      "offset": [
        10809,
        10824
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "2579": {
      "fn": "ERC721._transfer",
      "offset": [
        10809,
        10824
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "2580": {
      "fn": "ERC721._transfer",
      "offset": [
        10809,
        10824
      ],
      "op": "DUP2",
      "path": "27"
    },
    "2581": {
      "fn": "ERC721._transfer",
      "offset": [
        10809,
        10824
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "2582": {
      "fn": "ERC721._transfer",
      "offset": [
        10809,
        10818
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x3"
    },
    "2584": {
      "fn": "ERC721._transfer",
      "offset": [
        10809,
        10824
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "2586": {
      "fn": "ERC721._transfer",
      "offset": [
        10809,
        10824
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "2587": {
      "fn": "ERC721._transfer",
      "offset": [
        10809,
        10824
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "2589": {
      "fn": "ERC721._transfer",
      "offset": [
        10809,
        10824
      ],
      "op": "DUP2",
      "path": "27"
    },
    "2590": {
      "fn": "ERC721._transfer",
      "offset": [
        10809,
        10824
      ],
      "op": "KECCAK256",
      "path": "27"
    },
    "2591": {
      "fn": "ERC721._transfer",
      "offset": [
        10809,
        10829
      ],
      "op": "DUP1",
      "path": "27"
    },
    "2592": {
      "fn": "ERC721._transfer",
      "offset": [
        10809,
        10829
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "2593": {
      "fn": "ERC721._transfer",
      "offset": [
        10828,
        10829
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x1"
    },
    "2595": {
      "fn": "ERC721._transfer",
      "offset": [
        10828,
        10829
      ],
      "op": "SWAP3",
      "path": "27"
    },
    "2596": {
      "fn": "ERC721._transfer",
      "offset": [
        10809,
        10824
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "2597": {
      "fn": "ERC721._transfer",
      "offset": [
        10809,
        10829
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0xA2F"
    },
    "2600": {
      "fn": "ERC721._transfer",
      "offset": [
        10809,
        10829
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "2601": {
      "fn": "ERC721._transfer",
      "offset": [
        10828,
        10829
      ],
      "op": "DUP5",
      "path": "27"
    },
    "2602": {
      "fn": "ERC721._transfer",
      "offset": [
        10828,
        10829
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "2603": {
      "fn": "ERC721._transfer",
      "offset": [
        10809,
        10829
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1085"
    },
    "2606": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        10809,
        10829
      ],
      "op": "JUMP",
      "path": "27"
    },
    "2607": {
      "fn": "ERC721._transfer",
      "offset": [
        10809,
        10829
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "2608": {
      "fn": "ERC721._transfer",
      "offset": [
        10809,
        10829
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "2609": {
      "fn": "ERC721._transfer",
      "offset": [
        10809,
        10829
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "2610": {
      "fn": "ERC721._transfer",
      "offset": [
        10809,
        10829
      ],
      "op": "SSTORE",
      "path": "27"
    },
    "2611": {
      "op": "POP"
    },
    "2612": {
      "op": "POP"
    },
    "2613": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2615": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2617": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2619": {
      "op": "SHL"
    },
    "2620": {
      "op": "SUB"
    },
    "2621": {
      "fn": "ERC721._transfer",
      "offset": [
        10840,
        10853
      ],
      "op": "DUP3",
      "path": "27",
      "statement": 34
    },
    "2622": {
      "fn": "ERC721._transfer",
      "offset": [
        10840,
        10853
      ],
      "op": "AND",
      "path": "27"
    },
    "2623": {
      "fn": "ERC721._transfer",
      "offset": [
        10840,
        10853
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "2625": {
      "fn": "ERC721._transfer",
      "offset": [
        10840,
        10853
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "2626": {
      "fn": "ERC721._transfer",
      "offset": [
        10840,
        10853
      ],
      "op": "DUP2",
      "path": "27"
    },
    "2627": {
      "fn": "ERC721._transfer",
      "offset": [
        10840,
        10853
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "2628": {
      "fn": "ERC721._transfer",
      "offset": [
        10840,
        10849
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x3"
    },
    "2630": {
      "fn": "ERC721._transfer",
      "offset": [
        10840,
        10853
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "2632": {
      "fn": "ERC721._transfer",
      "offset": [
        10840,
        10853
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "2633": {
      "fn": "ERC721._transfer",
      "offset": [
        10840,
        10853
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "2635": {
      "fn": "ERC721._transfer",
      "offset": [
        10840,
        10853
      ],
      "op": "DUP2",
      "path": "27"
    },
    "2636": {
      "fn": "ERC721._transfer",
      "offset": [
        10840,
        10853
      ],
      "op": "KECCAK256",
      "path": "27"
    },
    "2637": {
      "fn": "ERC721._transfer",
      "offset": [
        10840,
        10858
      ],
      "op": "DUP1",
      "path": "27"
    },
    "2638": {
      "fn": "ERC721._transfer",
      "offset": [
        10840,
        10858
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "2639": {
      "fn": "ERC721._transfer",
      "offset": [
        10857,
        10858
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x1"
    },
    "2641": {
      "fn": "ERC721._transfer",
      "offset": [
        10857,
        10858
      ],
      "op": "SWAP3",
      "path": "27"
    },
    "2642": {
      "fn": "ERC721._transfer",
      "offset": [
        10840,
        10853
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "2643": {
      "fn": "ERC721._transfer",
      "offset": [
        10840,
        10858
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0xA5D"
    },
    "2646": {
      "fn": "ERC721._transfer",
      "offset": [
        10840,
        10858
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "2647": {
      "fn": "ERC721._transfer",
      "offset": [
        10857,
        10858
      ],
      "op": "DUP5",
      "path": "27"
    },
    "2648": {
      "fn": "ERC721._transfer",
      "offset": [
        10857,
        10858
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "2649": {
      "fn": "ERC721._transfer",
      "offset": [
        10840,
        10858
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x109C"
    },
    "2652": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        10840,
        10858
      ],
      "op": "JUMP",
      "path": "27"
    },
    "2653": {
      "fn": "ERC721._transfer",
      "offset": [
        10840,
        10858
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "2654": {
      "fn": "ERC721._transfer",
      "offset": [
        10840,
        10858
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "2655": {
      "fn": "ERC721._transfer",
      "offset": [
        10840,
        10858
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "2656": {
      "fn": "ERC721._transfer",
      "offset": [
        10840,
        10858
      ],
      "op": "SSTORE",
      "path": "27"
    },
    "2657": {
      "op": "POP"
    },
    "2658": {
      "op": "POP"
    },
    "2659": {
      "fn": "ERC721._transfer",
      "offset": [
        10869,
        10885
      ],
      "op": "PUSH1",
      "path": "27",
      "statement": 35,
      "value": "0x0"
    },
    "2661": {
      "fn": "ERC721._transfer",
      "offset": [
        10869,
        10885
      ],
      "op": "DUP2",
      "path": "27"
    },
    "2662": {
      "fn": "ERC721._transfer",
      "offset": [
        10869,
        10885
      ],
      "op": "DUP2",
      "path": "27"
    },
    "2663": {
      "fn": "ERC721._transfer",
      "offset": [
        10869,
        10885
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "2664": {
      "fn": "ERC721._transfer",
      "offset": [
        10869,
        10876
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x2"
    },
    "2666": {
      "fn": "ERC721._transfer",
      "offset": [
        10869,
        10885
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "2668": {
      "fn": "ERC721._transfer",
      "offset": [
        10869,
        10885
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "2669": {
      "fn": "ERC721._transfer",
      "offset": [
        10869,
        10885
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "2671": {
      "fn": "ERC721._transfer",
      "offset": [
        10869,
        10885
      ],
      "op": "DUP1",
      "path": "27"
    },
    "2672": {
      "fn": "ERC721._transfer",
      "offset": [
        10869,
        10885
      ],
      "op": "DUP3",
      "path": "27"
    },
    "2673": {
      "fn": "ERC721._transfer",
      "offset": [
        10869,
        10885
      ],
      "op": "KECCAK256",
      "path": "27"
    },
    "2674": {
      "fn": "ERC721._transfer",
      "offset": [
        10869,
        10890
      ],
      "op": "DUP1",
      "path": "27"
    },
    "2675": {
      "fn": "ERC721._transfer",
      "offset": [
        10869,
        10890
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "2676": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2678": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2680": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2682": {
      "op": "SHL"
    },
    "2683": {
      "op": "SUB"
    },
    "2684": {
      "op": "NOT"
    },
    "2685": {
      "fn": "ERC721._transfer",
      "offset": [
        10869,
        10890
      ],
      "op": "AND",
      "path": "27"
    },
    "2686": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2688": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2690": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2692": {
      "op": "SHL"
    },
    "2693": {
      "op": "SUB"
    },
    "2694": {
      "fn": "ERC721._transfer",
      "offset": [
        10869,
        10890
      ],
      "op": "DUP7",
      "path": "27"
    },
    "2695": {
      "fn": "ERC721._transfer",
      "offset": [
        10869,
        10890
      ],
      "op": "DUP2",
      "path": "27"
    },
    "2696": {
      "fn": "ERC721._transfer",
      "offset": [
        10869,
        10890
      ],
      "op": "AND",
      "path": "27"
    },
    "2697": {
      "fn": "ERC721._transfer",
      "offset": [
        10869,
        10890
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "2698": {
      "fn": "ERC721._transfer",
      "offset": [
        10869,
        10890
      ],
      "op": "DUP3",
      "path": "27"
    },
    "2699": {
      "fn": "ERC721._transfer",
      "offset": [
        10869,
        10890
      ],
      "op": "OR",
      "path": "27"
    },
    "2700": {
      "fn": "ERC721._transfer",
      "offset": [
        10869,
        10890
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "2701": {
      "fn": "ERC721._transfer",
      "offset": [
        10869,
        10890
      ],
      "op": "SWAP3",
      "path": "27"
    },
    "2702": {
      "fn": "ERC721._transfer",
      "offset": [
        10869,
        10890
      ],
      "op": "SSTORE",
      "path": "27"
    },
    "2703": {
      "fn": "ERC721._transfer",
      "offset": [
        10908,
        10935
      ],
      "op": "SWAP2",
      "path": "27",
      "statement": 36
    },
    "2704": {
      "fn": "ERC721._transfer",
      "offset": [
        10908,
        10935
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "2705": {
      "fn": "ERC721._transfer",
      "offset": [
        10869,
        10885
      ],
      "op": "DUP5",
      "path": "27"
    },
    "2706": {
      "fn": "ERC721._transfer",
      "offset": [
        10869,
        10885
      ],
      "op": "SWAP4",
      "path": "27"
    },
    "2707": {
      "fn": "ERC721._transfer",
      "offset": [
        10908,
        10935
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "2708": {
      "fn": "ERC721._transfer",
      "offset": [
        10908,
        10935
      ],
      "op": "DUP8",
      "path": "27"
    },
    "2709": {
      "fn": "ERC721._transfer",
      "offset": [
        10908,
        10935
      ],
      "op": "AND",
      "path": "27"
    },
    "2710": {
      "fn": "ERC721._transfer",
      "offset": [
        10908,
        10935
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "2711": {
      "fn": "ERC721._transfer",
      "offset": [
        10908,
        10935
      ],
      "op": "PUSH32",
      "path": "27",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "2744": {
      "fn": "ERC721._transfer",
      "offset": [
        10908,
        10935
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "2745": {
      "fn": "ERC721._transfer",
      "offset": [
        10908,
        10935
      ],
      "op": "LOG4",
      "path": "27"
    },
    "2746": {
      "fn": "ERC721._transfer",
      "offset": [
        10399,
        10943
      ],
      "op": "POP",
      "path": "27"
    },
    "2747": {
      "fn": "ERC721._transfer",
      "offset": [
        10399,
        10943
      ],
      "op": "POP",
      "path": "27"
    },
    "2748": {
      "fn": "ERC721._transfer",
      "offset": [
        10399,
        10943
      ],
      "op": "POP",
      "path": "27"
    },
    "2749": {
      "fn": "ERC721._transfer",
      "jump": "o",
      "offset": [
        10399,
        10943
      ],
      "op": "JUMP",
      "path": "27"
    },
    "2750": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6599,
        6871
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "2751": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6713,
        6741
      ],
      "op": "PUSH2",
      "path": "27",
      "statement": 37,
      "value": "0xAC9"
    },
    "2754": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6723,
        6727
      ],
      "op": "DUP5",
      "path": "27"
    },
    "2755": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6729,
        6731
      ],
      "op": "DUP5",
      "path": "27"
    },
    "2756": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6733,
        6740
      ],
      "op": "DUP5",
      "path": "27"
    },
    "2757": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6713,
        6722
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x91E"
    },
    "2760": {
      "fn": "ERC721._safeTransfer",
      "jump": "i",
      "offset": [
        6713,
        6741
      ],
      "op": "JUMP",
      "path": "27"
    },
    "2761": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6713,
        6741
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "2762": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6760,
        6808
      ],
      "op": "PUSH2",
      "path": "27",
      "statement": 38,
      "value": "0xAD5"
    },
    "2765": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6783,
        6787
      ],
      "op": "DUP5",
      "path": "27"
    },
    "2766": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6789,
        6791
      ],
      "op": "DUP5",
      "path": "27"
    },
    "2767": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6793,
        6800
      ],
      "op": "DUP5",
      "path": "27"
    },
    "2768": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6802,
        6807
      ],
      "op": "DUP5",
      "path": "27"
    },
    "2769": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6760,
        6782
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0xBEF"
    },
    "2772": {
      "fn": "ERC721._safeTransfer",
      "jump": "i",
      "offset": [
        6760,
        6808
      ],
      "op": "JUMP",
      "path": "27"
    },
    "2773": {
      "branch": 63,
      "fn": "ERC721._safeTransfer",
      "offset": [
        6760,
        6808
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "2774": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6752,
        6863
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x6BD"
    },
    "2777": {
      "branch": 63,
      "fn": "ERC721._safeTransfer",
      "offset": [
        6752,
        6863
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "2778": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6752,
        6863
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "2780": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6752,
        6863
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "2781": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2785": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2787": {
      "op": "SHL"
    },
    "2788": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6752,
        6863
      ],
      "op": "DUP2",
      "path": "27"
    },
    "2789": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6752,
        6863
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "2790": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6752,
        6863
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "2792": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6752,
        6863
      ],
      "op": "ADD",
      "path": "27"
    },
    "2793": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6752,
        6863
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x33B"
    },
    "2796": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6752,
        6863
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "2797": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6752,
        6863
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x10B4"
    },
    "2800": {
      "fn": "ERC721._safeTransfer",
      "jump": "i",
      "offset": [
        6752,
        6863
      ],
      "op": "JUMP",
      "path": "27"
    },
    "2801": {
      "fn": "Strings.toString",
      "offset": [
        284,
        1007
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "2802": {
      "fn": "Strings.toString",
      "offset": [
        340,
        353
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x60"
    },
    "2804": {
      "branch": 64,
      "fn": "Strings.toString",
      "offset": [
        561,
        571
      ],
      "op": "DUP2",
      "path": "35"
    },
    "2805": {
      "fn": "Strings.toString",
      "offset": [
        557,
        610
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0xB15"
    },
    "2808": {
      "branch": 64,
      "fn": "Strings.toString",
      "offset": [
        557,
        610
      ],
      "op": "JUMPI",
      "path": "35"
    },
    "2809": {
      "op": "POP"
    },
    "2810": {
      "op": "POP"
    },
    "2811": {
      "fn": "Strings.toString",
      "offset": [
        588,
        598
      ],
      "op": "PUSH1",
      "path": "35",
      "statement": 39,
      "value": "0x40"
    },
    "2813": {
      "fn": "Strings.toString",
      "offset": [
        588,
        598
      ],
      "op": "DUP1",
      "path": "35"
    },
    "2814": {
      "fn": "Strings.toString",
      "offset": [
        588,
        598
      ],
      "op": "MLOAD",
      "path": "35"
    },
    "2815": {
      "fn": "Strings.toString",
      "offset": [
        588,
        598
      ],
      "op": "DUP1",
      "path": "35"
    },
    "2816": {
      "fn": "Strings.toString",
      "offset": [
        588,
        598
      ],
      "op": "DUP3",
      "path": "35"
    },
    "2817": {
      "fn": "Strings.toString",
      "offset": [
        588,
        598
      ],
      "op": "ADD",
      "path": "35"
    },
    "2818": {
      "fn": "Strings.toString",
      "offset": [
        588,
        598
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "2819": {
      "fn": "Strings.toString",
      "offset": [
        588,
        598
      ],
      "op": "SWAP2",
      "path": "35"
    },
    "2820": {
      "fn": "Strings.toString",
      "offset": [
        588,
        598
      ],
      "op": "MSTORE",
      "path": "35"
    },
    "2821": {
      "fn": "Strings.toString",
      "offset": [
        588,
        598
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x1"
    },
    "2823": {
      "fn": "Strings.toString",
      "offset": [
        588,
        598
      ],
      "op": "DUP2",
      "path": "35"
    },
    "2824": {
      "fn": "Strings.toString",
      "offset": [
        588,
        598
      ],
      "op": "MSTORE",
      "path": "35"
    },
    "2825": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "2827": {
      "op": "PUSH1",
      "value": "0xFC"
    },
    "2829": {
      "op": "SHL"
    },
    "2830": {
      "fn": "Strings.toString",
      "offset": [
        588,
        598
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x20"
    },
    "2832": {
      "fn": "Strings.toString",
      "offset": [
        588,
        598
      ],
      "op": "DUP3",
      "path": "35"
    },
    "2833": {
      "fn": "Strings.toString",
      "offset": [
        588,
        598
      ],
      "op": "ADD",
      "path": "35"
    },
    "2834": {
      "fn": "Strings.toString",
      "offset": [
        588,
        598
      ],
      "op": "MSTORE",
      "path": "35"
    },
    "2835": {
      "fn": "Strings.toString",
      "offset": [
        588,
        598
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "2836": {
      "fn": "Strings.toString",
      "jump": "o",
      "offset": [
        284,
        1007
      ],
      "op": "JUMP",
      "path": "35"
    },
    "2837": {
      "fn": "Strings.toString",
      "offset": [
        557,
        610
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "2838": {
      "fn": "Strings.toString",
      "offset": [
        635,
        640
      ],
      "op": "DUP2",
      "path": "35"
    },
    "2839": {
      "fn": "Strings.toString",
      "offset": [
        620,
        632
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x0"
    },
    "2841": {
      "fn": "Strings.toString",
      "offset": [
        676,
        754
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "2842": {
      "fn": "Strings.toString",
      "offset": [
        683,
        692
      ],
      "op": "DUP2",
      "path": "35"
    },
    "2843": {
      "fn": "Strings.toString",
      "offset": [
        683,
        692
      ],
      "op": "ISZERO",
      "path": "35"
    },
    "2844": {
      "fn": "Strings.toString",
      "offset": [
        676,
        754
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0xB3F"
    },
    "2847": {
      "fn": "Strings.toString",
      "offset": [
        676,
        754
      ],
      "op": "JUMPI",
      "path": "35"
    },
    "2848": {
      "fn": "Strings.toString",
      "offset": [
        709,
        717
      ],
      "op": "DUP1",
      "path": "35",
      "statement": 40
    },
    "2849": {
      "fn": "Strings.toString",
      "offset": [
        709,
        717
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0xB29"
    },
    "2852": {
      "fn": "Strings.toString",
      "offset": [
        709,
        717
      ],
      "op": "DUP2",
      "path": "35"
    },
    "2853": {
      "fn": "Strings.toString",
      "offset": [
        709,
        717
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x1106"
    },
    "2856": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        709,
        717
      ],
      "op": "JUMP",
      "path": "35"
    },
    "2857": {
      "fn": "Strings.toString",
      "offset": [
        709,
        717
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "2858": {
      "fn": "Strings.toString",
      "offset": [
        709,
        717
      ],
      "op": "SWAP2",
      "path": "35"
    },
    "2859": {
      "op": "POP"
    },
    "2860": {
      "fn": "Strings.toString",
      "offset": [
        732,
        742
      ],
      "op": "PUSH2",
      "path": "35",
      "statement": 41,
      "value": "0xB38"
    },
    "2863": {
      "fn": "Strings.toString",
      "offset": [
        732,
        742
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "2864": {
      "op": "POP"
    },
    "2865": {
      "fn": "Strings.toString",
      "offset": [
        740,
        742
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0xA"
    },
    "2867": {
      "fn": "Strings.toString",
      "offset": [
        732,
        742
      ],
      "op": "DUP4",
      "path": "35"
    },
    "2868": {
      "fn": "Strings.toString",
      "offset": [
        732,
        742
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x1137"
    },
    "2871": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        732,
        742
      ],
      "op": "JUMP",
      "path": "35"
    },
    "2872": {
      "fn": "Strings.toString",
      "offset": [
        732,
        742
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "2873": {
      "fn": "Strings.toString",
      "offset": [
        732,
        742
      ],
      "op": "SWAP2",
      "path": "35"
    },
    "2874": {
      "fn": "Strings.toString",
      "offset": [
        732,
        742
      ],
      "op": "POP",
      "path": "35"
    },
    "2875": {
      "fn": "Strings.toString",
      "offset": [
        676,
        754
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0xB19"
    },
    "2878": {
      "fn": "Strings.toString",
      "offset": [
        676,
        754
      ],
      "op": "JUMP",
      "path": "35"
    },
    "2879": {
      "fn": "Strings.toString",
      "offset": [
        676,
        754
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "2880": {
      "fn": "Strings.toString",
      "offset": [
        764,
        783
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x0"
    },
    "2882": {
      "fn": "Strings.toString",
      "offset": [
        796,
        802
      ],
      "op": "DUP2",
      "path": "35"
    },
    "2883": {
      "fn": "Strings.toString",
      "offset": [
        786,
        803
      ],
      "op": "PUSH8",
      "path": "35",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "2892": {
      "fn": "Strings.toString",
      "offset": [
        786,
        803
      ],
      "op": "DUP2",
      "path": "35"
    },
    "2893": {
      "fn": "Strings.toString",
      "offset": [
        786,
        803
      ],
      "op": "GT",
      "path": "35"
    },
    "2894": {
      "fn": "Strings.toString",
      "offset": [
        786,
        803
      ],
      "op": "ISZERO",
      "path": "35"
    },
    "2895": {
      "fn": "Strings.toString",
      "offset": [
        786,
        803
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0xB5A"
    },
    "2898": {
      "fn": "Strings.toString",
      "offset": [
        786,
        803
      ],
      "op": "JUMPI",
      "path": "35"
    },
    "2899": {
      "fn": "Strings.toString",
      "offset": [
        786,
        803
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0xB5A"
    },
    "2902": {
      "fn": "Strings.toString",
      "offset": [
        786,
        803
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0xE8F"
    },
    "2905": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        786,
        803
      ],
      "op": "JUMP",
      "path": "35"
    },
    "2906": {
      "fn": "Strings.toString",
      "offset": [
        786,
        803
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "2907": {
      "fn": "Strings.toString",
      "offset": [
        786,
        803
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x40"
    },
    "2909": {
      "fn": "Strings.toString",
      "offset": [
        786,
        803
      ],
      "op": "MLOAD",
      "path": "35"
    },
    "2910": {
      "fn": "Strings.toString",
      "offset": [
        786,
        803
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "2911": {
      "fn": "Strings.toString",
      "offset": [
        786,
        803
      ],
      "op": "DUP1",
      "path": "35"
    },
    "2912": {
      "fn": "Strings.toString",
      "offset": [
        786,
        803
      ],
      "op": "DUP3",
      "path": "35"
    },
    "2913": {
      "fn": "Strings.toString",
      "offset": [
        786,
        803
      ],
      "op": "MSTORE",
      "path": "35"
    },
    "2914": {
      "fn": "Strings.toString",
      "offset": [
        786,
        803
      ],
      "op": "DUP1",
      "path": "35"
    },
    "2915": {
      "fn": "Strings.toString",
      "offset": [
        786,
        803
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x1F"
    },
    "2917": {
      "fn": "Strings.toString",
      "offset": [
        786,
        803
      ],
      "op": "ADD",
      "path": "35"
    },
    "2918": {
      "fn": "Strings.toString",
      "offset": [
        786,
        803
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x1F"
    },
    "2920": {
      "fn": "Strings.toString",
      "offset": [
        786,
        803
      ],
      "op": "NOT",
      "path": "35"
    },
    "2921": {
      "fn": "Strings.toString",
      "offset": [
        786,
        803
      ],
      "op": "AND",
      "path": "35"
    },
    "2922": {
      "fn": "Strings.toString",
      "offset": [
        786,
        803
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x20"
    },
    "2924": {
      "fn": "Strings.toString",
      "offset": [
        786,
        803
      ],
      "op": "ADD",
      "path": "35"
    },
    "2925": {
      "fn": "Strings.toString",
      "offset": [
        786,
        803
      ],
      "op": "DUP3",
      "path": "35"
    },
    "2926": {
      "fn": "Strings.toString",
      "offset": [
        786,
        803
      ],
      "op": "ADD",
      "path": "35"
    },
    "2927": {
      "fn": "Strings.toString",
      "offset": [
        786,
        803
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x40"
    },
    "2929": {
      "fn": "Strings.toString",
      "offset": [
        786,
        803
      ],
      "op": "MSTORE",
      "path": "35"
    },
    "2930": {
      "fn": "Strings.toString",
      "offset": [
        786,
        803
      ],
      "op": "DUP1",
      "path": "35"
    },
    "2931": {
      "fn": "Strings.toString",
      "offset": [
        786,
        803
      ],
      "op": "ISZERO",
      "path": "35"
    },
    "2932": {
      "fn": "Strings.toString",
      "offset": [
        786,
        803
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0xB84"
    },
    "2935": {
      "fn": "Strings.toString",
      "offset": [
        786,
        803
      ],
      "op": "JUMPI",
      "path": "35"
    },
    "2936": {
      "fn": "Strings.toString",
      "offset": [
        786,
        803
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x20"
    },
    "2938": {
      "fn": "Strings.toString",
      "offset": [
        786,
        803
      ],
      "op": "DUP3",
      "path": "35"
    },
    "2939": {
      "fn": "Strings.toString",
      "offset": [
        786,
        803
      ],
      "op": "ADD",
      "path": "35"
    },
    "2940": {
      "fn": "Strings.toString",
      "offset": [
        786,
        803
      ],
      "op": "DUP2",
      "path": "35"
    },
    "2941": {
      "fn": "Strings.toString",
      "offset": [
        786,
        803
      ],
      "op": "DUP1",
      "path": "35"
    },
    "2942": {
      "fn": "Strings.toString",
      "offset": [
        786,
        803
      ],
      "op": "CALLDATASIZE",
      "path": "35"
    },
    "2943": {
      "fn": "Strings.toString",
      "offset": [
        786,
        803
      ],
      "op": "DUP4",
      "path": "35"
    },
    "2944": {
      "fn": "Strings.toString",
      "offset": [
        786,
        803
      ],
      "op": "CALLDATACOPY",
      "path": "35"
    },
    "2945": {
      "fn": "Strings.toString",
      "offset": [
        786,
        803
      ],
      "op": "ADD",
      "path": "35"
    },
    "2946": {
      "fn": "Strings.toString",
      "offset": [
        786,
        803
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "2947": {
      "op": "POP"
    },
    "2948": {
      "fn": "Strings.toString",
      "offset": [
        786,
        803
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "2949": {
      "fn": "Strings.toString",
      "offset": [
        786,
        803
      ],
      "op": "POP",
      "path": "35"
    },
    "2950": {
      "fn": "Strings.toString",
      "offset": [
        764,
        803
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "2951": {
      "fn": "Strings.toString",
      "offset": [
        764,
        803
      ],
      "op": "POP",
      "path": "35"
    },
    "2952": {
      "fn": "Strings.toString",
      "offset": [
        814,
        968
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "2953": {
      "fn": "Strings.toString",
      "offset": [
        821,
        831
      ],
      "op": "DUP5",
      "path": "35"
    },
    "2954": {
      "fn": "Strings.toString",
      "offset": [
        821,
        831
      ],
      "op": "ISZERO",
      "path": "35"
    },
    "2955": {
      "fn": "Strings.toString",
      "offset": [
        814,
        968
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x916"
    },
    "2958": {
      "fn": "Strings.toString",
      "offset": [
        814,
        968
      ],
      "op": "JUMPI",
      "path": "35"
    },
    "2959": {
      "fn": "Strings.toString",
      "offset": [
        848,
        859
      ],
      "op": "PUSH2",
      "path": "35",
      "statement": 42,
      "value": "0xB99"
    },
    "2962": {
      "fn": "Strings.toString",
      "offset": [
        858,
        859
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x1"
    },
    "2964": {
      "fn": "Strings.toString",
      "offset": [
        848,
        859
      ],
      "op": "DUP4",
      "path": "35"
    },
    "2965": {
      "fn": "Strings.toString",
      "offset": [
        848,
        859
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x1085"
    },
    "2968": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        848,
        859
      ],
      "op": "JUMP",
      "path": "35"
    },
    "2969": {
      "fn": "Strings.toString",
      "offset": [
        848,
        859
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "2970": {
      "fn": "Strings.toString",
      "offset": [
        848,
        859
      ],
      "op": "SWAP2",
      "path": "35"
    },
    "2971": {
      "op": "POP"
    },
    "2972": {
      "fn": "Strings.toString",
      "offset": [
        917,
        927
      ],
      "op": "PUSH2",
      "path": "35",
      "statement": 43,
      "value": "0xBA6"
    },
    "2975": {
      "fn": "Strings.toString",
      "offset": [
        925,
        927
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0xA"
    },
    "2977": {
      "fn": "Strings.toString",
      "offset": [
        917,
        922
      ],
      "op": "DUP7",
      "path": "35"
    },
    "2978": {
      "fn": "Strings.toString",
      "offset": [
        917,
        927
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x114B"
    },
    "2981": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        917,
        927
      ],
      "op": "JUMP",
      "path": "35"
    },
    "2982": {
      "fn": "Strings.toString",
      "offset": [
        917,
        927
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "2983": {
      "fn": "Strings.toString",
      "offset": [
        904,
        928
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0xBB1"
    },
    "2986": {
      "fn": "Strings.toString",
      "offset": [
        904,
        928
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "2987": {
      "fn": "Strings.toString",
      "offset": [
        904,
        906
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x30"
    },
    "2989": {
      "fn": "Strings.toString",
      "offset": [
        904,
        928
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x109C"
    },
    "2992": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        904,
        928
      ],
      "op": "JUMP",
      "path": "35"
    },
    "2993": {
      "fn": "Strings.toString",
      "offset": [
        904,
        928
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "2994": {
      "fn": "Strings.toString",
      "offset": [
        891,
        930
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0xF8"
    },
    "2996": {
      "fn": "Strings.toString",
      "offset": [
        891,
        930
      ],
      "op": "SHL",
      "path": "35"
    },
    "2997": {
      "fn": "Strings.toString",
      "offset": [
        874,
        880
      ],
      "op": "DUP2",
      "path": "35"
    },
    "2998": {
      "fn": "Strings.toString",
      "offset": [
        881,
        887
      ],
      "op": "DUP4",
      "path": "35"
    },
    "2999": {
      "fn": "Strings.toString",
      "offset": [
        874,
        888
      ],
      "op": "DUP2",
      "path": "35"
    },
    "3000": {
      "fn": "Strings.toString",
      "offset": [
        874,
        888
      ],
      "op": "MLOAD",
      "path": "35"
    },
    "3001": {
      "fn": "Strings.toString",
      "offset": [
        874,
        888
      ],
      "op": "DUP2",
      "path": "35"
    },
    "3002": {
      "fn": "Strings.toString",
      "offset": [
        874,
        888
      ],
      "op": "LT",
      "path": "35"
    },
    "3003": {
      "fn": "Strings.toString",
      "offset": [
        874,
        888
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0xBC6"
    },
    "3006": {
      "fn": "Strings.toString",
      "offset": [
        874,
        888
      ],
      "op": "JUMPI",
      "path": "35"
    },
    "3007": {
      "fn": "Strings.toString",
      "offset": [
        874,
        888
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0xBC6"
    },
    "3010": {
      "fn": "Strings.toString",
      "offset": [
        874,
        888
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x115F"
    },
    "3013": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        874,
        888
      ],
      "op": "JUMP",
      "path": "35"
    },
    "3014": {
      "fn": "Strings.toString",
      "offset": [
        874,
        888
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "3015": {
      "fn": "Strings.toString",
      "offset": [
        874,
        888
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x20"
    },
    "3017": {
      "fn": "Strings.toString",
      "offset": [
        874,
        888
      ],
      "op": "ADD",
      "path": "35"
    },
    "3018": {
      "fn": "Strings.toString",
      "offset": [
        874,
        888
      ],
      "op": "ADD",
      "path": "35"
    },
    "3019": {
      "fn": "Strings.toString",
      "offset": [
        874,
        930
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "3020": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3022": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3024": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "3026": {
      "op": "SHL"
    },
    "3027": {
      "op": "SUB"
    },
    "3028": {
      "fn": "Strings.toString",
      "offset": [
        874,
        930
      ],
      "op": "NOT",
      "path": "35"
    },
    "3029": {
      "fn": "Strings.toString",
      "offset": [
        874,
        930
      ],
      "op": "AND",
      "path": "35"
    },
    "3030": {
      "fn": "Strings.toString",
      "offset": [
        874,
        930
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "3031": {
      "fn": "Strings.toString",
      "offset": [
        874,
        930
      ],
      "op": "DUP2",
      "path": "35"
    },
    "3032": {
      "fn": "Strings.toString",
      "offset": [
        874,
        930
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x0"
    },
    "3034": {
      "fn": "Strings.toString",
      "offset": [
        874,
        930
      ],
      "op": "BYTE",
      "path": "35"
    },
    "3035": {
      "fn": "Strings.toString",
      "offset": [
        874,
        930
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "3036": {
      "fn": "Strings.toString",
      "offset": [
        874,
        930
      ],
      "op": "MSTORE8",
      "path": "35"
    },
    "3037": {
      "op": "POP"
    },
    "3038": {
      "fn": "Strings.toString",
      "offset": [
        945,
        956
      ],
      "op": "PUSH2",
      "path": "35",
      "statement": 44,
      "value": "0xBE8"
    },
    "3041": {
      "fn": "Strings.toString",
      "offset": [
        954,
        956
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0xA"
    },
    "3043": {
      "fn": "Strings.toString",
      "offset": [
        945,
        956
      ],
      "op": "DUP7",
      "path": "35"
    },
    "3044": {
      "fn": "Strings.toString",
      "offset": [
        945,
        956
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x1137"
    },
    "3047": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        945,
        956
      ],
      "op": "JUMP",
      "path": "35"
    },
    "3048": {
      "fn": "Strings.toString",
      "offset": [
        945,
        956
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "3049": {
      "fn": "Strings.toString",
      "offset": [
        945,
        956
      ],
      "op": "SWAP5",
      "path": "35"
    },
    "3050": {
      "fn": "Strings.toString",
      "offset": [
        945,
        956
      ],
      "op": "POP",
      "path": "35"
    },
    "3051": {
      "fn": "Strings.toString",
      "offset": [
        814,
        968
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0xB88"
    },
    "3054": {
      "fn": "Strings.toString",
      "offset": [
        814,
        968
      ],
      "op": "JUMP",
      "path": "35"
    },
    "3055": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11800,
        12643
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "3056": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11921,
        11925
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "3058": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3060": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3062": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3064": {
      "op": "SHL"
    },
    "3065": {
      "op": "SUB"
    },
    "3066": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11947,
        11960
      ],
      "op": "DUP5",
      "path": "27"
    },
    "3067": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11947,
        11960
      ],
      "op": "AND",
      "path": "27"
    },
    "3068": {
      "fn": "Address.isContract",
      "offset": [
        1110,
        1130
      ],
      "op": "EXTCODESIZE",
      "path": "33"
    },
    "3069": {
      "fn": "Address.isContract",
      "offset": [
        1149,
        1157
      ],
      "op": "ISZERO",
      "path": "33",
      "statement": 45
    },
    "3070": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11943,
        12636
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0xCF1"
    },
    "3073": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11943,
        12636
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "3074": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11983,
        12055
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "3076": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11983,
        12055
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "3077": {
      "op": "PUSH4",
      "value": "0xA85BD01"
    },
    "3082": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "3084": {
      "op": "SHL"
    },
    "3085": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11983,
        12055
      ],
      "op": "DUP2",
      "path": "27"
    },
    "3086": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11983,
        12055
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "3087": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3089": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3091": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3093": {
      "op": "SHL"
    },
    "3094": {
      "op": "SUB"
    },
    "3095": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11983,
        12019
      ],
      "op": "DUP6",
      "path": "27"
    },
    "3096": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11983,
        12019
      ],
      "op": "AND",
      "path": "27"
    },
    "3097": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11983,
        12019
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "3098": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11983,
        12019
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0x150B7A02"
    },
    "3103": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11983,
        12019
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "3104": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11983,
        12055
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0xC33"
    },
    "3107": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11983,
        12055
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "3108": {
      "fn": "Context._msgSender",
      "offset": [
        681,
        691
      ],
      "op": "CALLER",
      "path": "34"
    },
    "3109": {
      "fn": "Context._msgSender",
      "offset": [
        681,
        691
      ],
      "op": "SWAP1",
      "path": "34"
    },
    "3110": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12034,
        12038
      ],
      "op": "DUP10",
      "path": "27"
    },
    "3111": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12034,
        12038
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "3112": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12040,
        12047
      ],
      "op": "DUP9",
      "path": "27"
    },
    "3113": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12040,
        12047
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "3114": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12049,
        12054
      ],
      "op": "DUP9",
      "path": "27"
    },
    "3115": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12049,
        12054
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "3116": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11983,
        12055
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "3118": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11983,
        12055
      ],
      "op": "ADD",
      "path": "27"
    },
    "3119": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11983,
        12055
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1175"
    },
    "3122": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "i",
      "offset": [
        11983,
        12055
      ],
      "op": "JUMP",
      "path": "27"
    },
    "3123": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11983,
        12055
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "3124": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11983,
        12055
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "3126": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11983,
        12055
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "3128": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11983,
        12055
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "3129": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11983,
        12055
      ],
      "op": "DUP1",
      "path": "27"
    },
    "3130": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11983,
        12055
      ],
      "op": "DUP4",
      "path": "27"
    },
    "3131": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11983,
        12055
      ],
      "op": "SUB",
      "path": "27"
    },
    "3132": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11983,
        12055
      ],
      "op": "DUP2",
      "path": "27"
    },
    "3133": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11983,
        12055
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "3135": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11983,
        12055
      ],
      "op": "DUP8",
      "path": "27"
    },
    "3136": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11983,
        12055
      ],
      "op": "DUP1",
      "path": "27"
    },
    "3137": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11983,
        12055
      ],
      "op": "EXTCODESIZE",
      "path": "27"
    },
    "3138": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11983,
        12055
      ],
      "op": "ISZERO",
      "path": "27"
    },
    "3139": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11983,
        12055
      ],
      "op": "DUP1",
      "path": "27"
    },
    "3140": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11983,
        12055
      ],
      "op": "ISZERO",
      "path": "27"
    },
    "3141": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11983,
        12055
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0xC4D"
    },
    "3144": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11983,
        12055
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "3145": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11983,
        12055
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "3147": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11983,
        12055
      ],
      "op": "DUP1",
      "path": "27"
    },
    "3148": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11983,
        12055
      ],
      "op": "REVERT",
      "path": "27"
    },
    "3149": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11983,
        12055
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "3150": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11983,
        12055
      ],
      "op": "POP",
      "path": "27"
    },
    "3151": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11983,
        12055
      ],
      "op": "GAS",
      "path": "27"
    },
    "3152": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11983,
        12055
      ],
      "op": "CALL",
      "path": "27"
    },
    "3153": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11983,
        12055
      ],
      "op": "SWAP3",
      "path": "27"
    },
    "3154": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11983,
        12055
      ],
      "op": "POP",
      "path": "27"
    },
    "3155": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11983,
        12055
      ],
      "op": "POP",
      "path": "27"
    },
    "3156": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11983,
        12055
      ],
      "op": "POP",
      "path": "27"
    },
    "3157": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11983,
        12055
      ],
      "op": "DUP1",
      "path": "27"
    },
    "3158": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11983,
        12055
      ],
      "op": "ISZERO",
      "path": "27"
    },
    "3159": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11983,
        12055
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0xC7D"
    },
    "3162": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11983,
        12055
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "3163": {
      "op": "POP"
    },
    "3164": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11983,
        12055
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "3166": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11983,
        12055
      ],
      "op": "DUP1",
      "path": "27"
    },
    "3167": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11983,
        12055
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "3168": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11983,
        12055
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x1F"
    },
    "3170": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11983,
        12055
      ],
      "op": "RETURNDATASIZE",
      "path": "27"
    },
    "3171": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11983,
        12055
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "3172": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11983,
        12055
      ],
      "op": "DUP2",
      "path": "27"
    },
    "3173": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11983,
        12055
      ],
      "op": "ADD",
      "path": "27"
    },
    "3174": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3176": {
      "op": "NOT"
    },
    "3177": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11983,
        12055
      ],
      "op": "AND",
      "path": "27"
    },
    "3178": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11983,
        12055
      ],
      "op": "DUP3",
      "path": "27"
    },
    "3179": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11983,
        12055
      ],
      "op": "ADD",
      "path": "27"
    },
    "3180": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11983,
        12055
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "3181": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11983,
        12055
      ],
      "op": "SWAP3",
      "path": "27"
    },
    "3182": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11983,
        12055
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "3183": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11983,
        12055
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0xC7A"
    },
    "3186": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11983,
        12055
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "3187": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11983,
        12055
      ],
      "op": "DUP2",
      "path": "27"
    },
    "3188": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11983,
        12055
      ],
      "op": "ADD",
      "path": "27"
    },
    "3189": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11983,
        12055
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "3190": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11983,
        12055
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x11B2"
    },
    "3193": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "i",
      "offset": [
        11983,
        12055
      ],
      "op": "JUMP",
      "path": "27"
    },
    "3194": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11983,
        12055
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "3195": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11983,
        12055
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x1"
    },
    "3197": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11983,
        12055
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "3198": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11979,
        12581
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0xCD7"
    },
    "3201": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11979,
        12581
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "3202": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11979,
        12581
      ],
      "op": "RETURNDATASIZE",
      "path": "27"
    },
    "3203": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11979,
        12581
      ],
      "op": "DUP1",
      "path": "27"
    },
    "3204": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11979,
        12581
      ],
      "op": "DUP1",
      "path": "27"
    },
    "3205": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11979,
        12581
      ],
      "op": "ISZERO",
      "path": "27"
    },
    "3206": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11979,
        12581
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0xCAB"
    },
    "3209": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11979,
        12581
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "3210": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11979,
        12581
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "3212": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11979,
        12581
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "3213": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11979,
        12581
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "3214": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11979,
        12581
      ],
      "op": "POP",
      "path": "27"
    },
    "3215": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11979,
        12581
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x1F"
    },
    "3217": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11979,
        12581
      ],
      "op": "NOT",
      "path": "27"
    },
    "3218": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11979,
        12581
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x3F"
    },
    "3220": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11979,
        12581
      ],
      "op": "RETURNDATASIZE",
      "path": "27"
    },
    "3221": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11979,
        12581
      ],
      "op": "ADD",
      "path": "27"
    },
    "3222": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11979,
        12581
      ],
      "op": "AND",
      "path": "27"
    },
    "3223": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11979,
        12581
      ],
      "op": "DUP3",
      "path": "27"
    },
    "3224": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11979,
        12581
      ],
      "op": "ADD",
      "path": "27"
    },
    "3225": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11979,
        12581
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "3227": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11979,
        12581
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "3228": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11979,
        12581
      ],
      "op": "RETURNDATASIZE",
      "path": "27"
    },
    "3229": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11979,
        12581
      ],
      "op": "DUP3",
      "path": "27"
    },
    "3230": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11979,
        12581
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "3231": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11979,
        12581
      ],
      "op": "RETURNDATASIZE",
      "path": "27"
    },
    "3232": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11979,
        12581
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "3234": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11979,
        12581
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "3236": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11979,
        12581
      ],
      "op": "DUP5",
      "path": "27"
    },
    "3237": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11979,
        12581
      ],
      "op": "ADD",
      "path": "27"
    },
    "3238": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11979,
        12581
      ],
      "op": "RETURNDATACOPY",
      "path": "27"
    },
    "3239": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11979,
        12581
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0xCB0"
    },
    "3242": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11979,
        12581
      ],
      "op": "JUMP",
      "path": "27"
    },
    "3243": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11979,
        12581
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "3244": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11979,
        12581
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x60"
    },
    "3246": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11979,
        12581
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "3247": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11979,
        12581
      ],
      "op": "POP",
      "path": "27"
    },
    "3248": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11979,
        12581
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "3249": {
      "op": "POP"
    },
    "3250": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12229,
        12242
      ],
      "op": "DUP1",
      "path": "27"
    },
    "3251": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12229,
        12242
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "3252": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12225,
        12566
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0xCCF"
    },
    "3255": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12225,
        12566
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "3256": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12272,
        12332
      ],
      "op": "PUSH1",
      "path": "27",
      "statement": 46,
      "value": "0x40"
    },
    "3258": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12272,
        12332
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "3259": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3263": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3265": {
      "op": "SHL"
    },
    "3266": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12272,
        12332
      ],
      "op": "DUP2",
      "path": "27"
    },
    "3267": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12272,
        12332
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "3268": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12272,
        12332
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "3270": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12272,
        12332
      ],
      "op": "ADD",
      "path": "27"
    },
    "3271": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12272,
        12332
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x33B"
    },
    "3274": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12272,
        12332
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "3275": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12272,
        12332
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x10B4"
    },
    "3278": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "i",
      "offset": [
        12272,
        12332
      ],
      "op": "JUMP",
      "path": "27"
    },
    "3279": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12225,
        12566
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "3280": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12516,
        12522
      ],
      "op": "DUP1",
      "path": "27"
    },
    "3281": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12510,
        12523
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "3282": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12501,
        12507
      ],
      "op": "DUP2",
      "path": "27"
    },
    "3283": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12497,
        12499
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "3285": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12493,
        12508
      ],
      "op": "ADD",
      "path": "27"
    },
    "3286": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12486,
        12524
      ],
      "op": "REVERT",
      "path": "27"
    },
    "3287": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11979,
        12581
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "3288": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3290": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3292": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3294": {
      "op": "SHL"
    },
    "3295": {
      "op": "SUB"
    },
    "3296": {
      "op": "NOT"
    },
    "3297": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12106,
        12161
      ],
      "op": "AND",
      "path": "27",
      "statement": 47
    },
    "3298": {
      "op": "PUSH4",
      "value": "0xA85BD01"
    },
    "3303": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "3305": {
      "op": "SHL"
    },
    "3306": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12106,
        12161
      ],
      "op": "EQ",
      "path": "27"
    },
    "3307": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12106,
        12161
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "3308": {
      "op": "POP"
    },
    "3309": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12099,
        12161
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x916"
    },
    "3312": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12099,
        12161
      ],
      "op": "JUMP",
      "path": "27"
    },
    "3313": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11943,
        12636
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "3314": {
      "op": "POP"
    },
    "3315": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12620,
        12624
      ],
      "op": "PUSH1",
      "path": "27",
      "statement": 48,
      "value": "0x1"
    },
    "3317": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11800,
        12643
      ],
      "op": "SWAP5",
      "path": "27"
    },
    "3318": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11800,
        12643
      ],
      "op": "SWAP4",
      "path": "27"
    },
    "3319": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11800,
        12643
      ],
      "op": "POP",
      "path": "27"
    },
    "3320": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11800,
        12643
      ],
      "op": "POP",
      "path": "27"
    },
    "3321": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11800,
        12643
      ],
      "op": "POP",
      "path": "27"
    },
    "3322": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        11800,
        12643
      ],
      "op": "POP",
      "path": "27"
    },
    "3323": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "o",
      "offset": [
        11800,
        12643
      ],
      "op": "JUMP",
      "path": "27"
    },
    "3324": {
      "op": "JUMPDEST"
    },
    "3325": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3327": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3329": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3331": {
      "op": "SHL"
    },
    "3332": {
      "op": "SUB"
    },
    "3333": {
      "op": "NOT"
    },
    "3334": {
      "op": "DUP2"
    },
    "3335": {
      "op": "AND"
    },
    "3336": {
      "op": "DUP2"
    },
    "3337": {
      "op": "EQ"
    },
    "3338": {
      "op": "PUSH2",
      "value": "0xD12"
    },
    "3341": {
      "op": "JUMPI"
    },
    "3342": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3344": {
      "op": "DUP1"
    },
    "3345": {
      "op": "REVERT"
    },
    "3346": {
      "op": "JUMPDEST"
    },
    "3347": {
      "op": "POP"
    },
    "3348": {
      "jump": "o",
      "op": "JUMP"
    },
    "3349": {
      "op": "JUMPDEST"
    },
    "3350": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3352": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3354": {
      "op": "DUP3"
    },
    "3355": {
      "op": "DUP5"
    },
    "3356": {
      "op": "SUB"
    },
    "3357": {
      "op": "SLT"
    },
    "3358": {
      "op": "ISZERO"
    },
    "3359": {
      "op": "PUSH2",
      "value": "0xD27"
    },
    "3362": {
      "op": "JUMPI"
    },
    "3363": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3365": {
      "op": "DUP1"
    },
    "3366": {
      "op": "REVERT"
    },
    "3367": {
      "op": "JUMPDEST"
    },
    "3368": {
      "op": "DUP2"
    },
    "3369": {
      "op": "CALLDATALOAD"
    },
    "3370": {
      "op": "PUSH2",
      "value": "0x794"
    },
    "3373": {
      "op": "DUP2"
    },
    "3374": {
      "op": "PUSH2",
      "value": "0xCFC"
    },
    "3377": {
      "jump": "i",
      "op": "JUMP"
    },
    "3378": {
      "op": "JUMPDEST"
    },
    "3379": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3381": {
      "op": "JUMPDEST"
    },
    "3382": {
      "op": "DUP4"
    },
    "3383": {
      "op": "DUP2"
    },
    "3384": {
      "op": "LT"
    },
    "3385": {
      "op": "ISZERO"
    },
    "3386": {
      "op": "PUSH2",
      "value": "0xD4D"
    },
    "3389": {
      "op": "JUMPI"
    },
    "3390": {
      "op": "DUP2"
    },
    "3391": {
      "op": "DUP2"
    },
    "3392": {
      "op": "ADD"
    },
    "3393": {
      "op": "MLOAD"
    },
    "3394": {
      "op": "DUP4"
    },
    "3395": {
      "op": "DUP3"
    },
    "3396": {
      "op": "ADD"
    },
    "3397": {
      "op": "MSTORE"
    },
    "3398": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3400": {
      "op": "ADD"
    },
    "3401": {
      "op": "PUSH2",
      "value": "0xD35"
    },
    "3404": {
      "op": "JUMP"
    },
    "3405": {
      "op": "JUMPDEST"
    },
    "3406": {
      "op": "DUP4"
    },
    "3407": {
      "op": "DUP2"
    },
    "3408": {
      "op": "GT"
    },
    "3409": {
      "op": "ISZERO"
    },
    "3410": {
      "op": "PUSH2",
      "value": "0x6BD"
    },
    "3413": {
      "op": "JUMPI"
    },
    "3414": {
      "op": "POP"
    },
    "3415": {
      "op": "POP"
    },
    "3416": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3418": {
      "op": "SWAP2"
    },
    "3419": {
      "op": "ADD"
    },
    "3420": {
      "op": "MSTORE"
    },
    "3421": {
      "jump": "o",
      "op": "JUMP"
    },
    "3422": {
      "op": "JUMPDEST"
    },
    "3423": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3425": {
      "op": "DUP2"
    },
    "3426": {
      "op": "MLOAD"
    },
    "3427": {
      "op": "DUP1"
    },
    "3428": {
      "op": "DUP5"
    },
    "3429": {
      "op": "MSTORE"
    },
    "3430": {
      "op": "PUSH2",
      "value": "0xD76"
    },
    "3433": {
      "op": "DUP2"
    },
    "3434": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3436": {
      "op": "DUP7"
    },
    "3437": {
      "op": "ADD"
    },
    "3438": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3440": {
      "op": "DUP7"
    },
    "3441": {
      "op": "ADD"
    },
    "3442": {
      "op": "PUSH2",
      "value": "0xD32"
    },
    "3445": {
      "jump": "i",
      "op": "JUMP"
    },
    "3446": {
      "op": "JUMPDEST"
    },
    "3447": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3449": {
      "op": "ADD"
    },
    "3450": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3452": {
      "op": "NOT"
    },
    "3453": {
      "op": "AND"
    },
    "3454": {
      "op": "SWAP3"
    },
    "3455": {
      "op": "SWAP1"
    },
    "3456": {
      "op": "SWAP3"
    },
    "3457": {
      "op": "ADD"
    },
    "3458": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3460": {
      "op": "ADD"
    },
    "3461": {
      "op": "SWAP3"
    },
    "3462": {
      "op": "SWAP2"
    },
    "3463": {
      "op": "POP"
    },
    "3464": {
      "op": "POP"
    },
    "3465": {
      "jump": "o",
      "op": "JUMP"
    },
    "3466": {
      "op": "JUMPDEST"
    },
    "3467": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3469": {
      "op": "DUP2"
    },
    "3470": {
      "op": "MSTORE"
    },
    "3471": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3473": {
      "op": "PUSH2",
      "value": "0x794"
    },
    "3476": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3478": {
      "op": "DUP4"
    },
    "3479": {
      "op": "ADD"
    },
    "3480": {
      "op": "DUP5"
    },
    "3481": {
      "op": "PUSH2",
      "value": "0xD5E"
    },
    "3484": {
      "jump": "i",
      "op": "JUMP"
    },
    "3485": {
      "op": "JUMPDEST"
    },
    "3486": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3488": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3490": {
      "op": "DUP3"
    },
    "3491": {
      "op": "DUP5"
    },
    "3492": {
      "op": "SUB"
    },
    "3493": {
      "op": "SLT"
    },
    "3494": {
      "op": "ISZERO"
    },
    "3495": {
      "op": "PUSH2",
      "value": "0xDAF"
    },
    "3498": {
      "op": "JUMPI"
    },
    "3499": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3501": {
      "op": "DUP1"
    },
    "3502": {
      "op": "REVERT"
    },
    "3503": {
      "op": "JUMPDEST"
    },
    "3504": {
      "op": "POP"
    },
    "3505": {
      "op": "CALLDATALOAD"
    },
    "3506": {
      "op": "SWAP2"
    },
    "3507": {
      "op": "SWAP1"
    },
    "3508": {
      "op": "POP"
    },
    "3509": {
      "jump": "o",
      "op": "JUMP"
    },
    "3510": {
      "op": "JUMPDEST"
    },
    "3511": {
      "op": "DUP1"
    },
    "3512": {
      "op": "CALLDATALOAD"
    },
    "3513": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3515": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3517": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3519": {
      "op": "SHL"
    },
    "3520": {
      "op": "SUB"
    },
    "3521": {
      "op": "DUP2"
    },
    "3522": {
      "op": "AND"
    },
    "3523": {
      "op": "DUP2"
    },
    "3524": {
      "op": "EQ"
    },
    "3525": {
      "op": "PUSH2",
      "value": "0xDCD"
    },
    "3528": {
      "op": "JUMPI"
    },
    "3529": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3531": {
      "op": "DUP1"
    },
    "3532": {
      "op": "REVERT"
    },
    "3533": {
      "op": "JUMPDEST"
    },
    "3534": {
      "op": "SWAP2"
    },
    "3535": {
      "op": "SWAP1"
    },
    "3536": {
      "op": "POP"
    },
    "3537": {
      "jump": "o",
      "op": "JUMP"
    },
    "3538": {
      "op": "JUMPDEST"
    },
    "3539": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3541": {
      "op": "DUP1"
    },
    "3542": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3544": {
      "op": "DUP4"
    },
    "3545": {
      "op": "DUP6"
    },
    "3546": {
      "op": "SUB"
    },
    "3547": {
      "op": "SLT"
    },
    "3548": {
      "op": "ISZERO"
    },
    "3549": {
      "op": "PUSH2",
      "value": "0xDE5"
    },
    "3552": {
      "op": "JUMPI"
    },
    "3553": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3555": {
      "op": "DUP1"
    },
    "3556": {
      "op": "REVERT"
    },
    "3557": {
      "op": "JUMPDEST"
    },
    "3558": {
      "op": "PUSH2",
      "value": "0xDEE"
    },
    "3561": {
      "op": "DUP4"
    },
    "3562": {
      "op": "PUSH2",
      "value": "0xDB6"
    },
    "3565": {
      "jump": "i",
      "op": "JUMP"
    },
    "3566": {
      "op": "JUMPDEST"
    },
    "3567": {
      "op": "SWAP5"
    },
    "3568": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3570": {
      "op": "SWAP4"
    },
    "3571": {
      "op": "SWAP1"
    },
    "3572": {
      "op": "SWAP4"
    },
    "3573": {
      "op": "ADD"
    },
    "3574": {
      "op": "CALLDATALOAD"
    },
    "3575": {
      "op": "SWAP4"
    },
    "3576": {
      "op": "POP"
    },
    "3577": {
      "op": "POP"
    },
    "3578": {
      "op": "POP"
    },
    "3579": {
      "jump": "o",
      "op": "JUMP"
    },
    "3580": {
      "op": "JUMPDEST"
    },
    "3581": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3583": {
      "op": "DUP1"
    },
    "3584": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3586": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3588": {
      "op": "DUP5"
    },
    "3589": {
      "op": "DUP7"
    },
    "3590": {
      "op": "SUB"
    },
    "3591": {
      "op": "SLT"
    },
    "3592": {
      "op": "ISZERO"
    },
    "3593": {
      "op": "PUSH2",
      "value": "0xE11"
    },
    "3596": {
      "op": "JUMPI"
    },
    "3597": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3599": {
      "op": "DUP1"
    },
    "3600": {
      "op": "REVERT"
    },
    "3601": {
      "op": "JUMPDEST"
    },
    "3602": {
      "op": "PUSH2",
      "value": "0xE1A"
    },
    "3605": {
      "op": "DUP5"
    },
    "3606": {
      "op": "PUSH2",
      "value": "0xDB6"
    },
    "3609": {
      "jump": "i",
      "op": "JUMP"
    },
    "3610": {
      "op": "JUMPDEST"
    },
    "3611": {
      "op": "SWAP3"
    },
    "3612": {
      "op": "POP"
    },
    "3613": {
      "op": "PUSH2",
      "value": "0xE28"
    },
    "3616": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3618": {
      "op": "DUP6"
    },
    "3619": {
      "op": "ADD"
    },
    "3620": {
      "op": "PUSH2",
      "value": "0xDB6"
    },
    "3623": {
      "jump": "i",
      "op": "JUMP"
    },
    "3624": {
      "op": "JUMPDEST"
    },
    "3625": {
      "op": "SWAP2"
    },
    "3626": {
      "op": "POP"
    },
    "3627": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3629": {
      "op": "DUP5"
    },
    "3630": {
      "op": "ADD"
    },
    "3631": {
      "op": "CALLDATALOAD"
    },
    "3632": {
      "op": "SWAP1"
    },
    "3633": {
      "op": "POP"
    },
    "3634": {
      "op": "SWAP3"
    },
    "3635": {
      "op": "POP"
    },
    "3636": {
      "op": "SWAP3"
    },
    "3637": {
      "op": "POP"
    },
    "3638": {
      "op": "SWAP3"
    },
    "3639": {
      "jump": "o",
      "op": "JUMP"
    },
    "3640": {
      "op": "JUMPDEST"
    },
    "3641": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3643": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3645": {
      "op": "DUP3"
    },
    "3646": {
      "op": "DUP5"
    },
    "3647": {
      "op": "SUB"
    },
    "3648": {
      "op": "SLT"
    },
    "3649": {
      "op": "ISZERO"
    },
    "3650": {
      "op": "PUSH2",
      "value": "0xE4A"
    },
    "3653": {
      "op": "JUMPI"
    },
    "3654": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3656": {
      "op": "DUP1"
    },
    "3657": {
      "op": "REVERT"
    },
    "3658": {
      "op": "JUMPDEST"
    },
    "3659": {
      "op": "PUSH2",
      "value": "0x794"
    },
    "3662": {
      "op": "DUP3"
    },
    "3663": {
      "op": "PUSH2",
      "value": "0xDB6"
    },
    "3666": {
      "jump": "i",
      "op": "JUMP"
    },
    "3667": {
      "op": "JUMPDEST"
    },
    "3668": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3670": {
      "op": "DUP1"
    },
    "3671": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3673": {
      "op": "DUP4"
    },
    "3674": {
      "op": "DUP6"
    },
    "3675": {
      "op": "SUB"
    },
    "3676": {
      "op": "SLT"
    },
    "3677": {
      "op": "ISZERO"
    },
    "3678": {
      "op": "PUSH2",
      "value": "0xE66"
    },
    "3681": {
      "op": "JUMPI"
    },
    "3682": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3684": {
      "op": "DUP1"
    },
    "3685": {
      "op": "REVERT"
    },
    "3686": {
      "op": "JUMPDEST"
    },
    "3687": {
      "op": "PUSH2",
      "value": "0xE6F"
    },
    "3690": {
      "op": "DUP4"
    },
    "3691": {
      "op": "PUSH2",
      "value": "0xDB6"
    },
    "3694": {
      "jump": "i",
      "op": "JUMP"
    },
    "3695": {
      "op": "JUMPDEST"
    },
    "3696": {
      "op": "SWAP2"
    },
    "3697": {
      "op": "POP"
    },
    "3698": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3700": {
      "op": "DUP4"
    },
    "3701": {
      "op": "ADD"
    },
    "3702": {
      "op": "CALLDATALOAD"
    },
    "3703": {
      "op": "DUP1"
    },
    "3704": {
      "op": "ISZERO"
    },
    "3705": {
      "op": "ISZERO"
    },
    "3706": {
      "op": "DUP2"
    },
    "3707": {
      "op": "EQ"
    },
    "3708": {
      "op": "PUSH2",
      "value": "0xE84"
    },
    "3711": {
      "op": "JUMPI"
    },
    "3712": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3714": {
      "op": "DUP1"
    },
    "3715": {
      "op": "REVERT"
    },
    "3716": {
      "op": "JUMPDEST"
    },
    "3717": {
      "op": "DUP1"
    },
    "3718": {
      "op": "SWAP2"
    },
    "3719": {
      "op": "POP"
    },
    "3720": {
      "op": "POP"
    },
    "3721": {
      "op": "SWAP3"
    },
    "3722": {
      "op": "POP"
    },
    "3723": {
      "op": "SWAP3"
    },
    "3724": {
      "op": "SWAP1"
    },
    "3725": {
      "op": "POP"
    },
    "3726": {
      "jump": "o",
      "op": "JUMP"
    },
    "3727": {
      "op": "JUMPDEST"
    },
    "3728": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3733": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3735": {
      "op": "SHL"
    },
    "3736": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3738": {
      "op": "MSTORE"
    },
    "3739": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "3741": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3743": {
      "op": "MSTORE"
    },
    "3744": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3746": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3748": {
      "op": "REVERT"
    },
    "3749": {
      "op": "JUMPDEST"
    },
    "3750": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3752": {
      "op": "DUP1"
    },
    "3753": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3755": {
      "op": "DUP1"
    },
    "3756": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3758": {
      "op": "DUP6"
    },
    "3759": {
      "op": "DUP8"
    },
    "3760": {
      "op": "SUB"
    },
    "3761": {
      "op": "SLT"
    },
    "3762": {
      "op": "ISZERO"
    },
    "3763": {
      "op": "PUSH2",
      "value": "0xEBB"
    },
    "3766": {
      "op": "JUMPI"
    },
    "3767": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3769": {
      "op": "DUP1"
    },
    "3770": {
      "op": "REVERT"
    },
    "3771": {
      "op": "JUMPDEST"
    },
    "3772": {
      "op": "PUSH2",
      "value": "0xEC4"
    },
    "3775": {
      "op": "DUP6"
    },
    "3776": {
      "op": "PUSH2",
      "value": "0xDB6"
    },
    "3779": {
      "jump": "i",
      "op": "JUMP"
    },
    "3780": {
      "op": "JUMPDEST"
    },
    "3781": {
      "op": "SWAP4"
    },
    "3782": {
      "op": "POP"
    },
    "3783": {
      "op": "PUSH2",
      "value": "0xED2"
    },
    "3786": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3788": {
      "op": "DUP7"
    },
    "3789": {
      "op": "ADD"
    },
    "3790": {
      "op": "PUSH2",
      "value": "0xDB6"
    },
    "3793": {
      "jump": "i",
      "op": "JUMP"
    },
    "3794": {
      "op": "JUMPDEST"
    },
    "3795": {
      "op": "SWAP3"
    },
    "3796": {
      "op": "POP"
    },
    "3797": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3799": {
      "op": "DUP6"
    },
    "3800": {
      "op": "ADD"
    },
    "3801": {
      "op": "CALLDATALOAD"
    },
    "3802": {
      "op": "SWAP2"
    },
    "3803": {
      "op": "POP"
    },
    "3804": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3806": {
      "op": "DUP6"
    },
    "3807": {
      "op": "ADD"
    },
    "3808": {
      "op": "CALLDATALOAD"
    },
    "3809": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "3818": {
      "op": "DUP1"
    },
    "3819": {
      "op": "DUP3"
    },
    "3820": {
      "op": "GT"
    },
    "3821": {
      "op": "ISZERO"
    },
    "3822": {
      "op": "PUSH2",
      "value": "0xEF6"
    },
    "3825": {
      "op": "JUMPI"
    },
    "3826": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3828": {
      "op": "DUP1"
    },
    "3829": {
      "op": "REVERT"
    },
    "3830": {
      "op": "JUMPDEST"
    },
    "3831": {
      "op": "DUP2"
    },
    "3832": {
      "op": "DUP8"
    },
    "3833": {
      "op": "ADD"
    },
    "3834": {
      "op": "SWAP2"
    },
    "3835": {
      "op": "POP"
    },
    "3836": {
      "op": "DUP8"
    },
    "3837": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3839": {
      "op": "DUP4"
    },
    "3840": {
      "op": "ADD"
    },
    "3841": {
      "op": "SLT"
    },
    "3842": {
      "op": "PUSH2",
      "value": "0xF0A"
    },
    "3845": {
      "op": "JUMPI"
    },
    "3846": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3848": {
      "op": "DUP1"
    },
    "3849": {
      "op": "REVERT"
    },
    "3850": {
      "op": "JUMPDEST"
    },
    "3851": {
      "op": "DUP2"
    },
    "3852": {
      "op": "CALLDATALOAD"
    },
    "3853": {
      "op": "DUP2"
    },
    "3854": {
      "op": "DUP2"
    },
    "3855": {
      "op": "GT"
    },
    "3856": {
      "op": "ISZERO"
    },
    "3857": {
      "op": "PUSH2",
      "value": "0xF1C"
    },
    "3860": {
      "op": "JUMPI"
    },
    "3861": {
      "op": "PUSH2",
      "value": "0xF1C"
    },
    "3864": {
      "op": "PUSH2",
      "value": "0xE8F"
    },
    "3867": {
      "jump": "i",
      "op": "JUMP"
    },
    "3868": {
      "op": "JUMPDEST"
    },
    "3869": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3871": {
      "op": "MLOAD"
    },
    "3872": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3874": {
      "op": "DUP3"
    },
    "3875": {
      "op": "ADD"
    },
    "3876": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3878": {
      "op": "NOT"
    },
    "3879": {
      "op": "SWAP1"
    },
    "3880": {
      "op": "DUP2"
    },
    "3881": {
      "op": "AND"
    },
    "3882": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "3884": {
      "op": "ADD"
    },
    "3885": {
      "op": "AND"
    },
    "3886": {
      "op": "DUP2"
    },
    "3887": {
      "op": "ADD"
    },
    "3888": {
      "op": "SWAP1"
    },
    "3889": {
      "op": "DUP4"
    },
    "3890": {
      "op": "DUP3"
    },
    "3891": {
      "op": "GT"
    },
    "3892": {
      "op": "DUP2"
    },
    "3893": {
      "op": "DUP4"
    },
    "3894": {
      "op": "LT"
    },
    "3895": {
      "op": "OR"
    },
    "3896": {
      "op": "ISZERO"
    },
    "3897": {
      "op": "PUSH2",
      "value": "0xF44"
    },
    "3900": {
      "op": "JUMPI"
    },
    "3901": {
      "op": "PUSH2",
      "value": "0xF44"
    },
    "3904": {
      "op": "PUSH2",
      "value": "0xE8F"
    },
    "3907": {
      "jump": "i",
      "op": "JUMP"
    },
    "3908": {
      "op": "JUMPDEST"
    },
    "3909": {
      "op": "DUP2"
    },
    "3910": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3912": {
      "op": "MSTORE"
    },
    "3913": {
      "op": "DUP3"
    },
    "3914": {
      "op": "DUP2"
    },
    "3915": {
      "op": "MSTORE"
    },
    "3916": {
      "op": "DUP11"
    },
    "3917": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3919": {
      "op": "DUP5"
    },
    "3920": {
      "op": "DUP8"
    },
    "3921": {
      "op": "ADD"
    },
    "3922": {
      "op": "ADD"
    },
    "3923": {
      "op": "GT"
    },
    "3924": {
      "op": "ISZERO"
    },
    "3925": {
      "op": "PUSH2",
      "value": "0xF5D"
    },
    "3928": {
      "op": "JUMPI"
    },
    "3929": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3931": {
      "op": "DUP1"
    },
    "3932": {
      "op": "REVERT"
    },
    "3933": {
      "op": "JUMPDEST"
    },
    "3934": {
      "op": "DUP3"
    },
    "3935": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3937": {
      "op": "DUP7"
    },
    "3938": {
      "op": "ADD"
    },
    "3939": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3941": {
      "op": "DUP4"
    },
    "3942": {
      "op": "ADD"
    },
    "3943": {
      "op": "CALLDATACOPY"
    },
    "3944": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3946": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3948": {
      "op": "DUP5"
    },
    "3949": {
      "op": "DUP4"
    },
    "3950": {
      "op": "ADD"
    },
    "3951": {
      "op": "ADD"
    },
    "3952": {
      "op": "MSTORE"
    },
    "3953": {
      "op": "DUP1"
    },
    "3954": {
      "op": "SWAP6"
    },
    "3955": {
      "op": "POP"
    },
    "3956": {
      "op": "POP"
    },
    "3957": {
      "op": "POP"
    },
    "3958": {
      "op": "POP"
    },
    "3959": {
      "op": "POP"
    },
    "3960": {
      "op": "POP"
    },
    "3961": {
      "op": "SWAP3"
    },
    "3962": {
      "op": "SWAP6"
    },
    "3963": {
      "op": "SWAP2"
    },
    "3964": {
      "op": "SWAP5"
    },
    "3965": {
      "op": "POP"
    },
    "3966": {
      "op": "SWAP3"
    },
    "3967": {
      "op": "POP"
    },
    "3968": {
      "jump": "o",
      "op": "JUMP"
    },
    "3969": {
      "op": "JUMPDEST"
    },
    "3970": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3972": {
      "op": "DUP1"
    },
    "3973": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3975": {
      "op": "DUP4"
    },
    "3976": {
      "op": "DUP6"
    },
    "3977": {
      "op": "SUB"
    },
    "3978": {
      "op": "SLT"
    },
    "3979": {
      "op": "ISZERO"
    },
    "3980": {
      "op": "PUSH2",
      "value": "0xF94"
    },
    "3983": {
      "op": "JUMPI"
    },
    "3984": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3986": {
      "op": "DUP1"
    },
    "3987": {
      "op": "REVERT"
    },
    "3988": {
      "op": "JUMPDEST"
    },
    "3989": {
      "op": "PUSH2",
      "value": "0xF9D"
    },
    "3992": {
      "op": "DUP4"
    },
    "3993": {
      "op": "PUSH2",
      "value": "0xDB6"
    },
    "3996": {
      "jump": "i",
      "op": "JUMP"
    },
    "3997": {
      "op": "JUMPDEST"
    },
    "3998": {
      "op": "SWAP2"
    },
    "3999": {
      "op": "POP"
    },
    "4000": {
      "op": "PUSH2",
      "value": "0xFAB"
    },
    "4003": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4005": {
      "op": "DUP5"
    },
    "4006": {
      "op": "ADD"
    },
    "4007": {
      "op": "PUSH2",
      "value": "0xDB6"
    },
    "4010": {
      "jump": "i",
      "op": "JUMP"
    },
    "4011": {
      "op": "JUMPDEST"
    },
    "4012": {
      "op": "SWAP1"
    },
    "4013": {
      "op": "POP"
    },
    "4014": {
      "op": "SWAP3"
    },
    "4015": {
      "op": "POP"
    },
    "4016": {
      "op": "SWAP3"
    },
    "4017": {
      "op": "SWAP1"
    },
    "4018": {
      "op": "POP"
    },
    "4019": {
      "jump": "o",
      "op": "JUMP"
    },
    "4020": {
      "op": "JUMPDEST"
    },
    "4021": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4023": {
      "op": "DUP2"
    },
    "4024": {
      "op": "DUP2"
    },
    "4025": {
      "op": "SHR"
    },
    "4026": {
      "op": "SWAP1"
    },
    "4027": {
      "op": "DUP3"
    },
    "4028": {
      "op": "AND"
    },
    "4029": {
      "op": "DUP1"
    },
    "4030": {
      "op": "PUSH2",
      "value": "0xFC8"
    },
    "4033": {
      "op": "JUMPI"
    },
    "4034": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "4036": {
      "op": "DUP3"
    },
    "4037": {
      "op": "AND"
    },
    "4038": {
      "op": "SWAP2"
    },
    "4039": {
      "op": "POP"
    },
    "4040": {
      "op": "JUMPDEST"
    },
    "4041": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4043": {
      "op": "DUP3"
    },
    "4044": {
      "op": "LT"
    },
    "4045": {
      "op": "DUP2"
    },
    "4046": {
      "op": "EQ"
    },
    "4047": {
      "op": "ISZERO"
    },
    "4048": {
      "op": "PUSH2",
      "value": "0xFE9"
    },
    "4051": {
      "op": "JUMPI"
    },
    "4052": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4057": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4059": {
      "op": "SHL"
    },
    "4060": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4062": {
      "op": "MSTORE"
    },
    "4063": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "4065": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4067": {
      "op": "MSTORE"
    },
    "4068": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4070": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4072": {
      "op": "REVERT"
    },
    "4073": {
      "op": "JUMPDEST"
    },
    "4074": {
      "op": "POP"
    },
    "4075": {
      "op": "SWAP2"
    },
    "4076": {
      "op": "SWAP1"
    },
    "4077": {
      "op": "POP"
    },
    "4078": {
      "jump": "o",
      "op": "JUMP"
    },
    "4079": {
      "op": "JUMPDEST"
    },
    "4080": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4082": {
      "op": "DUP1"
    },
    "4083": {
      "op": "DUP3"
    },
    "4084": {
      "op": "MSTORE"
    },
    "4085": {
      "op": "PUSH1",
      "value": "0x31"
    },
    "4087": {
      "op": "SWAP1"
    },
    "4088": {
      "op": "DUP3"
    },
    "4089": {
      "op": "ADD"
    },
    "4090": {
      "op": "MSTORE"
    },
    "4091": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E736665722063616C6C6572206973206E6F74206F"
    },
    "4124": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4126": {
      "op": "DUP3"
    },
    "4127": {
      "op": "ADD"
    },
    "4128": {
      "op": "MSTORE"
    },
    "4129": {
      "op": "PUSH17",
      "value": "0x1DDB995C881B9BDC88185C1C1C9BDD9959"
    },
    "4147": {
      "op": "PUSH1",
      "value": "0x7A"
    },
    "4149": {
      "op": "SHL"
    },
    "4150": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4152": {
      "op": "DUP3"
    },
    "4153": {
      "op": "ADD"
    },
    "4154": {
      "op": "MSTORE"
    },
    "4155": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4157": {
      "op": "ADD"
    },
    "4158": {
      "op": "SWAP1"
    },
    "4159": {
      "jump": "o",
      "op": "JUMP"
    },
    "4160": {
      "op": "JUMPDEST"
    },
    "4161": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4163": {
      "op": "DUP4"
    },
    "4164": {
      "op": "MLOAD"
    },
    "4165": {
      "op": "PUSH2",
      "value": "0x1052"
    },
    "4168": {
      "op": "DUP2"
    },
    "4169": {
      "op": "DUP5"
    },
    "4170": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4172": {
      "op": "DUP9"
    },
    "4173": {
      "op": "ADD"
    },
    "4174": {
      "op": "PUSH2",
      "value": "0xD32"
    },
    "4177": {
      "jump": "i",
      "op": "JUMP"
    },
    "4178": {
      "op": "JUMPDEST"
    },
    "4179": {
      "op": "DUP4"
    },
    "4180": {
      "op": "MLOAD"
    },
    "4181": {
      "op": "SWAP1"
    },
    "4182": {
      "op": "DUP4"
    },
    "4183": {
      "op": "ADD"
    },
    "4184": {
      "op": "SWAP1"
    },
    "4185": {
      "op": "PUSH2",
      "value": "0x1066"
    },
    "4188": {
      "op": "DUP2"
    },
    "4189": {
      "op": "DUP4"
    },
    "4190": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4192": {
      "op": "DUP9"
    },
    "4193": {
      "op": "ADD"
    },
    "4194": {
      "op": "PUSH2",
      "value": "0xD32"
    },
    "4197": {
      "jump": "i",
      "op": "JUMP"
    },
    "4198": {
      "op": "JUMPDEST"
    },
    "4199": {
      "op": "ADD"
    },
    "4200": {
      "op": "SWAP5"
    },
    "4201": {
      "op": "SWAP4"
    },
    "4202": {
      "op": "POP"
    },
    "4203": {
      "op": "POP"
    },
    "4204": {
      "op": "POP"
    },
    "4205": {
      "op": "POP"
    },
    "4206": {
      "jump": "o",
      "op": "JUMP"
    },
    "4207": {
      "op": "JUMPDEST"
    },
    "4208": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4213": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4215": {
      "op": "SHL"
    },
    "4216": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4218": {
      "op": "MSTORE"
    },
    "4219": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "4221": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4223": {
      "op": "MSTORE"
    },
    "4224": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4226": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4228": {
      "op": "REVERT"
    },
    "4229": {
      "op": "JUMPDEST"
    },
    "4230": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4232": {
      "op": "DUP3"
    },
    "4233": {
      "op": "DUP3"
    },
    "4234": {
      "op": "LT"
    },
    "4235": {
      "op": "ISZERO"
    },
    "4236": {
      "op": "PUSH2",
      "value": "0x1097"
    },
    "4239": {
      "op": "JUMPI"
    },
    "4240": {
      "op": "PUSH2",
      "value": "0x1097"
    },
    "4243": {
      "op": "PUSH2",
      "value": "0x106F"
    },
    "4246": {
      "jump": "i",
      "op": "JUMP"
    },
    "4247": {
      "op": "JUMPDEST"
    },
    "4248": {
      "op": "POP"
    },
    "4249": {
      "op": "SUB"
    },
    "4250": {
      "op": "SWAP1"
    },
    "4251": {
      "jump": "o",
      "op": "JUMP"
    },
    "4252": {
      "op": "JUMPDEST"
    },
    "4253": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4255": {
      "op": "DUP3"
    },
    "4256": {
      "op": "NOT"
    },
    "4257": {
      "op": "DUP3"
    },
    "4258": {
      "op": "GT"
    },
    "4259": {
      "op": "ISZERO"
    },
    "4260": {
      "op": "PUSH2",
      "value": "0x10AF"
    },
    "4263": {
      "op": "JUMPI"
    },
    "4264": {
      "op": "PUSH2",
      "value": "0x10AF"
    },
    "4267": {
      "op": "PUSH2",
      "value": "0x106F"
    },
    "4270": {
      "jump": "i",
      "op": "JUMP"
    },
    "4271": {
      "op": "JUMPDEST"
    },
    "4272": {
      "op": "POP"
    },
    "4273": {
      "op": "ADD"
    },
    "4274": {
      "op": "SWAP1"
    },
    "4275": {
      "jump": "o",
      "op": "JUMP"
    },
    "4276": {
      "op": "JUMPDEST"
    },
    "4277": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4279": {
      "op": "DUP1"
    },
    "4280": {
      "op": "DUP3"
    },
    "4281": {
      "op": "MSTORE"
    },
    "4282": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "4284": {
      "op": "SWAP1"
    },
    "4285": {
      "op": "DUP3"
    },
    "4286": {
      "op": "ADD"
    },
    "4287": {
      "op": "MSTORE"
    },
    "4288": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265"
    },
    "4321": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4323": {
      "op": "DUP3"
    },
    "4324": {
      "op": "ADD"
    },
    "4325": {
      "op": "MSTORE"
    },
    "4326": {
      "op": "PUSH18",
      "value": "0x31B2B4BB32B91034B6B83632B6B2B73A32B9"
    },
    "4345": {
      "op": "PUSH1",
      "value": "0x71"
    },
    "4347": {
      "op": "SHL"
    },
    "4348": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4350": {
      "op": "DUP3"
    },
    "4351": {
      "op": "ADD"
    },
    "4352": {
      "op": "MSTORE"
    },
    "4353": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4355": {
      "op": "ADD"
    },
    "4356": {
      "op": "SWAP1"
    },
    "4357": {
      "jump": "o",
      "op": "JUMP"
    },
    "4358": {
      "op": "JUMPDEST"
    },
    "4359": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4361": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4363": {
      "op": "NOT"
    },
    "4364": {
      "op": "DUP3"
    },
    "4365": {
      "op": "EQ"
    },
    "4366": {
      "op": "ISZERO"
    },
    "4367": {
      "op": "PUSH2",
      "value": "0x111A"
    },
    "4370": {
      "op": "JUMPI"
    },
    "4371": {
      "op": "PUSH2",
      "value": "0x111A"
    },
    "4374": {
      "op": "PUSH2",
      "value": "0x106F"
    },
    "4377": {
      "jump": "i",
      "op": "JUMP"
    },
    "4378": {
      "op": "JUMPDEST"
    },
    "4379": {
      "op": "POP"
    },
    "4380": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4382": {
      "op": "ADD"
    },
    "4383": {
      "op": "SWAP1"
    },
    "4384": {
      "jump": "o",
      "op": "JUMP"
    },
    "4385": {
      "op": "JUMPDEST"
    },
    "4386": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4391": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4393": {
      "op": "SHL"
    },
    "4394": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4396": {
      "op": "MSTORE"
    },
    "4397": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "4399": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4401": {
      "op": "MSTORE"
    },
    "4402": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4404": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4406": {
      "op": "REVERT"
    },
    "4407": {
      "op": "JUMPDEST"
    },
    "4408": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4410": {
      "op": "DUP3"
    },
    "4411": {
      "op": "PUSH2",
      "value": "0x1146"
    },
    "4414": {
      "op": "JUMPI"
    },
    "4415": {
      "op": "PUSH2",
      "value": "0x1146"
    },
    "4418": {
      "op": "PUSH2",
      "value": "0x1121"
    },
    "4421": {
      "jump": "i",
      "op": "JUMP"
    },
    "4422": {
      "op": "JUMPDEST"
    },
    "4423": {
      "op": "POP"
    },
    "4424": {
      "op": "DIV"
    },
    "4425": {
      "op": "SWAP1"
    },
    "4426": {
      "jump": "o",
      "op": "JUMP"
    },
    "4427": {
      "op": "JUMPDEST"
    },
    "4428": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4430": {
      "op": "DUP3"
    },
    "4431": {
      "op": "PUSH2",
      "value": "0x115A"
    },
    "4434": {
      "op": "JUMPI"
    },
    "4435": {
      "op": "PUSH2",
      "value": "0x115A"
    },
    "4438": {
      "op": "PUSH2",
      "value": "0x1121"
    },
    "4441": {
      "jump": "i",
      "op": "JUMP"
    },
    "4442": {
      "op": "JUMPDEST"
    },
    "4443": {
      "op": "POP"
    },
    "4444": {
      "op": "MOD"
    },
    "4445": {
      "op": "SWAP1"
    },
    "4446": {
      "jump": "o",
      "op": "JUMP"
    },
    "4447": {
      "op": "JUMPDEST"
    },
    "4448": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4453": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4455": {
      "op": "SHL"
    },
    "4456": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4458": {
      "op": "MSTORE"
    },
    "4459": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "4461": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4463": {
      "op": "MSTORE"
    },
    "4464": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4466": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4468": {
      "op": "REVERT"
    },
    "4469": {
      "op": "JUMPDEST"
    },
    "4470": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4472": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4474": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4476": {
      "op": "SHL"
    },
    "4477": {
      "op": "SUB"
    },
    "4478": {
      "op": "DUP6"
    },
    "4479": {
      "op": "DUP2"
    },
    "4480": {
      "op": "AND"
    },
    "4481": {
      "op": "DUP3"
    },
    "4482": {
      "op": "MSTORE"
    },
    "4483": {
      "op": "DUP5"
    },
    "4484": {
      "op": "AND"
    },
    "4485": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4487": {
      "op": "DUP3"
    },
    "4488": {
      "op": "ADD"
    },
    "4489": {
      "op": "MSTORE"
    },
    "4490": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4492": {
      "op": "DUP2"
    },
    "4493": {
      "op": "ADD"
    },
    "4494": {
      "op": "DUP4"
    },
    "4495": {
      "op": "SWAP1"
    },
    "4496": {
      "op": "MSTORE"
    },
    "4497": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4499": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4501": {
      "op": "DUP3"
    },
    "4502": {
      "op": "ADD"
    },
    "4503": {
      "op": "DUP2"
    },
    "4504": {
      "op": "SWAP1"
    },
    "4505": {
      "op": "MSTORE"
    },
    "4506": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4508": {
      "op": "SWAP1"
    },
    "4509": {
      "op": "PUSH2",
      "value": "0x11A8"
    },
    "4512": {
      "op": "SWAP1"
    },
    "4513": {
      "op": "DUP4"
    },
    "4514": {
      "op": "ADD"
    },
    "4515": {
      "op": "DUP5"
    },
    "4516": {
      "op": "PUSH2",
      "value": "0xD5E"
    },
    "4519": {
      "jump": "i",
      "op": "JUMP"
    },
    "4520": {
      "op": "JUMPDEST"
    },
    "4521": {
      "op": "SWAP7"
    },
    "4522": {
      "op": "SWAP6"
    },
    "4523": {
      "op": "POP"
    },
    "4524": {
      "op": "POP"
    },
    "4525": {
      "op": "POP"
    },
    "4526": {
      "op": "POP"
    },
    "4527": {
      "op": "POP"
    },
    "4528": {
      "op": "POP"
    },
    "4529": {
      "jump": "o",
      "op": "JUMP"
    },
    "4530": {
      "op": "JUMPDEST"
    },
    "4531": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4533": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4535": {
      "op": "DUP3"
    },
    "4536": {
      "op": "DUP5"
    },
    "4537": {
      "op": "SUB"
    },
    "4538": {
      "op": "SLT"
    },
    "4539": {
      "op": "ISZERO"
    },
    "4540": {
      "op": "PUSH2",
      "value": "0x11C4"
    },
    "4543": {
      "op": "JUMPI"
    },
    "4544": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4546": {
      "op": "DUP1"
    },
    "4547": {
      "op": "REVERT"
    },
    "4548": {
      "op": "JUMPDEST"
    },
    "4549": {
      "op": "DUP2"
    },
    "4550": {
      "op": "MLOAD"
    },
    "4551": {
      "op": "PUSH2",
      "value": "0x794"
    },
    "4554": {
      "op": "DUP2"
    },
    "4555": {
      "op": "PUSH2",
      "value": "0xCFC"
    },
    "4558": {
      "jump": "i",
      "op": "JUMP"
    }
  },
  "sha1": "2ef99f377a60dab94be744350d80223746d48b2e",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"./IERC721.sol\";\nimport \"./IERC721Receiver.sol\";\nimport \"./extensions/IERC721Metadata.sol\";\nimport \"../../utils/Address.sol\";\nimport \"../../utils/Context.sol\";\nimport \"../../utils/Strings.sol\";\nimport \"../../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\ncontract ERC721 is Context, ERC165, IERC721, IERC721Metadata {\n    using Address for address;\n    using Strings for uint256;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    // Mapping from token ID to owner address\n    mapping (uint256 => address) private _owners;\n\n    // Mapping owner address to token count\n    mapping (address => uint256) private _balances;\n\n    // Mapping from token ID to approved address\n    mapping (uint256 => address) private _tokenApprovals;\n\n    // Mapping from owner to operator approvals\n    mapping (address => mapping (address => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor (string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return interfaceId == type(IERC721).interfaceId\n            || interfaceId == type(IERC721Metadata).interfaceId\n            || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner) public view virtual override returns (uint256) {\n        require(owner != address(0), \"ERC721: balance query for the zero address\");\n        return _balances[owner];\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\n        address owner = _owners[tokenId];\n        require(owner != address(0), \"ERC721: owner query for nonexistent token\");\n        return owner;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        require(_exists(tokenId), \"ERC721Metadata: URI query for nonexistent token\");\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0\n            ? string(abi.encodePacked(baseURI, tokenId.toString()))\n            : '';\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. Empty by default, can be overriden\n     * in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public virtual override {\n        address owner = ERC721.ownerOf(tokenId);\n        require(to != owner, \"ERC721: approval to current owner\");\n\n        require(_msgSender() == owner || isApprovedForAll(owner, _msgSender()),\n            \"ERC721: approve caller is not owner nor approved for all\"\n        );\n\n        _approve(to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\n        require(_exists(tokenId), \"ERC721: approved query for nonexistent token\");\n\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual override {\n        require(operator != _msgSender(), \"ERC721: approve to caller\");\n\n        _operatorApprovals[_msgSender()][operator] = approved;\n        emit ApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) public virtual override {\n        //solhint-disable-next-line max-line-length\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: transfer caller is not owner nor approved\");\n\n        _transfer(from, to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) public virtual override {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory _data) public virtual override {\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: transfer caller is not owner nor approved\");\n        _safeTransfer(from, to, tokenId, _data);\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * `_data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory _data) internal virtual {\n        _transfer(from, to, tokenId);\n        require(_checkOnERC721Received(from, to, tokenId, _data), \"ERC721: transfer to non ERC721Receiver implementer\");\n    }\n\n    /**\n     * @dev Returns whether `tokenId` exists.\n     *\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n     *\n     * Tokens start existing when they are minted (`_mint`),\n     * and stop existing when they are burned (`_burn`).\n     */\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\n        return _owners[tokenId] != address(0);\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `tokenId`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {\n        require(_exists(tokenId), \"ERC721: operator query for nonexistent token\");\n        address owner = ERC721.ownerOf(tokenId);\n        return (spender == owner || getApproved(tokenId) == spender || isApprovedForAll(owner, spender));\n    }\n\n    /**\n     * @dev Safely mints `tokenId` and transfers it to `to`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal virtual {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(address to, uint256 tokenId, bytes memory _data) internal virtual {\n        _mint(to, tokenId);\n        require(_checkOnERC721Received(address(0), to, tokenId, _data), \"ERC721: transfer to non ERC721Receiver implementer\");\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal virtual {\n        require(to != address(0), \"ERC721: mint to the zero address\");\n        require(!_exists(tokenId), \"ERC721: token already minted\");\n\n        _beforeTokenTransfer(address(0), to, tokenId);\n\n        _balances[to] += 1;\n        _owners[tokenId] = to;\n\n        emit Transfer(address(0), to, tokenId);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal virtual {\n        address owner = ERC721.ownerOf(tokenId);\n\n        _beforeTokenTransfer(owner, address(0), tokenId);\n\n        // Clear approvals\n        _approve(address(0), tokenId);\n\n        _balances[owner] -= 1;\n        delete _owners[tokenId];\n\n        emit Transfer(owner, address(0), tokenId);\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(address from, address to, uint256 tokenId) internal virtual {\n        require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer of token that is not own\");\n        require(to != address(0), \"ERC721: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, tokenId);\n\n        // Clear approvals from the previous owner\n        _approve(address(0), tokenId);\n\n        _balances[from] -= 1;\n        _balances[to] += 1;\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * Emits a {Approval} event.\n     */\n    function _approve(address to, uint256 tokenId) internal virtual {\n        _tokenApprovals[tokenId] = to;\n        emit Approval(ERC721.ownerOf(tokenId), to, tokenId);\n    }\n\n    /**\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n     * The call is not executed if the target address is not a contract.\n     *\n     * @param from address representing the previous owner of the given token ID\n     * @param to target address that will receive the tokens\n     * @param tokenId uint256 ID of the token to be transferred\n     * @param _data bytes optional data to send along with the call\n     * @return bool whether the call correctly returned the expected magic value\n     */\n    function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory _data)\n        private returns (bool)\n    {\n        if (to.isContract()) {\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data) returns (bytes4 retval) {\n                return retval == IERC721Receiver(to).onERC721Received.selector;\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    revert(\"ERC721: transfer to non ERC721Receiver implementer\");\n                } else {\n                    // solhint-disable-next-line no-inline-assembly\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        } else {\n            return true;\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any token transfer. This includes minting\n     * and burning.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\n     * transferred to `to`.\n     * - When `from` is zero, `tokenId` will be minted for `to`.\n     * - When `to` is zero, ``from``'s `tokenId` will be burned.\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(address from, address to, uint256 tokenId) internal virtual { }\n}\n",
  "sourceMap": "571:12781:27:-:0;;;1363:117;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1431:13;;;;:5;;:13;;;;;:::i;:::-;-1:-1:-1;1455:17:27;;;;:7;;:17;;;;;:::i;:::-;;1363:117;;571:12781;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;571:12781:27;;;-1:-1:-1;571:12781:27;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:127:39;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:885;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:39;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:39;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;930:2;927:1;924:9;921:80;;;989:1;984:2;979;971:6;967:15;963:24;956:35;921:80;1019:6;146:885;-1:-1:-1;;;;;;146:885:39:o;1036:562::-;1135:6;1143;1196:2;1184:9;1175:7;1171:23;1167:32;1164:52;;;1212:1;1209;1202:12;1164:52;1239:16;;-1:-1:-1;;;;;1304:14:39;;;1301:34;;;1331:1;1328;1321:12;1301:34;1354:61;1407:7;1398:6;1387:9;1383:22;1354:61;:::i;:::-;1344:71;;1461:2;1450:9;1446:18;1440:25;1424:41;;1490:2;1480:8;1477:16;1474:36;;;1506:1;1503;1496:12;1474:36;;1529:63;1584:7;1573:8;1562:9;1558:24;1529:63;:::i;:::-;1519:73;;;1036:562;;;;;:::o;1603:380::-;1682:1;1678:12;;;;1725;;;1746:61;;1800:4;1792:6;1788:17;1778:27;;1746:61;1853:2;1845:6;1842:14;1822:18;1819:38;1816:161;;;1899:10;1894:3;1890:20;1887:1;1880:31;1934:4;1931:1;1924:15;1962:4;1959:1;1952:15;1816:161;;1603:380;;;:::o;:::-;571:12781:27;;;;;;",
  "sourcePath": "openzeppelin-solidity/contracts/token/ERC721/ERC721.sol",
  "type": "contract"
}